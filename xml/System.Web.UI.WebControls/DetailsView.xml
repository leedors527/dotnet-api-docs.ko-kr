<Type Name="DetailsView" FullName="System.Web.UI.WebControls.DetailsView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16ba5ede22ab4b6fa2b1d23ac2f4675aa3ed02cf" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57937280" /></Metadata><TypeSignature Language="C#" Value="public class DetailsView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DetailsView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.ICallbackContainer, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IFieldControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DetailsView" />
  <TypeSignature Language="VB.NET" Value="Public Class DetailsView&#xA;Inherits CompositeDataBoundControl&#xA;Implements ICallbackContainer, ICallbackEventHandler, IDataBoundItemControl, IDataItemContainer, IFieldControl, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DetailsView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::ICallbackContainer, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IFieldControl, System::Web::UI::WebControls::IPostBackContainer" />
  <TypeSignature Language="F#" Value="type DetailsView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface ICallbackContainer&#xA;    interface ICallbackEventHandler&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer&#xA;    interface IDataBoundItemControl&#xA;    interface IDataBoundControl&#xA;    interface IFieldControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICallbackContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IFieldControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:DetailsView runat="server" Width="125px" Height="50px"&gt;&lt;/{0}:DetailsView&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>테이블에 있는 데이터 소스의 단일 레코드 값을 표시합니다. 여기서 각 데이터 행은 레코드의 필드를 나타냅니다. <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤을 사용하면 레코드를 편집, 삭제 및 삽입할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용  
  
-   [소개](#introduction)  
  
-   [행 필드](#row_fields)  
  
-   [데이터 바인딩](#binding_to_data)  
  
-   [보안](#security)  
  
-   [데이터 작업](#data_operations)  
  
-   [사용자 인터페이스 사용자 지정](#customizing_the_user_interface)  
  
-   [이벤트](#events)  
  
-   [액세스 가능성](#Accessibility)  
  
-   [선언 구문](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>소개  
 <xref:System.Web.UI.WebControls.DetailsView> 테이블의 데이터 원본에서 단일 레코드를 표시 하는 레코드의 각 필드를 테이블의 행에 표시 되는 위치 하는 컨트롤을 사용 합니다. 와 함께에서 사용할 수는 <xref:System.Web.UI.WebControls.GridView> 마스터-세부 시나리오에 대 한 제어 합니다. <xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 다음 기능을 지원 합니다.  
  
-   와 같은 데이터 소스 컨트롤에 바인딩 <xref:System.Web.UI.WebControls.SqlDataSource>합니다.  
  
-   기본 제공 삽입 기능입니다.  
  
-   기본 제공 업데이트 및 삭제 기능입니다.  
  
-   기본 제공 페이징 기능입니다.  
  
-   에 대 한 프로그래밍 방식의 액세스를 <xref:System.Web.UI.WebControls.DetailsView> 개체 모델을 동적으로 속성을 설정 하 고, 이벤트를 처리 및, 등입니다.  
  
-   테마 및 스타일을 통해 모양을 사용자 지정할 수 있습니다.  
  
<a name="row_fields"></a>   
## <a name="row-fields"></a>행 필드  
 각 데이터 행에는 <xref:System.Web.UI.WebControls.DetailsView> 필드 컨트롤을 선언 하 여 컨트롤이 만들어집니다. 컨트롤의 행의 동작을 결정 하는 다른 행 필드 형식입니다. 필드 컨트롤에서 파생 <xref:System.Web.UI.WebControls.DataControlField>합니다. 다음 표에서 사용할 수 있는 다른 행 필드 유형을 나열 합니다.  
  
|열 필드 형식|설명|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundField>|데이터 원본에서 필드의 값을 텍스트로 표시합니다.|  
|<xref:System.Web.UI.WebControls.ButtonField>|명령 단추에 표시 된 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 이렇게 하면 추가 또는 제거 단추 등의 사용자 지정 단추 컨트롤을 사용 하 여 행을 표시할 수 있습니다.|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|확인란을 표시 합니다 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 이 행 필드 형식은 부울 값을 사용 하 여 필드를 표시 하려면 일반적으로 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.CommandField>|기본 제공 명령 표시 편집을 수행 하는 단추를 삽입 또는 삭제 작업에는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|하이퍼링크로 데이터 원본의 필드의 값을 표시합니다. 이 행 필드 형식을 사용 하면 두 번째 필드 하이퍼링크의 URL에 바인딩할 수 있습니다.|  
|<xref:System.Web.UI.WebControls.ImageField>|에 이미지를 표시 합니다 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.TemplateField>|행에 대 한 사용자 정의 콘텐츠 표시는 <xref:System.Web.UI.WebControls.DetailsView> 지정한 템플릿에 따라 제어 합니다. 이 행 필드 형식에는 사용자 지정 행 필드를 만들 수 있습니다.|  
  
 기본적으로 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 속성이 `true`, 데이터 원본에 바인딩할 수 있는 형식의 각 필드에 대 한 바인딩된 행 필드를 자동으로 생성 합니다. 올바른 바인딩 가능한 유형은 <xref:System.String>, <xref:System.DateTime>를 <xref:System.Decimal>, <xref:System.Guid>, 및 기본 형식 집합입니다. 각 필드 데이터 소스의 각 필드 표시 되는 순서 대로 텍스트로 행에 표시 됩니다.  
  
 자동으로 생성 되는 행 레코드의 모든 필드를 표시 하는 빠르고 쉬운 방법을 제공 합니다. 그러나 되도록 사용 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 고급 기능에 포함 시킬 행 필드를 명시적으로 선언 해야 합니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 행 필드를 선언 하려면 먼저 설정 합니다 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 속성을 `false`입니다. 다음으로 열기 및 닫기 추가 `<Fields>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 마지막으로 열고 닫는 간의 포함 시킬 행 필드를 나열 합니다. `<Fields>` 태그입니다. 지정 된 행 필드를 추가할는 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 순서 대로 나열 합니다. 합니다 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 컬렉션에 있는 행 필드를 프로그래밍 방식으로 관리할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
> [!NOTE]
>  자동으로 생성 된 행 필드에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 컬렉션입니다.  
  
> [!NOTE]
>  명시적으로 선언 된 행 필드를 자동으로 생성 된 행 필드와 함께에서 표시할 수 있습니다. 모두 사용 하는 명시적으로 선언 된 행 필드 뒤에 자동으로 생성 된 행 필드를 먼저 렌더링 됩니다.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>데이터 바인딩  
 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 데이터 소스 컨트롤을 바인딩할 수 있습니다 (같은 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 또는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤) 또는 구현 하는 데이터 원본 컬렉션에는 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스와 같은 <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, 또는 다른 컬렉션 형식입니다. 다음 방법 중 하나를 사용 하 여 바인딩할는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 적절 한 데이터 원본 형식:  
  
-   데이터 소스 컨트롤에 바인딩할 설정를 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 의 속성을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.Control.ID%2A> 데이터 소스 컨트롤의 값입니다. <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에 자동으로 지정 된 데이터 소스 컨트롤에 바인딩합니다. 이것은 데이터 바인딩할 기본 방법입니다.  
  
-   구현 하는 데이터 원본에 바인딩할를 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스를 프로그래밍 방식으로 설정 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 의 속성을 <xref:System.Web.UI.WebControls.DetailsView> 데이터 소스 컨트롤을 호출는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드.  
  
 데이터 바인딩에 대 한 자세한 내용은 참조 하세요. [데이터베이스를 바인딩할](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)합니다.  
  
<a name="security"></a>   
## <a name="security"></a>보안  
 악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요. 유효성 검사 서버 컨트롤이 사용자 입력을 평가 하기 위해 제공 됩니다. 자세한 내용은 [유효성 검사 서버 컨트롤 구문](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)합니다.  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>데이터 작업  
 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 업데이트, 삭제, 삽입 및 컨트롤의 항목을 통해 페이지를 사용할 수 있는 기본 제공 기능을 제공 합니다. 경우는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 데이터 소스 컨트롤에 바인딩되는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 업데이트, 삭제, 삽입 및 페이징 기능을 제공 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 update, delete, insert 및 다른 형식의 데이터 소스를 사용 하 여 페이징 작업에 대 한 지원을 제공할 수 있습니다; 그리고 있지만 적절 한 이벤트 처리기에서 이러한 작업에 대 한 구현을 제공 해야 합니다. 자세한 내용은 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>, <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 및 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>을 참조하십시오.  
  
 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 자동으로 추가할 수 있습니다를 <xref:System.Web.UI.WebControls.CommandField> 설정 하 여 편집, 삭제 또는 새로 만들기 단추를 사용 하 여 행 필드를 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A>, <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A>, 또는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> 속성을 `true`각각. Delete 단추 달리 (선택한 레코드를 즉시 삭제)을 편집 하거나 새로 만들기 단추를 클릭할 때는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 편집 하거나 각각 삽입 모드로 전환 합니다. 편집 모드에 대 한 업데이트 및 취소 단추를 사용 하 여 편집 단추가 바뀝니다. 입력 필드의 데이터 형식에 대 한 적절 한 컨트롤 (예는 <xref:System.Web.UI.WebControls.TextBox> 또는 <xref:System.Web.UI.WebControls.CheckBox> 컨트롤) 수정 하려면 사용자에 대 한 필드의 값과 함께 표시 됩니다. 모든 변경 사항이 취소 단추를 클릭 데이터 원본에서 레코드를 업데이트 [업데이트] 단추를 클릭 합니다. 마찬가지로, 삽입 모드에서 새 단추 삽입 및 취소 단추를 사용 하 여 대체 되 고 새 레코드에 대 한 값을 입력 하 여 사용자에 대 한 빈 입력된 컨트롤이 표시 됩니다.  
  
> [!NOTE]
>  Update, delete 및 insert 명령 단추를 수동으로 정의할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonField>하십시오 <xref:System.Web.UI.WebControls.CommandField>, 또는 <xref:System.Web.UI.WebControls.TemplateField> 행 필드. 그러나 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 있는 단추를 인식 합니다 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 여전히 기능을 제공 해야는 직접; 속성이 "편집", "업데이트", "Delete", "New", "Insert" 또는 "취소"로 설정 합니다. 자세한 내용은 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>, <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 및 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>을 참조하십시오.  
  
 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 사용자를 다른 데이터 원본의 레코드를 탐색할 수 있는 페이징 기능을 제공 합니다. 사용 하도록 설정 하면 페이지 탐색 컨트롤 페이저 행에 표시 됩니다. 페이징에 사용 하도록 설정 합니다 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 속성을 `true`입니다. 사용 하 여 페이저 행을 사용자 지정할 수는 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> 고 <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> 속성입니다.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>사용자 인터페이스 사용자 지정  
 모양을 사용자 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 다른 부분에 대 한 스타일 속성을 설정 하 여 제어 합니다. 다음 표에서 설정할 수 있는 스타일 속성을 나열 합니다.  
  
|스타일 속성|설명|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A>|교대로 반복 되는 데이터 행에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 이 속성은 데이터 행을 교대로 밴드에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 설정 및 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 설정 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A>|기본 제공 명령 단추가 포함 된 행의 스타일 설정입니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A>|데이터에 대 한 스타일 설정을 경우 행을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 편집 모드에 있으면 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A>|에 표시 되는 빈 데이터 행에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.DetailsView> 제어할 때 데이터 소스 레코드가 들어 있지 않습니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A>|바닥글 행의 스타일 설정입니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A>|머리글 행의 스타일 설정입니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A>|데이터에 대 한 스타일 설정을 경우 행을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 삽입 모드에 있으면입니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A>|페이저 행의 스타일 설정입니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A>|데이터 행에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 경우는 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 속성도 설정 됩니다, 데이터 행을 교대로 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 설정 및 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 설정 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A>|header 열에 대 한 스타일 설정입니다.|  
  
<a name="events"></a>   
## <a name="events"></a>이벤트  
 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에 대해 프로그래밍할 수 있는 몇 가지 이벤트를 제공 합니다. 이렇게 하면 이벤트가 발생할 때마다 사용자 지정 루틴을 실행할 수 있습니다. 다음 표에서에서 지 원하는 이벤트를 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. <xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 기본 클래스에서 이러한 이벤트 상속: <xref:System.Web.UI.Control.DataBinding>, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>, <xref:System.Web.UI.Control.Disposed>, <xref:System.Web.UI.Control.Init>를 <xref:System.Web.UI.Control.Load>, <xref:System.Web.UI.Control.PreRender>, 및 <xref:System.Web.UI.Control.Render%2A>합니다.  
  
|이벤트|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 단추를 클릭하면 이 이벤트가 발생합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemCreated>|결국 발생 <xref:System.Web.UI.WebControls.DetailsViewRow> 개체가 만들어집니다는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 이 이벤트는 대개 표시 되기 전에 레코드의 값을 수정 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>|삭제 단추를 클릭 하면 한 후 발생 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 데이터 소스에서 레코드를 삭제 합니다. 이 이벤트는 대개 삭제 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>|삭제 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 데이터 소스에서 레코드를 삭제 합니다. 이 이벤트는 삭제 작업을 취소 하려면 종종 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>|경우에 삽입 단추를 클릭 한 후의 <xref:System.Web.UI.WebControls.DetailsView> 레코드를 삽입 합니다. 이 이벤트는 대개 삽입 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>|삽입 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.DetailsView> 레코드를 삽입 합니다. 이 이벤트는 삽입 작업을 취소 하려면 종종 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>|업데이트 단추를 클릭 하면 한 후 발생 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 행을 업데이트 합니다. 이 이벤트는 대개 업데이트 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>|업데이트 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.DetailsView> 레코드를 업데이트 합니다. 이 이벤트는 업데이트 작업을 취소 하는 경우가 많습니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|후에 발생 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 (편집, 삽입 또는 읽기 전용 모드) 모드를 변경 합니다. 작업을 수행 하려면이 이벤트는 대개 때는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 모드를 변경 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|전에 발생 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 (편집, 삽입 또는 읽기 전용 모드) 모드를 변경 합니다. 이 이벤트는 종종 모드 변경을 취소 하려면 사용 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>|페이저 단추 중 하나를 클릭하면 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 페이징 작업을 처리한 후에 이 이벤트가 발생합니다. 이 이벤트는 사용자가 컨트롤의 다른 레코드를 탐색 한 후 작업을 수행 해야 할 경우에 주로 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>|페이저 단추 중 하나를 클릭하면 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 페이징 작업을 처리하기 전에 이 이벤트가 발생합니다. 이 이벤트는 페이징 작업을 취소 하는 경우가 많습니다.|  
  
<a name="Accessibility"></a>   
## <a name="accessibility"></a>액세스 가능성  
 접근성 표준을 준수 하는 태그를 생성할 수 있도록이 컨트롤을 구성 하는 방법에 대 한 정보를 참조 하세요 [Visual Studio 및 ASP.NET의 접근성](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) 및 [ASP.NET 컨트롤과내게필요한옵션](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:DetailsView  
    AccessKey="string"  
    AllowPaging="True|False"  
    AutoGenerateDeleteButton="True|False"  
    AutoGenerateEditButton="True|False"  
    AutoGenerateInsertButton="True|False"  
    AutoGenerateRows="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnablePagingCallbacks="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingRowStyle />  
        <CommandRowStyle />  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FieldHeaderStyle />  
        <Fields>  
                <asp:BoundField  
                    AccessibleHeaderText="string"  
                    ApplyFormatInEditMode="True|False"  
                    ConvertEmptyStringToNull="True|False"  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    HtmlEncode="True|False"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:BoundField>  
                <asp:ButtonField  
                    AccessibleHeaderText="string"  
                    ButtonType="Button|Image|Link"  
                    CausesValidation="True|False"  
                    CommandName="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    ImageUrl="uri"  
                    InsertVisible="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Text="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ButtonField>  
                <asp:CheckBoxField  
                    AccessibleHeaderText="string"  
                    DataField="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:CheckBoxField>  
                <asp:CommandField  
                    AccessibleHeaderText="string"  
                    ButtonType="Button|Image|Link"  
                    CancelImageUrl="uri"  
                    CancelText="string"  
                    CausesValidation="True|False"  
                    DeleteImageUrl="uri"  
                    DeleteText="string"  
                    EditImageUrl="uri"  
                    EditText="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertImageUrl="uri"  
                    InsertText="string"  
                    InsertVisible="True|False"  
                    NewImageUrl="uri"  
                    NewText="string"  
                    SelectImageUrl="uri"  
                    SelectText="string"  
                    ShowCancelButton="True|False"  
                    ShowDeleteButton="True|False"  
                    ShowEditButton="True|False"  
                    ShowHeader="True|False"  
                    ShowInsertButton="True|False"  
                    ShowSelectButton="True|False"  
                    SortExpression="string"  
                    UpdateImageUrl="uri"  
                    UpdateText="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:CommandField>  
                <asp:DynamicField  
                    AccessibleHeaderText="string"  
                    ApplyFormatInEditMode="True|False"  
                    ConvertEmptyStringToNull="True|False"  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    HtmlEncode="True|False"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    ShowHeader="True|False"  
                    UIHint="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:DynamicField>  
                <asp:HyperLinkField  
                    AccessibleHeaderText="string"  
                    DataNavigateUrlFields="string"  
                    DataNavigateUrlFormatString="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    NavigateUrl="uri"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Target="string|_blank|_parent|_search|_self|_top"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:HyperLinkField>  
                <asp:ImageField  
                    AccessibleHeaderText="string"  
                    AlternateText="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DataAlternateTextField="string"  
                    DataAlternateTextFormatString="string"  
                    DataImageUrlField="string"  
                    DataImageUrlFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    NullImageUrl="uri"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ImageField>  
                <asp:TemplateField  
                    AccessibleHeaderText="string"  
                    ConvertEmptyStringToNull="True|False"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                            <ControlStyle />  
                            <FooterStyle />  
                            <HeaderStyle />  
                            <ItemStyle />  
                        <AlternatingItemTemplate>  
                            <!-- child controls -->  
                        </AlternatingItemTemplate>  
                        <EditItemTemplate>  
                            <!-- child controls -->  
                        </EditItemTemplate>  
                        <FooterTemplate>  
                            <!-- child controls -->  
                        </FooterTemplate>  
                        <HeaderTemplate>  
                            <!-- child controls -->  
                        </HeaderTemplate>  
                        <InsertItemTemplate>  
                            <!-- child controls -->  
                        </InsertItemTemplate>  
                        <ItemTemplate>  
                            <!-- child controls -->  
                        </ItemTemplate>  
                </asp:TemplateField>  
        </Fields>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertRowStyle />  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle        />  
</asp:DetailsView>  
```  
  
   
  
## Examples  
 다음 코드 예제에는를 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤과 함께 <xref:System.Web.UI.WebControls.GridView> 간단한 마스터-세부 시나리오에 대 한 제어 합니다. 선택한 항목의 세부 정보를 표시 합니다 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[DetailsViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewSimple/CS/detailsviewsimplecs.aspx#1)]
 [!code-aspx-vb[DetailsViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewSimple/VB/detailsviewsimplevb.aspx#1)]  
  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 추가, 삭제 및 레코드를 편집 합니다.  
  
 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]  
  
 다음 코드 예제에서는 선언적으로 행 필드를 추가 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 [!code-aspx-csharp[DetailsViewRowField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewRowField/CS/detailsviewrowfieldscs.aspx#1)]
 [!code-aspx-vb[DetailsViewRowField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewRowField/VB/detailsviewrowfieldsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Type.IsPrimitive" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">매개 변수를 사용 하 여 데이터 소스 컨트롤을 사용 하 여</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetailsView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DetailsView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자의 새 인스턴스를 초기화 하는 데는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다. 동적으로 추가 하는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 페이지, 새 <xref:System.Web.UI.WebControls.DetailsView> 개체 속성을 설정 하 고 추가한 다음이 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 등의 컨테이너의 컬렉션 컨트롤 <xref:System.Web.UI.WebControls.PlaceHolder>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 생성자를 사용 하 여 동적으로 추가 하는 방법에 설명 된 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 페이지입니다.  
  
 [!code-aspx-csharp[DetailsViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCtor/CS/detailsviewctorcs.aspx#1)]
 [!code-aspx-vb[DetailsViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCtor/VB/detailsviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이징 기능을 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>페이징 기능을 사용하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에 사용할 데이터 원본에 다른 레코드로 이동할 수 있는 기본 제공 페이징 기능을 합니다.  
  
 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 UI (사용자 인터페이스)와 데이터 소스 페이징을 수행할 수 있습니다. UI 페이징 기능을 지 원하는 모든 데이터 원본 개체를 사용 하 여 사용할 수는 <xref:System.Collections.ICollection?displayProperty=nameWithType> 인터페이스입니다. 각 페이징 작업을 <xref:System.Web.UI.WebControls.DetailsView> 제어 전체 데이터 컬렉션에 대 한 데이터 소스를 쿼리 및 나머지 데이터는 기본적으로 무시 표시할 행을 선택 합니다.  
  
 데이터 소스를 구현 하는 경우 <xref:System.Web.UI.DataSourceView> 하며 <xref:System.Web.UI.DataSourceView.CanPage%2A> 속성이 반환 `true`, <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 데이터 소스 페이징의 사용 하 여 UI 페이징 하는 대신 합니다. 이 경우에 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 각 페이징 작업에 대해 필요한 행만 쿼리 합니다. 따라서 데이터 소스 페이징을 UI 페이징보다 더 효율적입니다. 만 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체가 수정 하지 않고 데이터 소스 페이징을 지원 합니다.  
  
 페이징 기능을 설정 합니다 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 속성을 `true`입니다. 사용 하 여 데이터 원본에 있는 항목의 총 수를 확인할 수는 <xref:System.Web.UI.WebControls.DetailsView.PageCount%2A> 속성입니다. 현재 표시 된 항목의 인덱스를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> 속성입니다.  
  
 페이징을 사용 하는 페이저 행을 호출 하는 추가 행은에 자동으로 표시 된 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 페이저 행을 페이지 탐색 컨트롤을 포함 하 고 위쪽, 아래쪽 또는 위쪽와에서 컨트롤의 아래쪽에 표시할 수 있습니다. 페이저 행에 두 개의 기본 제공 호출기 디스플레이 모드: 번호가 있는 페이지와 다음 및 이전 페이지 링크 (기본값). 번호가 매겨진된 페이지 모드에는 사용자가 특정 페이지를 탐색할 수 있는 개별 페이지에 대 한 링크가 표시 됩니다. 다음 및 이전 링크 모드를 다음 또는 이전 페이지로 이동 하는 데 사용할 수 있는 컨트롤이 표시 됩니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DetailsView> 데이터 소스에 두 개 미만의 레코드가 포함 된 경우 컨트롤 페이저 행을 자동으로 숨깁니다.  
  
 페이저 행 (예: 페이저 디스플레이 모드, 시간과 페이저 컨트롤의 텍스트 레이블을 표시 하려면 페이지 링크의 수)의 설정을 사용 하 여 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> 속성입니다. (배경 색, 글꼴 색, 위치 등)는 페이저 행의 모양을 제어 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> 속성입니다. <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 또한 페이저 행에 대 한 사용자 지정 템플릿을 정의할 수 있습니다. 페이저 행 템플릿을 만드는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A>합니다.  
  
 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 페이징이 발생 하는 경우 사용자 지정 작업을 수행 하는 데 사용할 수 있는 몇 가지 이벤트를 제공 합니다. 다음 표에서 사용 가능한 이벤트를 나열합니다.  
  
|이벤트|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged>|페이저 단추 중 하나를 클릭하면 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 페이징 작업을 처리한 후에 이 이벤트가 발생합니다. 이 이벤트는 사용자가 컨트롤의 다른 레코드를 탐색 한 후 작업을 수행 해야 할 경우에 주로 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging>|페이저 단추 중 하나를 클릭하면 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 페이징 작업을 처리하기 전에 이 이벤트가 발생합니다. 이 이벤트는 페이징 작업을 취소 하는 경우가 많습니다.|  
  
 변수의 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 뷰 상태에 저장 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 페이징 기능을 사용 하도록 설정 하려면 속성을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.  
  
 [!code-aspx-csharp[DetailsViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAllowPaging/CS/detailsviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAllowPaging/VB/detailsviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlternatingRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ AlternatingRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 대체 데이터 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 대체 데이터 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 속성의 데이터 행을 교대로 반복 되는 모양을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 교대로 데이터 행을 표시할 때이 속성을 설정 합니다 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 설정 및 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 설정 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `AlternatingRowStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `AlternatingRowStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 교대로 반복 되는 데이터 행에 대 한 글꼴 및 스타일 설정을 지정 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.  
  
 [!code-aspx-csharp[DetailsViewRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewRowStyle/CS/detailsviewrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewRowStyle/VB/detailsviewrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDeleteButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateDeleteButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDeleteButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateDeleteButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateDeleteButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateDeleteButton : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 레코드를 삭제하는 기본 제공 컨트롤이 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>현재 레코드를 삭제하는 기본 제공 컨트롤을 표시하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 상속 되는 개체에 바인딩된 <xref:System.Web.UI.DataSourceView> 하며 <xref:System.Web.UI.DataSourceView.CanDelete%2A> 속성에서 반환 `true`, <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 데이터 소스 컨트롤의 기능을 활용 하 고 자동 제공할 수 기능을 삭제합니다.  
  
> [!NOTE]
>  에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 데이터를 삭제 하는 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A?displayProperty=nameWithType> 속성은 기본 <xref:System.Web.UI.WebControls.SqlDataSource> 삭제 쿼리 문을 사용 하 여 개체를 설정 해야 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A> 속성이로 설정 되어 `true`, <xref:System.Web.UI.WebControls.CommandField> 삭제 단추를 사용 하 여 행 필드에 자동으로 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 데이터 원본에서 해당 레코드를 제거 영구적으로 삭제 단추를 클릭 합니다.  
  
> [!NOTE]
>  설정 해야 합니다 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 작업 자동 삭제 기능에 대 한 속성입니다.  
  
 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 레코드가 삭제 될 때 사용자 지정 작업을 수행 하는 데 사용할 수 있는 몇 가지 이벤트를 제공 합니다. 다음 표에서 사용 가능한 이벤트를 나열합니다.  
  
|이벤트|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemDeleted>|삭제 단추를 클릭 하면 한 후 발생 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 데이터 소스에서 레코드를 삭제 합니다. 이 이벤트는 대개 삭제 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>|삭제 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 데이터 소스에서 레코드를 삭제 합니다. 이 이벤트는 삭제 작업을 취소 하려면 종종 사용 됩니다.|  
  
 변수의 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A> 뷰 상태에 저장 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton%2A> 속성을 현재 레코드를 삭제 하는 기본 제공 컨트롤을 표시 합니다.  
  
 [!code-aspx-csharp[DetailsViewAutoGenerateDeleteButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateDeleteButton/CS/detailsviewautogeneratedeletebuttoncs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateDeleteButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateDeleteButton/VB/detailsviewautogeneratedeletebuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateEditButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateEditButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateEditButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateEditButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateEditButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateEditButton : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 레코드를 편집하는 기본 제공 컨트롤이 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>현재 레코드를 편집하는 기본 제공 컨트롤을 표시하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 업데이트를 지 원하는 데이터 소스 컨트롤에 바인딩된 경우는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 업데이트 기능을 제공 합니다.  
  
> [!NOTE]
>  데이터를 업데이트 하려면 데이터 소스 컨트롤에 대 한 해당 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A?displayProperty=nameWithType> 업데이트 쿼리 문을 사용 하 여 속성을 설정 해야 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A> 속성이로 설정 되어 `true`, <xref:System.Web.UI.WebControls.CommandField> 편집 단추를 사용 하 여 행 필드에 자동으로 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 배치 [편집] 단추 <xref:System.Web.UI.WebControls.DetailsView> 편집 모드에서 제어 합니다. 각 바인딩된 필드는 읽기 전용 컨트롤에 편집 모드에 있을 때 적절 한 입력된 컨트롤이 같은 표시는 <xref:System.Web.UI.WebControls.TextBox> 필드의 데이터 형식에 대 한 제어 합니다. 이 필드의 값을 수정할 수 있습니다.  
  
 클릭 하면 업데이트 단추 및 취소 단추를 사용 하 여 편집 단추도 바뀝니다. 값 변경 내용으로 데이터 원본에서 레코드를 업데이트 하 고 지정 된 모드에 컨트롤을 반환 합니다. [업데이트] 단추를 클릭 하 여 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 속성입니다. 취소 단추를 클릭 값 변경 사항이 및 기본 모드에 컨트롤을 반환 합니다.  
  
> [!NOTE]
>  배치 하는 <xref:System.Web.UI.WebControls.DetailsView> 프로그래밍 방식으로 편집 모드에서 컨트롤을 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> 메서드.  
  
 경우는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 속성도 설정 됩니다 `true`의 <xref:System.Web.UI.WebControls.DetailsView> 제어 자동으로 확인 하는 필드 또는 필드에 지정 된는 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 속성은 읽기 전용입니다.  
  
> [!NOTE]
>  사용자 지정 업데이트 기능을 구현 하지 않은 경우 설정 해야 합니다는 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 속성 자동 업데이트 기능이 제대로 작동 하도록 합니다.  
  
 데이터의 모양을 제어할 수 있습니다 때 행을 <xref:System.Web.UI.WebControls.DetailsView> 제어를 사용 하 여 편집 모드에는 <xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A> 속성입니다. 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 레코드가 업데이트 될 때 사용자 지정 작업을 수행 하는 데 사용할 수 있는 몇 가지 이벤트를 제공 합니다. 다음 표에서 사용 가능한 이벤트를 나열합니다.  
  
|이벤트|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemUpdated>|[업데이트] 단추를 클릭 하면 한 후 발생 합니다 <xref:System.Web.UI.WebControls.DetailsView> 레코드를 업데이트 합니다. 이 이벤트는 대개 업데이트 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemUpdating>|[업데이트] 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.DetailsView> 레코드를 업데이트 합니다. 이 이벤트는 업데이트 작업을 취소 하는 경우가 많습니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|후에 발생 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 모드를 변경 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|전에 발생 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 모드를 변경 합니다. 이 이벤트는 종종 모드 변경을 취소 하려면 사용 합니다.|  
  
 변수의 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A> 뷰 상태에 저장 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton%2A> 속성을 현재 레코드를 편집 하 여 기본 제공 컨트롤을 표시 합니다.  
  
 [!code-aspx-csharp[DetailsViewAutoGenerateEditButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateEditButton/CS/detailsviewautogenerateeditbuttoncs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateEditButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateEditButton/VB/detailsviewautogenerateeditbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateInsertButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateInsertButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateInsertButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateInsertButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateInsertButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateInsertButton : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>새 레코드를 삽입하는 기본 제공 컨트롤이 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>새 레코드를 삽입하는 기본 제공 컨트롤을 표시하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 삽입을 지 원하는 데이터 소스 컨트롤에 바인딩된 경우는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 삽입 기능을 제공 합니다.  
  
> [!NOTE]
>  데이터를 삽입 하는 데이터 소스 컨트롤에 대 한 해당 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A?displayProperty=nameWithType> insert 쿼리 문을 사용 하 여 속성을 설정 해야 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> 속성이로 설정 되어 `true`, <xref:System.Web.UI.WebControls.CommandField> 새 단추를 사용 하 여 행 필드에 자동으로 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 배치 새 단추를 클릭 하면 <xref:System.Web.UI.WebControls.DetailsView> 삽입 모드에서 제어 합니다. 각 바인딩된 필드는 읽기 전용 컨트롤에 삽입 모드에 있을 때 적절 한 입력된 컨트롤이 같은 표시는 <xref:System.Web.UI.WebControls.TextBox> 필드의 데이터 형식에 대 한 제어 합니다. 이 새 레코드에 대 한 필드의 값을 입력할 수 있습니다.  
  
 클릭 하면 새 단추 삽입 단추 및 취소 단추를 사용 하 여도 바뀝니다. 데이터 원본에 새 레코드를 삽입 하 고 지정 된 모드에 컨트롤을 반환 합니다. 삽입 단추를 클릭 하 여 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 속성입니다. 취소 단추를 클릭 삽입 작업이 취소 되 고 기본 모드에 컨트롤을 반환 합니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 행 삽입 모드로 배치를 사용 하 여를 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> 메서드.  
  
 사용 하 여 삽입 모드에 있는 레코드의 모양을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> 속성입니다. 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 새 레코드가 삽입 될 때 사용자 지정 작업을 수행 하는 데 사용할 수 있는 몇 가지 이벤트를 제공 합니다. 다음 표에서 사용 가능한 이벤트를 나열합니다.  
  
|이벤트|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemInserted>|경우에 삽입 단추를 클릭 한 후의 <xref:System.Web.UI.WebControls.DetailsView> 레코드를 삽입 합니다. 이 이벤트는 대개 삽입 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ItemInserting>|삽입 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.DetailsView> 레코드를 삽입 합니다. 이 이벤트는 삽입 작업을 취소 하려면 종종 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|후에 발생 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 모드를 변경 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|전에 발생 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 모드를 변경 합니다. 이 이벤트는 종종 모드 변경을 취소 하려면 사용 합니다.|  
  
 변수의 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> 뷰 상태에 저장 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton%2A> 속성에 새 레코드를 삽입 하는 기본 제공 컨트롤을 표시할는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.  
  
 [!code-aspx-csharp[DetailsViewAutoGenerateInsertButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateInsertButton/CS/detailsviewautogenerateinsertbuttoncs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateInsertButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateInsertButton/VB/detailsviewautogenerateinsertbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateRows">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateRows : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.AutoGenerateRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스의 각 필드에 대해 행 필드가 자동으로 생성되고 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>데이터 소스의 각 필드에 대해 자동으로 생성된 바인딩된 행 필드를 표시하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 각 데이터 행에는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 행 필드를 표현 합니다. 경우는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 속성이 `true`를 자동으로 생성 된 바인딩된 행 필드를 데이터 소스의 각 필드에 대해 만들어집니다. 각 필드 데이터 소스의 각 필드 표시 되는 순서 대로 텍스트로 행에 표시 됩니다.  
  
> [!NOTE]
>  자동으로 생성 된 바인딩된 행 필드에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 컬렉션입니다.  
  
 자동으로 생성 되는 행 레코드의 모든 필드를 표시 하는 빠르고 쉬운 방법을 제공 합니다. 그러나 되도록 사용 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 고급 기능에 포함 시킬 행 필드를 명시적으로 선언 해야 합니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 자세한 내용은 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A>를 참조하십시오.  
  
> [!NOTE]
>  명시적으로 선언 된 행 필드를 자동으로 생성 된 행 필드와 함께에서 사용할 수 있습니다. 모두 사용 하는 명시적으로 선언 된 행 필드 뒤에 자동으로 생성 된 행 필드를 먼저 렌더링 됩니다.  
  
 변수의 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 뷰 상태에 저장 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 속성을 데이터 소스의 각 필드에 대 한 바인딩된 행 필드를 자동으로 만듭니다.  
  
 [!code-aspx-csharp[DetailsViewAutoGenerateRows#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateRows/CS/detailsviewautogeneraterowscs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateRows#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateRows/VB/detailsviewautogeneraterowsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.AutoGeneratedField" />
        <altmember cref="T:System.Web.UI.WebControls.BoundField" />
        <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 배경에 표시할 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 배경에 표시할 이미지의 URL입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DetailsView.BackImageUrl%2A> 의 배경에 표시할 이미지에 URL을 지정 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다.  
  
> [!NOTE]
>  지정된 된 이미지 보다 작은 경우는 <xref:System.Web.UI.WebControls.DetailsView> 백그라운드에 맞게 컨트롤, 이미지를 바둑판식으로 표시 합니다. 이미지 컨트롤 보다 큰 경우 이미지가 잘립니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.BackImageUrl%2A> 의 백그라운드에서 사용자 지정 이미지를 표시 하려면 속성을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 이 예제가 작동 하려면 사용자 고유의 이미지를 제공 해야 합니다.  
  
 [!code-aspx-csharp[DetailsViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewBackImageUrl/CS/detailsviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[DetailsViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewBackImageUrl/VB/detailsviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As DetailsViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DetailsViewRow ^ BottomPagerRow { System::Web::UI::WebControls::DetailsViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPagerRow : System.Web.UI.WebControls.DetailsViewRow" Usage="System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 컨트롤의 아래쪽 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 컨트롤의 아래쪽 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 속성을 `true`), 페이저 행을 호출 하는 추가 행에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 페이저 행을 다른 레코드를 탐색할 수 있도록 하 고 위쪽, 아래쪽 또는 둘 다 위쪽과 컨트롤의 아래쪽에 표시 될 수 있는 컨트롤을 포함 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> 속성을 프로그래밍 방식으로 액세스 합니다 <xref:System.Web.UI.WebControls.DetailsViewRow> 의 아래쪽 페이저 행을 나타내는 개체를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> 속성을 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 아래쪽 페이저 행을 만듭니다는 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 이벤트입니다.  
  
 예를 들어 사용자 지정 콘텐츠를 추가 하는 경우 아래쪽 페이저 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. 수정을 <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> 후 속성에 수행 해야 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 렌더링 되었으면이 고, 그렇지는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에는 모든 변경 사항을 덮어씁니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> 의 아래쪽 페이저 행을 액세스 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 하는 동안 제어는 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 이벤트. 두 <xref:System.Web.UI.WebControls.Label> 컨트롤 페이저 행 내에서 현재 페이지 번호와 총 페이지 수를 사용 하 여 업데이트 됩니다.  
  
 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 HTML 캡션 요소에서 렌더링할 텍스트를 가져오거나 설정합니다. 이 속성을 사용하면 보조 기술 디바이스 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 HTML 캡션 요소에서 렌더링할 텍스트를 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> 의 HTML 캡션 요소에서 렌더링할 텍스트를 지정 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 지정 하는 텍스트 컨트롤을 보다 쉽게 액세스할 수 있도록 하는 데 사용할 수 있는 테이블에 대 한 설명 사용 하 여 보조 기술 장치를 제공 합니다.  
  
 에 대 한 추가적인 내게 필요한 옵션 지원 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 제공 하는 <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> 속성입니다. 사용 합니다 <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> 의 HTML 캡션 요소의 맞춤을 지정 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다.  
  
 변수의 <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> 뷰 상태에 저장 됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> HTML 캡션 요소로 렌더링에 대 한 텍스트를 지정 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다.  
  
 [!code-aspx-csharp[DetailsViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCaption/CS/detailsviewcaptioncs.aspx#1)]
 [!code-aspx-vb[DetailsViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCaption/VB/detailsviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.DetailsView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 있는 HTML 캡션 요소의 가로 또는 세로 위치를 가져오거나 설정합니다. 이 속성을 사용하면 보조 기술 디바이스 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 값 중 하나입니다. 기본값은 <see langword="TableCaptionAlign.NotSet" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> 의 HTML 캡션 요소의 가로 또는 세로 위치를 지정 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 이 속성을 사용하면 보조 기술 디바이스 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.  
  
 이 속성은 <xref:System.Web.UI.WebControls.TableCaptionAlign> 열거형의 값 중 하나로 설정됩니다. 다음 표에서 가능한 값을 나열합니다.  
  
|값|설명|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|캡션 요소가 테이블의 아래쪽에 맞춰집니다.|  
|`TableCaptionAlign.Left`|캡션 요소가 테이블의 왼쪽에 맞춰집니다.|  
|`TableCaptionAlign.NotSet`|캡션 요소의 맞춤 설정 되지 않았습니다.|  
|`TableCaptionAlign.Right`|캡션 요소가 테이블의 오른쪽에 맞춰집니다.|  
|`TableCaptionAlign.Top`|캡션 요소가 테이블의 위쪽에 맞춰집니다.|  
  
 에 대 한 추가적인 내게 필요한 옵션 지원 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 제공 하는 <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> 속성입니다. 사용 합니다 <xref:System.Web.UI.WebControls.DetailsView.Caption%2A> 의 HTML 캡션 요소에서 렌더링할 텍스트를 지정 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 변수의 <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> 뷰 상태에 저장 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.CaptionAlign%2A> HTML 캡션 요소에서 지정 하는 속성은 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 컨트롤의 왼쪽에 렌더링 되어야 합니다.  
  
 [!code-aspx-csharp[DetailsViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCaption/CS/detailsviewcaptioncs.aspx#1)]
 [!code-aspx-vb[DetailsViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCaption/VB/detailsviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정한 값이 <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 열거형 값이 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.DetailsView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 내용과 셀 테두리 사이의 여백 크기를 가져오거나 설정합니다.</summary>
        <value>셀 내용과 셀 테두리 사이의 여백 크기(픽셀)입니다. 기본값은 -1로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A> 셀 내용과 셀 테두리 사이의 간격을 제어 하는 속성입니다. 지정 된 안쪽 여백 크기를 셀의 네 변 모두에 추가 됩니다.  
  
 동일한 열에 있는 모든 셀을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 동일한 너비를 포함 합니다. 여백은 광범위 한 셀에 적용 되 고 열의 다른 모든 셀은 해당 셀 너비를 조정 됩니다. 마찬가지로, 동일한 행의 모든 셀의 높이가 같습니다. 행의 가장 높은 셀의 안쪽 여백이 적용 됩니다 및 다른 모든 셀의 행에서 해당 셀 높이 조정 됩니다. 개별 셀 크기를 지정할 수 없습니다.  
  
 셀 사이의 간격을 조정 합니다 <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A> 셀 내용과 셀 테두리 사이의 간격을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCellPadding/CS/detailsviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCellPadding/VB/detailsviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.DetailsView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 사이의 여백 크기를 가져오거나 설정합니다.</summary>
        <value>픽셀 단위로 나타낸 셀 사이의 공간 크기입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A> 에 인접 한 셀 사이의 간격을 제어 하려면 속성을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 이 간격이 세로 및 가로로 적용 됩니다. 셀 간격 전체 컨트롤에 대 한 균일 한 경우 행 또는 열에 개별 셀 간격을 지정할 수 없습니다.  
  
> [!NOTE]
>  이 속성을 0 보다 큰 값으로 설정 하 고 설정한 경우는 <xref:System.Web.UI.WebControls.DetailsView.GridLines%2A> 속성 셀 테두리를 표시 하는 값으로 인접 한 셀의 테두리 간 간격이 생깁니다. 이 이런 경우에 <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A> 속성 간격의 크기를 제어 합니다.  
  
 셀 내용과 셀 테두리 사이의 간격을 조정 합니다 <xref:System.Web.UI.WebControls.DetailsView.CellPadding%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.CellSpacing%2A> 인접 한 셀 사이의 간격을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCellPadding/CS/detailsviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCellPadding/VB/detailsviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.DetailsViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.DetailsViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As DetailsViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::DetailsViewMode newMode);" />
      <MemberSignature Language="F#" Value="member this.ChangeMode : System.Web.UI.WebControls.DetailsViewMode -&gt; unit" Usage="detailsView.ChangeMode newMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.DetailsViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode"><see cref="T:System.Web.UI.WebControls.DetailsViewMode" /> 값 중 하나입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤을 지정한 모드로 전환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> 프로그래밍 방식으로 전환 하는 방법의 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 편집, 삽입 및 읽기 전용 모드 사이입니다. 또한이 메서드를 업데이트 합니다 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 지정된 된 모드를 사용 하 여 속성입니다. 다음 표에서 서로 다른 모드 값을 보여 줍니다.  
  
|모드|설명|  
|----------|-----------------|  
|`DetailsViewMode.Edit`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 레코드의 값을 업데이트할 수 있는 편집 모드에 있습니다.|  
|`DetailsViewMode.Insert`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 데이터 원본에 새 레코드를 추가할 수 있는 삽입 모드에 있습니다.|  
|`DetailsView.ReadOnly`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 일반적인 표시 모드는 읽기 전용 모드입니다.|  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> 반환 하는 방법의 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 읽기 전용 모드로 사용자가 다른 레코드를 탐색할 때마다.  
  
 [!code-aspx-csharp[DetailsViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewChangeMode/CS/detailsviewchangemodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewChangeMode/VB/detailsviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" />
      </Docs>
    </Member>
    <Member MemberName="CommandRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle CommandRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle CommandRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ CommandRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 명령 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 명령 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A> 에 있는 명령 행의 모양을 제어 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 명령 행 편집, 삭제 및 삽입과 같은 작업을 수행 하 고 명령 단추를 포함 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `CommandRowStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `CommandRowStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.CommandRowStyle%2A> 속성에 있는 명령 행에 대 한 글꼴 및 스타일 설정을 지정할 수는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.  
  
 [!code-aspx-csharp[DetailsViewCommandRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandRowStyle/CS/detailsviewcommandrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewCommandRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandRowStyle/VB/detailsviewcommandrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateAutoGeneratedRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedRow (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedRow(class System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAutoGeneratedRow (fieldProperties As AutoGeneratedFieldProperties) As AutoGeneratedField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::AutoGeneratedField ^ CreateAutoGeneratedRow(System::Web::UI::WebControls::AutoGeneratedFieldProperties ^ fieldProperties);" />
      <MemberSignature Language="F#" Value="abstract member CreateAutoGeneratedRow : System.Web.UI.WebControls.AutoGeneratedFieldProperties -&gt; System.Web.UI.WebControls.AutoGeneratedField&#xA;override this.CreateAutoGeneratedRow : System.Web.UI.WebControls.AutoGeneratedFieldProperties -&gt; System.Web.UI.WebControls.AutoGeneratedField" Usage="detailsView.CreateAutoGeneratedRow fieldProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AutoGeneratedField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldProperties" Type="System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
      </Parameters>
      <Docs>
        <param name="fieldProperties"><see cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" />의 속성을 포함하는 <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" />입니다.</param>
        <summary>지정한 필드 속성을 사용하여 자동으로 생성된 행 필드를 나타내는 <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" /> 개체를 만듭니다.</summary>
        <returns><paramref name="fieldProperties" /> 매개 변수로 지정한 필드 속성을 포함하는 <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView> 지정한 필드 속성을 사용 하 여 자동으로 생성 된 행 필드를 만들기 위해 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 클래스를 사용자 고유의 자동으로 생성 된 행 필드를 만들려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
      </Docs>
    </Member>
    <Member MemberName="CreateAutoGeneratedRows">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateAutoGeneratedRows (object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection CreateAutoGeneratedRows(object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAutoGeneratedRows (dataItem As Object) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ICollection ^ CreateAutoGeneratedRows(System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="abstract member CreateAutoGeneratedRows : obj -&gt; System.Collections.ICollection&#xA;override this.CreateAutoGeneratedRows : obj -&gt; System.Collections.ICollection" Usage="detailsView.CreateAutoGeneratedRows dataItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataItem">자동으로 생성된 행 필드를 만들 데이터 항목입니다.</param>
        <summary>지정한 데이터 항목에 대해 자동으로 생성된 행 필드 집합을 만듭니다.</summary>
        <returns>지정한 데이터 항목에 대해 자동으로 생성된 행 필드를 포함하는 <see cref="T:System.Collections.ICollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 속성이로 설정 되어 `true`, <xref:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 현재 데이터 항목에 대 한 행 필드를 생성 한 컨트롤 집합을 자동으로 만들려면.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.DetailsView" />에 필드를 생성할 속성 또는 특성이 없는 경우</exception>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 클래스 고유한 집합이 자동으로 생성 된 행 필드를 만들려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="detailsView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource"><see cref="T:System.Collections.IEnumerable" /> 컨트롤의 데이터 소스를 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</param>
        <param name="dataBinding">데이터 바인딩을 하는 동안 이 메서드가 호출됨을 나타내는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤을 렌더링하는 데 사용할 컨트롤 계층 구조를 만듭니다.</summary>
        <returns>데이터 소스의 항목 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.CreateChildControls%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 컨트롤 계층 구조를 만들 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="dataSource" />가 null <see cref="T:System.Web.UI.DataSourceView" />를 반환하는 경우  
  
또는 
 <paramref name="dataSource" />가 <see cref="T:System.Collections.ICollection" />이 아니고 총 행 수를 반환할 수 없는 경우  
  
또는 
 <paramref name="dataBinding" />이 <see langword="false" />이고 <paramref name="dataSource" />가 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현하지 않는 경우  
  
또는 
 <paramref name="dataSource" />가 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현하지 않고 <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />이 <see langword="true" />로 설정된 경우</exception>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 클래스 자체 컨트롤 계층 구조를 만들려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="detailsView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 대한 기본 테이블 스타일 개체를 만듭니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Style" /> 컨트롤에 대한 기본 테이블 스타일이 들어 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.CreateControlStyle%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView> 해당 기본 테이블 스타일 개체를 만들 수 있습니다. 기본 스타일 설정 외에도 <xref:System.Web.UI.WebControls.TableStyle> 개체를이 메서드는 다음 표에 속성을 설정 합니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TableStyle.GridLines%2A>|`GridLines.Both`|  
|<xref:System.Web.UI.WebControls.TableStyle.CellSpacing%2A>|0|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 클래스를 반환 하려면이 메서드를 재정의할 수 있습니다는 <see cref="T:System.Web.UI.WebControls.TableStyle" /> 사용자 지정 설정 사용 하 여 개체입니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="detailsView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Select 명령에 전달되는 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 개체를 만듭니다.</summary>
        <returns>Select 명령에 전달되는 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments%2A> 메서드는 호출 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 만들고는 <xref:System.Web.UI.DataSourceSelectArguments> Select 명령에 전달 되는 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateFieldSet">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateFieldSet (object dataItem, bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection CreateFieldSet(object dataItem, bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateFieldSet (dataItem As Object, useDataSource As Boolean) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ICollection ^ CreateFieldSet(System::Object ^ dataItem, bool useDataSource);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldSet : obj * bool -&gt; System.Collections.ICollection&#xA;override this.CreateFieldSet : obj * bool -&gt; System.Collections.ICollection" Usage="detailsView.CreateFieldSet (dataItem, useDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItem" Type="System.Object" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataItem">행 필드를 만들 데이터 항목입니다.</param>
        <param name="useDataSource">데이터 항목을 사용하여 자동으로 생성된 행 필드를 만드는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>컨트롤 계층 구조를 생성하는 데 사용되는 자동으로 생성된 행 필드와 사용자 정의 행 필드의 전체 집합을 만듭니다.</summary>
        <returns>지정한 데이터 항목에 대한 자동으로 생성된 행 필드와 사용자 정의 행 필드가 둘 다 들어 있는 <see cref="T:System.Collections.ICollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.CreateFieldSet%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에 대 한 행 필드의 전체 집합을 만들기 위해 컨트롤입니다. 경우는 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 속성이 `true`자동으로 생성 된 행 필드에 포함 된 사용자 정의 행 필드를에 추가 됩니다는 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 컬렉션입니다. 전달 된 데이터 항목에 따라 자동으로 생성 된 행 필드를 만들려면 `true` 에 대 한는 `useDataSource` 매개 그렇지 않은 경우 자동으로 생성 된 행 필드를 컨트롤에 있는 기존 행 필드의 속성에 따라 생성 됩니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 클래스 고유한 행 필드 집합을 만들려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DetailsViewRow CreateRow (int rowIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DetailsViewRow CreateRow(int32 rowIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (rowIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As DetailsViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DetailsViewRow ^ CreateRow(int rowIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.DetailsViewRow&#xA;override this.CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.DetailsViewRow" Usage="detailsView.CreateRow (rowIndex, rowType, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="rowIndex">표시할 데이터 항목의 인덱스(0부터 시작)입니다.</param>
        <param name="rowType"><see cref="T:System.Web.UI.WebControls.DataControlRowType" /> 값 중 하나입니다.</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 값 중 하나입니다.</param>
        <summary>지정된 항목 인덱스, 행 형식, 행 상태를 사용하여 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 개체를 만듭니다.</summary>
        <returns>항목 인덱스, 행 형식, 행 상태가 지정된 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.CreateRow%2A> 메서드는 호출 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 만들고를 <xref:System.Web.UI.WebControls.DetailsViewRow> 개체입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 클래스를 반환 하려면이 메서드를 재정의할 수 있습니다는 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 사용자 지정 설정 사용 하 여 개체입니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : unit -&gt; System.Web.UI.WebControls.Table&#xA;override this.CreateTable : unit -&gt; System.Web.UI.WebControls.Table" Usage="detailsView.CreateTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤을 포함하는 테이블을 만듭니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Table" /> 컨트롤을 포함하는 테이블을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.CreateTable%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 컨트롤에 대 한 컨테이너 역할을 하는 테이블을 만듭니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DetailsViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DetailsViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As DetailsViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::DetailsViewMode CurrentMode { System::Web::UI::WebControls::DetailsViewMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMode : System.Web.UI.WebControls.DetailsViewMode" Usage="System.Web.UI.WebControls.DetailsView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 현재 데이터 입력 모드를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsViewMode" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 속성을 확인 하는지 여부를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 편집, 삽입 또는 읽기 전용 모드에. 다음 표에서 서로 다른 모드 값을 보여 줍니다.  
  
|모드|설명|  
|----------|-----------------|  
|`DetailsViewMode.Edit`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 레코드의 값을 업데이트할 수 있는 편집 모드에 있습니다.|  
|`DetailsViewMode.Insert`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 데이터 원본에 새 레코드를 추가할 수 있는 삽입 모드에 있습니다.|  
|`DetailsViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 일반적인 표시 모드는 읽기 전용 모드입니다.|  
  
 이 값은 일반적으로 자동으로 설정 된 <xref:System.Web.UI.WebControls.DetailsView> 새로 만들기, 업데이트, 삽입, 삭제 또는 취소 명령 단추를 클릭할 때 컨트롤입니다. 또한 프로그래밍 방식으로 사용 하 여 모드를 변경할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView.ChangeMode%2A> 메서드.  
  
 경우는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 모드를 변경, 다음 표에 이벤트가 발생 합니다. 이 옵션을 사용 하면 이벤트가 발생할 때 루틴을 수행 하는 사용자 지정 이벤트 처리기를 만들 수 있습니다.  
  
|이벤트|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanged>|때의 모드를 변경 하는 명령 단추는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭할 뒤 모드가 변경 합니다.|  
|<xref:System.Web.UI.WebControls.DetailsView.ModeChanging>|때의 모드를 변경 하는 명령 단추는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭할 모드가 변경 하기 전에 합니다.|  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 속성을 여부를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 편집, 삽입 또는 읽기 전용 모드에 합니다. 사용자가 다른 레코드는 이동 하려고 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 편집 모드 인지, 페이징 작업이 취소 됩니다.  
  
 [!code-aspx-csharp[DetailsViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCurrentMode/CS/detailsviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCurrentMode/VB/detailsviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="detailsView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 클래스의 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 메서드를 호출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩된 컨트롤 재정의 해야 <xref:System.Web.UI.WebControls.DetailsView.PerformDataBinding%2A> 대신 <xref:System.Web.UI.WebControls.DetailsView.DataBind%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.DetailsView.DataItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 바인딩된 데이터 항목을 가져옵니다.</summary>
        <value><see cref="T:System.Object" /> 컨트롤에 바인딩된 데이터 항목을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.DataItem%2A> 에 바인딩된 데이터 항목에 액세스 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 현재 레코드의 필드 값에 직접 액세스할 수 있는 데이터 항목 자주 사용 됩니다. 형식의 <xref:System.Object> 이 반환한 속성 데이터 원본에 따라 달라 집니다. 예를 들어 경우는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 바인딩되는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Data.DataRowView> 개체가 반환 됩니다.  
  
> [!NOTE]
>  이 속성은 데이터 바인딩이 발생 한 후에 사용할 수 있습니다. 발생 하기 전 까지의 데이터 바인딩,이 속성은 반환 `null`합니다. 이 속성은 또한 때 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 삽입 모드에 있고 반환 `null`합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.DataItem%2A> 데이터 항목에 필드의 값을 확인 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewDataItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewDataItem/CS/DetailsViewDataItem.aspx#1)]
 [!code-aspx-vb[DetailsViewDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewDataItem/VB/DetailsViewDataItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemCount : int" Usage="System.Web.UI.WebControls.DetailsView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내부 데이터 소스의 항목 수를 가져옵니다.</summary>
        <value>내부 데이터 소스의 항목 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징 기능을 활성화 하는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 속성을 `true`)를 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A> 속성을 데이터 원본에서 레코드의 총 수를 확인 합니다.  
  
> [!NOTE]
>  때문에 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 한 번에 하나의 레코드만 표시,이 값은 또한 데이터 원본의 모든 레코드를 표시 하는 데 필요한 페이지의 총 수에 해당 합니다.  
  
 내부 데이터 소스에서 현재 레코드의 인덱스를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A> 속성을 데이터 소스의 항목 수를 결정 합니다. 페이지 수를 표시 하려면이 값은 사용 된 <xref:System.Web.UI.WebControls.Label> 페이저 행에 포함 된 컨트롤입니다.  
  
 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemIndex : int" Usage="System.Web.UI.WebControls.DetailsView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내부 데이터 소스에서 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 표시되는 항목의 인덱스를 가져옵니다.</summary>
        <value>내부 데이터 소스에서 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 표시되는 데이터 항목의 인덱스입니다. 이 인덱스는 0부터 시작합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징 기능을 활성화 하는 경우 (설정 하 여 합니다 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 속성을 `true`)를 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A> 현재 표시 된 레코드의 인덱스를 확인 하는 속성입니다. 또한 프로그래밍 방식으로 표시 된 레코드를 변경 하려면이 속성을 사용할 수 있습니다.  
  
> [!NOTE]
>  표시 된 레코드의 페이지 번호를 확인 하려면이 속성을 사용도 수 페이징 기능을 사용 하는 경우 그러나이 속성은 0부터 시작 주의 합니다.  
  
 데이터 원본에 있는 항목의 총 수를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsView.DataItemCount%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.DataItemIndex%2A> 속성을 데이터 소스의 현재 항목의 인덱스를 확인 합니다. 현재 페이지 번호를 표시 하려면이 값은 사용 된 <xref:System.Web.UI.WebControls.Label> 페이저 행에 포함 된 컨트롤입니다.  
  
 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataItemCount" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.DetailsView.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표시된 레코드의 기본 키를 나타내는 <see cref="T:System.Web.UI.WebControls.DataKey" /> 개체를 가져옵니다.</summary>
        <value>표시된 레코드의 기본 키를 나타내는 <see cref="T:System.Web.UI.WebControls.DataKey" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 속성이 설정 되어를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 자동으로 만듭니다.는 <xref:System.Web.UI.WebControls.DataKey> 현재 레코드에 대 한 키 필드를 나타내는 개체입니다. 사용 된 <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> 이 가져올 속성 <xref:System.Web.UI.WebControls.DataKey> 개체입니다. 이 속성은 키와 해당 값에 지정 된 필드를 가져오는 데 일반적으로 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 속성입니다.  
  
> [!NOTE]
>  사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A> 속성에 나열 된 첫 번째 키 필드의 값을 확인 하는 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> 키 필드 및 현재 레코드에 대 한 해당 값을 결정 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewDataKey/CS/detailsviewdatakeycs.aspx#1)]
 [!code-aspx-vb[DetailsViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewDataKey/VB/detailsviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.DetailsView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에 대한 키 필드의 이름이 들어 있는 배열을 가져오거나 설정합니다.</summary>
        <value>데이터 소스의 키 필드 이름이 들어 있는 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 데이터 원본의 기본 키를 나타내는 필드 이름의 쉼표로 구분 된 목록을 지정 하는 속성입니다. 경우는 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 속성이 설정 되어를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 자동으로 만듭니다.는 <xref:System.Web.UI.WebControls.DataKey> 저장 현재 레코드에 대 한 키 필드를 나타내는 개체를 <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> 속성. 경우는 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 속성도 설정 됩니다 `true`의 <xref:System.Web.UI.WebControls.DetailsView> 제어 자동으로 확인 하는 필드 또는 필드에 지정 된는 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 속성은 읽기 전용입니다.  
  
> [!NOTE]
>  설정 해야 합니다는 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 자동 업데이트, 삭제 및 삽입의 기능에 대 한 속성을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 사용 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 행 필드의 속성 `false`, 행에 표시 되지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤과 행에 대 한 데이터 해도 왕복 클라이언트. 왕복 수 있도록 표시 되지 않는 행에 대 한 데이터를 원하는 경우 필드 이름을 추가 합니다 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 데이터 원본에 대 한 키 필드를 식별 하는 속성에 바인딩된는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.  
  
 [!code-aspx-csharp[DetailsViewAutoGenerateDeleteButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewAutoGenerateDeleteButton/CS/detailsviewautogeneratedeletebuttoncs.aspx#1)]
 [!code-aspx-vb[DetailsViewAutoGenerateDeleteButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewAutoGenerateDeleteButton/VB/detailsviewautogeneratedeletebuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DetailsViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As DetailsViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DetailsViewMode DefaultMode { System::Web::UI::WebControls::DetailsViewMode get(); void set(System::Web::UI::WebControls::DetailsViewMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMode : System.Web.UI.WebControls.DetailsViewMode with get, set" Usage="System.Web.UI.WebControls.DetailsView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 기본 데이터 입력 모드를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsViewMode" /> 값 중 하나입니다. 기본값은 <see langword="DetailsViewMode.ReadOnly" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 속성을 지정 하는지 여부를 <xref:System.Web.UI.WebControls.DetailsView> 편집 또는 삽입 작업이 수행 된 후 컨트롤을 편집, 삽입 또는 읽기 전용 모드에 반환 합니다. 기본적으로 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 읽기 전용 모드로 반환; 유지할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView> 편집에서 제어 하거나 적절 한 값으로이 속성을 설정 하 여 삽입 모드입니다. 다음 표에서 서로 다른 모드 값을 보여 줍니다.  
  
|모드|설명|  
|----------|-----------------|  
|`DetailsViewMode.Edit`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 레코드의 값을 업데이트할 수 있는 편집 모드에 있습니다.|  
|`DetailsViewMode.Insert`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 데이터 원본에 새 레코드를 추가할 수 있는 삽입 모드에 있습니다.|  
|`DetailsViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 일반적인 표시 모드는 읽기 전용 모드입니다.|  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 속성을 지정 하는 <xref:System.Web.UI.WebControls.DetailsView> 레코드를 업데이트 된 후 컨트롤이 편집 모드로 유지 해야 합니다.  
  
 [!code-aspx-csharp[DetailsViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewDefaultMode/CS/detailsviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewDefaultMode/VB/detailsviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정한 값이 <see cref="T:System.Web.UI.WebControls.DetailsViewMode" /> 열거형 값이 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : unit -&gt; unit&#xA;override this.DeleteItem : unit -&gt; unit" Usage="detailsView.DeleteItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스에서 현재 레코드를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우에 삭제가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 삽입 모드 인지 합니다. <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 항목이 삭제 되는 바로 전에 이벤트가 발생 합니다. 설정 된 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true` 삭제를 취소 하려면.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 삭제 작업을 수행하는 경우 호출되는 페이지의 메서드에 대한 이름을 가져오거나 설정합니다.</summary>
        <value>컨트롤에서 삭제 작업을 수행할 때 호출되는 페이지상의 메서드 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web Forms 모델 바인딩 사용에 대 한 자습서 시리즈를 참조 하세요 [모델 바인딩 및 Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤이 편집 모드에 있을 때 데이터 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤이 편집 모드에 있을 때 데이터 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A> 때 데이터의 모양을 제어 하려면 속성 행을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 편집 모드 인지 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `EditRowStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `EditRowStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.EditRowStyle%2A> 속성을 데이터에 대 한 글꼴 및 스타일 설정을 지정할 때 행을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 편집 모드에 있으면.  
  
 [!code-aspx-csharp[DetailsViewEditRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEditRowStyle/CS/detailsvieweditrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewEditRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEditRowStyle/VB/detailsvieweditrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 바인딩된 데이터 소스에 레코드가 들어 있지 않은 경우 표시되는 빈 데이터 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>빈 데이터 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> 에서 빈 데이터 행의 모양을 제어 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 빈 데이터 행에는 컨트롤에 바인딩되는 데이터 소스에 레코드가 없을 때 표시 됩니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `EmptyDataRowStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `EmptyDataRowStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> 빈 데이터 행에 대 한 글꼴 및 스타일 설정을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEmptyDataText/CS/detailsviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEmptyDataText/VB/detailsviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>레코드가 들어 있지 않은 데이터 소스에 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤이 바인딩될 때 렌더링되는 빈 데이터 행에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>빈 데이터 행에 대한 사용자 지정 콘텐츠가 들어 있는 <see cref="T:System.Web.UI.ITemplate" />입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 빈 데이터 행에 표시 되는 <xref:System.Web.UI.WebControls.DetailsView> 제어할 때 컨트롤에 바인딩되는 데이터 소스 레코드가 들어 있지 않습니다. 사용 하 여 빈 데이터 행에 대 한 사용자 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 속성입니다. Null 행에 대 한 사용자 지정 템플릿을 지정 하려면 먼저 `<EmptyDataTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<EmptyDataTemplate>` 태그입니다. 빈 데이터 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> 속성입니다. 설정 하 여 빈 데이터 행에 대 한 기본 제공 UI를 사용할 수는 또는 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두를 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> 및 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 속성이 우선 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 속성 사용자 지정 빈 데이터 행을 만들 수 있습니다.  
  
 [!code-aspx-csharp[DetailsViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEmptyDataTemplate/CS/detailsviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEmptyDataTemplate/VB/detailsviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataText" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataText : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>레코드가 들어 있지 않은 데이터 소스에 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤이 바인딩될 때 렌더링되는 빈 데이터 행에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>빈 데이터 행에 표시할 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 빈 데이터 행에 표시 되는 <xref:System.Web.UI.WebControls.DetailsView> 제어할 때 컨트롤에 바인딩되는 데이터 소스 레코드가 들어 있지 않습니다. 사용 된 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> 빈 데이터 행에 표시할 텍스트를 지정 하는 속성입니다. 빈 데이터 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle%2A> 속성입니다. 설정 하 여 빈 데이터 행에 대 한 사용자 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 또는 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두를 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> 및 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate%2A> 속성이 우선 합니다.  
  
 변수의 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> 뷰 상태에 저장 됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.EmptyDataText%2A> 빈 데이터 행에 표시할 텍스트를 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEmptyDataText/CS/detailsviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEmptyDataText/VB/detailsviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 모델 유효성 검사의 활성화 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>데이터 모델 유효성 검사를 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePagingCallbacks">
      <MemberSignature Language="C#" Value="public virtual bool EnablePagingCallbacks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePagingCallbacks" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnablePagingCallbacks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePagingCallbacks { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePagingCallbacks : bool with get, set" Usage="System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 페이징 작업에 클라이언트측 콜백 기능을 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>페이징 작업에 클라이언트측 콜백 기능을 사용하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks%2A> 클라이언트측 콜백 함수를 사용 하 여 페이징 작업을 수행할지 여부를 지정 하는 속성입니다. 사용 하도록 설정 하는 경우 페이징 페이지를 서버에 다시 게시 필요가 없도록 하는 콜백 기능을 사용 하 여 수행 됩니다.  
  
> [!NOTE]
>  클라이언트 쪽 페이징 기능 지원 Microsoft Internet Explorer 5.5 이상 및 Netscape 6.0 이상 에서만 됩니다.  
  
 변수의 <xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks%2A> 뷰 상태에 저장 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks%2A> 속성 페이징 작업에 클라이언트측 콜백 함수를 사용할 수 있도록 합니다.  
  
 [!code-aspx-csharp[DetailsViewEnablePagingCallbacks#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewEnablePagingCallbacks/CS/detailsviewenablepagingcallbackscs.aspx#1)]
 [!code-aspx-vb[DetailsViewEnablePagingCallbacks#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewEnablePagingCallbacks/VB/detailsviewenablepagingcallbacksvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="detailsView.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 목록 컨트롤에 데이터 바인딩이 필요하고 올바른 데이터 소스 컨트롤이 지정되었는지 여부를 확인한 후에 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 메서드를 호출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩이 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView> 은 컨트롤이 삽입 모드에 있습니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 클래스 컨트롤은 데이터 바인딩 전에 추가 처리를 구현 하려면이 메서드를 재정의할 수 있습니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeReadOnlyFields As Boolean, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeReadOnlyFields, bool includeKeys);" />
      <MemberSignature Language="F#" Value="abstract member ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool * bool -&gt; unit&#xA;override this.ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool * bool -&gt; unit" Usage="detailsView.ExtractRowValues (fieldValues, includeReadOnlyFields, includeKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeReadOnlyFields" Type="System.Boolean" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">필드 값을 저장하는 데 사용되는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</param>
        <param name="includeReadOnlyFields">읽기 전용 필드를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="includeKeys">기본 키 필드를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>표시된 각 필드 값을 검색하여 지정한 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 개체에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.ExtractRowValues%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView> 각 필드의 값을 검색 하는 컨트롤입니다. 이러한 데이터 원본 작업에 사용할 값 수 있습니다. 추출 된 값을 읽기 전용 필드 및 키 필드를 사용 하 여 포함 하는지 여부를 지정할 수 있습니다 합니다 `includeReadOnlyFields` 고 `includePrimaryKey` 매개 변수를 각각.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 클래스, 필드 값을 검색 하는 사용자 고유의 루틴을 생성 하도록이 메서드를 재정의할 수 있습니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="FieldHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FieldHeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FieldHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FieldHeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FieldHeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldHeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 머리글 열의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 머리글 열의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A> 속성에 필드 머리글 열의 모양을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 이 데이터 값의 필드 이름이 들어 있는 열입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `FieldHeaderStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `FieldHeaderStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle%2A> 필드 머리글 행에 대 한 글꼴 및 스타일 설정을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewFieldHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFieldHeaderStyle/CS/FieldHeaderStyleCS.aspx#1)]
 [!code-aspx-vb[DetailsViewFieldHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFieldHeaderStyle/VB/FieldHeaderStyleVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataControlFieldCollection Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataControlFieldCollection Fields" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.Fields" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Fields As DataControlFieldCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataControlFieldCollection ^ Fields { System::Web::UI::WebControls::DataControlFieldCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Fields : System.Web.UI.WebControls.DataControlFieldCollection" Usage="System.Web.UI.WebControls.DetailsView.Fields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlFieldCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataControlField" /> 컨트롤의 명시적으로 선언된 행 필드를 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataControlFieldCollection" /> 컨트롤의 명시적으로 선언된 모든 행 필드가 들어 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 행 필드를 명시적으로 선언 하는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 이러한 행 필드에 저장 됩니다는 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 속성 (컬렉션). <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 컬렉션도 프로그래밍 방식으로 명시적으로 선언 된 행의 컬렉션을 관리할 수 있습니다.  
  
> [!NOTE]
>  명시적으로 선언 된 행 필드를 자동으로 생성 된 행 필드와 함께에서 사용할 수 있습니다. 모두 사용 하는 명시적으로 선언 된 행 필드 뒤에 자동으로 생성 된 행 필드를 먼저 렌더링 됩니다. 자동으로 생성 된 행 필드에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 컬렉션입니다.  
  
 컨트롤의 행의 동작을 결정 하는 다른 행 필드 형식입니다. 다음 표에서 서로 다른 행에 사용할 수 있는 필드 형식을 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 컬렉션입니다.  
  
|행 필드 형식|설명|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundField>|데이터 원본에서 필드의 값을 텍스트로 표시합니다.|  
|<xref:System.Web.UI.WebControls.ButtonField>|명령 단추에 표시 된 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 이렇게 하면 추가 또는 제거 단추 등의 사용자 지정 단추 컨트롤을 사용 하 여 행을 표시할 수 있습니다.|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|확인란을 표시 합니다 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 이 행 필드 형식은 부울 값을 사용 하 여 필드를 표시 하려면 일반적으로 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.CommandField>|기본 제공 명령 표시 편집을 수행 하는 단추를 삽입 또는 삭제 작업에는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|하이퍼링크로 데이터 원본의 필드의 값을 표시합니다. 이 행 필드 형식을 사용 하면 두 번째 필드 하이퍼링크의 URL에 바인딩할 수 있습니다.|  
|<xref:System.Web.UI.WebControls.ImageField>|에 이미지를 표시 합니다 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.TemplateField>|행에 대 한 사용자 정의 콘텐츠 표시는 <xref:System.Web.UI.WebControls.DetailsView> 지정한 템플릿에 따라 제어 합니다. 이 행 필드 형식에는 사용자 지정 행 필드를 만들 수 있습니다.|  
  
 에 대 한 행 필드를 명시적으로 선언 하는 <xref:System.Web.UI.WebControls.DetailsView> 첫 번째 집합을 제어 합니다 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> 속성을 `false`입니다. 다음으로 열기 및 닫기 추가 `<Fields>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 마지막으로 열고 닫는 간의 포함 시킬 행 필드를 나열 합니다. `<Fields>` 태그입니다. 행 필드가 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 행에 표시 된 순서 대로 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 컬렉션입니다.  
  
 행 필드를 프로그래밍 방식으로 추가할 수는 있지만 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 컬렉션 쉽습니다에서 선언적으로 행 필드를 나열 하는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 사용 하 여는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 의 각 행 필드를 표시 하거나 숨기는 속성.  
  
 경우는 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 행 필드의 속성 `false`, 행에 표시 되지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤과 행에 대 한 데이터 해도 왕복 클라이언트. 왕복 수 있도록 표시 되지 않는 행에 대 한 데이터를 원하는 경우 필드 이름을 추가 합니다 <xref:System.Web.UI.WebControls.DetailsView.DataKeyNames%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 선언적으로 행 필드를 추가 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 의 컬렉션을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다.  
  
 [!code-aspx-csharp[DetailsViewFields#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFields/CS/DetailsViewFieldsCS.aspx#1)]
 [!code-aspx-vb[DetailsViewFields#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFields/VB/DetailsViewFieldsVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlFieldCollection" />
        <altmember cref="T:System.Web.UI.WebControls.BoundField" />
        <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As DetailsViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DetailsViewRow ^ FooterRow { System::Web::UI::WebControls::DetailsViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterRow : System.Web.UI.WebControls.DetailsViewRow" Usage="System.Web.UI.WebControls.DetailsView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 컨트롤의 바닥글 행을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 컨트롤의 바닥글 행을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바닥글 행의 맨 아래에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 시기를 제어 합니다 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 또는 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 속성을 설정 합니다. 사용 된 <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> 속성을 프로그래밍 방식으로 액세스를 <xref:System.Web.UI.WebControls.DetailsViewRow> 바닥글 행을 나타내는 개체입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.GridView.FooterRow%2A> 속성을 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 바닥글 행을 만듭니다는 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 이벤트입니다.  
  
 예를 들어 사용자 지정 콘텐츠를 추가할 때 바닥글 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. 수정을 <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> 후 속성에 수행 해야 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 렌더링 되었으면이 고, 그렇지는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에는 모든 변경 사항을 덮어씁니다.  
  
 바닥글 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A> 의 바닥글 행에 액세스 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 하는 동안 제어는 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 이벤트. <xref:System.Web.UI.WebControls.Label> 행에 있는 사용자 지정 바닥글 그러면 현재 페이지 번호를 사용 하 여 업데이트 됩니다.  
  
 [!code-aspx-csharp[DetailsViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFooterTemplate/CS/detailsviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFooterTemplate/VB/detailsviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 바닥글 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 바닥글 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바닥글 행의 맨 아래에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 시기를 제어 합니다 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 또는 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 속성을 설정 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 바닥글 행의 모양을 제어 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `FooterStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `FooterStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 바닥글 행에 대 한 글꼴 및 스타일 설정을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFooterText/CS/detailsviewfootertextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFooterText/VB/detailsviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DetailsView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 바닥글 행에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>바닥글 행에 대한 사용자 지정 내용이 들어 있는 <see cref="T:System.Web.UI.ITemplate" />입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바닥글 행의 맨 아래에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 시기를 제어 합니다 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 또는 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 속성을 설정 합니다. 사용 하 여 바닥글 행에 대 한 사용자 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 속성입니다. 바닥글 행에 대 한 사용자 지정 템플릿을 지정 하려면 먼저 `<FooterTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<FooterTemplate>` 태그입니다. 바닥글 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 속성입니다. 또는 표시할 수 있습니다 단순히 텍스트 바닥글 행에서 설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두를 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 및 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 속성이 우선 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 속성 사용자 지정 바닥글 행을 만들 수 있습니다.  
  
 [!code-aspx-csharp[DetailsViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFooterTemplate/CS/detailsviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFooterTemplate/VB/detailsviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterText : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 바닥글 행에 표시할 텍스트를 가져오거나 설정합니다.</summary>
        <value>바닥글 행에 표시할 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바닥글 행의 맨 아래에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 시기를 제어 합니다 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 또는 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 속성을 설정 합니다. 사용 된 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 바닥글 행에 표시할 텍스트를 지정 하는 속성입니다. 바닥글 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.DetailsView.FooterStyle%2A> 속성입니다. 설정 하 여 바닥글 행에 대 한 사용자 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 또는 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두를 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 및 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.DetailsView.FooterTemplate%2A> 속성이 우선 합니다.  
  
 변수의 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 뷰 상태에 저장 됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.FooterText%2A> 바닥글 행에 표시할 텍스트를 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewFooterText/CS/detailsviewfootertextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewFooterText/VB/detailsviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string&#xA;override this.GetCallbackResult : unit -&gt; string" Usage="detailsView.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤을 대상으로 하는 콜백 이벤트의 결과를 반환합니다.</summary>
        <returns>콜백의 결과입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView> 제어 구현 합니다 <xref:System.Web.UI.ICallbackEventHandler> 사용 하 여 인터페이스를 <xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A> 데이터를 검색할 및 <xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult%2A> 컨트롤에 검색된 된 데이터를 반환 하는 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackScript">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackScript (buttonControl As IButtonControl, argument As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackScript(System::Web::UI::WebControls::IButtonControl ^ buttonControl, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackScript : System.Web.UI.WebControls.IButtonControl * string -&gt; string&#xA;override this.GetCallbackScript : System.Web.UI.WebControls.IButtonControl * string -&gt; string" Usage="detailsView.GetCallbackScript (buttonControl, argument)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">콜백을 초기화한 컨트롤입니다.</param>
        <param name="argument">콜백 코드입니다.</param>
        <summary>지정한 인수를 사용하여 만든 콜백 문자열을 반환합니다.</summary>
        <returns>클라이언트에 보낼 전체 콜백 문자열입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.DetailsView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 모눈선 스타일을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.GridLines" /> 값 중 하나입니다. 기본값은 <see langword="GridLines.Both" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DetailsView.GridLines%2A> 속성에 대 한 모눈선 스타일을 지정 하는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 다음 표에서 사용 가능한 스타일을 보여 줍니다.  
  
|스타일|설명|  
|-----------|-----------------|  
|`GridLines.None`|눈금선이 없는 표시 됩니다.|  
|`GridLines.Horizontal`|가로 모눈선만 표시 됩니다.|  
|`GridLines.Vertical`|세로 모눈선만 표시 됩니다.|  
|`GridLines.Both`|가로 및 세로 모눈선을 표시합니다.|  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.GridLines%2A> 속성에서 모든 눈금선을 숨기려면는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤.  
  
 [!code-aspx-csharp[DetailsViewGridLines#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewGridLines/CS/detailsviewgridlinescs.aspx#1)]
 [!code-aspx-vb[DetailsViewGridLines#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewGridLines/VB/detailsviewgridlinesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CellSpacing" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As DetailsViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DetailsViewRow ^ HeaderRow { System::Web::UI::WebControls::DetailsViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderRow : System.Web.UI.WebControls.DetailsViewRow" Usage="System.Web.UI.WebControls.DetailsView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 컨트롤의 머리글 행을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 컨트롤의 머리글 행을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 맨 위에 있는 머리글 행이 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 제어를 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 또는 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 속성을 설정 합니다. 사용 된 <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A> 속성을 프로그래밍 방식으로 액세스를 <xref:System.Web.UI.WebControls.DetailsViewRow> 머리글 행을 나타내는 개체입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A> 속성을 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 머리글 행을 만듭니다는 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 이벤트입니다.  
  
 예를 들어 사용자 지정 콘텐츠를 추가할 때 머리글 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. 수정을 <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A> 후 속성에 수행 해야 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 렌더링 되었으면이 고, 그렇지는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에는 모든 변경 사항을 덮어씁니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.를 <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A> 의 머리글 행에 액세스 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 하는 동안 제어는 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 이벤트. <xref:System.Web.UI.WebControls.Label> 행에 있는 사용자 지정 헤더는 현재 페이지 번호도 업데이트 됩니다.  
  
 [!code-aspx-csharp[DetailsViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderTemplate/CS/detailsviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderTemplate/VB/detailsviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 머리글 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 머리글 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 맨 위에 있는 머리글 행이 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 제어를 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 또는 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 속성을 설정 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> 속성에 헤더 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `HeaderStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `HeaderStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> 머리글 행에 대 한 글꼴 및 스타일 설정을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderText/CS/detailsviewheadertextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderText/VB/detailsviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DetailsView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 머리글 행에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>머리글 행에 대한 사용자 지정 내용이 들어 있는 <see cref="T:System.Web.UI.ITemplate" />입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 맨 위에 있는 머리글 행이 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 제어를 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 또는 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 속성을 설정 합니다. 사용 하 여 머리글 행에 대 한 사용자 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 속성입니다. 머리글 행에 대 한 사용자 지정 템플릿을 지정 하려면 먼저 `<HeaderTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<HeaderTemplate>` 태그입니다. 머리글 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> 속성입니다. 또는 표시할 수 있습니다 단순히 텍스트 머리글 행에서 설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두를 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 및 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 속성이 우선 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 속성 사용자 지정 헤더 행을 만들 수 있습니다.  
  
 [!code-aspx-csharp[DetailsViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderTemplate/CS/detailsviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderTemplate/VB/detailsviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 머리글 행에 표시할 텍스트를 가져오거나 설정합니다.</summary>
        <value>머리글 행에 표시할 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 맨 위에 있는 머리글 행이 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 제어를 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 또는 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 속성을 설정 합니다. 사용 된 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 머리글 행에 표시할 텍스트를 지정 하는 속성입니다. 머리글 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.DetailsView.HeaderStyle%2A> 속성입니다. 설정 하 여 머리글 행에 대 한 사용자 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 또는 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두를 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 및 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.DetailsView.HeaderTemplate%2A> 속성이 우선 합니다.  
  
 변수의 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 뷰 상태에 저장 됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.HeaderText%2A> 머리글 행에 표시할 텍스트를 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderText/CS/detailsviewheadertextcs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderText/VB/detailsviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.DetailsView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 내에 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 가로 맞춤을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 값 중 하나입니다. 기본값은 <see langword="HorizontalAlign.NotSet" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 합니다 <xref:System.Web.UI.WebControls.DetailsView.HorizontalAlign%2A> 의 가로 맞춤을 지정 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 페이지 내에 있는 컨트롤입니다. 다음 표에서 다양 한 가로 맞춤 스타일을 보여 줍니다.  
  
|HorizontalAlign 값|설명|  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|가로 맞춤을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 설정 되지 않았습니다.|  
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 페이지의 왼쪽에 맞춰집니다.|  
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤 가운데 페이지에 표시 됩니다.|  
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤은 페이지의 오른쪽에 맞춰집니다.|  
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.DetailsView> 컨트롤 페이지의 왼쪽 및 오른쪽 여백 양쪽에 맞춥니다.|  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.HorizontalAlign%2A> 속성을 지정 하는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 페이지의 가운데에 맞춰야 합니다.  
  
 [!code-aspx-csharp[DetailsViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHorizontalAlign/CS/detailsviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[DetailsViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHorizontalAlign/VB/detailsviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.DetailsViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::DetailsViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.DetailsViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.DetailsViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="detailsView.InitializePager (row, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.DetailsViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">페이저 행이 들어 있는 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" />입니다.</param>
        <param name="pagedDataSource">현재 페이지에 대한 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.PagedDataSource" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 대한 페이저 행을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.InitializePager%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView> 페이저 행을 제어 합니다. 만듭니다는 <xref:System.Web.UI.WebControls.TableCell> 의 속성을 사용 하 여 탐색 컨트롤이 포함 된 개체를 <xref:System.Web.UI.WebControls.PagedDataSource> 에 포함 된 개체는 `pagedDataSource` 매개 변수입니다. 셀에서 지정한 행에 추가 됩니다는 `row` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 클래스 자체는 페이저 행을 생성 하도록이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.DataControlField field);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.DetailsViewRow row, class System.Web.UI.WebControls.DataControlField field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As DetailsViewRow, field As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::DetailsViewRow ^ row, System::Web::UI::WebControls::DataControlField ^ field);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRow : System.Web.UI.WebControls.DetailsViewRow * System.Web.UI.WebControls.DataControlField -&gt; unit&#xA;override this.InitializeRow : System.Web.UI.WebControls.DetailsViewRow * System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="detailsView.InitializeRow (row, field)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.DetailsViewRow" />
        <Parameter Name="field" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="row">초기화할 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" />입니다.</param>
        <param name="field">행에 해당하는 <see cref="T:System.Web.UI.WebControls.DataControlField" />입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 개체를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.InitializeRow%2A> 메서드는 호출 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.DetailsView> 초기화 된 컨트롤 <xref:System.Web.UI.WebControls.DetailsViewRow> 개체입니다. 행에 대 한 초기화 되는 <xref:System.Web.UI.WebControls.DataControlField> 에 포함 된 개체는 `field` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 클래스를 사용자 고유의 사용자 지정 행을 생성 하도록이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : bool -&gt; unit&#xA;override this.InsertItem : bool -&gt; unit" Usage="detailsView.InsertItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">메서드가 호출될 때 페이지 유효성 검사를 수행하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>데이터 소스에 현재 레코드를 삽입합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 삽입 모드에 있으면, 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.InsertItem%2A> 프로그래밍 방식으로 데이터 소스의 현재 레코드를 삽입 하는 방법입니다. 외부에서 현재 레코드를 삽입 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.DetailsView> 와 같은 페이지의 다른 컨트롤을 제어 합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.DetailsView> 이 방법이 고, 그렇지 않으면 호출 하는 경우 컨트롤이 삽입 모드에 있어야는 <xref:System.Web.HttpException> 예외가 throw 됩니다.  
  
 삽입 작업 전에 페이지 유효성 검사를 수행할지 여부를 지정 하려면 사용 된 `causesValidation` 매개 변수입니다. 이 메서드를 호출 발생 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemInserted> 고 <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤이 삽입 모드에 있지 않은 상태에서 이 메서드를 호출한 경우  
  
또는 
<see cref="T:System.Web.UI.DataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.DetailsView" />가 <see langword="null" />인 경우</exception>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 삽입 작업을 수행하는 경우 호출되는 페이지의 메서드에 대한 이름을 가져오거나 설정합니다.</summary>
        <value>컨트롤에서 삽입 작업을 수행할 때 호출되는 페이지상의 메서드 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web Forms 모델 바인딩 사용에 대 한 자습서 시리즈를 참조 하세요 [모델 바인딩 및 Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤이 삽입 모드에 있을 때 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 있는 데이터 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤이 삽입 모드에 있을 때 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 있는 데이터 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터의 행을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤은이 스타일을 사용 하 여 표시 됩니다 때는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 삽입 모드에 있으면입니다. 사용 된 <xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> 삽입 모드에 있는 데이터 행의 모양을 제어 하는 속성입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `InsertRowStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `InsertRowStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.InsertRowStyle%2A> 속성을 데이터에 대 한 글꼴 및 스타일 설정을 지정할 때 행는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 삽입 모드에 있으면입니다.  
  
 [!code-aspx-csharp[DetailsViewInsertRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewInsertRowStyle/CS/detailsviewinsertrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewInsertRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewInsertRowStyle/VB/detailsviewinsertrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsBindableType : Type -&gt; bool&#xA;override this.IsBindableType : Type -&gt; bool" Usage="detailsView.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">확인할 데이터 형식을 나타내는 <see cref="T:System.Type" />입니다.</param>
        <summary>지정된 데이터 형식을 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 필드에 바인딩할 수 있는지 여부를 나타냅니다.</summary>
        <returns>지정된 데이터 형식을 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 필드에 바인딩할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.IsBindableType%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView> 지정된 된 데이터 형식 필드 컨트롤에 바인딩할 수 있는지 여부를 확인 하기 위해 컨트롤입니다. <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 데이터 형식을 지원 합니다.  
  
 와 같은 모든 기본 데이터 형식을 <xref:System.Boolean>, <xref:System.Byte>, 및 <xref:System.Int32>  
  
 <xref:System.DateTime>  
  
 <xref:System.Decimal>  
  
 <xref:System.Guid>  
  
 <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 클래스를 추가 하거나에서 사용할 수 있는 데이터 유형을 제한 하려면이 메서드를 재정의할 수 있습니다는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 제어 합니다.</para></block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DetailsViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.DetailsViewCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.DetailsViewCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 단추를 클릭하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> 이벤트는 단추를는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> 개체가 명령 이름과 클릭 한 단추의 명령 인수를 확인할 수 있는 이벤트 처리기에 전달 됩니다. 현재 레코드의 인덱스를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> 단추 클릭을 처리 하는 이벤트를 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 연락처 추가 단추를 클릭할 항목에 추가 됩니다을 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
 [!code-aspx-csharp[DetailsViewItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewItemCommand/CS/detailsviewitemcommandcs.aspx#1)]
 [!code-aspx-vb[DetailsViewItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewItemCommand/VB/detailsviewitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : EventHandler " Usage="member this.ItemCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에서 레코드가 만들어질 때 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 에서 레코드를 만들 때마다 이벤트가 발생을 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 이 컨트롤을 처음으로 렌더링 하는 경우 또는 사용자가 다른 레코드를 탐색할 때 발생할 수 있습니다. 이 이벤트가 발생할 때마다 행을 사용자 지정 콘텐츠를 추가 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공 합니다.이 이벤트를 사용할 수 있습니다.  
  
 머리글, 바닥글 및 페이저 행에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView> 사용 하 여 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.DetailsView.FooterRow%2A>, <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A>, 또는 <xref:System.Web.UI.WebControls.DetailsView.BottomPagerRow%2A> 속성을 각각. 하나에 액세스 하도록 데이터 행을 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> 컬렉션입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 현재 페이징 통계를 사용 하 여 사용자 지정 페이저 행을 업데이트 하는 이벤트입니다.  
  
 [!code-aspx-csharp[DetailsViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewHeaderTemplate/CS/detailsviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewHeaderTemplate/VB/detailsviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As DetailsViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleted : System.Web.UI.WebControls.DetailsViewDeletedEventHandler " Usage="member this.ItemDeleted : System.Web.UI.WebControls.DetailsViewDeletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 삭제 단추를 클릭하면 삭제 작업 후에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> 이벤트는 삭제 단추를를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭 하 고, 삭제 작업 후 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삭제 작업의 결과 확인 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs> 개체가 영향을 받는 행와 발생 한 예외의 수를 확인할 수 있는 이벤트 처리기에 전달 됩니다. 예외가 처리 되었는지 여부를 이벤트 처리기를 설정 하 여를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewDeletedEventArgs.ExceptionHandled%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> 새로 고침 하는 이벤트를 <xref:System.Web.UI.WebControls.GridView> 후 제어는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 삭제 작업을 수행 합니다. 그러면 합니다 <xref:System.Web.UI.WebControls.GridView> 제어와 동기화를 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewDeletedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As DetailsViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleting : System.Web.UI.WebControls.DetailsViewDeleteEventHandler " Usage="member this.ItemDeleting : System.Web.UI.WebControls.DetailsViewDeleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 삭제 단추를 클릭하면 삭제 작업 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 이벤트는 삭제 단추를는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭할 삭제 작업 전에 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삭제 작업을 취소 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs> 개체는 삭제할 레코드의 인덱스를 확인 하 고 삭제 작업을 취소 해야 함을 나타낼 수는 이벤트 처리기에 전달 됩니다. 삭제 작업을 취소 하려면 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`입니다. 조작할 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Keys%2A> 고 <xref:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Values%2A> 컬렉션 값이 데이터 원본에 전달 되기 전에 필요한 경우.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 사용자의 마지막 항목을 삭제 하려고 시도 하는 경우 삭제 작업을 취소 하는 이벤트를 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 [!code-aspx-csharp[DetailsViewItemDeleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewItemDeleting/CS/detailsviewitemdeletingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewItemDeleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewItemDeleting/VB/detailsviewitemdeletingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewDeleteEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Values" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As DetailsViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewInsertedEventHandler ^ ItemInserted;" />
      <MemberSignature Language="F#" Value="member this.ItemInserted : System.Web.UI.WebControls.DetailsViewInsertedEventHandler " Usage="member this.ItemInserted : System.Web.UI.WebControls.DetailsViewInsertedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 삽입 단추를 클릭하면 삽입 작업 후에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemInserted> 이벤트는 삽입 단추를는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭할 삽입 작업 후 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삽입 작업의 결과 확인 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs> 개체가 영향을 받는 행와 발생 한 예외의 수를 확인할 수 있는 이벤트 처리기에 전달 됩니다. 예외가 처리 되었는지 여부를 이벤트 처리기를 설정 하 여를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.ExceptionHandled%2A> 속성입니다. 컨트롤이 삽입 모드에서 삽입 작업 후로 설정 합니다 <xref:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.KeepInInsertMode%2A> 속성을 `true`입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DetailsView.ItemInserted> 새로 고침 하는 이벤트를 <xref:System.Web.UI.WebControls.GridView> 후 제어는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 삽입 작업을 수행 합니다. 그러면 합니다 <xref:System.Web.UI.WebControls.GridView> 제어와 동기화를 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewInsertedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As DetailsViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewInsertEventHandler ^ ItemInserting;" />
      <MemberSignature Language="F#" Value="member this.ItemInserting : System.Web.UI.WebControls.DetailsViewInsertEventHandler " Usage="member this.ItemInserting : System.Web.UI.WebControls.DetailsViewInsertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 삽입 단추를 클릭하면 삽입 작업 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 이벤트는 삽입 단추를를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭할 삽입 작업 전에 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삽입 작업을 취소 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs> 개체가 삽입 작업을 취소 해야 함을 나타낼 수 있는 이벤트 처리기에 전달 됩니다. 삽입 작업을 취소 하려면 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`입니다. 조작할 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewInsertEventArgs.Values%2A> 컬렉션에 값이 데이터 원본에 전달 되기 전에 필요한 경우.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 새 레코드를 데이터 원본에 추가 되기 전에 사용자가 입력 한 값을 HTML로 인코딩하는 이벤트입니다.  
  
 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewInsertEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewInsertEventArgs.Values" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As DetailsViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdated : System.Web.UI.WebControls.DetailsViewUpdatedEventHandler " Usage="member this.ItemUpdated : System.Web.UI.WebControls.DetailsViewUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 업데이트 단추를 클릭하면 업데이트 작업 후에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> 이벤트는 업데이트 단추를는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭할 업데이트 작업 후 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 업데이트 작업의 결과 확인 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> 개체가 영향을 받는 행와 발생 한 예외의 수를 확인할 수 있는 이벤트 처리기에 전달 됩니다. 예외가 처리 되었는지 여부를 이벤트 처리기를 설정 하 여를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> 속성입니다. 컨트롤이 편집 모드에서 업데이트 작업 후로 설정 합니다 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> 속성을 `true`입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> 새로 고침 하는 이벤트를 <xref:System.Web.UI.WebControls.GridView> 후 제어는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 업데이트 작업을 수행 합니다. 그러면 합니다 <xref:System.Web.UI.WebControls.GridView> 제어와 동기화를 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As DetailsViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdating : System.Web.UI.WebControls.DetailsViewUpdateEventHandler " Usage="member this.ItemUpdating : System.Web.UI.WebControls.DetailsViewUpdateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 업데이트 단추를 클릭하면 업데이트 작업 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> 이벤트는 업데이트 단추를를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭할 업데이트 작업이 수행 되기 전에 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 업데이트 작업을 취소 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs> 개체가 업데이트 되는 레코드의 인덱스를 확인 하 고 업데이트 작업을 취소 해야 함을 나타낼 수 있는 이벤트 처리기에 전달 됩니다. 업데이트 작업을 취소 하려면 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`입니다. 조작할 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys%2A>, <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues%2A>, 및 <xref:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues%2A> 컬렉션 값이 데이터 원본에 전달 되기 전에 필요한 경우. 이러한 컬렉션을 사용 하는 일반적인 방법은 데이터 원본에 저장 되기 전에 사용자가 제공한 값을 HTML로 인코딩하는 합니다. 이렇게 하면 스크립트 삽입 공격을 방지 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> 이벤트 데이터 소스의 레코드를 업데이트 하기 전에 사용자가 입력 한 값을 HTML로 인코딩합니다.  
  
 [!code-aspx-csharp[DetailsViewComplex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewComplex/CS/detailsviewcomplexcs.aspx#1)]
 [!code-aspx-vb[DetailsViewComplex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewComplex/VB/detailsviewcomplexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdateEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="detailsView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> 컨트롤의 상태를 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 속성이 <see langword="false" />로 설정되어 있는 경우에도 유지해야 하는 <see cref="P:System.Web.UI.Control.EnableViewState" /> 컨트롤의 속성 상태를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.LoadControlState%2A> 메서드를 사용 하 여 속성의 상태를 로드 하는 <xref:System.Web.UI.WebControls.DetailsView> 경우에 유지 해야 하는 컨트롤을 <xref:System.Web.UI.Control.EnableViewState%2A> 속성이 `false`합니다.  
  
> [!NOTE]
>  이 메서드는 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="detailsView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> 컨트롤의 상태를 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</param>
        <summary>이전에 저장된 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 뷰 상태를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는.NET Framework 인프라에서 기본적으로 사용 하며 사용자 코드에서 직접 사용할 수 없습니다. 그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.LoadViewState%2A> 메서드를 사용 하 여 이전에 저장 된 뷰 상태를 로드 하는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ModeChanged : EventHandler " Usage="member this.ModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤 모드를 편집, 삽입 및 읽기 전용 모드 사이에서 변경하려 하면 <see cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" /> 속성이 업데이트된 후에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 이벤트는 때를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 뒤 편집, 삽입 및 읽기 전용 모드 사이 변경 하 려는 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 속성이 업데이트 됩니다. 동기화와 같은 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.DetailsView> 이 이벤트가 발생할 때마다 다른 컨트롤을 사용 하 여 제어 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 머리글 행의 현재 모드를 표시 하는 이벤트입니다.  
  
 [!code-aspx-csharp[DetailsViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewModeChanged/CS/detailsviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[DetailsViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewModeChanged/VB/detailsviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As DetailsViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewModeEventHandler ^ ModeChanging;" />
      <MemberSignature Language="F#" Value="member this.ModeChanging : System.Web.UI.WebControls.DetailsViewModeEventHandler " Usage="member this.ModeChanging : System.Web.UI.WebControls.DetailsViewModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤 모드를 편집, 삽입 및 읽기 전용 모드 사이에서 변경하려 하면 <see cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" /> 속성이 업데이트되기 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.ModeChanging> 이벤트는 때를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 시도 하기 전에 편집, 삽입 및 읽기 전용 모드 사이 변경 하는 <xref:System.Web.UI.WebControls.DetailsView.CurrentMode%2A> 속성이 업데이트 됩니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다에서 모드 변경이 취소와 같은 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.DetailsViewModeEventArgs> 개체의 편집 작업을 취소 하는 사용자의 결과 모드 변경 했는지 확인 하려면 또는 모드 변경을 취소 하려면 새 모드를 확인할 수 있는 이벤트 처리기에 전달 됩니다. 새 모드를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.NewMode%2A> 속성입니다. 모드 변경 결과 사용자의 편집 작업을 취소 했는지 여부를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsViewModeEventArgs.CancelingEdit%2A> 속성입니다. 설정 하 여 모드 변경을 취소할 수 있습니다 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.ModeChanging> 경우 페이징을 사용 하지 않도록 설정 하는 이벤트 기능를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 편집 모드 인지 합니다.  
  
 [!code-aspx-csharp[DetailsViewModeChanging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewModeChanging/CS/detailsviewmodechangingcs.aspx#1)]
 [!code-aspx-vb[DetailsViewModeChanging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewModeChanging/VB/detailsviewmodechangingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewModeEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewModeEventArgs.NewMode" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="detailsView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>웹 서버 컨트롤의 이벤트가 페이지의 UI 서버 컨트롤 계층 구조로 전달되었는지 여부를 확인합니다.</summary>
        <returns>이벤트가 취소되었으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.OnBubbleEvent%2A> 메서드 구현 된 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> 페이지 계층에 자식 컨트롤의 이벤트를 전달 하는 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataSourceViewChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataSourceViewChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataSourceViewChanged : obj * EventArgs -&gt; unit" Usage="detailsView.OnDataSourceViewChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.DataSourceView.DataSourceViewChanged> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="detailsView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnInit%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.Control.Init> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnInit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DetailsViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DetailsViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DetailsViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DetailsViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.DetailsViewCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.DetailsViewCommandEventArgs -&gt; unit" Usage="detailsView.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnItemCommand%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnItemCommand%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : EventArgs -&gt; unit&#xA;override this.OnItemCreated : EventArgs -&gt; unit" Usage="detailsView.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnItemCreated%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnItemCreated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.DetailsViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.DetailsViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As DetailsViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::DetailsViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleted : System.Web.UI.WebControls.DetailsViewDeletedEventArgs -&gt; unit&#xA;override this.OnItemDeleted : System.Web.UI.WebControls.DetailsViewDeletedEventArgs -&gt; unit" Usage="detailsView.OnItemDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.DetailsViewDeletedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnItemDeleted%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnItemDeleted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.DetailsViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.DetailsViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As DetailsViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::DetailsViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleting : System.Web.UI.WebControls.DetailsViewDeleteEventArgs -&gt; unit&#xA;override this.OnItemDeleting : System.Web.UI.WebControls.DetailsViewDeleteEventArgs -&gt; unit" Usage="detailsView.OnItemDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.DetailsViewDeleteEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnItemDeleting%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnItemDeleting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" /> 이벤트에 대한 처리기가 없는 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.DetailsViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.DetailsViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As DetailsViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::DetailsViewInsertedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserted : System.Web.UI.WebControls.DetailsViewInsertedEventArgs -&gt; unit&#xA;override this.OnItemInserted : System.Web.UI.WebControls.DetailsViewInsertedEventArgs -&gt; unit" Usage="detailsView.OnItemInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.DetailsViewInsertedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnItemInserted%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView.ItemInserted> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnItemInserted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.DetailsViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.DetailsViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As DetailsViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::DetailsViewInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserting : System.Web.UI.WebControls.DetailsViewInsertEventArgs -&gt; unit&#xA;override this.OnItemInserting : System.Web.UI.WebControls.DetailsViewInsertEventArgs -&gt; unit" Usage="detailsView.OnItemInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.DetailsViewInsertEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnItemInserting%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView.ItemInserting> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnItemInserting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" /> 이벤트에 대한 처리기가 없는 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As DetailsViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::DetailsViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdated : System.Web.UI.WebControls.DetailsViewUpdatedEventArgs -&gt; unit&#xA;override this.OnItemUpdated : System.Web.UI.WebControls.DetailsViewUpdatedEventArgs -&gt; unit" Usage="detailsView.OnItemUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnItemUpdated%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnItemUpdated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.DetailsViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.DetailsViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As DetailsViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::DetailsViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdating : System.Web.UI.WebControls.DetailsViewUpdateEventArgs -&gt; unit&#xA;override this.OnItemUpdating : System.Web.UI.WebControls.DetailsViewUpdateEventArgs -&gt; unit" Usage="detailsView.OnItemUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.DetailsViewUpdateEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnItemUpdating%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnItemUpdating%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" /> 이벤트에 대한 처리기가 없는 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanged : EventArgs -&gt; unit&#xA;override this.OnModeChanged : EventArgs -&gt; unit" Usage="detailsView.OnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnModeChanged%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView.ModeChanged> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnModeChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.DetailsViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.DetailsViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As DetailsViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::DetailsViewModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanging : System.Web.UI.WebControls.DetailsViewModeEventArgs -&gt; unit&#xA;override this.OnModeChanging : System.Web.UI.WebControls.DetailsViewModeEventArgs -&gt; unit" Usage="detailsView.OnModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.DetailsViewModeEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnModeChanging%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView.ModeChanging> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnModeChanging%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" /> 이벤트에 대한 처리기가 없는 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : EventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : EventArgs -&gt; unit" Usage="detailsView.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.DetailsViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.DetailsViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As DetailsViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::DetailsViewPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanging : System.Web.UI.WebControls.DetailsViewPageEventArgs -&gt; unit&#xA;override this.OnPageIndexChanging : System.Web.UI.WebControls.DetailsViewPageEventArgs -&gt; unit" Usage="detailsView.OnPageIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.DetailsViewPageEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DetailsView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤이 데이터 소스 컨트롤에 바인딩되어 있지 않은 상태에서 페이징 작업이 취소되지 않고 이벤트에 대해 이벤트 처리기가 등록되지 않을 때 이 메서드가 호출된 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected override void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPagePreLoad(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPagePreLoad (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPagePreLoad(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPagePreLoad : obj * EventArgs -&gt; unit" Usage="detailsView.OnPagePreLoad (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트를 발생시킨 <see cref="T:System.Web.UI.Page" />입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>컨트롤이 로드되기 전에 데이터 바인딩된 컨트롤의 초기화된 상태를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.OnPagePreLoad%2A> 메서드는 페이지의 수명 주기 내에서 데이터 바인딩이 발생 하는 경우 제어를 사용 합니다. 데이터 바인딩된 컨트롤의 내부 초기화 상태를 설정 하 여 수행 합니다. 컨트롤의 상태를 초기화 하는 동안 설정 됩니다는 <xref:System.Web.UI.Page.PreLoad> 페이지의 수명 주기 단계는 <xref:System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged%2A> 이벤트 처리기가 컨트롤을 해당 데이터에 다시 바인딩해야 신호 단계 후 컨트롤의 데이터 속성이 변경 될 때마다 호출 전에 렌더링 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.OnPagePreLoad%2A> 메서드를 재정의 하 여 합니다 <xref:System.Web.UI.WebControls.DetailsView> 설정 하는 클래스는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 속성을 `true` HTTP 요청은 포스트백 및 보기 상태 사용 하지만 데이터 바인딩된 컨트롤을 아직 바인딩되지 않은 경우에서. 이 시나리오는와 같은 컨트롤을 사용 하 여 일반적 <xref:System.Web.UI.WebControls.Wizard> 및 <xref:System.Web.UI.WebControls.MultiView>, 런타임 시 컨트롤의 표시 유형을 변경 되는 위치입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
        <altmember cref="N:System.Web.UI.WebControls" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="detailsView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 렌더링 콘텐츠와 뷰 상태를 저장 하기 전에 필요한 모든 사전 렌더링 단계를 수행 하는 서버 컨트롤을 알립니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 클래스입니다.  
  
 또한 <xref:System.Web.UI.WebControls.DetailsView.OnPreRender%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.DetailsView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스의 레코드 수를 가져옵니다.</summary>
        <value>데이터 소스의 레코드 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성은 `null`, `0` 반환 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageIndex : int with get, set" Usage="System.Web.UI.WebControls.DetailsView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표시된 레코드의 인덱스를 가져오거나 설정합니다.</summary>
        <value>내부 데이터 소스에서 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 표시되는 데이터 항목의 인덱스입니다. 이 인덱스는 0부터 시작합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징 기능을 활성화 하는 경우 (때 합니다 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 속성이로 설정 되어 `true`)를 사용 하 여를 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> 현재 표시 된 레코드의 인덱스를 확인 하는 속성. 또한 프로그래밍 방식으로 표시 된 레코드를 변경 하려면이 속성을 사용할 수 있습니다.  
  
> [!NOTE]
>  표시 된 레코드의 페이지 번호를 확인 하려면이 속성을 사용도 수 페이징 기능을 사용 하는 경우 그러나이 속성은 0부터 시작 주의 합니다.  
  
 데이터 원본에 있는 항목의 총 수를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsView.PageCount%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see langword="-1" />보다 작은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : EventHandler " Usage="member this.PageIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> 속성 값이 변경될 때 페이징 작업 후에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView> 를 발생 시킵니다를 <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> 페이저 단추 이벤트 (단추를 사용 하 여 해당 `CommandName` "페이지"로 설정 하는 속성) 컨트롤 내에서 클릭 한 후를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 페이징 작업을 처리 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> 속성입니다.  
  
 페이저 단추는 일반적으로의 페이저 행에는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 이 이벤트는 대개 동기화를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.GridView> 컨트롤 또는의 동작을 설정 하는 <xref:System.Web.UI.WebControls.DetailsView> 페이징 작업 후 컨트롤입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanged> 반환 하는 이벤트를 <xref:System.Web.UI.WebControls.DetailsView> 사용자가 다른 레코드를 탐색할 때 읽기 전용 모드로 합니다.  
  
 [!code-aspx-csharp[DetailsViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewChangeMode/CS/detailsviewchangemodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewChangeMode/VB/detailsviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DetailsViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As DetailsViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DetailsViewPageEventHandler ^ PageIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanging : System.Web.UI.WebControls.DetailsViewPageEventHandler " Usage="member this.PageIndexChanging : System.Web.UI.WebControls.DetailsViewPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> 속성 값이 변경될 때 페이징 작업 이전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView> 를 발생 시킵니다를 <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> 페이저 단추 이벤트 (단추를 사용 하 여 해당 `CommandName` "페이지"로 설정 하는 속성) 컨트롤 내에서 클릭 하기 전에 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 페이징 작업을 처리 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 페이징 작업을 취소 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.DetailsView.PageIndex%2A> 속성입니다.  
  
 페이저 단추는 일반적으로의 페이저 행에는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 <xref:System.Web.UI.WebControls.DetailsViewPageEventArgs> 개체가를 통해 사용자가 선택한 페이지의 인덱스를 확인 하 고 페이징 작업을 취소 해야 함을 나타내기 위해 이벤트 처리기에 전달 됩니다. 사용자가 선택한 페이지의 인덱스를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsViewPageEventArgs.NewPageIndex%2A> 속성입니다. 페이징 작업을 취소 하려면 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.DetailsViewPageEventArgs> 개체를 `true`입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.PageIndexChanging> 페이징 작업을 취소 하는 이벤트입니다.  
  
 [!code-aspx-csharp[DetailsViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCurrentMode/CS/detailsviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[DetailsViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCurrentMode/VB/detailsviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewPageEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerSettings : System.Web.UI.WebControls.PagerSettings" Usage="System.Web.UI.WebControls.DetailsView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.PagerSettings" /> 컨트롤에 있는 페이저 단추의 속성을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.PagerSettings" /> 컨트롤에 있는 페이저 단추의 속성을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> 속성에 있는 페이저 행의 설정을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 페이저 행을 페이징 기능을 사용 하는 경우 표시 됩니다 (설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 속성을 `true`) 및 컨트롤의 다른 레코드를 탐색 하는 데 사용할 수 있는 컨트롤을 포함 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.PagerSettings> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.PagerSettings> 개체 (예를 들어 `PagerSetting-Mode`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `PagerSetting.Mode`). 일반적인 설정에는 일반적으로 페이저 행의 디스플레이 모드 및 사용자 지정 텍스트 또는 탐색 컨트롤에 대 한 이미지가 포함 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.PagerSettings%2A> 페이저 행의 속성을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 페이저 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 페이저 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> 에 있는 페이저 행의 모양을 제어 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 페이저 행을 페이징 기능을 사용 하는 경우 표시 됩니다 (설정 하 여 합니다 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 속성을 `true`) 되며 사용자가 컨트롤에서 다른 페이지로 이동할 수 있는 컨트롤을 포함 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `PagerStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `PagerStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> 페이저 행에 대 한 글꼴 및 스타일 설정을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PagerTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DetailsView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 페이저 행에 대한 사용자 지정 콘텐츠를 가져오거나 설정합니다.</summary>
        <value>페이저 행에 대한 사용자 지정 콘텐츠가 들어 있는 <see cref="T:System.Web.UI.ITemplate" />입니다. 기본값은 null로, 이 속성이 설정되지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이저 행에 표시 되는 <xref:System.Web.UI.WebControls.DetailsView> 페이징 기능을 활성화 하는 경우 제어 (설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 속성을 true로). 페이저 행을 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 합니다. 기본 제공 페이저 행 사용자 인터페이스 (UI)를 사용 하는 대신 사용 하 여 UI를 직접 정의할 수는 <xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A> 속성입니다. 페이저 행에 대 한 사용자 지정 템플릿을 지정 하려면 먼저 `<PagerTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<PagerTemplate>` 태그입니다. 페이저 행의 모양을 제어 하려면 사용 된 <xref:System.Web.UI.WebControls.DetailsView.PagerStyle%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.PagerTemplate%2A> 페이저 행을 만들 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewPagerTemplate/CS/detailsviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[DetailsViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewPagerTemplate/VB/detailsviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="detailsView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">데이터 소스를 나타내는 <see cref="T:System.Collections.IEnumerable" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 지정된 데이터 소스를 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.PerformDataBinding%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView> 지정된 된 데이터 소스 컨트롤에 바인딩할 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit&#xA;override this.PrepareControlHierarchy : unit -&gt; unit" Usage="detailsView.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 컨트롤 계층 구조를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy%2A> 메서드는 호출 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 컨트롤 계층 구조를 설정 하는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 렌더링 되기 전에 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit&#xA;override this.RaiseCallbackEvent : string -&gt; unit" Usage="detailsView.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">이벤트 처리기에 전달할 인수입니다.</param>
        <summary><see cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" /> 메서드의 콜백 처리기에 대한 인수를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent%2A> 메서드는에서 사용 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.DetailsView> 콜백 처리기에 대 한 인수를 만들기 위해 컨트롤을 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="detailsView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">발생한 이벤트에 대한 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />를 만드는 데 사용할 이벤트 인수입니다.</param>
        <summary>서버에 다시 게시될 때 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 대한 적절한 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이지 호출을 <xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A> 포스트백 이벤트가 발생 하는 방법에 대 한 적절 한 이벤트를 발생 시킵니다는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 이 호출은 로드 및 변경 내용 알림 완료 되었으나 사전 렌더링이 발생 페이지 수명 주기에서 발생 합니다. 이 메서드가 만드는 구현 되었는지는 <xref:System.Web.UI.WebControls.CommandEventArgs> 발생 하는 이벤트에 대 한 개체입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="detailsView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트에서 렌더링할 출력 스트림이 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>지정한 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체를 사용하여 클라이언트에 <see cref="T:System.Web.UI.HtmlTextWriter" /> 컨트롤을 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.Render%2A> 메서드를 사용 하 여 클라이언트의 브라우저 서버 컨트롤 콘텐츠를 렌더링 하는 <xref:System.Web.UI.HtmlTextWriter> 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.Rows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Rows As DetailsViewRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DetailsViewRowCollection ^ Rows { System::Web::UI::WebControls::DetailsViewRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Web.UI.WebControls.DetailsViewRowCollection" Usage="System.Web.UI.WebControls.DetailsView.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 컨트롤의 데이터 행을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsViewRowCollection" /> 컨트롤의 모든 데이터 행이 들어 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> 속성 (컬렉션)의 데이터 행을 저장을 사용 하는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 자동으로 채웁니다.는 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> 를 만들어 컬렉션을 <xref:System.Web.UI.WebControls.DetailsViewRow> 데이터 소스의 각 레코드에 대 한 개체 및 컬렉션에 개체를 추가 합니다. 이 속성은 컨트롤의 특정 행에 액세스 하거나 행의 전체 컬렉션을 반복 하려면 일반적으로 사용 됩니다.  
  
> [!NOTE]
>  데이터 행만 저장 되는 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> 컬렉션입니다. <xref:System.Web.UI.WebControls.DetailsViewRow> 머리글, 바닥글 및 페이저 행을 나타내는 개체 컬렉션에 포함 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.Rows%2A> 데이터 행에 액세스 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. 데이터 행을 사용 하 여 필드의 값을 검색 하는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 [!code-aspx-csharp[DetailsViewItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewItemCommand/CS/detailsviewitemcommandcs.aspx#1)]
 [!code-aspx-vb[DetailsViewItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewItemCommand/VB/detailsviewitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRowCollection" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="RowsGenerator">
      <MemberSignature Language="C#" Value="public System.Web.UI.IAutoFieldGenerator RowsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator RowsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.RowsGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Property RowsGenerator As IAutoFieldGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IAutoFieldGenerator ^ RowsGenerator { System::Web::UI::IAutoFieldGenerator ^ get(); void set(System::Web::UI::IAutoFieldGenerator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowsGenerator : System.Web.UI.IAutoFieldGenerator with get, set" Usage="System.Web.UI.WebControls.DetailsView.RowsGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>뷰에서 행을 자동으로 채우려면 <see cref="T:System.Web.UI.IAutoFieldGenerator" /> 인터페이스를 구현하는 개체를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.IAutoFieldGenerator" /> 인터페이스를 구현하는 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DetailsView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 데이터 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 데이터 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 속성의 데이터 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 경우는 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 속성도 설정 됩니다, 데이터 행을 교대로 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 설정 및 <xref:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle%2A> 설정 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어 `RowStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `RowStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.RowStyle%2A> 속성의 데이터 행에 대 한 글꼴 및 스타일 설정을 지정할 수는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다.  
  
 [!code-aspx-csharp[DetailsViewRowStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewRowStyle/CS/detailsviewrowstylecs.aspx#1)]
 [!code-aspx-vb[DetailsViewRowStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewRowStyle/VB/detailsviewrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="detailsView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 속성이 <see langword="false" />로 설정되어 있는 경우에도 유지해야 하는 <see cref="P:System.Web.UI.Control.EnableViewState" /> 컨트롤의 속성 상태를 저장합니다.</summary>
        <returns>서버 컨트롤의 현재 뷰 상태를 반환합니다. 컨트롤과 연결된 뷰 상태가 없으면 이 메서드는 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성의 상태를 저장 하려면이 메서드는를 <xref:System.Web.UI.WebControls.DetailsView> 경우에 유지 해야 하는 컨트롤을 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> 속성이 `false`.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="detailsView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 현재 뷰 상태를 저장합니다.</summary>
        <returns><see cref="T:System.Object" /> 컨트롤의 저장된 상태가 들어 있는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DetailsView.SaveViewState%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 상태를 저장 하는 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.DetailsView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에서 현재 레코드의 데이터 키 값을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 현재 레코드에 대한 데이터 키 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A> 현재 레코드에 대 한 데이터 키 값을 확인 하는 속성입니다. 실제 검색할 <xref:System.Web.UI.WebControls.DataKey?displayProperty=nameWithType> 사용 하 여 레코드에 대 한 데이터 키를 나타내는 개체를 <xref:System.Web.UI.WebControls.DetailsView.DataKey%2A> 속성입니다.  
  
 이 속성은 기본 속성은는 <xref:System.Web.UI.WebControls.ControlParameter> 개체 런타임에 바인딩됩니다. 자세한 내용은 <xref:System.Web.UI.ControlValuePropertyAttribute>, <xref:System.Web.UI.WebControls.ControlParameter>, 및 [필터링에 대 한 데이터 소스 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100))입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DetailsView.SelectedValue%2A> 현재 레코드에 대 한 데이터 키 값을 확인 하는 속성입니다.  
  
 [!code-aspx-csharp[DetailsViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewSelectedValue/CS/detailsviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[DetailsViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewSelectedValue/VB/detailsviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberSignature Language="F#" Value="member this.SetPageIndex : int -&gt; unit" Usage="detailsView.SetPageIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">설정할 인덱스 값입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 현재 표시된 페이지의 인덱스를 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" /> 메서드를 참조하십시오.</summary>
        <returns>콜백의 결과입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView> 제어 구현 합니다 <xref:System.Web.UI.ICallbackEventHandler> 사용 하 여 인터페이스를 <xref:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent%2A> 데이터를 검색할 및 <xref:System.Web.UI.WebControls.DetailsView.GetCallbackResult%2A> 컨트롤에 검색된 된 데이터를 반환 하는 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">이벤트의 인수입니다.</param>
        <summary>지정된 인수를 사용하여 콜백 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" />를 참조하십시오.</summary>
        <value><see cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" /> 값을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, 사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.DetailsView> 캐스팅 된는 <xref:System.Web.UI.IDataItemContainer> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DisplayIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />를 참조하십시오.</summary>
        <value><see langword="0" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, 사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.DetailsView> 캐스팅 된는 <xref:System.Web.UI.IDataItemContainer> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">이벤트 처리기에 전달할 선택적 이벤트 인수를 나타내는 문자열입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />를 참조하십시오.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, 사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.DetailsView> 캐스팅 된는 <xref:System.Web.UI.IPostBackEventHandler> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript">
      <MemberSignature Language="C#" Value="string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackScript (buttonControl As IButtonControl, argument As String) As String Implements ICallbackContainer.GetCallbackScript" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System::Web::UI::WebControls::IButtonControl ^ buttonControl, System::String ^ argument) = System::Web::UI::WebControls::ICallbackContainer::GetCallbackScript;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">서버에 페이지를 포스트백한 단추 컨트롤입니다.</param>
        <param name="argument">콜백 이벤트의 인수입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 대한 콜백 스크립트를 만듭니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 대한 콜백 스크립트입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 호출 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.DetailsView> 콜백 스크립트를 생성 하는 컨트롤입니다. 경우는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 클라이언트 스크립트를 렌더링 하지 않습니다 또는 경우에는 `argument` 매개 변수는 `null` 이거나 빈 문자열 (""),이 메서드가 반환 `null`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System::Web::UI::WebControls::IDataBoundControl::DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />를 참조하십시오.</summary>
        <value>데이터 바인딩된 컨트롤에 표시되는 항목에 대한 기본 키 필드의 이름이 포함된 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DetailsView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataMember" />를 참조하십시오.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 바인딩되는 데이터 목록의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DetailsView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Web::UI::WebControls::IDataBoundControl::DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataSource" />를 참조하십시오.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에서 데이터를 검색할 데이터 소스를 나타내는 개체입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DetailsView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />를 참조하십시오.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에서 검색하는 데이터 항목 목록이 포함된 데이터 소스 컨트롤의 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DetailsView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />를 참조하십시오.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에서 검색하는 데이터 항목 목록이 포함된 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DetailsView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System::Web::UI::WebControls::IDataBoundItemControl::DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />를 참조하십시오.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 있는 행의 데이터 키 값을 나타내는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DetailsView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System::Web::UI::WebControls::IDataBoundItemControl::Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IDataBoundItemControl.Mode" />를 참조하십시오.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 현재 모드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DetailsView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 합니다 <xref:System.Web.UI.WebControls.DetailsView> 로 설정할 수 있습니다 `ReadOnly`를 `Edit` 또는 `Delete`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IFieldControl.FieldsGenerator">
      <MemberSignature Language="C#" Value="System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator" />
      <MemberSignature Language="VB.NET" Value=" Property FieldsGenerator As IAutoFieldGenerator Implements IFieldControl.FieldsGenerator" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IAutoFieldGenerator ^ System::Web::UI::WebControls::IFieldControl::FieldsGenerator { System::Web::UI::IAutoFieldGenerator ^ get(); void set(System::Web::UI::IAutoFieldGenerator ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IFieldControl.FieldsGenerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />를 참조하십시오.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에 대한 열을 자동으로 생성하는 컨트롤입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DetailsView> 인스턴스가 <xref:System.Web.UI.WebControls.IFieldControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 이 속성에 대 한 열을 자동으로 생성 되는 <xref:System.Web.UI.WebControls.DetailsView> ASP.NET Dynamic Data 기능을 사용 하는 컨트롤입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">클라이언트측 포스트백 이벤트를 생성하는 컨트롤입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />를 참조하십시오.</summary>
        <returns>클라이언트에서 실행될 때 클라이언트 포스트백을 시작하는 유효한 스크립트를 만들기 위해 <see cref="T:System.Web.UI.PostBackOptions" />에 필요한 정보가 포함된 <see cref="Overload:System.Web.UI.Page.GetPostBackEventReference" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, 사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.DetailsView> 캐스팅 된는 <xref:System.Web.UI.IPostBackEventHandler> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buttonControl" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="buttonControl" />이 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤에서 유효성 검사를 수행하고 동일한 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤을 포스트백 대상으로 사용하려는 경우</exception>
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.DetailsView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 컨트롤에 대한 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 값을 가져옵니다.</summary>
        <value><see cref="P:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks" />가 <see langword="true" />이면 이 속성은 <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" />를 반환합니다. 그 외의 경우 <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DetailsView.TagKey%2A> 속성에 대 한 적절 한 HTML 태그를 작성 하기 위한 출력 스트림을 허용 합니다 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>지정 하려면이 속성을 재정의할 수 있습니다 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 파생된 컨트롤에 사용할 값입니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DetailsViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As DetailsViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DetailsViewRow ^ TopPagerRow { System::Web::UI::WebControls::DetailsViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPagerRow : System.Web.UI.WebControls.DetailsViewRow" Usage="System.Web.UI.WebControls.DetailsView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 컨트롤의 위쪽 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> 컨트롤의 위쪽 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.DetailsView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징이 활성화 된 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.DetailsView.AllowPaging%2A> 속성을 `true`), 페이저 행을 호출 하는 추가 행에 자동으로 표시 되는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. 페이저 행을 다른 레코드를 탐색할 수 있도록 하 고 위쪽, 아래쪽 또는 둘 다 위쪽과 컨트롤의 아래쪽에 표시 될 수 있는 컨트롤을 포함 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> 속성을 프로그래밍 방식으로 액세스를 <xref:System.Web.UI.WebControls.DetailsViewRow> 의 위쪽 페이저 행을 나타내는 개체를 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> 속성을 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤의 아래쪽 페이저 행을 만듭니다는 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 이벤트입니다.  
  
 예를 들어 사용자 지정 콘텐츠를 추가할 때의 위쪽 페이저 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. 수정을 <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> 후 속성에 수행 해야 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 렌더링 되었으면이 고, 그렇지는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에는 모든 변경 사항을 덮어씁니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DetailsView.TopPagerRow%2A> 의 위쪽 페이저 행에 액세스 하는 속성을 <xref:System.Web.UI.WebControls.DetailsView> 하는 동안 제어는 <xref:System.Web.UI.WebControls.DetailsView.ItemCreated> 이벤트. 두 <xref:System.Web.UI.WebControls.Label> 컨트롤 페이저 행 내에서 현재 페이지 번호와 총 페이지 수를 사용 하 여 업데이트 됩니다.  
  
 [!code-aspx-csharp[DetailsViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewTopPagerRow/CS/detailsviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[DetailsViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewTopPagerRow/VB/detailsviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="detailsView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤의 뷰 상태 변경 사항을 추적하고 저장하기 시작하는 시작 지점을 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 컨트롤의 뷰 상태의 일부로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하려면 시작 위치를 표시 하도록 재정의 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : bool -&gt; unit&#xA;override this.UpdateItem : bool -&gt; unit" Usage="detailsView.UpdateItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">메서드가 호출될 때 페이지 유효성 검사를 수행하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>데이터 소스의 현재 레코드를 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 편집 모드 인지를 사용 하 여는 <xref:System.Web.UI.WebControls.DetailsView.UpdateItem%2A> 프로그래밍 방식으로 데이터 소스의 현재 레코드를 업데이트 하는 방법입니다. 외부에서 현재 레코드를 업데이트 해야 할 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.DetailsView> 와 같은 페이지의 다른 컨트롤을 제어 합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.DetailsView> 이 방법이 고, 그렇지 않으면 호출 하는 경우 컨트롤이 편집 모드에 있어야는 <xref:System.Web.HttpException> 예외가 throw 됩니다.  
  
 업데이트 작업 전의 페이지 유효성 검사를 수행할지 여부를 지정 하려면 사용 된 `causesValidation` 매개 변수입니다. 이 메서드를 호출 발생 합니다 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> 고 <xref:System.Web.UI.WebControls.DetailsView.ItemUpdating> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.DetailsView" /> 컨트롤이 편집 모드에 있지 않은 상태에서 이 메서드를 호출한 경우  
  
또는 
<see cref="T:System.Web.UI.DataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.DetailsView" />가 <see langword="null" />인 경우</exception>
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.DetailsView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 업데이트 작업을 수행하는 경우 호출되는 페이지의 메서드에 대한 이름을 가져오거나 설정합니다.</summary>
        <value>컨트롤에서 업데이트 작업을 수행할 때 호출되는 페이지상의 메서드 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web Forms 모델 바인딩 사용에 대 한 자습서 시리즈를 참조 하세요 [모델 바인딩 및 Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>