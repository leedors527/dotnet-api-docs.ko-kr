<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6cf87e99ad252ff64c76c999800bd25f90971677" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55422642" /></Metadata><TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type FormParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>HTTP 요청 <see cref="P:System.Web.HttpRequest.Form" /> 필드의 값을 매개 변수 개체에 바인드합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Web.UI.WebControls.FormParameter> 에서 폼 변수의 값을 바인딩할 클래스를 <xref:System.Web.HttpRequest.Form%2A> 매개 변수가 있는 쿼리 또는 명령에 사용 된 매개 변수 컬렉션입니다. 컨트롤 데이터 매개 변수를 바인딩하는 경우 예외가 throw 될 수 있습니다는 <xref:System.Web.UI.WebControls.FormParameter> 지정 된 전달 되 나 해당 폼 변수 없습니다. 또한 폼 변수는 해당 값이 없는 함께 전달 되 면 데이터가 없는 표시할 수 있습니다 이러한. 설정 된 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 적절 한 경우 이러한 상황을 방지 하려면.  
  
 합니다 <xref:System.Web.UI.WebControls.FormParameter> 클래스를 제공 합니다 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> 속성에서 상속 하는 것 외에도 바인딩할 폼 변수 이름을 식별 하는 <xref:System.Web.UI.WebControls.Parameter> 클래스입니다.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> 전혀;의 폼 요소에 전달 된 값의 유효성을 검사 하지 않습니다 원시 값을 사용 합니다. 대부분의 경우에서 값을 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.FormParameter> 와 같은 이벤트를 처리 하 여 데이터 소스 컨트롤에서 사용 되기 전에 `Selecting`를 `Updating`, `Inserting`, 또는 `Deleting` 사용 하는 데이터 소스 컨트롤에서 노출 하는 이벤트입니다. 매개 변수의 유효성 검사 테스트를 통과 하지 못하는 경우 설정 하 여 데이터 작업을 취소할 수 있습니다 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성은 연결 된 <xref:System.ComponentModel.CancelEventArgs> 클래스를 `true`입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 및 간단한 ASP.NET 웹 페이지입니다. 데이터 테이블의 현재 데이터에 표시 됩니다는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다. 값을 입력 하 여 새 레코드를 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 단추를 클릭 합니다. 지정 된 값을 데이터베이스에 삽입 되는 단추를 클릭할 때 및 <xref:System.Web.UI.WebControls.DropDownList> 새로 고쳐집니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">매개 변수를 사용 하 여 데이터 소스 컨트롤을 사용 하 여</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">매개 변수를 사용 하 여 데이터 소스 컨트롤을 사용 하 여</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormParameter" /> 클래스의 명명되지 않은 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.FormParameter> 사용 하 여 만든 개체는 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> 생성자는 모든 속성에 대 한 기본 값으로 초기화 됩니다. 합니다 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> 으로 초기화 됩니다 <xref:System.String.Empty?displayProperty=nameWithType>합니다. 또한 합니다 <xref:System.Web.UI.WebControls.Parameter.Name%2A> 속성으로 초기화 됩니다 <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.Parameter.Type%2A> 속성으로 초기화 됩니다 <xref:System.TypeCode.Object?displayProperty=nameWithType>의 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 속성으로 초기화 됩니다 <xref:System.Data.ParameterDirection.Input>, 및 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 속성은 초기화 null로 (`Nothing` Visual Basic에서).  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> 전혀;의 폼 요소에 전달 된 값의 유효성을 검사 하지 않습니다 원시 값을 사용 합니다. 대부분의 경우에서 값을 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.FormParameter> 와 같은 이벤트를 처리 하 여 데이터 소스 컨트롤에서 사용 되기 전에 `Selecting`를 `Updating`, `Inserting`, 또는 `Deleting` 사용 하는 데이터 소스 컨트롤에서 노출 하는 이벤트입니다. 매개 변수의 유효성 검사 테스트를 통과 하지 못하는 경우 설정 하 여 데이터 작업을 취소할 수 있습니다 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성은 연결 된 <xref:System.ComponentModel.CancelEventArgs> 클래스를 `true`입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">매개 변수를 사용 하 여 데이터 소스 컨트롤을 사용 하 여</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : System.Web.UI.WebControls.FormParameter -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original">현재 인스턴스가 초기화되는 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 인스턴스입니다.</param>
        <summary><paramref name="original" /> 매개 변수에서 지정된 인스턴스의 값으로 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> 생성자를 `protected` 복제 하는 데 사용 하는 복사 생성자를 <xref:System.Web.UI.WebControls.FormParameter> 인스턴스. 값을 <xref:System.Web.UI.WebControls.FormParameter>등 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, 및 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 를 새 인스턴스로 전송 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">매개 변수를 사용 하 여 데이터 소스 컨트롤을 사용 하 여</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="formField">매개 변수 개체가 바인딩된 폼 변수의 이름입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</param>
        <summary>바인딩할 폼 변수 필드를 식별하기 위해 지정된 문자열을 사용하여 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 클래스의 새 명명된 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.FormParameter> 사용 하 여 만든 개체는 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> 생성자는 지정 된 매개 변수 이름과 매개 변수가 바인딩되는 폼 변수를 식별 하는 문자열을 사용 하 여 초기화 됩니다. 합니다 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 고 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 속성이 기본 값으로 초기화 됩니다.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> 전혀;의 폼 요소에 전달 된 값의 유효성을 검사 하지 않습니다 원시 값을 사용 합니다. 대부분의 경우에서 값을 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.FormParameter> 와 같은 이벤트를 처리 하 여 데이터 소스 컨트롤에서 사용 되기 전에 `Selecting`를 `Updating`, `Inserting`, 또는 `Deleting` 사용 하는 데이터 소스 컨트롤에서 노출 하는 이벤트입니다. 매개 변수의 유효성 검사 테스트를 통과 하지 못하는 경우 설정 하 여 데이터 작업을 취소할 수 있습니다 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성은 연결 된 <xref:System.ComponentModel.CancelEventArgs> 클래스를 `true`입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">매개 변수를 사용 하 여 데이터 소스 컨트롤을 사용 하 여</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, dbType, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="dbType">매개 변수의 데이터베이스 형식입니다.</param>
        <param name="formField">매개 변수 개체가 바인딩된 폼 변수의 이름입니다.</param>
        <summary>바인딩할 폼 변수 필드를 식별하기 위해 지정된 문자열을 사용하여 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, type, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="type">매개 변수가 나타내는 형식입니다. 기본값은 <see cref="F:System.TypeCode.Object" />입니다.</param>
        <param name="formField">매개 변수 개체가 바인딩된 폼 변수의 이름입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</param>
        <summary>바인딩할 폼 변수 필드를 식별하기 위해 지정된 문자열을 사용하여 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 클래스의 새로 명명된 강력한 형식의 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter> 사용 하 여 만든 개체를 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> 생성자는 지정 된 매개 변수 이름을 사용 하 여 초기화 됩니다 <xref:System.Web.UI.WebControls.Parameter.Type%2A>, 및에 매개 변수가 바인딩된 폼 변수를 식별 하는 문자열입니다. 만 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 고 <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> 속성이 기본 값으로 초기화 됩니다.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> 전혀;의 폼 요소에 전달 된 값의 유효성을 검사 하지 않습니다 원시 값을 사용 합니다. 대부분의 경우에서 값을 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.FormParameter> 와 같은 이벤트를 처리 하 여 데이터 소스 컨트롤에서 사용 되기 전에 `Selecting`를 `Updating`, `Inserting`, 또는 `Deleting` 사용 하는 데이터 소스 컨트롤에서 노출 하는 이벤트입니다. 매개 변수의 유효성 검사 테스트를 통과 하지 못하는 경우 설정 하 여 데이터 작업을 취소할 수 있습니다 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성은 연결 된 <xref:System.ComponentModel.CancelEventArgs> 클래스를 `true`입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">매개 변수를 사용 하 여 데이터 소스 컨트롤을 사용 하 여</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="formParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.FormParameter" /> 인스턴스의 복제본을 반환합니다.</summary>
        <returns>현재 개체와 완전히 동일한 <see cref="T:System.Web.UI.WebControls.FormParameter" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormParameter.Clone%2A> 메서드 호출을 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> 의 새 인스턴스를 초기화 하는 복사 생성자는 <xref:System.Web.UI.WebControls.FormParameter> 현재 인스턴스의 값을 사용 하 여 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">매개 변수를 사용 하 여 데이터 소스 컨트롤을 사용 하 여</related>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="formParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">요청의 현재 <see cref="T:System.Web.HttpContext" />입니다.</param>
        <param name="control"><see cref="T:System.Web.UI.Control" />가 사용되는 페이지와 연결되는 <see cref="T:System.Web.UI.WebControls.FormParameter" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormParameter" /> 개체의 값을 업데이트하고 반환합니다.</summary>
        <returns>매개 변수의 업데이트된 현재 값을 나타내는 개체입니다. 컨텍스트 또는 요청이 null(Visual Basic의 경우 <see langword="Nothing" />)이면 <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> 메서드에서 null을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter> 때마다 폼 변수를 바인딩하는 <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> 메서드가 호출 됩니다.  
  
 `context` 매개 변수에서 사용 되는 <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> 요청에서 지정된 된 폼 필드의 값을 검색 하는 방법입니다. `control` 매개 변수가 무시 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">매개 변수를 사용 하 여 데이터 소스 컨트롤을 사용 하 여</related>
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormField : string with get, set" Usage="System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수가 바인딩된 폼 변수의 이름을 가져오거나 설정합니다.</summary>
        <value>매개 변수가 바인딩된 폼 변수를 식별하는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> 에 전달 되는 이름/값 쌍을 식별 하는 <xref:System.Web.HttpRequest.Form%2A> 컬렉션입니다. 하는 동안 합니다 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> 속성 쌍의 이름을 식별 합니다 <xref:System.Web.UI.WebControls.FormParameter> 런타임에 해당 값에 바인딩합니다. 형식이 변수 문자열 이름/값 쌍 컬렉션에서 ASP.NET 웹 페이지에 전달 하지 않으면 합니다 <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> 메서드는 값 매개 변수를 바인딩합니다를 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 속성에 설정 된 경우. 경우는 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 을 설정 하지 않으면는 <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> 매개 변수 값에 바인딩할 메서드가 실패 합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 <xref:System.Web.UI.WebControls.FormParameter> 중간 계층 비즈니스 개체에서 데이터를 검색 및 <xref:System.Web.UI.WebControls.GridView> 결과 표시 하는 컨트롤입니다.  
  
 코드 예제에서는 구성를 <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.GridView> 컨트롤을 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 및 제출 단추. 기본적으로 <xref:System.Web.UI.WebControls.TextBox> Northwind Traders 직원 중 하나의 이름으로 채워집니다. 합니다 <xref:System.Web.UI.WebControls.GridView> 에서 이름으로 식별 된 직원에 대 한 정보를 표시 합니다 <xref:System.Web.UI.WebControls.TextBox>합니다. 다른 직원에 대 한 데이터를 검색 하려면 직원의 전체 이름을 입력 합니다 <xref:System.Web.UI.WebControls.TextBox> 단추를 클릭 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성에서 검색 되는 데이터를 필터링 하는 데 사용 하는 식을 지정 된 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>합니다. 이 속성에 포함 된 매개 변수가 계산 되는 매개 변수 자리 표시자를 사용 하 여 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션입니다. 이 예제에서 매개 변수 자리 표시자는를 <xref:System.Web.UI.WebControls.FormParameter> 의 값에 바인딩된는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 다음 코드 예제에서는 이전 코드 예제를 사용 하는 중간 계층 비즈니스 개체를 보여 줍니다. 이 예제에서는 기본 클래스로 구성 됩니다:는 `EmployeeLogic` 비즈니스 논리를 캡슐화 하는 클래스 및 `NorthwindEmployee` 클래스는 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본 기능을 포함 하는 모델 클래스입니다. 간단히 하기 위해는 `EmployeeLogic` 클래스는 데이터 계층에서 데이터를 검색 하는 것이 아니라 데이터의 정적 집합을 만듭니다. 샘플 사용자에 게 필터링을 보여 주기 위해 Northwind Traders 직원의 전체 이름을 사용 하므로 예를 들어도 유용 합니다. 전체 작업 예제를 컴파일 및 제공 하는 ASP.NET 코드 예제를 사용 하 여 이러한 클래스를 사용 해야 합니다.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter> 전혀;의 폼 요소에 전달 된 값의 유효성을 검사 하지 않습니다 원시 값을 사용 합니다. 대부분의 경우에서 값을 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.FormParameter> 와 같은 이벤트를 처리 하 여 데이터 소스 컨트롤에서 사용 되기 전에 `Selecting`를 `Updating`, `Inserting`, 또는 `Deleting` 사용 하는 데이터 소스 컨트롤에서 노출 하는 이벤트입니다. 매개 변수의 유효성 검사 테스트를 통과 하지 못하는 경우 설정 하 여 데이터 작업을 취소할 수 있습니다 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성은 연결 된 <xref:System.ComponentModel.CancelEventArgs> 클래스를 `true`입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
        <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">매개 변수를 사용 하 여 데이터 소스 컨트롤을 사용 하 여</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수에서 클라이언트 입력의 유효성을 검사할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>클라이언트 입력의 유효성을 검사하면 <see langword="true" />이고, 그렇지 않으면  <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>