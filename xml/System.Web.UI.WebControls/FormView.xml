<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed9440bebbfa65934f32b44cc984c49511db5561" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57933302" /></Metadata><TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataBoundItemControl, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IPostBackContainer" />
  <TypeSignature Language="F#" Value="type FormView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer&#xA;    interface IDataBoundItemControl&#xA;    interface IDataBoundControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사용자 정의 템플릿을 사용하여 데이터 소스의 단일 레코드 값을 표시합니다. <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤을 사용하면 레코드를 편집, 삭제 및 삽입할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용  
  
-   [소개](#introduction)  
  
-   [템플릿](#templates)  
  
-   [데이터 바인딩](#binding_to_data)  
  
-   [데이터 작업](#data_operations)  
  
-   [사용자 인터페이스 사용자 지정](#customizing_the_user_interface)  
  
-   [이벤트](#events)  
  
-   [액세스 가능성](#accessibility)  
  
-   [CSS 스타일 적용](#applying_styles)  
  
-   [선언 구문](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>소개  
 <xref:System.Web.UI.WebControls.FormView> 컨트롤은 데이터 원본에서 단일 레코드를 표시 하는 데 사용 합니다. 비슷합니다는 <xref:System.Web.UI.WebControls.DetailsView> 행 필드 대신 사용자 정의 템플릿을 표시 됩니다 점을 제외 하 고 제어 합니다. 사용자 고유의 템플릿 만들기 하면 더욱 유연 하 게 데이터가 표시 되는 방식을 제어 합니다. <xref:System.Web.UI.WebControls.FormView> 컨트롤은 다음 기능을 지원 합니다.  
  
-   와 같은 데이터 소스 컨트롤에 바인딩할 <xref:System.Web.UI.WebControls.SqlDataSource> 고 <xref:System.Web.UI.WebControls.ObjectDataSource>입니다.  
  
-   기본 제공 삽입 기능입니다.  
  
-   기본 제공 업데이트 및 삭제 기능입니다.  
  
-   기본 제공 페이징 기능입니다.  
  
-   에 대 한 프로그래밍 방식의 액세스를 <xref:System.Web.UI.WebControls.FormView> 개체 모델을 동적으로 속성을 설정 하 고, 이벤트를 처리 및, 등입니다.  
  
-   사용자 정의 템플릿을, 테마 및 스타일을 통해 모양을 사용자 지정할 수 있습니다.  
  
<a name="templates"></a>   
## <a name="templates"></a>템플릿  
 에 대 한는 <xref:System.Web.UI.WebControls.FormView> 콘텐츠를 표시할 컨트롤을 컨트롤의 여러 부분에 대 한 템플릿을 만들어야 합니다. 대부분의 템플릿은 선택 사항입니다. 그러나 컨트롤이 구성 모드에 대 한 템플릿을 만들어야 합니다. 예를 들어, 한 <xref:System.Web.UI.WebControls.FormView> 레코드 삽입을 지 원하는 컨트롤에 정의 된 삽입 항목 템플릿이 있어야 합니다. 다음 표에서 만들 수 있는 다양 한 템플릿을 나열 합니다.  
  
|템플릿 형식|설명|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|데이터에 대 한 콘텐츠 정의 경우 행은 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 편집 모드 인지 합니다. 이 서식 파일에는 일반적으로 입력 컨트롤과 명령 단추가 있는 사용자가 기존 레코드를 편집할 수 포함 되어 있습니다.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|빈 데이터 행을 표시 하는 경우에 대 한 콘텐츠 정의 <xref:System.Web.UI.WebControls.FormView> 모든 레코드를 포함 하지 않는 데이터 원본에 바인딩된 컨트롤입니다. 이 템플릿은 일반적으로 데이터 소스에 레코드가 없는지 사용자 경고는 콘텐츠를 포함 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|바닥글 행에 대 한 콘텐츠를 정의합니다. 이 템플릿은 일반적으로 바닥글 행에 표시 하려는 모든 추가 콘텐츠를 포함 합니다. **참고:**  대신 지정할 수 있습니다 단순히 설정 하 여 바닥글 행에 표시할 텍스트를 <xref:System.Web.UI.WebControls.FormView.FooterText%2A> 속성입니다.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|머리글 행에 대 한 콘텐츠를 정의합니다. 이 템플릿은 일반적으로 머리글 행에 표시 하려는 모든 추가 콘텐츠를 포함 합니다. **참고:**  대신 지정할 수 있습니다 단순히 설정 하 여 머리글 행에 표시할 텍스트를 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 속성입니다.|  
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|데이터에 대 한 콘텐츠 정의 경우 행을 <xref:System.Web.UI.WebControls.FormView> 컨트롤은 읽기 전용 모드입니다. 이 템플릿은 일반적으로 기존 레코드의 값을 표시할 수 있는 콘텐츠를 포함 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|데이터에 대 한 콘텐츠 정의 경우 행은 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 삽입 모드 인지 합니다. 이 일반적으로 템플릿에 입력 컨트롤과 명령 단추가 있는 사용자는 새 레코드를 추가할 수 있습니다.|  
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|페이징 기능을 사용 하는 경우 표시 되는 페이저 행에 대 한 콘텐츠 정의 (때 합니다 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 속성이 `true`). 일반적으로이 템플릿을 다른 레코드를 탐색할 수 있는 사용자 컨트롤을 포함 합니다. **참고:**  <xref:System.Web.UI.WebControls.FormView> 컨트롤에 기본 제공 페이저 행 사용자 인터페이스 (UI). 사용자 고유의 사용자 지정 페이저 행을 생성 하려는 경우에 호출기 템플릿 만들기 해야 합니다.|  
  
 항목 템플릿에 필드의 값을 표시 하려면 데이터 바인딩 식을 사용 합니다. 데이터 바인딩 식에 대 한 자세한 내용은 참조 하세요. [데이터 바인딩 식 구문](https://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)합니다.  
  
 항목 템플릿 편집 및 삽입 항목 템플릿이 입력된 컨트롤 양방향 바인딩 식을 사용 하 여 데이터 원본의 필드를 바인딩할 수 있습니다. 따라서는 <xref:System.Web.UI.WebControls.FormView> 자동으로 업데이트에 대 한 입력된 컨트롤의 값을 추출 또는 삽입 작업을 제어 합니다. 또한 양방향 바인딩 식 편집 항목 템플릿에서 자동으로 필드의 원래 값을 표시 하려면 입력된 컨트롤을 수 있습니다. 양방향 바인딩 식에 대 한 자세한 내용은 참조 하세요. [데이터베이스를 바인딩할](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)합니다.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>데이터 바인딩  
 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 데이터 소스 컨트롤에 바인딩될 수 (같은 <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.ObjectDataSource>, 또는 <xref:System.Web.UI.WebControls.AccessDataSource>) 또는 구현 하는 데이터 원본 컬렉션에는 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스와 같은 <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, 또는 다른 컬렉션 형식입니다. 다음 방법 중 하나를 사용 하 여 바인딩할는 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 적절 한 데이터 원본 형식:  
  
-   데이터 소스 컨트롤에 바인딩할 설정를 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 의 속성을 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 <xref:System.Web.UI.Control.ID%2A> 데이터 소스 컨트롤의 값입니다. <xref:System.Web.UI.WebControls.FormView> 컨트롤에서 자동으로 지정 된 데이터 소스 컨트롤에 바인딩합니다 하 고 활용 데이터 소스 컨트롤의 삽입, 업데이트, 삭제 및 페이징 기능을 수행 하는 기능입니다. 이것은 데이터 바인딩할 기본 방법입니다.  
  
-   구현 하는 데이터 원본에 바인딩할를 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스를 프로그래밍 방식으로 설정 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 의 속성을 <xref:System.Web.UI.WebControls.FormView> 데이터 소스 컨트롤을 호출는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드. 이 메서드를 사용 하는 경우는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 기본 삽입, 업데이트, 삭제 및 페이징 기능을 제공 하지 않습니다. 적절 한 이벤트를 사용 하 여이 기능을 제공 해야 합니다.  
  
 데이터 바인딩에 대 한 자세한 내용은 참조 하세요. [ASP.NET 데이터 액세스 콘텐츠 맵](https://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2)합니다.  
  
> [!NOTE]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 가능 하면 값이이 컨트롤에 표시 되기 전에 HTML로 인코딩 되는 것이 좋습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 유효성 검사 서버 컨트롤이 사용자 입력을 평가 하기 위해 제공 됩니다. 자세한 내용은 [유효성 검사 컨트롤 소개](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2e4hd649(v=vs.85))합니다.  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>데이터 작업  
 <xref:System.Web.UI.WebControls.FormView> 컨트롤 업데이트, 삭제, 삽입 및 컨트롤의 항목을 통해 페이지를 사용할 수 있는 많은 기본 제공 기능을 제공 합니다. 경우는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 데이터 소스 컨트롤에 바인딩되는 <xref:System.Web.UI.WebControls.FormView> 컨트롤 데이터 소스 컨트롤의 기능을 사용할 수 있으며 자동 업데이트, 삭제, 삽입 및 페이징 기능을 제공 합니다.  
  
> [!NOTE]
>  그러나 <xref:System.Web.UI.WebControls.FormView> 컨트롤 update, delete, insert 및 다른 형식의 데이터 소스를 사용 하 여 페이징 작업에 대 한 지원을 제공할 수 있으며, 이러한 작업에 대 한 구현을 사용 하 여 적절 한 이벤트 처리기를 제공 해야 합니다.  
  
 때문에 <xref:System.Web.UI.WebControls.FormView> 컨트롤 템플릿을 사용 하 여, 업데이트, 삭제 또는 삽입 작업을 수행 하기 위해 명령 단추를 자동으로 생성 하는 방법은 제공 하지 않습니다. 이러한 명령 단추에서 적절 한 템플릿을 수동으로 포함 해야 합니다. 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 있는 특정 단추 인식 해당 `CommandName` 속성이 특정 값으로 설정 합니다. 다음 표에서 명령 단추는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 인식 합니다.  
  
|단추|CommandName 값|설명|  
|------------|-----------------------|-----------------|  
|취소|"취소"|작업을 취소 하 고 사용자가 입력 한 값을 삭제 하려면 업데이트 또는 삽입 작업에 사용 합니다. 합니다 <xref:System.Web.UI.WebControls.FormView> 제어 하 여 지정 된 모드를 반환 합니다는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 속성입니다.|  
|삭제|"Delete"|삭제 작업에 데이터 소스에서 표시 된 레코드를 삭제 하는 데 사용 합니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> 및 <xref:System.Web.UI.WebControls.FormView.ItemDeleted> 이벤트입니다.|  
|편집|"Edit"|적용할 업데이트 작업에 사용 된 <xref:System.Web.UI.WebControls.FormView> 편집 모드에서 컨트롤입니다. 에 지정 된 콘텐츠는 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 데이터 행에 대 한 속성이 표시 됩니다.|  
|Insert|"Insert"|삽입 작업에 사용자가 입력 한 값을 사용 하 여 데이터 원본에 새 레코드를 삽입 하려고 하는 데 사용 합니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ItemInserting> 및 <xref:System.Web.UI.WebControls.FormView.ItemInserted> 이벤트입니다.|  
|새로 만들기|"New"|삽입할 삽입 작업에 사용 된 <xref:System.Web.UI.WebControls.FormView> 삽입 모드에서 컨트롤입니다. 에 지정 된 콘텐츠는 <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 데이터 행에 대 한 속성이 표시 됩니다.|  
|페이지|"Page"|페이징 작업에서는 페이징을 수행 하는 페이저 행에 단추를 나타내는 하는 데 사용 합니다. 페이징 작업을 지정 하려면 설정의 `CommandArgument` 속성을 "다음", "이전", "First", "지난" 또는 탐색 하는 페이지의 인덱스입니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 및 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 이벤트입니다. **참고:**  이 유형의 단추 호출기 템플릿에만에서 일반적으로 사용 됩니다.|  
|업데이트|"업데이트"|사용자가 입력 한 값을 사용 하 여 데이터 원본에 표시 된 레코드를 업데이트 하기 위해 업데이트 작업에 사용 합니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 및 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 이벤트입니다.|  
  
 Delete 단추 달리 (표시 된 레코드를 즉시 삭제)을 편집 하거나 새로 만들기 단추를 클릭할 때는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 편집 하거나 각각 삽입 모드로 전환 합니다. 에 포함 된 콘텐츠 편집 모드에는 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 현재 데이터 항목에 대 한 속성이 표시 됩니다. 일반적으로 항목 템플릿 편집 편집 단추를 업데이트 및 취소 단추를 사용 하 여 바뀝니다 되도록 정의 됩니다. 입력 필드의 데이터 형식에 대 한 적절 한 컨트롤 (예는 <xref:System.Web.UI.WebControls.TextBox> 또는 <xref:System.Web.UI.WebControls.CheckBox> 컨트롤) 수정 하려면 사용자에 대 한 필드의 값을 사용 하 여 일반적으로 표시 됩니다. 모든 변경 사항이 취소 단추를 클릭 데이터 원본에서 레코드를 업데이트 [업데이트] 단추를 클릭 합니다.  
  
 마찬가지로에 포함 된 콘텐츠는 <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 컨트롤이 삽입 모드에 있을 때 데이터 항목에 대 한 속성이 표시 됩니다. 삽입 항목 템플릿에 새 단추 삽입 및 취소 단추를 사용 하 여 대체 되 고 빈 입력된 컨트롤이 새 레코드에 대 한 값을 입력 하 여 사용자에 대해 표시 되는 일반적으로 정의 됩니다. 취소 단추를 클릭 하면 모든 변경 사항이 데이터 원본에서 레코드를 삽입 삽입 단추를 클릭 합니다.  
  
 <xref:System.Web.UI.WebControls.FormView> 컨트롤은 사용자를 다른 데이터 원본의 레코드를 탐색할 수 있는 페이징 기능을 제공 합니다. 페이저 행에 표시 됩니다 사용 하도록 설정 하는 경우는 <xref:System.Web.UI.WebControls.FormView> 페이지 탐색 컨트롤을 포함 하는 컨트롤입니다. 페이징에 사용 하도록 설정 합니다 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 속성을 `true`입니다. 페이저 행에 포함 된 개체의 속성을 설정 하 여 사용자 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> 하며 <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> 속성입니다. 기본 제공 페이저 행 UI를 사용 하는 대신 고유한 UI를 사용 하 여 만들 수 있습니다는 <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> 속성입니다.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>사용자 인터페이스 사용자 지정  
 모양을 사용자 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView> 컨트롤의 여러 부분에 대 한 스타일 속성을 설정 하 여 제어 합니다. 다음 표에서 다양 한 스타일 속성을 나열합니다.  
  
|스타일 속성|설명|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|데이터에 대 한 스타일 설정을 경우 행을 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 편집 모드 인지 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|에 표시 하는 빈 데이터 행에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.FormView> 제어할 때 데이터 소스 레코드가 들어 있지 않습니다.|  
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|바닥글 행에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|머리글 행에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|데이터에 대 한 스타일 설정을 경우 행을 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 삽입 모드 인지 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|에 표시 되는 페이저 행에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.FormView> 페이징 기능을 활성화 하는 경우를 제어 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|데이터에 대 한 스타일 설정을 경우 행을 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 읽기 전용 모드 인지 합니다.|  
  
<a name="events"></a>   
## <a name="events"></a>이벤트  
 <xref:System.Web.UI.WebControls.FormView> 컨트롤에 대해 프로그래밍할 수 있는 몇 가지 이벤트를 제공 합니다. 이렇게 하면 이벤트가 발생할 때마다 사용자 지정 루틴을 실행할 수 있습니다. 다음 표에서에서 지 원하는 이벤트를 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
|이벤트|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|<xref:System.Web.UI.WebControls.FormView> 컨트롤의 단추를 클릭하면 이 이벤트가 발생합니다. 이 이벤트는 대개 컨트롤에서 단추를 클릭 하면 작업을 수행 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|결국 발생 <xref:System.Web.UI.WebControls.FormViewRow> 개체가 만들어집니다는 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 이 이벤트는 대개 표시 되기 전에 레코드의 값을 수정 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|경우 삭제 단추 (단추를 사용 하 여 해당 `CommandName` 속성이 "Delete"로 설정)를 클릭 한 후를 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 데이터 소스에서 레코드를 삭제 합니다. 이 이벤트는 대개 삭제 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|삭제 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 데이터 소스에서 레코드를 삭제 합니다. 이 이벤트는 삭제 작업을 취소 하려면 종종 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|경우 삽입 단추 (단추를 사용 하 여 해당 `CommandName` "Insert"로 설정 하는 속성)를 클릭 한 후의 <xref:System.Web.UI.WebControls.FormView> 레코드를 삽입 합니다. 이 이벤트는 대개 삽입 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|삽입 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.FormView> 레코드를 삽입 합니다. 이 이벤트는 삽입 작업을 취소 하려면 종종 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|경우 업데이트 단추 (단추를 사용 하 여 해당 `CommandName` "Update"로 설정 하는 속성)를 클릭 한 후를 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 행을 업데이트 합니다. 이 이벤트는 대개 업데이트 작업의 결과 확인 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|업데이트 단추를 클릭할 때 발생을 하기 전에 <xref:System.Web.UI.WebControls.FormView> 레코드를 업데이트 합니다. 이 이벤트는 업데이트 작업을 취소 하는 경우가 많습니다.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|후에 발생 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤 모드를 변경 (하 고 편집, 삽입, 읽기 전용 모드). 작업을 수행 하려면이 이벤트는 대개 때는 <xref:System.Web.UI.WebControls.FormView> 컨트롤 모드를 변경 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|전에 발생 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤 모드를 변경 (하 고 편집, 삽입, 읽기 전용 모드). 이 이벤트는 종종 모드 변경을 취소 하려면 사용 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|페이저 단추 중 하나를 클릭하면 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 페이징 작업을 처리한 후에 이 이벤트가 발생합니다. 이 이벤트는 사용자가 컨트롤의 다른 레코드를 탐색 한 후 작업을 수행 해야 할 경우에 주로 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|페이저 단추 중 하나를 클릭하면 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 페이징 작업을 처리하기 전에 이 이벤트가 발생합니다. 이 이벤트는 페이징 작업을 취소 하는 경우가 많습니다.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>액세스 가능성  
 접근성 표준을 준수 하는 태그를 생성할 수 있도록이 컨트롤을 구성 하는 방법에 대 한 정보를 참조 하세요 [Visual Studio 및 ASP.NET의 접근성](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) 및 [ASP.NET 컨트롤과내게필요한옵션](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>CSS 스타일 적용  
 <xref:System.Web.UI.WebControls.FormView> 컨트롤 태그에 CSS 스타일 규칙을 지정할 수 있습니다. 모양을 사용자 지정 템플릿을 사용 하는 경우는 <xref:System.Web.UI.WebControls.FormView> 컨트롤 템플릿에 태그에 CSS 스타일을 지정할 수 있습니다. 이 경우 추가 외부 테이블이 없으면 반드시 합니다. 테이블을 설정 하 여 렌더링 되지 않도록 방지할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A> 속성을 `false`입니다.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:FormView  
    AccessKey="string"  
    AllowPaging="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    RenderTable="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <InsertRowStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
</asp:FormView>  
```  
  
   
  
## Examples  
 다음 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.FormView> 컨트롤에서 값을 표시 하는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.  
  
 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]  
  
 다음 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 기존 레코드를 편집 합니다.  
  
> [!IMPORTANT]
>  이 예제에서 컨트롤에 잠재적인 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 다음 예제에서는 사용 하는 방법에 설명 된 <xref:System.Web.UI.WebControls.FormView> 새 레코드를 삽입 하는 컨트롤입니다.  
  
> [!IMPORTANT]
>  이 예제에서 컨트롤에 잠재적인 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자의 새 인스턴스를 초기화 하는 데는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다. 동적으로 추가 하는 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 페이지, 새 <xref:System.Web.UI.WebControls.FormView> 개체 속성을 설정 하 고 추가한 다음이 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 등의 컨테이너의 컬렉션 컨트롤 <xref:System.Web.UI.WebControls.PlaceHolder>합니다.  
  
   
  
## Examples  
 다음 예제에는 동적으로 추가 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.FormView> 컨트롤 페이지입니다.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이징 기능을 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>페이징 기능을 사용하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> 컨트롤에 사용할 데이터 원본에 다른 레코드로 이동할 수 있는 기본 제공 페이징 기능을 합니다. 페이징 기능을 지 원하는 모든 데이터 원본 개체를 사용 하 여 사용할 수는 <xref:System.Collections.ICollection?displayProperty=nameWithType> 인터페이스 또는 페이징 기능을 지 원하는 데이터 원본입니다.  
  
 페이징 기능을 설정 합니다 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 속성을 `true`입니다. 사용 하 여 데이터 원본에 있는 항목의 총 수를 확인할 수는 <xref:System.Web.UI.WebControls.FormView.PageCount%2A> 속성입니다. 현재 표시 된 항목의 인덱스를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> 속성입니다.  
  
 페이징을 사용 하는 페이저 행을 호출 하는 추가 행은에 자동으로 표시 된 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 페이저 행을 페이지 탐색 컨트롤을 포함 하 고 위쪽, 아래쪽 또는 위쪽와에서 컨트롤의 아래쪽에 표시할 수 있습니다. 페이저 행에 4 개의 기본 제공 호출기 모드를 표시 합니다. 다음 표에서 4 가지 모드를 설명 합니다.  
  
|모드|설명|  
|----------|-----------------|  
|`PagerButton.NextPrevious`|이전 및 다음 단추 중 구성 된 페이지 매김 컨트롤의 집합.|  
|`PagerButton.NextPreviousFirstLast`|이전에 구성 된 페이지 매김 컨트롤의 다음으로, 첫 번째 및 마지막 단추 설정 합니다.|  
|`PagerButton.Numeric`|페이지에 직접 액세스할 수 있는 번호가 매겨진 링크 단추로 구성된 페이지 매김 컨트롤의 집합입니다. 기본 모드입니다.|  
|`PagerButton.NumericFirstLast`|번호가 매겨진 및 첫 번째 및 마지막 링크 단추로 구성 된 페이지 매김 컨트롤의 집합.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> 데이터 소스에 두 개 미만의 레코드가 포함 된 경우 컨트롤 페이저 행을 자동으로 숨깁니다.  
  
 페이저 행 (예: 페이저 디스플레이 모드, 시간과 페이저 컨트롤의 텍스트 레이블을 표시 하려면 페이지 링크의 수)의 설정을 사용 하 여 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> 속성입니다. 배경색 및 글꼴 색 등 페이저 행의 모양을 제어 하려면 사용 된 <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> 속성입니다. <xref:System.Web.UI.WebControls.FormView> 컨트롤 또한 페이저 행에 대 한 사용자 지정 템플릿을 정의할 수 있습니다. 페이저 행 템플릿을 만드는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>합니다.  
  
 <xref:System.Web.UI.WebControls.FormView> 컨트롤 페이징이 발생 하는 경우 사용자 지정 작업을 수행 하는 데 사용할 수 있는 몇 가지 이벤트를 제공 합니다. 다음 표에서 사용 가능한 이벤트를 나열합니다.  
  
|이벤트|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|페이저 단추 중 하나를 클릭하면 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 페이징 작업을 처리한 후에 이 이벤트가 발생합니다. 이 이벤트는 사용자가 컨트롤의 다른 레코드를 탐색 한 후 작업을 수행 해야 할 경우에 주로 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|페이저 단추 중 하나를 클릭하면 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 페이징 작업을 처리하기 전에 이 이벤트가 발생합니다. 이 이벤트는 페이징 작업을 취소 하는 경우가 많습니다.|  
  
> [!NOTE]
>  변경한 경우에 이러한 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> 속성 프로그래밍 방식으로 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 에서 페이징 기능을 사용 하도록 설정 하려면 속성을 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 배경에 표시할 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 배경에 표시할 이미지의 URL입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> 의 배경에 표시할 이미지에 URL을 지정 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다.  
  
> [!NOTE]
>  지정된 된 이미지 보다 작은 경우는 <xref:System.Web.UI.WebControls.FormView> 백그라운드에 맞게 컨트롤, 이미지를 바둑판식으로 표시 합니다. 이미지 컨트롤 보다 큰 경우 이미지가 잘립니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> 의 백그라운드에서 사용자 지정 이미지를 표시 하려면 속성을 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다.  
  
 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ BottomPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> 컨트롤 아래쪽에 표시되는 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> 컨트롤의 아래쪽 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징이 활성화 된 경우 (때 합니다 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 속성이로 설정 되어 `true`), 페이저 행을 호출 하는 추가 행에 자동으로 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다. 페이저 행을 다른 레코드를 탐색할 수 있도록 하 고 위쪽, 아래쪽 또는 둘 다 위쪽과 컨트롤의 아래쪽에 표시 될 수 있는 컨트롤을 포함 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> 속성을 프로그래밍 방식으로 액세스 합니다 <xref:System.Web.UI.WebControls.FormViewRow> 의 아래쪽 페이저 행을 나타내는 개체를 <xref:System.Web.UI.WebControls.FormView> 컨트롤.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> 속성을 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.FormView> 컨트롤의 아래쪽 페이저 행을 만듭니다는 <xref:System.Web.UI.WebControls.FormView.ItemCreated> 이벤트입니다.  
  
 예를 들어 사용자 지정 콘텐츠를 추가 하는 경우 아래쪽 페이저 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. 수정을 <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> 후 속성에 수행 해야 합니다 <xref:System.Web.UI.WebControls.FormViewRow> 아래쪽 페이저 행을 나타내는 개체 생성 되었으면이 고, 그렇지는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 변경 내용을 덮어씁니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> 맨 아래에 표시 되는 페이저 행에 액세스 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다. 페이저 행이 추가 내용으로 업데이트 됩니다.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.FormView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 HTML 캡션 요소에서 렌더링할 텍스트를 가져오거나 설정합니다. 이 속성을 사용하면 보조 기술 디바이스 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 HTML 캡션 요소에서 렌더링할 텍스트를 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.FormView.Caption%2A> 의 HTML 캡션 요소에서 렌더링할 텍스트를 지정 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 지정 하는 텍스트 컨트롤을 보다 쉽게 액세스할 수 있도록 하는 데 사용할 수 있는 테이블에 대 한 설명 사용 하 여 보조 기술 장치를 제공 합니다.  
  
 에 대 한 추가적인 내게 필요한 옵션 지원 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤에서 제공 하는 <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> 속성입니다. 사용 합니다 <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> 의 HTML 캡션 요소의 맞춤을 지정 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.Caption%2A> HTML 캡션 요소로 렌더링에 대 한 텍스트를 지정 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 있는 HTML 캡션 요소의 가로 또는 세로 위치를 가져오거나 설정합니다. 이 속성을 사용하면 보조 기술 디바이스 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 값 중 하나입니다. 기본값은 <see langword="TableCaptionAlign.NotSet" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> 의 HTML 캡션 요소의 가로 또는 세로 위치를 지정 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 이 속성을 사용하면 보조 기술 디바이스 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.  
  
 이 속성은 <xref:System.Web.UI.WebControls.TableCaptionAlign> 열거형의 값 중 하나로 설정됩니다. 다음 표에서 가능한 값을 나열합니다.  
  
|값|설명|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|캡션 요소가 테이블의 아래쪽에 맞춰집니다.|  
|`TableCaptionAlign.Left`|캡션 요소가 테이블의 왼쪽에 맞춰집니다.|  
|`TableCaptionAlign.NotSet`|캡션 요소의 맞춤 설정 되지 않았습니다.|  
|`TableCaptionAlign.Right`|캡션 요소가 테이블의 오른쪽에 맞춰집니다.|  
|`TableCaptionAlign.Top`|캡션 요소가 테이블의 위쪽에 맞춰집니다.|  
  
> [!NOTE]
>  이 속성 설정 된 경우 `TableCaptionAlign.NotSet`, 브라우저의 기본값이 사용 됩니다.  
  
 에 대 한 추가적인 내게 필요한 옵션 지원 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤에서 제공 하는 <xref:System.Web.UI.WebControls.FormView.Caption%2A> 속성입니다. 사용 합니다 <xref:System.Web.UI.WebControls.FormView.Caption%2A> 의 HTML 캡션 요소에서 렌더링할 텍스트를 지정 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> HTML 캡션 요소에서 지정 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 컨트롤 컨트롤의 왼쪽에 렌더링 되어야 합니다.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정한 값이 <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 열거형 값이 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 내용과 셀 테두리 사이의 여백 크기를 가져오거나 설정합니다.</summary>
        <value>셀 내용과 셀 테두리 사이의 여백 크기(픽셀)입니다. 기본값은 -1로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> 셀 내용과 셀 테두리 사이의 간격을 제어 하는 속성입니다. 지정 된 안쪽 여백 크기를 셀의 네 변 모두에 추가 됩니다.  
  
 동일한 열에 있는 모든 셀을 <xref:System.Web.UI.WebControls.FormView> 컨트롤 동일한 너비를 포함 합니다. 여백은 광범위 한 셀에 적용 되 고 열의 다른 모든 셀은 해당 셀 너비를 조정 됩니다. 마찬가지로, 동일한 행의 모든 셀의 높이가 같습니다. 행의 가장 높은 셀의 안쪽 여백이 적용 됩니다 및 다른 모든 셀의 행에서 해당 셀 높이 조정 됩니다. 개별 셀 크기를 지정할 수 없습니다.  
  
 셀 사이의 간격을 조정 합니다 <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> 속성입니다.  
  
> [!NOTE]
>  이 속성은 설정 되지 않은 경우에 브라우저의 기본값이 사용 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> 셀 내용과 셀 테두리 사이의 간격을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 사이의 여백 크기를 가져오거나 설정합니다.</summary>
        <value>픽셀 단위로 나타낸 셀 사이의 공간 크기입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> 에 인접 한 셀 사이의 간격을 제어 하려면 속성을 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다. 이 간격이 세로 및 가로로 적용 됩니다. 셀 간격 전체 컨트롤에 대 한 균일 한 경우 행 또는 열에 개별 셀 간격을 지정할 수 없습니다.  
  
> [!NOTE]
>  이 속성을 0 보다 큰 값으로 설정 하 고 설정한 경우는 <xref:System.Web.UI.WebControls.FormView.GridLines%2A> 속성 셀 테두리를 표시 하는 값으로 인접 한 셀의 테두리 간 간격이 생깁니다. 이 이런 경우에 <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> 속성 간격의 크기를 제어 합니다.  
  
 셀 내용과 셀 테두리 사이의 간격을 조정 합니다 <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> 인접 한 셀 사이의 간격을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As FormViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::FormViewMode newMode);" />
      <MemberSignature Language="F#" Value="member this.ChangeMode : System.Web.UI.WebControls.FormViewMode -&gt; unit" Usage="formView.ChangeMode newMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode"><see cref="T:System.Web.UI.WebControls.FormViewMode" /> 열거형 값 중 하나입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤을 지정된 데이터 입력 모드로 전환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> 프로그래밍 방식으로 전환 하는 방법의 <xref:System.Web.UI.WebControls.FormView> 컨트롤 편집, 삽입 및 읽기 전용 모드 사이입니다. 또한이 메서드를 업데이트 합니다 <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 지정된 된 모드를 사용 하 여 속성입니다. 다음 표에서 서로 다른 모드 값을 보여 줍니다.  
  
|모드|설명|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> 컨트롤은 레코드의 값을 업데이트할 수 있는 편집 모드에 있습니다.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> 컨트롤은 데이터 원본에 새 레코드를 추가할 수 있는 삽입 모드에 있습니다.|  
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> 컨트롤은 일반적인 표시 모드는 읽기 전용 모드입니다.|  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 고 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 이 메서드가 호출 될 때 이벤트가 발생 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> 반환 하는 방법의 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 읽기 전용 모드로 사용자가 다른 레코드를 탐색할 때마다.  
  
 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="formView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">컨트롤 계층 구조를 만드는 데 사용할 데이터 소스를 나타내는 <see cref="T:System.Collections.IEnumerable" />입니다.</param>
        <param name="dataBinding">컨트롤 계층 구조를 데이터 소스에서 직접 만드는 경우 <see langword="true" />이고, 컨트롤 계층 구조를 뷰 상태에서 만드는 경우 <see langword="false" />입니다.</param>
        <summary>지정된 데이터 소스를 사용하여 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤을 렌더링하는 데 사용할 컨트롤 계층 구조를 만듭니다.</summary>
        <returns>데이터 소스에서 만든 항목의 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29> 메서드는 호출 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤의 컨트롤 계층 구조를 만들려면를 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 경우는 `dataBinding` 매개 변수는 `true`, 데이터 바인딩 컨트롤 계층 구조를 만들기 전에 수행 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.DataSourceView" /> 컨트롤이 바인딩되는 <see cref="T:System.Web.UI.IDataSource" />의 <see cref="T:System.Web.UI.WebControls.FormView" />가 <see langword="null" />인 경우</exception>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.FormView" /> 클래스 자체 컨트롤 계층 구조를 만들려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="formView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 대한 기본 테이블 스타일 개체를 만듭니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Style" /> 컨트롤에 대한 기본 테이블 스타일이 들어 있는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView> 해당 기본 테이블 스타일 개체를 만들 수 있습니다. 기본 스타일을 설정 하는 것 외에도 <xref:System.Web.UI.WebControls.TableStyle> 개체를이 메서드는 또한 설정는 <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> 속성을 0입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.FormView" /> 클래스를 사용자 고유의 기본 스타일을 만들려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="formView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>처리를 위해 데이터 소스에 전달되는 인수를 포함하는 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 개체입니다.</summary>
        <returns>데이터 소스에 전달되는 인수를 포함하는 <see cref="T:System.Web.UI.DataSourceSelectArguments" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A> 메서드는 호출 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 만들고를 <xref:System.Web.UI.DataSourceSelectArguments> 데이터 원본에 전달 된 인수를 포함 하는 개체입니다. 이 구현에서는 <xref:System.Web.UI.DataSourceSelectArguments> 페이징 작업에 대 한 인수를 포함 하는 개체입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.FormView" /> 클래스, 데이터 원본에 전달 되는 고유한 값을 지정 하려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (itemIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::FormViewRow ^ CreateRow(int itemIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow&#xA;override this.CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow" Usage="formView.CreateRow (itemIndex, rowType, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">표시할 데이터 항목의 인덱스(0부터 시작)입니다.</param>
        <param name="rowType"><see cref="T:System.Web.UI.WebControls.DataControlRowType" /> 열거형 값 중 하나입니다.</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 열거형 값의 비트 조합입니다.</param>
        <summary>지정된 항목 인덱스, 행 형식, 행 상태를 사용하여 <see cref="T:System.Web.UI.WebControls.FormViewRow" /> 개체를 만듭니다.</summary>
        <returns>항목 인덱스, 행 형식, 행 상태가 지정된 <see cref="T:System.Web.UI.WebControls.FormViewRow" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateRow%2A> 메서드는 호출 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 만들고를 <xref:System.Web.UI.WebControls.FormViewRow> 컨트롤 내에서 행을 나타내는 데 사용 되는 개체입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.FormView" /> 클래스를 반환 하려면이 메서드를 재정의할 수 있습니다는 <see cref="T:System.Web.UI.WebControls.FormViewRow" /> 사용자 지정 설정 사용 하 여 개체입니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : unit -&gt; System.Web.UI.WebControls.Table&#xA;override this.CreateTable : unit -&gt; System.Web.UI.WebControls.Table" Usage="formView.CreateTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤을 포함하는 테이블을 만듭니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Table" /> 컨트롤을 포함하는 테이블을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView.CreateTable%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 컨트롤에 대 한 컨테이너 역할을 하는 테이블을 만듭니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode CurrentMode { System::Web::UI::WebControls::FormViewMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMode : System.Web.UI.WebControls.FormViewMode" Usage="System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 현재 데이터 입력 모드를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewMode" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 속성을 확인 하는지 여부를 <xref:System.Web.UI.WebControls.FormView> 컨트롤은 편집, 삽입 또는 읽기 전용 모드에. 다음 표에서 서로 다른 모드 값을 보여 줍니다.  
  
|모드|설명|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> 컨트롤은 레코드의 값을 업데이트할 수 있는 편집 모드에 있습니다.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> 컨트롤은 데이터 원본에 새 레코드를 추가할 수 있는 삽입 모드에 있습니다.|  
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> 컨트롤은 일반적인 표시 모드는 읽기 전용 모드입니다.|  
  
 이 값은 일반적으로 자동으로 설정 된 <xref:System.Web.UI.WebControls.FormView> 새로 만들기, 업데이트, 삽입, 삭제 또는 취소 명령 단추를 클릭할 때 제어 합니다. 경우는 <xref:System.Web.UI.WebControls.FormView> 제어 작업에 대 한 응답에서 모드를 변경, 다음 표에 이벤트가 발생 합니다. 이 옵션을 사용 하면 이벤트가 발생할 때 해당 루틴을 수행 하는 사용자 지정 이벤트 처리기를 만들 수 있습니다.  
  
|이벤트|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|발생 경우를 <xref:System.Web.UI.WebControls.FormView> 컨트롤 모드를 변경 하지만 모드 변경 된 후입니다. 이 이벤트는 일반적으로 작업 하는 데 사용 될 때마다는 <xref:System.Web.UI.WebControls.FormView> 컨트롤 모드를 변경 합니다.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|발생 경우를 <xref:System.Web.UI.WebControls.FormView> 컨트롤 모드를 변경 모드가 변경 하기 전에 합니다. 이 이벤트 모드 변경을 취소 하려면 일반적으로 사용 됩니다.|  
  
 **참고** 를 사용 하 여 프로그래밍 방식으로 모드를 변경 하는 경우에 이러한 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 속성을 여부를 <xref:System.Web.UI.WebControls.FormView> 컨트롤은 편집, 삽입 또는 읽기 전용 모드에 합니다. 사용자가 다른 레코드는 이동 하려고 하는 경우는 <xref:System.Web.UI.WebControls.FormView> 컨트롤은에서 편집, 페이징 작업이 취소 됩니다.  
  
 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="formView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 데이터 소스를 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.FormView.DataBind> 데이터 원본에서 데이터를 바인딩할 메서드는 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다. 이 메서드는 컨트롤의 현재 서식 파일에서 모든 데이터 바인딩 식을 확인합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.FormView.DataItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 바인딩된 데이터 항목을 가져옵니다.</summary>
        <value><see cref="T:System.Object" /> 컨트롤에 바인딩된 데이터 항목을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.DataItem%2A> 에 바인딩된 데이터 항목에 액세스 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 현재 레코드의 필드 값에 직접 액세스할 수 있는 데이터 항목 자주 사용 됩니다. 형식의 <xref:System.Object> 이 반환한 속성 데이터 원본에 따라 달라 집니다. 예를 들어 경우는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 바인딩되는 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 <xref:System.Data.DataRowView> 개체가 반환 됩니다.  
  
> [!NOTE]
>  이 속성은 데이터 바인딩이 발생 한 후에 사용할 수 있습니다. 발생 하기 전 까지의 데이터 바인딩,이 속성은 반환 `null`합니다. 이 속성은 또한 때 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤 삽입 모드에 있고 반환 `null`합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.DataItem%2A> 데이터 항목에 필드의 값을 확인 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemCount : int" Usage="System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스의 데이터 항목 수를 가져옵니다.</summary>
        <value>데이터 소스의 데이터 항목 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.FormView.DataItemCount%2A> 속성을 데이터 원본에 포함 된 데이터 항목의 수를 확인 합니다. 이 속성에 동일한 값을 포함 합니다 <xref:System.Web.UI.WebControls.FormView.PageCount%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemIndex : int" Usage="System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에서 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 바인딩된 데이터 항목의 인덱스를 가져옵니다.</summary>
        <value>데이터 소스에서 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 바인딩된 데이터 항목의 인덱스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> 에 바인딩된 데이터 항목의 인덱스를 확인 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 데이터 소스에서 합니다. 이 속성에 동일한 값을 포함 합니다 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> 속성입니다.  
  
> [!NOTE]
>  이 속성은 적용 가능한 경우는 <xref:System.Web.UI.WebControls.FormView> 은 컨트롤이 삽입 모드에 있습니다. 컨트롤이 삽입 모드에 있을 때의 <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> 속성이-1을 반환 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.FormView.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표시된 레코드의 기본 키를 나타내는 <see cref="T:System.Web.UI.WebControls.DataKey" /> 개체를 가져옵니다.</summary>
        <value>표시된 레코드의 기본 키를 나타내는 <see cref="T:System.Web.UI.WebControls.DataKey" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 속성이 설정 되어를 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 자동으로 만듭니다.는 <xref:System.Web.UI.WebControls.DataKey> 필드 또는 필드에 나열 된 키/값 쌍이 들어 있는 개체는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 현재 레코드에 대 한 속성. 사용 된 <xref:System.Web.UI.WebControls.FormView.DataKey%2A> 이 가져올 속성 <xref:System.Web.UI.WebControls.DataKey> 개체입니다. 이 속성은 키와 해당 값에 지정 된 필드를 가져오는 데 일반적으로 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 속성입니다.  
  
> [!NOTE]
>  사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> 속성에 나열 된 첫 번째 키 필드의 값을 확인 하는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.DataKey%2A> 키 필드의 값을 확인 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에 대한 키 필드의 이름이 들어 있는 배열을 가져오거나 설정합니다.</summary>
        <value>데이터 소스에 대한 키 필드의 이름이 들어 있는 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 데이터 원본의 기본 키를 나타내는 필드 이름의 쉼표로 구분 된 목록을 지정 하는 속성입니다. 경우는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 속성이 설정 되어를 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 자동으로 만듭니다.는 <xref:System.Web.UI.WebControls.DataKey> 필드 또는 필드에 나열 된 키/값 쌍이 들어 있는 개체는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 현재 레코드에 대 한 속성. 합니다 <xref:System.Web.UI.WebControls.DataKey> 개체에 저장 되는 <xref:System.Web.UI.WebControls.FormView.DataKey%2A> 속성입니다.  
  
> [!NOTE]
>  설정 해야 합니다는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 기본 제공 업데이트, 삭제 및 삽입의 기능에 대 한 속성을 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 데이터 원본에 대 한 키 필드를 지정 하는 속성에 바인딩된는 <xref:System.Web.UI.WebControls.FormView> 컨트롤.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewMode DefaultMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMode : System.Web.UI.WebControls.FormViewMode with get, set" Usage="System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트, 삽입 또는 취소 작업 후에 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤이 되돌아가는 데이터 입력 모드를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewMode" /> 값 중 하나입니다. 기본값은 <see langword="FormViewMode.ReadOnly" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 속성을 지정 하는지 여부를 <xref:System.Web.UI.WebControls.FormView> 제어가 반환 편집, 삽입 또는 읽기 전용 모드에 업데이트 이후에 삽입 또는 취소 작업이 수행 됩니다. 기본적으로 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 읽기 전용 모드로 반환; 유지할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView> 편집에서 제어 하거나 적절 한 값으로이 속성을 설정 하 여 삽입 모드입니다. 다음 표에서 서로 다른 모드 값을 보여 줍니다.  
  
|모드|설명|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> 컨트롤은 레코드의 값을 업데이트할 수 있는 편집 모드에 있습니다.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> 컨트롤은 데이터 원본에 새 레코드를 추가할 수 있는 삽입 모드에 있습니다.|  
|`FormViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> 컨트롤은 일반적인 표시 모드는 읽기 전용 모드입니다.|  
  
 이 속성은 일반적으로 때 사용 되는 여 <xref:System.Web.UI.WebControls.FormView> 컨트롤에는 단일 용도와 같은 삽입 하거나 레코드를 편집 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 유지 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 업데이트 작업 후 편집 모드에서 컨트롤입니다.  
  
 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정한 값이 <see cref="T:System.Web.UI.WebControls.FormViewMode" /> 열거형 값이 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : unit -&gt; unit&#xA;override this.DeleteItem : unit -&gt; unit" Usage="formView.DeleteItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스에서 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 현재 레코드를 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> 프로그래밍 방식으로의 현재 레코드를 삭제 하는 방법의 <xref:System.Web.UI.WebControls.FormView> 데이터 소스에서 합니다. 외부에서 현재 레코드를 삭제 해야 할 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.FormView> 와 같은 페이지의 다른 컨트롤을 제어 합니다. 이 메서드를 호출 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ItemDeleted> 고 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> 프로그래밍 방식으로의 현재 레코드를 삭제 하는 방법을 <xref:System.Web.UI.WebControls.FormView> 데이터 소스에서 합니다.  
  
 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 삭제 작업을 수행하는 경우 호출되는 페이지의 메서드에 대한 이름을 가져오거나 설정합니다.</summary>
        <value>컨트롤에서 삭제 작업을 수행할 때 호출되는 페이지상의 메서드 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web Forms 모델 바인딩 사용에 대 한 자습서 시리즈를 참조 하세요 [모델 바인딩 및 Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집 모드에서 항목에 대한 사용자 지정 내용을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> 컨트롤이 편집 모드에 있는 경우 데이터 행에 대한 사용자 지정 내용이 들어 있는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다. 기본값은 null로, 이 속성이 설정되지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤은 컨트롤의 현재 모드를 기준으로 데이터 행에 대 한 다른 템플릿을 렌더링 (지정 된는 <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 속성). 다음 표에서 각 모드에 사용 되는 템플릿을 보여 줍니다.  
  
|모드|렌더링 되는 템플릿|  
|----------|-----------------------|  
|편집|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|읽기 전용|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 사용 합니다 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 경우 데이터에 대 한 고유한 사용자 인터페이스 (UI)를 정의 하려면 속성 행는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 편집 모드 인지 합니다. 항목 템플릿 편집에는 일반적으로 레코드를 업데이트 하 고 업데이트 작업을 취소 하는 명령 단추 뿐만 아니라를 기존 레코드의 값을 업데이트 하려면 사용자에 대 한 입력된 컨트롤이 포함 되어 있습니다.  
  
 사용자 지정 템플릿, 첫 번째 위치를 지정 하려면 `<EditItemTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<EditItemTemplate>` 태그입니다. 양방향 바인딩 식을 사용 하 여 입력된 컨트롤을 사용 하 여 필드를 연결할 수 있습니다. 따라서는 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 편집 모드로 연결된 된 입력된 컨트롤에 자동으로 원래 필드 값을 표시 합니다. 레코드가 업데이트 될 때를 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 자동으로 연결된 된 입력된 컨트롤에서 업데이트 된 필드 값을 추출 합니다. 양방향 바인딩 식에 대 한 자세한 내용은 참조 하세요. [데이터베이스를 바인딩할](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)합니다. 기본 제공 취소 및 업데이트 작업을 수행 하는 명령 단추를 만들려면 추가할 명령 단추 컨트롤을 사용 하 여 템플릿을 해당 `CommandName` 다음 표에 나열 된 속성 값 중 하나로 설정 합니다.  
  
|명령 단추 종류|CommandName 값|  
|-------------------------|-----------------------|  
|취소|"취소"|  
|업데이트|"업데이트"|  
  
 항목 템플릿을 사용 하 여 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 편집 모드에서 데이터 행에 대 한 사용자 지정 템플릿을 정의 하는 방법에 설명 합니다.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤이 편집 모드에 있을 때 데이터 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤이 편집 모드에 있을 때 데이터 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> 속성 데이터의 모양을 제어 하는 경우 행을 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 편집 모드 인지 합니다. 경우는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 편집 모드에 있으면, 데이터 행에 의해 지정 된 사용자 정의 콘텐츠 표시는 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 속성입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 선언적으로 다음 방법 중 하나를 사용 하 여 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치 합니다 <xref:System.Web.UI.WebControls.FormView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어, `EditRowStyle-ForeColor`).  
  
-   중첩 된 `<EditRowStyle>` 을 열고 닫는 태그 사이 요소를 <xref:System.Web.UI.WebControls.FormView> 컨트롤.  
  
 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `EditRowStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> 경우 데이터에 대 한 사용자 지정 스타일을 지정 하려면 속성 행는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 편집 모드 인지 합니다.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 바인딩된 데이터 소스에 레코드가 들어 있지 않은 경우 표시되는 빈 데이터 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>빈 데이터 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> 에서 빈 데이터 행의 모양을 제어 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다. 빈 데이터 행에는 컨트롤에 바인딩되는 데이터 소스에 레코드가 없을 때 표시 됩니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 선언적으로 다음 방법 중 하나를 사용 하 여 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치 합니다 <xref:System.Web.UI.WebControls.FormView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어, `EmptyDataRowStyle-ForeColor`).  
  
-   중첩 된 `<EmptyDataRowStyle>` 을 열고 닫는 태그 사이 요소를 <xref:System.Web.UI.WebControls.FormView> 컨트롤.  
  
 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `EmptyDataRowStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> 빈 데이터 행을 표시 하는 경우 사용자 지정 스타일을 지정 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 모든 레코드를 포함 하지 않는 데이터 원본에 바인딩된 컨트롤입니다.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>레코드가 들어 있지 않은 데이터 소스에 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤이 바인딩될 때 렌더링되는 빈 데이터 행에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>빈 데이터 행에 대한 사용자 지정 콘텐츠가 들어 있는 <see cref="T:System.Web.UI.ITemplate" />입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 빈 데이터 행에 표시 되는 <xref:System.Web.UI.WebControls.FormView> 제어할 때 컨트롤에 바인딩되는 데이터 소스 레코드가 들어 있지 않습니다. 사용 하 여 빈 데이터 행에 대 한 사용자 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 속성입니다. 빈 데이터 행에 대 한 사용자 지정 템플릿을 지정 하려면 먼저 `<EmptyDataTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<EmptyDataTemplate>` 태그입니다. 빈 데이터 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> 속성입니다. 설정 하 여 빈 데이터 행에 대 한 기본 제공 UI를 사용할 수는 또는 <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두를 <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> 및 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 속성이 우선 합니다.  
  
   
  
## Examples  
 다음 예제에서는 빈 데이터 행을 표시 하는 경우 사용자 지정 템플릿을 정의 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.FormView> 모든 레코드를 포함 하지 않는 데이터 원본에 바인딩된 컨트롤입니다.  
  
 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataText : string with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>레코드가 들어 있지 않은 데이터 소스에 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤이 바인딩될 때 렌더링되는 빈 데이터 행에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>빈 데이터 행에 표시할 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 빈 데이터 행에 표시 되는 <xref:System.Web.UI.WebControls.FormView> 제어할 때 컨트롤에 바인딩되는 데이터 소스 레코드가 들어 있지 않습니다. 사용 된 <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> 빈 데이터 행에 표시할 텍스트를 지정 하는 속성입니다. 빈 데이터 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> 속성입니다. 설정 하 여 빈 데이터 행에 대 한 사용자 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 또는 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두를 <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> 및 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 속성이 우선 합니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> 빈 데이터 행에 표시할 텍스트를 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>유효성 검사 컨트롤이 삽입 또는 업데이트 작업 도중 발생하는 예외를 처리하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>유효성 검사 컨트롤이 삽입 또는 업데이트 작업 도중 발생하는 예외를 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="formView.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤이 데이터에 올바르게 바인딩되어 있는지 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> 메서드는에서 사용 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.FormView> 확인 하는 클래스를 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 데이터에 올바르게 바인딩되어 합니다. <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> 메서드는 일반적으로 하는 동안 호출 되는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> 데이터 바인딩된 컨트롤을 아직 바인딩되지 때 데이터 원본에 컨트롤을 바인딩할 메서드를 사용할 수 있지만 데이터 바인딩이 필요 합니다. 데이터 바인딩이 발생을 방지 하기 위해이 버전의 메서드 재정의 된 경우는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 삽입 모드 인지 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeKeys);" />
      <MemberSignature Language="F#" Value="abstract member ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit&#xA;override this.ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit" Usage="formView.ExtractRowValues (fieldValues, includeKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">현재 데이터 항목의 필드 값을 저장하는 데 사용되는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다.</param>
        <param name="includeKeys">키 필드를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>데이터 행 내에서 선언된 각 필드의 값을 검색하여 지정된 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 개체에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView> 데이터 행 내에서 선언 된 각 필드의 값을 검색 하는 컨트롤입니다. 현재 모드에 따라 다른 템플릿을 표시 하는 데이터 행을 하기 때문에이 메서드는 현재 모드에 해당 하는 템플릿에 선언 된 필드 값만 검색 합니다. 다음 표에서 사용 가능한 모드 및 해당 템플릿을 보여 줍니다.  
  
|모드|템플릿|  
|----------|--------------|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|편집|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|읽기 전용|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 추출 된 값 키 필드 또는 필드를 사용 하 여 포함 하는지 여부를 지정할 수 있습니다는 `includeKeys` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.FormView" /> 클래스, 필드 값을 검색 하는 사용자 고유의 루틴을 생성 하도록이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ FooterRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> 컨트롤의 바닥글 행을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> 컨트롤의 바닥글 행을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바닥글 행의 맨 아래에 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView> 시기를 제어 합니다 <xref:System.Web.UI.WebControls.FormView.FooterText%2A> 또는 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 속성을 설정 합니다. 사용 된 <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> 속성을 프로그래밍 방식으로 액세스를 <xref:System.Web.UI.WebControls.FormViewRow> 바닥글 행을 나타내는 개체입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> 속성을 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.FormView> 컨트롤의 바닥글 행을 만듭니다는 <xref:System.Web.UI.WebControls.FormView.ItemCreated> 이벤트입니다.  
  
 예를 들어 사용자 지정 콘텐츠를 추가할 때 바닥글 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. 수정을 <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> 후 속성에 수행 해야 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤 렌더링 되었으면이 고, 그렇지는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 변경 내용을 덮어씁니다.  
  
 바닥글 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> 프로그래밍 방식으로 하는 동안 바닥글 행의 속성을 수정 하는 속성은 <xref:System.Web.UI.WebControls.FormView.ItemCreated> 이벤트입니다.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 바닥글 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 바닥글 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바닥글 행의 맨 아래에 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView> 시기를 제어 합니다 <xref:System.Web.UI.WebControls.FormView.FooterText%2A> 또는 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 속성을 설정 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> 바닥글 행의 모양을 제어 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 선언적으로 다음 방법 중 하나를 사용 하 여 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치 합니다 <xref:System.Web.UI.WebControls.FormView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어, `FooterStyle-ForeColor`).  
  
-   중첩 된 `<FooterStyle>` 을 열고 닫는 태그 사이 요소를 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `FooterStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> 바닥글 행에 대 한 사용자 지정 스타일을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 바닥글 행에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>바닥글 행에 대한 사용자 지정 내용이 들어 있는 <see cref="T:System.Web.UI.ITemplate" />입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바닥글 행의 맨 아래에 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView> 시기를 제어 합니다 <xref:System.Web.UI.WebControls.FormView.FooterText%2A> 또는 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 속성을 설정 합니다. 사용 하 여 바닥글 행에 대 한 사용자 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 속성입니다. 바닥글 행에 대 한 사용자 지정 템플릿을 지정 하려면 먼저 `<FooterTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<FooterTemplate>` 태그입니다. 바닥글 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> 속성입니다. 또는 표시할 수 있습니다 단순히 텍스트 바닥글 행에서 설정 하 여는 <xref:System.Web.UI.WebControls.FormView.FooterText%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두를 <xref:System.Web.UI.WebControls.FormView.FooterText%2A> 및 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 속성이 우선 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 바닥글 행에 대해 렌더링할 사용자 지정 템플릿을 정의 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterText : string with get, set" Usage="System.Web.UI.WebControls.FormView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 바닥글 행에 표시할 텍스트를 가져오거나 설정합니다.</summary>
        <value>바닥글 행에 표시할 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바닥글 행의 맨 아래에 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView> 시기를 제어 합니다 <xref:System.Web.UI.WebControls.FormView.FooterText%2A> 또는 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 속성을 설정 합니다. 사용 된 <xref:System.Web.UI.WebControls.FormView.FooterText%2A> 바닥글 행에 표시할 텍스트를 지정 하는 속성입니다. 바닥글 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> 속성입니다. 설정 하 여 바닥글 행에 대 한 사용자 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 또는 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두를 <xref:System.Web.UI.WebControls.FormView.FooterText%2A> 및 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 속성이 우선 합니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.FooterText%2A> 바닥글 행에 표시할 텍스트를 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.FormView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 모눈선 스타일을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.GridLines" /> 값 중 하나입니다. 기본값은 <see langword="GridLines.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.FormView.GridLines%2A> 속성에 대 한 모눈선 스타일을 지정 하는 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다. 다음 표에서 사용 가능한 스타일을 보여 줍니다.  
  
|스타일|설명|  
|-----------|-----------------|  
|`GridLines.None`|눈금선이 없는 표시 됩니다.|  
|`GridLines.Horizontal`|가로 모눈선만 표시 됩니다.|  
|`GridLines.Vertical`|세로 모눈선만 표시 됩니다.|  
|`GridLines.Both`|가로 및 세로 모눈선을 표시합니다.|  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.GridLines%2A> 세로 및 가로 눈금선을 표시 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ HeaderRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> 컨트롤의 머리글 행을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> 컨트롤의 머리글 행을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 맨 위에 있는 머리글 행이 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView> 제어를 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 또는 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 속성을 설정 합니다. 사용 된 <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> 속성을 프로그래밍 방식으로 액세스를 <xref:System.Web.UI.WebControls.FormViewRow> 머리글 행을 나타내는 개체입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> 속성을 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.FormView> 컨트롤의 머리글 행을 만듭니다는 <xref:System.Web.UI.WebControls.FormView.ItemCreated> 이벤트입니다.  
  
 이 속성은 일반적으로 사용자 지정 콘텐츠를 추가 하는 경우 예를 들어, 헤더 행을 프로그래밍 방식으로 조작 해야 할 때 사용 됩니다. 수정을 <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> 후 속성에 수행 해야 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤 렌더링 되었으면이 고, 그렇지는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 변경 내용을 덮어씁니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> 프로그래밍 방식으로 하는 동안 머리글 행의 속성을 수정 하는 속성을 <xref:System.Web.UI.WebControls.FormView.ItemCreated> 이벤트.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 머리글 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 머리글 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 맨 위에 있는 머리글 행이 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView> 제어를 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 또는 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 속성을 설정 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> 속성에 헤더 행의 모양을 제어 하는 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 선언적으로 다음 방법 중 하나를 사용 하 여 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치 합니다 <xref:System.Web.UI.WebControls.FormView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어, `HeaderStyle-ForeColor`).  
  
-   중첩 된 `<HeaderStyle>` 을 열고 닫는 태그 사이 요소를 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `HeaderStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> 머리글 행에 대 한 사용자 지정 스타일을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 머리글 행에 대한 사용자 정의 내용을 가져오거나 설정합니다.</summary>
        <value>머리글 행에 대한 사용자 지정 내용이 들어 있는 <see cref="T:System.Web.UI.ITemplate" />입니다. 기본값은 <see langword="null" />로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 맨 위에 있는 머리글 행이 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView> 제어를 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 또는 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 속성을 설정 합니다. 사용 하 여 머리글 행에 대 한 사용자 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 속성입니다. 머리글 행에 대 한 사용자 지정 템플릿을 지정 하려면 먼저 `<HeaderTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<HeaderTemplate>` 태그입니다. 머리글 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> 속성입니다. 또는 표시할 수 있습니다 단순히 텍스트 머리글 행에서 설정 하 여는 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두를 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 및 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 속성이 우선 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 머리글 행에 대해 렌더링할 사용자 지정 템플릿을 정의 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 머리글 행에 표시할 텍스트를 가져오거나 설정합니다.</summary>
        <value>머리글 행에 표시할 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 맨 위에 있는 머리글 행이 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView> 제어를 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 또는 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 속성을 설정 합니다. 사용 된 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 머리글 행에 표시할 텍스트를 지정 하는 속성입니다. 머리글 행의 스타일을 제어 합니다 <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> 속성입니다. 설정 하 여 머리글 행에 대 한 사용자 고유의 사용자 지정 사용자 인터페이스 (UI)를 정의할 수는 또는 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 이 속성 대신 합니다.  
  
> [!NOTE]
>  모두를 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 및 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 속성이 우선 합니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 머리글 행에 표시할 텍스트를 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 내에 있는 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 가로 맞춤을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 값 중 하나입니다. 기본값은 <see langword="HorizontalAlign.NotSet" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 합니다 <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> 의 가로 맞춤을 지정 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 페이지 내에 있는 컨트롤입니다. 다음 표에서 다양 한 가로 맞춤 스타일을 보여 줍니다.  
  
|HorizontalAlign 값|설명|  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|가로 맞춤을 <xref:System.Web.UI.WebControls.FormView> 컨트롤 설정 되지 않았습니다.|  
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.FormView> 컨트롤은 페이지의 왼쪽에 맞춰집니다.|  
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.FormView> 컨트롤 가운데 페이지에 표시 됩니다.|  
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.FormView> 컨트롤은 페이지의 오른쪽에 맞춰집니다.|  
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.FormView> 컨트롤 페이지의 왼쪽 및 오른쪽 여백 양쪽에 맞춥니다.|  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> 속성을 지정 하는 <xref:System.Web.UI.WebControls.FormView> 컨트롤 페이지의 가운데에 맞춰야 합니다.  
  
 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::FormViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="formView.InitializePager (row, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">페이저 행이 들어 있는 <see cref="T:System.Web.UI.WebControls.FormViewRow" />입니다.</param>
        <param name="pagedDataSource">현재 페이지에 대한 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.PagedDataSource" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 대한 페이저 행을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView> 페이저 행을 제어 합니다. 만듭니다는 <xref:System.Web.UI.WebControls.TableCell> 의 속성을 사용 하 여 탐색 컨트롤이 포함 된 개체를 <xref:System.Web.UI.WebControls.PagedDataSource> 에 포함 된 개체는 `pagedDataSource` 매개 변수입니다. 셀에서 지정한 행에 추가 됩니다는 `row` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.FormView" /> 클래스 자체는 페이저 행을 생성 하도록이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As FormViewRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::FormViewRow ^ row);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit&#xA;override this.InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit" Usage="formView.InitializeRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row">초기화할 <see cref="T:System.Web.UI.WebControls.FormViewRow" />입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.WebControls.FormViewRow" /> 개체를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A> 메서드는 호출 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.FormView> 초기화 된 컨트롤 <xref:System.Web.UI.WebControls.FormViewRow> 개체입니다. 합니다 <xref:System.Web.UI.WebControls.FormViewRow> 행 형식 및 지정 된 행 상태에 따라 개체가 인스턴스화될 해당 <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> 및 <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> 속성을 각각. 적절 한 내용을 추가할 수는 <xref:System.Web.UI.WebControls.FormViewRow> 개체입니다. 다음 표에서 각 행 형식이 초기화 되는 방법을 설명 합니다.  
  
|행 형식|설명|  
|--------------|-----------------|  
|데이터 행|내용의 합니다 <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>, 또는 <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 속성에 추가 됩니다는 <xref:System.Web.UI.WebControls.FormViewRow> 값에 따라 개체를 <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> 속성.|  
|빈 데이터 행|값을 <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> 속성 또는 내용의 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 속성을 추가 <xref:System.Web.UI.WebControls.FormViewRow> 개체에 따라 속성을 설정 합니다. 두 속성을 설정 하는 경우는 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> 속성이 우선 합니다.|  
|바닥글 행|값을 <xref:System.Web.UI.WebControls.FormView.FooterText%2A> 속성 또는 내용의 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 속성을 추가 <xref:System.Web.UI.WebControls.FormViewRow> 개체에 따라 속성을 설정 합니다. 두 속성을 설정 하는 경우는 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> 속성이 우선 합니다.|  
|머리글 행|값을 <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> 속성 또는 내용의 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 속성을 추가 <xref:System.Web.UI.WebControls.FormViewRow> 개체에 따라 속성을 설정 합니다. 두 속성을 설정 하는 경우는 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> 속성이 우선 합니다.|  
  
> [!NOTE]
>  이 메서드는 페이저 행을 초기화 하지 않습니다. 페이저 행을 만들려면 사용 합니다 <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.FormView" /> 클래스를 사용자 고유의 사용자 지정 행을 생성 하도록이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : bool -&gt; unit&#xA;override this.InsertItem : bool -&gt; unit" Usage="formView.InsertItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">메서드가 호출될 때 페이지 유효성 검사를 수행하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>데이터 소스에 현재 레코드를 삽입합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 삽입 모드에 있으면, 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> 프로그래밍 방식으로 데이터 소스의 현재 레코드를 삽입 하는 방법입니다. 외부에서 현재 레코드를 삽입 해야 하는 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.FormView> 와 같은 페이지의 다른 컨트롤을 제어 합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.FormView> 이 방법이 고, 그렇지 않으면 호출 하는 경우 컨트롤이 삽입 모드에 있어야는 <xref:System.Web.HttpException> throw 됩니다.  
  
 삽입 작업 전에 페이지 유효성 검사를 수행할지 여부를 지정 하려면 사용 된 `causesValidation` 매개 변수입니다. 이 메서드를 호출 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ItemInserted> 고 <xref:System.Web.UI.WebControls.FormView.ItemInserting> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> 프로그래밍 방식으로의 현재 레코드를 삽입 하는 방법을 <xref:System.Web.UI.WebControls.FormView> 데이터 소스 컨트롤입니다.  
  
 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤이 삽입 모드에 있지 않은 상태에서 이 메서드를 호출한 경우  
  
또는 
<see cref="T:System.Web.UI.DataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체가 null인 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입 모드에서 항목에 대한 사용자 지정 내용을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> 컨트롤이 삽입 모드에 있는 경우 데이터 행에 대한 사용자 지정 내용이 들어 있는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다. 기본값은 null로, 이 속성이 설정되지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤은 컨트롤의 현재 모드를 기준으로 데이터 행에 대 한 다른 템플릿을 렌더링 (지정 된는 <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 속성). 다음 표에서 각 모드에 사용 되는 템플릿을 보여 줍니다.  
  
|모드|렌더링 되는 템플릿|  
|----------|-----------------------|  
|편집|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|읽기 전용|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 사용 합니다 <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 경우 데이터에 대 한 고유한 사용자 인터페이스 (UI)를 정의 하려면 속성 행는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 삽입 모드 인지 합니다. 일반적으로 삽입 항목 템플릿을 새 레코드에 대 한 값을 입력 하 고 명령 단추 레코드를 삽입 하 고 삽입 작업을 취소 하는 사용자에 대 한 입력된 컨트롤을 포함 합니다.  
  
 사용자 지정 템플릿, 첫 번째 위치를 지정 하려면 `<InsertItemTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<InsertItemTemplate>` 태그입니다. 양방향 바인딩 식을 사용 하 여 입력된 컨트롤을 사용 하 여 필드를 연결할 수 있습니다. 레코드가 삽입 될 때를 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 자동으로 연결된 된 입력된 컨트롤에서 필드 값을 추출 합니다. 양방향 바인딩 식에 대 한 자세한 내용은 참조 하세요. [데이터베이스를 바인딩할](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)합니다. 기본 제공 취소를 수행 하 고 작업을 삽입 하는 명령 단추를 만들려면 추가할 명령 단추 컨트롤을 사용 하 여 템플릿을 해당 `CommandName` 다음 표에 나열 된 속성 값 중 하나로 설정 합니다.  
  
|명령 단추 종류|CommandName 값|  
|-------------------------|-----------------------|  
|취소|"취소"|  
|Insert|"Insert"|  
  
 항목 템플릿을 사용 하 여 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 삽입 모드에서 데이터 행에 대 한 사용자 지정 템플릿을 정의 하는 방법에 설명 합니다.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 삽입 작업을 수행하는 경우 호출되는 페이지의 메서드에 대한 이름을 가져오거나 설정합니다.</summary>
        <value>컨트롤에서 삽입 작업을 수행할 때 호출되는 페이지상의 메서드 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web Forms 모델 바인딩 사용에 대 한 자습서 시리즈를 참조 하세요 [모델 바인딩 및 Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤이 삽입 모드에 있을 때 이 컨트롤의 데이터 행 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤이 삽입 모드에 있을 때 이 컨트롤의 데이터 행 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 합니다 <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> 경우 데이터의 모양을 제어 하려면 속성 행을 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 삽입 모드 인지 합니다. 경우는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 삽입 모드 이면 사용자 정의 내용이 지정 된 데이터 행에 표시 된 <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 속성. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다.  
  
 선언적으로 다음 방법 중 하나를 사용 하 여 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치 합니다 <xref:System.Web.UI.WebControls.FormView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어, `InsertRowStyle-ForeColor`).  
  
-   중첩 된 `<InsertRowStyle>` 을 열고 닫는 태그 사이 요소를 <xref:System.Web.UI.WebControls.FormView> 컨트롤.  
  
 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `InsertRowStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> 경우 데이터에 대 한 사용자 지정 스타일을 지정 하려면 속성 행을 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 삽입 모드에 있으면입니다.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsBindableType : Type -&gt; bool&#xA;override this.IsBindableType : Type -&gt; bool" Usage="formView.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">확인할 데이터 형식을 나타내는 <see cref="T:System.Type" />입니다.</param>
        <summary>지정된 데이터 형식을 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 필드에 바인딩할 수 있는지 여부를 나타냅니다.</summary>
        <returns>지정된 데이터 형식을 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 필드에 바인딩할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView> 지정된 된 데이터 형식 필드 컨트롤에 바인딩할 수 있는지 여부를 확인 하기 위해 컨트롤입니다. <xref:System.Web.UI.WebControls.FormView> 컨트롤 데이터 형식을 지원 합니다.  
  
-   와 같은 모든 기본 데이터 형식을 <xref:System.Boolean>, <xref:System.Byte>, <xref:System.Int32>등입니다.  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Guid>  
  
-   <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.FormView" /> 클래스를 추가 하거나에서 사용할 수 있는 데이터 유형을 제한 하려면이 메서드를 재정의할 수 있습니다는 <see cref="T:System.Web.UI.WebControls.FormView" /> 제어 합니다.</para></block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As FormViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 단추를 클릭하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView.ItemCommand> 이벤트는 단추를는 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 클릭 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 내에서 단추를 <xref:System.Web.UI.WebControls.FormView> 컨트롤 컨트롤의 기본 기능 중 일부를 호출할 수도 있습니다. 이러한 작업 중 하나를 수행 하려면 설정의 `CommandName` 다음 표의 값 중 하나에 단추의 속성입니다.  
  
|CommandName 값|설명|  
|-----------------------|-----------------|  
|"취소"|편집 또는 삽입 작업을 취소 하 고 반환 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 지정 된 모드로 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 속성입니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 이벤트입니다.|  
|"Delete"|현재 레코드를 삭제합니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ItemDeleted> 및 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> 이벤트입니다.|  
|"Edit"|배치는 <xref:System.Web.UI.WebControls.FormView> 편집 모드에서 제어 합니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 이벤트입니다.|  
|"Insert"|데이터 소스에 현재 레코드를 삽입합니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ItemInserted> 및 <xref:System.Web.UI.WebControls.FormView.ItemInserting> 이벤트입니다.|  
|"New"|배치는 <xref:System.Web.UI.WebControls.FormView> 삽입 모드에서 제어 합니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 및 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 이벤트입니다.|  
|"Page"|페이징 작업을 수행합니다. 설정 된 `CommandArgument` , 속성을 단추 "First", "Last"를 "다음", "prev" 라는 페이징 작업의 형식을 지정 하기 위해 페이지를 수행 하 합니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 및 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 이벤트입니다.|  
|"업데이트"|데이터 소스의 현재 레코드를 업데이트합니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 및 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 이벤트입니다.|  
  
 하지만 <xref:System.Web.UI.WebControls.FormView.ItemCommand> 이전 표에 나열 된 단추가 클릭 될 때 이벤트가 발생, 작업에 대 한 테이블에 나열 된 이벤트를 사용 하는 것이 좋습니다.  
  
 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> 개체 명령 이름과 클릭 한 단추의 명령 인수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다. 명령 이름과 명령 인수를 확인 하려면 사용 합니다 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> 및 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 속성을 각각. 사용 하 여 이벤트를 발생 시킨 컨트롤에 액세스할 수도 있습니다는 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.ItemCommand> 단추 클릭을 처리 하는 이벤트를 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 현재 표시 된 항목을 추가할 추가 단추를 클릭할 때는 <xref:System.Web.UI.WebControls.ListBox> 제어 합니다.  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : EventHandler " Usage="member this.ItemCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>모든 행이 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 작성된 후에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ItemCreated> 의 모든 행을 만든 후 이벤트가 발생을 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 이 컨트롤을 처음으로 렌더링 하는 경우 또는 사용자가 다른 레코드를 탐색할 때 발생할 수 있습니다. 사용자 지정 루틴에 추가 하 여이 이벤트가 발생할 때마다 행의 내용을 수정 등을 수행 하는 이벤트 처리 메서드를 제공 합니다.이 이벤트를 사용할 수 있습니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.FormView.ItemCreated> 이벤트가 발생 하기 전에 <xref:System.Web.UI.WebControls.FormView> 데이터 바인딩된 컨트롤입니다. 바인딩된 필드의 값을 수정 하려면 사용 된 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> 이벤트입니다.  
  
 머리글, 바닥글 및 페이저 행에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView> 사용 하 여 컨트롤을 <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>, <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>, 또는 <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> 속성을 각각. 데이터 행에 액세스 하려면 사용 된 <xref:System.Web.UI.WebControls.FormView.Row%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.ItemCreated> 이벤트의 텍스트를 업데이트 하는 <xref:System.Web.UI.WebControls.Label> 페이저 행에 포함 된 컨트롤입니다.  
  
 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Row" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As FormViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " Usage="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 삭제 단추를 클릭하면 삭제 작업 후에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> 를 발생 시킵니다를 <xref:System.Web.UI.WebControls.FormView.ItemDeleted> 이벤트 있는 삭제 단추 (단추를 사용 하 여 해당 `CommandName` 속성이 "Delete"로 설정) 컨트롤 내에서 클릭 한 후는 <xref:System.Web.UI.WebControls.FormView> 레코드를 삭제 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삭제 작업의 결과 확인 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> 개체는 영향을 받는 레코드와 발생 한 예외의 수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다. 삭제 작업의 영향을 받는 레코드 수를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> 속성입니다. 사용 된 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> 예외도 발생 했는지 여부를 결정 하는 속성입니다. 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> 속성입니다. 키 필드 및 삭제 된 레코드의 키가 아닌 필드 이름/값 쌍에 액세스 하려는 경우 사용 합니다 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> 및 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> 속성을 각각.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.ItemDeleted> 삭제 작업 중에 예외가 발생 했는지 여부를 결정 하는 이벤트입니다.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As FormViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " Usage="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 삭제 단추를 클릭하면 삭제 작업 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> 를 발생 시킵니다를 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> 이벤트 있는 삭제 단추 (단추를 사용 하 여 해당 `CommandName` 속성이 "Delete"로 설정) 컨트롤 내에서 클릭 하기 전에 <xref:System.Web.UI.WebControls.FormView> 레코드를 삭제 합니다. 이 옵션을 사용 하면 레코드를 삭제 하기 전에이 이벤트가 발생할 때마다 확인 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> 개체는 삭제할 레코드의 인덱스를 확인 하 고 삭제 작업을 취소 해야 함을 나타낼 수는 이벤트 처리 메서드에 전달 됩니다. 레코드의 인덱스를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> 속성입니다. 삭제 작업을 취소 하려면 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`입니다. 사용 하 여 키와 키가 아닌 필드를 액세스할 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A> 고 <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> 속성을 각각.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> 삭제 작업을 취소 하는 이벤트입니다.  
  
 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As FormViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertedEventHandler ^ ItemInserted;" />
      <MemberSignature Language="F#" Value="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " Usage="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 삽입 단추를 클릭하면 삽입 작업 후에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> 를 발생 시킵니다를 <xref:System.Web.UI.WebControls.FormView.ItemInserted> 때 삽입 단추 이벤트 (단추를 사용 하 여 해당 `CommandName` "Insert"로 설정 하는 속성) 컨트롤 내에서 클릭 한 후는 <xref:System.Web.UI.WebControls.FormView> 레코드를 삽입 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 삽입 작업의 결과 확인 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> 개체는 영향을 받는 레코드와 발생 한 예외의 수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다. 삽입 작업의 영향을 받는 레코드 수를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> 속성입니다. 사용 된 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> 예외도 발생 했는지 여부를 결정 하는 속성입니다. 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> 속성입니다. 삽입된 된 레코드의 값에 액세스 해야 할 경우 사용 된 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> 속성입니다.  
  
 기본적으로 <xref:System.Web.UI.WebControls.FormView> 제어가 반환 하 여 지정 된 모드는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 삽입 작업 후 속성입니다. 유지 하는 <xref:System.Web.UI.WebControls.FormView> 삽입 모드에서 컨트롤을 설정 합니다 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> 속성을 `true`입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.ItemInserted> 삽입 작업 중에 예외가 발생 했는지 여부를 결정 하는 이벤트입니다.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As FormViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertEventHandler ^ ItemInserting;" />
      <MemberSignature Language="F#" Value="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " Usage="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 삽입 단추를 클릭하면 삽입 작업 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> 를 발생 시킵니다를 <xref:System.Web.UI.WebControls.FormView.ItemInserting> 때 삽입 단추 이벤트 (단추를 사용 하 여 해당 `CommandName` "Insert"로 설정 하는 속성) 컨트롤 내에서 클릭 하기 전에 <xref:System.Web.UI.WebControls.FormView> 레코드를 삽입 합니다. 이 옵션을 사용 하면 HTML 레코드의 값이이 이벤트가 발생할 때마다 데이터 원본에 삽입 하기 전에 인코딩 등 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.FormViewInsertEventArgs> 개체는 전송할 선택적 명령 인수 값을 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다는 <xref:System.Web.UI.WebControls.FormView> 컨트롤 삽입 작업을 취소 해야 함을 나타낼 수 있습니다. 명령 인수 값에 해당 하는 `CommandArgument` 삽입 단추의 속성입니다. 경우는 `CommandArgument` 삽입 단추의 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> 명령 인수의 값을 확인 하는 속성입니다. 삽입 작업을 취소 하려면 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`입니다. 또한 읽기 또는 사용 하 여 새 레코드의 필드 값을 수정할 수는 <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.ItemInserting> 삽입 작업을 취소 하는 이벤트입니다.  
  
 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤이 읽기 전용 모드에 있을 때 이 컨트롤의 데이터 행에 대한 사용자 지정 내용을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> 컨트롤이 읽기 전용 모드에 있는 경우 데이터 행에 대한 사용자 지정 내용이 들어 있는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다. 기본값은 null로, 이 속성이 설정되지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤은 컨트롤의 현재 모드를 기준으로 데이터 행에 대 한 다른 템플릿을 렌더링 (지정 된는 <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 속성). 다음 표에서 각 모드에 사용 되는 템플릿을 보여 줍니다.  
  
|모드|렌더링 되는 템플릿|  
|----------|-----------------------|  
|편집|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|읽기 전용|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> 경우 데이터에 대 한 고유한 사용자 인터페이스 (UI)를 정의 하려면 속성 행는 <xref:System.Web.UI.WebControls.FormView> 컨트롤은 읽기 전용 모드입니다. 항목 템플릿에 일반적으로 레코드의 필드 값을 표시할 수 있을 뿐만 아니라 명령 단추를 편집, 삽입 및 레코드를 삭제 하는 컨트롤을 포함 합니다.  
  
 사용자 지정 템플릿, 첫 번째 위치를 지정 하려면 `<ItemTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<ItemTemplate>` 태그입니다. 컨트롤에 바인딩된 데이터 원본의 필드 값을 표시 하려면 데이터 바인딩 식을 사용 합니다. 데이터 바인딩 식에 대 한 자세한 내용은 참조 하세요. [데이터 바인딩 식 구문](https://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)합니다. 기본 제공 삭제, 편집 및 새 레코드 작업을 수행 하는 명령 단추를 만들려면 추가할 명령 단추 컨트롤을 사용 하 여 템플릿을 해당 `CommandName` 다음 표에 나열 된 속성 값 중 하나로 설정 합니다.  
  
|명령 단추 종류|CommandName 값|  
|-------------------------|-----------------------|  
|삭제|"Delete"|  
|편집|"Edit"|  
|새로 만들기|"New"|  
  
 항목 템플릿을 사용 하 여 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예에서는 읽기 전용 모드에서 데이터 행에 대 한 사용자 지정 템플릿을 정의 하는 방법에 설명 합니다.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As FormViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " Usage="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 업데이트 단추를 클릭하면 업데이트 작업 후에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> 를 발생 시킵니다를 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 때 업데이트 단추 이벤트 (단추를 사용 하 여 해당 `CommandName` "Update"로 설정 하는 속성) 컨트롤 내에서 클릭 한 후는 <xref:System.Web.UI.WebControls.FormView> 레코드를 업데이트 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 update 작업의 결과 확인 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> 개체는 영향을 받는 레코드와 발생 한 예외의 수를 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다. 업데이트 작업의 영향을 받는 레코드 수를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> 속성입니다. 사용 된 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> 예외도 발생 했는지 여부를 결정 하는 속성입니다. 설정 하 여 이벤트 처리 메서드에서 예외가 처리 되었는지 여부를 나타낼 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> 속성입니다. 업데이트 된 레코드에 대 한 키 필드 값에 액세스 해야 할 경우 사용 된 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 속성입니다. 원래 및 업데이트 된 키가 아닌 필드 값을 사용 하 여 액세스할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> 고 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> 속성을 각각.  
  
 기본적으로 <xref:System.Web.UI.WebControls.FormView> 제어가 반환 하 여 지정 된 모드는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 업데이트 작업 후 속성입니다. 유지 하는 <xref:System.Web.UI.WebControls.FormView> 편집 모드에서 컨트롤을 설정 합니다 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> 속성을 `true`입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 이벤트 업데이트 작업 중에 예외가 발생 한 것인지 확인 합니다.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As FormViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " Usage="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 업데이트 단추를 클릭하면 업데이트 작업 전에 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> 를 발생 시킵니다를 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 때 업데이트 단추 이벤트 (단추를 사용 하 여 해당 `CommandName` "Update"로 설정 하는 속성) 컨트롤 내에서 클릭 하기 전에 <xref:System.Web.UI.WebControls.FormView> 레코드를 업데이트 합니다. 이 옵션을 사용 하면 HTML 레코드의 값이이 이벤트가 발생할 때마다 데이터 원본에서 업데이트 하기 전에 인코딩 등 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> 개체는 전송할 선택적 명령 인수 값을 확인할 수 있는 이벤트 처리 메서드에 전달 됩니다는 <xref:System.Web.UI.WebControls.FormView> 컨트롤 및 업데이트 작업을 취소 해야 함을 나타낼 수 있습니다. 명령 인수 값에 해당 하는 `CommandArgument` 속성을 업데이트 합니다. 경우는 `CommandArgument` [업데이트] 단추 속성 설정, 사용 하 여는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> 명령 인수의 값을 확인 하는 속성입니다. 업데이트 작업을 취소 하려면 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`입니다. 또한 읽기 또는 사용 하 여 사용자가 입력 한 새 값을 수정할 수는 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> 및 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 속성입니다. 합니다 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 속성의 키 필드를 포함 하는 동안는 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 속성 키가 아닌 필드를 포함 합니다. 키가 아닌 필드의 원래 값에 액세스 해야 할 경우 사용 된 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 업데이트 작업을 취소 하는 이벤트입니다.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="formView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> 컨트롤의 상태를 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 속성이 <see langword="false" />로 설정되어 있는 경우에도 유지해야 하는 <see cref="P:System.Web.UI.Control.EnableViewState" /> 컨트롤 속성의 상태를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A> 메서드를 사용 하 여 상태를 로드 하는 <xref:System.Web.UI.WebControls.FormView> 컨트롤 속성을 유지 해야 하는 경우에 합니다 <xref:System.Web.UI.Control.EnableViewState%2A> 속성이 `false`합니다.  
  
> [!NOTE]
>  이 메서드는 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="formView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> 컨트롤의 상태를 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다.</param>
        <summary>이전에 저장된 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 뷰 상태를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView.LoadViewState%2A> 메서드를 사용 하 여 이전에 저장 된 뷰 상태를 로드 하는 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
> [!NOTE]
>  이 메서드는 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ModeChanged : EventHandler " Usage="member this.ModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집, 삽입 및 읽기 전용 모드 사이에 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤을 전환하는 경우 모드가 변경된 후에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 이벤트는 때를 <xref:System.Web.UI.WebControls.FormView> 컨트롤 모드를 실제로 변경 후 하지만 편집, 삽입 및 읽기 전용 모드 사이 전환 하 려 합니다. 동기화와 같은 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView> 이 이벤트가 발생할 때마다 다른 컨트롤을 사용 하 여 제어 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 의 머리글 행의 현재 모드를 표시 하는 이벤트를 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다.  
  
 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As FormViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewModeEventHandler ^ ModeChanging;" />
      <MemberSignature Language="F#" Value="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " Usage="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집, 삽입 및 읽기 전용 모드 사이에 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤을 전환하는 경우 모드가 변경되기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 이벤트는 때를 <xref:System.Web.UI.WebControls.FormView> 컨트롤 모드를 실제로 변경 되기 전에 하지만 편집, 삽입 및 읽기 전용 모드 사이 전환 하 려 합니다. 구성 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.FormView> 특정 모드에 대 한 제어 하거나이 이벤트가 발생할 때마다 모드 변경 내용을 취소 합니다.  
  
 <xref:System.Web.UI.WebControls.FormViewModeEventArgs> 개체는 모드를 결정할 수 있게 하는 이벤트 처리 메서드에 전달 됩니다 합니다 <xref:System.Web.UI.WebControls.FormView> 결정할 컨트롤은 전환 여부를 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 사용자 편집 작업 취소로 인해 이벤트가 발생 또는 삽입 작업을 취소 해야 함을 나타냅니다. 새 모드를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> 속성입니다. 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> 속성 중 하나를 설정 하 여 대체 모드를 전환할 수는 <xref:System.Web.UI.WebControls.FormViewMode> 열거형 값입니다. 사용 된 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> 사용자가 편집 작업을 취소 여부를 결정 하는 속성입니다. 삽입 작업을 취소 하려면 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 경우 이벤트를 숨기려면 페이저 행을 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 편집 모드로 전환 합니다.  
  
 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected internal virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ModifiedOuterTableStylePropertyName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ ModifiedOuterTableStylePropertyName();" />
      <MemberSignature Language="F#" Value="abstract member ModifiedOuterTableStylePropertyName : unit -&gt; string&#xA;override this.ModifiedOuterTableStylePropertyName : unit -&gt; string" Usage="formView.ModifiedOuterTableStylePropertyName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤과 연결된 테이블별 CSS 스타일 규칙이 기본값으로 설정되어 있는지 여부를 결정합니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤과 연결된 기본 CSS 스타일 규칙입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 테이블별 CSS 스타일 규칙이 기본값으로 사용 하 여 설정 됩니다는 <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>를 <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A>를 <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> 및 <xref:System.Web.UI.WebControls.Style.Font%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="formView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>컨트롤 계층 구조를 통해 위로 전달되는 이벤트를 처리합니다.</summary>
        <returns>이벤트를 컨트롤 계층 구조의 상위 수준으로 전달해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> 메서드는 필요에 따라 이벤트를 처리 하 여 컨트롤 계층 구조를 통해 위로 전달 컨트롤에서 사용 되는 <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> 메서드. 속성을 검사 하 여 이벤트를 처리할 것인지를 결정 합니다 <xref:System.EventArgs> 에 포함 된 개체는 `e` 매개 변수입니다. 이벤트를 처리 해야 하는 경우 메서드는 적절 한 조치를 수행 합니다. 다른 이벤트는 무시 하 고 컨트롤 계층 구조로 전달 됩니다. 이 메서드 반환 값을 통해 컨트롤 계층 구조에 추가 이벤트를 전달할지 여부를 나타냅니다.  
  
 <xref:System.Web.UI.WebControls.FormView> 컨트롤에서 인식 단추 중 하나를 클릭할 때 적절 한 조치를 수행 하도록이 메서드의 기본 구현을 재정의 합니다. 다음 표에서 명령 단추는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 인식 합니다.  
  
|단추|CommandName 값|설명|  
|------------|-----------------------|-----------------|  
|취소|"취소"|작업을 취소 하 고 사용자가 입력 한 값을 삭제 하려면 업데이트 또는 삽입 작업에 사용 합니다. 합니다 <xref:System.Web.UI.WebControls.FormView> 제어 하 여 지정 된 모드를 반환 합니다는 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 속성입니다.|  
|삭제|"Delete"|삭제 작업에 데이터 소스에서 표시 된 레코드를 삭제 하는 데 사용 합니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> 및 <xref:System.Web.UI.WebControls.FormView.ItemDeleted> 이벤트입니다.|  
|편집|"Edit"|적용할 업데이트 작업에 사용 된 <xref:System.Web.UI.WebControls.FormView> 편집 모드에서 컨트롤입니다. 에 지정 된 콘텐츠는 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 데이터 행에 대 한 속성이 표시 됩니다.|  
|Insert|"Insert"|삽입 작업에 사용자가 입력 한 값을 사용 하 여 데이터 원본에 새 레코드를 삽입 하려고 하는 데 사용 합니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ItemInserting> 및 <xref:System.Web.UI.WebControls.FormView.ItemInserted> 이벤트입니다.|  
|새로 만들기|"New"|삽입할 삽입 작업에 사용 된 <xref:System.Web.UI.WebControls.FormView> 삽입 모드에서 컨트롤입니다. 에 지정 된 콘텐츠는 <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> 데이터 행에 대 한 속성이 표시 됩니다.|  
|페이지|"Page"|페이징 작업에서는 페이징을 수행 하는 페이저 행에 단추를 나타내는 하는 데 사용 합니다. 페이징 작업을 지정 하려면 설정의 `CommandArgument` 속성을 "다음", "이전", "First", "지난" 또는 탐색 하는 페이지의 인덱스입니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 및 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 이벤트입니다. **참고:**  이 유형의 단추 호출기 템플릿에만에서 일반적으로 사용 됩니다.|  
|업데이트|"업데이트"|사용자가 입력 한 값을 사용 하 여 데이터 원본에 표시 된 레코드를 업데이트 하기 위해 업데이트 작업에 사용 합니다. 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 및 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 이벤트입니다.|  
  
 이 버전의 메서드 반환 `true` 이러한 단추 중 하나를 처리 하는 경우. 이벤트 버블링 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.FormView" /> 클래스를 사용자 고유의 이벤트를 처리 하려면이 메서드를 재정의할 수 있습니다. 반환 값을 전달할지 여부를 이벤트를 컨트롤 계층 구조의 나타내기 위해 사용 해야 합니다.</para></block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="formView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnInit%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.Control.Init> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnInit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As FormViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::FormViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit" Usage="formView.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.FormView.ItemCommand> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : EventArgs -&gt; unit&#xA;override this.OnItemCreated : EventArgs -&gt; unit" Usage="formView.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.FormView.ItemCreated> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As FormViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::FormViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit&#xA;override this.OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit" Usage="formView.OnItemDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.FormView.ItemDeleted> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As FormViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::FormViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit&#xA;override this.OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit" Usage="formView.OnItemDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤이 데이터 소스 컨트롤에 바인딩되어 있지 않은 상태에서 사용자가 삭제 작업을 취소하지 않고 이벤트에 대해 이벤트 처리기가 등록되지 않을 때 이 메서드가 호출된 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As FormViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::FormViewInsertedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit&#xA;override this.OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit" Usage="formView.OnItemInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.FormView.ItemInserted> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As FormViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::FormViewInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit&#xA;override this.OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit" Usage="formView.OnItemInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.FormView.ItemInserting> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤이 데이터 소스 컨트롤에 바인딩되어 있지 않은 상태에서 사용자가 삽입 작업을 취소하지 않고 이벤트에 대해 이벤트 처리기가 등록되지 않을 때 이 메서드가 호출된 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As FormViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::FormViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit&#xA;override this.OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit" Usage="formView.OnItemUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As FormViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::FormViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit&#xA;override this.OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit" Usage="formView.OnItemUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤이 데이터 소스 컨트롤에 바인딩되어 있지 않은 상태에서 사용자가 업데이트 작업을 취소하지 않고 이벤트에 대해 이벤트 처리기가 등록되지 않을 때 이 메서드가 호출된 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanged : EventArgs -&gt; unit&#xA;override this.OnModeChanged : EventArgs -&gt; unit" Usage="formView.OnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.FormView.ModeChanged> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As FormViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::FormViewModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit&#xA;override this.OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit" Usage="formView.OnModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.FormView.ModeChanging> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤이 데이터 소스 컨트롤에 바인딩되어 있지 않은 상태에서 모드 변경이 취소되지 않고 이벤트에 대해 이벤트 처리기가 등록되지 않을 때 이 메서드가 호출된 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : EventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : EventArgs -&gt; unit" Usage="formView.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As FormViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::FormViewPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit&#xA;override this.OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit" Usage="formView.OnPageIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.FormView> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.FormView> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤이 데이터 소스 컨트롤에 바인딩되어 있지 않은 상태에서 페이징 작업이 취소되지 않고 이벤트에 대해 이벤트 처리기가 등록되지 않을 때 이 메서드가 호출된 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.FormView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스의 모든 레코드를 표시하는 데 필요한 전체 페이지 수를 가져옵니다.</summary>
        <value>내부 데이터 소스의 항목 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징 기능을 활성화 하는 경우 (때를 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 속성이 `true`)를 사용 하 여를 <xref:System.Web.UI.WebControls.FormView.PageCount%2A> 데이터 원본에서 레코드의 총 수를 확인 하는 속성.  
  
> [!NOTE]
>  때문에 <xref:System.Web.UI.WebControls.FormView> 컨트롤 한 번에 하나의 레코드만 표시,이 값은 데이터 원본의 모든 레코드를 표시 하는 데 필요한 페이지의 총 수에 해당 합니다. 데이터 바인딩이 발생 후에이 값을 정확 하 게 될 때까지 없습니다.  
  
 내부 데이터 소스에서 현재 레코드의 인덱스를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.PageCount%2A> 속성을 컨트롤에 표시 된 레코드의 총 수를 확인 합니다.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageIndex : int with get, set" Usage="System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표시된 페이지의 인덱스를 가져오거나 설정합니다.</summary>
        <value>내부 데이터 소스에서 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 표시되는 데이터 항목의 인덱스입니다. 이 인덱스는 0부터 시작합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징 기능을 활성화 하는 경우 (때 합니다 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 속성이로 설정 되어 `true`)를 사용 하 여를 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> 현재 표시 된 레코드의 인덱스를 확인 하는 속성. 또한 프로그래밍 방식으로 표시 된 레코드를 변경 하려면이 속성을 사용할 수 있습니다.  
  
> [!NOTE]
>  표시 된 레코드의 페이지 번호를 확인 하려면이 속성을 사용도 수 페이징 기능을 사용 하는 경우 그러나이 속성은 0부터 시작 주의 합니다.  
  
 데이터 원본에 있는 항목의 총 수를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.FormView.PageCount%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> 표시 된 레코드의 페이지 인덱스를 확인 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 -1보다 작은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : EventHandler " Usage="member this.PageIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> 속성 값이 변경될 때 페이징 작업 후에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> 를 발생 시킵니다를 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 페이저 단추 이벤트 (단추를 사용 하 여 해당 `CommandName` "페이지"로 설정 하는 속성) 컨트롤 내에서 클릭 한 후를 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 페이징 작업을 처리 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> 속성입니다.  
  
 페이저 단추는 일반적으로의 페이저 행에는 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 이 이벤트는 대개 동기화를 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 <xref:System.Web.UI.WebControls.GridView> 컨트롤 또는의 동작을 설정 하는 <xref:System.Web.UI.WebControls.FormView> 페이징 작업 후 컨트롤입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> 반환 하는 이벤트를 <xref:System.Web.UI.WebControls.FormView> 사용자가 다른 레코드를 탐색할 때 읽기 전용 모드로 합니다.  
  
 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As FormViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewPageEventHandler ^ PageIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " Usage="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> 속성 값이 변경될 때 페이징 작업 이전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> 를 발생 시킵니다를 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 페이저 단추 이벤트 (단추를 사용 하 여 해당 `CommandName` "페이지"로 설정 하는 속성) 컨트롤 내에서 클릭 하기 전에 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 페이징 작업을 처리 합니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 페이징 작업을 취소 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리 메서드를 제공할 수 있습니다.  
  
> [!NOTE]
>  프로그래밍 방식으로 설정 하는 경우이 이벤트가 발생 하지 않습니다는 <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> 속성입니다.  
  
 페이저 단추는 일반적으로의 페이저 행에는 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
 <xref:System.Web.UI.WebControls.FormViewPageEventArgs> 개체는 사용자가 선택한 페이지의 인덱스를 확인 하 고 페이징 작업을 취소 해야 함을 나타낼 수는 이벤트 처리 메서드에 전달 됩니다. 사용자가 선택한 페이지의 인덱스를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> 속성입니다. 페이징 작업을 취소 하려면 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.FormViewPageEventArgs> 개체를 `true`입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> 페이징 작업을 취소 하는 이벤트입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerSettings : System.Web.UI.WebControls.PagerSettings" Usage="System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.PagerSettings" /> 컨트롤에 있는 페이저 단추의 속성을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.PagerSettings" /> 컨트롤에 있는 페이저 단추의 속성을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.FormView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> 속성에 있는 페이저 행의 설정을 제어 하는 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 페이저 행을 페이징 기능을 사용 하는 경우 표시 됩니다 (때 합니다 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 속성이 `true`), 컨트롤의 다른 레코드를 탐색 하는 데 사용할 수 있는 컨트롤을 포함 하 고 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.PagerSettings> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.PagerSettings> 개체 (예를 들어 `PagerSettings-Mode`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `PagerSettings.Mode`). 일반적인 설정에는 일반적으로 페이저 행의 디스플레이 모드 및 사용자 지정 텍스트 또는 탐색 컨트롤에 대 한 이미지가 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> 페이저 행의 속성을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 페이저 행의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 페이저 행의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> 에 있는 페이저 행의 모양을 제어 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 페이저 행을 페이징 기능을 사용 하는 경우 표시 됩니다 (때 합니다 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 속성이 `true`), 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 하 고 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 선언적으로 다음 방법 중 하나를 사용 하 여 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치 합니다 <xref:System.Web.UI.WebControls.FormView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어, `PagerStyle-ForeColor`).  
  
-   중첩 된 `<PagerRowStyle>` 을 열고 닫는 태그 사이 요소를 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `PagerStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> 페이저 행에 대 한 스타일 설정을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PagerTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 페이저 행에 대한 사용자 지정 콘텐츠를 가져오거나 설정합니다.</summary>
        <value>페이저 행에 대한 사용자 지정 콘텐츠가 들어 있는 <see cref="T:System.Web.UI.ITemplate" />입니다. 기본값은 null로, 이 속성이 설정되지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이저 행에 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView> 페이징 기능을 활성화 하는 경우 제어 (때는 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 속성이 true로). 페이저 행을 컨트롤에서 다른 페이지로 이동 하는 데 사용할 수 있는 컨트롤을 포함 합니다. 기본 제공 페이저 행 사용자 인터페이스 (UI)를 사용 하는 대신 사용 하 여 UI를 직접 정의할 수는 <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> 속성입니다.  
  
> [!NOTE]
>  경우는 <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> 속성 UI 기본 제공 페이저 행을 재정의 합니다.  
  
 페이저 행에 대 한 사용자 지정 템플릿을 지정 하려면 먼저 `<PagerTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<PagerTemplate>` 태그입니다. 페이저 행의 모양을 제어 하려면 사용 된 <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> 속성입니다.  
  
 일반적으로 단추 컨트롤이 페이징 작업을 수행 하려면 호출기 템플릿에 추가 됩니다. <xref:System.Web.UI.WebControls.FormView> 때 사용 하 여 단추 컨트롤 페이징 작업을 수행 하는 컨트롤의 `CommandName` "페이지"로 설정 하는 속성을 클릭 합니다. 단추의 `CommandArgument` 속성 페이징 수행할 연산 형식을 결정 합니다. 다음 표에서에서 지 원하는 명령 인수 값을 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
|명령 인수 값|설명|  
|---------------------------|-----------------|  
|"다음"|다음 페이지로 이동합니다.|  
|"Prev" 라는|이전 페이지로 이동합니다.|  
|"First"|첫 번째 페이지로 이동합니다.|  
|"지난"|마지막에 페이지를 탐색 합니다.|  
|정수 값|지정된 된 페이지 번호를 탐색합니다.|  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 호출기 템플릿을 정의 하는 방법을 보여 줍니다.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="formView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">데이터 소스를 나타내는 <see cref="T:System.Collections.IEnumerable" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 지정된 데이터 소스를 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView> 지정된 된 데이터 소스 컨트롤에 바인딩할 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>때문에 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 메서드가 봉인 되었습니다., 데이터를 바인딩할 때 추가 작업을 수행 해야 할 경우이 메서드를 재정의 해야 합니다.</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit&#xA;override this.PrepareControlHierarchy : unit -&gt; unit" Usage="formView.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 컨트롤 계층 구조를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A> 메서드는 호출 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤의 컨트롤 계층 구조를 설정 하는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 렌더링 되기 전에 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="formView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">발생한 이벤트에 대한 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />를 만드는 데 사용할 이벤트 인수입니다.</param>
        <summary>서버에 다시 게시될 때 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 대한 적절한 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이지 호출을 <xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A> 포스트백 이벤트가 발생 하는 방법에 대 한 적절 한 이벤트를 발생 시킵니다는 <xref:System.Web.UI.WebControls.FormView> 제어 합니다. 이 호출은 로드 및 변경 내용 알림 완료 되었으나 사전 렌더링이 발생 페이지 수명 주기에서 발생 합니다. 이 메서드가 만드는 구현 되었는지는 <xref:System.Web.UI.WebControls.CommandEventArgs> 발생 하는 이벤트에 대 한 개체입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="formView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트에서 렌더링할 출력 스트림이 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>클라이언트에 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤을 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView.Render%2A> 메서드를 사용 하 여 클라이언트의 브라우저 서버 컨트롤 콘텐츠를 렌더링 하는 <xref:System.Web.UI.HtmlTextWriter> 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderOuterTable : bool with get, set" Usage="System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IRenderOuterTableControl.RenderOuterTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인라인 스타일을 적용하기 위해 컨트롤의 <see langword="table" /> 요소에 렌더링된 HTML이 포함되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>컨트롤의 <see langword="true" /> 요소에 렌더링된 HTML이 포함되어 있으면 <see langword="table" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 같은 인라인 스타일 속성을 확인 하기 위해 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> 컨트롤에 대 한 렌더링 되는 모든 HTML에 적용 되 고 ASP.NET에 렌더링 된 HTML이 포함 된 `table` 요소입니다. 외부 하지 않을 경우 `table` 이 속성을 설정 하는 요소를 렌더링할 `false`합니다. 이 경우 인라인 전체 컨트롤에 적용 되는 스타일 속성을 설정 하려고 하면 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Row As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ Row { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Row : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> 컨트롤의 데이터 행을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> 컨트롤의 데이터 행을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.FormView.Row%2A> 속성을 프로그래밍 방식으로 액세스를 <xref:System.Web.UI.WebControls.FormViewRow> 데이터 행을 나타내는 개체입니다. 현재 모드에 대 한 렌더링 템플릿을 기반으로 하는 다른 콘텐츠를 포함 하는 데이터 행 (지정 된 된 <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> 속성). 현재 모드에 대 한 템플릿의 내용을 액세스할 수 있습니다. 다음 표에서 각 모드에 사용 되는 템플릿을 보여 줍니다.  
  
|모드|렌더링 되는 템플릿|  
|----------|-----------------------|  
|편집|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|읽기 전용|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.FormView.Row%2A> 속성을 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.FormView> 컨트롤의 데이터 행을 만듭니다는 <xref:System.Web.UI.WebControls.FormView.ItemCreated> 이벤트입니다.  
  
 예를 들어 사용자 지정 콘텐츠를 추가할 때 데이터 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. 수정을 <xref:System.Web.UI.WebControls.FormView.Row%2A> 후 속성에 수행 해야 합니다 <xref:System.Web.UI.WebControls.FormView> 고, 그렇지 않으면 데이터 바인딩된 컨트롤이 만들어졌으면는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 변경 내용을 덮어씁니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.Row%2A> 하는 동안 데이터 행의 속성에 액세스 하는 속성을 <xref:System.Web.UI.WebControls.FormView.ItemCreated> 이벤트.  
  
 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤이 읽기 전용 모드에 있을 때 이 컨트롤의 데이터 행 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤이 읽기 전용 모드에 있을 때 이 컨트롤의 데이터 행 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> 경우 데이터의 모양을 제어 하려면 속성 행을 <xref:System.Web.UI.WebControls.FormView> (표시) 읽기 전용 모드에서 컨트롤은입니다. 경우는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 읽기 전용 모드 이면 데이터 행에 의해 지정 된 사용자 정의 콘텐츠 표시는 <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> 속성입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 선언적으로 다음 방법 중 하나를 사용 하 여 속성을 설정할 수 있습니다.  
  
-   여는 태그에 특성을 배치 합니다 <xref:System.Web.UI.WebControls.FormView> 폼에서 컨트롤 `Property-Subproperty`여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체 (예를 들어, `RowStyle-ForeColor`).  
  
-   중첩 된 `<RowStyle>` 을 열고 닫는 태그 사이 요소를 <xref:System.Web.UI.WebControls.FormView> 컨트롤.  
  
 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `RowStyle.ForeColor`). 일반적인 설정에는 일반적으로 사용자 지정 배경색, 전경색 및 글꼴 속성 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> 경우 데이터에 대 한 사용자 지정 스타일을 지정 하려면 속성 행는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 읽기 전용 모드 인지 합니다.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="formView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 속성이 <see langword="false" />로 설정되어 있는 경우에도 유지해야 하는 <see cref="P:System.Web.UI.Control.EnableViewState" /> 컨트롤 속성의 상태를 저장합니다.</summary>
        <returns>서버 컨트롤의 현재 뷰 상태를 반환합니다. 컨트롤과 연결된 뷰 상태가 없으면 이 메서드는 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 상태를 저장 하려면이 메서드는 사용 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤 속성을 유지 해야 하는 경우에는 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> 속성이 `false`합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="formView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 현재 뷰 상태를 저장합니다.</summary>
        <returns><see cref="T:System.Object" /> 컨트롤의 저장된 상태가 들어 있는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A> 메서드는 호출 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.FormView> 컨트롤의 상태를 저장 하는 컨트롤입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에서 현재 레코드의 데이터 키 값을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 현재 레코드에 대한 데이터 키 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 속성이 설정 되어를 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 자동으로 만듭니다.는 <xref:System.Web.UI.WebControls.DataKey> 필드 또는 필드에 나열 된 키/값 쌍이 들어 있는 개체는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 현재 레코드에 대 한 속성. 합니다 <xref:System.Web.UI.WebControls.DataKey> 개체 기본 키 필드 또는 현재 레코드에 대 한 필드를 나타내며에 저장 되는 <xref:System.Web.UI.WebControls.FormView.DataKey%2A> 속성입니다. 사용 하는 대신 합니다 <xref:System.Web.UI.WebControls.FormView.DataKey%2A> 데이터 키 값에 액세스 하려면 속성 사용할 수는 <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> 바로 가기로 속성입니다.  
  
> [!NOTE]
>  경우는 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 속성 여러 필드를 나열,이 속성에 나열 된 첫 번째 필드의 값을 반환 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> 키 필드의 값을 확인 하는 속성입니다.  
  
 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberSignature Language="F#" Value="member this.SetPageIndex : int -&gt; unit" Usage="formView.SetPageIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">설정할 인덱스입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 현재 표시된 페이지의 인덱스를 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />를 참조하십시오.</summary>
        <value>디스플레이 인덱스를 나타내는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.FormView> 인스턴스가 <xref:System.Web.UI.IDataItemContainer> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DisplayIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />를 참조하십시오.</summary>
        <value>항상 0을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.FormView> 인스턴스가 <xref:System.Web.UI.IDataItemContainer> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">이벤트의 인수입니다.</param>
        <summary>서버에 포스트백될 때 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 대한 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이지 호출을 <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> 포스트백 이벤트가 발생할 때 메서드. 이 호출은 로드 및 변경 내용 알림 완료 되었으나 페이지가 렌더링 된 페이지 수명 주기에서 발생 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System::Web::UI::WebControls::IDataBoundControl::DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 표시된 항목의 기본 키 필드 이름이 들어 있는 배열을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 표시된 항목의 기본 키 필드 이름이 들어 있는 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.FormView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에 여러 개의 데이터 항목 목록이 들어 있는 경우 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 바인딩되는 데이터 항목 목록의 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 바인딩되는 데이터 항목 목록의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.FormView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Web::UI::WebControls::IDataBoundControl::DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에서 검색하는 데이터 목록이 포함된 개체를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에서 검색하는 데이터 목록이 포함된 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.FormView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에서 검색하는 데이터 항목 목록이 포함된 데이터 소스 컨트롤의 ID를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에서 검색하는 데이터 항목 목록이 포함된 데이터 소스 컨트롤의 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.FormView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에서 검색하는 데이터 항목 목록이 포함된 데이터 소스 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에서 검색하는 데이터 항목 목록이 포함된 데이터 소스 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.FormView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System::Web::UI::WebControls::IDataBoundItemControl::DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 있는 행의 데이터 키 값을 나타내는 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 있는 행의 데이터 키 값을 나타내는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.FormView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System::Web::UI::WebControls::IDataBoundItemControl::Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 현재 모드를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤의 현재 모드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.FormView> 인스턴스가 <xref:System.Web.UI.WebControls.IDataBoundControl> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">서버에 페이지를 포스트백한 단추 컨트롤입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 대한 다시 게시 이벤트 옵션을 결정합니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 대한 다시 게시 이벤트 옵션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A> 메서드는 호출 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.FormView> 컨트롤을 만들고를 <xref:System.Web.UI.PostBackOptions> 컨트롤에 대 한 다시 게시 이벤트 옵션을 포함 하는 개체입니다. 합니다 <xref:System.Web.UI.PostBackOptions> 개체에 대 한 매개 변수로 사용 되는 일반적으로 <xref:System.Web.UI.Page.GetPostBackEventReference%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buttonControl" /> 매개 변수에 포함된 개체가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="buttonControl" />의 <see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" /> 속성이 <see langword="true" />입니다.</exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.FormView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 컨트롤에 대한 <see cref="T:System.Web.UI.WebControls.FormView" /> 값을 가져옵니다.</summary>
        <value>항상 <see langword="HtmlTextWriterTag.Table" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.TagKey%2A> 속성에 대 한 적절 한 HTML 태그를 작성 하기 위한 출력 스트림을 허용 합니다 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>지정 하려면이 속성을 재정의할 수 있습니다 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 파생된 컨트롤에 사용할 값입니다.</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ TopPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> 컨트롤 위쪽에 표시되는 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> 컨트롤의 위쪽 페이저 행을 나타내는 <see cref="T:System.Web.UI.WebControls.FormView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징이 활성화 된 경우 (때 합니다 <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> 속성이로 설정 되어 `true`), 페이저 행을 호출 하는 추가 행에 자동으로 표시 됩니다는 <xref:System.Web.UI.WebControls.FormView> 컨트롤입니다. 페이저 행을 다른 레코드를 탐색할 수 있도록 하 고 위쪽, 아래쪽 또는 둘 다 위쪽과 컨트롤의 아래쪽에 표시 될 수 있는 컨트롤을 포함 합니다. 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> 속성을 프로그래밍 방식으로 액세스를 <xref:System.Web.UI.WebControls.FormViewRow> 의 위쪽 페이저 행을 나타내는 개체를 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> 속성을 한 후에 사용할 수는 <xref:System.Web.UI.WebControls.FormView> 컨트롤의 위쪽 페이저 행을 만듭니다는 <xref:System.Web.UI.WebControls.FormView.ItemCreated> 이벤트입니다.  
  
 예를 들어 사용자 지정 콘텐츠를 추가할 때의 위쪽 페이저 행을 프로그래밍 방식으로 조작 해야 할 때이 속성은 일반적으로 사용 됩니다. 수정을 <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> 후 속성에 수행 해야 합니다 <xref:System.Web.UI.WebControls.FormView> 고, 그렇지 않으면 데이터 바인딩된 컨트롤이 만들어졌으면는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 변경 내용을 덮어씁니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> 맨 위에 있는 표시 되는 페이저 행에 액세스 하는 속성을 <xref:System.Web.UI.WebControls.FormView> 컨트롤. 페이저 행이 추가 내용으로 업데이트 됩니다.  
  
 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="formView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>뷰 상태의 변경 사항을 추적하여 <see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤에 이 변경 사항을 저장할 시작 위치를 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 컨트롤의 뷰 상태의 일부로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하는 시작 위치를 표시 하도록 재정의 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : bool -&gt; unit&#xA;override this.UpdateItem : bool -&gt; unit" Usage="formView.UpdateItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">메서드가 호출될 때 페이지 유효성 검사를 수행하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>데이터 소스의 현재 레코드를 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.FormView> 컨트롤이 편집 모드 인지를 사용 하 여는 <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> 프로그래밍 방식으로 데이터 소스의 현재 레코드를 업데이트 하는 방법입니다. 외부에서 현재 레코드를 업데이트 해야 할 경우에 일반적으로이 메서드는는 <xref:System.Web.UI.WebControls.FormView> 와 같은 페이지의 다른 컨트롤을 제어 합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.FormView> 이 방법이 고, 그렇지 않으면 호출 하는 경우 컨트롤이 편집 모드에 있어야는 <xref:System.Web.HttpException> throw 됩니다.  
  
 업데이트 작업 전의 페이지 유효성 검사를 수행할지 여부를 지정 하려면 사용 된 `causesValidation` 매개 변수입니다. 이 메서드를 호출 발생 합니다 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> 고 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> 프로그래밍 방식으로의 현재 레코드를 업데이트 하는 방법을 <xref:System.Web.UI.WebControls.FormView> 컨트롤 데이터 소스의 합니다.  
  
 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.FormView" /> 컨트롤이 편집 모드에 있지 않은 상태에서 이 메서드를 호출한 경우  
  
또는 
<see cref="T:System.Web.UI.DataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.FormView" /> 개체가 null인 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 업데이트 작업을 수행하는 경우 호출되는 페이지의 메서드에 대한 이름을 가져오거나 설정합니다.</summary>
        <value>컨트롤에서 업데이트 작업을 수행할 때 호출되는 페이지상의 메서드 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web Forms 모델 바인딩 사용에 대 한 자습서 시리즈를 참조 하세요 [모델 바인딩 및 Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>