<Type Name="ListItemControlBuilder" FullName="System.Web.UI.WebControls.ListItemControlBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2be4c8ecb4e4d5ea9c9fa4d5088236b6d82b98ba" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51930986" /></Metadata><TypeSignature Language="C#" Value="public class ListItemControlBuilder : System.Web.UI.ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListItemControlBuilder extends System.Web.UI.ControlBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListItemControlBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ListItemControlBuilder&#xA;Inherits ControlBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListItemControlBuilder : System::Web::UI::ControlBuilder" />
  <TypeSignature Language="F#" Value="type ListItemControlBuilder = class&#xA;    inherit ControlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ControlBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.ListItem" /> 컨트롤을 빌드할 파서와 상호 작용합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스는 주로 컨트롤 개발자에 게 사용 됩니다. 에 대 한 사용자 지정 컨트롤 작성기를 만들려면를 <xref:System.Web.UI.WebControls.ListItem> 파생 컨트롤에서이 클래스에서 상속 해야 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListItem" />
    <altmember cref="T:System.Web.UI.ControlBuilderAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/c08ee025-787a-408d-858e-a4a5fdb61d97">ListBox 웹 서버 컨트롤 개요</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListItemControlBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListItemControlBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListItemControlBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ListItemControlBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWhitespaceLiterals">
      <MemberSignature Language="C#" Value="public override bool AllowWhitespaceLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AllowWhitespaceLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListItemControlBuilder.AllowWhitespaceLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AllowWhitespaceLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool AllowWhitespaceLiterals();" />
      <MemberSignature Language="F#" Value="override this.AllowWhitespaceLiterals : unit -&gt; bool" Usage="listItemControlBuilder.AllowWhitespaceLiterals " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ListItem" />과 연결된 텍스트의 공백을 <see cref="T:System.Web.UI.LiteralControl" /> 개체로 나타내는지 여부를 확인합니다.</summary>
        <returns>모든 경우에 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 상속된 구현 재정의 <xref:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals%2A?displayProperty=nameWithType> 항상 텍스트에 공백이 연관를 나타내도록 합니다 <xref:System.Web.UI.WebControls.ListItem> 컨트롤이 표시 되지 않습니다 <xref:System.Web.UI.LiteralControl?displayProperty=nameWithType> 개체.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecodeLiterals">
      <MemberSignature Language="C#" Value="public override bool HtmlDecodeLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HtmlDecodeLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListItemControlBuilder.HtmlDecodeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HtmlDecodeLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HtmlDecodeLiterals();" />
      <MemberSignature Language="F#" Value="override this.HtmlDecodeLiterals : unit -&gt; bool" Usage="listItemControlBuilder.HtmlDecodeLiterals " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>텍스트가 구문 분석될 때 <see cref="T:System.Web.UI.WebControls.ListItem" />과 연결된 텍스트의 HTML 엔터티가 동등한 문자로 변환되는지 여부를 결정합니다.</summary>
        <returns>모든 경우에 <see langword="true" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListItemControlBuilder.HtmlDecodeLiterals%2A> 메서드는 연결 된 텍스트의 HTML 엔터티가 있는지 여부를 결정 데는 <xref:System.Web.UI.WebControls.ListItem> 텍스트 구문 분석 하는 동등한 문자로 변환 됩니다. 이 메서드는 상속된 구현 재정의 <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A?displayProperty=nameWithType> 메서드를 항상 반환 `true`합니다. 텍스트의 HTML 엔터티가 연관 나타냅니다는 <xref:System.Web.UI.WebControls.ListItem> 컨트롤 동등한 일반 텍스트 문자로 항상 자동으로 변환 됩니다.  
  
> [!NOTE]
>  연결 된 텍스트를 <xref:System.Web.UI.WebControls.ListItem> 특성으로 렌더링 되는 `<option>` HTML 요소입니다. 특성은 클라이언트에서 렌더링 되 면 특수 문자를 동등한 HTML 엔터티로 자동 변환 됩니다. 문자 (<) 보다 작음 변환할 예를 들어 `&lt;`합니다. 특성을 구문 분석할 때 동등한 일반 텍스트 문자로 돌아가기 HTML 엔터티로 자동 변환 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.HtmlDecodeLiterals" />
      </Docs>
    </Member>
  </Members>
</Type>