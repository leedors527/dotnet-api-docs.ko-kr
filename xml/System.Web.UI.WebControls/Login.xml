<Type Name="Login" FullName="System.Web.UI.WebControls.Login">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ccd78337abc5510a861488b39f570b95a9885e0" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58875348" /></Metadata><TypeSignature Language="C#" Value="public class Login : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Login extends System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Login" />
  <TypeSignature Language="VB.NET" Value="Public Class Login&#xA;Inherits CompositeControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Login : System::Web::UI::WebControls::CompositeControl" />
  <TypeSignature Language="F#" Value="type Login = class&#xA;    inherit CompositeControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Authenticate")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>웹 사이트에 로그인하기 위한 UI(사용자 인터페이스) 요소를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용  
  
-   [소개](#introduction)  
  
-   [스타일 및 템플릿](#styles_and_templates)  
  
-   [유효성 검사 그룹](#validation_groupings)  
  
-   [액세스 가능성](#accessibility)  
  
-   [CSS 스타일 적용](#applying_styles)  
  
-   [선언 구문](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>소개  
 <xref:System.Web.UI.WebControls.Login> 컨트롤은 모든 일반적인 UI 요소를 웹 사이트에서 사용자를 인증 하는 데 필요한를 제공 하는 복합 컨트롤입니다. 다음 세 가지 요소는 모든 로그인 시나리오에 필요:  
  
-   사용자를 식별 하는 고유한 사용자 이름입니다.  
  
-   사용자의 id를 확인 하는 암호입니다.  
  
-   서버에 로그인 정보를 보내거나 로그인 단추입니다.  
  
 <xref:System.Web.UI.WebControls.Login> 제어도 추가 기능을 지 원하는 다음과 같은 선택적 UI 요소를 제공 합니다.  
  
-   암호 미리 알림에 대 한 링크입니다.  
  
-   암호 저장 확인란 세션 간 로그인 정보를 보존 합니다.  
  
-   로그인 문제가 발생 하는 사용자에 대 한 도움말 링크입니다.  
  
-   등록 페이지로 사용자를 리디렉션하는 새 사용자 등록 링크입니다.  
  
-   로그인 폼에 표시 되는 지침 텍스트입니다.  
  
-   사용자 이름 또는 암호 필드를 입력 하지 않고 로그인 단추를 클릭할 때 표시 되는 사용자 지정 오류 텍스트입니다.  
  
-   로그인이 실패 하면 표시 되는 사용자 지정 오류 텍스트입니다.  
  
-   로그인에 성공할 때 발생 하는 사용자 지정 동작입니다.  
  
-   사이트에 사용자가 이미 로그인 하는 경우 로그인 컨트롤을 숨기는 방법입니다.  
  
 필수 및 선택적을 보여 주는 표를 참조 하세요. <xref:System.Web.UI.WebControls.Login.LayoutTemplate%2A> 속성입니다.  
  
> [!NOTE]
>  ASP.NET에서 사용할 수 있는 login 컨트롤 집합에 익숙하지 참조 [ASP.NET Login 컨트롤 개요](https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)) 계속 하기 전에 합니다. Login 컨트롤 및 멤버 자격과 관련 된 기타 항목 목록을 참조 하세요 [멤버 자격을 사용 하 여 사용자 관리](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)합니다.  
  
> [!IMPORTANT]
>  수락 사용자 입력은 잠재적인 보안 위협입니다. 악의적인 사용자가 취약점을 노출 하거나 프로그램을 실행 하기 위한 데이터 생성 된 암호 시도 보낼 수 있습니다. 사용자 입력을 사용 하 여 작업 하는 경우 보안 향상을 위해 컨트롤의 유효성 검사 기능을 사용 해야 하며 구성 된 모든 데이터 공급자 컨트롤에 대 한 보안 키를 누릅니다. 자세한 내용은 [보안 로그인 컨트롤](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c), [웹 응용 프로그램에 대 한 기본 보안 사례](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad), 및 [멤버 보안](https://msdn.microsoft.com/library/2dab2012-c278-426a-bb0d-93b260c428a7)합니다.  
  
 <xref:System.Web.UI.WebControls.Login> 컨트롤에서 사용자 자격 증명을 가져올 멤버 자격 공급자를 사용 합니다. 지정 하지 않으면,는 <xref:System.Web.UI.WebControls.Login> 컨트롤에서 Web.config 파일에 정의 된 기본 멤버 자격 공급자를 사용 합니다. 다른 공급자를 지정 하려면 설정의 <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> 응용 프로그램의 Web.config 파일에 정의 된 속성을 멤버 자격 공급자 이름 중 하나입니다. 자세한 내용은 [멤버 자격 공급자](https://msdn.microsoft.com/library/d2c90ff6-aa86-4001-b2c5-e5c99cb7f68f)합니다.  
  
 사용자 지정 인증 서비스를 사용 하려는 경우 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.Login.OnAuthenticate%2A> 서비스를 호출 하는 방법입니다.  
  
<a name="styles_and_templates"></a>   
## <a name="styles-and-templates"></a>스타일 및 템플릿  
 모양의 <xref:System.Web.UI.WebControls.Login> 컨트롤은 템플릿 및 스타일 설정을 통해 완벽 하 게 사용자 지정할 수 있습니다. 모든 UI 텍스트 메시지의 속성을 통해 직접 지정할 수도 있습니다는 <xref:System.Web.UI.WebControls.Login> 클래스입니다. 기본 인터페이스 텍스트는 서버의 로캘 설정에 따라 자동으로 지역화 됩니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Login> 템플릿을 사용 하 여 컨트롤을 사용자 지정 하면 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> 속성 및 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> 속성은 무시 됩니다. 이 경우에 설정 된 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> 속성 및 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> 직접 각 템플릿 자식 컨트롤의 속성입니다.  
  
 <xref:System.Web.UI.WebControls.Login> 같은 입력란에서 표시 하는 속성을 제어할 <xref:System.Web.UI.WebControls.Login.UserName%2A> 및 <xref:System.Web.UI.WebControls.Login.Password%2A>, 페이지 수명 주기의 모든 단계 동안 액세스할 수 있습니다. 컨트롤을 이용 하 여 최종 사용자가 변경한 모든 내용을 선택 된 <xref:System.Web.UI.WebControls.TextBox.TextChanged> 된 텍스트 상자에 의해 트리거되는 이벤트입니다.  
  
> [!NOTE]
>  포함 하는 경우를 <xref:System.Web.UI.WebControls.Login> 에서 제어할를 <xref:System.Web.UI.WebControls.WizardStep> 개체를 명시적으로 설정 합니다 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 속성에는 `Page_Load` 사용자가 인증 되 면 이벤트 처리기. 합니다 <xref:System.Web.UI.WebControls.Wizard> 컨트롤에 자동으로 진행 하지 않습니다 <xref:System.Web.UI.WebControls.WizardStep> 이 시나리오에서는 개체입니다.  
  
 다음 표에서 <xref:System.Web.UI.WebControls.Login> 스타일 속성을 제어 하 고 각 스타일 속성이 적용 되는 UI 요소에 설명 합니다. 각 스타일 적용 되는 속성의 목록에 대 한 개별 스타일 속성에 대 한 설명서를 참조 합니다.  
  
|스타일 속성|영향을 받는 UI 요소|  
|--------------------|-------------------------|  
|<xref:System.Web.UI.WebControls.Login.BorderPadding%2A>|컨트롤 내용과 컨트롤 테두리 사이의 공간입니다.|  
|<xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A>|확인란을 선택을 해야 합니다.|  
|<xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A>|로그인 실패 텍스트입니다.|  
|<xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A>|사용자 컨트롤을 사용 하는 방법을 알려 주는 페이지의 지침 텍스트입니다.|  
|<xref:System.Web.UI.WebControls.Login.LabelStyle%2A>|텍스트 상자와 같은 모든 입력된 필드에 대 한 레이블입니다.|  
|<xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A>|텍스트 입력된 필드를 입력 합니다.|  
|<xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A>|제목 텍스트입니다.|  
|<xref:System.Web.UI.WebControls.Login.ValidatorTextStyle%2A>|로그인 시도가 성공적인 유효성 검사 오류로 인해 없을 때 사용자에 게 표시할 텍스트입니다.|  
|<xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A>|다른 페이지에 연결 합니다.|  
|<xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A>|로그인 단추입니다.|  
  
<a name="validation_groupings"></a>   
## <a name="validation-groupings"></a>유효성 검사 그룹  
 <xref:System.Web.UI.WebControls.Login.UserName%2A> 하 고 <xref:System.Web.UI.WebControls.Login.Password%2A> 속성에 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 컨트롤과 연결 되어 사용자가 필요한 정보를 제공 하지 않고 페이지를 제출 하지 못하도록 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.Login> 제어 유효성 검사 그룹을 사용 하므로 다른 필드와 동일한 페이지에는 <xref:System.Web.UI.WebControls.Login> 컨트롤을 개별적으로 검사할 수 있습니다. 기본적으로 <xref:System.Web.UI.Control.ID%2A> 의 속성을 <xref:System.Web.UI.WebControls.Login> 유효성 검사 그룹의 이름으로 컨트롤을 사용 합니다. 예를 들어, 한 <xref:System.Web.UI.WebControls.Login> "Login1" ID 사용 하 여 컨트롤에는 "Login1"의 유효성 검사 그룹 이름을 사용 합니다. 설정 하려는 경우 유효성 검사 그룹의 <xref:System.Web.UI.WebControls.Login> 의 일부인 컨트롤, 컨트롤 템플릿 하며 유효성 검사 그룹 이름을 변경 합니다.  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>CSS 스타일 적용  
 <xref:System.Web.UI.WebControls.Login> 컨트롤 태그에 CSS 스타일 규칙을 지정할 수 있습니다. 모양을 사용자 지정 템플릿을 사용 하는 경우는 <xref:System.Web.UI.WebControls.Login> 컨트롤 템플릿에 태그에 CSS 스타일을 지정할 수 있습니다. 이 경우 추가 외부 테이블이 없으면 반드시 합니다. 테이블을 설정 하 여 렌더링 되지 않도록 방지할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.Login.RenderOuterTable%2A> 속성을 `false`입니다.  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>액세스 가능성  
 접근성 표준을 준수 하는 태그를 생성할 수 있도록이 컨트롤을 구성 하는 방법에 대 한 정보를 참조 하세요 [Visual Studio 및 ASP.NET의 접근성](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) 및 [ASP.NET 컨트롤과내게필요한옵션](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:Login  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderPadding="integer"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CreateUserIconUrl="uri"  
    CreateUserText="string"  
    CreateUserUrl="uri"  
    CssClass="string"  
    DestinationPageUrl="uri"  
    DisplayRememberMe="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FailureAction="Refresh|RedirectToLoginPage"  
    FailureText="string"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
               Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    HelpPageIconUrl="uri"  
    HelpPageText="string"  
    HelpPageUrl="uri"  
    ID="string"  
    InstructionText="string"  
    LoginButtonImageUrl="uri"  
    LoginButtonText="string"  
    LoginButtonType="Button|Image|Link"  
    MembershipProvider="string"  
    OnAuthenticate="Authenticate event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnLoggedIn="LoggedIn event handler"  
    OnLoggingIn="LoggingIn event handler"  
    OnLoginError="LoginError event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    Orientation="Horizontal|Vertical"  
    PasswordLabelText="string"  
    PasswordRecoveryIconUrl="uri"  
    PasswordRecoveryText="string"  
    PasswordRecoveryUrl="uri"  
    PasswordRequiredErrorMessage="string"  
    RememberMeSet="True|False"  
    RememberMeText="string"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    TextLayout="TextOnLeft|TextOnTop"  
    TitleText="string"  
    ToolTip="string"  
    UserName="string"  
    UserNameLabelText="string"  
    UserNameRequiredErrorMessage="string"  
    Visible="True|False"  
    VisibleWhenLoggedIn="True|False"  
    Width="size"  
>  
        <CheckBoxStyle />  
        <FailureTextStyle />  
        <HyperLinkStyle />  
        <InstructionTextStyle />  
        <LabelStyle />  
        <LayoutTemplate>  
            <!-- child controls -->  
        </LayoutTemplate>  
        <LoginButtonStyle />  
        <TextBoxStyle />  
        <TitleTextStyle />  
        <ValidatorTextStyle />  
</asp:Login>  
```  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Web.UI.WebControls.Login> 컨트롤을 웹 사이트에 로그인 하기 위한 UI를 제공 합니다.  
  
 [!code-aspx-csharp[LoginClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginClass/CS/loginclasscs.aspx#1)]
 [!code-aspx-vb[LoginClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginClass/VB/loginclassvb.aspx#1)]  
  
 다음 코드 예제에서는 확장 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Login> 제어 합니다. 합니다 `CustomLogin` 컨트롤에는 <xref:System.Web.UI.WebControls.DropDownList> 수 있는 컨트롤이 사용 하 여 인증 하는 멤버 자격 공급자를 선택 합니다. (이러한 공급자는 Web.config에 구성 됩니다.) 에 <xref:System.Web.UI.WebControls.Login.OnLoggingIn%2A> 메서드를를 <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> 의 선택된 된 값이 속성은 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-csharp[Samples.AspNet.Controls.CustomLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Controls.CustomLogin/CS/FarmasLogin.cs#1)]
 [!code-vb[Samples.AspNet.Controls.CustomLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Controls.CustomLogin/VB/FarmasLogin.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Security.Membership" />
    <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">멤버 자격 소개</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Login ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Login();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤의 새 인스턴스를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login> 생성자의 새 인스턴스를 만듭니다는 <xref:System.Web.UI.WebControls.Login> 웹 페이지에 프로그래밍 방식으로 삽입할 수 있는 컨트롤입니다.  
  
 다음 표에서 초기 속성 값의 새 인스턴스를 보여 줍니다. <xref:System.Web.UI.WebControls.Login>합니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.Login.RememberMeSet%2A>|`true`|  
|<xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A>|`true`|  
|<xref:System.Web.UI.WebControls.Login.FailureAction%2A>|`true`|  
|<xref:System.Web.UI.WebControls.Login.FailureText%2A>|"사용자 로그인 시도가 실패 했습니다. 다시 시도하세요."|  
|<xref:System.Web.UI.WebControls.Login.MembershipProvider%2A>|"Default"|  
|<xref:System.Web.UI.WebControls.Login.Orientation%2A>|<xref:System.Web.UI.WebControls.Orientation.Vertical>|  
|<xref:System.Web.UI.WebControls.Login.PasswordLabelText%2A>|"암호:"|  
|<xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A>|"Password"로 지정 합니다.|  
|<xref:System.Web.UI.WebControls.Login.RememberMeSet%2A>|`false`|  
|<xref:System.Web.UI.WebControls.Login.RememberMeText%2A>|"기억" me 다음 시간입니다.|  
|<xref:System.Web.UI.WebControls.Login.LoginButtonText%2A>|"로그인"|  
|<xref:System.Web.UI.WebControls.Login.TextLayout%2A>|<xref:System.Web.UI.WebControls.LoginTextLayout.TextOnLeft>|  
|<xref:System.Web.UI.WebControls.Login.TitleText%2A>|"로그인"|  
|<xref:System.Web.UI.WebControls.Login.UserNameLabelText%2A>|"사용자 이름:"|  
|<xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A>|"사용자 이름입니다."|  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.%23ctor%2A> 의 새 인스턴스를 만드는 생성자입니다는 <xref:System.Web.UI.WebControls.Login> 제어 하 고 해당 인스턴스를 추가 합니다 <xref:System.Web.UI.Control.Controls%2A> 의 컬렉션을 <xref:System.Web.UI.WebControls.PlaceHolder> 컨트롤.  
  
 [!code-aspx-csharp[LoginLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLogin/CS/loginlogincs.aspx#1)]
 [!code-aspx-vb[LoginLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLogin/VB/loginloginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.AuthenticateEventHandler Authenticate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.AuthenticateEventHandler Authenticate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Login.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Authenticate As AuthenticateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::AuthenticateEventHandler ^ Authenticate;" />
      <MemberSignature Language="F#" Value="member this.Authenticate : System.Web.UI.WebControls.AuthenticateEventHandler " Usage="member this.Authenticate : System.Web.UI.WebControls.AuthenticateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AuthenticateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 인증될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.Authenticate> 사용자가 사용 하는 경우 이벤트는 <xref:System.Web.UI.WebControls.Login> 컨트롤을 웹 사이트에 로그인 합니다. 사용자 지정 인증 체계를 사용할 수는 <xref:System.Web.UI.WebControls.Login.Authenticate> 사용자를 인증 하는 이벤트입니다.  
  
> [!NOTE]
>  사용자가 사용 하는 경우는 <xref:System.Web.UI.WebControls.Login> 웹 사이트로 로그인 컨트롤, 보기 상태에서 모든 데이터 및 모든 게시물 데이터 손실 됩니다. 작업을 수행 하지 않습니다는 <xref:System.Web.UI.WebControls.Login.Authenticate> 뷰 상태에 의존 하는 이벤트입니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.Authenticate> 사이트별 사용자 지정 인증 코드를 호출 하는 이벤트입니다.  
  
 [!code-aspx-csharp[LoginAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginAuthenticate/CS/loginauthenticatecs.aspx#1)]
 [!code-aspx-vb[LoginAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginAuthenticate/VB/loginauthenticatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>사용자 지정 인증 체계를 설정 해야 합니다 <see cref="P:System.Web.UI.WebControls.AuthenticateEventArgs.Authenticated" /> 속성을 <see langword="true" /> 사용자가 인증 했는지를 나타냅니다.  
  
사용자가 자신의 로그인 정보를 전송 하는 경우는 <see cref="T:System.Web.UI.WebControls.Login" /> 첫 번째 발생을 제어를 <see cref="E:System.Web.UI.WebControls.Login.LoggingIn" /> 이벤트를 해당 <see cref="E:System.Web.UI.WebControls.Login.Authenticate" /> 이벤트를 마지막으로 <see cref="E:System.Web.UI.WebControls.Login.LoggedIn" /> 이벤트.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.AuthenticateEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.AuthenticateEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="BorderPadding">
      <MemberSignature Language="C#" Value="public virtual int BorderPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.BorderPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int BorderPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderPadding : int with get, set" Usage="System.Web.UI.WebControls.Login.BorderPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤 테두리의 안쪽 여백 크기를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤 내용과 <see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤 테두리 사이의 여백(픽셀)입니다. 기본값은 <see langword="1" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Web.UI.WebControls.Login.BorderPadding%2A> 속성은 뷰 상태에 저장 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.Login.BorderPadding" /> 속성이 -1보다 작은 값으로 설정된 경우입니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle CheckBoxStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle CheckBoxStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.CheckBoxStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckBoxStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ CheckBoxStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckBoxStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.CheckBoxStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 이름 및 암호 저장 확인란에 대한 설정을 정의하는 <see cref="T:System.Web.UI.WebControls.Style" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" /> 컨트롤의 사용자 이름 및 암호 저장 확인란에 대한 스타일 설정을 정의하는 <see cref="T:System.Web.UI.WebControls.Login" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> 속성에 대 한 참조를 가져옵니다을 <xref:System.Web.UI.WebControls.Style> 의 모양을 변경 하려면 사용 하는 개체는 <xref:System.Web.UI.WebControls.Login> 컨트롤의 이름 및 암호 저장 확인란 합니다.  
  
 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.Style> 개체를 반환 합니다. 형식에서 선언적으로 이러한 속성을 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 의 속성을 나타냅니다 합니다 <xref:System.Web.UI.WebControls.Style> 클래스 (예를 들어 `CheckBoxStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수 있습니다 `Property.Subproperty` (예를 들어 `CheckBoxStyle.ForeColor`).  
  
 일반 설정 사용자 지정 배경색, 텍스트 색 및 글꼴 속성을 포함 합니다. 합니다 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> 속성의 모양을 정의 합니다 <xref:System.Web.UI.WebControls.Login.RememberMeText%2A> 속성입니다.  
  
 에 대 한 스타일 설정을 합니다 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> 속성에 대 한 스타일 설정을 사용 하 여 병합 되는 <xref:System.Web.UI.WebControls.Login> 컨트롤. 모든 설정이 합니다 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> 속성의 속성에서 해당 설정을 재정의 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
 다음 <xref:System.Web.UI.WebControls.Login> 컨트롤 스타일 속성에 의해 재정의 됩니다 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> 설정:  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 모양을 정의 하는 데 템플릿을 사용할 때의 <xref:System.Web.UI.WebControls.Login> 컨트롤을 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> 속성이 적용 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 이름 및 암호 저장 확인란의 텍스트 색을 파란색 및 글꼴 스타일을 기울임꼴로의 속성을 설정 하 여 합니다 <xref:System.Web.UI.WebControls.Style> 개체에서 참조 하는 <xref:System.Web.UI.WebControls.Login.CheckBoxStyle%2A> 속성입니다.  
  
 [!code-aspx-csharp[LoginCheckBoxStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginCheckBoxStyle/CS/logincheckboxstylecs.aspx#1)]
 [!code-aspx-vb[LoginCheckBoxStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginCheckBoxStyle/VB/logincheckboxstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.RememberMeSet" />
        <altmember cref="P:System.Web.UI.WebControls.Login.RememberMeText" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="login.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤을 구성하는 개별 컨트롤을 만들고 이벤트와 이벤트 처리기를 연결합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.CreateChildControls%2A> 메서드를 구성 하는 컨트롤의 인스턴스를 만듭니다는 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUserIconUrl">
      <MemberSignature Language="C#" Value="public virtual string CreateUserIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.CreateUserIconUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CreateUserIconUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CreateUserIconUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CreateUserIconUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.CreateUserIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>새 사용자 등록 페이지에 대한 링크 옆에 표시할 이미지의 위치를 가져옵니다.</summary>
        <value>표시할 이미지의 URL입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserUrl" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUserText">
      <MemberSignature Language="C#" Value="public virtual string CreateUserText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.CreateUserText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CreateUserText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CreateUserText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CreateUserText : string with get, set" Usage="System.Web.UI.WebControls.Login.CreateUserText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>새 사용자 등록 페이지에 대한 링크의 텍스트를 가져오거나 설정합니다.</summary>
        <value>새 사용자 등록 페이지에 대한 링크의 텍스트입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> 사이트에 대 한 등록 페이지에 대 한 링크의 텍스트를 포함 하는 속성입니다. 등록 페이지의 url에 <xref:System.Web.UI.WebControls.Login.CreateUserUrl%2A> 속성입니다.  
  
 경우 <xref:System.Web.UI.WebControls.Login.CreateUserUrl%2A> 가 비어 있거나, 텍스트를 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> 속성이 사용자에 게 표시 되지만 링크로 형식이 있습니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> 속성이 비어 있는 경우 등록 페이지에 대 한 링크를 사용자에 게 사용할 수 없는 경우.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> 속성을 "등록 새 사용자..."  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[LoginCreateUserText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginCreateUserText/CS/logincreateusertextcs.aspx#1)]
 [!code-aspx-vb[LoginCreateUserText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginCreateUserText/VB/logincreateusertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUserUrl">
      <MemberSignature Language="C#" Value="public virtual string CreateUserUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.CreateUserUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CreateUserUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CreateUserUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CreateUserUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.CreateUserUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>새 사용자 등록 페이지의 URL을 가져오거나 설정합니다.</summary>
        <value>새 사용자 등록 페이지의 URL입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.CreateUserUrl%2A> 속성 웹 사이트에 대 한 새 사용자 등록 페이지의 URL을 포함 합니다. <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> 속성 링크에 사용 되는 텍스트를 포함 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Login.CreateUserText%2A> 속성이 비어, 등록 페이지의 링크를 사용자에 게 사용할 수 없습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.CreateUserUrl%2A> "register.aspx" 속성입니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[LoginCreateUserText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginCreateUserText/CS/logincreateusertextcs.aspx#1)]
 [!code-aspx-vb[LoginCreateUserText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginCreateUserText/VB/logincreateusertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserText" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="DestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string DestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.DestinationPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DestinationPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DestinationPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationPageUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.DestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그인에 성공할 경우 사용자에게 표시할 페이지의 URL을 가져오거나 설정합니다.</summary>
        <value>로그인에 성공할 경우 사용자가 리디렉션될 페이지의 URL입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.DestinationPageUrl%2A> 속성 로그인 시도 성공할 경우 표시 되는 페이지를 지정 합니다.  
  
 기본 동작을 <xref:System.Web.UI.WebControls.Login> 컨트롤에 정의 된 페이지 또는 참조 페이지로 사용자를 반환 하는 것을 `defaultUrl` Web.config 파일에서 요소의 특성입니다.  
  
 <xref:System.Web.UI.WebControls.Login.DestinationPageUrl%2A> 속성의 기본 동작을 재정의 합니다 <xref:System.Web.UI.WebControls.Login> 컨트롤 뿐만 `defaultUrl` 구성 파일에서 설정 합니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.DestinationPageUrl%2A> 속성입니다. 원하는 경우 대상 페이지 원래 페이지로 사용자 돌아갈 수 참조 페이지의 URL 대상 페이지의 URL에 연결할 Page_Load 메서드에 사용 됩니다.  
  
 [!code-aspx-csharp[LoginDestinationPageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginDestinationPageUrl/CS/logindestinationpageurlcs.aspx#1)]
 [!code-aspx-vb[LoginDestinationPageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginDestinationPageUrl/VB/logindestinationpageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayRememberMe">
      <MemberSignature Language="C#" Value="public virtual bool DisplayRememberMe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRememberMe" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.DisplayRememberMe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayRememberMe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DisplayRememberMe { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayRememberMe : bool with get, set" Usage="System.Web.UI.WebControls.Login.DisplayRememberMe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영구 쿠키를 브라우저로 보낼지 여부를 사용자가 제어할 수 있도록 하는 확인란의 표시 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>확인란을 표시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 속성이로 설정 되어 `true`에 포함 된 텍스트는 <xref:System.Web.UI.WebControls.Login.RememberMeText%2A> 함께 이름 및 암호 저장 확인란, 속성 페이지에 표시 됩니다. 선택 하면 이름 및 암호 Me 사이트로 이후 방문 시 자동으로 사용자가 되도록 확인란을 자신의 컴퓨터에 전송 하는 인증 쿠키를 유지 합니다. 값을 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 속성은 선택 하 여 이름 및 암호의 Me 확인란 합니다.  
  
 하는 경우 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 는 `false`, 이름 및 암호 저장 확인란은 페이지에 표시 되지 않으며 사용자에 게 인증 쿠키를 저장할지 여부를 제어할 수 없습니다. 설정할 수 있습니다는 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 속성을 `true` 확인란을 표시 하지 않고 사용자의 브라우저에 영구 인증 쿠키를 보내도록 합니다.  
  
> [!NOTE]
>  사용자의 브라우저에서 영구 인증 쿠키를 설정 된 경우 보안 위험이 있습니다. 이러한 보안 위험을 사이트에 허용 되는지 여부를 결정 합니다. 설정 하는 경우는 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 속성을 `true` 하며 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 속성을 `false`, 인터넷 카페 예를 들어, 실수로 두어도 영구 인증 쿠키 뒤와 같이 공용 브라우저에서 웹 사이트를 방문 하는 사용자 및 브라우저의 다음 사용자는 이전 사용자의 자격 증명을 사용 하 여 웹 사이트를 액세스할 수 없게 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 이름 및 암호 저장 확인란을 설정 하 여 사용 하지 않도록 설정 합니다 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 속성을 `false`입니다.  
  
 [!code-aspx-csharp[LoginEnableRememberMe#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginEnableRememberMe/CS/loginenableremembermecs.aspx#1)]
 [!code-aspx-vb[LoginEnableRememberMe#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginEnableRememberMe/VB/loginenableremembermevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.RememberMeSet" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="FailureAction">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.LoginFailureAction FailureAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.LoginFailureAction FailureAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.FailureAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FailureAction As LoginFailureAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::LoginFailureAction FailureAction { System::Web::UI::WebControls::LoginFailureAction get(); void set(System::Web::UI::WebControls::LoginFailureAction value); };" />
      <MemberSignature Language="F#" Value="member this.FailureAction : System.Web.UI.WebControls.LoginFailureAction with get, set" Usage="System.Web.UI.WebControls.Login.FailureAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginFailureAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그인에 실패할 경우 수행되는 작업을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.LoginFailureAction" /> 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.LoginFailureAction.Refresh" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.FailureAction%2A> 속성의 동작을 정의 합니다 <xref:System.Web.UI.WebControls.Login> 경우 사용자는 로그인 하지 못할 웹 사이트를 제어 합니다.  
  
 페이지를 다시 로드 하 고의 내용을 표시 하는 기본 동작을 <xref:System.Web.UI.WebControls.Login.FailureText%2A> 로그인 시도 실패 하는 사용자 경고는 속성입니다.  
  
 때 <xref:System.Web.UI.WebControls.Login.FailureAction%2A> 로 설정 된 <xref:System.Web.UI.WebControls.LoginFailureAction.RedirectToLoginPage>, Web.config 파일에 정의 된 로그인 페이지로 리디렉션됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 설정 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Login.FailureAction%2A> 속성 선언적 및 코드에서입니다.  
  
 [!code-aspx-csharp[LoginLoginFailureAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginFailureAction/CS/loginloginfailureactioncs.aspx#1)]
 [!code-aspx-vb[LoginLoginFailureAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginFailureAction/VB/loginloginfailureactionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see cref="T:System.Web.UI.WebControls.LoginFailureAction" /> 열거형 값 중 하나가 아닌 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="FailureText">
      <MemberSignature Language="C#" Value="public virtual string FailureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FailureText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.FailureText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FailureText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FailureText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FailureText : string with get, set" Usage="System.Web.UI.WebControls.Login.FailureText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그인에 실패할 경우 표시되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>로그인에 실패할 경우 사용자에게 표시되는 텍스트입니다. 기본값은 "로그인하지 못했습니다. 다시 시도하세요."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.FailureText%2A> 속성 로그인 시도가 실패할 때 표시 되는 문자열을 지정 합니다.  
  
 에 대 한 템플릿을 정의 하는 경우는 <xref:System.Web.UI.WebControls.Login> 컨트롤에 표시할 템플릿 위치에 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.Login.FailureText%2A> 를 사용 하 여 속성을 <xref:System.Web.UI.WebControls.Literal> 제어 및 제공 하는 컨트롤의 ID "FailureText". 템플릿을 사용 하는 경우는 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 속성에 지정 된 텍스트에 적용 되지 않습니다는 <xref:System.Web.UI.WebControls.Login.FailureText%2A> 속성입니다.  
  
 속성에 대 한 기본 텍스트는 서버의 현재 로캘을 기반으로 지역화 됩니다.  
  
> [!NOTE]
>  보안상의 이유로 로그인 오류 텍스트에는 오류에 대 한 특별 한 이유가 포함 되지 않습니다. 예를 들어,와 같은 오류 메시지가 "암호가 사용자에 대 한 잘못 \<사용자 이름 >" 잠재적인 공격자에 게 표시 됩니다는 \<사용자 이름 >은 시스템에서 사용자. 자세한 내용은 [방법: 안전 하 게 오류 메시지를 표시](https://msdn.microsoft.com/library/6f70ac33-6e11-4e98-ab7d-bae9c0e7eefa)합니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.FailureText%2A> 속성을 "있는 로그인 하는 동안 오류가 발생 했습니다. 다시 시도 하세요. "입니다.  
  
 [!code-aspx-csharp[LoginLoginFailureText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginFailureText/CS/loginloginfailuretextcs.aspx#1)]
 [!code-aspx-vb[LoginLoginFailureText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginFailureText/VB/loginloginfailuretextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.FailureTextStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="FailureTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FailureTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FailureTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.FailureTextStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FailureTextStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FailureTextStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FailureTextStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.FailureTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤의 오류 텍스트 모양을 정의하는 속성이 들어 있는 컬렉션에 대한 참조를 가져옵니다.</summary>
        <value>오류 텍스트의 모양을 정의하는 속성이 들어 있는 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 속성에 대 한 참조를 가져옵니다는 <xref:System.Web.UI.WebControls.TableItemStyle> 로그인 오류 텍스트의 모양을 변경 하려면 사용 하는 개체입니다. 기본 빨간색에서 텍스트를 표시 하는 것입니다.  
  
 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 형식에서 선언적으로 이러한 속성을 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 의 속성을 나타냅니다 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 클래스 (예를 들어 `FailureTextStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수 있습니다 `Property.Subproperty` (예를 들어 `FailureTextStyle.ForeColor`).  
  
 일반 설정 사용자 지정 배경색, 텍스트 색 및 글꼴 속성을 포함 합니다. 합니다 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 속성의 모양을 정의 합니다 <xref:System.Web.UI.WebControls.Login.FailureText%2A> 속성입니다.  
  
 에 대 한 스타일 설정을 합니다 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 속성에 대 한 스타일 설정을 사용 하 여 병합 되는 <xref:System.Web.UI.WebControls.Login> 컨트롤. 모든 설정이 합니다 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 속성의 속성에서 해당 설정을 재정의 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
 다음 <xref:System.Web.UI.WebControls.Login> 컨트롤 스타일 속성에 의해 재정의 됩니다 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 설정:  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 모양을 정의 하는 데 템플릿을 사용할 때의 <xref:System.Web.UI.WebControls.Login> 컨트롤을 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 속성이 적용 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 배경 및 텍스트의 색 속성을 설정 하 여 로그인 오류 텍스트 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 에 참조 된 개체는 <xref:System.Web.UI.WebControls.Login.FailureTextStyle%2A> 속성.  
  
 [!code-aspx-csharp[LoginLoginFailureText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginFailureText/CS/loginloginfailuretextcs.aspx#1)]
 [!code-aspx-vb[LoginLoginFailureText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginFailureText/VB/loginloginfailuretextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.FailureText" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="HelpPageIconUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.HelpPageIconUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpPageIconUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpPageIconUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpPageIconUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.HelpPageIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그인 도움말 페이지에 대한 링크 옆에 표시할 이미지의 위치를 가져옵니다.</summary>
        <value>표시할 이미지의 URL입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageUrl" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="HelpPageText">
      <MemberSignature Language="C#" Value="public virtual string HelpPageText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.HelpPageText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpPageText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpPageText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpPageText : string with get, set" Usage="System.Web.UI.WebControls.Login.HelpPageText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그인 도움말 페이지에 대한 링크의 텍스트를 가져오거나 설정합니다.</summary>
        <value>로그인 도움말 페이지에 대한 링크의 텍스트입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> 링크 텍스트는 사이트에 대 한 로그인 도움말 페이지를 포함 하는 속성입니다. 로그인 도움말 페이지의 url에 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> 속성입니다.  
  
 경우 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> 가 비어 있거나의 텍스트는 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> 속성 페이지에서 사용자에 게 표시 되지만 링크로 형식이 있습니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> 속성이 비어, 로그인 도움말 페이지의 링크를 사용자에 게 사용할 수 없습니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> 사이트의 로그인 도움말 페이지에 대 한 링크의 텍스트를 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[LoginHelpPageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginHelpPageText/CS/loginhelppagetextcs.aspx#1)]
 [!code-aspx-vb[LoginHelpPageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginHelpPageText/VB/loginhelppagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="HelpPageUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.HelpPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpPageUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.HelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그인 도움말 페이지의 URL을 가져오거나 설정합니다.</summary>
        <value>로그인 도움말 페이지의 URL입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> 속성 웹 사이트에 대 한 로그인 도움말 페이지의 URL을 포함 합니다. <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> 속성 링크에 사용 되는 텍스트를 포함 합니다.  
  
 하는 경우 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> 가 비어 있거나에서 텍스트를 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> 속성이 사용자에 게 표시 되지만 링크로 형식이 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Login.HelpPageText%2A> 속성이 비어, 로그인 도움말 페이지의 링크를 사용자에 게 사용할 수 없습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.HelpPageUrl%2A> 속성을 사이트의 로그인 도움말 페이지의 URL을 지정 합니다.  
  
 [!code-aspx-csharp[LoginHelpPageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginHelpPageText/CS/loginhelppagetextcs.aspx#1)]
 [!code-aspx-vb[LoginHelpPageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginHelpPageText/VB/loginhelppagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageText" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="HyperLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HyperLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HyperLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HyperLinkStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HyperLinkStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HyperLinkStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.HyperLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤에 표시되는 하이퍼링크의 모양을 정의하는 속성이 들어 있는 컬렉션에 대한 참조를 가져옵니다.</summary>
        <value>하이퍼링크의 모양을 정의하는 속성이 들어 있는 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> 속성에 있는 하이퍼링크의 모양을 정의 <xref:System.Web.UI.WebControls.Login> 제어 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 형식에서 선언적으로 이러한 속성을 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 의 속성을 나타냅니다 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 클래스 (예를 들어 `HyperLinkStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수 있습니다 `Property.Subproperty` (예를 들어 `HyperLinkStyle.ForeColor`).  
  
 일반 설정 사용자 지정 배경색, 텍스트 색 및 글꼴 속성을 포함 합니다. <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> 속성은 다음 속성의 모양을 정의 합니다.  
  
-   <xref:System.Web.UI.WebControls.Login.CreateUserText%2A>  
  
-   <xref:System.Web.UI.WebControls.Login.HelpPageText%2A>  
  
-   <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A>  
  
 에 대 한 스타일 설정을 합니다 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> 속성에 대 한 스타일 설정을 사용 하 여 병합 되는 <xref:System.Web.UI.WebControls.Login> 컨트롤. 모든 설정이 합니다 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> 속성의 속성에서 해당 설정을 재정의 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
 다음 <xref:System.Web.UI.WebControls.Login> 스타일 속성은 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> 설정:  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 모양을 정의 하는 데 템플릿을 사용할 때의 <xref:System.Web.UI.WebControls.Login> 컨트롤을 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> 속성이 적용 되지 않습니다.  
  
   
  
## Examples  
 하이퍼링크를 설정 하는 다음 코드 예제는 <xref:System.Web.UI.WebControls.Login> 컨트롤의 속성을 설정 하 여 녹색 기울임꼴 텍스트를 <xref:System.Web.UI.WebControls.TableItemStyle> 참조 하는 개체는 <xref:System.Web.UI.WebControls.Login.HyperLinkStyle%2A> 속성.  
  
 [!code-aspx-csharp[LoginHyperLinkStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginHyperLinkStyle/CS/loginhyperlinkstylecs.aspx#1)]
 [!code-aspx-vb[LoginHyperLinkStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginHyperLinkStyle/VB/loginhyperlinkstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.CreateUserUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HelpPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public virtual string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.Login.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자를 위한 로그인 지침 텍스트를 가져오거나 설정합니다.</summary>
        <value>사용자에게 표시할 로그인 지침 텍스트입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> 속성 웹 사이트에 로그인 하는 사용자에 대 한 지침을 포함 합니다. 이 텍스트는 <xref:System.Web.UI.WebControls.Login> 다음 제목이 제어 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> 속성이 <xref:System.String.Empty>, 명령 텍스트가 없는 사용자에 게 제공 됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> 속성에서 명령 텍스트를 삽입 하는 <xref:System.Web.UI.WebControls.Login> 컨트롤.  
  
 [!code-aspx-csharp[LoginInstructionText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginInstructionText/CS/logininstructiontextcs.aspx#1)]
 [!code-aspx-vb[LoginInstructionText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginInstructionText/VB/logininstructiontextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.InstructionTextStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="InstructionTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InstructionTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InstructionTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.InstructionTextStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstructionTextStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InstructionTextStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstructionTextStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.InstructionTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤의 지침 텍스트에 대한 설정을 정의하는 <see cref="T:System.Web.UI.WebControls.Login" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤 지침 텍스트의 스타일 설정이 포함된 <see cref="T:System.Web.UI.WebControls.Login" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> 속성은 명령 텍스트의 모양을 정의 <xref:System.Web.UI.WebControls.Login> 제어 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 형식에서 선언적으로 이러한 속성을 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 의 속성을 나타냅니다 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 클래스 (예를 들어 `InstructionTextStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수 있습니다 `Property.Subproperty` (예를 들어 `InstructionTextStyle.ForeColor`).  
  
 일반 설정 사용자 지정 배경색, 텍스트 색 및 글꼴 속성을 포함 합니다. 합니다 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> 속성의 모양을 정의 합니다 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> 속성입니다.  
  
 에 대 한 스타일 설정을 합니다 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> 속성에 대 한 스타일 설정을 사용 하 여 병합 되는 <xref:System.Web.UI.WebControls.Login> 컨트롤. 모든 설정이 합니다 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> 속성의 속성에서 해당 설정을 재정의 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
 다음 <xref:System.Web.UI.WebControls.Login> 스타일 속성은 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> 설정:  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 모양을 정의 하는 데 템플릿을 사용할 때의 <xref:System.Web.UI.WebControls.Login> 컨트롤을 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> 속성이 적용 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는의 속성을 설정 하 여 명령 텍스트 및 명령 텍스트의 배경색을 설정 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체에서 참조 하는 <xref:System.Web.UI.WebControls.Login.InstructionTextStyle%2A> 속성입니다.  
  
 [!code-aspx-csharp[LoginInstructionText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginInstructionText/CS/logininstructiontextcs.aspx#1)]
 [!code-aspx-vb[LoginInstructionText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginInstructionText/VB/logininstructiontextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle LabelStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle LabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LabelStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ LabelStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LabelStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.LabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤 레이블의 설정을 정의하는 <see cref="T:System.Web.UI.WebControls.Login" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤 레이블의 스타일 설정을 정의하는 <see cref="T:System.Web.UI.WebControls.Login" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> 속성에서 텍스트 상자 레이블의 모양을 정의 <xref:System.Web.UI.WebControls.Login> 제어 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 형식에서 선언적으로 이러한 속성을 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 의 속성을 나타냅니다 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 클래스 (예를 들어 `LabelStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수 있습니다 `Property.Subproperty` (예를 들어 `LabelStyle.ForeColor`).  
  
 일반 설정 사용자 지정 배경색, 텍스트 색 및 글꼴 속성을 포함 합니다. <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> 속성은 다음 속성의 모양을 정의 합니다.  
  
-   <xref:System.Web.UI.WebControls.Login.PasswordLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.Login.UserNameLabelText%2A>  
  
 에 대 한 스타일 설정을 합니다 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> 속성에 대 한 스타일 설정을 사용 하 여 병합 되는 <xref:System.Web.UI.WebControls.Login> 컨트롤. 모든 설정이 합니다 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> 속성의 속성에서 해당 설정을 재정의 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
 다음 <xref:System.Web.UI.WebControls.Login> 스타일 속성은 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> 설정:  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 모양을 정의 하는 데 템플릿을 사용할 때의 <xref:System.Web.UI.WebControls.Login> 컨트롤을 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> 속성이 적용 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서 기울임꼴 텍스트의 속성을 설정 하 여 파란색 상자 레이블의 텍스트를 설정 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 개체에서 참조 하는 <xref:System.Web.UI.WebControls.Login.LabelStyle%2A> 속성입니다.  
  
 [!code-aspx-csharp[LoginLabelStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLabelStyle/CS/loginlabelstylecs.aspx#1)]
 [!code-aspx-vb[LoginLabelStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLabelStyle/VB/loginlabelstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordLabelText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.UserNameLabelText" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LayoutTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LayoutTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LayoutTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LayoutTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LayoutTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ LayoutTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LayoutTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Login.LayoutTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Login))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤을 표시하는 데 사용되는 템플릿을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> 컨트롤을 표시하기 위한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.Login" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.LayoutTemplate%2A> 속성을 정의 하는 템플릿을 포함 하는 방법을 <xref:System.Web.UI.WebControls.Login> 컨트롤이 사용자에 게 표시 됩니다.  
  
 다음 표에 사용 되는 필수 및 선택적 컨트롤을 <xref:System.Web.UI.WebControls.Login> 컨트롤 템플릿.  
  
|ID 또는 명령 이름|컨트롤 형식|필수/옵션|  
|------------------------|------------------|------------------------|  
|`UserName`|구현 하는 모든 컨트롤 <xref:System.Web.UI.IEditableTextControl>등 <xref:System.Web.UI.WebControls.TextBox>, 또는 사용자 지정 또는 타사 컨트롤입니다.|필수|  
|`Password`|구현 하는 모든 컨트롤 <xref:System.Web.UI.IEditableTextControl>등 <xref:System.Web.UI.WebControls.TextBox>, 또는 사용자 지정 또는 타사 컨트롤입니다.|필수|  
|`RememberMe`|<xref:System.Web.UI.WebControls.CheckBox>|Optional|  
|`FailureText`|구현 하는 모든 컨트롤 <xref:System.Web.UI.ITextControl>합니다.|Optional|  
|`Login`|버블링 이벤트를 발생 시키는 모든 컨트롤입니다.|Optional|  
  
 <xref:System.Web.UI.WebControls.Login> throw 제어는 <xref:System.Web.HttpException> 레이아웃 템플릿에 필요한 컨트롤을 포함 하지 않은 경우 예외입니다. 예외가 throw 되지 않습니다; 잘못 된 형식의 컨트롤에 선택적 컨트롤 ID를 제공 하는 경우 그러나 컨트롤은 이후에 무시는 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
 Login 컨트롤 같은 이벤트 버블링을 발생 시키는 모든 컨트롤 수 <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.LinkButton>, 또는 <xref:System.Web.UI.WebControls.ImageButton>합니다. 컨트롤의 명령 이름 속성을 "로그인"으로 설정 되어야 합니다.  
  
 템플릿을 사용 하는 경우는 <xref:System.Web.UI.WebControls.Login> 다음 속성을 컨트롤의 동작에 영향을 줄만 제어 합니다.  
  
-   상속 된 모든 속성 <xref:System.Web.UI.WebControls.WebControl>합니다. (자세한 내용은 참조는 <xref:System.Web.UI.WebControls.Login> 컨트롤 멤버 테이블입니다.)  
  
-   <xref:System.Web.UI.WebControls.Login.DestinationPageUrl%2A>.  
  
-   <xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A>.  
  
-   <xref:System.Web.UI.WebControls.Login.LayoutTemplate%2A>.  
  
-   <xref:System.Web.UI.WebControls.Login.FailureAction%2A>.  
  
-   <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A>.  
  
-   <xref:System.Web.UI.WebControls.Login.Password%2A>.  
  
-   <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A>.  
  
-   <xref:System.Web.UI.WebControls.Login.UserName%2A>.  
  
 서식 파일에 대 한 설정 된 경우 다른 모든 속성은 사용 하지는 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 템플릿을 만듭니다는 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[LoginLayoutTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLayoutTemplate/CS/loginlayouttemplatecs.aspx#1)]
 [!code-aspx-vb[LoginLayoutTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLayoutTemplate/VB/loginlayouttemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="login.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">복원할 컨트롤 상태를 나타내는 개체입니다.</param>
        <summary><see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> 메서드로 저장한 이전 요청에서 뷰 상태 정보를 복원합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" />은 유효한 <see cref="P:System.Web.UI.PageStatePersister.ViewState" />이 아닙니다.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoggedIn">
      <MemberSignature Language="C#" Value="public event EventHandler LoggedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoggedIn" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Login.LoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoggedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoggedIn;" />
      <MemberSignature Language="F#" Value="member this.LoggedIn : EventHandler " Usage="member this.LoggedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 웹 사이트에 로그인하여 인증된 경우에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.LoggedIn> 인증 공급자 사용자의 자격 증명을 확인 하 고 인증 쿠키는 다음 응답에서 브라우저를 보낼 큐에 대기 후 이벤트가 발생 합니다. 사용 된 <xref:System.Web.UI.WebControls.Login.LoggedIn> 같은 사용자별 데이터 액세스, 사용자가 인증 된 후 추가 처리를 제공 하는 이벤트입니다.  
  
 사용자가 자신의 로그인 정보를 전송 하는 경우는 <xref:System.Web.UI.WebControls.Login> 첫 번째 발생을 제어를 <xref:System.Web.UI.WebControls.Login.LoggingIn> 이벤트를 해당 <xref:System.Web.UI.WebControls.Login.Authenticate> 이벤트를 마지막으로 <xref:System.Web.UI.WebControls.Login.LoggedIn> 이벤트.  
  
> [!NOTE]
>  사용자가 사용 하는 경우는 <xref:System.Web.UI.WebControls.Login> 웹 사이트로 로그인 컨트롤, 보기 상태에서 모든 데이터 및 모든 게시물 데이터 손실 됩니다. 작업을 수행 하지 않습니다는 <xref:System.Web.UI.WebControls.Login.LoggedIn> 뷰 상태에 의존 하는 이벤트입니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.LoggedIn> 사용자 로그인에 대 한 기록을 유지 하는 사이트별 메서드를 호출 하는 이벤트입니다.  
  
 [!code-aspx-csharp[LoginAfterLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginAfterLogin/CS/loginafterlogincs.aspx#1)]
 [!code-aspx-vb[LoginAfterLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginAfterLogin/VB/loginafterloginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LoggingIn">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.LoginCancelEventHandler LoggingIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.LoginCancelEventHandler LoggingIn" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Login.LoggingIn" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoggingIn As LoginCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::LoginCancelEventHandler ^ LoggingIn;" />
      <MemberSignature Language="F#" Value="member this.LoggingIn : System.Web.UI.WebControls.LoginCancelEventHandler " Usage="member this.LoggingIn : System.Web.UI.WebControls.LoginCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 로그인 정보를 전송한 후 인증이 수행되기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.LoggingIn> 되었으나 사용자가 웹 사이트에서 인증 사용자가 로그인 정보를 전송할 때 이벤트가 발생 합니다. 사용 된 <xref:System.Web.UI.WebControls.Login.LoggingIn> 사용자를 인증 하기 전에 필요한 모든 정보를 설정 하는 이벤트입니다.  
  
 하는 동안 로그인 시도 취소할 수 있습니다는 <xref:System.Web.UI.WebControls.Login.LoggingIn> 설정 하 여 이벤트를 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.ComponentModel.CancelEventArgs> 개체를 `true`입니다.  
  
 후는 <xref:System.Web.UI.WebControls.Login.LoggingIn> 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.Login> 를 발생 시킵니다를 <xref:System.Web.UI.WebControls.Login.Authenticate> 이벤트 차례로 <xref:System.Web.UI.WebControls.Login.LoggedIn> 이벤트입니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.UI.WebControls.Login.LoggingIn> 사용자가 올바른 형식의 전자 메일 주소를 입력 했는지 확인 하는 이벤트를 <xref:System.Web.UI.WebControls.Login.UserName%2A> 속성입니다. 그렇지 않은 경우, <xref:System.Web.UI.WebControls.Login.LoggingIn> 이벤트가 로그인 시도 취소 하 고 사용 하 여 오류 메시지를 표시 합니다 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> 속성입니다.  
  
 [!code-aspx-csharp[LoginBeforeLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginBeforeLogin/CS/loginbeforelogincs.aspx#1)]
 [!code-aspx-vb[LoginBeforeLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginBeforeLogin/VB/loginbeforeloginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonCommandName">
      <MemberSignature Language="C#" Value="public static readonly string LoginButtonCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string LoginButtonCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Login.LoginButtonCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LoginButtonCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ LoginButtonCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable LoginButtonCommandName : string" Usage="System.Web.UI.WebControls.Login.LoginButtonCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그인 단추와 관련된 명령 이름을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.LoginButtonCommandName> 읽기 전용 필드 이며 기본값은 "로그인"입니다. 이 값이 전달는 <xref:System.Web.UI.WebControls.Login.OnBubbleEvent%2A>, 현재 사용자를 로그인 하려고 컨트롤 값 "로그인" 인 경우.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string LoginButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoginButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LoginButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoginButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LoginButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoginButtonImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.LoginButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그인 단추에 사용할 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>로그인 단추에 사용되는 이미지의 URL입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.LoginButtonImageUrl%2A> 속성으로 렌더링 되는 이미지의 URL을 포함 합니다 <xref:System.Web.UI.WebControls.Login> 때 제어 로그인 단추를 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 속성 <xref:System.Web.UI.WebControls.ButtonType.Image>.  
  
 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 속성은 이미지를 표시 하지 않는 브라우저에서 이미지에 대 한 대체 텍스트로 사용 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.LoginButtonImageUrl%2A> 속성을 이미지의 URL입니다.  
  
 [!code-aspx-csharp[LoginSubmitButtonImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginSubmitButtonImageUrl/CS/loginsubmitbuttonimageurlcs.aspx#1)]
 [!code-aspx-vb[LoginSubmitButtonImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginSubmitButtonImageUrl/VB/loginsubmitbuttonimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style LoginButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style LoginButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LoginButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoginButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ LoginButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoginButtonStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Login.LoginButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Style" /> 컨트롤에 있는 로그인 단추의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.Login" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>로그인 단추의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.Style" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> 에 로그인 단추의 모양을 제어 하는 속성을 <xref:System.Web.UI.WebControls.Login> 컨트롤입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.Style> 개체를 반환 합니다. 형식에서 선언적으로 이러한 속성을 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 의 속성을 나타냅니다 합니다 <xref:System.Web.UI.WebControls.Style> 클래스 (예를 들어 `LoginButtonStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수 있습니다 `Property.Subproperty` (예를 들어 `LoginButtonStyle.ForeColor`).  
  
 일반 설정 사용자 지정 배경색, 텍스트 색 및 글꼴 속성을 포함 합니다. <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> 로그인 단추의 모양을 정의 합니다.  
  
 에 대 한 스타일 설정을 합니다 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> 속성에 대 한 스타일 설정을 사용 하 여 병합 되는 <xref:System.Web.UI.WebControls.Login> 컨트롤. 모든 설정이 합니다 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> 속성의 속성에서 해당 설정을 재정의 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
 다음 <xref:System.Web.UI.WebControls.Login> 스타일 속성은 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> 설정:  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 모양을 정의 하는 데 템플릿을 사용할 때의 <xref:System.Web.UI.WebControls.Login> 컨트롤을 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> 속성이 적용 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.UI.WebControls.Login.LoginButtonStyle%2A> 의 모양을 정의 하는 속성을 <xref:System.Web.UI.WebControls.Login> 로그인 단추 컨트롤입니다.  
  
 [!code-aspx-csharp[LoginButtonStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginButtonStyle/CS/loginbuttonstylecs.aspx#1)]
 [!code-aspx-vb[LoginButtonStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginButtonStyle/VB/loginbuttonstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonText">
      <MemberSignature Language="C#" Value="public virtual string LoginButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoginButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LoginButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoginButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LoginButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoginButtonText : string with get, set" Usage="System.Web.UI.WebControls.Login.LoginButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤의 로그인 단추에 표시되는 텍스트를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤의 로그인 단추에 사용되는 텍스트입니다. 기본값은 "로그인"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 속성에 대해 표시 되는 텍스트를 포함 합니다 <xref:System.Web.UI.WebControls.Login> 컨트롤의 로그인 단추입니다. 값에 따라 합니다 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 속성을 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 속성 링크의 텍스트 또는 이미지 렌더링 되지 않는 브라우저에서 이미지를 대신 표시 되는 텍스트 텍스트를 단추에 표시 될 수 있습니다. 다음 표에서 어떻게 서로 다른 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 값에 영향을 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 속성입니다.  
  
|<xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 설정|방법을 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 속성을 사용 합니다.|  
|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Web.UI.WebControls.ButtonType.Button>|단추의 `Text` 속성입니다.|  
|<xref:System.Web.UI.WebControls.ButtonType.Image>|이미지에 대 한 대체 텍스트입니다.|  
|<xref:System.Web.UI.WebControls.ButtonType.Link>|링크 텍스트입니다.|  
  
 컨트롤의 기본 텍스트는 서버의 현재 로캘을 기반으로 지역화됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 어떻게의 텍스트를 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 속성의 값은 영향을 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 속성입니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[LoginButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginButtonType/CS/loginbuttontypecs.aspx#1)]
 [!code-aspx-vb[LoginButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginButtonType/VB/loginbuttontypevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LoginButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType LoginButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType LoginButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.LoginButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoginButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType LoginButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberSignature Language="F#" Value="member this.LoginButtonType : System.Web.UI.WebControls.ButtonType with get, set" Usage="System.Web.UI.WebControls.Login.LoginButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 단추를 렌더링할 때 사용할 단추의 종류를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonType" /> 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.ButtonType.Button" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 속성에 사용할 단추의 종류를 결정 합니다 <xref:System.Web.UI.WebControls.Login> 컨트롤의 로그인 단추입니다. 다음 표에서 여러 가지 단추 종류를 설명합니다.  
  
|<xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 설정|렌더링 된 단추의 형식|  
|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  
|<xref:System.Web.UI.WebControls.ButtonType.Button>|에 지정 된 텍스트를 사용 하 여 HTML 단추는 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 속성입니다.|  
|<xref:System.Web.UI.WebControls.ButtonType.Image>|이미지입니다. 이미지의 url에 <xref:System.Web.UI.WebControls.Login.LoginButtonImageUrl%2A> 속성입니다. 에 지정 된 문자열을 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 속성 이미지에 대 한 대체 텍스트로 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.ButtonType.Link>|에 지정 된 텍스트를 사용 하 여 HTML 링크를 <xref:System.Web.UI.WebControls.Login.LoginButtonText%2A> 속성입니다.|  
  
 경우는 <xref:System.Web.UI.WebControls.Login.LoginButtonType%2A> 속성이 <xref:System.Web.UI.WebControls.ButtonType.Button> 또는 <xref:System.Web.UI.WebControls.ButtonType.Link>의 콘텐츠는 <xref:System.Web.UI.WebControls.Login.LoginButtonImageUrl%2A> 속성은 무시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 로그인 단추에 사용할 수 있는 다양 한 유형의 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[LoginButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginButtonType/CS/loginbuttontypecs.aspx#1)]
 [!code-aspx-vb[LoginButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginButtonType/VB/loginbuttontypevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.Login.LoginButtonType" /> 속성이 올바른 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 열거형 값으로 설정되지 않은 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LoginError">
      <MemberSignature Language="C#" Value="public event EventHandler LoginError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoginError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Login.LoginError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoginError As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoginError;" />
      <MemberSignature Language="F#" Value="member this.LoginError : EventHandler " Usage="member this.LoginError : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그인 오류가 발견될 경우 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.LoginError> 이벤트는 사용자가 입력 한 자격 증명이 올바르지 않습니다. 사용할 수는 <xref:System.Web.UI.WebControls.Login.LoginError> 이벤트 추가 도움말을 제공 하거나 실패 한 로그인 시도 기록할 사용자 지정 오류 페이지에는 사용자를 리디렉션합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.LoginError> 로그인 시도가 실패할 때 사용자에 게 도움말 링크를 표시 하는 이벤트입니다.  
  
 [!code-aspx-csharp[LoginLoginError#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginError/CS/loginloginerrorcs.aspx#1)]
 [!code-aspx-vb[LoginLoginError#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginError/VB/loginloginerrorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public virtual string MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MembershipProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.MembershipProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MembershipProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MembershipProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MembershipProvider : string with get, set" Usage="System.Web.UI.WebControls.Login.MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에서 사용하는 멤버 자격 데이터 공급자의 이름을 가져오거나 설정합니다.</summary>
        <value>컨트롤에서 사용하는 멤버 자격 데이터 공급자의 이름입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> 속성에 대 한 인증 정보를 제공 하는 데이터 공급자의 이름을 포함 합니다 <xref:System.Web.UI.WebControls.Login> 제어 합니다. 잘못 된 멤버 자격 공급자 이름에 정의 된는 `<membership>` 응용 프로그램의 Machine.config 또는 Web.config 파일의 요소입니다.  
  
 설정 하지 않으면 경우는 <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> 속성을 항상 반환 <xref:System.String.Empty>합니다.  
  
 자세한 내용은 <xref:System.Web.Security.Membership> 클래스를 참조하세요.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticate">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticate (System.Web.UI.WebControls.AuthenticateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticate(class System.Web.UI.WebControls.AuthenticateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticate (e As AuthenticateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticate(System::Web::UI::WebControls::AuthenticateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticate : System.Web.UI.WebControls.AuthenticateEventArgs -&gt; unit&#xA;override this.OnAuthenticate : System.Web.UI.WebControls.AuthenticateEventArgs -&gt; unit" Usage="login.OnAuthenticate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.AuthenticateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.AuthenticateEventArgs" />입니다.</param>
        <summary>사용자를 인증하기 위해 <see cref="E:System.Web.UI.WebControls.Login.Authenticate" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.OnAuthenticate%2A> 메서드는 <xref:System.Web.UI.WebControls.Login.Authenticate> 이벤트를 발생시킵니다. 사용 된 <xref:System.Web.UI.WebControls.Login.Authenticate> 사용자 지정 인증 체계를 구현 하는 이벤트입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.Login.OnAuthenticate%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.Authenticate> 사이트별 사용자 지정 인증 코드를 호출 하는 이벤트입니다.  
  
 [!code-aspx-csharp[LoginOnAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginOnAuthenticate/CS/loginonauthenticatecs.aspx#1)]
 [!code-aspx-vb[LoginOnAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginOnAuthenticate/VB/loginonauthenticatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Login.OnAuthenticate(System.Web.UI.WebControls.AuthenticateEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="login.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">이벤트 소스입니다.</param>
        <param name="e">이벤트에 대한 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>이벤트를 페이지의 UI(사용자 인터페이스) 서버 컨트롤 계층 구조의 위로 전달하는지 여부를 확인합니다.</summary>
        <returns>이벤트가 취소되었으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다. 기본값은 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.OnBubbleEvent%2A> 메서드 구현 된 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> 페이지 계층에 자식 컨트롤의 이벤트를 전달 하는 방법입니다.  
  
 현재 이벤트를 게시 하는 경우는 <xref:System.Web.UI.WebControls.Login> 로그인 단추 컨트롤을 <xref:System.Web.UI.WebControls.Login> 컨트롤을 웹 사이트에 로그인 하려고 합니다. 그렇지 않은 경우 이벤트는 페이지 컨트롤 계층 구조로 전달 됩니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Login.OnBubbleEvent(System.Object,System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Login.OnBubbleEvent(System.Object,System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoggedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnLoggedIn (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoggedIn(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnLoggedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoggedIn (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoggedIn(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoggedIn : EventArgs -&gt; unit&#xA;override this.OnLoggedIn : EventArgs -&gt; unit" Usage="login.OnLoggedIn e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>사용자가 웹 사이트에 로그인하여 인증되면 <see cref="E:System.Web.UI.WebControls.Login.LoggedIn" /> 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.OnLoggedIn%2A> 메서드는 <xref:System.Web.UI.WebControls.Login.LoggedIn> 이벤트를 발생시킵니다. 사용 된 <xref:System.Web.UI.WebControls.Login.LoggedIn> 같은 사용자별 데이터 액세스, 사용자가 인증 된 후 추가 처리를 제공 하는 이벤트입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.Login.OnLoggedIn%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.LoggedIn> 사용자 로그인에 대 한 기록을 유지 하는 사이트별 메서드를 호출 하는 이벤트입니다.  
  
 [!code-aspx-csharp[LoginOnAfterLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginOnAfterLogin/CS/loginonafterlogincs.aspx#1)]
 [!code-aspx-vb[LoginOnAfterLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginOnAfterLogin/VB/loginonafterloginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Login.OnLoggedIn(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Login.OnLoggedIn(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoggingIn">
      <MemberSignature Language="C#" Value="protected virtual void OnLoggingIn (System.Web.UI.WebControls.LoginCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoggingIn(class System.Web.UI.WebControls.LoginCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnLoggingIn(System.Web.UI.WebControls.LoginCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoggingIn (e As LoginCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoggingIn(System::Web::UI::WebControls::LoginCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoggingIn : System.Web.UI.WebControls.LoginCancelEventArgs -&gt; unit&#xA;override this.OnLoggingIn : System.Web.UI.WebControls.LoginCancelEventArgs -&gt; unit" Usage="login.OnLoggingIn e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LoginCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.LoginCancelEventArgs" />입니다.</param>
        <summary>사용자가 로그인 정보를 전송한 후 인증이 수행되기 전에 <see cref="E:System.Web.UI.WebControls.Login.LoggingIn" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.OnLoggingIn%2A> 메서드는 <xref:System.Web.UI.WebControls.Login.LoggingIn> 이벤트를 발생시킵니다. 사용 하 여는 <xref:System.Web.UI.WebControls.Login.LoggingIn> 이벤트 전에 사용자를 인증 해야 하는 처리를 수행 하거나 사용자 지정 유효성 검사를 수행 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.Login.OnLoggingIn%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.UI.WebControls.Login.LoggingIn> 사용자가 올바른 형식의 전자 메일 주소를 입력 했는지 확인 하는 이벤트를 <xref:System.Web.UI.WebControls.Login.UserName%2A> 속성입니다. 그렇지 않은 경우, <xref:System.Web.UI.WebControls.Login.LoggingIn> 로그인 시도 취소 하 고에 지정 된 오류 메시지를 표시 하는 이벤트 처리기는 <xref:System.Web.UI.WebControls.Login.InstructionText%2A> 속성입니다.  
  
 [!code-aspx-csharp[LoginOnBeforeLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginOnBeforeLogin/CS/loginonbeforelogincs.aspx#1)]
 [!code-aspx-vb[LoginOnBeforeLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginOnBeforeLogin/VB/loginonbeforeloginvb.aspx#1)]  
  
 다음 코드 예제에서는 확장 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Login> 제어 합니다. 합니다 `CustomLogin` 컨트롤에는 <xref:System.Web.UI.WebControls.DropDownList> 수 있는 컨트롤이 사용 하 여 인증 하는 멤버 자격 공급자를 선택 합니다. (이러한 공급자는 Web.config에 구성 됩니다.) 에 <xref:System.Web.UI.WebControls.Login.OnLoggingIn%2A> 메서드를를 <xref:System.Web.UI.WebControls.Login.MembershipProvider%2A> 의 선택된 된 값이 속성은 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-csharp[Samples.AspNet.Controls.CustomLogin#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Controls.CustomLogin/CS/FarmasLogin.cs#1)]
 [!code-vb[Samples.AspNet.Controls.CustomLogin#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Controls.CustomLogin/VB/FarmasLogin.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Login.OnLoggingIn(System.Web.UI.WebControls.LoginCancelEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Login.OnLoggingIn(System.Web.UI.WebControls.LoginCancelEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoginError">
      <MemberSignature Language="C#" Value="protected virtual void OnLoginError (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoginError(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoginError (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoginError(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoginError : EventArgs -&gt; unit&#xA;override this.OnLoginError : EventArgs -&gt; unit" Usage="login.OnLoginError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>로그인에 실패할 경우 <see cref="E:System.Web.UI.WebControls.Login.LoginError" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.OnLoginError%2A> 메서드는 <xref:System.Web.UI.WebControls.Login.LoginError> 이벤트를 발생시킵니다. 사용 된 <xref:System.Web.UI.WebControls.Login.LoginError> 사용자의 로그인 시도가 실패할 때 오류 로깅 등의 추가적인 처리를 제공 하는 이벤트입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.Login.OnLoginError%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.LoginError> 로그인 시도가 실패할 때 사용자에 게 도움말 링크를 표시 하는 이벤트입니다.  
  
 [!code-aspx-csharp[LoginOnLoginError#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginOnLoginError/CS/loginonloginerrorcs.aspx#1)]
 [!code-aspx-vb[LoginOnLoginError#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginOnLoginError/VB/loginonloginerrorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Login.OnLoginError(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="login.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>기본 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> 메서드를 구현합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.OnPreRender%2A> 메서드 구현 합니다 <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType> 에 알리기 위해 메서드를 <xref:System.Web.UI.WebControls.Login> 렌더링 콘텐츠와 뷰 상태를 저장 하기 전에 필요한 모든 사전 렌더링 단계를 수행 하는 컨트롤입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.Login.OnPreRender%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Login.OnPreRender(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Login.OnPreRender(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Orientation Orientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Web.UI.WebControls.Orientation with get, set" Usage="System.Web.UI.WebControls.Login.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤 요소의 페이지 내 위치를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Orientation" /> 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.Orientation.Vertical" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.Orientation%2A> 속성을 표시할지 여부를 결정 합니다 <xref:System.Web.UI.WebControls.Login> 를 세로 형태로 컨트롤를 <xref:System.Web.UI.WebControls.Login.UserName%2A> 위의 텍스트 입력 필드를 <xref:System.Web.UI.WebControls.Login.Password%2A> 텍스트 입력 필드 또는 행 형식으로 사용 하 여를 <xref:System.Web.UI.WebControls.Login.UserName%2A> 텍스트 입력 필드 다음에 <xref:System.Web.UI.WebControls.Login.Password%2A> 텍스트 입력 필드입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Web.UI.WebControls.Login.Orientation%2A> 속성입니다.  
  
 [!code-aspx-csharp[LoginLoginLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLoginLayout/CS/loginloginlayoutcs.aspx#1)]
 [!code-aspx-vb[LoginLoginLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLoginLayout/VB/loginloginlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.Login.Orientation" /> 속성이 올바른 <see cref="T:System.Web.UI.WebControls.Orientation" /> 열거형 값으로 설정되지 않은 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public virtual string Password { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.Password" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Password { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Password : string" Usage="System.Web.UI.WebControls.Login.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 입력한 암호를 가져옵니다.</summary>
        <value>사용자가 입력한 암호입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.Password%2A> 속성에 사용자가 입력 한 암호가 포함 되어 있습니다. 암호는 일반 텍스트입니다. 자세한 내용은 [웹 응용 프로그램에 대 한 기본 보안 사례](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)합니다.  
  
> [!NOTE]
>  조작 하는 경우는 <xref:System.Web.UI.WebControls.Login.UserName%2A> 또는 <xref:System.Web.UI.WebControls.Login.Password%2A> 속성을 프로그래밍 방식으로 반드시 페이지 수명 주기의 올바른 시점에 작업을 수행 합니다. 값 <xref:System.Web.UI.WebControls.Login.UserName%2A> 및 <xref:System.Web.UI.WebControls.Login.Password%2A> 하는 동안 사용할 수 없는 합니다 `Page_Load` 중 되지만 단계는 `Pre_Render` 단계입니다.  
  
 <xref:System.Web.UI.WebControls.Login> 같은 입력란에서 표시 하는 속성을 제어할 <xref:System.Web.UI.WebControls.Login.UserName%2A> 및 <xref:System.Web.UI.WebControls.Login.Password%2A>, 페이지 수명 주기의 모든 단계 동안 액세스할 수 있습니다. 컨트롤을 이용 하 여 최종 사용자가 변경한 모든 내용을 선택 된 <xref:System.Web.UI.WebControls.TextBox.TextChanged> 된 텍스트 상자에 의해 트리거되는 이벤트입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 전달 된 <xref:System.Web.UI.WebControls.Login.Password%2A> 속성 사용자 지정 인증 방법입니다.  
  
 [!code-aspx-csharp[LoginAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginAuthenticate/CS/loginauthenticatecs.aspx#1)]
 [!code-aspx-vb[LoginAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginAuthenticate/VB/loginauthenticatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string PasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordLabelText : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.Login.Password" /> 텍스트 상자의 레이블 텍스트를 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Web.UI.WebControls.Login.Password" /> 텍스트 상자의 레이블 텍스트입니다. 기본값은 "암호:"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.PasswordLabelText%2A> 속성에 대 한 레이블 텍스트를 포함 합니다 <xref:System.Web.UI.WebControls.Login.Password%2A> 입력란입니다.  
  
 <xref:System.Web.UI.WebControls.Login.TextLayout%2A> 속성 필드 레이블의 위치를 정의 합니다.  
  
 컨트롤의 기본 텍스트는 서버의 현재 로캘을 기반으로 지역화됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.PasswordLabelText%2A> 속성을 "사용자 암호:".  
  
 [!code-aspx-csharp[LoginLabelText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLabelText/CS/loginlabeltextcs.aspx#1)]
 [!code-aspx-vb[LoginLabelText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLabelText/VB/loginlabeltextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryIconUrl">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordRecoveryIconUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordRecoveryIconUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordRecoveryIconUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>암호 복구 페이지에 대한 링크 옆에 표시할 이미지의 위치를 가져옵니다.</summary>
        <value>표시할 이미지의 URL입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
        <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryText">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordRecoveryText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordRecoveryText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordRecoveryText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordRecoveryText : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordRecoveryText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>암호 복구 페이지에 대한 링크의 텍스트를 가져오거나 설정합니다.</summary>
        <value>암호 복구 페이지에 대한 링크의 텍스트입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 속성 사이트에 대 한 암호 복구 페이지에 대 한 링크의 텍스트를 포함 합니다. 암호 복구 페이지의 url에 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> 속성입니다.  
  
 경우 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> 가 비어 있거나, 텍스트를 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 속성이 사용자에 게 표시 되지만 링크로 형식이 있습니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 속성이 비어, 암호 복구 페이지의 링크를 사용자에 게 사용할 수 없습니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 사이트의 암호 복구 페이지에 대 한 링크의 텍스트를 지정 하는 속성입니다. 로그인 폼을 표시 하는 예제를 가져오거나 설정 합니다 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> 및 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 속성. 사용자가 "암호 잊음"을 클릭 하면 getPass.aspx 페이지가 표시 됩니다.  
  
 [!code-aspx-csharp[LoginPasswordRecoveryText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginPasswordRecoveryText/CS/loginpasswordrecoverytextcs.aspx#1)]
 [!code-aspx-vb[LoginPasswordRecoveryText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginPasswordRecoveryText/VB/loginpasswordrecoverytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
        <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryUrl">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordRecoveryUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordRecoveryUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordRecoveryUrl : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>암호 복구 페이지의 URL을 가져오거나 설정합니다.</summary>
        <value>암호 복구 페이지의 URL입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> 속성 웹 사이트에 대 한 암호 복구 페이지의 URL을 포함 합니다. <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 속성 링크에 사용 되는 텍스트를 포함 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 속성이 비어, 암호 복구 페이지의 링크를 사용자에 게 사용할 수 없습니다.  
  
   
  
## Examples  
 다음 예제 코드를 사용 하는 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> 속성을 사이트의 암호 복구 페이지의 URL을 지정 합니다. 로그인 폼을 표시 하는 예제를 가져오거나 설정 합니다 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryUrl%2A> 및 <xref:System.Web.UI.WebControls.Login.PasswordRecoveryText%2A> 속성. 사용자가 "암호 잊음"을 클릭 하면 getPass.aspx 페이지가 표시 됩니다.  
  
 [!code-aspx-csharp[LoginPasswordRecoveryText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginPasswordRecoveryText/CS/loginpasswordrecoverytextcs.aspx#1)]
 [!code-aspx-vb[LoginPasswordRecoveryText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginPasswordRecoveryText/VB/loginpasswordrecoverytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryText" />
        <altmember cref="P:System.Web.UI.WebControls.Login.PasswordRecoveryUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Login.HyperLinkStyle" />
        <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string PasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PasswordRequiredErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordRequiredErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordRequiredErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>암호 필드가 비어 있을 경우 <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> 컨트롤에 표시할 오류 메시지를 가져오거나 설정합니다.</summary>
        <value>암호 필드가 비어 있을 경우 <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> 컨트롤에 표시할 오류 메시지입니다. 기본값은 "암호."입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A> 에 표시 된 오류 메시지를 포함 하는 속성을 <xref:System.Web.UI.WebControls.ValidationSummary> 로그인 페이지에 컨트롤입니다.  
  
 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A> 속성 값은 다음 조건 모두에 해당할 경우에 표시 됩니다.  
  
-   <xref:System.Web.UI.WebControls.ValidationSummary> 컨트롤이 페이지에 있는 경우.  
  
-   사용자가 암호 텍스트 상자를 비어 있습니다.  
  
 속성에 대 한 기본 텍스트는 서버의 현재 로캘을 기반으로 지역화 됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
 모두를 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A> 하 고 <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> 값 유효성 검사 그룹 내에 래핑됩니다는 <xref:System.Web.UI.WebControls.Login> 컨트롤. 이러한 값을 표시 하려면를 <xref:System.Web.UI.WebControls.ValidationSummary.ValidationGroup%2A> 의 속성을 <xref:System.Web.UI.WebControls.ValidationSummary> 제어 설정 해야 합니다는 <xref:System.Web.UI.Control.ID%2A> 의 속성을 <xref:System.Web.UI.WebControls.Login> 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.ValidationSummary> 컨트롤에 지정 된 오류 메시지를 표시 하는 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A> 속성입니다.  
  
 [!code-aspx-csharp[LoginRequiredErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginRequiredErrorMessage/CS/loginrequirederrormessagecs.aspx#1)]
 [!code-aspx-vb[LoginRequiredErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginRequiredErrorMessage/VB/loginrequirederrormessagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="RememberMeSet">
      <MemberSignature Language="C#" Value="public virtual bool RememberMeSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RememberMeSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.RememberMeSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RememberMeSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RememberMeSet { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RememberMeSet : bool with get, set" Usage="System.Web.UI.WebControls.Login.RememberMeSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자의 브라우저에 영구 인증 쿠키를 보낼지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>영구 인증 쿠키를 보내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 속성은 `true`, 사용자의 컴퓨터에 전송 하는 인증 쿠키 하므로 사용자는 다음 웹 사이트를 방문 하면 사용할 영구 쿠키를 50 년 후에 만료 되도록 설정 됩니다. 인증 쿠키는 사용자의 컴퓨터에 없으므로 사용자 고려 되는 이미 인증 된 및 웹 사이트에 다시 로그인 해야 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 속성은 `true`는 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 속성은 사용자에 게 표시 확인란의 값으로 설정 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 속성은 `false`, 이름 및 암호 저장 확인란 페이지에 표시 되지 않으며 사용자에 게 인증 쿠키를 저장할지 여부를 제어할 수 없습니다. 경우는 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 속성은 `true`, 사용자의 브라우저로 전송 인증 쿠키가 영구 쿠키 됩니다.  
  
 사용 하 여 웹 사이트에서 사용자가 로그온 하는 경우는 <xref:System.Web.UI.WebControls.LoginStatus> 제어 사용자의 컴퓨터에서 영구 쿠키가 지워지고 및 사용자가 다음에 방문할에 사이트에 로그인 해야 합니다.  
  
> [!NOTE]
>  사용자의 브라우저에서 영구 인증 쿠키를 설정 된 경우 보안 위험이 있습니다. 이러한 보안 위험을 사이트에 허용 되는지 여부를 결정 합니다. 설정 하는 경우는 <xref:System.Web.UI.WebControls.Login.RememberMeSet%2A> 속성을 `true` 하며 <xref:System.Web.UI.WebControls.Login.DisplayRememberMe%2A> 속성을 `false`, 인터넷 카페 예를 들어, 실수로 두어도 영구 인증 쿠키 뒤와 같이 공용 브라우저에서 웹 사이트를 방문 하는 사용자 및 브라우저의 다음 사용자는 이전 사용자의 자격 증명을 사용 하 여 웹 사이트를 액세스할 수 없게 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.DisplayRememberMe" />
        <altmember cref="P:System.Web.UI.WebControls.Login.RememberMeText" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="RememberMeText">
      <MemberSignature Language="C#" Value="public virtual string RememberMeText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RememberMeText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.RememberMeText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RememberMeText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RememberMeText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RememberMeText : string with get, set" Usage="System.Web.UI.WebControls.Login.RememberMeText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 이름 및 암호 저장 확인란의 레이블 텍스트를 가져오거나 설정합니다.</summary>
        <value>사용자 이름 및 암호 저장 확인란의 레이블 텍스트입니다. 기본값은 "사용자 이름 및 암호 저장."입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.RememberMeText%2A> 암호 저장에 대 한 레이블 텍스트를 포함 하는 속성 <xref:System.Web.UI.WebControls.CheckBox> 제어 합니다.  
  
 속성에 대 한 기본 텍스트는 서버의 현재 로캘을 기반으로 지역화 됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="login.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML 작성기입니다.</param>
        <summary>지정된 HTML 작성기를 사용하여 로그인 형식을 렌더링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderOuterTable : bool with get, set" Usage="System.Web.UI.WebControls.Login.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IRenderOuterTableControl.RenderOuterTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인라인 스타일을 적용하기 위해 컨트롤의 <see langword="table" /> 요소에 렌더링된 HTML이 포함되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>컨트롤의 <see langword="true" /> 요소에 렌더링된 HTML이 포함되어 있으면 <see langword="table" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 같은 인라인 스타일 속성을 확인 하기 위해 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> 컨트롤에 대 한 렌더링 되는 모든 HTML에 적용 되 고 ASP.NET에 렌더링 된 HTML이 포함 된 `table` 요소입니다. 외부 하지 않을 경우 `table` 이 속성을 설정 하는 요소를 렌더링할 `false`합니다. 이 경우 인라인 전체 컨트롤에 적용 되는 스타일 속성을 설정 하려고 하면 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="login.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> 메서드를 호출한 후 수정된 모든 상태를 저장합니다.</summary>
        <returns>컨트롤의 현재 뷰 상태가 들어 있는 개체입니다. 컨트롤과 연결된 뷰 상태가 없는 경우에는 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="login.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">컨트롤의 디자인 타임 데이터가 들어 있는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary>컨트롤에 대한 디자인 타임 데이터를 설정합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.Login.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 컨트롤에 해당하는 <see cref="T:System.Web.UI.WebControls.Login" /> 값을 가져옵니다. 이 속성은 주로 컨트롤 개발자가 사용합니다.</summary>
        <value>항상 <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.Login.TagKey%2A> 속성을 합니다 <xref:System.Web.UI.HtmlTextWriterTag> 연관 된 값을 <xref:System.Web.UI.WebControls.Login> 컨트롤. 이 속성은 주로 컨트롤 개발자가 사용합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b4332d67-e0a5-4f88-928b-5c84fb892b5e">ASP.NET 로그인 컨트롤의 모양 및 동작을 사용자 지정</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae">ASP.NET 웹 서버 컨트롤 템플릿</related>
      </Docs>
    </Member>
    <Member MemberName="TextBoxStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style TextBoxStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style TextBoxStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TextBoxStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextBoxStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ TextBoxStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TextBoxStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Login.TextBoxStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤의 텍스트 상자 모양을 정의하는 속성이 들어 있는 컬렉션에 대한 참조를 가져옵니다.</summary>
        <value>텍스트 상자의 모양을 정의하는 속성이 들어 있는 <see cref="T:System.Web.UI.WebControls.Style" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> 속성은 사용자 이름 및 암호의 모양을 정의 <xref:System.Web.UI.WebControls.TextBox> 컨트롤을 <xref:System.Web.UI.WebControls.Login> 컨트롤입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.Style> 개체를 반환 합니다. 형식에서 선언적으로 이러한 속성을 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 의 속성을 나타냅니다 합니다 <xref:System.Web.UI.WebControls.Style> 클래스 (예를 들어 `TextBoxStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수 있습니다 `Property.Subproperty` (예를 들어 `TextBoxStyle.ForeColor`).  
  
 일반 설정 사용자 지정 배경색, 텍스트 색 및 글꼴 속성을 포함 합니다. <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> 속성은 사용자 이름 및 암호 텍스트 상자 모양을 정의 합니다.  
  
 에 대 한 스타일 설정을 합니다 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> 속성에 대 한 스타일 설정을 사용 하 여 병합 되는 <xref:System.Web.UI.WebControls.Login> 컨트롤. 모든 설정이 합니다 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> 속성의 속성에서 해당 설정을 재정의 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
 다음 <xref:System.Web.UI.WebControls.Login> 스타일 속성은 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> 설정:  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 모양을 정의 하는 데 템플릿을 사용할 때의 <xref:System.Web.UI.WebControls.Login> 컨트롤을 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> 속성이 적용 되지 않습니다.  
  
   
  
## Examples  
 사용자 이름 및 암호의 배경색과 텍스트 색을 설정 하는 다음 코드 예제 <xref:System.Web.UI.WebControls.TextBox> 컨트롤에서 속성을 설정 하 여는 <xref:System.Web.UI.WebControls.Style> 개체에서 참조 하는 <xref:System.Web.UI.WebControls.Login.TextBoxStyle%2A> 속성입니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[LoginTextBoxStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginTextBoxStyle/CS/logintextboxstylecs.aspx#1)]
 [!code-aspx-vb[LoginTextBoxStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginTextBoxStyle/VB/logintextboxstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.Password" />
        <altmember cref="P:System.Web.UI.WebControls.Login.UserName" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="TextLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.LoginTextLayout TextLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.LoginTextLayout TextLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TextLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextLayout As LoginTextLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::LoginTextLayout TextLayout { System::Web::UI::WebControls::LoginTextLayout get(); void set(System::Web::UI::WebControls::LoginTextLayout value); };" />
      <MemberSignature Language="F#" Value="member this.TextLayout : System.Web.UI.WebControls.LoginTextLayout with get, set" Usage="System.Web.UI.WebControls.Login.TextLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginTextLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤의 각 텍스트 상자와 연결된 레이블의 위치를 해당 텍스트 상자를 기준으로 지정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.LoginTextLayout" /> 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.LoginTextLayout.TextOnLeft" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Web.UI.WebControls.Login.TextLayout%2A> 연결 된 해당 텍스트를 기준으로 레이블의 위치를 지정 하는 속성에 대 한 상자는 <xref:System.Web.UI.WebControls.Login> 제어 합니다. 이 속성은 <xref:System.Web.UI.WebControls.LoginTextLayout> 열거형의 값 중 하나로 설정됩니다. 다음 표에서 가능한 값을 나열합니다.  
  
|LoginTextLayout 값|설명|  
|---------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.LoginTextLayout.TextOnLeft>|연결된 텍스트 입력 필드의 왼쪽에 레이블을 배치합니다.|  
|<xref:System.Web.UI.WebControls.LoginTextLayout.TextOnTop>|연결된 텍스트 입력 필드 위에 레이블을 배치합니다.|  
  
   
  
## Examples  
 다음 코드 예제를 사용 하 여 보여 줍니다.는 <xref:System.Web.UI.WebControls.LoginTextLayout> 설정 하는 열거형을 <xref:System.Web.UI.WebControls.Login.TextLayout%2A> 의 속성을 <xref:System.Web.UI.WebControls.Login> 컨트롤입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LoginTextLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LoginTextLayout/CS/logintextlayoutcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LoginTextLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LoginTextLayout/VB/logintextlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see cref="T:System.Web.UI.WebControls.LoginTextLayout" /> 열거형 값 중 하나가 아닌 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="TitleText">
      <MemberSignature Language="C#" Value="public virtual string TitleText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TitleText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TitleText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleText : string with get, set" Usage="System.Web.UI.WebControls.Login.TitleText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤의 제목을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤의 제목입니다. 기본값은 "로그인"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.TitleText%2A> 속성의 위쪽에 표시 되는 제목 지정를 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
 컨트롤의 기본 텍스트는 서버의 현재 로캘을 기반으로 지역화됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.Login.TitleText%2A> 속성입니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[LoginTitleText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginTitleText/CS/logintitletextcs.aspx#1)]
 [!code-aspx-vb[LoginTitleText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginTitleText/VB/logintitletextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.TitleTextStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="TitleTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle TitleTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle TitleTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.TitleTextStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TitleTextStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ TitleTextStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TitleTextStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.Login.TitleTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤의 제목 텍스트 모양을 정의하는 속성이 들어 있는 컬렉션에 대한 참조를 가져옵니다.</summary>
        <value>제목 텍스트의 모양을 정의하는 속성이 들어 있는 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> 속성에 대 한 참조를 가져옵니다을 <xref:System.Web.UI.WebControls.TableItemStyle> 에 포함 된 제목의 모양을 변경 하는 데 사용 하는 개체는 <xref:System.Web.UI.WebControls.Login.TitleText%2A> 속성입니다.  
  
 합니다 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> 속성에서 제목의 모양을 정의 <xref:System.Web.UI.WebControls.Login> 제어 합니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체를 반환 합니다. 형식에서 선언적으로 이러한 속성을 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 의 속성을 나타냅니다 합니다 <xref:System.Web.UI.WebControls.TableItemStyle> 클래스 (예를 들어 `TitleStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수 있습니다 `Property.Subproperty` (예를 들어 `TitleStyle.ForeColor`).  
  
 일반 설정 사용자 지정 배경색, 텍스트 색 및 글꼴 속성을 포함 합니다. 합니다 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> 속성의 모양을 정의 합니다 <xref:System.Web.UI.WebControls.Login.TitleText%2A> 속성입니다.  
  
 에 대 한 스타일 설정을 합니다 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> 속성에 대 한 스타일 설정을 사용 하 여 병합 되는 <xref:System.Web.UI.WebControls.Login> 컨트롤. 모든 설정이 합니다 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> 속성의 속성에서 해당 설정을 재정의 <xref:System.Web.UI.WebControls.Login> 제어 합니다.  
  
 다음 <xref:System.Web.UI.WebControls.Login> 스타일 속성은 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> 설정:  
  
-   <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>  
  
-   <xref:System.Web.UI.Control.Visible%2A>  
  
-   <xref:System.Web.UI.WebControls.WebControl.Width%2A>  
  
 모양을 정의 하는 데 템플릿을 사용할 때의 <xref:System.Web.UI.WebControls.Login> 컨트롤을 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> 속성이 적용 되지 않습니다.  
  
   
  
## Examples  
 속성을 설정 하 여 텍스트 색, 배경색 및 제목 글꼴 두께 설정 하는 다음 코드 예제는 <xref:System.Web.UI.WebControls.TableItemStyle> 개체에서 참조 하는 <xref:System.Web.UI.WebControls.Login.TitleTextStyle%2A> 속성입니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[LoginTitleText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginTitleText/CS/logintitletextcs.aspx#1)]
 [!code-aspx-vb[LoginTitleText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginTitleText/VB/logintitletextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Login.TitleText" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Login.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="login.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 <see cref="M:System.Web.UI.Control.TrackViewState" /> 메서드를 재정의합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.Login.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Login.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public virtual string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string with get, set" Usage="System.Web.UI.WebControls.Login.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 입력한 사용자 이름을 가져옵니다.</summary>
        <value>사용자가 입력한 사용자 이름입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.UserName%2A> 속성에는 사용자가 입력 한 사용자 이름을 포함 합니다. <xref:System.Web.UI.WebControls.Login> 같은 입력란에서 표시 하는 속성을 제어할 <xref:System.Web.UI.WebControls.Login.UserName%2A> 및 <xref:System.Web.UI.WebControls.Login.Password%2A>, 페이지 수명 주기의 모든 단계 동안 액세스할 수 있습니다. 컨트롤을 이용 하 여 최종 사용자가 변경한 모든 내용을 선택 된 <xref:System.Web.UI.WebControls.TextBox.TextChanged> 된 텍스트 상자에 의해 트리거되는 이벤트입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 전달 된 <xref:System.Web.UI.WebControls.Login.UserName%2A> 속성 사용자 지정 인증 방법입니다.  
  
 [!code-aspx-csharp[LoginAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginAuthenticate/CS/loginauthenticatecs.aspx#1)]
 [!code-aspx-vb[LoginAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginAuthenticate/VB/loginauthenticatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="UserNameLabelText">
      <MemberSignature Language="C#" Value="public virtual string UserNameLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.UserNameLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserNameLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserNameLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserNameLabelText : string with get, set" Usage="System.Web.UI.WebControls.Login.UserNameLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.Login.UserName" /> 텍스트 상자의 레이블 텍스트를 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Web.UI.WebControls.Login.UserName" /> 텍스트 상자의 레이블 텍스트입니다. 기본값은 "사용자 이름:"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Login.UserNameLabelText%2A> 속성에 대 한 레이블 텍스트를 포함 합니다 <xref:System.Web.UI.WebControls.Login.UserName%2A> 입력란입니다.  
  
 <xref:System.Web.UI.WebControls.Login.TextLayout%2A> 속성 필드 레이블의 위치를 정의 합니다.  
  
 컨트롤의 기본 텍스트는 서버의 현재 로캘을 기반으로 지역화됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 된 <xref:System.Web.UI.WebControls.Login.UserNameLabelText%2A> 속성입니다.  
  
 [!code-aspx-csharp[LoginLabelText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginLabelText/CS/loginlabeltextcs.aspx#1)]
 [!code-aspx-vb[LoginLabelText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginLabelText/VB/loginlabeltextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="UserNameRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string UserNameRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UserNameRequiredErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserNameRequiredErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserNameRequiredErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 이름 필드가 비어 있을 경우 <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> 컨트롤에 표시할 오류 메시지를 가져오거나 설정합니다.</summary>
        <value>사용자 이름 필드가 비어 있을 경우 <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> 컨트롤에 표시할 오류 메시지입니다. 기본값은 "사용자 이름."입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> 에 표시 된 오류 메시지를 포함 하는 속성을 <xref:System.Web.UI.WebControls.ValidationSummary> 로그인 페이지에 컨트롤입니다.  
  
 <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> 속성 값은 다음 조건 모두에 해당할 경우에 표시 됩니다.  
  
-   <xref:System.Web.UI.WebControls.ValidationSummary> 컨트롤이 페이지에 있는 경우.  
  
-   사용자가 사용자 이름 텍스트 상자가 비어 있습니다.  
  
 컨트롤의 기본 텍스트는 서버의 현재 로캘을 기반으로 지역화됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
 모두를 <xref:System.Web.UI.WebControls.Login.PasswordRequiredErrorMessage%2A> 하 고 <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> 값 유효성 검사 그룹 내에 래핑됩니다는 <xref:System.Web.UI.WebControls.Login> 컨트롤. 이러한 값을 표시 하려면를 <xref:System.Web.UI.WebControls.ValidationSummary.ValidationGroup%2A> 의 속성을 <xref:System.Web.UI.WebControls.ValidationSummary> 제어 설정 해야 합니다는 <xref:System.Web.UI.Control.ID%2A> 의 속성을 <xref:System.Web.UI.WebControls.Login> 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하 여 보여 줍니다.는 <xref:System.Web.UI.WebControls.ValidationSummary> 컨트롤에 지정 된 오류 메시지를 표시 하는 <xref:System.Web.UI.WebControls.Login.UserNameRequiredErrorMessage%2A> 속성입니다.  
  
 [!code-aspx-csharp[LoginRequiredErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginRequiredErrorMessage/CS/loginrequirederrormessagecs.aspx#1)]
 [!code-aspx-vb[LoginRequiredErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginRequiredErrorMessage/VB/loginrequirederrormessagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ValidatorTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ValidatorTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ValidatorTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.ValidatorTextStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidatorTextStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ ValidatorTextStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidatorTextStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Login.ValidatorTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Style" /> 컨트롤에서 사용하는 유효성 검사기와 관련된 오류 메시지의 모양을 정의하는 <see cref="T:System.Web.UI.WebControls.Login" /> 속성이 들어 있는 컬렉션에 대한 참조를 가져옵니다.</summary>
        <value>스타일 설정이 들어 있는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 사용 하 여 사용자 지정에 사용할 수 있는 스타일 설정을 나열 합니다 <xref:System.Web.UI.WebControls.Login.ValidatorTextStyle%2A> 속성입니다.  
  
|설정|설명|  
|-------------|-----------------|  
|`BackColor`|오류 메시지의 배경색입니다. 색 중 하나일 수 있습니다는 <xref:System.Drawing.Color> 속성입니다.|  
|`BorderColor`|오류 메시지의 테두리의 색입니다. 색 중 하나일 수 있습니다는 <xref:System.Drawing.Color> 속성입니다.|  
|`BorderStyle`|오류 메시지의 테두리의 스타일입니다. 수 스타일 "None", "Dotted", "Dashed", "고정", "Double", "Groove", "Ridge", "삽입" 또는 "초기"입니다. 기본값은 "NotSet". 일부 스타일 명확 하 게 표시 되지 않습니다 하지 않는 한는 `BorderWidth` 값 2 보다 큽니다.|  
|`BorderWidth`|오류 메시지의 테두리의 너비입니다.|  
|`CssClass`|오류 메시지를 렌더링 하는 데는 연계 스타일 시트 (CSS) 클래스입니다. 다른 설정을 지정 하는 경우 스타일 시트 설정을 대신 사용 됩니다.|  
|`Font-Bold`|`true` 오류 메시지 텍스트를 굵은 글꼴로 표시 합니다.|  
|`Font-Italic`|`true` 오류 메시지 텍스트를 기울임꼴로 표시 합니다.|  
|`Font-Names`|글꼴의 이름입니다.|  
|`Font-Overline`|`true` 위의 줄을 사용 하 여 오류 메시지 텍스트를 표시 합니다.|  
|`Font-Size`|오류 메시지에 있는 텍스트의 크기를 <xref:System.Web.UI.WebControls.FontUnit> 개체입니다.|  
|`Font-Strikeout`|`true` 줄을 오류 메시지 텍스트를 표시 합니다.|  
|`Font-Underline`|`true` 오류 메시지 텍스트에 밑줄을 표시 합니다.|  
|`ForeColor`|오류 메시지의 텍스트 색입니다. 색 중 하나일 수 있습니다는 <xref:System.Drawing.Color> 속성입니다.|  
|`Height`|<xref:System.Web.UI.WebControls.Unit> 오류 메시지의 높이 나타내는 개체입니다.|  
|`Width`|<xref:System.Web.UI.WebControls.Unit> 오류 메시지의 너비를 나타내는 개체입니다.|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b4332d67-e0a5-4f88-928b-5c84fb892b5e">ASP.NET 로그인 컨트롤의 모양 및 동작을 사용자 지정</related>
      </Docs>
    </Member>
    <Member MemberName="VisibleWhenLoggedIn">
      <MemberSignature Language="C#" Value="public virtual bool VisibleWhenLoggedIn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VisibleWhenLoggedIn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VisibleWhenLoggedIn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool VisibleWhenLoggedIn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VisibleWhenLoggedIn : bool with get, set" Usage="System.Web.UI.WebControls.Login.VisibleWhenLoggedIn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 인증된 후 <see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자가 인증되었을 때 <see cref="T:System.Web.UI.WebControls.Login" /> 컨트롤이 숨겨지면 <see langword="false" />이고, 그렇지 않으면 <see langword="true" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A> 속성을 지정 하는지 여부를 <xref:System.Web.UI.WebControls.Login> 컨트롤이 인증 된 사용자에 게 표시 됩니다. 속성이 `false`, <xref:System.Web.UI.WebControls.Login> 인증된 된 사용자가 사이트에 액세스할 때 페이지의 컨트롤이 표시 되지 않습니다. 이 로그인 페이지와 페이지 정보를 숨기려면 사용 되는 웹 페이지에서 사용 되는 <xref:System.Web.UI.WebControls.Login> 사용자가 인증 된 후 제어 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A> 속성이 적용 되지 않습니다는 <xref:System.Web.UI.WebControls.Login> Web.config 또는 응용 프로그램의 구성 파일에서 기본 로그인 페이지에 표시 되는 컨트롤이 정의 합니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.UI.WebControls.Login.VisibleWhenLoggedIn%2A> 속성을 `true` 지정 하는 <xref:System.Web.UI.WebControls.Login> 숨겨져 있지 않으면 컨트롤과 페이지에서 사용자의 인증 여부에 관계 없이 항상 표시 됩니다.  
  
 [!code-aspx-csharp[LoginHideWhenLoggedIn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginHideWhenLoggedIn/CS/loginhidewhenloggedincs.aspx#1)]
 [!code-aspx-vb[LoginHideWhenLoggedIn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginHideWhenLoggedIn/VB/loginhidewhenloggedinvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d(v=vs.100)">ASP.NET 로그인 컨트롤 개요</related>
      </Docs>
    </Member>
  </Members>
</Type>