<Type Name="Menu" FullName="System.Web.UI.WebControls.Menu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a44c75b91f45ddcf96945903f7d3647517226b1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55423929" /></Metadata><TypeSignature Language="C#" Value="public class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Menu extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements INamingContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::INamingContainer, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MenuItemClick")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET 웹 페이지에 메뉴를 표시합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용:  
  
-   [소개](#introduction)  
  
-   [메뉴 항목](#menu_items)  
  
-   [정적 데이터](#static_data)  
  
-   [데이터 바인딩](#binding_to_data)  
  
-   [사용자 인터페이스 사용자 지정](#customizing_the_user_interface)  
  
-   [이벤트](#events)  
  
-   [액세스 가능성](#accessibility)  
  
-   [선언 구문](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>소개  
 합니다 <xref:System.Web.UI.WebControls.Menu> ASP.NET 웹 페이지의 메뉴를 표시 하는 컨트롤과 함께 자주 사용 됩니다는 <xref:System.Web.UI.WebControls.SiteMapDataSource> 웹 사이트를 탐색 하는 것에 대 한 제어 합니다. <xref:System.Web.UI.WebControls.Menu> 컨트롤은 다음 기능을 지원 합니다.  
  
-   계층적 데이터 소스에 바인딩할 컨트롤의 메뉴 항목을 허용 하는 데이터 바인딩.  
  
-   사이트의 통합을 통해 탐색을 <xref:System.Web.UI.WebControls.SiteMapDataSource> 제어 합니다.  
  
-   에 대 한 프로그래밍 방식의 액세스를 <xref:System.Web.UI.WebControls.Menu> 개체 모델을 동적으로 만들고 메뉴, 메뉴 항목, 속성을 설정할 채우고 등입니다.  
  
-   테마, 사용자 정의 이미지, 스타일 및 사용자 정의 템플릿을 통해 모양을 사용자 지정할 수 있습니다.  
  
 메뉴 항목을 마우스 오른쪽 단추로 클릭할 때는 <xref:System.Web.UI.WebControls.Menu> 컨트롤 연결 된 웹 페이지로 이동 하거나 서버에 다시 게시 하기만 하면 됩니다. 경우는 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 메뉴 항목의 속성을 설정 합니다 <xref:System.Web.UI.WebControls.Menu> 페이지 처리를 위해 서버를 다시 게시이 고, 그렇지 않으면 컨트롤에 연결 된 페이지로 이동 합니다. 기본적으로 연결 된 페이지 동일한 창이 나 프레임에 표시 됩니다는 <xref:System.Web.UI.WebControls.Menu> 제어 합니다. 다른 창이 나 프레임의 연결된 된 콘텐츠를 표시 하려면 사용 합니다 <xref:System.Web.UI.WebControls.Menu.Target%2A> 의 속성은 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.Target%2A> 속성 컨트롤의 모든 메뉴 항목에 영향을 줍니다. 창이 나 개별 메뉴 항목에 대 한 프레임을 지정 하려면 설정 합니다 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> 의 속성은 <xref:System.Web.UI.WebControls.MenuItem> 직접 개체.  
  
 <xref:System.Web.UI.WebControls.Menu> 컨트롤에는 두 가지 유형의 메뉴 표시: 정적 및 동적 메뉴입니다. 정적 메뉴에 항상 표시 되는 <xref:System.Web.UI.WebControls.Menu> 제어 합니다. 기본적으로 정적 메뉴의 루트 수준 (수준 0)에 메뉴 항목이 표시 됩니다. 정적 메뉴 내에서 설정 하 여 추가 메뉴 수준 (정적 하위 메뉴)를 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 속성입니다. 메뉴 항목 (해당 되는 경우)에 지정 된 값 보다 높은 수준의 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 속성 동적 메뉴에 표시 됩니다. 동적 메뉴만 가져갈 때 마우스 포인터를 동적 하위 메뉴가 부모 메뉴 항목을 통해 표시 됩니다. 동적 메뉴는 특정 기간 후 자동으로 나타나지 않습니다. 사용 된 <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> 기간을 지정 하는 속성입니다.  
  
> [!NOTE]
>  동적 메뉴는 메뉴 외부를 클릭할 때에 사라집니다.  
  
 설정 하 여 동적 메뉴에 표시 되는 수준 수를 제한할 수도 있습니다는 <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> 속성입니다. 지정된 된 값 보다 더 높은 메뉴 수준은 삭제 됩니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.Menu> 컨트롤 내에서 사용 하도록 설계 되지 않았습니다는 <xref:System.Web.UI.UpdatePanel> 제어 합니다. 추가할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.Menu> 외부 페이지에만 컨트롤을 <xref:System.Web.UI.UpdatePanel> 컨트롤입니다. <xref:System.Web.UI.UpdatePanel> 컨트롤에서 포스트백을 사용 하 여 전체 페이지를 업데이트 하는 대신 페이지의 선택된 영역을 업데이트 하는 데 사용 됩니다. 자세한 내용은 [UpdatePanel 컨트롤 개요](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) 하 고 [부분 페이지 렌더링 개요](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)합니다.  
  
<a name="menu_items"></a>   
## <a name="menu-items"></a>메뉴 항목  
 A <xref:System.Web.UI.WebControls.Menu> 표시 되는 메뉴 항목의 트리 컨트롤 이루어집니다 <xref:System.Web.UI.WebControls.MenuItem> 개체입니다. 최상위 (수준 0)에 메뉴 항목을 루트 메뉴 항목 이라고 합니다. 부모 메뉴 항목에 있는 메뉴 항목에 자식 메뉴 항목을 라고 합니다. 모든 루트 메뉴 항목에 저장 되는 <xref:System.Web.UI.WebControls.Menu.Items%2A> 컬렉션입니다. 부모 메뉴 항목에 자식 메뉴 항목이 저장 됩니다 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> 컬렉션입니다.  
  
 각 메뉴 항목에는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 및 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 속성입니다. 값을 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 속성에 표시 됩니다는 <xref:System.Web.UI.WebControls.Menu> 컨트롤 하는 동안는 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> 메뉴 항목과 연결 된 다시 게시 이벤트에 전달 된 데이터와 같은 속성 메뉴 항목에 대 한 추가 데이터를 저장 하는. 메뉴 항목으로 표시 하는 다른 웹 페이지로 이동할 수를 클릭 하면는 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 속성입니다.  
  
> [!NOTE]
>  경우는 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> 메뉴 항목에 대 한 속성이 설정 되어 있지는 <xref:System.Web.UI.WebControls.Menu> 컨트롤은 단순히 페이지 메뉴 항목을 클릭할 때 처리를 위해 서버에 전송 합니다.  
  
 설정 하 여 메뉴 항목의 이미지를 표시할 수도 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> 속성입니다.  
  
 메뉴 항목에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.MenuItem>합니다.  
  
<a name="static_data"></a>   
## <a name="static-data"></a>정적 데이터  
 가장 간단한 데이터 모델을 <xref:System.Web.UI.WebControls.Menu> 컨트롤은 정적 메뉴 항목입니다. 선언적 구문을 사용 하 여 정적 메뉴 항목을 표시 하려면 먼저 중첩 열고 닫는 `<Items>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.Menu> 제어 합니다. 다음으로 중첩 하 여 메뉴 구조를 만듭니다 `<asp:MenuItem>` 요소는 태그와 닫는 사이 `<Items>` 태그입니다. 각 `<asp:MenuItem>` 요소 컨트롤의 메뉴 항목을 나타내며 매핑되는 <xref:System.Web.UI.WebControls.MenuItem> 개체입니다. 특성을 설정 하 여 각 메뉴 항목의 속성을 설정할 수 있습니다 해당 `<asp:MenuItem>` 요소입니다. 하위 메뉴 항목을 만들려면 추가 중첩 `<asp:MenuItem>` 요소는 태그와 닫는 사이 `<asp:MenuItem>` 부모 메뉴 항목을 태그 합니다.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>데이터 바인딩  
 합니다 <xref:System.Web.UI.WebControls.Menu> 제어와 같은 모든 계층적 데이터 소스 컨트롤을 사용할 수는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤 또는 <xref:System.Web.UI.WebControls.SiteMapDataSource> 제어 합니다. 계층적 데이터 소스 컨트롤에 바인딩할 설정를 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 의 속성을 <xref:System.Web.UI.WebControls.Menu> 컨트롤을 <xref:System.Web.UI.Control.ID%2A> 데이터 소스 컨트롤의 값입니다. <xref:System.Web.UI.WebControls.Menu> 컨트롤에 자동으로 지정 된 데이터 소스 컨트롤에 바인딩합니다. 이것은 데이터 바인딩할 기본 방법입니다.  
  
 메뉴 항목을 각 데이터 항목 (예: 몇 가지 특성을 사용 하 여 XML 요소), 여러 속성이 들어 있는 데이터 원본에 바인딩 반환 하는 값을 표시 하는 경우는 `ToString` 메서드 기본적으로 데이터 항목의 합니다. XML 요소의 경우 메뉴 항목 메뉴 트리에서의 기본 구조를 보여주지만 그렇지 않은 경우에 그다지 유용 하지는 요소 이름을 표시 합니다. 사용 하 여 특정 데이터 항목 속성 메뉴 항목을 바인딩할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> 메뉴 항목 바인딩을 지정 하는 컬렉션입니다. 합니다 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> 컬렉션에 포함 되어 <xref:System.Web.UI.WebControls.MenuItemBinding> 데이터 항목과 데이터 항목이 바인딩되는 메뉴 항목 간의 관계를 정의 하는 개체입니다. 바인딩 및 노드에 표시할 데이터 항목 속성에 대 한 조건을 지정할 수 있습니다. 메뉴 항목 바인딩에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.MenuItemBinding>합니다.  
  
 빈 노드를 만들 수 없습니다는 <xref:System.Web.UI.WebControls.Menu> 설정 하 여 컨트롤을 <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> 또는 <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> 속성을 빈 문자열 (""). 이러한 속성을 빈 문자열로 설정 속성을 설정 하지 않으면 하는 것과 동일한 효과가 있습니다. 이런 경우는 <xref:System.Web.UI.WebControls.Menu> 컨트롤을 사용 하 여 기본 바인딩을 만듭니다는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성입니다. 자세한 내용은 [데이터베이스를 바인딩할](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)합니다.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>사용자 인터페이스 사용자 지정  
 모양을 사용자 지정 하는 방법은 여러 가지는 <xref:System.Web.UI.WebControls.Menu> 제어 합니다. 먼저 지정할 수 있습니다 있는지 여부를 합니다 <xref:System.Web.UI.WebControls.Menu> 컨트롤이 가로 또는 세로 방향으로 설정 하 여 렌더링 되는 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> 속성입니다. 또한 각 메뉴 항목 형식에 대 한 다른 스타일 (예: 글꼴 크기 및 색)을 지정할 수 있습니다.  
  
 Css 스타일 시트 ()를 사용 하 여 컨트롤의 모양을 사용자 지정 하는 경우 인라인 스타일 또는 CSS 파일, 하지만 둘 다를 사용 합니다. 인라인 스타일 및 CSS 파일을 모두 사용 하 여 예기치 않은 결과가 발생할 수 있습니다. 스타일 시트를 사용 하 여 컨트롤에 대 한 자세한 내용은 참조 하세요. [웹 서버 컨트롤 및 CSS 스타일](https://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42)합니다.  
  
 다음 표에서 사용 가능한 메뉴 항목 스타일을 보여 줍니다.  
  
|메뉴 항목 스타일 속성|설명|  
|------------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|마우스 포인터 위로 가져갈 때 동적 메뉴 항목의 스타일 설정입니다.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|개별 동적 메뉴 항목의 스타일 설정입니다.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|동적 메뉴의 스타일 설정입니다.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|현재 선택한 동적 메뉴 항목의 스타일 설정입니다.|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|마우스 포인터 위로 가져갈 때 정적 메뉴 항목의 스타일 설정입니다.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|각 정적 메뉴 항목의 스타일 설정입니다.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|정적 메뉴의 스타일 설정입니다.|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|현재 선택 된 정적 메뉴 항목의 스타일 설정입니다.|  
  
 개별 스타일 속성을 설정 하는 대신 해당 수준을 기준으로 다음과 같은 스타일 컬렉션을 사용 하 여 메뉴 항목에 적용 되는 스타일을 지정할 수 있습니다.  
  
|수준 스타일 컬렉션|설명|  
|-----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|컬렉션인 <xref:System.Web.UI.WebControls.MenuItemStyle> 수준별로 메뉴 항목의 스타일을 제어 하는 개체입니다.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|컬렉션인 <xref:System.Web.UI.WebControls.MenuItemStyle> 의 스타일을 제어 하는 개체 수준으로 메뉴 항목을 선택 합니다.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|컬렉션인 <xref:System.Web.UI.WebControls.MenuItemStyle> 수준별로 하위 메뉴 항목의 스타일을 제어 하는 개체입니다.|  
  
 컬렉션의 첫 번째 스타일 메뉴 트리에서 첫 번째 깊이에 메뉴 항목의 스타일에 해당합니다. 컬렉션의 두 번째 스타일 메뉴 트리에서에서 두 번째 수준에 있는 메뉴 항목의 스타일에 해당합니다. 이 주로 내용을 스타일 탐색 메뉴를 생성 하는 특정 깊이에서 메뉴 항목 하위 메뉴가 있는지 여부에 관계 없이 동일한 모양이 있어야 합니다.  
  
> [!NOTE]
>  에 대 한 스타일을 정의 하려면 앞의 표에 나열 된 수준 스타일 컬렉션 중 하나를 사용 하는 경우는 <xref:System.Web.UI.WebControls.Menu> 컨트롤을 이러한 스타일 설정은 개별 메뉴 항목 스타일 속성을 재정의 합니다.  
  
 에 표시 되는 이미지를 사용자 지정 하는 컨트롤의 모양을 변경 하는 또 다른 방법은 <xref:System.Web.UI.WebControls.Menu> 제어 합니다. 다음 표에 표시 된 속성을 설정 하 여 컨트롤의 여러 부분에 대 한 사용자 지정 이미지를 지정할 수 있습니다.  
  
|이미지 속성|설명|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>|다른 메뉴 항목과 구분 하기 위해 동적 메뉴 항목의 맨 아래에 표시 되는 선택적 이미지입니다.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>|하위 메뉴가 있음을 나타내기 위해 동적 메뉴 항목에 표시 하는 선택적 이미지입니다.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>|다른 메뉴 항목과 구분 하기 위해 동적 메뉴 항목의 맨 위에 표시 되는 선택적 이미지입니다.|  
|<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>|사용자 추가 메뉴 항목 보기까지 아래로 스크롤하여 수 있음을 나타내기 위해 메뉴 항목의 맨 아래에 표시 되는 이미지입니다.|  
|<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>|사용자 추가 메뉴 항목 보기까지 스크롤하여 수 있음을 나타내기 위해 메뉴 항목의 위쪽에 표시 되는 이미지입니다.|  
|<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>|다른 메뉴 항목과 구분 하기 위해 정적 메뉴 항목의 맨 아래에 표시 되는 선택적 이미지입니다.|  
|<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>|하위 메뉴가 있음을 나타내기 위해 동적 메뉴 항목에 표시 되는 선택적 이미지입니다.|  
|<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>|다른 메뉴 항목과 구분 하기 위해 정적 메뉴 항목의 맨 위에 표시 되는 선택적 이미지입니다.|  
  
 사용자 인터페이스 (UI)의 전체 컨트롤에 대 한 사용자 지정 템플릿을 정의할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu> 다음 템플릿 속성을 사용 하 여 제어 합니다.  
  
|템플릿 속성|설명|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>|동적 메뉴 항목에 대해 렌더링할 사용자 지정 내용이 들어 있는 템플릿.|  
|<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>|정적 메뉴 항목에 대해 렌더링할 사용자 지정 내용이 들어 있는 템플릿.|  
  
 부모 메뉴 항목을 기준으로 동적 메뉴의 세로 및 가로 위치를 설정 하 여 제어할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> 고 <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> 속성을 각각. 정적 메뉴에서 정적 하위 메뉴 항목의 들여쓰기를 제어 하려면 사용 된 <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> 속성입니다.  
  
<a name="events"></a>   
## <a name="events"></a>이벤트  
 <xref:System.Web.UI.WebControls.Menu> 컨트롤에 대해 프로그래밍할 수 있는 몇 가지 이벤트를 제공 합니다. 이렇게 하면 이벤트가 발생할 때마다 사용자 지정 루틴을 실행할 수 있습니다. 다음 표에서 지원 되는 이벤트를 나열합니다.  
  
|이벤트|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemClick>|메뉴 항목을 클릭할 때 발생 합니다. 이 이벤트는 일반적으로 동기화 하는 데는 <xref:System.Web.UI.WebControls.Menu> 페이지의 다른 컨트롤과 컨트롤입니다.|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>|메뉴 항목을 데이터에 바인딩될 때 발생 합니다. 렌더링 하기 전에 메뉴 항목을 수정 하려면이 이벤트는 일반적으로 <xref:System.Web.UI.WebControls.Menu> 제어 합니다.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>액세스 가능성  
 접근성 표준을 준수 하는 태그를 생성할 수 있도록이 컨트롤을 구성 하는 방법에 대 한 정보를 참조 하세요 [Visual Studio 및 ASP.NET의 접근성](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) 및 [ASP.NET 컨트롤과내게필요한옵션](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:Menu  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    DisappearAfter="integer"  
    DynamicBottomSeparatorImageUrl="uri"  
    DynamicEnableDefaultPopOutImage="True|False"  
    DynamicHorizontalOffset="integer"  
    DynamicItemFormatString="string"  
    DynamicPopOutImageTextFormatString="string"  
    DynamicPopOutImageUrl="uri"  
    DynamicTopSeparatorImageUrl="uri"  
    DynamicVerticalOffset="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ItemWrap="True|False"  
    MaximumDynamicDisplayLevels="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnMenuItemClick="MenuItemClick event handler"  
    OnMenuItemDataBound="MenuItemDataBound event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    Orientation="Horizontal|Vertical"  
    PathSeparator="string"  
    runat="server"  
    ScrollDownImageUrl="uri"  
    ScrollDownText="string"  
    ScrollUpImageUrl="uri"  
    ScrollUpText="string"  
    SkinID="string"  
    SkipLinkText="string"  
    StaticBottomSeparatorImageUrl="uri"  
    StaticDisplayLevels="integer"  
    StaticEnableDefaultPopOutImage="True|False"  
    StaticItemFormatString="string"  
    StaticPopOutImageTextFormatString="string"  
    StaticPopOutImageUrl="uri"  
    StaticSubMenuIndent="size"  
    StaticTopSeparatorImageUrl="uri"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:MenuItemBinding  
                    DataMember="string"  
                    Depth="integer"  
                    Enabled="True|False"  
                    EnabledField="string"  
                    FormatString="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopOutImageUrl="uri"  
                    PopOutImageUrlField="string"  
                    Selectable="True|False"  
                    SelectableField="string"  
                    SeparatorImageUrl="uri"  
                    SeparatorImageUrlField="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <DynamicHoverStyle />  
        <DynamicItemTemplate>  
            <!-- child controls -->  
        </DynamicItemTemplate>  
        <DynamicMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <Items />  
        <LevelMenuItemStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelMenuItemStyles>  
        <LevelSelectedStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSelectedStyles>  
        <LevelSubMenuStyles>  
                <asp:SubMenuStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSubMenuStyles>  
        <StaticHoverStyle />  
        <StaticItemTemplate>  
            <!-- child controls -->  
        </StaticItemTemplate>  
        <StaticMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|  
                X-Small|Small|Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:Menu>  
```  
  
   
  
## Examples  
 소스 코드를 사용 하 여 Visual Studio 웹 사이트 프로젝트는 다음이 항목과 함께 사용할 수 있습니다: [다운로드](https://go.microsoft.com/fwlink/?LinkId=192868)합니다.  
  
 다음 코드 예제에는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Menu> 선언적 구문을 사용 하 여 정적 메뉴 항목을 사용 하 여 제어 합니다.  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 다음 코드 예제에 바인딩하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Menu> 컨트롤을 <xref:System.Web.UI.WebControls.SiteMapDataSource> 제어 합니다. 제대로 작동 하려면이 예제에서는 라는 Web.sitemap 파일에 아래 샘플 사이트 맵 데이터를 복사 해야 합니다.  
  
 [!code-aspx-csharp[MenuDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-aspx-vb[MenuDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 다음은 샘플 사이트 맵 데이터 앞의 예제입니다.  
  
```  
<siteMap>  
  <siteMapNode url="~\Home.aspx"   
    title="Home"  
    description="Home">  
    <siteMapNode url="~\Music.aspx"  
      title="Music"  
      description="Music">  
      <siteMapNode url="~\Classical.aspx"   
        title="Classical"  
        description="Classical"/>  
      <siteMapNode url="~\Rock.aspx"  
        title="Rock"  
        description="Rock"/>  
      <siteMapNode url="~\Jazz.aspx"  
        title="Jazz"  
        description="Jazz"/>  
    </siteMapNode>  
    <siteMapNode url="~\Movies.aspx"  
      title="Movies"  
      description="Movies">  
      <siteMapNode url="~\Action.aspx"  
        title="Action"  
        description="Action"/>  
      <siteMapNode url="~\Drama.aspx"  
        title="Drama"  
        description="Drama"/>  
      <siteMapNode url="~\Musical.aspx"  
        title="Musical"  
        description="Musical"/>  
    </siteMapNode>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.Menu> 클래스입니다. 동적으로 추가 하는 <xref:System.Web.UI.WebControls.Menu> 컨트롤을 페이지, 새 <xref:System.Web.UI.WebControls.Menu> 개체 속성을 설정 하 고 추가한 다음이 <xref:System.Web.UI.Control.Controls%2A> 등의 컨테이너의 컬렉션 컨트롤 <xref:System.Web.UI.WebControls.PlaceHolder>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 생성자를 사용 하 여 동적으로 추가 하는 방법에 설명 된 <xref:System.Web.UI.WebControls.Menu> 컨트롤을 페이지입니다.  
  
 [!code-aspx-csharp[MenuCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuCtor/CS/menuctorcs.aspx#1)]
 [!code-aspx-vb[MenuCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuCtor/VB/menuctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML 콘텐츠를 클라이언트에 렌더링하는 출력 스트림입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 렌더링되어야 하는 HTML 특성 및 스타일을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu> 재정의 제어 합니다 <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> 다시 설정 하는 방법의 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> 속성을 <xref:System.String.Empty>. 이 멤버는 주로 컨트롤 개발자가 사용자 지정 컨트롤에서 파생 하는 경우는 <xref:System.Web.UI.WebControls.Menu> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.Menu.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.ControlCollection" /> 컨트롤의 자식 컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.Menu" />을 가져옵니다.</summary>
        <value>자식 컨트롤이 들어 있는 <see cref="T:System.Web.UI.ControlCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.Controls%2A> 속성의 인스턴스를 프로그래밍 방식으로 액세스할 수 있습니다. 합니다 <xref:System.Web.UI.ControlCollection> 클래스는 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다. 컬렉션에 컨트롤을 추가 하, 컬렉션에서 컨트롤을 제거 하거나 컬렉션에 있는 서버 컨트롤을 반복할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="menu.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤의 자식 컨트롤을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 주로 컨트롤 개발자가 사용자 지정 컨트롤에서 파생 하는 경우는 <xref:System.Web.UI.WebControls.Menu> 클래스입니다.  
  
 파생 된 컨트롤을 포함 하 여 컴퍼지션 기반 구현을 사용 하는 모든 컨트롤에 알리기 위해 ASP.NET 인프라에서이 메서드는 <xref:System.Web.UI.WebControls.CompositeDataBoundControl> 고 <xref:System.Web.UI.WebControls.CompositeControl>입니다. 다시 게시 또는 렌더링 하기 위한 준비에 포함 된 모든 자식 컨트롤을 만들도록 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="menu.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤에 데이터 소스를 바인딩합니다. 이 메서드는 상속될 수 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 컨트롤을 파생 하는 경우이 멤버는 주로 컨트롤 개발자가 사용 된 <xref:System.Web.UI.WebControls.Menu> 클래스입니다.  
  
 사용 합니다 <xref:System.Web.UI.WebControls.Menu.DataBind%2A> 데이터 원본에서 데이터를 바인딩할 메서드는 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다. 이 메서드는 컨트롤의 현재 서식 파일에서 모든 데이터 바인딩 식을 확인합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>데이터 바인딩된 컨트롤 재정의 해야 <see cref="M:System.Web.UI.WebControls.Menu.PerformDataBinding" /> 대신 <see cref="M:System.Web.UI.WebControls.Menu.DataBind" />합니다. 하는 경우 <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> 를 재정의 합니다 <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> 및 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" /> 이벤트는 잘못 된 순서 대로 발생 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As MenuItemBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemBindingCollection ^ DataBindings { System::Web::UI::WebControls::MenuItemBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.MenuItemBindingCollection" Usage="System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 항목과 데이터 항목이 바인딩되는 메뉴 항목 간의 관계를 정의하는 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>데이터 항목과 데이터 항목이 바인딩되는 메뉴 항목 간의 관계를 나타내는 <see cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> 컬렉션에 포함 되어 <xref:System.Web.UI.WebControls.MenuItemBinding> 데이터 항목과 데이터 항목이 바인딩되는 메뉴 항목 간의 관계를 정의 하는 개체입니다. 메뉴 항목을 각 데이터 항목 (예: 몇 가지 특성을 사용 하 여 XML 요소), 여러 속성이 들어 있는 데이터 원본에 바인딩 반환 하는 값을 표시 하는 경우는 `ToString()` 메서드 기본적으로 데이터 항목의 합니다. XML 요소의 경우 메뉴 항목 트리의 기본 구조를 보여주지만 그렇지 않은 경우에 그다지 유용 하지는 요소 이름을 표시 합니다. 메뉴 항목 바인딩을 지정 하 여 메뉴 항목을 특정 데이터 항목 속성에 바인딩할 수 있습니다.  
  
 데이터 항목과 데이터 항목이 메뉴 항목 간의 관계를 정의할 때 두 조건을 바인딩 및 데이터 항목의 속성에 바인딩할를 지정 해야 합니다. 기준은 데이터 항목을 메뉴 항목에 바인딩해야 하는 시기를 나타냅니다. 조건에는 깊이, 데이터 멤버, 또는 둘 다를 사용 하 여 지정할 수 있습니다. 깊이 바인딩되는 메뉴 수준을 지정 합니다. 예를 들어 깊이가 0 지정 하는 경우 트리 구조 수준 0의에서 모든 메뉴 항목이 메뉴 항목 바인딩의 사용 하 여 바인딩된 됩니다. 데이터 멤버를 데이터 원본에서 데이터 항목의 형식을 지정 하지만 데이터 원본에 따라 다른 정보를 나타낼 수 있습니다. 예를 들어, XML 요소에 대 한 데이터 멤버 요소의 이름을 지정합니다.  
  
 여러 <xref:System.Web.UI.WebControls.MenuItemBinding> 서로 충돌할 수 있는 개체를 정의 하는 <xref:System.Web.UI.WebControls.Menu> 컨트롤에는 다음 우선 순위에 있는 메뉴 항목 바인딩의 적용:  
  
1.  <xref:System.Web.UI.WebControls.MenuItemBinding> 수준과 데이터 멤버를 모두 정의 하는 개체입니다.  
  
2.  <xref:System.Web.UI.WebControls.MenuItemBinding> 깊이 정의 하는 개체입니다.  
  
3.  <xref:System.Web.UI.WebControls.MenuItemBinding> 유일한 데이터 멤버를 정의 하는 개체입니다.  
  
4.  <xref:System.Web.UI.WebControls.MenuItemBinding> 깊이 아니고 데이터 멤버를 정의 하는 개체입니다.  
  
 바인딩 기준에 설정 되 면을 바인딩할 수 있습니다의 속성을 <xref:System.Web.UI.WebControls.MenuItem> 특성 또는 데이터 항목의 필드에 바인딩할 수 있는 개체입니다. 예를 들어, 바인딩할 수 있습니다는 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> 텍스트 특성을 설정 하 여 XML 요소에 메뉴 항목의 속성을 <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> 의 속성을 <xref:System.Web.UI.WebControls.MenuItemBinding> 개체입니다. 정적 값에 바인딩할 수 있습니다. 설정 하는 경우는 <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> 의 속성을 <xref:System.Web.UI.WebControls.MenuItemBinding> 개체에서 모든 메뉴 항목을를 <xref:System.Web.UI.WebControls.MenuItemBinding> 개체가 적용 된 동일한 정적 텍스트 값을 공유 합니다. 속성 바인딩 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.MenuItem> 값으로 개체를 참조 하십시오 <xref:System.Web.UI.WebControls.MenuItemBinding>합니다.  
  
 하지만 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> 선언적으로 설정할 일반적으로, 컬렉션을 프로그래밍 방식으로 채울 수 있습니다. 메뉴 항목 바인딩을 지정 하려면 먼저 중첩 열고 닫는 `<DataBindings>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.Menu> 제어 합니다. 다음으로 배치 `<asp:MenuItemBinding>` 요소는 태그와 닫는 사이 `<DataBindings>` 바인딩을 사용 하면 각 메뉴 항목에 대 한 태그를 지정 하려면.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> 컬렉션의 필드 간의 관계를 정의 하는 <xref:System.Web.UI.WebControls.XmlDataSource> 컨트롤 및 메뉴 항목에는 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다. 제대로 작동 하려면이 예제에서는 Map.xml 라는 파일에 아래 샘플 XML 데이터를 복사 해야 합니다.  
  
 [!code-aspx-csharp[MenuBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuBindings/CS/menubindingscs.aspx#1)]
 [!code-aspx-vb[MenuBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuBindings/VB/menubindingsvb.aspx#1)]  
  
 다음은 샘플 사이트 맵 데이터 앞의 예제입니다.  
  
```  
<MapHomeNode url="~\Home.aspx"   
  title="Home"  
  description="Home">  
  <MapNode url="~\Music.aspx"  
    title="Music"  
    description="Music">  
    <MapNode url="~\Classical.aspx"   
      title="Classical"  
      description="Classical"/>  
    <MapNode url="~\Rock.aspx"  
      title="Rock"  
      description="Rock"/>  
    <MapNode url="~\Jazz.aspx"  
      title="Jazz"  
      description="Jazz"/>  
  </MapNode>  
  <MapNode url="~\Movies.aspx"  
    title="Movies"  
    description="Movies">  
    <MapNode url="~\Action.aspx"  
      title="Action"  
      description="Action"/>  
    <MapNode url="~\Drama.aspx"  
      title="Drama"  
      description="Drama"/>  
    <MapNode url="~\Musical.aspx"  
      title="Musical"  
      description="Musical"/>  
  </MapNode>  
</MapHomeNode>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="DisappearAfter">
      <MemberSignature Language="C#" Value="public int DisappearAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisappearAfter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property DisappearAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DisappearAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DisappearAfter : int with get, set" Usage="System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터를 메뉴 밖으로 이동한 후 해당 동적 메뉴가 표시되는 시간을 가져오거나 설정합니다.</summary>
        <value>마우스 포인터를 동적 메뉴 밖으로 이동한 후 해당 동적 메뉴가 표시되는 시간(밀리초)입니다. 기본값은 500입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 동적 메뉴는 자동으로 마우스 포인터를 메뉴 위로 위치가 더 이상 특정 기간 후 사라집니다. 사용 된 <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> 기간을 지정 하는 속성입니다.  
  
> [!NOTE]
>  동적 메뉴는 메뉴 외부를 클릭 하면 바로 사라집니다.  
  
 동적 메뉴-1로이 속성을 설정 하 여 자동으로 사라집니다 지정할 수 있습니다. 이 경우 동적 메뉴 항목을 사용자가 메뉴 바깥쪽을 클릭 하는 경우에 사라집니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> 속성을 사용자가 2 초 이상에 대 한 메뉴에서 마우스 포인터를 이동한 후 동적 메뉴는 사라집니다.  
  
 [!code-aspx-csharp[MenuDisappearAfter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDisappearAfter/CS/menudisappearaftercs.aspx#1)]
 [!code-aspx-vb[MenuDisappearAfter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDisappearAfter/VB/menudisappearaftervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 -1보다 작은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>다른 메뉴 항목과 구분하기 위해 각 동적 메뉴 항목의 아래쪽에 표시할 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>각 동적 메뉴 항목의 아래쪽에 표시되는 구분 기호 이미지의 URL입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> 속성을 통해 각 동적 메뉴 항목의 맨 아래에 표시할 선택적 사용자 지정 이미지를 지정 합니다. 이 이미지 메뉴 항목 사이의 구분 기호로 작동 하 고 줄의 이미지는 일반적으로 합니다.  
  
> [!NOTE]
>  설정 하 여 각 동적 메뉴 항목의 맨 위에 있는 구분 기호 이미지를 표시할 수도 있습니다는 <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> 속성을 각 동적 메뉴 항목의 맨 아래에 구분 기호 이미지를 표시 합니다.  
  
 [!code-aspx-csharp[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/CS/menudynamicbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/VB/menudynamicbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool DynamicEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DynamicEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>동적 메뉴 항목에 하위 메뉴가 있음을 나타내는 기본 제공 이미지를 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>하위 메뉴가 있는 동적 메뉴 항목의 기본 제공 이미지를 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동적 메뉴 항목에 하위 메뉴가 포함 되어 있으면 사용자가 메뉴 항목 위로 마우스 포인터를 배치 하 여 메뉴를 확장할 수 있음을 나타내는에 이미지를 표시할 수 있습니다. 두 가지 방법으로이 이미지를 표시할 수 있습니다.  
  
-   설정 된 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> 속성을 `true` (기본값) 기본 제공 이미지를 사용할 수 있습니다.  
  
-   설정 된 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 속성을 사용자 지정 이미지를 지정 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 속성을 설정 하면 해당 이미지의 기본 제공 이미지를 재정의 합니다.  
  
> [!NOTE]
>  경우는 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 속성이 설정 되지 않은 및 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> 속성이 `false`, 이미지가 표시 되지 않습니다.  
  
 설정 하 여 이미지에 대 한 대체 텍스트를 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> 속성입니다. 이 텍스트는 사용자 이미지 위로 마우스 포인터를 놓을 때 도구 설명으로 표시 됩니다. 이 텍스트는 또한 컨트롤을 보다 쉽게 액세스할 수 있도록 하는 데 사용할 수 있는 이미지의 설명 사용 하 여 보조 기술 디바이스를 제공 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> 동적 메뉴 항목에 하위 메뉴가 있음을 나타내는 이미지를 숨기려면 속성입니다. <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 속성을 빈 문자열로 설정 해야 ("") 이미지를 숨길 수 있습니다.  
  
 [!code-aspx-csharp[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/CS/menudynamicenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/VB/menudynamicenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHorizontalOffset">
      <MemberSignature Language="C#" Value="public int DynamicHorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicHorizontalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicHorizontalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHorizontalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>부모 메뉴 항목을 기준으로 동적 메뉴를 가로 방향으로 이동할 픽셀 수를 가져오거나 설정합니다.</summary>
        <value>부모 메뉴 항목을 기준으로 동적 메뉴를 가로 방향으로 이동할 픽셀 수입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> 속성을 해당 부모 메뉴 항목을 기준으로 동적 메뉴의 가로 위치를 조정 합니다. 이 속성에 따라 다르게 동적 메뉴의 위치에 영향을 <xref:System.Web.UI.WebControls.Menu> 컨트롤이 가로 또는 세로로 표시 됩니다 (지정 된 대로 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> 속성). 다음 표에서 차이점을 설명 합니다.  
  
|방향|설명|  
|-----------------|-----------------|  
|가로|기본적으로 동적 메뉴 부모 메뉴 항목 바로 아래 표시 됩니다. 이 속성을 설정할 동적 메뉴 위치가이 기본 위치에서 가로 방향으로 이동 합니다.|  
|세로|기본적으로 동적 메뉴 항목에 공백 없이 부모 메뉴 항목 옆에 표시 됩니다. 이 속성을 설정 하면 동적 메뉴와 해당 부모 메뉴 항목 사이의 가로 간격을 제어 합니다.|  
  
> [!NOTE]
>  음의 방향에 동적 메뉴를 이동 하려면 음수 값으로이 속성을 설정할 수 있습니다. 세로 메뉴를 표시 하는 경우 음수 값을 사용 하면 동적 메뉴와 겹치는 부모 메뉴 항목입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> 속성을 통해 동적 메뉴와 해당 부모 메뉴 항목 사이의 5 픽셀 간격을 지정 합니다.  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style DynamicHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style DynamicHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ DynamicHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터를 동적 메뉴 항목의 위로 가져갈 때 표시되는 모양을 설정할 수 있는 <see cref="T:System.Web.UI.WebControls.Style" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>마우스 포인터를 동적 메뉴 항목의 위로 가져갈 때 표시되는 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.Style" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> 마우스 포인터 위로 가져갈 때 동적 메뉴 항목의 모양을 제어 하는 속성입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.Style> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.Style> 개체 (예를 들어 `DynamicHoverStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `DynamicHoverStyle.ForeColor`).  
  
 동적 메뉴 항목에 대 한 스타일 속성은 다음 순서 대로 적용 됩니다.  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 컬렉션 또는 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> 위에 마우스 포인터를 가져갈 때 동적 메뉴 항목의 배경색을 연한 하늘색 변경할 속성입니다.  
  
 [!code-aspx-csharp[MenuDynamicHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHoverStyle/CS/menudynamichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHoverStyle/VB/menudynamichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemFormatString">
      <MemberSignature Language="C#" Value="public string DynamicItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>동적으로 표시되는 모든 메뉴 항목과 함께 표시되는 추가 텍스트를 가져오거나 설정합니다.</summary>
        <value>모든 메뉴 항목과 함께 표시되는 추가 텍스트나 문자입니다. 이 속성의 기본값은 "{0}."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모바일 디바이스에 표시 되는 메뉴를 동적 메뉴 항목의 서식을 지정 하는 텍스트를 삽입 하려면이 속성을 사용할 수 있습니다. <xref:System.Web.UI.WebControls.Menu> 컨트롤 고정 및 동적 메뉴 항목의 표시를 위한 템플릿을 지원 합니다. 모바일 디바이스에 대 한 템플릿은 무시 되므로이 속성을 사용 하면 문자 또는 템플릿을 사용 하지 않고 메뉴 항목에 서식을 적용 하는 텍스트를 추가할 수 있습니다.  
  
> [!NOTE]
>  이 속성을 사용 하는 경우 형식 일치를 위해 설정 해야 합니다 <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> 정적 및 동적 메뉴 항목 간에 동일 하 게 형식을 지정 하는 경우 속성입니다.  
  
 템플릿 서식 지정 및이 속성을 모두 적용 되며, 모바일 디바이스에 대 한 템플릿 형식이 무시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> 및 <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> 각 메뉴 항목 텍스트를 추가 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate DynamicItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate DynamicItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ DynamicItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>동적 메뉴에 대해 렌더링할 사용자 지정 콘텐츠가 들어 있는 템플릿을 가져오거나 설정합니다.</summary>
        <value>동적 메뉴에 대한 사용자 지정 콘텐츠가 들어 있는 <see cref="T:System.Web.UI.ITemplate" />입니다. 기본값은 null로, 이 속성이 설정되지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동적 메뉴에 대 한 기본 제공 렌더링을 사용 하는 대신 사용 하 여 동적 메뉴 항목에 대 한 고유한 모양과 느낌을 정의할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A> 속성입니다. 동적 메뉴 항목에 대 한 사용자 지정 템플릿을 지정 하려면 먼저 `<DynamicItemTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.Menu> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<DynamicItemTemplate>` 태그입니다. 사용 하 여 동적 메뉴의 스타일을 추가로 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>동적 메뉴에서 메뉴 항목의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>동적 메뉴에서 메뉴 항목의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> 동적 메뉴에서 메뉴 항목의 모양을 제어 하는 속성입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.MenuItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.MenuItemStyle> 개체 (예를 들어 `DynamicMenuItemStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `DynamicMenuItemStyle.ForeColor`).  
  
 동적 메뉴 항목에 대 한 스타일 속성은 다음 순서 대로 적용 됩니다.  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 컬렉션 또는 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> 동적 메뉴에 메뉴 항목에 대 한 연한 하늘색 배경색을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuDynamicMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/menudynamicmenuitemstyle/CS/MenuDynamicMenuItemStylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/menudynamicmenuitemstyle/VB/MenuDynamicMenuItemStylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ DynamicMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>동적 메뉴의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>동적 메뉴의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> 동적 메뉴의 모양을 제어 하는 속성입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.MenuItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.MenuItemStyle> 개체 (예를 들어 `DynamicMenuStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `DynamicMenuStyle.ForeColor`).  
  
 동적 메뉴 항목에 대 한 스타일 속성은 다음 순서 대로 적용 됩니다.  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 컬렉션 또는 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> 속성을 통해 동적 메뉴에 대 한 연한 하늘색 배경색을 지정 합니다.  
  
 [!code-aspx-csharp[MenuDynamicMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicMenuStyle/CS/menudynamicmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicMenuStyle/VB/menudynamicmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>동적 메뉴 항목에 하위 메뉴가 있음을 나타내는 데 사용되는 이미지에 대한 대체 텍스트를 가져오거나 설정합니다.</summary>
        <value>동적 메뉴 항목에 하위 메뉴가 있음을 나타내는 데 사용되는 이미지에 대한 대체 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동적 메뉴 항목에 하위 메뉴가 포함 되어 있으면 사용자가 메뉴를 확장할 수 있음을 나타내는에 이미지를 표시할 수 있습니다. 사용 된 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> 이 이미지에 대 한 대체 텍스트를 지정 하는 속성입니다. 지정 하는 텍스트 컨트롤을 보다 쉽게 액세스할 수 있도록 하는 데 사용할 수 있는 이미지의 설명 사용 하 여 보조 기술 디바이스를 제공 합니다.  
  
 두 가지 방법으로 이미지를 표시할 수 있습니다.  
  
-   설정 된 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> 속성을 `true` (기본값) 기본 제공 이미지를 사용할 수 있습니다.  
  
-   설정 된 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 속성을 사용자 지정 이미지를 지정 합니다.  
  
> [!NOTE]
>  이 속성의 기본 제공 이미지와 사용자 지정 이미지에 적용 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> 동적 메뉴 항목에 하위 메뉴가 있음을 나타내기 위해 사용 되는 이미지에 대 한 대체 텍스트를 지정 하는 속성입니다. 이 텍스트는 사용자 이미지 위로 마우스 포인터를 놓을 때 도구 설명으로 표시 됩니다.  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>동적 메뉴 항목에 하위 메뉴가 있을 때 동적 메뉴 항목에 표시되는 사용자 지정 이미지의 URL을 설정하거나 가져옵니다.</summary>
        <value>동적 메뉴 항목에 하위 메뉴가 있음을 나타내는 데 사용되는 이미지의 URL입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동적 메뉴 항목에 하위 메뉴가 포함 되어 있으면 사용자가 메뉴 항목 위로 마우스 포인터를 배치 하 여 메뉴를 확장할 수 있음을 나타내는에 이미지를 표시할 수 있습니다. 두 가지 방법으로이 이미지를 표시할 수 있습니다.  
  
-   설정 된 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> 속성을 `true` (기본값) 기본 제공 이미지를 사용할 수 있습니다.  
  
-   설정 된 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 속성을 사용자 지정 이미지를 지정 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 속성을 설정 하면 해당 이미지의 기본 제공 이미지를 재정의 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 속성이 설정 되지 않은 및 <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> 속성이 `false`, 이미지가 표시 되지 않습니다.  
  
> [!NOTE]
>  이 속성을 설정 하는 경우 백슬래시 대신 슬래시 (/)를 사용 (\\). 경로에 백슬래시를 사용 하는 경우 지정된 된 이미지가 표시 되지 않습니다.  
  
 설정 하 여 이미지에 대 한 대체 텍스트를 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> 메뉴 항목에 하위 메뉴가 있음을 나타내기 위해 동적 메뉴 항목을 표시할 사용자 지정 이미지를 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 선택한 동적 메뉴 항목의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>선택한 동적 메뉴 항목의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> 메뉴에서 사용자가 선택 하면 동적 메뉴 항목의 모양을 제어 하는 속성입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.MenuItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.MenuItemStyle> 개체 (예를 들어 `DynamicSelectedStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `DynamicSelectedStyle.ForeColor`).  
  
 동적 메뉴 항목에 대 한 스타일 속성은 다음 순서 대로 적용 됩니다.  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 컬렉션 또는 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> 선택한 동적 메뉴 항목에 대 한 연한 파랑색 배경이 색을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuDynamicSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicSelectedStyle/CS/menudynamicselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicSelectedStyle/VB/menudynamicselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>다른 메뉴 항목과 구분하기 위해 각 동적 메뉴 항목의 위쪽에 표시할 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>각 동적 메뉴 항목의 위쪽에 표시되는 구분 기호 이미지의 URL입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> 속성을 통해 각 동적 메뉴 항목의 위쪽에 표시할 선택적 사용자 지정 이미지를 지정 합니다. 이 이미지 메뉴 항목 사이의 구분 기호로 작동 하 고 줄의 이미지는 일반적으로 합니다.  
  
> [!NOTE]
>  설정 하 여 각 동적 메뉴 항목의 맨 아래에 구분 기호 이미지를 표시할 수도 있습니다는 <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> 속성을 각 동적 메뉴 항목의 맨 위에 있는 구분 기호 이미지를 표시 합니다.  
  
 [!code-aspx-csharp[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/CS/menudynamictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/VB/menudynamictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicVerticalOffset">
      <MemberSignature Language="C#" Value="public int DynamicVerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicVerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicVerticalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicVerticalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicVerticalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>부모 메뉴 항목을 기준으로 동적 메뉴를 세로 방향으로 이동할 픽셀 수를 가져오거나 설정합니다.</summary>
        <value>부모 메뉴 항목을 기준으로 동적 메뉴를 세로 방향으로 이동할 픽셀 수입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> 부모 메뉴 항목을 기준으로 동적 메뉴의 세로 위치를 조정 하는 속성입니다. 이 속성에 따라 다르게 동적 메뉴의 위치에 영향을 <xref:System.Web.UI.WebControls.Menu> 컨트롤이 가로 또는 세로로 표시 됩니다 (지정 된 대로 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> 속성). 다음 표에서 차이점을 설명 합니다.  
  
|방향|설명|  
|-----------------|-----------------|  
|가로|기본적으로 동적 메뉴에 공백 없이 부모 메뉴 항목 바로 아래 표시 됩니다. 이 속성을 설정 하면 동적 메뉴와 해당 부모 메뉴 항목 사이의 세로 간격을 제어 합니다.|  
|세로|기본적으로 동적 메뉴 항목 위쪽 가장자리에 맞춰진 부모 메뉴 항목 옆에 표시 됩니다. 이 속성을 설정 하면 동적 메뉴의 위치가이 기본 위치에서 세로로 이동 합니다.|  
  
> [!NOTE]
>  음의 방향에 동적 메뉴를 이동 하려면 음수 값으로이 속성을 설정할 수 있습니다. 가로 메뉴에 표시 하는 경우 음수 값을 사용 하면 동적 메뉴와 겹치는 부모 메뉴 항목입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> 부모 메뉴 항목의 위쪽에서 10 픽셀 x를 동적 메뉴 이동 하려면 속성입니다.  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Orientation" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="menu.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> 메서드를 호출하기 전에 메뉴 컨트롤에 데이터 바인딩이 필요한지와 올바른 데이터 소스 컨트롤이 지정되었는지를 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.Menu> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem FindItem (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.MenuItem FindItem(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItem (valuePath As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::MenuItem ^ FindItem(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindItem : string -&gt; System.Web.UI.WebControls.MenuItem" Usage="menu.FindItem valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">검색할 메뉴 항목에 대한 값 경로입니다.</param>
        <summary>지정한 값 경로에서 메뉴 항목을 검색합니다.</summary>
        <returns>지정한 값 경로에 있는 메뉴 항목을 나타내는 <see cref="T:System.Web.UI.WebControls.MenuItem" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.Menu.FindItem%2A> 검색 하는 메서드를 <xref:System.Web.UI.WebControls.MenuItem> 에서 개체를 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다. 검색할는 <xref:System.Web.UI.WebControls.MenuItem> 개체 메뉴 항목에 대 한 메뉴 경로 지정 해야 합니다. 메뉴 경로가 루트 메뉴 항목을 현재 메뉴 항목 까지의 경로 구성 하는 구분 기호로 분리 된 값의 문자열입니다. 구분 기호 문자를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.FindItem%2A> 에서 메뉴 항목을 검색 하는 메서드를 <xref:System.Web.UI.WebControls.Menu> 지정한 값 경로 있는 컨트롤.  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="menu.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤의 디자인 타임 상태를 검색합니다.</summary>
        <returns><see cref="T:System.Collections.IDictionary" /> 컨트롤의 디자인 타임 상태가 들어 있는 <see cref="T:System.Web.UI.WebControls.Menu" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Menu.GetDesignModeState%2A> 의 현재 디자인 타임 상태를 가져오는 데 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.Menu> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IncludeStyleBlock">
      <MemberSignature Language="C#" Value="public bool IncludeStyleBlock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeStyleBlock" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeStyleBlock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeStyleBlock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeStyleBlock : bool with get, set" Usage="System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Description("Determines whether or not to render the inline style block (only used in standards compliance mode)")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET에서 메뉴에 사용되는 스타일에 대한 CSS(CSS 스타일시트) 정의 블록을 렌더링해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>ASP.NET에서 메뉴에 사용되는 스타일에 대한 CSS 정의 블록을 렌더링해야 하는지 여부를 나타내는 값입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu> 컨트롤은 브라우저에서 해당 모양을 제어 하려면 CSS 스타일을 사용 합니다. 기본적으로 렌더링 된 `style` 사용 하는 CSS 클래스에 대 한 CSS 정의 포함 하는 요소입니다. 일반적으로이 속성을 설정 `false` 다음과 같은 경우에서:  
  
-   메뉴의 모양을 사용자 지정 하기 위해 사용자 고유의 CSS 정의 제공 해야 합니다. 다음 페이지의 CSS 정의 블록을 제공 하거나 정의 포함 하는 외부 CSS 파일에 대 한 링크를 포함 해야 합니다.  
  
-   기본 모양을 유지 하지만 별도 파일에서 생성 된 CSS 정의 유지 하려면 하려고 합니다. 파일 및 링크를 제공 해야 합니다.  
  
 이러한 상황 중 하나를 가져올 수 있습니다 기본 CSS 블록의 복사본을 합니다 <xref:System.Web.UI.WebControls.Menu> 컨트롤 속성을 설정 하 여 생성 `true`을 페이지를 실행 하 고 브라우저에서 페이지를 보고 합니다. 그런 다음 복사 고 브라우저에서 페이지 소스를 보고 하 고 별도 파일 또는 페이지 태그에 CSS 블록을 붙여 수 있습니다.  
  
 이 속성을 설정 하는 경우 `false`, 스타일 속성을 설정할 수 없습니다. 예를 들어, 추가할 수 없습니다는 `DynamicHoverStyle-ForeColor` 태그 또는 집합의 특성을 `DynamicHoverStyle.ForeColor` 코드에서 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemCollection ^ Items { System::Web::UI::WebControls::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.MenuItemCollection" Usage="System.Web.UI.WebControls.Menu.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> 컨트롤의 모든 메뉴 항목이 들어 있는 <see cref="T:System.Web.UI.WebControls.Menu" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> 컨트롤에 있는 모든 항목이 포함된 <see cref="T:System.Web.UI.WebControls.Menu" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.Menu.Items%2A> 가져오려는 속성 (컬렉션)를 <xref:System.Web.UI.WebControls.MenuItemCollection> 모든 메뉴가 포함 된 개체의 항목을 <xref:System.Web.UI.WebControls.Menu> 제어 합니다. 이 컬렉션은 신속 하 게 모든 메뉴 항목을 반복 하거나 특정 메뉴 항목에 액세스를 주로 사용 됩니다.  
  
 <xref:System.Web.UI.WebControls.Menu.Items%2A> 컬렉션을 사용 하 여 프로그래밍 방식으로 메뉴 항목을 관리할 수도 있습니다. 추가, 삽입, 제거 및 검색할 수 있습니다 <xref:System.Web.UI.WebControls.MenuItem> 컬렉션 개체입니다. 컬렉션에 대 한 업데이트에 자동으로 반영 됩니다는 <xref:System.Web.UI.WebControls.Menu> 후 다음 서버 왕복을 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.Items%2A> 메뉴를 이동 하는 컬렉션의 항목을 <xref:System.Web.UI.WebControls.Menu> 컨트롤.  
  
 [!code-aspx-csharp[MenuItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-aspx-vb[MenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ItemWrap">
      <MemberSignature Language="C#" Value="public bool ItemWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ItemWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ItemWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ItemWrap : bool with get, set" Usage="System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>메뉴 항목 텍스트를 줄 바꿈해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>메뉴 항목 텍스트를 줄 바꿈하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> 속성을 통해 각 메뉴 항목에 표시할 텍스트를 줄 바꿈할지 여부를 지정 합니다. 텍스트 공간이 부족 하면가 자동으로 분할 되 고 다음 줄에서 계속 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> 속성에서 텍스트 줄 바꿈을 사용을 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다.  
  
 [!code-aspx-csharp[MenuItemWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemWrap/CS/menuitemwrapcs.aspx#1)]
 [!code-aspx-vb[MenuItemWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemWrap/VB/menuitemwrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="LevelMenuItemStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelMenuItemStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelMenuItemStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelMenuItemStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 컨트롤에서 해당 수준을 기준으로 메뉴 항목에 적용되는 스타일 설정이 들어 있는 <see cref="T:System.Web.UI.WebControls.Menu" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 컨트롤에서 해당 수준을 기준으로 메뉴 항목에 적용되는 스타일 설정이 들어 있는 <see cref="T:System.Web.UI.WebControls.Menu" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 합니다 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 개별 스타일 속성 대신 컬렉션 (같은 <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>) 메뉴의 개별 수준에 있는 메뉴 항목의 스타일을 제어 합니다. 이 컬렉션에 포함 된 스타일의 메뉴 수준을 기준으로 메뉴 항목에 적용 됩니다. 컬렉션의 첫 번째 스타일 메뉴의 첫 번째 수준에 메뉴 항목의 스타일에 해당합니다. 컬렉션의 두 번째 스타일 메뉴 및 등의 두 번째 수준에 메뉴 항목의 스타일에 해당합니다. 이 컬렉션은 주로 내용을 스타일 탐색 메뉴를 생성 하는 특정 수준에서 메뉴 항목 하위 메뉴가 있는지 여부에 관계 없이 동일한 모양이 있어야 합니다.  
  
> [!NOTE]
>  특정 사용 하는 수준에 대 한 스타일을 정의 하는 경우는 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 모든 메뉴 항목 수준에서 설정 메뉴 항목에 대 한 스타일 컬렉션,이 재정의 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 에서 메뉴 항목에 스타일 설정을 적용할 컬렉션을 <xref:System.Web.UI.WebControls.Menu> 해당 수준을 기준으로 컨트롤입니다.  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSelectedStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSelectedStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelSelectedStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSelectedStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 컨트롤에서 해당 수준을 기준으로 선택한 메뉴 항목에 적용되는 스타일 설정이 들어 있는 <see cref="T:System.Web.UI.WebControls.Menu" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 컨트롤에서 해당 수준을 기준으로 선택한 메뉴 항목에 적용되는 스타일 설정이 들어 있는 <see cref="T:System.Web.UI.WebControls.Menu" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 안으로 컬렉션 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> 및 <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> 메뉴의 개별 수준에는 선택한 메뉴 항목의 스타일을 제어 하는 속성입니다. 이 컬렉션에 포함 된 스타일 메뉴 수준에 따라 선택한 메뉴 항목에 적용 됩니다. 컬렉션의 첫 번째 스타일 메뉴의 첫 번째 수준에서 병합된 된 메뉴 항목의 스타일에 해당합니다. 컬렉션의 두 번째 스타일 메뉴 및 등의 두 번째 수준에는 선택한 메뉴 항목의 스타일에 해당합니다. 이 컬렉션은 주로 내용을 스타일 탐색 메뉴를 생성 하는 특정 수준에서 메뉴 항목 하위 메뉴가 있는지 여부에 관계 없이 동일한 모양이 있어야 합니다.  
  
> [!NOTE]
>  특정 사용 하는 수준에 대 한 스타일을 정의 하는 경우는 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 재정의 컬렉션 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> 및 <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> 속성 수준에서.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 선택한 메뉴 항목의 스타일 설정을 적용할 컬렉션을 <xref:System.Web.UI.WebControls.Menu> 해당 수준을 기준으로 컨트롤입니다.  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSubMenuStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSubMenuStyles As SubMenuStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyleCollection ^ LevelSubMenuStyles { System::Web::UI::WebControls::SubMenuStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSubMenuStyles : System.Web.UI.WebControls.SubMenuStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 컨트롤에서 해당 수준을 기준으로 정적 메뉴의 하위 메뉴 항목에 적용되는 스타일 설정이 들어 있는 <see cref="T:System.Web.UI.WebControls.Menu" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 컨트롤에서 해당 수준을 기준으로 정적 메뉴의 하위 메뉴 항목에 적용되는 스타일 설정이 들어 있는 <see cref="T:System.Web.UI.WebControls.Menu" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 합니다 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 개별 스타일 속성 대신 컬렉션 (같은 <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>) 개별 수준에 있는 정적 메뉴에 표시 되는 정적 하위 메뉴 항목의 스타일을 제어 합니다. 이 컬렉션에 포함 된 스타일의 메뉴 수준을 기준으로 정적 메뉴 항목에 적용 됩니다. 컬렉션의 첫 번째 스타일 정적 메뉴에 표시 된 첫 번째 정적 하위 수준의 스타일에 해당 합니다. 컬렉션의 두 번째 스타일 수준 정적 메뉴에서 표시 하 고 두 번째 하위 메뉴의 스타일에 해당 합니다. 이 컬렉션은 주로 내용을 스타일 탐색 메뉴를 생성 하는 특정 수준에서 메뉴 항목 하위 메뉴가 있는지 여부에 관계 없이 동일한 모양이 있어야 합니다.  
  
> [!NOTE]
>  특정 사용 하는 수준에 대 한 스타일을 정의 하는 경우는 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 수준에서 모든 정적 하위 메뉴 항목 스타일 설정이 컬렉션,이 재정의 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 의 정적 메뉴의 표시 된 하위 메뉴 항목에 스타일 설정을 적용할 컬렉션을 <xref:System.Web.UI.WebControls.Menu> 해당 수준을 기준으로 컨트롤입니다.  
  
 [!code-aspx-csharp[MenuLevelSubMenuStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelSubMenuStyles/CS/menulevelsubmenustylescs.aspx#1)]
 [!code-aspx-vb[MenuLevelSubMenuStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelSubMenuStyles/VB/menulevelsubmenustylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="menu.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">복원할 컨트롤 상태를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <summary>유지해야 하는 <see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤에 있는 속성의 상태를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.Menu> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="menu.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">해당 컨트롤에 저장된 뷰 상태 값이 들어 있는 <see cref="T:System.Object" />입니다.</param>
        <summary>이전에 저장된 <see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤의 뷰 상태를 로드합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumDynamicDisplayLevels">
      <MemberSignature Language="C#" Value="public int MaximumDynamicDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumDynamicDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumDynamicDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumDynamicDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumDynamicDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>동적 메뉴에 대해 렌더링할 메뉴 수준의 수를 가져오거나 설정합니다.</summary>
        <value>동적 메뉴에 대해 렌더링할 메뉴 수준의 수입니다. 기본값은 3입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정적 메뉴의 여러 메뉴 수준을 설정 하 여 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 속성을 1 보다 큰 값입니다. 이 속성을 0 보다 큰 값으로 설정 하 여 동적 메뉴에 추가 수준을 표시할 수 있습니다. 예를 들어 정적 메뉴의 두 가지 메뉴 수준을 표시 하는 경우 (설정 하 여는 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 속성을 2로)로 설정한 다음이 속성을 3으로 세 개의 추가 메뉴 수준 동적 메뉴에 표시 됩니다. 모든 나머지 상위 메뉴 수준 (있는 경우)이 삭제 됩니다.  
  
> [!NOTE]
>  이 속성을 0으로 설정 하 여 지정 된 수준까지 플랫 메뉴가 표시 됩니다.는 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 동적 메뉴 없이 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> 속성을 1로 동적 메뉴에 표시할 메뉴 수준의 수를 제한 합니다. 루트 메뉴 수준만 표시 됩니다.  
  
 [!code-aspx-csharp[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/CS/menumaximumdynamicdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/VB/menumaximumdynamicdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" /> 속성이 0보다 작은 값으로 설정된 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemClick As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemClick;" />
      <MemberSignature Language="F#" Value="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤의 메뉴 항목을 클릭하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> 에서 메뉴 항목을 클릭 하면 이벤트가 발생 한 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다. 이 옵션을 사용 하면이 이벤트가 발생할 때마다 페이지의 다른 컨트롤과 동기화와 같은 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.MenuEventArgs> 개체 이벤트를 발생 하는 메뉴 항목의 속성에 액세스할 수 있는 이벤트 처리기에 전달 됩니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 이벤트 처리기를 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> 사용자가 선택한 메뉴 항목의 텍스트를 표시 하는 이벤트입니다.  
  
 [!code-aspx-csharp[MenuMenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMenuItemClick/CS/menumenuitemclickcs.aspx#1)]
 [!code-aspx-vb[MenuMenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMenuItemClick/VB/menumenuitemclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClickCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MenuItemClickCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MenuItemClickCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItemClickCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MenuItemClickCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItemClickCommandName : string" Usage="System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>명령 이름이 들어 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 읽기 전용 필드에는 메뉴 항목에 액세스 하는 데 사용 하는 명령 이름을 포함 합니다. 기본값은 ""를 클릭 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemDataBound As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤의 메뉴 항목이 데이터에 바인딩되면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> 메뉴 항목을 데이터에 바인딩될 때 이벤트가 발생 한 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다. 이 옵션을 사용 하면 사용자 지정 콘텐츠를 추가 하거나 렌더링 하기 전에,이 이벤트가 발생할 때마다 메뉴 항목을 수정 하는 등 사용자 지정 루틴을 수행 하는 이벤트 처리기를 제공할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.MenuEventArgs> 개체 이벤트를 발생 하는 메뉴 항목의 속성에 액세스할 수 있는 이벤트 처리기에 전달 됩니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 이벤트 처리기를 만드는 방법을 보여 줍니다 합니다 <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> 의 텍스트를 수정 하는 이벤트를 `Home` 메뉴 항목에 표시 되기 전에 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다.  
  
 [!code-aspx-csharp[MenuItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDataBound/CS/menumenuitemdataboundcs.aspx#1)]
 [!code-aspx-vb[MenuItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDataBound/VB/menumenuitemdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="menu.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤의 이벤트가 페이지의 UI(사용자 인터페이스) 서버 컨트롤 계층 구조에 전달되었는지 여부를 확인합니다.</summary>
        <returns>이벤트가 취소되었으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다. 기본값은 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 <xref:System.Web.UI.Control.OnBubbleEvent%2A>를 재정의합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.Menu> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="menu.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.DataBinding" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Control.DataBinding> 데이터에 바인딩될 때 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다. 이 메서드는 연관 된 모든 데이터 바인딩 논리를 수행 하는 컨트롤을 알립니다.  
  
 <xref:System.Web.UI.WebControls.Menu.OnDataBinding%2A> 메서드를 사용 하면 파생된 클래스가 대리자를 연결 하지 않고 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 확장 하는 경우 컨트롤 개발자가 일반적으로이 메서드는 사용 된 <xref:System.Web.UI.WebControls.Menu> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="menu.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드에 의해 알림이 표시를 하는 경우 웹 서버 컨트롤 만들기 및 인스턴스를 설정 하는 데 필요한 초기화 단계를 수행 해야 합니다. 서버 컨트롤의 수명 주기 동안이 단계에서는 컨트롤의 뷰 상태가 아직 채워집니다. 또한 자식 또는이 컨트롤에는 부모 인지에 관계 없이이 메서드가 호출 되 면 다른 서버 컨트롤을 액세스할 수 없습니다. 다른 서버 컨트롤은 생성 되 고 액세스할 준비가 되도록 보장 되지 않습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.Menu.OnInit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemClick (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemClick(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemClick (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemClick(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.Menu> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.Menu> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemDataBound (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemDataBound(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemDataBound (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemDataBound(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.Menu> 시키려면 컨트롤은 <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.Menu> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="menu.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.Menu> 시키려면 컨트롤은 <xref:System.Web.UI.Control.PreRender> 이벤트입니다. 확장할 때 주로 컨트롤 개발자가 사용 됩니다는 <xref:System.Web.UI.WebControls.Menu> 클래스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Orientation Orientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Web.UI.WebControls.Orientation with get, set" Usage="System.Web.UI.WebControls.Menu.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤을 렌더링할 방향을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Orientation" /> 열거형 값 중 하나입니다. 기본값은 <see langword="Orientation.Vertical" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> 속성을 렌더링할 방향을 지정 하는 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다. 다음 표에서 사용할 수 있는 방법을 설명 합니다.  
  
|방향|설명|  
|-----------------|-----------------|  
|`Orientation.Horizontal`|<xref:System.Web.UI.WebControls.Menu> 컨트롤을 가로로 표시 합니다.|  
|`Orientation.Vertical`|<xref:System.Web.UI.WebControls.Menu> 컨트롤을 세로 방향으로 렌더링 합니다.|  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> 가로 메뉴를 표시 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuOrientation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuOrientation/CS/menuorientationcs.aspx#1)]
 [!code-aspx-vb[MenuOrientation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuOrientation/VB/menuorientationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤에서 메뉴 항목의 경로를 구분하는 데 사용되는 문자를 가져오거나 설정합니다.</summary>
        <value>메뉴 항목의 경로를 구분하는 데 사용되는 문자입니다. 기본값은 슬래시 기호 (/).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 각 메뉴 항목 (나타내는 <xref:System.Web.UI.WebControls.MenuItem> 개체)에 <xref:System.Web.UI.WebControls.Menu> 컨트롤에는 <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> 메뉴 항목의 위치를 지정 하는 속성입니다. 값 경로 루트 메뉴 항목을 현재 메뉴 항목 까지의 경로 구성 하는 구분 기호로 분리 된 값의 문자열입니다. 사용 된 <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> 메뉴 경로에서 값을 구분 하는 데 사용 되는 구분 문자를 지정 하는 속성입니다. 이 값은 개별 값에 대 한 구문 분석 하는 경우에 일반적으로 사용 됩니다.  
  
 표시 되는 텍스트에 따라는 <xref:System.Web.UI.WebControls.Menu> 컨트롤, 구분 기호 문자 충돌을 방지 하기 위해 변경 해야 할 수 있습니다. 예를 들어 쉼표로 구분 기호 문자를 설정 하는 경우 표시 된 텍스트를 없어야 쉼표가; 그렇지 않은 경우는 <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> 속성을 정확 하 게 분석할 수 없습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> 쉼표로 메뉴 항목의 값 경로 대 한 구분 기호 문자를 변경할 속성입니다.  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="menu.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스의 항목을 <see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤의 메뉴 항목에 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.PerformDataBinding%2A> 메서드는 호출 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.Menu> 데이터 원본에 있는 항목을 바인딩할 컨트롤은 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected internal virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="menu.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">이벤트 처리기에 전달된 이벤트 인수를 나타내는 <see cref="T:System.String" />입니다.</param>
        <summary>서버에 폼이 게시될 때 발생하는 이벤트를 처리합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">웹 페이지에 콘텐츠를 쓰는 데 사용되는 출력 스트림을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>클라이언트 브라우저에서 메뉴 컨트롤을 렌더링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">디바이스별 출력을 구성하고 렌더링하는 메서드가 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>태그 특성을 추가하고 브라우저나 디바이스로 나가는 출력 스트림에 컨트롤의 열기 태그를 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> 메서드 추가 태그 특성 및 클라이언트 브라우저에 대 한 응답 스트림에 내보내지는 출력 스트림에 컨트롤의 여는 태그의 태그를 씁니다.  
  
 재정의 <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> 사용자 지정 동작을 구현 하려는 경우 예를 들어 여러 태그를 하기 전에 응답 스트림에 쓸 콘텐츠를 같은 컨트롤 `<table><tr><td>`합니다. 이 메서드를 재정의 합니다 <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> 메서드를 추가 합니다 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 속성입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.Menu> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">디바이스별 출력을 구성하고 렌더링하는 메서드가 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>이 멤버는 <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />를 재정의합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> 시작 및 끝 태그 사이 있는 컨트롤의 콘텐츠를 렌더링 하는 방법입니다. 이 메서드의 기본 구현은 모든 자식 컨트롤을 렌더링 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">디바이스별 출력을 구성하고 렌더링하는 메서드가 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>최종 태그 작업을 수행하고 브라우저나 디바이스로 내보내지는 출력 스트림에 컨트롤의 HTML 닫기 태그를 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 재정의 <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A?displayProperty=nameWithType> 렌더링할 <xref:System.Web.UI.WebControls.Menu> 하위 메뉴 및 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 속성입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.Menu> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuRenderingMode RenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.MenuRenderingMode RenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingMode As MenuRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuRenderingMode RenderingMode { System::Web::UI::WebControls::MenuRenderingMode get(); void set(System::Web::UI::WebControls::MenuRenderingMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingMode : System.Web.UI.WebControls.MenuRenderingMode with get, set" Usage="System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤이 HTML <see langword="table" /> 요소 및 인라인 스타일, 또는 <see langword="listitem" /> 요소 및 CSS 스타일시트 스타일을 렌더링하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤이 HTML <see langword="table" /> 요소 및 인라인 스타일, 또는 <see langword="listitem" /> 요소 및 CSS 스타일시트 스타일을 렌더링하는지 여부를 지정하는 값입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.MenuRenderingMode.Default" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Web.UI.WebControls.Menu.RenderingMode%2A> 속성 메뉴 컨트롤에 대 한 태그를 렌더링 하는 방법을 결정 합니다 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다.  
  
 ASP.NET 3.5 및 이전 버전의 <xref:System.Web.UI.WebControls.Menu> 컨트롤은 HTML `table` 요소 및 인라인 스타일 브라우저에서 메뉴의 모양을 지정할 수입니다. ASP.NET 4 및 이후 버전에서는 기본적으로는 <xref:System.Web.UI.WebControls.Menu> 컨트롤은 HTML `listitem` 요소 및 연계 스타일 (CSS) 스타일 시트입니다.  
  
 이 속성을 설정 하지 않으면 합니다 <xref:System.Web.UI.WebControls.Menu> 의해 표시 되는 ASP.NET 버전에 적절 한 태그를 렌더링 하는 컨트롤을 <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType> 속성입니다. <xref:System.Web.UI.WebControls.Menu> 컨트롤은 다음 규칙을 사용 합니다.  
  
-   경우의 값을 <xref:System.Web.UI.Control.RenderingCompatibility%2A> 속성은 `3.5`, <xref:System.Web.UI.WebControls.Menu> 컨트롤은 HTML `table` 요소 및 인라인 스타일입니다.  
  
-   경우의 값을 <xref:System.Web.UI.Control.RenderingCompatibility%2A> 속성은 `4.0` 이상를 <xref:System.Web.UI.WebControls.Menu> 컨트롤은 HTML `listitem` 요소 및 CSS 스타일.  
  
 이 속성은 이전 버전과 호환성을 위해 제공 됩니다. 경우는 <xref:System.Web.UI.Control.RenderingCompatibility%2A> 하지만 속성 컨트롤은 ASP.NET 4와 호환 이상는 HTML을 생성 하는 것을 나타냅니다는 <xref:System.Web.UI.WebControls.Menu> 이전 동작을 사용 하는 경우 예외를 제어이 속성을 설정할 수 있습니다, <xref:System.Web.UI.WebControls.MenuRenderingMode.Table>합니다. 예를 들어, 오른쪽에서 왼쪽으로 텍스트를 표시 하는 웹 페이지가 있는 수 하려는 경우이 속성을 설정 <xref:System.Web.UI.WebControls.MenuRenderingMode.Table> 일부 브라우저에 표시 되지 않으므로 <xref:System.Web.UI.WebControls.MenuRenderingMode.List> 오른쪽에서 왼쪽 텍스트에 대 한 제대로 모드 태그입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="menu.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>유지해야 하는 <see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤에 있는 속성의 상태를 저장합니다.</summary>
        <returns>컨트롤의 상태 데이터가 들어 있는 개체입니다. 상태가 변경되지 않은 경우 이 메서드에서 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성의 상태를 저장 하려면이 메서드는를 <xref:System.Web.UI.WebControls.Menu> 경우에 유지 해야 하는 컨트롤을 <xref:System.Web.UI.Control.EnableViewState%2A> 속성이 `false`. <xref:System.Web.UI.WebControls.Menu.SaveControlState%2A> 메서드 (예: 인덱스 또는 키워드) 컨트롤의 작업에 대 한 필수 이며 컨트롤의 뷰 상태 데이터와 별도로 상태 데이터와 관련이 있습니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.Menu> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="menu.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" />컨트롤의 상태를 저장합니다.</summary>
        <returns><see cref="T:System.Object" /> 컨트롤의 상태가 들어 있는 <see cref="T:System.Web.UI.WebControls.Menu" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollDownImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollDownImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>아래쪽으로 스크롤하여 추가 메뉴 항목을 볼 수 있음을 나타내기 위해 동적 메뉴에 표시되는 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>아래쪽으로 스크롤하여 추가 메뉴 항목을 볼 수 있음을 나타내기 위해 동적 메뉴에 표시되는 이미지의 URL입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은.NET 4.0 렌더링 모드에서 지원 되지 않습니다. 이 속성이 필요한 경우에 페이지의 코드에서 다음을 추가 하 여.NET 3.5 렌더링 모드를 메뉴를 설정할 수 있습니다.  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 사용 된 <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> 추가 메뉴 항목에 대 한 사용자를 아래쪽으로 스크롤하여 수 있음을 나타내기 위해 각 동적 메뉴의 아래쪽에 표시할 사용자 지정 이미지를 지정 하는 속성입니다.  
  
> [!NOTE]
>  이 속성은 설정 되지 않은 경우, 내부, 기본 이미지가 사용 됩니다.  
  
 설정 하 여 이미지에 대 한 대체 텍스트를 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> 추가 메뉴 항목에 대 한 동적 메뉴에 사용자를 아래쪽으로 스크롤하여 수 있음을 나타내는 사용자 지정 이미지를 표시 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollDownText">
      <MemberSignature Language="C#" Value="public string ScrollDownText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> 속성에 지정된 이미지에 대한 대체 텍스트를 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> 속성에 지정된 이미지에 대한 대체 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은.NET 4.0 렌더링 모드에서 지원 되지 않습니다. 이 속성이 필요한 경우에 페이지의 코드에서 다음을 추가 하 여.NET 3.5 렌더링 모드를 메뉴를 설정할 수 있습니다.  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 메뉴의 맨 아래에서 추가 항목에 포함 되어 있으면 동적 메뉴 항목 이미지는 사용자 추가 메뉴 항목 보기까지 아래로 스크롤하여 수 있음을 나타내기 위해 표시 됩니다. 사용 된 <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> 이 이미지에 대 한 대체 텍스트를 지정 하는 속성입니다. 지정 하는 텍스트 컨트롤을 보다 쉽게 액세스할 수 있도록 하는 데 사용할 수 있는 이미지의 설명 사용 하 여 보조 기술 디바이스를 제공 합니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> 추가 메뉴 항목에 대 한 동적 메뉴에 사용자를 아래쪽으로 스크롤하여 수 있음을 나타내기 위해 사용 되는 이미지에 대 한 대체 텍스트를 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollUpImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>위쪽으로 스크롤하여 추가 메뉴 항목을 볼 수 있음을 나타내기 위해 동적 메뉴에 표시되는 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>위쪽으로 스크롤하여 추가 메뉴 항목을 볼 수 있음을 나타내기 위해 동적 메뉴에 표시되는 이미지의 URL입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은.NET 4.0 렌더링 모드에서 지원 되지 않습니다. 이 속성이 필요한 경우에 페이지의 코드에서 다음을 추가 하 여.NET 3.5 렌더링 모드를 메뉴를 설정할 수 있습니다.  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 사용 된 <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> 속성을 통해 사용자는 추가 메뉴 항목이 위쪽으로 스크롤하여 수 있음을 나타내기 위해 각 동적 메뉴의 위쪽에 표시할 사용자 지정 이미지를 지정 합니다.  
  
> [!NOTE]
>  이 속성은 설정 되지 않은 경우, 내부, 기본 이미지가 사용 됩니다.  
  
 설정 하 여 이미지에 대 한 대체 텍스트를 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> 추가 메뉴 항목에 대 한 동적 메뉴에 사용자를 스크롤할 수를 나타내는 사용자 지정 이미지를 표시 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpText">
      <MemberSignature Language="C#" Value="public string ScrollUpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> 속성에 지정된 이미지에 대한 대체 텍스트를 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> 속성에 지정된 이미지에 대한 대체 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은.NET 4.0 렌더링 모드에서 지원 되지 않습니다. 이 속성이 필요한 경우에 페이지의 코드에서 다음을 추가 하 여.NET 3.5 렌더링 모드를 메뉴를 설정할 수 있습니다.  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 메뉴의 맨 위에 있는 추가 항목에 포함 되어 있으면 동적 메뉴 항목 이미지는 추가 메뉴 항목 보기까지 스크롤하여 수 있음을 나타내기 위해 표시 됩니다. 사용 된 <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> 이 이미지에 대 한 대체 텍스트를 지정 하는 속성입니다. 지정 하는 텍스트 컨트롤을 보다 쉽게 액세스할 수 있도록 하는 데 사용할 수 있는 이미지의 설명 사용 하 여 보조 기술 디바이스를 제공 합니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> 사용자 추가 메뉴 항목에 대 한 동적 메뉴에 스크롤하여 수 있음을 나타내기 위해 사용 되는 이미지에 대 한 대체 텍스트를 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItem As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ SelectedItem { System::Web::UI::WebControls::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>선택한 메뉴 항목을 가져옵니다.</summary>
        <value>병합된 메뉴 항목을 나타내는 <see cref="T:System.Web.UI.WebControls.MenuItem" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> 속성을 사용자가 선택한 메뉴 항목을 확인 합니다.  
  
> [!NOTE]
>  가기로 확인할 수도 있습니다 선택한 메뉴 항목의 텍스트를 사용 하 여 직접 여 <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> 속성입니다.  
  
 사용자가 메뉴 항목을 선택 하는 경우를 <xref:System.Web.UI.WebControls.Menu> 컨트롤을 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> 이벤트가 발생 한 이벤트 처리기를 제공 하 여 사용자 지정 루틴을 수행할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> 속성에서 선택한 메뉴 항목을 확인 하는 <xref:System.Web.UI.WebControls.Menu> 컨트롤입니다.  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>선택한 메뉴 항목의 값을 가져옵니다.</summary>
        <value>선택한 메뉴 항목의 값입니다. 기본값은 <see cref="F:System.String.Empty" />로, 현재 선택된 메뉴 항목이 없음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> 바로 가기 선택한 메뉴 항목의 텍스트를 확인할 속성입니다. 선택한 메뉴 항목의 다른 속성에 액세스 하려면 사용 된 <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> 속성에서 선택한 메뉴 항목의 텍스트를 확인 하는 <xref:System.Web.UI.WebControls.Menu> 제어 합니다.  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="menu.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">컨트롤을 표시하는 상태 데이터가 들어 있는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤에 대한 디자인 타임 데이터를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Web.UI.Control.SetDesignModeState%2A>를 재정의합니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.Menu> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemDataBound">
      <MemberSignature Language="C#" Value="protected void SetItemDataBound (System.Web.UI.WebControls.MenuItem node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataBound(class System.Web.UI.WebControls.MenuItem node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataBound (node As MenuItem, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataBound(System::Web::UI::WebControls::MenuItem ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataBound : System.Web.UI.WebControls.MenuItem * bool -&gt; unit" Usage="menu.SetItemDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">설정할 <see cref="T:System.Web.UI.WebControls.MenuItem" />입니다.</param>
        <param name="dataBound">노드를 데이터 바인딩된 것으로 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정한 값을 사용하여 지정한 <see cref="P:System.Web.UI.WebControls.MenuItem.DataBound" /> 개체의 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 속성을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataBound%2A> 메서드는 파생된 클래스에서 사용 하 여 설정 도우미 메서드를 <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> 지정 된 속성 <xref:System.Web.UI.WebControls.MenuItem> 개체.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataItem">
      <MemberSignature Language="C#" Value="protected void SetItemDataItem (System.Web.UI.WebControls.MenuItem node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataItem(class System.Web.UI.WebControls.MenuItem node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataItem (node As MenuItem, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataItem(System::Web::UI::WebControls::MenuItem ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataItem : System.Web.UI.WebControls.MenuItem * obj -&gt; unit" Usage="menu.SetItemDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">설정할 <see cref="T:System.Web.UI.WebControls.MenuItem" />입니다.</param>
        <param name="dataItem"><see cref="T:System.Web.UI.WebControls.MenuItem" />의 데이터 항목입니다.</param>
        <summary>지정한 값을 사용하여 지정한 <see cref="P:System.Web.UI.WebControls.MenuItem.DataItem" /> 개체의 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 속성을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataItem%2A> 메서드는 파생된 클래스에서 사용 하 여 설정 도우미 메서드를 <xref:System.Web.UI.WebControls.MenuItem.DataItem%2A> 지정 된 속성 <xref:System.Web.UI.WebControls.MenuItem> 개체.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataPath">
      <MemberSignature Language="C#" Value="protected void SetItemDataPath (System.Web.UI.WebControls.MenuItem node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataPath(class System.Web.UI.WebControls.MenuItem node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataPath (node As MenuItem, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataPath(System::Web::UI::WebControls::MenuItem ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataPath : System.Web.UI.WebControls.MenuItem * string -&gt; unit" Usage="menu.SetItemDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">설정할 <see cref="T:System.Web.UI.WebControls.MenuItem" />입니다.</param>
        <param name="dataPath"><see cref="T:System.Web.UI.WebControls.MenuItem" />의 데이터 항목입니다.</param>
        <summary>지정한 값을 사용하여 지정한 <see cref="P:System.Web.UI.WebControls.MenuItem.DataPath" /> 개체의 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 속성을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataPath%2A> 메서드는 파생된 클래스에서 사용 하 여 설정 도우미 메서드를 <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A> 지정 된 속성 <xref:System.Web.UI.WebControls.MenuItem> 개체.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>링크 목록을 건너뛰는 기능을 제공하기 위해 화면 판독기가 읽은 숨겨진 이미지에 대한 대체 텍스트를 가져오거나 설정합니다.</summary>
        <value>링크 목록을 건너뛰는 기능을 제공하기 위해 화면 판독기가 읽은 숨겨진 이미지에 대한 대체 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 링크 목록을 건너뛰는 기능을 제공 하려면 화면 판독기가 읽은 숨겨진된 이미지에 대 한 대체 텍스트를 지정 하는 속성입니다. 텍스트를 지정 하는 숨겨진된 설명은 사용 하 여 보조 기술 디바이스 건너뛸 컨트롤을 보다 쉽게 액세스할 수 있도록 하는 데 사용할 수 있는 링크 이미지를 제공 합니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.Menu> 컨트롤을 제공 합니다 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 전체 컨트롤을 화면 판독기에서 건너뛸 수에 대 한 방법으로 속성입니다. 경우는 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 속성을 설정 하면 사용자 컨트롤의 끝으로 이동 하는 옵션 제공 대체 텍스트를 사용 하 여 보이지 않는 이미지로 렌더링 됩니다. 화면 판독기 대체 텍스트를 소리내어 읽어주는 속도, 및 이미지는 픽셀이 하나만 공간을 차지 합니다. 설정 페이지의 렌더링을 픽셀 단위의 정밀한 제어를 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 속성을 빈 문자열 ("") 메뉴 표시 하지 않으려면 사용자 고유의 메커니즘을 제공 합니다. <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 기본적으로 속성을 빈 문자열로 설정 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> 링크 목록을 건너뛰는 기능을 제공 하려면 화면 판독기가 읽은 숨겨진된 이미지에 대 한 대체 텍스트를 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuSkipLinkText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSkipLinkText/CS/menuskiplinktextcs.aspx#1)]
 [!code-aspx-vb[MenuSkipLinkText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSkipLinkText/VB/menuskiplinktextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>각 정적 메뉴 항목의 아래쪽에 구분 기호로 표시되는 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>각 정적 메뉴 항목의 아래쪽에 구분 기호로 표시되는 이미지의 URL입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> 사용자 지정 이미지를 각 정적 메뉴의 아래쪽에 표시 된 항목을 지정 하는 속성 메뉴 항목 사이의 구분 기호로 작동 합니다.  
  
> [!NOTE]
>  설정 하 여 각 정적 메뉴 항목의 맨 위에 있는 구분 기호 이미지를 표시할 수도 있습니다는 <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> 속성을 통해 각 정적 메뉴 항목의 맨 아래에 표시 하는 구분 기호 이미지를 지정 합니다.  
  
 [!code-aspx-csharp[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/CS/menustaticbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/VB/menustaticbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticDisplayLevels">
      <MemberSignature Language="C#" Value="public int StaticDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StaticDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StaticDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StaticDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정적 메뉴에 표시할 메뉴 수준의 수를 가져오거나 설정합니다.</summary>
        <value>정적 메뉴에 표시할 메뉴 수준의 수입니다. 기본값은 1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 정적 메뉴에 표시할 메뉴 수준의 수를 지정 하는 속성입니다. 지정 된 값을 아래 메뉴 각계 동적 메뉴에 표시 됩니다. 설정 하 여 동적 메뉴에 표시할 메뉴 수준의 수를 제한할 수도 있습니다는 <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 속성을 정적 메뉴의 처음 두 메뉴 수준을 표시 합니다.  
  
 [!code-aspx-csharp[MenuStaticDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticDisplayLevels/CS/menustaticdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuStaticDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticDisplayLevels/VB/menustaticdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 값이 1보다 작은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="StaticEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool StaticEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaticEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaticEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정적 메뉴 항목에 하위 메뉴가 있음을 나타내는 기본 제공 이미지를 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>하위 메뉴가 있는 정적 메뉴 항목의 기본 제공 이미지를 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정적 메뉴 항목에 하위 메뉴가 포함 되어 있으면 사용자가 메뉴를 확장할 수 있음을 나타내는에 이미지를 표시할 수 있습니다. 두 가지 방법으로이 이미지를 표시할 수 있습니다.  
  
-   설정 된 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 속성을 `true` (기본값) 기본 제공 이미지를 사용할 수 있습니다.  
  
-   설정 된 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 속성을 사용자 지정 이미지를 지정 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 속성을 설정 하면 해당 이미지의 값에 관계 없이 기본 제공 이미지를 재정의 합니다 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 속성입니다.  
  
> [!NOTE]
>  경우는 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 속성이 설정 되지 않은 및 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 속성이 `false`, 이미지가 표시 되지 않습니다.  
  
 설정 하 여 이미지에 대 한 대체 텍스트를 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 정적 메뉴 항목에 하위 메뉴가 있음을 나타내는 이미지를 숨기려면 속성입니다. <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 속성을 빈 문자열로 설정 해야 ("") 이미지를 숨길 수 있습니다.  
  
 [!code-aspx-csharp[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/CS/menustaticenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/VB/menustaticenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StaticHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StaticHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StaticHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터를 동적 메뉴 항목의 위로 가져갈 때 표시되는 모양을 설정할 수 있는 <see cref="T:System.Web.UI.WebControls.Style" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>마우스 포인터를 정적 메뉴 항목의 위로 가져갈 때 표시되는 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.Style" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> 마우스 포인터 위로 가져갈 때 정적 메뉴 항목의 모양을 제어 하는 속성입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.Style> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.Style> 개체 (예를 들어 `StaticHoverStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `StaticHoverStyle.ForeColor`).  
  
 정적 메뉴 항목에 대 한 스타일 속성은 다음 순서 대로 적용 됩니다.  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 컬렉션 또는 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> 위에 마우스 포인터를 가져갈 때 정적 메뉴 항목의 배경색을 연한 하늘색 변경할 속성입니다.  
  
 [!code-aspx-csharp[MenuStaticHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticHoverStyle/CS/menustatichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticHoverStyle/VB/menustatichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemFormatString">
      <MemberSignature Language="C#" Value="public string StaticItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정적으로 표시되는 모든 메뉴 항목과 함께 표시되는 추가 텍스트를 가져오거나 설정합니다.</summary>
        <value>모든 메뉴 항목과 함께 표시되는 추가 텍스트나 문자입니다. 이 속성의 기본값은 "{0}."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메뉴에서 정적 메뉴 항목의 서식을 지정할 텍스트를 삽입 하려면이 속성을 사용할 수 있습니다. 모바일 디바이스의 경우 특히 유용합니다. <xref:System.Web.UI.WebControls.Menu> 컨트롤은 정적 및 동적 메뉴 항목의 표시를 위한 템플릿을 지원 하지만 템플릿을 모바일 디바이스에서 무시 됩니다. 이 속성을 사용 하 여 문자 또는 텍스트를 추가 하 고 템플릿을 사용 하지 않고 모바일 및 데스크톱 디바이스에 대 한 메뉴 항목에 서식을 적용할 수 있습니다.  
  
> [!NOTE]
>  이 속성을 사용 하는 경우 형식 일치를 위해 설정 해야 합니다 <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> 정적 및 동적 메뉴 항목 간에 동일 하 게 형식을 지정 하는 경우 속성입니다.  
  
 템플릿 서식 지정 및이 속성을 모두 적용 되며, 모바일 디바이스에 대 한 템플릿 형식이 무시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> 및 <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> 각 메뉴 항목 텍스트를 추가 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate StaticItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StaticItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ StaticItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정적 메뉴에 대해 렌더링할 사용자 지정 콘텐츠가 들어 있는 템플릿을 가져오거나 설정합니다.</summary>
        <value>정적 메뉴에 대한 사용자 지정 콘텐츠가 들어 있는 <see cref="T:System.Web.UI.ITemplate" />입니다. 기본값은 null로, 이 속성이 설정되지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정적 메뉴에 대 한 기본 제공 렌더링을 사용 하는 대신 사용 하 여 정적 메뉴 항목에 대 한 고유한 사용자 인터페이스 (UI)를 정의할 수는 <xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A> 속성입니다. 정적 메뉴 항목에 대 한 사용자 지정 템플릿을 지정 하려면 먼저 `<StaticTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.Menu> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<StaticTemplate>` 태그입니다. 사용 하 여 정적 메뉴의 스타일을 추가로 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정적 메뉴에서 메뉴 항목의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>정적 메뉴에서 메뉴 항목의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> 정적 메뉴에서 메뉴 항목의 모양을 제어 하는 속성입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.MenuItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.MenuItemStyle> 개체 (예를 들어 `StaticMenuItemStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `StaticMenuItemStyle.ForeColor`).  
  
 정적 메뉴 항목에 대 한 스타일 속성은 다음 순서 대로 적용 됩니다.  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 컬렉션 또는 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> 속성을 정적 메뉴에서 메뉴 항목에 대 한 연한 하늘색 배경색을 지정 합니다.  
  
 [!code-aspx-csharp[MenuStaticMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuItemStyle/CS/menustaticmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuItemStyle/VB/menustaticmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ StaticMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정적 메뉴의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>정적 메뉴의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> 정적 메뉴의 모양을 제어 하는 속성입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.MenuItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.MenuItemStyle> 개체 (예를 들어 `StaticMenuStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `StaticMenuStyle.ForeColor`).  
  
 정적 메뉴 항목에 대 한 스타일 속성은 다음 순서 대로 적용 됩니다.  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 컬렉션 또는 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> 속성 전체 정적 메뉴에 대 한 연한 하늘색 배경이 색을 지정 합니다.  
  
 [!code-aspx-csharp[MenuStaticMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuStyle/CS/menustaticmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuStyle/VB/menustaticmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정적 메뉴 항목에 하위 메뉴가 있음을 나타내는 데 사용되는 팝업 이미지에 대한 대체 텍스트를 가져오거나 설정합니다.</summary>
        <value>팝업 이미지에 대한 대체 텍스트입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정적 메뉴 항목에 하위 메뉴가 포함 되어 있으면 사용자가 메뉴를 확장할 수 있음을 나타내는에 이미지를 표시할 수 있습니다. 사용 된 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> 이 이미지에 대 한 대체 텍스트를 지정 하는 속성입니다.  
  
 두 가지 방법으로 이미지를 표시할 수 있습니다.  
  
-   설정 된 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 속성을 `true` (기본값) 기본 제공 이미지를 사용할 수 있습니다.  
  
-   설정 된 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 속성을 사용자 지정 이미지를 지정 합니다.  
  
> [!NOTE]
>  이 속성의 기본 제공 이미지와 사용자 지정 이미지에 적용 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> 정적 메뉴 항목에 하위 메뉴가 있음을 나타내기 위해 사용 되는 이미지에 대 한 대체 텍스트를 지정 하는 속성입니다. 이 텍스트는 사용자 이미지 위로 마우스 포인터를 놓을 때 도구 설명으로 표시 됩니다.  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정적 메뉴 항목에 하위 메뉴가 있음을 나타내기 위해 표시되는 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>정적 메뉴 항목에 하위 메뉴가 있음을 나타내기 위해 표시되는 이미지의 URL입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정적 메뉴 항목에 하위 메뉴가 포함 되어 있으면 사용자가 메뉴를 확장할 수 있음을 나타내는에 이미지를 표시할 수 있습니다. 두 가지 방법으로이 이미지를 표시할 수 있습니다.  
  
-   설정 된 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 속성을 `true` (기본값) 기본 제공 이미지를 사용할 수 있습니다.  
  
-   설정 된 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 속성을 사용자 지정 이미지를 지정 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 속성을 설정 하면 해당 이미지의 값에 관계 없이 기본 제공 이미지를 재정의 합니다 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 속성입니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 속성이 설정 되지 않은 및 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> 속성이 `false`, 이미지가 표시 되지 않습니다.  
  
> [!NOTE]
>  이 속성을 설정 하는 경우 백슬래시 대신 슬래시 (/)를 사용 (\\). 경로에 백슬래시를 사용 하는 경우 지정된 된 이미지가 표시 되지 않습니다.  
  
 설정 하 여 이미지에 대 한 대체 텍스트를 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> 메뉴 항목에 하위 메뉴가 경우 정적 메뉴 항목을 표시 하려면 사용자 지정 이미지를 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정적 메뉴에서 사용자가 선택한 메뉴 항목의 모양을 설정하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>정적 메뉴에서 메뉴 항목의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> 정적 메뉴에서 사용자가 선택한 메뉴 항목의 모양을 제어 하는 속성입니다. 이 속성은 읽기 전용입니다. 그러나의 속성을 설정할 수는 <xref:System.Web.UI.WebControls.MenuItemStyle> 개체를 반환 합니다. 속성 형식에서 선언적으로 설정할 수 있습니다 `Property-Subproperty`, 여기서 `Subproperty` 속성인 합니다 <xref:System.Web.UI.WebControls.MenuItemStyle> 개체 (예를 들어 `StaticSelectedStyle-ForeColor`). 형식에서 속성을 프로그래밍 방식으로 설정할 수도 있습니다 `Property.Subproperty` (예를 들어 `StaticSelectedStyle.ForeColor`).  
  
 정적 메뉴 항목에 대 한 스타일 속성은 다음 순서 대로 적용 됩니다.  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 컬렉션 또는 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. 경우는 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> 컬렉션이 정의 된, 다른 메뉴 항목 스타일 속성을 재정의이 이번에 적용 됩니다.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
> [!IMPORTANT]
>  주요 변경 내용 아래입니다.  
  
 .NET Framework 4.0을 정의할 때 하기 전에 `<asp:Menu>` 컨트롤.aspx 파일에서 사용자가 설정할 수 있습니다는 `StaticSelectedStyle-CssClass` 선택한 컨트롤 항목의 CSS 클래스를 설정 하는 속성입니다. 예를 들어, 사용자는 아래와 같이 메뉴 컨트롤을 가질 수 있습니다.  
  
```  
<asp:Menu ID="Menu1" runat="server" Orientation="Horizontal"   
    StaticMenuItemStyle-CssClass="MenuItem"  
    StaticSelectedStyle-CssClass="MenuItem_selected"  
    OnMenuItemClick="Menu1_MenuItemClick" Style="margin-bottom: 0px" EnableTheming="True" ClientIDMode="Static">  
    <Items>  
        <asp:MenuItem Text="item_0" Value="0" Selected="True"></asp:MenuItem>  
        <asp:MenuItem Text="itme_1" Value="1"></asp:MenuItem>  
    </Items>  
</asp:Menu>  
```  
  
 및 메뉴 컨트롤으로 렌더링 됩니다.  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem MenuItem_selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
```  
  
 그러나.NET Framework 4.0 이상 버전에서는 선택한 메뉴 항목은로 설정 합니다 `selected` CSS 클래스에서 지정한 클래스 대신 항상 `StaticSelectedStyle-CssClass`합니다. 따라서 위의 ASP.NET 코드 대신 렌더링 될으로:  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
  
```  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> 정적 메뉴 항목에 대 한 연한 파랑색 배경이 색을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuStaticSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSelectedStyle/CS/menustaticselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSelectedStyle/VB/menustaticselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticSubMenuIndent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit StaticSubMenuIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit StaticSubMenuIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticSubMenuIndent As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit StaticSubMenuIndent { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.StaticSubMenuIndent : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "16px")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정적 메뉴에서 하위 메뉴를 들여쓸 공간 크기(픽셀)를 가져오거나 설정합니다.</summary>
        <value>정적 메뉴에서 하위 메뉴를 들여쓸 공간 크기(픽셀)를 나타내는 <see cref="T:System.Web.UI.WebControls.Unit" />입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정적 메뉴에서 둘 이상의 메뉴 수준을 표시 하는 경우 (경우 합니다 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> 속성이 1 보다 큰 값으로 설정 됩니다)를 사용 하 여를 <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> 정적 메뉴에서 하위 메뉴 항목을 들여쓰기에 사용 되는 픽셀 수를 지정 하는 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> 10 픽셀 x 정적 메뉴의 하위 메뉴 항목을 들여쓰기 하는 속성입니다.  
  
 [!code-aspx-csharp[MenuStaticSubMenuIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSubMenuIndent/CS/menustaticsubmenuindentcs.aspx#1)]
 [!code-aspx-vb[MenuStaticSubMenuIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSubMenuIndent/VB/menustaticsubmenuindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">선택한 <see cref="T:System.Web.UI.WebControls.Unit" /> 값이 0보다 작은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      </Docs>
    </Member>
    <Member MemberName="StaticTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>각 정적 메뉴 항목의 위쪽에 구분 기호로 표시되는 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value>각 정적 메뉴 항목의 위쪽에 구분 기호로 표시되는 이미지의 URL입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> 사용자 지정 이미지를 각 정적 메뉴의 위쪽에 표시 된 항목을 지정 하는 속성 메뉴 항목 사이의 구분 기호로 작동 합니다.  
  
> [!NOTE]
>  설정 하 여 각 정적 메뉴 항목의 맨 아래에 구분 기호 이미지를 표시할 수도 있습니다는 <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> 속성을 통해 각 정적 메뉴 항목의 위쪽에 표시 하는 구분 기호 이미지를 지정 합니다.  
  
 [!code-aspx-csharp[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/CS/menustatictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/VB/menustatictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">이벤트 처리기에 전달된 이벤트 인수를 나타내는 <see cref="T:System.String" />입니다.</param>
        <summary>서버에 폼이 게시될 때 발생하는 이벤트를 처리합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.Menu.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 컨트롤에 해당하는 <see cref="T:System.Web.UI.WebControls.Menu" /> 값을 가져옵니다. 이 속성은 주로 컨트롤 개발자가 사용합니다.</summary>
        <value>항상 <see langword="HtmlTextWriterTag.Table" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.Menu.TagKey%2A> 속성을 합니다 <xref:System.Web.UI.HtmlTextWriterTag> 연관 된 값을 <xref:System.Web.UI.WebControls.Menu> 컨트롤. 이 속성은 주로 컨트롤 개발자가 사용합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.Menu.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>메뉴 항목과 연결된 웹 페이지 콘텐츠를 표시할 대상 창이나 프레임을 가져오거나 설정합니다.</summary>
        <value>연결된 웹 페이지 콘텐츠를 표시할 대상 창이나 프레임입니다. 기본값은 빈 문자열("")이며 이 경우 포커스가 있는 창이나 프레임이 새로 고쳐집니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.Menu.Target%2A> 속성 창이 나 프레임을 표시할 웹 콘텐츠를 지정 하는 메뉴 항목을 클릭할 때 메뉴 항목에 연결 합니다. 이 값은 다음 표에서처럼 밑줄로 시작하는 특수한 값을 제외하고는 대/소문자 구분 없는 A-Z 범위의 문자로 시작해야 합니다.  
  
|대상 값|설명|  
|------------------|-----------------|  
|`_blank`|콘텐츠를 프레임이 없는 새 창에 렌더링합니다.|  
|`_parent`|콘텐츠를 직접 실행 프레임셋 부모에 렌더링합니다.|  
|`_search`|콘텐츠를 검색 창에 렌더링합니다.|  
|`_self`|콘텐츠를 포커스가 있는 프레임에 렌더링합니다.|  
|`_top`|콘텐츠를 프레임이 없는 전체 창에 렌더링합니다.|  
  
> [!NOTE]
>  `_search` 값이 지원되는지 여부를 확인하려면 브라우저 설명서를 참조하십시오.  예를 들어, Internet Explorer 버전 5.0 이상을 지원 합니다 `_search` 대상 값  
  
 이 속성의 모든 메뉴 항목에 적용 되는 <xref:System.Web.UI.WebControls.Menu> 제어 합니다. 설정 하 여이 속성을 선택적으로 재정의할 수는 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> 의 각 속성 <xref:System.Web.UI.WebControls.MenuItem> 직접 개체입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItem.Target%2A> 속성 대상 특성으로 렌더링 합니다. 앵커 요소의 대상 특성의 XHTML 1.1 엄격한 문서 형식 정의 허용 되지 않습니다. XHTML 또는 접근성 표준을 따르도록 렌더링 된 출력을 설정 하지 마십시오는 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> 속성입니다. 자세한 내용은 참조 하세요. [XHTML 표준 Visual Studio 및 ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) 하 고 [Visual Studio 및 ASP.NET의 내게 필요한 옵션](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Menu.Target%2A> 해당 메뉴 항목을 마우스 오른쪽 단추로 클릭할 때 새 창에서 각 메뉴 항목에 링크 되는 콘텐츠를 지정 하는 속성을 표시 해야 합니다.  
  
 [!code-aspx-csharp[MenuTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuTarget/CS/menutargetcs.aspx#1)]
 [!code-aspx-vb[MenuTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuTarget/VB/menutargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="menu.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> 컨트롤의 뷰 상태 변경 내용을 컨트롤의 <see cref="T:System.Web.UI.StateBag" /> 개체에 저장할 수 있도록 추적합니다. 이 개체는 <see cref="P:System.Web.UI.Control.ViewState" /> 속성을 통해 액세스할 수 있습니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
  </Members>
</Type>