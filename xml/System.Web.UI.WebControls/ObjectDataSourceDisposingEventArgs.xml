<Type Name="ObjectDataSourceDisposingEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="573cdb67aae1c948fcc74894505cd1db0c3bc931" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39939080" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceDisposingEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceDisposingEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceDisposingEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceDisposingEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> 클래스는를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 메서드를 사용 하는 데이터 작업 후 비즈니스 개체 인스턴스에 대 한 액세스를 제공는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 및 비즈니스 개체를 수행 하는 하지만 비즈니스 하기 전에 개체는 소멸 됩니다. 비즈니스 개체를 사용 하 여 액세스를 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> 속성입니다. 처리 하는 대리자를 추가 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트 최종 작업을 수행 하거나 정리 비즈니스 개체의 공개적으로 노출 된 모든 멤버에 액세스할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 서 메서드를 호출 하지 않는 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 메서드 데이터 작업을 수행 하는 경우이 컨트롤을 `static` 메서드. 메서드가 정적이 경우 비즈니스 개체 인스턴스가 생성 됩니다.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 수명 주기에서 다양 한 시간에 기본 비즈니스 개체를 사용 하 여 작업을 처리할 수 있는 많은 이벤트를 노출 합니다. 다음 표에서 이벤트와 연결 된 <xref:System.EventArgs> 클래스 및 이벤트 처리기 대리자입니다.  
  
|이벤트|EventArgs|이벤트 처리기|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> 비즈니스 개체의 인스턴스가 만들어질 직전에 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> 비즈니스 개체의 인스턴스를 만든 직후에 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> 데이터를 검색 하기 전에 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting><br /><br /> 삽입, 업데이트 또는 삭제 작업을 수행 하기 전에 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected><br /><br /> 데이터를 검색 한 후에 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted><br /><br /> 삽입, 업데이트 또는 삭제 작업이 완료 되 면 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> 비즈니스 개체를 제거 하기 전에 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 정보를 표시 하는 컨트롤입니다. 두 번째 코드 예제에서는 첫 번째 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다.  
  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 정보를 표시 하는 컨트롤입니다. 웹 페이지를 수행 하는 모든 데이터 작업에 대해 만들려는 (시간 또는 리소스) 측면에서 매우 비용이 많이 드는 비즈니스 개체를 사용 하 여 작업할 수 있습니다. 비용이 많이 드는 개체를 사용 하는 한 가지 방법은 해당 인스턴스를 한 번 만들어를 만들고 모든 데이터 작업에 대 한 제거 하는 대신 다음 작업에 캐시 될 수 있습니다. 이 예제에서는이 패턴을 보여 줍니다. 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 개체에 대 한 캐시를 먼저 확인 하 고 이미 캐시 되지 않습니다 하는 경우에 인스턴스를 만든 이벤트입니다. 그런 다음 처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트를 제거 하는 대신 나중에 사용할 비즈니스 개체를 캐시 합니다. 이 예제에서는 <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> 개체로 설정 됩니다 `true`지시를 <xref:System.Web.UI.WebControls.ObjectDataSource> 를 호출 하지 않도록를 <xref:System.IDisposable.Dispose%2A> 인스턴스에서 메서드.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 다음 코드 예제에서는 앞의 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다. 정의한 기본 비즈니스 개체의 코드 예제는는 `EmployeeLogic` 클래스는 상태를 유지 관리 및 비즈니스 논리를 캡슐화 하는 클래스입니다. 전체 작업 예제를 보려면이 코드를 라이브러리로 컴파일하고 ASP 페이지에서 이러한 클래스를 사용 합니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceDisposingEventArgs (object objectInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object objectInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (objectInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceDisposingEventArgs(System::Object ^ objectInstance);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs : obj -&gt; System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs objectInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="objectInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectInstance"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />가 데이터 작업을 수행할 대상이 되는 비즈니스 개체입니다.</param>
        <summary>지정된 개체를 사용하여 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤이 데이터 작업을 수행할 대상이 되는 비즈니스 개체를 나타내는 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />가 데이터 작업에 사용할 비즈니스 개체이며, 그렇지 않고 <see langword="null" />이 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />에 전달된 경우에는 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 데이터 작업 메서드 (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>를 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>)는 인스턴스 메서드는 인스턴스의 비즈니스 개체 메서드가 실행 되기 전에 만들어집니다. 개체를 저장 하 여 각 호출에 대해 만들어지는 비즈니스 개체를 방지할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> 속성에는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트 처리기입니다. 후속 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 이벤트에서 비즈니스 개체를 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 정보를 표시 하는 컨트롤입니다. 웹 페이지를 수행 하는 모든 데이터 작업에 대해 만들려는 (시간 또는 리소스) 측면에서 매우 비용이 많이 드는 비즈니스 개체를 사용 하 여 작업할 수 있습니다. 비용이 많이 드는 개체를 사용 하는 한 가지 방법은 해당 인스턴스를 한 번 만들어를 만들고 모든 데이터 작업에 대 한 제거 하는 대신 다음 작업에 캐시 될 수 있습니다. 이 예제에서는이 패턴을 보여 줍니다. 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 개체에 대 한 캐시를 먼저 확인 하 고 이미 캐시 되지 않습니다 하는 경우에 인스턴스를 만든 이벤트입니다. 그런 다음 처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> 이벤트를 제거 하는 대신 나중에 사용할 비즈니스 개체를 캐시 합니다. 이 예제에서는 <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> 클래스로 설정 되어 `true`지시를 <xref:System.Web.UI.WebControls.ObjectDataSource> 를 호출 하지 않도록 <xref:System.IDisposable.Dispose%2A> 인스턴스에서.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      </Docs>
    </Member>
  </Members>
</Type>