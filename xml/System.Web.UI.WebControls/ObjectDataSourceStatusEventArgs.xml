<Type Name="ObjectDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ea8ac30f3ce2194992306d36da1c0abb8026fad" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39990914" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" /> 컨트롤의 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> 및 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 클래스에서 사용 됩니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 출력 매개 변수, 반환 값 및 호출 하는 메서드에서 throw 되는 예외에 대 한 액세스를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다. 액세스 하는 이러한 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> 속성을 각각. 처리 하는 대리자를 추가 하 여 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>를 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, 또는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 이벤트를이 데이터를 검사 하 고 필요한 모든 추가 사후 처리를 수행할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 수명 주기에서 다양 한 시간에 기본 비즈니스 개체를 사용 하 여 작업을 처리할 수 있는 많은 이벤트를 노출 합니다. 다음 표에서 이벤트와 연결 된 <xref:System.EventArgs> 클래스 및 이벤트 처리기 대리자입니다.  
  
|이벤트|EventArgs|이벤트 처리기|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> 비즈니스 개체의 인스턴스가 만들어질 직전에 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> 비즈니스 개체의 인스턴스를 만든 직후에 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> 데이터를 검색 하기 전에 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting><br /><br /> 삽입, 업데이트 또는 삭제 작업을 수행 하기 전에 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.<br /><br /> 데이터를 검색 한 후에 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> 및 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted><br /><br /> 삽입, 업데이트 또는 삭제 작업이 완료 되 면 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> 비즈니스 개체를 제거 하기 전에 발생 합니다.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다. 두 번째 코드 예제에서는 첫 번째 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다.  
  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다. <xref:System.Web.UI.WebControls.GridView> 처음에 지정 된 메서드를 사용 하 여 모든 직원의 집합을 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에서 데이터를 검색 하는 `EmployeeLogic` 개체. 때문에 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`의 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 표시를 **삭제** 단추입니다.  
  
 클릭할 경우는 **삭제** 단추를를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업으로 지정 된 메서드를 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성 및 지정 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 컬렉션. 이 코드 예제에서는 하나의 매개 변수는에 지정 된 된 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 직원 ID에 해당 하는 컬렉션 때문에 이것이 ID에 포함 되어 있어도 합니다 <xref:System.Windows.Forms.DataGridView.Columns%2A> 컬렉션으로를 <xref:System.Web.UI.WebControls.BoundField> 개체에 문자열로 전달 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤입니다. 명시적으로 추가 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 속성이로 설정는 <xref:System.TypeCode.Int32> 값을 전달 합니다에서 올바르게는 <xref:System.Web.UI.WebControls.ObjectDataSource> 문자열이 아닌 정수로 방법.  
  
 이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다. `NorthwindEmployeeDeleting` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 되기 전, 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업이 수행 될 및 `NorthwindEmployeeDeleted` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 후 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업 완료를 처리 하려는 예외 발생 했을 수입니다. 합니다 `NorthwindEmployeeDeleted` 대리자를 사용 하는 비즈니스 개체에서 throw 된 예외에 액세스 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 개체입니다. 이 예제의 경우는 `NorthwindDataException` 는이 대리자에 의해 처리 됩니다 throw 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 다음 코드 예제에서는 앞의 코드 예제를 사용 하는 예제에서는 중간 계층 비즈니스 개체를 제공 합니다. 다음은 코드 예제에 정의 된 두 개의 주요 클래스를 설명 합니다.  
  
-   `EmployeeLogic` 클래스는 상태를 유지 하지 않습니다 하 고 비즈니스 논리를 캡슐화 하는 클래스입니다.  
  
-   `NorthwindEmployee` 클래스는 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.  
  
 또한는 `NorthwindDataException` 클래스는 편의 위해 제공 됩니다.  
  
 이 예제에서는 클래스이 집합을 Microsoft SQL Server 및 Microsoft Access를 사용 하 여 사용할 수 있는 예제 데이터베이스는 Northwind Traders 데이터베이스를 사용 합니다. 전체 작업 예제를 보려면이 코드를 라이브러리로 컴파일하고 ASP 페이지에서 이러한 클래스를 사용 합니다. 앞의 예제에서 제공 되는 ASP 페이지는이 클래스 라이브러리와 함께 작동 하도록 구성 됩니다.  `UpdateEmployeeInfo` 메서드 구현 되지 않은 완전히 하지 삽입할 데이터 Northwind Traders 데이터베이스이 예제를 테스트할 때 있도록 합니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (returnValue As Object, outputParameters As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="returnValue">완료된 데이터베이스 작업의 반환 값을 나타내는 개체입니다.</param>
        <param name="outputParameters">매개 변수 개체의 이름/값 쌍이 들어 있는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary>지정된 출력 매개 변수와 반환 값을 사용하여 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `returnValue` 매개 변수는 비즈니스 개체 데이터 메서드를 호출 하 여 반환 되는 임의의 개체가 될 수 있습니다. 합니다 `outputParameters` 매개 변수는는 <xref:System.Collections.IDictionary> 메서드 시그니처의 일치 및 참조로 전달 되는 이름/값 쌍의 컬렉션입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary * Exception -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="returnValue">완료된 데이터베이스 작업의 반환 값을 나타내는 개체입니다.</param>
        <param name="outputParameters">매개 변수 개체의 이름/값 쌍이 들어 있는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <param name="exception">메서드 호출 중에 throw된 모든 내부 예외를 래핑하는 <see cref="T:System.Exception" />입니다.</param>
        <summary>지정된 출력 매개 변수, 반환 값 및 예외를 사용하여 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `returnValue` 매개 변수는 비즈니스 개체 데이터 메서드를 호출 하 여 반환 되는 임의의 개체가 될 수 있습니다. 합니다 `outputParameters` 매개 변수는는 <xref:System.Collections.IDictionary> 메서드 시그니처의 일치 및 참조로 전달 되는 이름/값 쌍의 컬렉션입니다. `exception` 매개 변수는는 <xref:System.Exception> 호출한 메서드에 의해 throw 되는 모든 예외를 래핑하는 예외를 <xref:System.Web.UI.WebControls.ObjectDataSource> 데이터 작업 중 컨트롤입니다. 예외에서 처리 되지 않은 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, 또는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 에서 throw 되는 메서드를는 <xref:System.Web.UI.WebControls.ObjectDataSource> 데이터 작업이 반환 된 후 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 작업의 영향을 받은 행의 수를 가져오거나 설정합니다.</summary>
        <value>데이터 작업의 영향을 받은 행의 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 예상한 개수의 행이 영향을 확인 하는 값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 작업 중에 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤에서 호출된 메서드가 throw한 모든 예외의 래퍼를 가져옵니다.</summary>
        <value>비즈니스 개체에서 throw된 모든 예외를 <see cref="T:System.Exception" />에 래핑하는 <see cref="P:System.Exception.InnerException" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Exception> 예외 비즈니스 개체 데이터 메서드에 의해 throw 되는 실제 예외를 나타내지 않습니다. 사용할 수는 <xref:System.Exception.InnerException%2A> throw 된 예외에 액세스 하는 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다. <xref:System.Web.UI.WebControls.GridView> 처음에 지정 된 메서드를 사용 하 여 모든 직원의 집합을 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에서 데이터를 검색 하는 `EmployeeLogic` 개체. 때문에 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`의 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 표시를 **삭제** 단추입니다.  
  
 클릭할 경우는 **삭제** 단추를를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업으로 지정 된 메서드를 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성 및 지정 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 컬렉션.  
  
 이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다. `NorthwindEmployeeDeleting` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 되기 전, 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업이 수행 될 및 `NorthwindEmployeeDeleted` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 후 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업 완료 하는 데 예외 처리 합니다. 이 예제의 경우는 `NorthwindDataException` 는 의해 처리 될 throw는 `NorthwindEmployeeDeleted` 대리자.  
  
 구현을 확인 하는 `EmployeeLogic` 이 코드 예제는 중간 계층 비즈니스 개체의 클래스 개요를 참조 하십시오. <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>비즈니스 개체에서 throw된 예외가 처리되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>비즈니스 개체에서 throw된 예외가 처리되었고 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />에서 throw되지 않아야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비즈니스 개체에서 예외를 throw 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> 속성이 `false` 예외 래핑되는 및를 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> 속성입니다. 사용 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler> 개체를 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> 속성 및 예외 처리 합니다. 예외를 처리 하는 경우 설정 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> 속성을 `true` 또는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤에는 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다. <xref:System.Web.UI.WebControls.GridView> 처음에 지정 된 메서드를 사용 하 여 모든 직원의 집합을 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에서 데이터를 검색 하는 `EmployeeLogic` 개체. 때문에 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`의 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 표시를 **삭제** 단추입니다.  
  
 클릭할 경우는 **삭제** 단추를를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업으로 지정 된 메서드를 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성 및 지정 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 컬렉션. 이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다. `NorthwindEmployeeDeleting` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 되기 전, 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업이 수행 될 및 `NorthwindEmployeeDeleted` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 후 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업 완료를 처리 하려는 예외 발생 했을 수입니다. 이 예제의 경우는 `NorthwindDataException` 는 의해 처리 될 throw는 `NorthwindEmployeeDeleted` 대리자.  
  
 구현을 확인 하는 `EmployeeLogic` 이 코드 예제는 중간 계층 비즈니스 개체의 클래스 개요를 참조 하십시오. <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="OutputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary OutputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary OutputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputParameters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ OutputParameters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputParameters : System.Collections.IDictionary" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>비즈니스 개체 메서드 매개 변수와 해당 값이 들어 있는 컬렉션을 가져옵니다.</summary>
        <value>비즈니스 개체 메서드 매개 변수와 해당 값을 나타내는 이름/값 쌍의 <see cref="T:System.Collections.IDictionary" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비즈니스 개체 메서드를 참조로 전달 되는 매개 변수에서 반환 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> 컬렉션입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ReturnValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>비즈니스 개체 메서드에서 반환된 값이 있는 경우 해당 값을 개체로 가져옵니다.</summary>
        <value>비즈니스 개체 메서드에서 반환된 값이 있으면 해당 값을 나타내는 개체이고, 그렇지 않으면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> 속성은 설정 된 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 생성자입니다. 값은 리플렉션을 사용 하 여 호출 되는 비즈니스 개체 메서드 호출의 반환 값으로 설정 됩니다. 값을 반환 하는 경우 (비즈니스 개체 메서드가 반환 될 때와 같은 `void`), <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> 속성을 평가 `null`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>