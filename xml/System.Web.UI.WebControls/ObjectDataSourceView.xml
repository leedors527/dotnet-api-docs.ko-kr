<Type Name="ObjectDataSourceView" FullName="System.Web.UI.WebControls.ObjectDataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="137b18044de4a32069450517c511e428b1c48ad8" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55387639" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceView = class&#xA;    inherit DataSourceView&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>데이터 바인딩된 컨트롤이 비즈니스 및 데이터 개체를 사용하여 데이터 작업을 수행하기 위해 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤을 지원하고 인터페이스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 클래스는 주로 사용 하려는 데이터 바인딩된 컨트롤에서 페이지 코드에서 프로그래밍 가능한 개체로 사용 되지 않습니다.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 데이터 기능을 구현 하는 클래스를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 포함 하 여 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 작업, 정렬, 필터링 및 설정 관리 뷰 상태에 저장 합니다.  
  
 A <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체의 각 인스턴스에 대해 만들어진는 <xref:System.Web.UI.WebControls.ObjectDataSource> 런타임에 클래스입니다. 인스턴스의 데이터 작업에 대 한 호출을 <xref:System.Web.UI.WebControls.ObjectDataSource> 클래스의 인스턴스에 의해 처리 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체입니다. 페이지 개발자 인스턴스에 액세스 하지는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 클래스를 직접. 컨트롤 개발자가 확장 하 여 사용자 지정 데이터 컨트롤을 만들 수는 <xref:System.Web.UI.WebControls.ObjectDataSource> 고 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 클래스입니다.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 클래스는 리플렉션을 사용 하 여 비즈니스 또는 데이터 개체에서 메서드를 호출 하 여 데이터 작업을 수행 합니다. 런타임에 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어로 식별 되는 형식의 인스턴스를 만듭니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> 속성 데이터 작업에 대 한 적절 한 메서드를 호출 합니다. 인스턴스화된 개체에 의해 메모리에 캐시 되지 않기를 <xref:System.Web.UI.WebControls.ObjectDataSourceView>입니다. 개체가 만들어지고 모든 데이터 메서드 호출에 대 한 제거 합니다. 방법이 `static` (`Shared` Visual Basic에서) 인스턴스를 만들 수 없는 되지만 데이터 작업 메서드는 호출 됩니다.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 하 여 페이지 개발자에 게 직접 노출 되지 않습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다. 대신의 메서드와 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 이용 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSource>합니다. 예를 들어,를 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 의 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 속성을 설정 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
## <a name="retrieving-data"></a>데이터 검색  
 데이터 원본 보기가 수행하는 가장 기본적인 작업은 <xref:System.Collections.IEnumerable> 데이터 항목의 컬렉션을 검색하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드를 사용하여 기본 데이터 스토리지에서 데이터를 검색하는 것입니다. 다음과 같은 데이터 검색 메서드, 속성 및 이벤트에서 구현 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체 및에서 직접 노출 된 해당 <xref:System.Web.UI.WebControls.ObjectDataSource> 페이지 개발자 및 다른 호출자에 게 제어:  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 속성  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> 이벤트  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> 이벤트  
  
## <a name="updating-data"></a>데이터 업데이트  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 으로 식별 되는 데이터 또는 비즈니스 개체 메서드를 호출 하 여 데이터 업데이트를 지원 하는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 속성입니다. 와 같은 업데이트를 자동으로 수행 하는 데이터 바인딩된 컨트롤을 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 해당 매개 변수를 전달는 <xref:System.Collections.Specialized.IOrderedDictionary> 인터페이스는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 뷰 개체 병합 된 매개 변수를 사용 하 여 이러한 매개 변수 에 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 컬렉션입니다.  
  
 다음과 같은 업데이트 메서드, 속성 및 이벤트에서 구현 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 에서 직접 노출 하 고 해당 <xref:System.Web.UI.WebControls.ObjectDataSource> 페이지 개발자 및 다른 호출자에 게 제어:  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 메서드  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> 속성  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 속성  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> 이벤트  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> 이벤트  
  
## <a name="inserting-data"></a>데이터 삽입  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체가 지원으로 식별 되는 데이터 또는 비즈니스 개체 메서드를 호출 하 여 새 데이터 행을 삽입 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성입니다. 자동으로 같은 삽입을 수행 하는 데이터 바인딩된 컨트롤을 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView>에서 해당 매개 변수를 전달는 <xref:System.Collections.Specialized.IOrderedDictionary> 인터페이스는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 뷰 개체에 있는 모든 매개 변수를 사용 하 여 이러한 매개 변수를 병합 하 고 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 컬렉션입니다.  
  
 다음 삽입 메서드, 속성 및 이벤트를 구현 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 에서 직접 노출 하 고 해당 <xref:System.Web.UI.WebControls.ObjectDataSource> 페이지 개발자 및 다른 호출자에 게 제어:  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 메서드  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> 속성  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> 속성  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> 이벤트  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> 이벤트  
  
## <a name="deleting-data"></a>데이터 삭제  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 로 식별 되는 데이터 또는 비즈니스 개체 메서드를 호출 하 여 데이터 삭제를 지원 개체는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성입니다. 와 같은 삭제를 자동으로 수행 하는 데이터 바인딩된 컨트롤을 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView>에서 해당 매개 변수를 전달는 <xref:System.Collections.Specialized.IOrderedDictionary> 인터페이스는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 뷰 개체에 있는 모든 매개 변수를 사용 하 여 이러한 매개 변수를 병합 하 고 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> 컬렉션입니다. 다음 메서드, 속성을 삭제 하 고 이벤트를 구현 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 에서 직접 노출 하 고 해당 <xref:System.Web.UI.WebControls.ObjectDataSource> 페이지 개발자 및 다른 호출자에 게 제어:  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 메서드  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> 속성  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 속성  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 이벤트  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 이벤트  
  
## <a name="filtering-and-sorting-data"></a>데이터 필터링 및 정렬  
 데이터 검색 더 강력한 경우 데이터를 동적으로 필터링 할 수 있습니다. 필터링 에서만 지원 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드가 반환 되는 <xref:System.Data.DataTable> 또는 <xref:System.Data.DataSet> 개체. 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 고 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> 데이터 검색에 동적 필터링을 적용 하는 속성입니다. 이러한 속성으로 구현 됩니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체 및에서 직접 노출 된 해당 <xref:System.Web.UI.WebControls.ObjectDataSource> 데이터 바인딩된 컨트롤에서 다른 호출자를 제어 합니다.  
  
 사용 하 여 검색 하는 데이터를 정렬할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource> 검색 된 후 메모리에서 데이터를 정렬 하 여 합니다. 정렬 에서만 지원 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드가 반환 되는 <xref:System.Data.DataTable> 또는 <xref:System.Data.DataSet>합니다. <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> 속성은 항상 반환 `true`이므로 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 에서 반환 되는 유형을 결정할 수 없습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드를 호출 하지 않고 메서드. 합니다 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 속성 구문은 동일 하 게는 <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> 속성입니다.  
  
## <a name="tracking-view-state"></a>뷰 상태 추적  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 구현 된 <xref:System.Web.UI.IStateManager> 인터페이스 사용 하 여 뷰 페이지 요청에서 해당 상태를 추적 하는 상태입니다. 구현의 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> 컨트롤의 뷰 상태 추적을 사용 하도록 설정 방법이 제공 됩니다. 자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.ObjectDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ObjectDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceView(System::Web::UI::WebControls::ObjectDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceView : System.Web.UI.WebControls.ObjectDataSource * string * System.Web.HttpContext -&gt; System.Web.UI.WebControls.ObjectDataSourceView" Usage="new System.Web.UI.WebControls.ObjectDataSourceView (owner, name, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.ObjectDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />가 연결된 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />입니다.</param>
        <param name="name">소유하고 있는 데이터 소스 컨트롤의 범위 내에 있는 데이터 소스 뷰의 고유한 이름입니다.</param>
        <param name="context">현재 <see cref="T:System.Web.HttpContext" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 생성자를 호출 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> 지정 된 데이터 원본 뷰의 새 인스턴스를 반환 하는 방법 `viewName` 매개 변수입니다. <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 하나만와 연결 되어 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 언제 든 지 항상 뷰 이름을 지정 하 고 `DefaultView`이지만이 명명 제한에 의해 적용 되는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 하지는 <xref:System.Web.UI.WebControls.ObjectDataSourceView>합니다. 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> 메서드를 다른 명명 규칙을 사용 하 여 뷰를 지원 합니다.  
  
 합니다 <xref:System.Web.HttpContext> 으로 전달 되는 개체 `context` 과 같은 매개 변수 개체에 액세스 하는 데이터 원본 뷰에서 사용 됩니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 개체가 삭제 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 속성이 빈 문자열("")인 경우 삭제 작업은 지원되지 않습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete%2A> 속성이 반환 `true`경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성을 설정 합니다. 모든 데이터 속성이 설정 되지 않은 또는 올바르게 설정 되지 않은 경우, 삭제 작업이 실패할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 개체와 연결된 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 개체가 삽입 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 속성이 빈 문자열("")인 경우 삽입 작업은 지원되지 않습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert%2A> 속성이 반환 `true`경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성을 설정 합니다. 모든 데이터 속성이 설정 되어 있지 않거나 올바르게 설정 되지 않은 삽입 작업을 계속 실패할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 개체가 검색된 데이터의 페이징 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" /> 값이 <see langword="true" />로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanPage%2A> 속성을 나타냅니다 여부를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체 페이징을 지원 합니다. 페이징을 지 원하는 방법에 대 한 정보에 대 한 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView>를 참조 하세요 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 개체가 데이터 집합과 총 데이터 행 수에 대한 검색을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A> 속성이 반환 `true`경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 속성을 설정 합니다. 개수를 반환 하는 메서드를 페이지의 행 수가 아니라, 페이징할 수 있는 행의 총 수를 반환 해야 합니다. 데이터 바인딩된 컨트롤 페이징 컨트롤을 렌더링 하는 방법을 결정 페이징할 수 있는 행의 총 수를 사용 합니다. 렌더링할 예를 들어, 얼마나 많은 숫자 페이저 단추는 <xref:System.Web.UI.WebControls.GridView> 컨트롤 페이저입니다. 페이징 지원에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>합니다.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A> 호출 하는 동안 속성을 검사 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> 메서드를 데이터 소스 컨트롤에 다양 한 설정 하 여 요청 하는 모든 기능을 지원 <xref:System.Web.UI.DataSourceSelectArguments> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 개체가 기본 데이터 원본에 대한 정렬된 뷰를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Web.UI.WebControls.ObjectDataSource> 데이터 정렬 지원만 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드가 반환 되는 <xref:System.Data.DataSet>, <xref:System.Data.DataView>, 또는 <xref:System.Data.DataTable> 개체를 뷰 개체를 정렬 될 때까지 지원 되는지 여부를 확인할 수 없습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드가 호출 되 고 반환 합니다. 이러한 이유로 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> 속성은 항상 반환 `true`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 개체가 업데이트 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 속성이 빈 문자열("")인 경우 업데이트 작업은 지원되지 않습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate%2A> 속성이 반환 `true`경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 속성을 설정 합니다. 모든 데이터 속성이 설정 되지 않은 또는 올바르게 설정 되지 않은 경우에 업데이트 작업이 실패할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>작업 시간 동안 내부 데이터 스토리지의 행 데이터가 변경된 경우 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤이 업데이트 및 삭제를 수행하는 방법을 확인하는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.ConflictOptions" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 속성 이전 및 새 값에 대 한 매개 변수에 적용 되었는지 여부를 결정 합니다 `Update` 메서드. 예를 들어 메서드는 지정 된를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성에서 반환을 <xref:System.Data.DataTable> 열을 사용 하 여 개체 `Name` 및 `Number`, 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 속성는 <xref:System.Web.UI.ConflictOptions.OverwriteChanges> 에 대 한 매개 변수는 생성 값 `Name` 하 고 `Number` 에 대 한는 `Update` 메서드. 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값 매개 변수 이름으로 만들어집니다 `Name`, `Number`, `original_Name`, 및 `original_Name`합니다. (원래 값에 대 한 정확한 매개 변수 이름에 따라 달라 집니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>.) 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 그런 다음 메서드는 경우를 결정에 지정 된는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 속성이 일치 하는 매개 변수입니다.  
  
 동시성 제어에는 데이터는 읽기 및 여러 클라이언트가 액세스 하 고 동일한 데이터를 조작 하는 경우 저장소에서 변경 하는 방법을 제어를 사용 하 여 데이터 저장소 기술입니다. 예를 들어, 하나의 클라이언트 데이터를 읽고 다른 클라이언트가 동일한 데이터를 읽는 다른 사용자에 게 제공 하는 동안 사용자에 게 제공 합니다. 두 사용자가 데이터를 업데이트하여 데이터 스토리지에 제출하는 경우 두 클라이언트가 모두 동일한 데이터에 대해 다른 값을 업데이트할 수 있으므로 예기치 않은 결과가 발생할 수 있습니다. 이 충돌로 간주 됩니다. 설정 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 속성을를 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값을 `Update` 메서드 수 충돌을 감지 하 고 필요에 따라 처리 하는 원래 데이터 원본에 이전 및 새 값을 비교 합니다.  
  
 값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 속성은 뷰 상태에 저장 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see cref="T:System.Web.UI.ConflictOptions" /> 값 중 하나가 아닌 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트, 삽입 또는 삭제 작업에 전달되는 <see cref="T:System.Web.UI.WebControls.Parameter" /> 값이 <see langword="null" />에서 <see cref="F:System.DBNull.Value" /> 값으로 자동 변환되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Parameter" />에 전달된 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 개체의 <see langword="true" />이 <see cref="F:System.DBNull.Value" /> 값으로 자동 변환되면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변환 하지 않았습니다 `null` 에 <xref:System.DBNull.Value?displayProperty=nameWithType> 값 런타임 시 오류가 발생할 수 있습니다. 사용 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull%2A> 나타내는 속성을 여부를 <xref:System.Web.UI.WebControls.Parameter> 에서 업데이트, 삽입 또는 삭제 작업에 전달 되는 값은 자동으로 변환 `null` 에 <xref:System.DBNull.Value?displayProperty=nameWithType> 값입니다. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=nameWithType>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤에서 데이터 작업의 매개 변수로 사용하는 클래스의 이름을 가져오거나 설정합니다. <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤은 여러 매개 변수 컬렉션에 있는 <see cref="T:System.Web.UI.WebControls.Parameter" /> 개체 대신 지정된 클래스를 사용합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />가 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> 또는 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> 작업의 매개 변수로 사용할 수 있는 개체의 형식을 식별하는 부분 정규화된 클래스 이름 또는 완전 정규화된 클래스 이름입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 전달 되는 여러 매개 변수를 지정 하는 대신 합니다 `Select`, `Update`를 `Insert`, 및 `Delete` 메서드를 여러 항목을 집계 하는 하나의 개체를 만들 수 있습니다. 이 개체는 한 방법에 몇 가지 매개 변수 대신 전달 됩니다. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=nameWithType>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">삭제할 항목을 식별하는 데 사용되는 키 값의 <see cref="T:System.Collections.IDictionary" />입니다. 이러한 매개 변수는 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 속성과 함께 사용되어 삭제 작업을 수행합니다. 메서드와 연결된 매개 변수가 없으면 <see langword="null" />을 전달합니다.</param>
        <param name="oldValues">데이터 소스의 항목 일치에 사용되는 키가 아닌 추가 값이 포함된 <see cref="T:System.Collections.IDictionary" />입니다. <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 속성이 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 필드로 설정된 경우에만 행 값이 메서드에 전달됩니다.</param>
        <summary>지정된 <paramref name="keys" /> 및 <paramref name="oldValues" /> 컬렉션을 사용하여 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 속성으로 식별되는 비즈니스 개체 메서드를 호출함으로써 삭제 작업을 수행합니다.</summary>
        <returns>삭제된 행의 수를 반환하며, 수를 알 수 없는 경우에는 -1을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값은-1로, 알 수 없는 개수의 행 삭제 된 것을 의미 합니다. 다른 값을 반환 하려면 설정를 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 의 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 이벤트 처리기입니다. 영향을 받는 행 수가 일반적으로 반환한를 `Delete` 비즈니스 개체 및 해당 값에 대 한 메서드는에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 의 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 이벤트 처리기.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 메서드 호출을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A> 메서드를 전달 합니다 `keys` 및 `oldValues` 컬렉션.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> 작업이 완료되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> 하거나 이벤트를 출력 매개 변수 및 반환 값의 값을 확인 한 후 예외가 throw 되었는지 여부를 결정 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 작업이 완료 합니다. 반환 값, 출력 매개 변수 및 예외 처리 속성에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다. <xref:System.Web.UI.WebControls.GridView> 처음에 지정 된 메서드를 사용 하 여 모든 직원의 집합을 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에서 데이터를 검색 하는 `EmployeeLogic` 개체. 때문에 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`의 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 표시를 **삭제** 단추입니다.  
  
 클릭 하면를 **삭제** 단추를를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 작업이 수행 하 여 지정 된 메서드를 사용 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성 및 지정 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> 컬렉션. 이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다. `NorthwindEmployeeDeleting` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> 되기 전, 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 작업을 수행 및 `NorthwindEmployeeDeleted` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> 후 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 에 작업이 완료 되 예외 처리를 수행 합니다. 이 예제의 경우는 `NorthwindDataException` 는이 대리자에 의해 처리 됩니다 throw 합니다.  
  
 구현을 확인 하는 `EmployeeLogic` 이 코드 예제는 중간 계층 비즈니스 개체 참조 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 개체가 데이터를 삭제할 때 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />에서 데이터를 삭제할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 로 식별 되는 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성에는 인스턴스 메서드 일 수 있습니다 또는 `static` (`Shared` Visual Basic에서) 메서드. 인스턴스 메서드인 경우 비즈니스 개체가 만들어지고 소멸 될 때마다 지정 된 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성 이라고 합니다. 처리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 지정 된 메서드 앞에 비즈니스 개체를 사용 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성 이라고 합니다. 처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 으로 지정한 메서드의 후 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성 이라고 합니다. 메서드인 경우는 `static` (`Shared` Visual Basic에서) 메서드를 비즈니스 개체가 생성 되지 않고 이러한 이벤트를 처리할 수 없습니다.  
  
 비즈니스 개체는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 둘 이상의 메서드 또는 함수 (메서드 오버 로드) 이름이 같은 컨트롤 구현 작동, 데이터 소스 컨트롤의 올바른 매개 변수를 포함 한 조건 집합에 따라 호출 하려고 합니다. 에 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> 컬렉션입니다. 경우에 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> 컬렉션의 정의와 일치 하지 않습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 메서드 시그니처를 데이터 원본에는 예외가 throw 됩니다.  
  
 값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성은 뷰 상태에 저장 됩니다.  
  
 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다. <xref:System.Web.UI.WebControls.GridView> 처음에 지정 된 메서드를 사용 하 여 모든 직원의 집합을 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성에서 데이터를 검색 하는 `EmployeeLogic` 개체. 때문에 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`의 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 표시를 **삭제** 단추입니다.  
  
 클릭 하면를 **삭제** 단추를를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 작업이 수행 하 여 지정 된 메서드를 사용 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성 및 지정 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> 컬렉션. 이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다. `NorthwindEmployeeDeleting` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 되기 전, 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 작업을 수행 및 `NorthwindEmployeeDeleted` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 후 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 에 작업이 완료 되 예외 처리를 수행 합니다. 이 예제의 경우는 `NorthwindDataException` 는이 대리자에 의해 처리 됩니다 throw 합니다.  
  
 구현을 확인 하는 `EmployeeLogic` 이 코드 예제는 중간 계층 비즈니스 개체 참조 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 메서드에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에 의해 지정된 메서드에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이름 및 형식에 포함 된 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> 컬렉션에 지정 된 메서드는 매개 변수의 형식과 이름 일치 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성 서명. 매개 변수 이름은 영향을 받지는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 속성 및 대/소문자 구분 됩니다. 와 같은 매개 변수를 제공 하는 데이터 바인딩된 컨트롤을 사용 하는 경우 <xref:System.Web.UI.WebControls.GridView> 하 고 <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤에서 제공 하는 이러한 매개 변수를 사용 하 여 컬렉션에 명시적으로 지정 된 매개 변수를 자동으로 병합 데이터 바인딩된 컨트롤입니다.  
  
 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> 작업 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 애플리케이션에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 수행 된 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 작업입니다. 매개 변수를 사용할 수는 <xref:System.Collections.IDictionary> 액세스 하는 컬렉션을 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다. <xref:System.Web.UI.WebControls.GridView> 처음에 지정 된 메서드를 사용 하 여 모든 직원의 집합을 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성에서 데이터를 검색 하는 `EmployeeLogic` 개체. 때문에 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`의 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 표시를 **삭제** 단추입니다.  
  
 클릭 하면를 **삭제** 단추를를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 작업이 수행 하 여 지정 된 메서드를 사용 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성 및 지정 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> 컬렉션. 이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다. `NorthwindEmployeeDeleting` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> 되기 전, 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 작업을 수행 및 `NorthwindEmployeeDeleted` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> 후 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 에 작업이 완료 되 예외 처리를 수행 합니다. 이 예제의 경우는 `NorthwindDataException` 는이 대리자에 의해 처리 됩니다 throw 합니다.  
  
 구현을 확인 하는 `EmployeeLogic` 이 코드 예제는 중간 계층 비즈니스 개체 참조 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스 컨트롤이 검색하는 데이터 집합에 대해 페이징을 지원하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>데이터 소스 컨트롤이 검색하는 데이터 집합에 대해 페이징을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 컨트롤을 설정 하 여 처리 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>, 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 정의 및를 `Select` 적절 한 매개 변수를 사용 하 여 비즈니스 개체에서 메서드. 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> 속성이 `true`, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> 요청한 행의 수와 요청 된 첫 번째 행의 두 가지 추가 매개 변수를 포함 하는 컬렉션입니다. 이러한 두 매개 변수 이름이 정의 된 대로 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> 속성입니다. `Select` 메서드 요청된 수가 지정된 된 인덱스에서 시작 하는 행을 반환 해야 합니다. 데이터 페이지 크기에 따라 균등 하 게 나누지 수 있으므로 마지막 페이지 적은 수의 행을 포함할 수 있습니다. 따라서 요청 되는 행의 수는 실제로 반환 되는 행의 최대 수입니다.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A> 호출 하는 동안 속성을 검사 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> 메서드를 데이터 소스 컨트롤에 다양 한 설정 하 여 요청 하는 모든 기능을 지원 <xref:System.Web.UI.DataSourceSelectArguments> 속성입니다.  
  
 데이터 바인딩된 컨트롤을 호출 하는 페이징 연결된 된 데이터 바인딩된 컨트롤에 사용 되는 경우는 `Select` 요청 된 행의 수와 시작 인덱스를 사용 하 여 메서드. 또한 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 속성이 설정 되 면 데이터 바인딩된 컨트롤의 페이저 컨트롤을 렌더링 하기 전에 메서드를 호출 합니다. 예를 들어 경우는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에서 페이징을 5, 페이지 크기가 사용 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 20을 반환 하는 메서드, 호출기에 4 개의 페이지만 표시 됩니다.  
  
 값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> 속성은 뷰 상태에 저장 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">삭제 작업을 수행할 때 <see cref="T:System.Collections.IDictionary" /> 속성과 함께 사용되는 매개 변수의 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />입니다. 메서드와 연결된 매개 변수가 없으면 <see langword="null" />을 전달합니다.</param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> 속성이 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 필드로 설정된 경우에만 평가되는 행 값이 포함된 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />입니다.</param>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> 메서드와 지정된 <paramref name="keys" /> 및 <paramref name="oldValues" /> 컬렉션을 사용하여 삭제 작업을 수행합니다.</summary>
        <returns>삭제된 행의 수를 반환하며, 수를 알 수 없는 경우에는 -1을 반환합니다. 자세한 내용은 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />을 참조하세요.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 클래스는 상속 된 구현 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A> 비즈니스 개체를 사용 하 여 기본 데이터 저장소에서 데이터를 삭제 하는 방법입니다. 페이지 개발자와 데이터 바인딩된 컨트롤 작성자를 호출 하지 마십시오 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A> 메서드 대신; 직접 사용 하 여 공개적으로 노출 된 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 메서드.  
  
 삭제 작업을 수행 하려면 먼저 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> 이벤트입니다. 매개 변수의 값을 검사 하기 전에 전처리를 수행 하는이 이벤트를 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 메서드가 호출 됩니다.  
  
 삭제 작업을 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 리플렉션을 사용 하 여로 식별 되는 메서드를 호출는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성 및 연관 된 모든 매개 변수에서는 `keys` 및 `oldValues` 컬렉션 후 명령을 실행 합니다. 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> 이벤트. 모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" /> 속성이 <see langword="false" />를 반환합니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 속성이 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 값으로 설정되고 <paramref name="oldValues" /> 컬렉션에 전달된 값이 없는 경우</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">삽입 작업을 수행할 때 <see cref="T:System.Collections.IDictionary" /> 속성과 함께 사용되는 매개 변수의 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />입니다. 메서드와 연결된 매개 변수가 없으면 <see langword="null" />을 전달합니다.</param>
        <summary>지정된 <paramref name="values" /> 컬렉션을 사용하여 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 속성으로 식별되는 비즈니스 개체 메서드를 호출하여 삽입 작업을 수행합니다.</summary>
        <returns>삽입된 행의 수를 반환하며, 수를 알 수 없는 경우에는 -1을 반환합니다. 자세한 내용은 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />을 참조하세요.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 클래스는 상속 된 구현 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A> 비즈니스 개체를 사용 하 여 기본 데이터 저장소에 데이터를 삽입 하는 방법입니다. 페이지 개발자와 데이터 바인딩된 컨트롤 작성자를 호출 하지 마십시오 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A> 메서드 대신; 직접 사용 하 여 공개적으로 노출 된 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 메서드.  
  
 삽입을 수행 하려면 먼저 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> 이벤트입니다. 매개 변수의 값을 검사 하기 전에 전처리를 수행 하는이 이벤트를 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 메서드가 호출 됩니다.  
  
 삽입 작업을 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 컨트롤 리플렉션을 사용 하 여로 식별 되는 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성 및 연결의 매개 변수를는 `values` 컬렉션 후 명령을 실행 합니다. 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> 이벤트. 모든 반환 값과 오류 코드를 검사 하려면이 이벤트를 처리 하 고 후 처리를 수행할 수 있습니다.  
  
 삽입 된 행 수를 반환 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> 속성이 <see langword="false" />를 반환합니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="values" />가 <see langword="null" />이거나 비어 있는 경우</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="objectDataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">데이터에 대해 기본 데이터 검색 이상의 작업을 요청하는 데 사용되는 <see cref="T:System.Web.UI.DataSourceSelectArguments" />입니다.</param>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 속성으로 식별되는 메서드를 호출하고 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 컬렉션의 값을 전달하여 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" /> 속성으로 식별되는 개체로부터 데이터를 검색합니다.</summary>
        <returns>데이터 행의 <see cref="T:System.Collections.IEnumerable" /> 목록입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 클래스는 상속 된 구현 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> 비즈니스 개체를 사용 하 여 데이터를 검색 하는 방법입니다. 페이지 개발자와 데이터 바인딩된 컨트롤 작성자를 호출 하지 마십시오 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> 메서드 대신; 직접 사용 하 여 공개적으로 노출 된 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드.  
  
 지정된 된 메서드가 어떤 메서드 시그니처를 가질 수 있습니다 하지만 형식 중 하나를 반환 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 성공적으로 호출할 수는 다음 표에 나와 있는 컨트롤입니다.  
  
|반환 형식|작업|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|합니다 <xref:System.Collections.IEnumerable> 에서 반환 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드.|  
|<xref:System.Data.DataTable>|A <xref:System.Data.DataView> 사용 하 여 만들어집니다 합니다 <xref:System.Data.DataTable> 반환한 및는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드.|  
|<xref:System.Data.DataSet>|첫 번째 <xref:System.Data.DataTable> 의 합니다 <xref:System.Data.DataSet> 추출 및 <xref:System.Data.DataView> 만들어지고 반환한는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드.|  
|<xref:System.Object>|개체를 단일 요소에 래핑됩니다 <xref:System.Collections.IEnumerable> 반환한는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드.|  
  
 데이터 검색을 수행 하려면 먼저 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> 이벤트입니다. 매개 변수의 값을 확인 하 고 작업 하기 전에 전처리 하는 데이 이벤트를 처리할 수 있습니다.  
  
 선택 작업을 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 컨트롤 리플렉션을 사용 하 여로 식별 되는 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성 및 연결의 매개 변수를는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> 컬렉션 후 명령을 실행 합니다. 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> 이벤트. 모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.  
  
 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드가 반환 되는 <xref:System.Data.DataSet> 개체 및 캐싱을 사용 하도록 설정는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 에서 데이터를 검색 하 고 작업 하는 동안 캐시에 데이터를 저장 합니다. 캐시가 만들어지는, 삭제 또는 새로 고침의 조합에 의해 지정 된 캐싱 동작을 기반으로 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 고 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 속성입니다.  
  
 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드가 반환 되는 <xref:System.Data.DataSet> 개체 및 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 속성이 지정 된, 제공 된 함께 평가 됩니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> 속성 및 결과 필터 목록 중에 데이터에 적용 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 작업입니다.  
  
 선택 된 행의 수를 반환 하는 방법에 대 한 정보를 참조 하세요. <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 메서드에 전달된 <paramref name="arguments" />는 검색된 데이터를 페이징 또는 정렬할 수 있도록 데이터 검색 중에 데이터 소스가 일부 추가 작업을 수행해야 하지만 데이터 소스 컨트롤이 필요한 기능을 지원하지 않음을 나타내는 경우  
  
또는 
<see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 메서드에서 반환한 개체가 <see cref="T:System.Data.DataSet" /> 또는 <see cref="T:System.Data.DataTable" />이거나 캐싱이 사용되는 경우. <see cref="T:System.Data.DataSet" /> 컨트롤의 경우 <see cref="T:System.Data.DataTable" /> 및 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 개체만 캐시될 수 있습니다.  
  
또는 
캐싱과 클라이언트 가장이 모두 사용되는 경우. 클라이언트 가장이 사용되는 경우 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />는 캐싱을 지원하지 않습니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 메서드에서 반환한 개체가 <see cref="T:System.Data.DataSet" />이지만 해당 <see cref="P:System.Data.DataSet.Tables" /> 컬렉션에 테이블이 없는 경우  
  
또는 
<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" /> 속성이 <see langword="true" />로 설정되어 있지만 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" /> 및 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" /> 속성이 설정되어 있지 않는 경우</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">데이터베이스 업데이트 작업을 수행하기 위해 <see cref="T:System.Collections.IDictionary" /> 속성과 함께 사용할 기본 키의 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />입니다. 메서드와 연결된 키가 없으면 <see langword="null" />을 전달합니다.</param>
        <param name="values">데이터베이스 업데이트 작업을 수행하기 위해 <see cref="T:System.Collections.IDictionary" />와 함께 사용할 값의 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />입니다. 메서드와 연결된 매개 변수가 없으면 <see langword="null" />을 전달합니다.</param>
        <param name="oldValues">내부 데이터 저장소에 있는 원래 값을 나타내는 <see cref="T:System.Collections.IDictionary" />입니다. 쿼리와 연결된 매개 변수가 없으면 <see langword="null" />을 전달합니다.</param>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 속성으로 식별되는 메서드를 호출하고 <paramref name="keys" />, <paramref name="values" /> 또는 <paramref name="oldValues" /> 컬렉션에 제공되는 매개 변수를 사용하여 업데이트 작업을 수행합니다.</summary>
        <returns>업데이트된 행의 수를 반환하며, 수를 알 수 없는 경우에는 -1을 반환합니다. 자세한 내용은 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />을 참조하세요.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 클래스는 상속 된 구현 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A> 비즈니스 개체를 사용 하 여 데이터를 업데이트 하는 방법입니다. 페이지 개발자와 데이터 바인딩된 컨트롤 작성자를 호출 하지 마십시오 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A> 메서드 대신; 직접 사용 하 여 공개적으로 노출 된 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 메서드.  
  
 에 포함 된 값을 `keys` 및 `values` 컬렉션 평가 되 고 포함 된 모든 값과 병합 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 컬렉션입니다. 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값, 값에 포함 된를 `oldValues` 컬렉션으로 서식이 지정 된는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 속성 고 병합 됩니다.  
  
 업데이트 작업을 수행 하려면 먼저 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> 이벤트입니다. 매개 변수의 값을 확인 하 고 업데이트 하기 전에 전처리 하는 데이 이벤트를 처리할 수 있습니다. 업데이트 작업을 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 로 식별 되는 메서드를 호출 하기 위해 리플렉션을 사용 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 속성 및 연관 된 모든 매개 변수에서를 `keys` 컬렉션 후 명령을 실행 합니다. 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> 이벤트. 모든 반환 값과 오류 코드를 검사 하려면이 이벤트를 처리 하 고 후 처리를 수행할 수 있습니다.  
  
 업데이트 된 행의 수를 반환 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> 속성이 <see langword="false" />를 반환합니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="oldValues" />가 <see langword="null" />이거나 비어 있고 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />이 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />로 설정된 경우</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 속성에 의해 식별되는 비즈니스 개체 메서드가 호출될 때 적용된 필터링 식을 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 속성에 의해 식별되는 비즈니스 개체 메서드를 사용하여 데이터를 검색할 때 적용된 필터링 식을 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 데이터 필터링을 지원 경우에만 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드가 반환 되는 <xref:System.Data.DataSet>, <xref:System.Data.DataView>, 또는 <xref:System.Data.DataTable> 개체.  
  
 에 사용 되는 구문을 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성은 형식 문자열 스타일 식입니다. 필터 식 구문은에 허용 되는 동일한 구문을 <xref:System.Data.DataView.RowFilter%2A> 속성 필터 식에 적용 되기 때문에 <xref:System.Data.DataView.RowFilter%2A> 의 속성을 <xref:System.Data.DataView> 실행에서 반환 되는 개체를 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드. 자세한 내용은 <xref:System.Data.DataColumn.Expression%2A>을 참조하세요. 매개 변수를 추가 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션 형식 문자열 자리 표시자를 예를 들어 포함할 수도 있습니다 `"{0}"`, 매개 변수 값에 대 한 대체 식에 있습니다. 매개 변수의 인덱스에 따라 자리 표시자는는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션입니다.  
  
 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>합니다. 매개 변수 형식의 문자열 또는 문자 형식이 면 매개 변수를 작은따옴표로 묶습니다. 매개 변수가 숫자 형식인 경우에 따옴표 필요 하지 않습니다. 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 자리 표시자에 대 한 계산 되는 매개 변수를 포함 하는 컬렉션을 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>입니다.  
  
 값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 속성은 뷰 상태에 저장 됩니다.  
  
> [!IMPORTANT]
>  클라이언트에서 받은 모든 필터 매개 변수 값의 유효성을 검사 하는 것이 좋습니다. 매개 변수 값은 필터 식으로 대체 및에 적용 하기만 하면 런타임에서 <xref:System.Data.DataView> 에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드. 사용 중인 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하려면 보안 조치로 속성입니다.  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 중간 계층 비즈니스 개체에서 데이터를 검색 하는 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 결과 표시 하는 컨트롤입니다. 두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체의 예제를 제공 합니다.  
  
 다음 코드 예제에 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 중간 계층 비즈니스 개체에서 데이터를 검색 하는 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 결과 표시 하는 컨트롤입니다. 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어로 데이터를 검색 하는 메서드를 검색 하는 경우에 데이터를 필터링 할 수는 <xref:System.Data.DataSet> 개체입니다. 이러한 이유로 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 데이터를 검색 하는 비즈니스 개체 메서드를 식별 하는 속성을 <xref:System.Data.DataSet>.  
  
 코드 예제에서는 구성를 <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.GridView> 컨트롤을 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 **제출** 단추입니다. 기본적으로 <xref:System.Web.UI.WebControls.TextBox> Northwind Traders 직원 중 하나의 이름으로 채워집니다. 합니다 <xref:System.Web.UI.WebControls.GridView> 에서 이름으로 식별 되는 직원에 대 한 정보를 표시 합니다 <xref:System.Web.UI.WebControls.TextBox>합니다. 다른 직원에 대 한 데이터를 검색할 합니다 <xref:System.Web.UI.WebControls.TextBox>해당 직원의 전체 이름을 입력 하 고 클릭 합니다 **제출** 단추.  
  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 속성에서 검색 된 데이터를 필터링 하는 데 사용 되는 식을 지정 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성입니다. 에 포함 된 매개 변수를 계산 되는 매개 변수 자리 표시자를 사용 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> 컬렉션입니다. 이 예제에서는 매개 변수 자리 표시자는 공백을 포함할 수 있는 문자열 형식 매개 변수 형식의 작은따옴표 제한 됩니다. 매개 변수 형식의 숫자 또는 날짜 형식인 경우에 따옴표가 필요 하지 않습니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 다음 코드 예제에서는 앞의 코드 예제를 사용 하는 중간 계층 비즈니스 개체의 예제를 제공 합니다. 코드 예제에서는 두 개의 기본 클래스로 이루어져 있습니다.  
  
-   `EmployeeLogic` 클래스는 비즈니스 논리를 캡슐화 하는 클래스입니다.  
  
-   `NorthwindEmployee` 클래스를 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.  
  
 간단히 하기 위해는 `EmployeeLogic` 클래스는 데이터 계층에서 데이터를 검색 하는 것이 아니라 데이터의 정적 집합을 만듭니다. 필터링을 보여 주기 위해 Northwind Traders 직원의 전체 이름을 제공 하는 샘플을 실행 하기 때문에 예를 들어도 유용 합니다.  
  
 전체 작업 예제를 컴파일 및 제공 되는 Web Forms 페이지 코드 예제를 사용 하 여 이러한 클래스를 사용 해야 합니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> 속성이 설정되어 있고 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> 메서드가 <see cref="T:System.Data.DataSet" />를 반환하지 않는 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>필터 작업 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> 하기 전에 필터 매개 변수 값에 대 한 유효성 검사 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 필터 작업을 수행 합니다. 취소할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 설정 하 여 작업을 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> 개체를 `true`입니다. 경우에 이벤트 발생은 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성을 설정 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
> [!IMPORTANT]
>  클라이언트에서 받은 모든 필터 매개 변수 값을 확인 해야 합니다. 매개 변수 값은 필터 식으로 대체 및에 적용 하기만 하면 런타임에서 <xref:System.Data.DataView> 에서 반환 되는 개체는 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 메서드. 사용 중인 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 필터링이 발생 하기 전에 매개 변수 값의 유효성을 검사 해야 반환 되는 항목의 수를 제한 하려면 보안 조치로 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> 문자열의 모든 매개 변수 자리 표시자와 연결된 매개 변수 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에 있는 모든 매개 변수 자리 표시자와 연결된 매개 변수 집합을 포함하는 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 데이터 필터링을 지원 경우에만 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드가 반환 되는 <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, 또는 <xref:System.Data.DataView> 개체.  
  
 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> 컬렉션에 지정 된 매개 변수를 사용 하 여 연결 된 된 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 속성입니다. 에 지정 된 매개 변수 자리 표시자를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 속성의 매개 변수 개체에 일치 하는 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> 컬렉션에서 지정 된 메서드가 하는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성 이라고 합니다.  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 중간 계층 비즈니스 개체에서 데이터를 검색 하는 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 결과 표시 하는 컨트롤입니다. 두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체의 예제를 제공 합니다.  
  
 다음 코드 예제에 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 중간 계층 비즈니스 개체에서 데이터를 검색 하는 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 결과 표시 하는 컨트롤입니다. 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어로 데이터를 검색 하는 메서드를 검색 하는 경우에 데이터를 필터링 할 수는 <xref:System.Data.DataSet> 개체입니다. 이러한 이유로 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 데이터를 검색 하는 비즈니스 개체 메서드를 식별 하는 속성을 <xref:System.Data.DataSet>.  
  
 코드 예제에서는 구성를 <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.GridView> 컨트롤을 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 및 **제출** 단추입니다. 기본적으로 <xref:System.Web.UI.WebControls.TextBox> Northwind Traders 직원 중 하나의 이름으로 채워집니다. 합니다 <xref:System.Web.UI.WebControls.GridView> 에서 이름으로 식별 되는 직원에 대 한 정보를 표시 합니다 <xref:System.Web.UI.WebControls.TextBox>합니다. 다른 직원에 대 한 데이터를 검색할 합니다 <xref:System.Web.UI.WebControls.TextBox>해당 직원의 전체 이름을 입력 하 고 클릭 합니다 **제출** 단추.  
  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> 속성으로 지정 된 메서드에 의해 검색 되는 데이터를 필터링 하는 데 사용 되는 식을 지정 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성입니다. 에 포함 된 매개 변수를 계산 되는 매개 변수 자리 표시자를 사용 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> 컬렉션입니다. 이 예제에서는 매개 변수 자리 표시자는 공백을 포함할 수 있는 문자열 형식 매개 변수 형식의 작은따옴표 제한 됩니다. 매개 변수 형식의 숫자 또는 날짜 형식인 경우에 따옴표가 필요 하지 않습니다. <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> 매개 변수 하나를 포함 하는 컬렉션을 <xref:System.Web.UI.WebControls.FormParameter> 에 바인딩된를 <xref:System.Web.UI.WebControls.TextBox> 컨트롤입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 다음 코드 예제에서는 앞의 코드 예제를 사용 하는 중간 계층 비즈니스 개체의 예제를 제공 합니다. 코드 예제에서는 두 개의 기본 클래스로 이루어져 있습니다.  
  
-   `EmployeeLogic` 클래스는 비즈니스 논리를 캡슐화 하는 클래스입니다.  
  
-   `NorthwindEmployee` 클래스를 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.  
  
 간단히 하기 위해는 `EmployeeLogic` 클래스는 데이터 계층에서 데이터를 검색 하는 것이 아니라 데이터의 정적 집합을 만듭니다. 필터링을 보여 주기 위해 Northwind Traders 직원의 전체 이름을 제공 하는 샘플을 실행 하기 때문에 예를 들어도 유용 합니다.  
  
 전체 작업 예제를 컴파일 및 제공 되는 Web Forms 페이지 코드 예제를 사용 하 여 이러한 클래스를 사용 해야 합니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> 속성이 설정되어 있고 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> 메서드가 <see cref="T:System.Data.DataSet" />를 반환하지 않는 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.Insert : System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">삽입 작업을 수행할 때 <see cref="T:System.Collections.IDictionary" /> 속성과 함께 사용되는 매개 변수의 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 컬렉션입니다. 메서드와 연결된 매개 변수가 없으면 <see langword="null" />을 전달합니다.</param>
        <summary>지정된 <paramref name="values" /> 컬렉션을 사용하여 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 속성으로 식별되는 비즈니스 개체 메서드를 호출하여 삽입 작업을 수행합니다.</summary>
        <returns>삽입된 행의 수를 반환하며, 수를 알 수 없는 경우에는 -1을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 반환 값은-1로, 알 수 없는 개수의 행 삽입 된 것을 의미 합니다. 다른 값을 반환 하려면 설정를 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 개체의를 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> 이벤트. 영향을 받는 행 수가 일반적으로 반환한를 `Insert` 비즈니스 개체 및 해당 값에 대 한 메서드는에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 개체의를 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> 이벤트.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 메서드 호출을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A> 전달 하는 메서드를 `values` 컬렉션입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> 속성이 <see langword="false" />를 반환합니다.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" /> 작업이 완료되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> 하거나 이벤트를 출력 매개 변수 및 반환 값의 값을 확인 한 후 예외가 throw 되었는지 여부를 결정 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 작업이 완료 합니다. 반환 값, 출력 매개 변수 및 예외 처리 속성에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" /> 작업 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 애플리케이션에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 수행 된 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 작업입니다. 매개 변수를 사용할 수는 <xref:System.Collections.IDictionary> 액세스 하는 컬렉션을 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 데이터 삽입을 제어 합니다. 두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체의 예제를 제공 합니다.  
  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 데이터 삽입을 제어 합니다. 합니다 <xref:System.Web.UI.WebControls.DetailsView> 처음에 새 표시 `NorthwindEmployee` 함께 자동으로 생성 된 레코드 **삽입** 단추입니다. 데이터의 필드에 입력 한 후 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭 합니다 **삽입** 단추입니다. 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성은 수행 하는 메서드를 식별 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 작업 합니다.  
  
 하지만이 코드 예제에서는 합니다 `UpdateEmployeeInfo` 필요; 메서드는 삽입을 수행 하는 `NorthwindEmployee` 매개 변수 데이터를 삽입 합니다. 따라서 컬렉션 하는 문자열을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 전달 자동으로 충분 하지 않습니다. `NorthwindEmployeeInserting` 대리자가는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> 처리 하는 개체를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> 이벤트 이전 입력된 매개 변수를 조작할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 작업 진행 합니다. 때문에 합니다 `UpdateEmployeeInfo` 메서드를 사용 하려면를 `NorthwindEmployee` 개체를 매개 변수로 하나는 문자열의 컬렉션을 사용 하 여 만든 후에 추가 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 매개 변수 이름을 사용 하 여 컬렉션 (`ne`) 메서드에 필요한 합니다. 형식 및 사용에 맞게 설계 되지 않은 메서드를 사용 하 여 데이터 원본으로 기존 중간 계층 개체를 사용 하는 경우에 다음과 같은 단계를 수행할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 작업을 수행할로 식별 되는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성 이라고 합니다. 경우는 `Insert` 개체의 메서드가 매개 변수를 포함 하는 메서드 시그니처를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 컬렉션에 대 한 메서드 시그니처 매개 변수와 일치 하는 이름 가진 매개 변수가 포함 되어야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 성공적으로 완료 하는 방법입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 다음 코드 예제에서는 앞의 코드 예제를 사용 하는 중간 계층 비즈니스 개체의 예제를 제공 합니다. 코드 예제에서는 두 개의 기본 클래스로 이루어져 있습니다.  
  
-   `EmployeeLogic` 비즈니스 논리를 캡슐화 하는 상태 비저장 클래스 클래스.  
  
-   `NorthwindEmployee` 클래스를 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.  
  
 추가 `NorthwindDataException` 클래스는 편의 위해 제공 됩니다.  
  
 전체 작업 예제를 컴파일 및 이러한 클래스를 사용 해야 합니다. `UpdateEmployeeInfo` 메서드 구현 되지 않은 완전히 하지 삽입할 데이터 Northwind Traders 데이터베이스이 예제를 테스트할 때 있도록 합니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 개체가 데이터를 삽입할 때 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />에서 데이터를 삽입할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 로 식별 되는 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성에는 인스턴스 메서드 일 수 있습니다 또는 `static` (`Shared` Visual Basic에서) 메서드. 인스턴스 메서드인 경우 비즈니스 개체가 만들어지고 소멸 될 때마다 지정 된 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성 이라고 합니다. 처리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 지정 된 메서드 앞에 비즈니스 개체를 사용 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성 이라고 합니다. 처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 으로 지정한 메서드의 후 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성 이라고 합니다. (`Dispose` 비즈니스 개체를 구현 하는 경우에 호출 되는 <xref:System.IDisposable> 인터페이스입니다.) 메서드인 경우는 `static` (`Shared` Visual Basic에서) 메서드를 비즈니스 개체가 생성 되지 않고 이러한 이벤트를 처리할 수 없습니다.  
  
 비즈니스 개체는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> (메서드 오버 로드) 이름이 같은 둘 이상의 함수나 메서드를 구현 하는 개체, 데이터 소스 컨트롤 합니다 에서매개변수를포함한조건집합에따라적절히호출하려고합니다.<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 컬렉션입니다. 경우 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 컬렉션에서 지정 된 메서드의 정의와 일치 하지 않습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 데이터 원본 속성 서명 예외를 throw 합니다.  
  
 값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성은 뷰 상태에 저장 됩니다.  
  
 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>을 참조하세요.  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 데이터 삽입을 제어 합니다. 두 번째 코드 예제에서는 첫 번째 코드 예제에 사용 되는 중간 계층 비즈니스 개체의 예제를 제공 합니다.  
  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 데이터 삽입을 제어 합니다. 합니다 <xref:System.Web.UI.WebControls.DetailsView> 처음에 새 표시 `NorthwindEmployee` 함께 자동으로 생성 된 레코드 **삽입** 단추입니다. 데이터의 필드에 입력 한 후 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭 합니다 **삽입** 단추입니다. 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성은 수행 하는 메서드를 식별 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 작업 합니다.  
  
 이 코드 예제에서는 합니다 `UpdateEmployeeInfo` 그러나; 메서드는 삽입을 수행 하는 `NorthwindEmployee` 데이터를 삽입 하려면 매개 변수입니다. 따라서 컬렉션 하는 문자열을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 전달 자동으로 충분 하지 않습니다. `NorthwindEmployeeInserting` 대리자가는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> 처리 하는 개체를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> 이벤트 이전 입력된 매개 변수를 조작할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 작업 진행 합니다. 때문에 합니다 `UpdateEmployeeInfo` 메서드를 사용 하려면를 `NorthwindEmployee` 개체를 매개 변수로 하나 문자열의 컬렉션을 사용 하 여 추가할 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 매개 변수 이름을 사용 하 여 컬렉션 (`ne`) 메서드에 필요한 합니다. 형식 및 사용에 맞게 설계 되지 않은 메서드를 사용 하 여 데이터 원본으로 기존 중간 계층 개체를 사용 하는 경우에 다음과 같은 단계를 수행할 수는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 작업을 수행할로 식별 되는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성 이라고 합니다. 경우는 `Insert` 개체의 메서드가 매개 변수를 포함 하는 메서드 시그니처를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 컬렉션에 대 한 메서드 시그니처 매개 변수와 일치 하는 이름 가진 매개 변수가 포함 되어야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 성공적으로 완료 하는 방법입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 다음 코드 예제에서는 이전 코드 예제를 사용 하는 중간 계층 비즈니스 개체의 예제를 제공 합니다. 두 개의 기본적인 클래스 및 추가 클래스의 코드 예제에서는 구성 됩니다.  
  
-   `EmployeeLogic` 클래스는 비즈니스 논리를 캡슐화 하는 상태 비저장 클래스입니다.  
  
-   `NorthwindEmployee` 클래스는 로드 하 고 데이터 계층에서 데이터를 유지 하는 데 필요한 기본적인 기능만 포함 하는 모델 클래스입니다.  
  
-   추가 `NorthwindDataException` 클래스는 편의 위해 제공 됩니다.  
  
 전체 작업 예제를 컴파일 및 이러한 클래스를 사용 해야 합니다. `UpdateEmployeeInfo` 메서드 구현 되지 않은 완전히 됩니다 하지 삽입할 수 있도록 데이터를 Northwind 데이터베이스에이 코드 예제를 사용 하 여 실험 하는 경우.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> 메서드에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이름 및 형식에 포함 된 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 컬렉션에 지정 된 메서드는 매개 변수의 형식과 이름 일치 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성 서명. 와 같은 매개 변수를 제공 하는 데이터 바인딩된 컨트롤을 사용 하는 경우 <xref:System.Web.UI.WebControls.GridView> 하 고 <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤에서 제공 하는 이러한 매개 변수를 사용 하 여 컬렉션에 명시적으로 지정 된 매개 변수를 자동으로 병합 데이터 바인딩된 컨트롤입니다. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>을 참조하세요.  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 데이터 삽입을 제어 합니다. 두 번째 코드 예의 예제 구현을 제공 합니다 `Insert` 첫 번째 코드 예제에 사용 되는 메서드.  
  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.DetailsView> 데이터 삽입을 제어 합니다. 합니다 <xref:System.Web.UI.WebControls.DetailsView> 처음에 새 표시 `NorthwindEmployee` 함께 자동으로 생성 된 레코드 **삽입** 단추입니다. 데이터의 필드에 입력 한 후 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 클릭 합니다 **삽입** 단추입니다. 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성은 수행 하는 메서드를 식별 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 작업 합니다.  
  
 클릭 하면를 **삽입** 단추를를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 작업이 수행 하 여 지정 된 메서드를 사용 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성 및 지정 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 컬렉션. 이 코드 예제에서는 하나의 매개 변수는에 지정 된 된 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 감독자의 ID에 해당 하는 컬렉션 ID에 표시 되는 경우에 이므로이 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> 컬렉션에 대 한는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.BoundField> 개체에 문자열로 전달 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤. 명시적으로 추가 하 여는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 로 설정 된 속성을 <xref:System.TypeCode.Int32> 값으로 전달 됩니다에서 올바르게를 <xref:System.Web.UI.WebControls.ObjectDataSource> 메서드에으로 `int`, 아니라 `string`.  
  
 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 작업을 수행할로 식별 되는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> 속성 이라고 합니다. 경우는 `Insert` 개체의 메서드가 매개 변수를 포함 하는 메서드 시그니처를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 컬렉션에 대 한 메서드 시그니처 매개 변수와 일치 하는 이름 가진 매개 변수가 포함 되어야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 성공적으로 완료 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 다음 코드 예제에서는의 예제 구현을 제공 합니다 `Insert` 앞의 코드 예제를 사용 하는 메서드. 합니다 `InsertNewEmployeeWrapper` 메서드가 추가 되는 `EmployeeLogic` 개체를 보다 쉽게 작업할 수 있도록 중간 계층 개체를 <xref:System.Web.UI.WebControls.ObjectDataSource> 실제 비즈니스 논리를 쓰지 않고도 웹 시나리오에서.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 개체가 해당 뷰 상태의 변경 내용을 저장하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>데이터 소스 뷰에서 해당 상태를 저장하도록 표시되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="objectDataSourceView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">복원할 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 상태를 나타내는 개체입니다.</param>
        <summary>데이터 소스 뷰를 이전에 저장된 뷰 상태로 복원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는.NET Framework 인프라에서 기본적으로 사용 하며 사용자 코드에서 직접 사용할 수 없습니다.  그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A> 에 대 한 뷰 상태 정보를 복원 하는 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 저장 한 이전 페이지 요청에서 개체를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스 페이징 지원을 위해 검색할 레코드의 수를 나타내는 데 사용되는 데이터 검색 메서드 매개 변수의 이름을 가져오거나 설정합니다.</summary>
        <value>검색할 레코드의 수를 나타내는 데 사용되는 메서드 매개 변수의 이름입니다. 기본값은 <c>"maximumRows"</c>합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> 속성은 데이터 소스 페이징을 지원 하는 데 사용 됩니다. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>을 참조하세요.  
  
 값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> 속성은 뷰 상태에 저장 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 속성에 의해 식별되는 형식의 인스턴스를 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 개체가 만든 후에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 하거나 이벤트를 비즈니스 개체, 속성 설정의 다른 메서드를 호출 하기 전에 비즈니스 개체와 관련 된 다른 초기화를 수행 하는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 호출 합니다 `Data` 비즈니스 개체에 대 한 메서드. 개체에 대 한 참조를 통해 액세스 하는 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> 속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> 개체.  
  
 경우 데이터 작업을 수행 하려면 식별 되는 메서드는 `static` (`Shared` Visual Basic에서), <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> 고 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 이벤트는 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 속성에 의해 식별되는 형식의 인스턴스를 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 개체가 만들기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤은 자동으로 리플렉션을 사용 하 여 해당 인스턴스를 만들려면 비즈니스 개체의 기본 생성자를 호출 합니다. 처리를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> 이벤트를 명시적으로 다른 생성자를 호출 하 고 결과 개체의 인스턴스를 설정 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> 속성은 연결 된 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 경우 데이터 작업을 수행 하려면 식별 되는 메서드는 `static` (`Shared` Visual Basic에서), <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> 고 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 이벤트는 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 개체가 만든 개체의 인스턴스를 삭제할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 비즈니스 개체의 인스턴스가 삭제 되기 전에 이벤트가 발생 합니다. 비즈니스 개체를 구현 하는 경우는 <xref:System.IDisposable> 인터페이스를 <xref:System.IDisposable.Dispose%2A> 메서드가 이후에 호출을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 이벤트가 발생 합니다.  
  
 처리는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 개체에서 다른 메서드를 호출 하 고 속성을 설정 하거나 개체를 제거 하기 전에 개체에 관련 된 정리를 수행 하는 이벤트입니다. 개체에 대 한 참조를 통해 액세스 하는 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> 속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> 개체.  
  
 경우 데이터 작업을 수행 하려면 식별 되는 메서드는 `static` (`Shared` Visual Basic에서), <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Delete" /> 또는 <see langword="Update" /> 메서드에 전달된 원래 값에 대한 매개 변수의 이름에 적용할 서식 문자열을 가져오거나 설정합니다.</summary>
        <value><see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> 또는 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> 메서드에 전달된 모든 <paramref name="oldValues" />의 이름에 적용된 서식 문자열을 나타내는 문자열입니다. 기본값은 "{0}", 즉, 매개 변수 이름을 필드 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 서식 문자열을 사용 하 여 식별 되는 것과 같은 기본 키에만 적용할를 `DataKeyNames` 삭제 또는 데이터 바인딩된 컨트롤의 속성 업데이트 시나리오 및 위치를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 속성이 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값 및 해당 데이터 메서드에 전달 되는 원래 값의 집합입니다.  
  
 변경할 수 있는 두 가지 일반적인 시나리오는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 속성은 다음과 같습니다.  
  
-   업데이트의 이전 및 새 값을 구분 하 합니다. 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값, 매개 변수는 원래 및 새 값에 추가 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션. 서식 문자열을 사용 하지 않고 이름이 같은 두 개의 매개 변수는 각 데이터 필드에 대해 만들어집니다. 원래 값 매개 변수의 이름을 변경 하 여 충돌을 감지 하 고 키 값을 비교 하 여 원래 데이터 원본에 데이터를 비교할 수 있습니다.  
  
-   일부 비주얼 디자이너에는 원래 값 및 키에 대 한 특정 명명 체계를 구현 합니다.  
  
 값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 뷰 상태에 저장 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnDeleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" /> 개체가 삭제 작업을 완료한 후에 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다. <xref:System.Web.UI.WebControls.GridView> 처음에 지정 된 메서드를 사용 하 여 모든 직원의 집합을 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성에서 데이터를 검색 하는 `EmployeeLogic` 개체. 때문에 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`의 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 표시를 **삭제** 단추입니다.  
  
 클릭 하면를 **삭제** 단추를를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 작업이 수행 하 여 지정 된 메서드를 사용 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성 및 지정 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> 컬렉션. 이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다. `NorthwindEmployeeDeleting` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> 되기 전, 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 작업을 수행 및 `NorthwindEmployeeDeleted` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> 후 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 에 작업이 완료 되 예외 처리를 수행 합니다. 이 예제의 경우는 `NorthwindDataException` 는이 대리자에 의해 처리 됩니다 throw 합니다.  
  
 구현을 확인 하는 `EmployeeLogic` 이 코드 예제는 중간 계층 비즈니스 개체 참조 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> 파생된 클래스에서 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit&#xA;override this.OnDeleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit" Usage="objectDataSourceView.OnDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" /> 개체가 삭제 작업을 시도하기 전에 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 비즈니스 개체를 사용 하 여 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 컨트롤 데이터를 삭제 합니다. <xref:System.Web.UI.WebControls.GridView> 처음에 지정 된 메서드를 사용 하 여 모든 직원의 집합을 표시 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성에서 데이터를 검색 하는 `EmployeeLogic` 개체. 때문에 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`의 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 표시를 **삭제** 단추입니다.  
  
 클릭 하면를 **삭제** 단추를를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 작업이 수행 하 여 지정 된 메서드를 사용 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> 속성 및 지정 된 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> 컬렉션. 이 코드 예제에서는 몇 가지 전처리 및 후 처리 단계도 수행 됩니다. `NorthwindEmployeeDeleting` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> 되기 전, 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 작업을 수행 및 `NorthwindEmployeeDeleted` 대리자를 처리 하기 위해 호출 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> 후 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 에 작업이 완료 되 예외 처리를 수행 합니다. 이 예제의 경우는 `NorthwindDataException` 는이 대리자에 의해 처리 됩니다 throw 합니다.  
  
 구현을 확인 하는 `EmployeeLogic` 이 코드 예제는 중간 계층 비즈니스 개체 참조 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As ObjectDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::ObjectDataSourceFilteringEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFiltering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs -&gt; unit&#xA;override this.OnFiltering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs -&gt; unit" Usage="objectDataSourceView.OnFiltering e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" /> 개체가 필터링 작업을 시도하기 전에 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" /> 파생된 클래스에서 메서드를 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" /> 대리자를 등록 하는 기본 클래스에 대 한 메서드 이벤트를 수신 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnInserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" /> 개체가 삽입 작업을 완료한 후에 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> 파생된 클래스에서 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit&#xA;override this.OnInserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit" Usage="objectDataSourceView.OnInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" /> 개체가 삽입 작업을 시도하기 전에 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> 데이터 작업을 수행 하려면 식별 되는 메서드가 아닌 경우에 메서드가 호출 되 `static` (`Shared` Visual Basic에서).  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectCreated(class System.Web.UI.WebControls.ObjectDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectCreated (e As ObjectDataSourceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectCreated(System::Web::UI::WebControls::ObjectDataSourceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectCreated : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit&#xA;override this.OnObjectCreated : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit" Usage="objectDataSourceView.OnObjectCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" /> 속성에 의해 식별되는 개체의 인스턴스를 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />가 만든 후에 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> 데이터 작업을 수행 하려면 식별 되는 메서드가 아닌 경우에 메서드가 호출 되 `static` (`Shared` Visual Basic에서).  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>을 참조하세요.  
  
 또한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectCreating">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectCreating(class System.Web.UI.WebControls.ObjectDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectCreating (e As ObjectDataSourceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectCreating(System::Web::UI::WebControls::ObjectDataSourceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectCreating : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit&#xA;override this.OnObjectCreating : System.Web.UI.WebControls.ObjectDataSourceEventArgs -&gt; unit" Usage="objectDataSourceView.OnObjectCreating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" /> 개체가 데이터 작업을 수행할 비즈니스 개체의 인스턴스를 만들기 전에 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectDisposing">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectDisposing(class System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectDisposing (e As ObjectDataSourceDisposingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectDisposing(System::Web::UI::WebControls::ObjectDataSourceDisposingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs -&gt; unit&#xA;override this.OnObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs -&gt; unit" Usage="objectDataSourceView.OnObjectDisposing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" /> 개체가 인스턴스화된 형식을 삭제하기 전에 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 데이터 작업을 수행 하려면 생성 된 개체의 인스턴스는 삭제 될 때 호출 됩니다. `Dispose` 메서드가 호출 되는 경우에로 식별 되는 형식을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> 속성이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelected : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnSelected : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnSelected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" /> 개체가 검색 작업을 완료한 후에 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As ObjectDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::ObjectDataSourceSelectingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs -&gt; unit&#xA;override this.OnSelecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs -&gt; unit" Usage="objectDataSourceView.OnSelecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" /> 개체가 데이터 검색 작업을 시도하기 바로 전에 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As ObjectDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::ObjectDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdated : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnUpdated : System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs -&gt; unit" Usage="objectDataSourceView.OnUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" /> 개체가 업데이트 작업을 완료한 후에 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As ObjectDataSourceMethodEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::ObjectDataSourceMethodEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdating : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit&#xA;override this.OnUpdating : System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs -&gt; unit" Usage="objectDataSourceView.OnUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" /> 개체가 업데이트 작업을 시도하기 바로 전에 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 여러 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 데이터를 업데이트 합니다. <xref:System.Web.UI.WebControls.DropDownList> 의 이름을 표시 하는 `NorthwindEmployee`, 하는 동안는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤은 입력 하 고 주소 정보를 업데이트 하는 데 사용 됩니다. 때문에 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 컬렉션에 포함를 <xref:System.Web.UI.WebControls.ControlParameter> 의 선택된 된 값에 바인딩되는 개체를 <xref:System.Web.UI.WebControls.DropDownList>, 트리거하는 단추는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 직원을 선택한 후에 작업을 사용 하도록 설정 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> 파생된 클래스에서 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />이 나타내는 형식의 개체를 생성하기 위해 문자열 값을 실제 속성 형식으로 변환할 때 사용되는 문화권 정보를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>문화권 정보입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="objectDataSourceView.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>페이지가 서버에 다시 게시된 이후에 발생한 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 개체에 대한 뷰 상태의 변경 사항을 저장합니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 뷰 상태의 변경 사항이 포함된 개체를 반환하며, 개체에 연결된 뷰 상태가 없는 경우에는 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> 메서드는 주로 컨트롤 개발자가 사용 됩니다.  
  
 뷰 상태는 서버 컨트롤의 속성 값의 누적 된 것입니다. 이러한 값에 자동으로 배치 되는 <xref:System.Web.UI.Control.ViewState%2A> 인스턴스인 서버 컨트롤에 대 한 속성의는 <xref:System.Web.UI.StateBag> 클래스. <xref:System.Web.UI.Control.ViewState%2A> 값은 다음 서버 컨트롤 주기의 상태 저장 단계 후 문자열 개체에 유지 됩니다.  
  
 보기 상태 내용 보기 상태를 저장 하는 경우 HTML에 저장 된 변수 클라이언트에 반환 됩니다 `Hidden` 요소입니다. 사용자 지정 서버 컨트롤을 만들 때 재정의 하 여 효율성을 높일 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> 메서드 및 수정 된 `ViewState` 서버 컨트롤에 대 한 속성입니다. 자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="objectDataSourceView.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">데이터에 대해 기본 데이터 검색 이상의 작업을 요청하는 데 사용되는 <see cref="T:System.Web.UI.DataSourceSelectArguments" />입니다.</param>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> 속성으로 식별되는 메서드를 호출하고 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 컬렉션의 값을 전달하여 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" /> 속성으로 식별되는 개체로부터 데이터를 검색합니다.</summary>
        <returns>데이터 행의 <see cref="T:System.Collections.IEnumerable" /> 목록입니다. 자세한 내용은 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />을 참조하세요.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드 호출을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> 전달의 `arguments` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> 메서드에 전달된 <paramref name="arguments" />는 검색된 데이터를 페이징 또는 정렬할 수 있도록 데이터 검색 중에 데이터 소스가 일부 추가 작업을 수행해야 하지만 데이터 소스 컨트롤이 필요한 기능을 지원하지 않음을 나타내는 경우</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 컨트롤이 행 수를 검색할 때 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />가 행 수를 검색할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 데이터 소스 페이징을 지원 하기 위해 총 행 수를 검색 하는 데 사용 되는 비즈니스 개체 메서드를 식별 합니다. <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 경우에 속성은 평가 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> 속성이 `true`합니다. 페이징을 지 원하는 방법에 대 한 정보에 대 한 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView>를 참조 하세요 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>합니다.  
  
 값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> 속성은 뷰 상태에 저장 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 검색 작업이 완료되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> 이벤트 출력 매개 변수 및 반환 값의 값을 확인 또는 데이터 검색 작업이 완료 된 후 예외가 throw 되었는지 여부를 확인 합니다. 반환 값, 출력 매개 변수 및 예외 처리 속성에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 검색 작업 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 애플리케이션에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 데이터 검색 수행 작업입니다. 매개 변수를 사용할 수는 <xref:System.Collections.IDictionary> 액세스 하는 컬렉션을 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 컨트롤이 데이터를 검색할 때 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />에서 데이터를 검색할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 된 메서드가 모든 메서드 시그니처를 가질 수 있습니다 하지만 되려면에서 다음 표에 나열 된 형식 중 하나를 반환 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 성공적으로 호출할 수 제어  
  
|반환 형식|작업|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|합니다 <xref:System.Collections.IEnumerable> 에서 반환 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드.|  
|<xref:System.Data.DataTable>|A <xref:System.Data.DataView> 사용 하 여 만들어집니다 합니다 <xref:System.Data.DataTable> 반환한 및는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드.|  
|<xref:System.Data.DataSet>|첫 번째 <xref:System.Data.DataTable> 의 합니다 <xref:System.Data.DataSet> 추출 및 <xref:System.Data.DataView> 만들어지고 반환한는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드.|  
|<xref:System.Object>|개체를 단일 요소에 래핑됩니다 <xref:System.Collections.IEnumerable> 반환한는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드.|  
  
 로 식별 되는 메서드를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성에는 인스턴스 메서드 일 수 있습니다 또는 `static` (`Shared` Visual Basic에서) 메서드. 비즈니스 개체가 만들어지고 제거 될 때마다 인스턴스 메서드인 경우는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 메서드가 호출 됩니다. 처리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 지정 된 메서드 앞에 비즈니스 개체를 사용 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성 이라고 합니다. 처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 으로 지정한 메서드의 후 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성 이라고 합니다. (`Dispose` 비즈니스 개체를 구현 하는 경우에 호출 되는 <xref:System.IDisposable> 인터페이스입니다.) 메서드인 경우는 `static` (`Shared` Visual Basic에서) 메서드를 비즈니스 개체가 생성 되지 않고 이러한 이벤트를 처리할 수 없습니다.  
  
 비즈니스 개체는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 둘 이상의 메서드 또는 함수 (메서드 오버 로드) 이름이 같은 컨트롤 구현 작동, 데이터 소스 컨트롤의 올바른 매개 변수를 포함 한 조건 집합에 따라 호출 하려고 합니다. 에 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> 컬렉션입니다. 경우 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> 컬렉션의 지정 된 메서드의 시그니처와 일치 하지 않습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성을 데이터 원본 예외를 throw 합니다.  
  
 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=nameWithType>을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는 어떻게를 <xref:System.Web.UI.WebControls.GridView> 컨트롤에서 사용 하 여 데이터를 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource> Web Forms 페이지에 컨트롤입니다. <xref:System.Web.UI.WebControls.ObjectDataSource> 식별 하는 부분적으로 또는 완전히 정규화 된 클래스 이름을 해당 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 속성과 메서드를 사용 하 여 데이터를 검색 하기 위해 호출 됩니다 해당 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성입니다. 런타임 시 개체를 만든 및 리플렉션을 사용 하 여 메서드를 호출 합니다. <xref:System.Web.UI.WebControls.GridView> 컨트롤을 열거 합니다는 <xref:System.Collections.IEnumerable> 에서 반환 되는 컬렉션을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>, 다음 데이터를 표시 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> 메서드에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에 의해 지정된 메서드에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이름 및 형식에 포함 된 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> 컬렉션에 지정 된 메서드는 매개 변수의 형식과 이름 일치 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성 서명. 와 같은 매개 변수를 제공 하는 데이터 바인딩된 컨트롤을 사용 하는 경우 <xref:System.Web.UI.WebControls.GridView> 하 고 <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤에서 제공 하는 이러한 매개 변수를 사용 하 여 컬렉션에 명시적으로 지정 된 매개 변수를 자동으로 병합 데이터 바인딩된 컨트롤입니다. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=nameWithType>을 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하 여 단일 데이터 레코드를 검색 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 선택한 다음에 있는 데이터 레코드를 표시 한 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤입니다. <xref:System.Web.UI.WebControls.ObjectDataSource> 호출 하 여 특정 직원 레코드를 검색 합니다 `GetEmployee` 메서드를 `EmployeeLogic` 클래스입니다. `GetEmployee` 메서드는 직원 ID 매개 변수가 필요 합니다. <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 사용 하는 <xref:System.Web.UI.WebControls.QueryStringParameter> 개체의 해당 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> 컬렉션 ID를 전달 하는 `GetEmployee` 메서드.  
  
 구현 예를 보려면 합니다 `EmployeeLogic` 클래스 및 `GetEmployee` 메서드를 참조 하세요 <xref:System.Web.UI.WebControls.ObjectDataSource>합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스 정렬 지원을 위한 정렬 식을 지정하는 데 사용되는 데이터 검색 메서드 매개 변수의 이름을 가져오거나 설정합니다.</summary>
        <value>이 정렬 식 값을 받는 매개 변수를 나타내는 데 사용되는 메서드 매개 변수의 이름입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> 속성은 데이터 소스 정렬을 지원 하기 위해 사용 합니다. 경우는 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> 속성이 설정 되어를 <xref:System.Web.UI.DataSourceSelectArguments> 개체를 전달할를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 메서드를를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> 속성으로 지정한 메서드의 매개 변수 이름을 식별는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 정렬을 허용 하는 비즈니스 개체 속성 식 값입니다.  
  
 값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> 속성은 뷰 상태에 저장 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스 페이징 지원을 위해 결과 집합에서 검색할 첫 번째 레코드의 정수 인덱스를 나타내는 데 사용되는 데이터 검색 메서드 매개 변수의 이름을 가져오거나 설정합니다.</summary>
        <value>검색할 첫 번째 레코드를 나타내는 데 사용되는 비즈니스 개체 메서드 매개 변수의 이름입니다. 기본값은 "startRowIndex"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> 페이징을 사용 하도록 설정 되어야 합니다. 페이징을 지 원하는 방법에 대 한 정보에 대 한 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 개체를 참조 하십시오 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>합니다.  
  
 값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> 속성은 뷰 상태에 저장 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />를 참조하세요.</summary>
        <value>데이터 소스 뷰에서 해당 상태를 저장하도록 표시되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, 사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 캐스팅 된는 <xref:System.Web.UI.IStateManager> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">복원할 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 상태를 나타내는 개체입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />를 참조하세요.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ObjectDataSourceView> 인스턴스가 <xref:System.Web.UI.IStateManager> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IStateManager.SaveViewState" />를 참조하세요.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 뷰 상태의 변경 내용이 들어 있는 개체이며, 그렇지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ObjectDataSourceView> 인스턴스가 <xref:System.Web.UI.IStateManager> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IStateManager.TrackViewState" />를 참조하세요.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.ObjectDataSourceView> 인스턴스가 <xref:System.Web.UI.IStateManager> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="objectDataSourceView.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 개체가 해당 뷰 상태의 변경 사항을 추적하게 되어 이러한 변경 사항이 컨트롤의 <see cref="P:System.Web.UI.Control.ViewState" /> 개체에 저장되며 같은 페이지에서 발생하는 여러 요청에 대해 유지됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> 메서드는 주로 컨트롤 개발자가 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 컨트롤이 나타내는 클래스의 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSource" />에서 나타내는 개체의 형식을 식별하는 부분적으로 정규화된 클래스 이름 또는 완전히 정규화된 클래스 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 개체의 인스턴스를 만들는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 바인딩된, 컨트롤이 리플렉션을 사용 하 여 런타임 시 형식 이름으로 식별 되는 형식을 로드 합니다. 따라서 값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> Bin 디렉터리나 App_Code 디렉터리에서에 있는 코드는 부분적으로 정규화 된 형식 또는 전역 어셈블리 캐시에 등록 되어 있는 코드에 대 한 정규화 된 형식 이름을 속성 일 수 있습니다. 전역 어셈블리 캐시를 사용 하는 경우에 대 한 적절 한 참조를 추가 해야 합니다는 `assemblies` 합니다 Machine.config 또는 Web.config 구성 파일의 섹션입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 어떻게를 <xref:System.Web.UI.WebControls.GridView> 컨트롤에서 사용 하 여 데이터를 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSource> Web Forms 페이지에 컨트롤입니다. <xref:System.Web.UI.WebControls.ObjectDataSource> 식별 하는 부분적으로 또는 완전히 정규화 된 클래스 이름을 해당 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> 속성과 메서드를 사용 하 여 데이터를 검색 하기 위해 호출 됩니다 해당 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 속성입니다. 런타임 시 개체를 만든 및 리플렉션을 사용 하 여 메서드를 호출 합니다. <xref:System.Web.UI.WebControls.GridView> 컨트롤을 열거 합니다는 <xref:System.Collections.IEnumerable> 에서 반환 되는 컬렉션을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 데이터를 표시 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="objectDataSourceView.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">업데이트할 항목을 식별하는 데 사용되는 키 값의 <see cref="T:System.Collections.IDictionary" />입니다. 이러한 매개 변수는 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 속성에 의해 지정된 메서드와 함께 사용되어 업데이트 작업을 수행합니다. 메서드와 연결된 매개 변수가 없으면 <see langword="null" />을 전달합니다.</param>
        <param name="values">데이터 소스에 적용할 새 값의 <see cref="T:System.Collections.IDictionary" />입니다. 이러한 매개 변수는 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 속성에 의해 지정된 메서드와 함께 사용되어 데이터베이스 업데이트 작업을 수행합니다. 메서드와 연결된 매개 변수가 없으면 <see langword="null" />을 전달합니다.</param>
        <param name="oldValues">데이터 소스의 항목 일치에 사용되는 키가 아닌 추가 값이 포함된 <see cref="T:System.Collections.IDictionary" />입니다. <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> 속성이 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 필드로 설정된 경우에만 행 값이 삭제 메서드에게 전달됩니다.</param>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 속성으로 식별되는 메서드를 호출하고 <paramref name="keys" />, <paramref name="values" /> 또는 <paramref name="oldValues" /> 컬렉션에 제공되는 매개 변수를 사용하여 업데이트 작업을 수행합니다.</summary>
        <returns>업데이트된 행의 수를 반환하며, 수를 알 수 없는 경우에는 -1을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 반환 값은-1로, 행 번호를 알 수 없는 업데이트 된 것을 의미 합니다. 다른 값을 반환 하려면 설정를 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 개체의를 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> 이벤트. 영향을 받는 행 수가 일반적으로 반환한를 `Update` 비즈니스 개체 및 해당 값에 대 한 메서드는에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 의 매개 변수는 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> 이벤트.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 메서드 호출을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A> 전달 하는 메서드는 `keys`, `values`, 및 `oldValues` 매개 변수.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> 작업이 완료되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> 하거나 이벤트를 출력 매개 변수 및 반환 값의 값을 확인 한 후 예외가 throw 되었는지 여부를 결정 하는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 작업이 완료 합니다. 반환 값, 출력 매개 변수 및 예외 처리 속성에서 사용할 수는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 개체가 데이터를 업데이트할 때 호출하는 메서드나 함수의 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />에서 데이터를 업데이트할 때 사용하는 메서드나 함수의 이름을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 가정 개체로 식별 되는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 속성 일괄 처리 대신 한 번에 한 업데이트를 수행 합니다.  
  
 메서드는 인스턴스 메서드 일 수 또는 `static` (`Shared` Visual Basic에서) 메서드. 인스턴스 메서드인 경우 비즈니스 개체가 만들어지고 소멸 될 때마다 지정 된 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 속성 이라고 합니다. 처리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> 지정 된 메서드 앞에 비즈니스 개체를 사용 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 속성 이라고 합니다. 처리할 수도 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 후 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 메서드가 호출 됩니다. (`Dispose` 비즈니스 개체를 구현 하는 경우에 호출 되는 <xref:System.IDisposable> 인터페이스입니다.) 메서드인 경우는 `static` (`Shared` Visual Basic에서) 메서드를 비즈니스 개체가 생성 되지 않고 이러한 이벤트를 처리할 수 없습니다.  
  
 비즈니스 개체는 경우는 <xref:System.Web.UI.WebControls.ObjectDataSource> 둘 이상의 메서드 또는 함수 이름이 (메서드 오버 로드)를 사용 하 여 구현 된 작동 되는 개체, 데이터 소스 컨트롤의 올바른 매개 변수를 포함 한 조건 집합에 따라 호출 하려고 합니다. 에 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 컬렉션입니다. 경우 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 컬렉션의 지정 된 메서드의 시그니처와 일치 하지 않습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 속성을 데이터 원본 예외를 throw 합니다.  
  
 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=nameWithType>을 참조하세요.  
  
 값을 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 속성은 뷰 상태에 저장 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 여러 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 데이터를 업데이트 합니다. <xref:System.Web.UI.WebControls.DropDownList> 의 이름을 표시 하는 `NorthwindEmployee`, 하는 동안는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤은 입력 하 고 주소 정보를 업데이트 하는 데 사용 됩니다. 때문에 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 컬렉션에 포함를 <xref:System.Web.UI.WebControls.ControlParameter> 의 선택된 된 값에 바인딩되는 개체를 <xref:System.Web.UI.WebControls.DropDownList>, 트리거하는 단추는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 직원을 선택한 후에 작업을 사용 하도록 설정 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> 메서드에서 사용하는 매개 변수가 포함된 매개 변수 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이름 및 형식에 포함 된 매개 변수를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 컬렉션에 지정 된 메서드는 매개 변수의 형식과 이름 일치 해야 합니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> 속성 서명. 매개 변수 이름은 영향을 받지는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> 속성 및 대/소문자 구분 됩니다. 와 같은 매개 변수를 제공 하는 데이터 바인딩된 컨트롤을 사용 하는 경우 <xref:System.Web.UI.WebControls.GridView> 하 고 <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤에서 제공 하는 이러한 매개 변수를 사용 하 여 컬렉션에 명시적으로 지정 된 매개 변수를 자동으로 병합 데이터 바인딩된 컨트롤입니다. 자세한 내용은 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=nameWithType>을 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 여러 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 데이터를 업데이트 합니다. <xref:System.Web.UI.WebControls.DropDownList> 의 이름을 표시 하는 `NorthwindEmployee`, 하는 동안는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤은 입력 하 고 주소 정보를 업데이트 하는 데 사용 됩니다. 때문에 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 컬렉션에 포함를 <xref:System.Web.UI.WebControls.ControlParameter> 의 선택된 된 값에 바인딩되는 개체를 <xref:System.Web.UI.WebControls.DropDownList>, 트리거하는 단추는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 직원을 선택한 후에 작업을 사용 하도록 설정 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> 작업 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 애플리케이션에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 수행 된 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 작업입니다. 매개 변수를 사용할 수는 <xref:System.Collections.IDictionary> 하 여 액세스 하는 컬렉션을 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> 속성에 의해 노출 되는 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> 개체.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 여러 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤 데이터를 업데이트 합니다. <xref:System.Web.UI.WebControls.DropDownList> 의 이름을 표시 하는 `NorthwindEmployee`, 하는 동안는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤은 입력 하 고 주소 정보를 업데이트 하는 데 사용 됩니다. 때문에 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> 컬렉션에 포함를 <xref:System.Web.UI.WebControls.ControlParameter> 의 선택된 된 값에 바인딩되는 개체를 <xref:System.Web.UI.WebControls.DropDownList>, 트리거하는 단추는 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 직원을 선택한 후에 작업을 사용 하도록 설정 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>