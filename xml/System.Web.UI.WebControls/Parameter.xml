<Type Name="Parameter" FullName="System.Web.UI.WebControls.Parameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="854630fa15ea40ff3f07bc633a4fc99d432f1e43" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55321931" /></Metadata><TypeSignature Language="C#" Value="public class Parameter : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Parameter extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="VB.NET" Value="Public Class Parameter&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class Parameter : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type Parameter = class&#xA;    interface ICloneable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DefaultValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>데이터 소스 제어에서 애플리케이션 변수, 사용자 ID/선택 항목 및 기타 데이터에 바인딩하는 데 사용할 메커니즘을 제공합니다. 모든 ASP.NET 매개 변수 형식에 대한 기본 클래스로 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> 클래스는 매개 변수가 있는 SQL 쿼리를 필터링 식, 매개 변수를 나타내는 또는 선택, 필터링 또는 데이터를 수정 하려면 ASP.NET 데이터 소스 제어는 비즈니스 개체 메서드 호출을 사용 합니다. <xref:System.Web.UI.WebControls.Parameter> 개체는 <xref:System.Web.UI.WebControls.ParameterCollection> 개체에 포함되어 있습니다. <xref:System.Web.UI.WebControls.Parameter> 개체는 어떤 방법을 사용 되는 데이터 소스 컨트롤에서 데이터와 상호 작용을 나타내는 변수 값을 바인딩할 런타임에 평가 됩니다.  
  
 파생 된 클래스를 사용 하 여 <xref:System.Web.UI.WebControls.Parameter> 데이터 원본 및 데이터 웹 기반 애플리케이션을 빌드할 데이터 바인딩된 컨트롤을 사용 하 여 합니다. 이러한 매개 변수 클래스는 특정 유형의 SQL 쿼리 문자열, 비즈니스 개체 메서드 매개 변수 등의 자리 표시자에 웹 애플리케이션에서 찾은 값을 바인딩할 데이터 소스 컨트롤에서 사용 됩니다. 다음 표에서 ASP.NET에 포함 된 매개 변수 형식을 나열 합니다.  
  
|||  
|-|-|  
|<xref:System.Web.UI.WebControls.ControlParameter>|웹 서버 컨트롤의 모든 공용 속성에 바인딩합니다.|  
|<xref:System.Web.UI.WebControls.FormParameter>|양식 필드에 바인딩합니다.|  
|<xref:System.Web.UI.WebControls.SessionParameter>|세션 상태 필드를 바인딩합니다.|  
|<xref:System.Web.UI.WebControls.RouteParameter>|경로 URL 매개 변수를 바인딩합니다.|  
|<xref:System.Web.UI.WebControls.CookieParameter>|쿠키 필드를 바인딩합니다.|  
|<xref:System.Web.UI.WebControls.QueryStringParameter>|쿼리 문자열 매개 변수를 바인딩합니다.|  
|<xref:System.Web.UI.WebControls.ProfileParameter>|프로필 필드에 바인딩합니다.|  
  
 기본 확장 <xref:System.Web.UI.WebControls.Parameter> 사용자 고유의 사용자 지정 매개 변수 형식을 구현 하려는 경우 클래스입니다.  
  
 <xref:System.Web.UI.WebControls.Parameter> 개체는 매우 간단한:가지고 <xref:System.Web.UI.WebControls.Parameter.Name%2A> 및 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 속성에 선언적으로 나타낼 수 있습니다 및 여러 HTTP 요청에서 상태를 추적할 수 있습니다. 모든 매개 변수는 지원를 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 매개 변수 값에 바인딩된 이지만 값으로 계산 되는 사례에 대 한 속성인 `null` 런타임 시.  
  
 컬렉션을 사용 하는 경우 <xref:System.Web.UI.WebControls.Parameter> 개체 데이터 소스 컨트롤을 사용 하 여 컬렉션에서 해당 순서 중요할 수 있습니다. 매개 변수를 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295) 하 고 [ObjectDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)입니다.  
  
   
  
## Examples  
 다음 예제에서는 선택한 값을 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.DropDownList> w에서 컨트롤`here` SQL 쿼리의 절. 이 예제에서는 사용 합니다 <xref:System.Web.UI.WebControls.ControlParameter> 클래스에서 파생 되는 <xref:System.Web.UI.WebControls.ControlParameter> 클래스입니다.  
  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 라는 매개 변수를 사용 하 여 쿼리를 정의 하는 요소 "@Title" 위치에서 값을 `DropDownList1` 이동 해야 합니다. <xref:System.Web.UI.WebControls.ControlParameter> 요소를 지정 하는 "@Title" 자리 표시자의 값으로 바뀝니다를 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 의 속성을 `DropDownList1` 컨트롤. <xref:System.Web.UI.WebControls.ControlParameter> 요소에 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 의 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 다음 예제에서는 이전 쿼리와 비슷합니다 하지만 태그 대신 코드를 사용 합니다. 페이지가 처음으로 로드 하는 경우는 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤에 선택한 값 없음-및 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 속성을는 <xref:System.Web.UI.WebControls.Parameter> 개체를 사용 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx#1)]  
  
 다음 코드는 이전 예제의 페이지에 대 한 코드 숨김 클래스를 보여줍니다.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx.vb#4)]  
  
 다음 코드 예제를 확장 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Parameter> 데이터 소스 컨트롤 및 기타 컨트롤 데이터 바인딩 시나리오에서 사용할 수 있는 새 매개 변수 형식을 만드는 클래스입니다. 데이터 소스 컨트롤에서 사용할 수는 `StaticParameter` Web Forms 페이지에 선언 된 모든 개체, 일반적으로 문자열의 값에 바인딩할 매개 변수입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#1)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.RouteParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ParameterCollection" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">매개 변수를 사용 하 여 데이터 소스 컨트롤을 사용 하 여</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> 클래스의 새로운 기본 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.Parameter> 사용 하 여 만든 개체는 <xref:System.Web.UI.WebControls.Parameter.%23ctor> 생성자는 모든 속성에 대 한 기본 값으로 초기화 됩니다. <xref:System.Web.UI.WebControls.Parameter.Name%2A> 속성은 초기화 <xref:System.String.Empty?displayProperty=nameWithType>의 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 속성으로 초기화 됩니다 <xref:System.TypeCode.Object?displayProperty=nameWithType>의 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 속성으로 초기화 됩니다 <xref:System.Data.ParameterDirection.Input>, 및 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 속성은초기화`null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <summary>지정된 이름을 사용하여 <see cref="T:System.Web.UI.WebControls.Parameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> 사용 하 여 만든 개체를 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29> 생성자가 초기화 된 `name` 및 기타 속성에 대 한 기본값. <xref:System.Web.UI.WebControls.Parameter.Type%2A> 속성은 초기화 <xref:System.TypeCode.Object?displayProperty=nameWithType>의 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 속성으로 초기화 됩니다 <xref:System.Data.ParameterDirection.Input>, 및 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 속성은 초기화 `null`합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 호출 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29> 확장 하는 클래스의 생성자는 <xref:System.Web.UI.WebControls.Parameter> 초기화 하기 위해 클래스는 <xref:System.Web.UI.WebControls.Parameter.Name%2A> 인스턴스의 속성입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.Parameter> 클래스 개요입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Parameter (System.Web.UI.WebControls.Parameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.Parameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As Parameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Parameter(System::Web::UI::WebControls::Parameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : System.Web.UI.WebControls.Parameter -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="original">현재 인스턴스가 초기화되는 <see cref="T:System.Web.UI.WebControls.Parameter" /> 인스턴스입니다.</param>
        <summary>지정된 원본 인스턴스의 값을 사용하여 <see cref="T:System.Web.UI.WebControls.Parameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> 생성자를 `protected` 복제 하는 데 사용 하는 복사 생성자를 <xref:System.Web.UI.WebControls.Parameter> 인스턴스. 값을 <xref:System.Web.UI.WebControls.Parameter.Name%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>를 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A>, 및 <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> 속성은 모두를 새 인스턴스로 전달 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> 확장 하는 클래스의 생성자는 <xref:System.Web.UI.WebControls.Parameter> 클래스에 대 한 동작을 복제 하는 올바른 개체를 구현 하는 클래스입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.Parameter> 클래스 개요입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="dbType">매개 변수의 데이터베이스 형식입니다.</param>
        <summary>지정된 이름 및 데이터베이스 형식을 사용하여 <see cref="T:System.Web.UI.WebControls.Parameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> 사용 하 여 만든 개체를 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.Data.DbType%29> 생성자가 초기화 하는 지정 된 `name` 및 `dbType` 매개 변수 및 기타 속성에 대 한 기본값을 사용 하 여 합니다. 합니다 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 속성은 초기화 <xref:System.Data.ParameterDirection.Input>, 및 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 속성은 초기화 `null`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="type">매개 변수의 형식을 설명하는 <see cref="T:System.TypeCode" />입니다.</param>
        <summary>지정된 이름 및 형식을 사용하여 <see cref="T:System.Web.UI.WebControls.Parameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> 사용 하 여 만든 개체를 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29> 생성자가 초기화 된 `name` 및 `type` 매개 변수 및 기타 속성에 대 한 기본값. 합니다 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 속성은 초기화 <xref:System.Data.ParameterDirection.Input>, 및 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 속성은 초기화 `null`합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 호출 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29> 확장 하는 클래스의 생성자는 <xref:System.Web.UI.WebControls.Parameter> 초기화 하기 위해 클래스는 <xref:System.Web.UI.WebControls.Parameter.Name%2A> 및 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 인스턴스의 속성입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.Parameter> 클래스 개요입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#3)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.Web.UI.WebControls.Parameter" /> 인스턴스의 이름입니다.</param>
        <param name="dbType"><see cref="T:System.Web.UI.WebControls.Parameter" /> 인스턴스의 데이터베이스 형식입니다.</param>
        <param name="defaultValue"><see cref="T:System.Web.UI.WebControls.Parameter" />가 호출되었을 때 <see cref="T:System.Web.UI.WebControls.Parameter" />가 아직 초기화되지 않은 값에 바인딩된 경우 <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> 인스턴스의 기본값입니다.</param>
        <summary>지정된 이름, 지정된 데이터베이스 형식 및 <see cref="T:System.Web.UI.WebControls.Parameter" /> 속성에 대한 지정된 값을 사용하여 <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 의 속성을 <xref:System.Web.UI.WebControls.Parameter> 인스턴스를 초기화 됩니다 <xref:System.Data.ParameterDirection.Input>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, defaultValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="type">매개 변수의 형식을 설명하는 <see cref="T:System.TypeCode" />입니다.</param>
        <param name="defaultValue"><see cref="T:System.Web.UI.WebControls.Parameter" />가 호출되었을 때 <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />가 아직 초기화되지 않은 값에 바인딩된 경우 매개 변수의 기본값으로 사용되는 문자열입니다.</param>
        <summary>지정된 이름 및 형식과 <see cref="T:System.Web.UI.WebControls.Parameter" /> 속성에 대해 지정된 문자열을 사용하여 <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> 사용 하 여 만든 개체를 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29> 생성자가 초기화 하는 지정 된 `name` 매개 변수 및 `type` 매개 변수를 할당 및를 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 속성 값입니다. <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 속성이 <xref:System.Data.ParameterDirection.Input>으로 초기화됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29> 업데이트 매개 변수 개체를 추가 하는 생성자를 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 의 컬렉션은 <xref:System.Web.UI.WebControls.AccessDataSource> 호출 하기 전에 컨트롤은 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Web.UI.WebControls.Parameter&#xA;override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="parameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.Parameter" /> 인스턴스의 복제본을 반환합니다.</summary>
        <returns>현재 개체와 완전히 동일한 <see cref="T:System.Web.UI.WebControls.Parameter" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Parameter.Clone%2A> 메서드 호출을 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> 의 새 인스턴스를 초기화 하는 복사 생성자는 <xref:System.Web.UI.WebControls.Parameter> 현재 인스턴스의 값을 사용 하 여 클래스입니다.  
  
 확장 하는 경우는 <xref:System.Web.UI.WebControls.Parameter> 재정의할 수 있습니다 클래스는 <xref:System.Web.UI.WebControls.Parameter.Clone%2A> 파생된 클래스의 새 인스턴스를 복사 해야 하는 모든 상태를 포함 하는 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> 확장 하는 클래스의 생성자는 <xref:System.Web.UI.WebControls.Parameter> 클래스에 대 한 동작을 복제 하는 올바른 개체를 구현 하는 클래스입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.Parameter> 클래스입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertDbTypeToTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode ConvertDbTypeToTypeCode (System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode ConvertDbTypeToTypeCode(valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode ConvertDbTypeToTypeCode(System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="static member ConvertDbTypeToTypeCode : System.Data.DbType -&gt; TypeCode" Usage="System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode dbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="dbType">해당하는 <see cref="T:System.Data.DbType" /> 값으로 변환할 <see cref="T:System.TypeCode" /> 값입니다.</param>
        <summary><see cref="T:System.Data.DbType" /> 값을 해당하는 <see cref="T:System.TypeCode" /> 값으로 변환합니다.</summary>
        <returns>지정된 <see cref="T:System.TypeCode" /> 값에 해당하는 <see cref="T:System.Data.DbType" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 반환을 <xref:System.TypeCode.Object> 동등한 옵션이 없습니다 인스턴스는 <xref:System.Data.DbType> 값이 발견 됩니다. 데이터베이스 형식을 해당 하는 형식을 포함 하지 않고 <xref:System.Data.DbType.Guid>, <xref:System.Data.DbType.Binary>, 및 <xref:System.Data.DbType.DateTimeOffset>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> 개체가 바인딩된 값이 <see cref="F:System.String.Empty" />일 경우 이 값을 <see langword="null" />로 변환할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Parameter" />가 바인딩된 값이 <see cref="F:System.String.Empty" />일 경우 이 값을 <see langword="true" />로 변환해야 하면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> 매개 변수의 속성을 변경 합니다 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 메서드가 호출 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypeCodeToDbType">
      <MemberSignature Language="C#" Value="public static System.Data.DbType ConvertTypeCodeToDbType (TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.DbType ConvertTypeCodeToDbType(valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::DbType ConvertTypeCodeToDbType(TypeCode typeCode);" />
      <MemberSignature Language="F#" Value="static member ConvertTypeCodeToDbType : TypeCode -&gt; System.Data.DbType" Usage="System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType typeCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="typeCode">해당하는 <see cref="T:System.TypeCode" /> 값으로 변환할 <see cref="T:System.Data.DbType" /> 값입니다.</param>
        <summary><see cref="T:System.TypeCode" /> 값을 해당하는 <see cref="T:System.Data.DbType" /> 값으로 변환합니다.</summary>
        <returns>지정된 <see cref="T:System.Data.DbType" /> 값에 해당하는 <see cref="T:System.TypeCode" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Data.DbType.Object> 등가가 없는 경우 인스턴스. 해당 하는 데이터베이스 형식에는 없는 형식 <xref:System.TypeCode.DBNull> 고 <xref:System.TypeCode.Empty>입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Web.UI.WebControls.Parameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 데이터베이스 형식을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Parameter" /> 인스턴스의 데이터베이스 형식입니다. 기본값은 <see cref="F:System.Data.DbType.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 애플리케이션 및 기본 코드 또는 데이터베이스 테이블에서 값 사이의 값이 올바르게 변환 되도록 데이터베이스 형식을 강력한 형식의 매개 변수를 만들려면 사용할 수 있습니다.  
  
 매개 변수의 데이터베이스 형식을 설정 하 여 변경 된 경우는 <xref:System.Web.UI.WebControls.Parameter.DbType%2A> 속성을 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 메서드가 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">이 속성을 <see cref="T:System.Data.DbType" /> 열거형 이외의 값으로 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public string DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : string with get, set" Usage="System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> 메서드가 호출될 때 매개 변수가 바인딩된 값이 초기화되지 않은 경우 해당 매개 변수에 사용할 기본값을 지정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Parameter" />가 바인딩된 값이 확인되지 않거나 초기화되어 있지 않은 경우 이 매개 변수의 기본값으로 사용되는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 속성이 있는 매개 변수 값에 바인딩되어 있지만 값은 시나리오에 사용 됩니다 `null` 확인할 수 없는 경우 또는 <xref:System.Web.UI.WebControls.Parameter> 개체는 평가 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 매개 변수의 속성을 변경 합니다 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 메서드가 호출 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하 여 단일 데이터 레코드를 검색 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤에 표시 하는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다. <xref:System.Web.UI.WebControls.ObjectDataSource> 제어를 호출 하 여 특정 직원 레코드를 검색 합니다 `GetEmployee` 메서드의 `EmployeeLogic` 클래스. `GetEmployee` 메서드는 직원 ID 매개 변수가 필요 합니다. <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤이 사용 하는 <xref:System.Web.UI.WebControls.QueryStringParameter> 개체의 해당 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> 컬렉션 ID를 전달 하는 `GetEmployee` 이 예제의 메서드.  
  
 구현 예를 보려면 합니다 `EmployeeLogic` 클래스 및 `GetEmployee` 메서드를 참조 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource> 클래스 개요입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Web.UI.WebControls.Parameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> 개체가 컨트롤에 값을 바인딩하는 데 사용되는지 아니면 컨트롤이 값을 변경하는 데 사용될 수 있는지를 나타냅니다.</summary>
        <value><see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다. 기본적으로 <see cref="P:System.Web.UI.WebControls.Parameter.Direction" />은 <see cref="F:System.Data.ParameterDirection.Input" />으로 설정되어 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 속성은 현재에서 사용 하지는 <xref:System.Web.UI.WebControls.Parameter> 클래스 및 나중에 사용 하기 위해 예약 됩니다.  
  
 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 속성의 값 간의 데이터 흐름 방향을 설명 합니다.는 <xref:System.Web.UI.WebControls.Parameter> 인스턴스 바인딩할 및 <xref:System.Web.UI.WebControls.Parameter> 개체 자체입니다. 기본값을 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 속성을 <xref:System.Data.ParameterDirection.Input>, 한 방향으로의 데이터 흐름을 항상은 가장 일반적인 시나리오를 설명 합니다: 값에서는 <xref:System.Web.UI.WebControls.Parameter> 개체가 바인딩된는 <xref:System.Web.UI.WebControls.Parameter> 개체. 내부 값을 변경 하 여 반영 됩니다 합니다 <xref:System.Web.UI.WebControls.Parameter> 개체가 아니라 변경한은 <xref:System.Web.UI.WebControls.Parameter> 내부 데이터 개체를 반영 되지 않습니다. 설정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 속성을 <xref:System.Data.ParameterDirection.InputOutput> 하거나 <xref:System.Data.ParameterDirection.Output> 출력 매개 변수를 사용 하는 경우 또는 <xref:System.Data.ParameterDirection.ReturnValue> 저장된 프로시저에서 반환 값을 사용 하 여 작업 하는 경우.  
  
 경우는 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 매개 변수의 속성을 변경 합니다 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 메서드가 호출 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, 및 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 의 속성 <xref:System.Web.UI.WebControls.Parameter> 출력 매개 변수 및 저장된 프로시저를 사용 하 여 반환 값 매개 변수로 사용 하는 경우 개체입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 클래스 개요입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal virtual object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj&#xA;override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="parameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">요청의 현재 <see cref="T:System.Web.HttpContext" />입니다.</param>
        <param name="control">매개 변수가 바인딩된 <see cref="T:System.Web.UI.Control" />입니다. 매개 변수가 컨트롤에 바인딩되지 않았으면 <paramref name="control" /> 매개 변수는 무시됩니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> 개체의 값을 업데이트하고 반환합니다.</summary>
        <returns>매개 변수의 업데이트된 현재 값을 나타내는 <see langword="object" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 구현을 합니다 <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> 메서드를 반환 하는 `null` 모든 경우에 합니다. 파생 된 클래스는 <xref:System.Web.UI.WebControls.Parameter> 재정의 클래스를 <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> 업데이트 된 매개 변수 값을 반환 하는 방법입니다. 예를 들어,를 <xref:System.Web.UI.WebControls.ControlParameter> 개체에 바인딩된 컨트롤의 값을 반환 하는 동안는 <xref:System.Web.UI.WebControls.QueryStringParameter> 개체에서 현재 이름/값 쌍을 검색 합니다 <xref:System.Web.HttpRequest> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> 에서 파생 된 클래스에서 올바른 값을 반환 하는 방법의 <xref:System.Web.UI.WebControls.Parameter> 클래스입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.Parameter> 클래스 개요입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#6)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseType">
      <MemberSignature Language="C#" Value="public System.Data.DbType GetDatabaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.DbType GetDatabaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.GetDatabaseType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDatabaseType () As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DbType GetDatabaseType();" />
      <MemberSignature Language="F#" Value="member this.GetDatabaseType : unit -&gt; System.Data.DbType" Usage="parameter.GetDatabaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>CLR 형식의 현재 <see cref="T:System.Data.DbType" /> 인스턴스에 해당하는 <see cref="T:System.Web.UI.WebControls.Parameter" /> 값을 가져옵니다.</summary>
        <returns>CLR 형식의 현재 <see cref="T:System.Data.DbType" /> 인스턴스에 해당하는 <see cref="T:System.Web.UI.WebControls.Parameter" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Parameter.DbType%2A> 속성 없습니다 이미 설정 되어 있어야를 또는로 설정 되어야 합니다 <xref:System.Data.DbType.Object>합니다. CLR 형식 설정 된 경우에 사용 하기 위해이 메서드를 사용 하지만 <xref:System.Web.UI.WebControls.Parameter.DbType%2A> 속성이 아닙니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Parameter.DbType" /> 속성이 <see cref="F:System.Data.DbType.Object" />가 아닌 값으로 이미 설정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> 개체가 해당 뷰 상태의 변경 내용을 저장하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>데이터 소스 뷰에서 해당 상태를 저장하도록 표시되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="parameter.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">복원할 <see cref="T:System.Object" /> 상태를 나타내는 <see cref="T:System.Web.UI.WebControls.Parameter" />입니다.</param>
        <summary>데이터 소스 뷰를 이전에 저장된 뷰 상태로 복원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는.NET Framework 인프라에서 기본적으로 사용 하며 사용자 코드에서 직접 사용할 수 없습니다. 그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.  
  
 에 대 한 뷰 상태 정보를 복원 하는이 메서드는 <xref:System.Web.UI.WebControls.Parameter> 저장 한 이전 페이지 요청에서 개체를 <xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.Parameter.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 이름을 가져오거나 설정합니다.</summary>
        <value>매개 변수의 이름입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> 개체는 이름이 있이 필요가 없습니다. 데이터 소스 컨트롤 일치 하는 매개 변수 이름을 사용할 수 있지만 한 <xref:System.Web.UI.WebControls.Parameter> SQL 쿼리 또는 비즈니스 메서드 시그니처에서 매개 변수를 사용 하 여 컬렉션의 개체입니다. 예를 들어 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤의 이름을 사용할 수는 <xref:System.Web.UI.WebControls.Parameter> 매개 변수가 있는 SQL 쿼리의 자리 표시자와 일치 하는 개체입니다. 마찬가지로,는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤의 이름을 사용할 수는 <xref:System.Web.UI.WebControls.Parameter> 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 자리 표시자에 맞도록 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성. 일부 경우에는 이름은 사용 되지 않습니다 및 순서를 <xref:System.Web.UI.WebControls.Parameter> 개체에 추가 됩니다을 <xref:System.Web.UI.WebControls.ParameterCollection> 컬렉션이 더 중요 합니다. 자세한 내용은 [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295) 하 고 [ObjectDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)입니다.  
  
 매개 변수의 이름을 변경 되 면를 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 메서드가 호출 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하 여 필터링 된 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ObjectDataSource> 중간 계층 비즈니스 개체에서 데이터를 검색 하는 컨트롤 및 <xref:System.Web.UI.WebControls.GridView> 결과 표시 하는 컨트롤입니다. 코드 예제에서는 구성를 <xref:System.Web.UI.WebControls.TextBox> 컨트롤을 <xref:System.Web.UI.WebControls.GridView> 컨트롤을는 <xref:System.Web.UI.WebControls.ObjectDataSource> 제어 및 제출 단추. 기본적으로 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 중 하나의 이름을 채워집니다는 `Northwind` 직원입니다. 합니다 <xref:System.Web.UI.WebControls.GridView> 컨트롤에서 이름으로 식별 된 직원에 대 한 정보를 표시 합니다 <xref:System.Web.UI.WebControls.TextBox> 컨트롤입니다. 다른 직원에 대 한 데이터를 검색 하려면 직원의 전체 이름을 입력 합니다 <xref:System.Web.UI.WebControls.TextBox> 제어 하 고 단추를 클릭 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 속성에서 검색 되는 데이터를 필터링 하는 데 사용 하는 식을 지정 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성입니다. 에 포함 된 매개 변수가 계산 되는 매개 변수 자리 표시자를 사용 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> 컬렉션입니다. 이 예제에서는 매개 변수 자리 표시자는 공백을 포함할 수 있는 문자열 형식 매개 변수 형식의 작은따옴표 제한 됩니다. 매개 변수 형식의 숫자 또는 날짜 형식인 경우에 따옴표가 필요 하지 않습니다.  
  
 이 코드 예제는에 대해 제공 된 큰 예제의 일부 합니다 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 의 속성을 <xref:System.Web.UI.WebControls.ObjectDataSource> 클래스.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="OnParameterChanged">
      <MemberSignature Language="C#" Value="protected void OnParameterChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnParameterChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnParameterChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnParameterChanged();" />
      <MemberSignature Language="F#" Value="member this.OnParameterChanged : unit -&gt; unit" Usage="parameter.OnParameterChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" /> 개체가 들어 있는 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 컬렉션의 <see cref="T:System.Web.UI.WebControls.Parameter" /> 메서드를 호출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.Parameter> 개체에 들어 있지는 <xref:System.Web.UI.WebControls.ParameterCollection> 컬렉션, 호출을 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 메서드는 효과가 없습니다. 경우는 <xref:System.Web.UI.WebControls.Parameter> 개체에 포함 된를 <xref:System.Web.UI.WebControls.ParameterCollection> 컬렉션 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 발생 시킵니다는 <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType> 컬렉션의 이벤트입니다.  
  
 경우는 <xref:System.Web.UI.WebControls.ParameterCollection> 컬렉션을 데이터 소스 컨트롤에 포함 된 합니다 <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType> 이벤트를 데이터 소스 컨트롤을 발생 시킵니다 <xref:System.Web.UI.IDataSource.DataSourceChanged> 바인딩할 모든 데이터 바인딩된 컨트롤을 유발 하는 이벤트입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 발생 하는 방법의 <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged> 매개 변수의 상태가 변경 될 때 이벤트. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.Parameter> 클래스 개요입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#7)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="parameter.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>페이지가 서버에 포스트백된 이후에 발생한 <see cref="T:System.Web.UI.WebControls.Parameter" /> 개체의 뷰 상태 변경 사항을 저장합니다.</summary>
        <returns><see cref="T:System.Object" /> 뷰 상태의 변경 내용이 들어 있는 <see cref="T:System.Web.UI.WebControls.Parameter" />입니다. 개체와 관련된 뷰 상태가 없으면 이 메서드는 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 주로 컨트롤 개발자에 의해 사용됩니다.  
  
 뷰 상태는 서버 컨트롤의 속성 값의 누적 된 것입니다. 이러한 값은 자동으로 서버 컨트롤의 배치 <xref:System.Web.UI.Control.ViewState%2A> 인스턴스인 속성의는 <xref:System.Web.UI.StateBag> 클래스. 그런 다음이 속성의이 값은 상태 저장 서버 컨트롤 수명 주기의 단계 후에 문자열 개체를 유지 합니다.  
  
 HTML에 저장 된 변수로 문자열 개체가이 클라이언트에 반환 뷰 상태가 저장 되 면 `hidden` 요소입니다. 사용자 지정 서버 컨트롤을 작성 하는 경우이 메서드를 재정의 하 고 서버 컨트롤의 수정 하 여 효율성을 개선 <xref:System.Web.UI.WebControls.Parameter.ViewState%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="protected internal virtual void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetDirty();" />
      <MemberSignature Language="F#" Value="abstract member SetDirty : unit -&gt; unit&#xA;override this.SetDirty : unit -&gt; unit" Usage="parameter.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> 개체를 해당 상태가 뷰 상태에 기록되는 개체로 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.SetDirty%2A> 메서드에 의해 직접 호출 됩니다는 <xref:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject%2A?displayProperty=nameWithType> 메서드를 표시 하는 <xref:System.Web.UI.WebControls.Parameter> 개체 상태가 뷰 상태에 기록 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Web.UI.WebControls.Parameter.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 크기를 가져오거나 설정합니다.</summary>
        <value>정수로 표현된 매개 변수 크기입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우에 대 한 값 <xref:System.Web.UI.WebControls.Parameter.Size%2A> 변경 되 면를 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 메서드가 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.Parameter" /> 인스턴스의 복제본을 반환합니다.</summary>
        <returns>현재 개체의 복사본인 <see cref="T:System.Web.UI.WebControls.Parameter" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Parameter.Clone%2A> 메서드 호출을 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> 의 새 인스턴스를 초기화 하는 생성자를 <xref:System.Web.UI.WebControls.Parameter> 현재 인스턴스의 값을 사용 하 여 클래스입니다.  
  
 확장 하는 경우는 <xref:System.Web.UI.WebControls.Parameter> 재정의할 수 있습니다 클래스는 <xref:System.Web.UI.WebControls.Parameter.Clone%2A> 파생된 클래스의 새 인스턴스를 복사 해야 하는 모든 상태를 포함 하는 방법입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> 개체가 해당 뷰 상태의 변경 내용을 저장하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>데이터 소스 뷰에서 해당 상태를 저장하도록 표시되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">복원할 <see cref="T:System.Object" /> 상태를 나타내는 <see cref="T:System.Web.UI.WebControls.Parameter" />입니다.</param>
        <summary>데이터 소스 뷰를 이전에 저장된 뷰 상태로 복원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 뷰 상태 정보를 복원 하는이 메서드는 <xref:System.Web.UI.WebControls.Parameter> 저장 한 이전 페이지 요청에서 개체를 <xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A> 메서드.  
  
 이 메서드는 주로 컨트롤 개발자에 의해 사용됩니다. 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 제어 하려면이 메서드를 재정의할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>페이지가 서버에 포스트백된 이후에 발생한 <see cref="T:System.Web.UI.WebControls.Parameter" /> 개체의 뷰 상태 변경 사항을 저장합니다.</summary>
        <returns><see cref="T:System.Object" /> 개체의 뷰 상태 변경 사항이 들어 있는 <see cref="T:System.Web.UI.WebControls.Parameter" />입니다. 개체와 관련된 뷰 상태가 없으면 이 메서드는 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 주로 컨트롤 개발자에 의해 사용됩니다.  
  
 뷰 상태는 서버 컨트롤의 속성 값의 누적 된 것입니다. 이러한 값은 자동으로 서버 컨트롤의 배치 <xref:System.Web.UI.Control.ViewState%2A> 인스턴스인 속성의는 <xref:System.Web.UI.StateBag> 클래스. 그런 다음이 속성의이 값은 상태 저장 서버 컨트롤 수명 주기의 단계 후에 문자열 개체를 유지 합니다.  
  
 HTML에 저장 된 변수로 문자열 개체가이 클라이언트에 반환 뷰 상태가 저장 되 면 `hidden` 요소입니다. 사용자 지정 서버 컨트롤을 작성 하는 경우이 메서드를 재정의 하 고 서버 컨트롤의 수정 하 여 효율성을 개선 <xref:System.Web.UI.WebControls.Parameter.ViewState%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> 개체가 뷰 상태의 변경 내용을 추적하도록 합니다. 이렇게 하면 해당 뷰 상태의 변경 내용을 컨트롤의 <see cref="P:System.Web.UI.Control.ViewState" /> 개체에 저장하여 같은 페이지에 대한 여러 요청에서 일관되게 유지할 수 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="parameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 인스턴스의 값을 해당하는 문자열 표현으로 변환합니다.</summary>
        <returns>이 인스턴스의 값에 대한 문자열 표현입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.ToString%2A> 메서드가 반환 되는 <xref:System.Web.UI.WebControls.Parameter.Name%2A> 의 속성은 <xref:System.Web.UI.WebControls.Parameter> 개체. 경우는 <xref:System.Web.UI.WebControls.Parameter> 개체에 이름이 없습니다 <xref:System.Web.UI.WebControls.Parameter.ToString%2A> 반환 <xref:System.String.Empty?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 다양 한 속성에 액세스 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Parameter> 개체를 포함 하 여 해당 <xref:System.Web.UI.WebControls.Parameter.Name%2A> 고 <xref:System.Web.UI.WebControls.Parameter.Type%2A> 속성입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/CS/parametertostringcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/VB/parametertostringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="parameter.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> 개체가 뷰 상태의 변경 내용을 추적하도록 합니다. 이렇게 하면 해당 뷰 상태의 변경 내용을 컨트롤의 <see cref="P:System.Web.UI.Control.ViewState" /> 개체에 저장하여 같은 페이지에 대한 여러 요청에서 일관되게 유지할 수 있습니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public TypeCode Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode Type { TypeCode get(); void set(TypeCode value); };" />
      <MemberSignature Language="F#" Value="member this.Type : TypeCode with get, set" Usage="System.Web.UI.WebControls.Parameter.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 형식을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Parameter" />의 형식입니다. 기본값은 <see cref="F:System.TypeCode.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 웹 애플리케이션 및 기본 코드 사이의 값이 올바르게 변환 되도록 형식을 강력한 형식의 매개 변수를 만들려면 사용할 수 있습니다.  
  
 매개 변수의 형식이 변경 되 면 하는 경우는 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> 메서드가 호출 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, 및 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 의 속성 <xref:System.Web.UI.WebControls.Parameter> 출력 매개 변수 및 저장된 프로시저를 사용 하 여 반환 값 매개 변수로 사용 하는 경우 개체입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 클래스 개요입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">매개 변수 형식이 <see cref="T:System.TypeCode" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295">매개 변수를 사용 하 여 SqlDataSource 및 AccessDataSource 컨트롤을 사용합니다.</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">ObjectDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여</related>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : System.Web.UI.StateBag" Usage="System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>같은 페이지에 대한 여러 개의 요청 전반에 <see cref="T:System.Web.UI.WebControls.Parameter" /> 개체의 뷰 상태를 저장하고 복원하는 데 사용할 수 있는 상태 정보 사전을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.StateBag" /> 개체의 뷰 상태 정보가 들어 있는 <see cref="T:System.Web.UI.WebControls.Parameter" />의 인스턴스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수 보기 상태는 모든 속성 값의 누적 합니다. ASP.NET 서버 컨트롤을 HTTP 요청에서 이러한 값을 유지 하려면 인스턴스는이 속성을 사용 합니다의 <xref:System.Web.UI.StateBag> 클래스, 속성 값을 저장 합니다. 값은 전달 변수를 HTML `hidden` 후속 요청이 처리 될 때 입력된 요소입니다. 기본적으로 모든 서버 컨트롤에 대 한 보기 상태 사용 합니다.  
  
 사전 및 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [컬렉션 및 데이터 구조](~/docs/standard/collections/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 뷰 상태 개체를 사용 하 여 확장 하는 클래스에 매개 변수 개체 상태를 저장 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Parameter> 클래스입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.Parameter> 클래스 개요입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#5)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
  </Members>
</Type>