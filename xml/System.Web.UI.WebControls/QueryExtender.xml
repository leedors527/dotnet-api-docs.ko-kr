<Type Name="QueryExtender" FullName="System.Web.UI.WebControls.QueryExtender">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c6ffc74a293951700a56568fc18df33d8c277eea" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58875023" /></Metadata><TypeSignature Language="C#" Value="public class QueryExtender : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryExtender extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.QueryExtender" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryExtender&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryExtender : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type QueryExtender = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TargetControlID")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.QueryExtenderDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.QueryExtender), "QueryExtender.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Expressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.TargetControlType(typeof(System.Web.UI.WebControls.IQueryableDataSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>데이터 소스에 명시적 <see langword="Where" /> 절을 사용하지 않고도 데이터 소스에서 데이터를 필터링할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용  
  
-   [소개](#Introduction)  
  
-   [배경](#background)  
  
-   [필터 옵션](#filter_options)  
  
-   [작업](#Tasks)  
  
-   [선언 구문](#declarative_syntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>소개  
 합니다 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤은 명시적인 사용 하지 않고 데이터 원본에서 검색 되는 데이터에 대 한 필터를 만드는 데 `Where` 데이터 소스의 절. <xref:System.Web.UI.WebControls.QueryExtender> 선언적 구문을 사용 하 여 필터링을 지정 하려면 컨트롤을 사용할 수 있습니다.  
  
<a name="background"></a>   
## <a name="background"></a>배경  
 지정 된 조건을 충족 하는 레코드만 표시 하 여 데이터 원본에서 데이터를 제외 필터링 합니다. 데이터 집합의 데이터를 영향을 주지 않고 데이터 집합에 있는 데이터의 서로 다른 뷰를 제공할 수 있습니다.  
  
 사용자가 만든을 해야 일반적으로 필터링을 `Where` 데이터 소스를 쿼리 하는 명령에 적용할 절. 그러나는 `Where` 데이터 소스 컨트롤의 속성 수 있는 전체 기능을 노출 하지 않을 수 있습니다. 예를 들어 QueryExtender 컨트롤을 사용 하면 시작 되 면 문자열 종료를 검색 하 여 또는 어디서 나.data 필드에 테이블을 쿼리할 수 있습니다.  
  
 LINQ에서 사용할 수 있는 전체 기능을 노출 하는 데 데이터를 필터링을 쉽게 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 제공 된 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤입니다. <xref:System.Web.UI.WebControls.QueryExtender> 제어는 다음과 같은 이점이 있습니다.  
  
-   쓰는 것 보다 필터링 보다 풍부한 환경을 제공을 `Where` 절. 예를 들어 부울 값의 Products 테이블을 사용 하 여 검색할 수 있습니다는 <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> 쿼리를 작성 하지 않고 필터링 합니다.  
  
-   에 대 한 동일한 구문을 사용 하 여 필터를 지정할 수는 <xref:System.Web.UI.WebControls.LinqDataSource> 및 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤 및 사용할 수 있는 다른 데이터 소스 컨트롤에 대 한 합니다.  
  
-   사용 될 수 있습니다 <xref:System.Web.UI.WebControls.LinqDataSource> 컨트롤을 사용 하 여를 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤 또는 타사 데이터 원본입니다.  
  
<a name="filter_options"></a>   
## <a name="filter-options"></a>필터 옵션  
 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤은 다양 한 데이터를 필터링 하는 데 사용할 수 있는 옵션을 지원 합니다. 컨트롤을 사용 하면 검색 문자열을 지정된 된 범위에 숫자 값을 검색 하 고 지정 된 값 테이블의 속성 값을 비교 합니다. 또한 컨트롤 데이터를 정렬 하 고 사용자 지정 쿼리를 제공할 수 있습니다.  
  
 LINQ 식으로 이러한 옵션은 제공 된 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤입니다. 합니다 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤은 관련 된 식도 지원 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] Dynamic Data 응용 프로그램입니다.  
  
 다음 표에서 데이터를 필터링 하는 데 사용할 수 있는 옵션을 <xref:System.Web.UI.WebControls.QueryExtender> 제어 합니다.  
  
|식|설명|  
|----------------|-----------------|  
|<xref:System.Web.DynamicData.ControlFilterExpression>|(동적 데이터에만 해당) 소스 데이터 바인딩된 컨트롤에서 선택 된 데이터 키를 사용 하 여 데이터베이스 쿼리를 작성 합니다.<br /><br /> 이 필터 옵션을 사용 하는 방법에 대 한 정보를 참조 하세요. [방법: 필터 테이블 행을 부모 테이블의 값을 사용 하 여 동적 데이터](https://msdn.microsoft.com/library/a5566986-7c30-4e71-b4a4-81cd16095749)입니다.|  
|<xref:System.Web.UI.WebControls.Expressions.CustomExpression>|데이터 원본에 대 한 사용자 정의 식을 지정합니다. 사용자 지정 LINQ 식은 이벤트 처리기에서 호출할 수 있습니다.|  
|<xref:System.Web.DynamicData.DynamicFilterExpression>|(동적 데이터에만 해당) 지정 된 사용 하 여 데이터베이스 쿼리를 작성 <xref:System.Web.DynamicData.DynamicFilter> 제어 합니다.<br /><br /> 이 필터 옵션을 사용 하는 방법에 대 한 정보를 참조 하세요. [방법: 외래 키를 사용 하 여 동적 데이터에서 테이블 행 필터](https://msdn.microsoft.com/library/b774e56a-a5b9-41b7-b114-699313ef2056)합니다.|  
|<xref:System.Web.UI.WebControls.Expressions.MethodExpression>|데이터 원본에 대 한 사용자 정의 된 LINQ 식을 지정합니다. 식 메서드에서 호출 됩니다.|  
|<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>|에 정렬 식을 적용 한 <xref:System.Linq.IQueryable> 데이터 원본 개체입니다. 적용 한 후 합니다 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 값을 지정 하 여 추가 정렬 작업을 적용할 수 있습니다는 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> 값입니다.|  
|<xref:System.Web.UI.WebControls.Expressions.PropertyExpression>|속성에 지정 된 데이터 필드 및 속성 값을 비교 합니다 <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> 컬렉션입니다.|  
|<xref:System.Web.UI.WebControls.Expressions.RangeExpression>|지정된 된 값 보다 작거나 보다 큰 값 인지 또는 값이 두 값 사이 있는지 여부를 결정 합니다.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchExpression>|필드 또는 필드를 지정 된 문자열 값으로 값을 비교합니다.|  
  
 사용할 수 있습니다 <xref:System.Web.UI.WebControls.QueryExtender> 옵션을 개별적으로 또는 웹 페이지에 복잡 한 필터링을 제공 하도록 결합할 수 있습니다. 자세한 내용은 [QueryExtender 웹 서버 컨트롤 개요](https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702)합니다. [연습: 선언적 구문을 사용 하 여 웹 페이지에서 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)  
  
<a name="Tasks"></a>   
## <a name="tasks"></a>작업  
 다음 표에서 사용 하는 방법을 보여 주는 작업을 나열 합니다 <xref:System.Web.UI.WebControls.QueryExtender> 데이터를 필터링 하는 컨트롤입니다.  
  
|문서|작업|  
|--------------|----------|  
|[연습: 선언적 구문을 사용 하 여 웹 페이지에서 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)|옵션은 필터를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.QueryExtender> 제어를 제공 합니다.|  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:QueryExtender   
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBiding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="UnLoad event handler"  
    Runat="server"  
    TargetControlID="string"  
    Visible="True|False"  
>  
        <asp:ControlFilterExpression   
            ControlD="string"  
            Column="string">   
        </asp:ControlFilterExpression>  
        <asp:DynamicFilterExpression  
            ControlD="string"  
        </asp:DynamicFilterExpression>  
        <asp:CustomExpression="string"  
            OnQuerying="OnQuerying event handler">  
        </asp:CustomExpression>  
        <asp:OrderByExpression="string"  
            DataField="string"  
            Direction="string">  
            <asp:ThenByExpression  
                 DataField="string"  
                 Direction="string"  
            </asp:ThenBy>  
        </asp:OrderByExpression>  
        <asp:PropertyExpression="string">  
                <!-- child controls -->  
        </asp:PropertyExpression  
        >  
        <asp:RangeExpression="integer"  
            Datafield="string"  
            MaxType="Exclusive|Inclusive|None"  
            MinType="Exclusive|Inclusive|None">  
                <!--child controls-->  
        </asp:RangeExpression>  
        <asp:SearchExpression="string"  
            ComparisonType="CurrentCulture|CurrentCultureIgnoreCase|  
                InvariantCulture|InvariantCultureIgnoreCase|  
                Ordinal|OrdinalIgnoreCase"  
            DataField="string"  
            SearchType="Contains|EndsWith|StartsWith">  
                <!--child controls-->  
        </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법의 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤을 웹 페이지에 검색 기능을 제공 합니다. <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤에 입력 된 텍스트를 사용 하 여는 `TextBoxSearch` Supplier.CompanyName 및 ProductName 열에서 반환 되는 데이터의 Products 테이블의 내용을 검색할 컨트롤의 <xref:System.Web.UI.WebControls.LinqDataSource> 컨트롤입니다. <xref:System.Web.UI.WebControls.Expressions.SearchExpression> 개체를 사용 하는 검색을 수행 합니다. <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> 속성 검색 데이터 필드를 지정 합니다. <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> 속성 수행할 검색의 유형을 지정 합니다. <xref:System.Web.UI.WebControls.ControlParameter> 요소 검색에 사용할 텍스트를 포함 하는 컨트롤을 지정 합니다. 이 코드 예제는에서 제공 하는 보다 큰 예제의 일부 [연습: 선언적 구문을 사용 하 여 웹 페이지에서 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:SearchExpression DataFields="ProductName, Supplier.CompanyName"   
        SearchType="StartsWith">  
    <asp:ControlParameter ControlID="TextBoxSearch" />  
  </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤을 지정 된 범위의 값에 대 한 웹 페이지를 검색 합니다. <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤에 입력 된 값을 사용 합니다 `TextBoxFrom` 및 `TextBoxTo` Supplier.CompanyName 및 ProductName 열에서 반환 되는 데이터의 Products 테이블의 값을 검색 하는 컨트롤을 <xref:System.Web.UI.WebControls.LinqDataSource> 컨트롤 . <xref:System.Web.UI.WebControls.ControlParameter> 요소 범위를 검색 하는 데 사용할 최소 및 최대 값을 포함 하는 텍스트 상자 컨트롤을 지정 합니다. 합니다 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> 고 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> 속성 지정 최소 및 최대 값은 바로 반환 되는 데이터에 포함 되어야 합니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [연습: 선언적 구문을 사용 하 여 웹 페이지에서 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:RangeExpression DataField="UnitPrice" MinType="Inclusive"   
        MaxType="Inclusive">  
    <asp:ControlParameter ControlID="TextBoxFrom" />  
    <asp:ControlParameter ControlID="TexBoxTo" />  
  </asp:RangeExpression>  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.SearchType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryExtender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryExtender();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.QueryExtender" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.IQueryableDataSource DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.IQueryableDataSource DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataSource As IQueryableDataSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::IQueryableDataSource ^ DataSource { System::Web::UI::WebControls::IQueryableDataSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Web.UI.WebControls.IQueryableDataSource" Usage="System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.IQueryableDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쿼리에 사용할 데이터 소스 컨트롤(<see cref="T:System.Web.UI.IDataSource" /> 개체)을 가져옵니다.</summary>
        <value>쿼리에 사용할 데이터 소스 컨트롤입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.QueryExtender> 지원 합니다 <xref:System.Web.UI.WebControls.LinqDataSource> 및 <xref:System.Web.UI.WebControls.EntityDataSource> 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.QueryExtender.DataSource" /> 속성이 <see langword="null" />일 경우(이 속성은</exception>
      </Docs>
    </Member>
    <Member MemberName="Expressions">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expressions As DataSourceExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ Expressions { System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expressions : System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" Usage="System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.IDataSource" /> 컨트롤에 적용되는 식의 컬렉션을 가져옵니다.</summary>
        <value>데이터 소스 컨트롤에 적용되는 식의 컬렉션입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="queryExtender.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Web.UI.WebControls.QueryExtender" /> 컨트롤의 상태를 나타내는 개체입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.QueryExtender" /> 컨트롤에서 유지해야 하는 값의 상태를 로드합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="queryExtender.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.QueryExtender" /> 클래스의 새 인스턴스가 초기화될 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="queryExtender.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.QueryExtender" /> 컨트롤의 현재 뷰 상태를 저장합니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.QueryExtender" /> 컨트롤에 대해 저장된 컨트롤 상태 값이 들어 있는 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetControlID">
      <MemberSignature Language="C#" Value="public virtual string TargetControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TargetControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TargetControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetControlID : string with get, set" Usage="System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쿼리에 사용할 <see cref="T:System.Web.UI.IDataSource" /> 컨트롤의 ID를 가져오거나 설정합니다.</summary>
        <value>쿼리에 사용할 데이터 소스 컨트롤의 ID입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="queryExtender.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.QueryExtender" /> 컨트롤의 뷰 상태 변경 내용을 컨트롤의 <see cref="T:System.Web.UI.StateBag" /> 개체에 저장할 수 있도록 추적합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>