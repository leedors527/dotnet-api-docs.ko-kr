<Type Name="SqlDataSource" FullName="System.Web.UI.WebControls.SqlDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc6d37792ef680495880c347f2eb3dad9500756b" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55359150" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type SqlDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectQuery")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>데이터 바인딩된 컨트롤의 SQL 데이터베이스를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용:  
  
-   [소개](#introduction)  
  
-   [데이터 연결](#data_connections)  
  
-   [데이터 작업을 수행합니다.](#performing_data_operations)  
  
-   [데이터 공급자](#data_provider)  
  
-   [캐싱](#caching)  
  
-   [추가 기능](#additional_features)  
  
-   [데이터 원본 뷰](#data_source_view)  
  
-   [선언 구문](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>소개  
 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터 소스 컨트롤 데이터 바인딩된 컨트롤에는 SQL 관계형 데이터베이스의 데이터를 나타냅니다. 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSource> 관계형 데이터베이스에서 데이터를 검색 및 표시, 편집 및 적거나 없는 코드를 사용 하 여 웹 페이지에서 데이터를 정렬 하는 데이터 바인딩된 컨트롤과 함께에서 제어 합니다.  
  
<a name="data_connections"></a>   
## <a name="data-connections"></a>데이터 연결  
 설정 데이터베이스에 연결 해야 합니다는 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 유효한 연결 문자열 속성입니다. <xref:System.Web.UI.WebControls.SqlDataSource> 와 같은 ADO.NET 공급자를 사용 하 여 연결할 수 있는 모든 SQL 관계형 데이터베이스를 지원할 수는 `SqlClient`, `OleDb`, `Odbc`, 또는 `OracleClient` 공급자입니다. 연결 문자열을 보호 하는 방법에 대 한 정보를 참조 하세요 [방법: 컨트롤을 사용 하 여 데이터 원본 때 보안 연결 문자열](https://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)합니다.  
  
 기본 데이터베이스에서 데이터를 검색할 설정의 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> SQL 쿼리를 사용 하 여 속성입니다. 경우 데이터베이스는 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 관련이 지 원하는 저장 프로시저를 사용 하 여 설정할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성을 저장된 프로시저의 이름입니다. 지정 하는 SQL 쿼리 매개 변수가 있는 쿼리일 수 있습니다. 추가할 수 있습니다 <xref:System.Web.UI.WebControls.Parameter> 매개 변수가 있는 쿼리를 사용 하 여 연결 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 컬렉션입니다. 매개 변수가 있는 SQL 쿼리 및 해당 구문에 대 한 자세한 내용은 참조 하세요. [필터링에 대 한 데이터 소스 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100))입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 데이터를 검색할 때마다는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드가 호출 됩니다. 이 메서드는 지정 된 메서드에 프로그래밍 방식 액세스를 제공 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 속성입니다. <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 자동으로 메서드는 컨트롤에 바인딩되는 <xref:System.Web.UI.WebControls.SqlDataSource> 때 해당 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드가 호출 됩니다. 설정 하는 경우는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> 데이터 바인딩된 컨트롤의 속성, 컨트롤을 자동으로 데이터에 바인딩하 필요에 따라 데이터 원본에서 합니다. 설정 합니다 `DataSourceID` 속성은 바인딩에 대 한 권장 되는 메서드는 <xref:System.Web.UI.WebControls.ObjectDataSource> 컨트롤을 데이터 바인딩된 컨트롤입니다. 사용할 수 있습니다 합니다 `DataSource` 속성인 있지만 명시적으로 호출 해야 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 데이터 바인딩된 컨트롤의 메서드. 사용할 수 있는 데이터 바인딩된 컨트롤의 예로 <xref:System.Web.UI.WebControls.SqlDataSource> 됩니다 <xref:System.Web.UI.WebControls.DataGrid>를 <xref:System.Web.UI.WebControls.DetailsView>를 <xref:System.Web.UI.WebControls.DataList>, 및 <xref:System.Web.UI.WebControls.DropDownList>합니다. 호출할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 프로그래밍 방식으로 언제 든 지 기본 데이터베이스에서 데이터를 검색 합니다.  
  
 선언적 및 프로그래밍 방식으로 ASP.NET 시나리오에서 설정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 의 ID 데이터 바인딩된 컨트롤의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다. 인스턴스를 할당할 수도 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 데이터 바인딩된 컨트롤의 속성입니다. 바인딩 데이터 바인딩된 컨트롤을 데이터 소스 컨트롤에 대 한 자세한 내용은 참조 하세요. [ASP.NET 데이터 액세스 옵션](https://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d)합니다.  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>데이터 작업을 수행합니다.  
 인스턴스의 구성과 내부 데이터베이스 제품의 기능에 따라는 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스를 삽입, 업데이트 및 삭제와 같은 데이터 작업을 수행할 수 있습니다. 이러한 데이터 작업을 수행 하려면 적절 한 명령 텍스트 및 수행 하려는 작업에 대 한 연결된 매개 변수를 설정 합니다. 예를 들어, 업데이트 작업을 설정 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성은 SQL 문자열이 나 저장된 프로시저의 이름으로 모든 필수 매개 변수를 추가 하 고는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션입니다. 업데이트가 수행 되는 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드가 호출 되는 데이터 바인딩된 컨트롤에 의해 코드에서 명시적으로 또는 자동으로 합니다. 동일한 일반 패턴에 대 한 뒤 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 고 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 작업 합니다.  
  
 SQL 쿼리 및에서 사용 하는 명령을 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>, 및 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 속성을 매개 변수화 할 수 있습니다. 이 쿼리 또는 명령을 리터럴 값 대신 자리 표시자를 사용할 수 있으며 애플리케이션 또는 사용자 정의 변수 자리 표시자를 바인딩할 의미 합니다. 세션 변수에, Web Forms 페이지에 대 한 쿼리 문자열에 전달 되는 값, 다른 서버 컨트롤의 속성 값을 SQL 쿼리에서 매개 변수를 바인딩할 수 있습니다. SQL 쿼리와 매개 변수를 사용 하는 방법에 대 한 자세한 합니다 <xref:System.Web.UI.WebControls.SqlDataSource>를 참조 하세요 [필터링에 대 한 데이터 소스 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)) 및 [SqlDataSource컨트롤을사용하여매개변수를사용하여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!NOTE]
>  기본적으로 매개 변수 중 하나가 `null` 실행 하는 경우는 `Select` 명령을 데이터 없음이 반환 되 고 예외가 throw 됩니다. 설정 하 여이 동작을 변경할 수는 <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> 속성을 `false`입니다.  
  
<a name="data_provider"></a>   
## <a name="data-provider"></a>데이터 공급자  
 기본적으로 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤의 SQL Server 용.NET Framework Data Provider를 사용 하 여 작동 하지만 <xref:System.Web.UI.WebControls.SqlDataSource> 없는 Microsoft SQL Server 별. 연결할 수는 <xref:System.Web.UI.WebControls.SqlDataSource> 관리 되는 ADO.NET 공급자가 모든 데이터베이스 제품을 사용 하 여 제어 합니다. 와 함께 사용할 경우는 <xref:System.Data.OleDb?displayProperty=nameWithType> 공급자는 <xref:System.Web.UI.WebControls.SqlDataSource> 모든 OLE DB 호환 데이터베이스로 작업할 수 있습니다. 와 함께 사용할 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자는 <xref:System.Web.UI.WebControls.SqlDataSource> ODBC 드라이버 및 IBM DB2, MySQL 및 PostgreSQL을 비롯 하 여 데이터베이스를 사용 하 여 사용할 수 있습니다. 와 함께 사용할 경우는 <xref:System.Data.OracleClient?displayProperty=nameWithType> 공급자는 <xref:System.Web.UI.WebControls.SqlDataSource> 8.1.7 Oracle 데이터베이스를 사용 하 여 이상 사용할 수 있습니다. 허용 되는 공급자 목록에 등록 된는 `DbProviderFactories` 합니다 Machine.config 또는 Web.config 파일에서 구성 파일의 섹션입니다. 자세한 내용은 [SqlDataSource 컨트롤을 사용 하 여 선택 하면 데이터](https://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)입니다.  
  
<a name="caching"></a>   
## <a name="caching"></a>캐싱  
 사용 하 여 페이지의 데이터를 표시 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 페이지의 성능 데이터 캐싱 데이터 소스 컨트롤의 기능을 사용 하 여 늘릴 수 있습니다. 웹 서버에서 메모리 데이터베이스 서버의 처리 부하를 줄입니다 캐싱 대부분의 경우에서 적절 한 절충 이것이입니다. <xref:System.Web.UI.WebControls.SqlDataSource> 자동으로 데이터를 캐시 때 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> 속성이 `true` 및 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 속성 캐시는 캐시 엔트리가 삭제 되기 전에 데이터를 저장 하는 시간 (초) 수로 설정 됩니다. 지정할 수도 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 및 선택적 <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> 값입니다.  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>추가 기능  
 <xref:System.Web.UI.WebControls.SqlDataSource> 다음 표에 나열 된 추가 기능을 제공 합니다.  
  
|기능|요구 사항|  
|----------------|------------------|  
|캐싱|설정 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을를 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 값을 <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> 속성을 `true`, 및 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 캐시 된 데이터에 대해 원하는 캐싱 동작에 따라 속성.|  
|삭제|설정 된 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 데이터를 삭제 하는 데 사용 되는 SQL 문에 대 한 속성입니다. 이 문은 일반적으로 매개 변수화 됩니다.|  
|필터링|설정 된 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을는 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 값입니다. 설정 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성 데이터를 필터링 하는 데 사용 하는 필터링 식에 때는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드가 호출 됩니다.|  
|삽입|설정 된 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> SQL 문 사용 하 여 데이터를 삽입 하는 속성입니다. 이 문은 일반적으로 매개 변수화 됩니다.|  
|페이징|하지만 현재 지원 되지 않습니다를 <xref:System.Web.UI.WebControls.SqlDataSource>일부 데이터 바인딩 같은 컨트롤 <xref:System.Web.UI.WebControls.GridView>를 설정한 경우 페이징을 지원 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을를 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 값.|  
|선택|설정 된 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 데이터를 검색 하는 데 사용 되는 SQL 문에 대 한 속성입니다.|  
|정렬|<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>으로 설정합니다.|  
|업데이트하는 중|설정 된 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 데이터를 업데이트 하는 데 사용 되는 SQL 문에 대 한 속성입니다. 이 문은 일반적으로 매개 변수화 됩니다.|  
  
<a name="data_source_view"></a>   
## <a name="data-source-view"></a>데이터 원본 뷰  
 모든 데이터 소스 컨트롤과 마찬가지로 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 데이터 소스 뷰 클래스와 연결 되어 있습니다. <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에 연결 된 하나만 <xref:System.Web.UI.WebControls.SqlDataSourceView>, 이름은 항상 및 `Table`합니다.  
  
 시각적으로 렌더링 되지를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 만들 수 있습니다 선언적으로, 필요에 따라 상태 관리에 참여 하도록 허용할 수 있도록 컨트롤로 구현 됩니다. 결과적으로 <xref:System.Web.UI.WebControls.SqlDataSource> 에서 제공 하는 것과 같은 시각적 기능을 지원 하지 않습니다 합니다 <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> 또는 <xref:System.Web.UI.DataSourceControl.SkinID%2A> 속성입니다.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:SqlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    CancelSelectOnNullParameter="True|False"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConnectionString="string"  
    DataSourceMode="DataReader|DataSet"  
    DeleteCommand="string"  
    DeleteCommandType="Text|StoredProcedure"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertCommand="string"  
    InsertCommandType="Text|StoredProcedure"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    ProviderName="string|System.Data.Odbc|System.Data.OleDb|  
        System.Data.OracleClient|System.Data.SqlClient|  
        Microsoft.SqlServerCe.Client"  
    runat="server"  
    SelectCommand="string"  
    SelectCommandType="Text|StoredProcedure"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    UpdateCommand="string"  
    UpdateCommandType="Text|StoredProcedure"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:SqlDataSource>  
```  
  
## Examples  
 
이 섹션에서는 네 가지 코드 예제가 포함 되어 있습니다.  
  
-   첫 번째 코드 예제에는 SQL server에서 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 선언적 구문을 사용 하 여 제어 합니다.  
  
-   두 번째 코드 예제는 ODBC 호환 데이터베이스의 데이터를에서 표시 하는 방법에 설명 된 <xref:System.Web.UI.WebControls.GridView> 선언적 구문을 사용 하 여 제어 합니다.  
  
-   세 번째 코드 예제에서 데이터 표시 및 업데이트 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
-   네 번째 코드 예제에서 데이터 표시 및 업데이트 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.  
  
    > [!NOTE]
    >  이러한 예제에는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다. 태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 자세한 내용은 [Visual Studio에서 데이터 액세스](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)합니다.  
  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource> SQL Server에서 데이터를 검색 및 표시를 선언적으로 제어를 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에 표시 하는 ODBC 호환 데이터베이스에서 데이터를 검색을 선언적으로 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성의 이름은.NET Framework Data Provider for ODBC는 <xref:System.Data.Odbc?displayProperty=nameWithType>합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/CS/odbc3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/VB/odbc3vb.aspx#1)]  
  
 다음 코드 예제에서는 일반적인 표시 및 업데이트 시나리오를 보여 줍니다는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 이전 예제를 사용 하 여 Northwind 데이터베이스에서 데이터에 표시 되는 여 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 또한 때문에 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성이 지정 되어 및 <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> 속성이 `true`를 편집 하 고 추가 코드 없이 사용 하 여 레코드를 업데이트할 수 있습니다. <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 매개 변수를 추가 처리를 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션과 호출 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드 때를 **업데이트** 단추를 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 클릭할.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/CS/sql5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/VB/sql5vb.aspx#1)]  
  
 다음 코드 예제에서는 일반적인 표시 및 업데이트 시나리오를 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 고 <xref:System.Web.UI.WebControls.TextBox> 컨트롤입니다. <xref:System.Web.UI.WebControls.DropDownList> 제어 매개 변수 업데이트를 자동으로 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션도 호출을 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드, 그렇게 해야 합니다. 업데이트 매개 변수를 선언적으로 지정 되 고 수행 하는 이벤트 처리기를 추가할 수는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 이벤트가 발생할 때 작업 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 잠재적인 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc">Visual Studio에서 데이터 액세스</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
    <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
    <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSource : string * string -&gt; System.Web.UI.WebControls.SqlDataSource" Usage="new System.Web.UI.WebControls.SqlDataSource (connectionString, selectCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">내부 데이터베이스에 연결하는 데 사용되는 연결 문자열입니다.</param>
        <param name="selectCommand">내부 데이터베이스에서 데이터를 검색하는 데 사용되는 SQL 쿼리입니다. SQL 쿼리가 매개 변수가 있는 SQL 문자열인 경우 <see cref="T:System.Web.UI.WebControls.Parameter" /> 개체를 <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> 컬렉션에 추가해야 합니다.</param>
        <summary>지정된 연결 문자열과 Select 명령을 사용하여 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터베이스 제품 마다 다양 한 SQL 구문 사용 하므로 `selectCommand` 는 현재 사용 중인 ADO.NET 공급자를 식별 되는 종속 된 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성입니다. SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다. 예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인를 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`. 그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다. 매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 값일 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지 원하는 경우.  
  
   
  
## Examples  
 다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource> 사용 하 여 제어는 <xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A> 생성자입니다. 예제에는 일반적이 지 않습니다.는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 되는 중간 계층 개체의 구현 되지만 Web Forms 페이지에 없는 비즈니스 개체에 대 한 간단 하 게 데이터베이스와 상호 작용할 수 있습니다. 이 예제에서는 Web.config 파일에 저장 된 연결 문자열을 사용 합니다.  
  
 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.ObjectDataSource> 클래스입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string providerName, string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ providerName, System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSource : string * string * string -&gt; System.Web.UI.WebControls.SqlDataSource" Usage="new System.Web.UI.WebControls.SqlDataSource (providerName, connectionString, selectCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName"><see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 사용하는 데이터 공급자의 이름입니다. 공급자를 설정하지 않은 경우 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />는 기본적으로 Microsoft SQL Server용 ADO.NET 공급자를 사용합니다.</param>
        <param name="connectionString">내부 데이터베이스에 연결하는 데 사용되는 연결 문자열입니다.</param>
        <param name="selectCommand">내부 데이터베이스에서 데이터를 검색하는 데 사용되는 SQL 쿼리입니다. SQL 쿼리가 매개 변수가 있는 SQL 문자열인 경우 <see cref="T:System.Web.UI.WebControls.Parameter" /> 개체를 <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> 컬렉션에 추가해야 합니다.</param>
        <summary>지정된 연결 문자열과 Select 명령을 사용하여 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터베이스 제품 마다 다양 한 SQL 구문 사용 하므로 `selectCommand` 는 현재 사용 중인 ADO.NET 공급자를 식별 되는 종속 된 `providerName` 매개 변수입니다. SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다. 예를 들어 공급자가 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`합니다. 그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다. 매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지 원하는 경우.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> 메서드로 검색한 데이터를 데이터 소스 컨트롤에서 캐시하는 시간(초)을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> 작업의 결과를 캐시하는 시간(초)입니다. 기본값은 0입니다. 값은 음수일 수 없습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 데이터 캐싱을 지원 합니다. 데이터 캐시 되어 있는 동안은 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 기본 데이터베이스 대신 캐시에서 데이터를 검색 합니다. 캐시가 만료 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드, 기본 데이터베이스에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 자동으로 데이터를 캐시 때 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> 속성이 `true` 및 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 속성 캐시에 캐시 엔트리 이전의 데이터가 저장 되는 시간 (초) 수를 나타내는 0 보다 큰 값으로 설정 됩니다 삭제 됩니다. 값이 0 무한정 캐시를 나타냅니다.  
  
 캐시의 동작 기간의 조합으로 결정 됩니다 및 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성입니다. 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> 값을 <xref:System.Web.UI.WebControls.SqlDataSource> 첫 번째 데이터 검색 작업에 데이터를 캐시, 최대 시간으로 지정 된 기간 동안 메모리에 보관 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 속성입니다. 메모리가 필요한 경우 데이터를 기간, 이전 해제 될 수 있습니다. 다음 작업 중에 캐시 한 다음 새로 고쳐집니다. 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> 값을 데이터 소스 컨트롤은 첫 번째 데이터 검색 작업에서 데이터를 캐시 하지만 각 후속 작업에 대 한 캐시를 포함 하는 시간 창을 다시 설정 합니다. 해당 시간 동안 활동이 없는 경우 캐시가 만료 되는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 마지막 값 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 작업 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤의 경우에 데이터를 캐시할 수 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 모드입니다. <xref:System.NotSupportedException> 예외를 throw를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드를 경우 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 로 설정 되어를 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 값 및 캐싱도 사용 합니다.  
  
> [!IMPORTANT]
>  Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다. 다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다. 데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다. 데이터에 액세스 하는 둘 이상의 사용자를 예상 하는 경우 각 검색 데이터를 데이터베이스에 대 한 보안 구성으로 확인에 캐싱을 사용 하지 마십시오.  
  
   
  
## Examples  
 다음 코드 예제에는 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 컨트롤, 데이터 캐싱을 사용 하도록 설정 합니다. <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 20 초로 설정 됩니다 되므로 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성이 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> 기본적으로이 페이지의 사용자 값 새로운 데이터 20 초 마다 표시 됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>기간과 결합될 때 데이터 소스 컨트롤에서 사용하는 캐시의 동작을 설명하는 캐시 만료 동작을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.DataSourceCacheExpiry" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 데이터 캐싱을 지원 합니다. 데이터 캐시 되어 있는 동안은 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 기본 데이터베이스 대신 캐시에서 데이터를 검색 합니다. 캐시가 만료 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드, 기본 데이터베이스에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.  
  
 캐시의 동작의 조합으로 결정 됩니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 고 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 설정 합니다. 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> 값을 <xref:System.Web.UI.WebControls.SqlDataSource> 첫 번째 데이터 검색 작업에 데이터를 캐시, 지정 된 시간 동안 메모리에 보관는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 속성을 다음 시간 후 삭제 하 고 경과 합니다. 다음 작업 중에 캐시 한 다음 새로 고쳐집니다. 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> 값을 데이터 소스 컨트롤은 첫 번째 데이터 검색 작업에서 데이터를 캐시 하지만 각 후속 작업에 대 한 캐시를 포함 하는 시간 창을 다시 설정 합니다. 해당 시간 동안 활동이 없는 경우 캐시가 만료 되는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 마지막 값 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 작업 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에서 데이터를 캐시할 수의 경우에만 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 모드입니다. <xref:System.NotSupportedException> 예외를 throw를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드를 경우 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 로 설정 되어를 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 값 및 캐싱도 사용 합니다.  
  
> [!IMPORTANT]
>  Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다. 다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다. 데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다. 데이터에 액세스 하는 둘 이상의 사용자를 예상 하는 경우 각 검색 데이터를 데이터베이스에 대 한 보안 구성으로 확인에 캐싱을 사용 하지 마십시오.  
  
   
  
## Examples  
 다음 코드 예제에는 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 컨트롤, 데이터 캐싱을 사용 하도록 설정 합니다. 때문에 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> 값을 사용자가 새 데이터도 표시 되지 것입니다는 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 값은 20 초. 캐시 된 데이터는 이후 마지막으로 페이지 로드 20 초 이상에 대 한 페이지에서 활동이 없는 경우에 새로 고쳐집니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/CS/sql19cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/VB/sql19vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스 컨트롤에서 만든 모든 데이터 캐시 개체에 링크된 사용자 정의 키 종속성을 가져오거나 설정합니다. 이 키가 만료되면 모든 캐시 개체도 명시적으로 만료됩니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 만든 모든 캐시 개체를 식별하는 키입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 데이터 캐싱을 지원 합니다. 데이터 캐시 되어 있는 동안은 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 기본 데이터베이스 대신 캐시에서 데이터를 검색 합니다. 캐시가 만료 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드, 기본 데이터베이스에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.  
  
 설정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A> 속성에서 만든 모든 캐시 항목 간의 종속성을 만들려면는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤과 키입니다. 키를 만료 하 여 언제 든 지 모든 캐시 항목을 만료 프로그래밍 방식으로 있습니다.  
  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에서 데이터를 캐시할 수의 경우에만 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 모드입니다. <xref:System.NotSupportedException> 예외를 throw를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드를 경우 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 로 설정 되어를 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 값 및 캐싱도 사용 합니다.  
  
 모든 조합에 대 한 고유 캐시 엔트리 만들어집니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>, 및 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 속성입니다. 여러 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 같은 캐시 엔트리 시나리오에서 사용할 수 컨트롤 같은 기본 데이터베이스에서 동일한 데이터를 로드 합니다.  
  
> [!IMPORTANT]
>  Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다. 다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다. 데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다. 데이터에 액세스 하는 둘 이상의 사용자를 예상 하는 경우 각 검색 데이터를 데이터베이스에 대 한 보안 구성으로 확인에 캐싱을 사용 하지 마십시오.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public virtual bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelSelectOnNullParameter : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> 컬렉션에 포함된 매개 변수가 <see langword="null" />일 때 데이터 검색 작업이 취소되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> 컬렉션에 포함된 매개 변수가 <see langword="true" />일 때 데이터 검색 작업이 취소되는 경우 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> 속성은 뷰 상태에 저장 됩니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>작업 시간 동안 내부 데이터베이스의 행 데이터가 변경된 경우 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤이 업데이트 및 삭제를 수행하는 방법을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.ConflictOptions" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성 이전 및 새 값에 대 한 매개 변수에 적용 되었는지 여부를 결정 합니다 `Update` 메서드. 예를 들어 명령입니다로 지정 된를 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성에서 반환을 <xref:System.Data.DataTable> 열을 사용 하 여 개체 `Name` 및 `Number` 및 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.OverwriteChanges> 에 대 한 매개 변수는 생성 값 `Name` 하 고 `Number` 에 대 한는 `Update` 메서드. 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 에 대 한 매개 변수는 생성 값 `Name`, `Number`, `original_Name`, 및 `original_Number`합니다. (원래 값에 대 한 정확한 매개 변수 이름에 따라 달라 집니다는 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> 속성입니다.) <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 다음 경우를 결정 합니다 `Update` 에 지정 된 메서드는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성이 일치 하는 매개 변수입니다.  
  
 동시성 제어에는 데이터는 읽기 및 여러 클라이언트가 액세스 하 고 동일한 데이터를 조작 하는 경우 저장소에서 변경 하는 방법을 제어 하려면 데이터 저장소를 사용 하는 기술입니다. 예를 들어, 하나의 클라이언트 데이터를 읽고 다른 클라이언트가 동일한 데이터를 읽는 다른 사용자에 게 제공 하는 동안 사용자에 게 제공 합니다. 두 사용자가 데이터를 업데이트하여 데이터 스토리지에 제출하는 경우 두 클라이언트가 모두 동일한 데이터에 대해 다른 값을 업데이트할 수 있으므로 예기치 않은 결과가 발생할 수 있습니다. 이 충돌로 간주 됩니다. 설정 하 여는 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성을 합니다 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값에 `Update` 메서드 수 충돌을 감지 하 고 필요에 따라 처리 하는 원래 데이터 원본에 이전 및 새 값을 비교 합니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public virtual string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 기본 데이터베이스에 연결하는 데 사용하는 ADO.NET 공급자 관련 연결 문자열을 가져오거나 설정합니다.</summary>
        <value>.NET Framework 데이터 공급자별 문자열입니다는 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 사용 하 여 표시 되는 SQL database에 연결 합니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> ADO.NET 공급자는 다양 한 제어를 사용할 수 있으며 기본 데이터 원본에 연결 하는 데 사용 되는 연결 문자열의 구문은 공급자별으로 다릅니다.  
  
 구성 하는 경우를 <xref:System.Web.UI.WebControls.SqlDataSource> 설정한 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성을 데이터베이스의 형식 (기본값은 <xref:System.Data.SqlClient?displayProperty=nameWithType>)를 설정 하면를 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성에 연결 하기 위해 필요한 정보를 포함 하는 연결 문자열을 데이터베이스. 연결 문자열의 내용을 데이터 소스 컨트롤에 액세스 하는 데이터베이스의 유형에 따라 달라 집니다. 예를 들어를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에는 서버 이름, 데이터베이스 (카탈로그) 이름 및 SQL Server에 연결할 때 사용자를 인증 하는 방법에 대 한 정보에 필요 합니다. 연결 문자열의 내용에 대 한 정보를 참조 하세요.는 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 속성에 대 한는 <xref:System.Data.SqlClient.SqlConnection> 클래스 <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> 속성에 대 한 합니다 <xref:System.Data.OracleClient.OracleConnection> 클래스 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> 속성에 대 한를 <xref:System.Data.OleDb.OleDbConnection> 클래스 또는 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> 에 대 한 속성을 <xref:System.Data.Odbc.OdbcConnection> 클래스입니다.  
  
 변경 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성을 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트가 발생에 바인딩되는 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource> 바인딩할 컨트롤.  
  
> [!IMPORTANT]
>  연결 문자열을 저장 하는 방법에 대 한 내용은 [방법: 연결 문자열 보안 컨트롤을 사용 하 여 데이터 원본 때](https://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)합니다.  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성을 Microsoft SQL Server 데이터베이스에 연결 하 고 결과 표시 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성에는 <xref:System.Web.UI.WebControls.GridView> 컨트롤. 두 번째 코드 예제는 더 복잡 한 시나리오를 보여 줍니다. 여기서는 <xref:System.Web.UI.WebControls.SqlDataSource> 표시 하 고 암호로 보호 된 Microsoft Access 데이터베이스의 데이터를 업데이트할 컨트롤을 사용 합니다. 각각의 경우에는 `connectionStrings` Web.config 파일의 요소는 표시 된 먼저 뒤에 포함 된 ASP.NET 페이지는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다.  
  
 다음 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성을 SQL Server 데이터베이스에 연결 하 고 결과 표시 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성에는 <xref:System.Web.UI.WebControls.GridView> 컨트롤.  
  
  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 다음 코드 예제에서는 앞의 코드 예제, 보다 복잡 한 시나리오를 보여 줍니다. 여기서는 <xref:System.Web.UI.WebControls.SqlDataSource> 암호로 보호 된 액세스 데이터베이스에 데이터 표시 및 업데이트 컨트롤을 사용 합니다. 때문에 <xref:System.Web.UI.WebControls.SqlDataSource> 액세스와 함께 사용 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성을 <xref:System.Data.OleDb> 공급자 및 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> UNC 공유 액세스 데이터베이스에 대 한 연결 문자열 속성. <xref:System.Web.UI.WebControls.GridView> 컨트롤에는 배송 날짜를 사용 하 여 주문이 표시 됩니다. 적절 한 확인란을 선택한 다음 클릭 하 여 순서를 업데이트할 수 있습니다 합니다 **업데이트** 단추입니다.  
  
> [!IMPORTANT]
>  이 예제는 설명 위한 용도로 사용 되는 일반 텍스트로 암호를 포함합니다. 프로덕션 애플리케이션에서 암호를 포함 하는 연결 문자열을 암호화 합니다. 자세한 내용은 [연결 정보 보호](~/docs/framework/data/adonet/protecting-connection-information.md)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceView (viewName As String) As SqlDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::SqlDataSourceView ^ CreateDataSourceView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSourceView : string -&gt; System.Web.UI.WebControls.SqlDataSourceView&#xA;override this.CreateDataSourceView : string -&gt; System.Web.UI.WebControls.SqlDataSourceView" Usage="sqlDataSource.CreateDataSourceView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">데이터 소스 뷰의 이름입니다.</param>
        <summary>데이터 소스 컨트롤과 연결된 데이터 소스 뷰 개체를 만듭니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />와 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 된 클래스는 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스에서 재정의할 수는 <xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A> 강력 하 게 반환 하려면 데이터 원본 뷰 개체를 입력 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="DataSourceMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceMode As SqlDataSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceMode DataSourceMode { System::Web::UI::WebControls::SqlDataSourceMode get(); void set(System::Web::UI::WebControls::SqlDataSourceMode value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceMode : System.Web.UI.WebControls.SqlDataSourceMode with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 데이터를 페치하는 데 사용할 데이터 검색 모드를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /> 값 중 하나입니다. 기본값은는 <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 검색 모드를 식별 하는 방법을 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 기본 데이터베이스에서 데이터를 검색 합니다.  
  
 때를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 값 데이터가 로드 되는 <xref:System.Data.DataSet> 개체 및 서버에서 메모리에 저장 된. 이 시나리오와 같은 사용자 인터페이스 컨트롤 위치를 통해 <xref:System.Web.UI.WebControls.GridView>, 정렬, 필터링 및 페이징 기능을 제공 합니다.  
  
 때를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 값 데이터를 검색 하는 <xref:System.Data.IDataReader> 개체는 읽기 전용, 정방향 전용 커서는. 특정 유형의 합니다 <xref:System.Data.IDataReader> 개체 순 데이터 공급자에 따라 달라 집니다는 <xref:System.Web.UI.WebControls.SqlDataSource> 식별 되는 사용 하 여는 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성. 기본적으로 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 Microsoft SQL Server에 대 한 공급자를 사용 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>, 데이터 판독기가 및는 <xref:System.Data.SqlClient.SqlDataReader> 개체.  
  
 변경 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트가 발생에 바인딩되는 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource> 바인딩할.  
  
 값을 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성은 뷰 상태에 저장 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에는 설정 하는 방법을 보여 줍니다.를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 사용 하는 시나리오에 대 한 값을 <xref:System.Web.UI.WebControls.ListBox> 없습니다 정렬 해야 하는 컨트롤, 페이징, 필터링 또는.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> 속성이 <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />에 정의된 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="sqlDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> SQL 문자열과 <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" /> 컬렉션에 있는 매개 변수를 사용하여 삭제 작업을 수행합니다.</summary>
        <returns>내부 데이터베이스에서 삭제되는 행 수를 나타내는 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 삭제 작업을 수행 하려면 먼저 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 이벤트입니다. 매개 변수의 값을 확인 하 고 삭제 작업 전에 전처리 하는 데이 이벤트를 처리할 수 있습니다.  
  
 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 이벤트. 모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.  
  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드를 프로그래밍 방식 액세스를 위해 제공 됩니다는 `Delete` 메서드. 경우는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 데이터 바인딩된 컨트롤을 사용 하 여 연결, 데이터 바인딩된 컨트롤을 자동으로 호출 합니다 **삭제** 메서드.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤. 작업을 수행 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 빌드를 <xref:System.Data.Common.DbCommand> 를 사용 하 여 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 텍스트 및 연결 된 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 값 및 다음 실행는 <xref:System.Data.Common.DbCommand> 기본 데이터베이스에 대해 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Northwind 데이터베이스에서 주문을 삭제 하는 텍스트입니다. 데이터를 Orders 테이블에서 검색 하 고 표시 하는 처음에 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다. 명시적으로 선언 해야 합니다는 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 속성과 호출을 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 와 같은 데이터 바인딩된 컨트롤을 사용 하는 경우 메서드는 <xref:System.Web.UI.WebControls.DropDownList> (컨트롤과 달리 같은 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView>는 자동으로 채울는 매개 변수 및 호출 된 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 데이터 소스 컨트롤에서 메서드). 이 예제에서는 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 이벤트 개인에 게 위임 `OnDelete` 명시적으로 호출 하는 이벤트 처리기를 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드의 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤이 내부 데이터베이스에서 데이터를 삭제하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 데이터를 삭제하는 데 사용하는 SQL 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> SQL 쿼리 또는 저장된 프로시저의 이름을 나타내며에서 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드.  
  
 데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성으로 식별 가능)에 따라 달라집니다. SQL 문자열 매개 변수가 있는 쿼리 또는 명령을 이면 매개 변수 구문의 또한 사용 중인 ADO.NET 공급자에 따라 다릅니다. 예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자는 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스의 매개 변수 구문은 `'@parameterName'`. 그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다. 매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 속성 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터베이스 저장된 프로시저를 지원 합니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
> [!IMPORTANT]
>  보안상의 이유로 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 속성은 뷰 상태에 저장 되지 않습니다. 클라이언트에서 보기 상태의 내용이 디코딩할 수 이기 때문에 데이터베이스 구조에 대 한 중요 한 정보를 보기 저장 상태 발생할 수 정보 공개 취약성이 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Northwind 데이터베이스의 Orders 테이블에서 주문을 삭제 하는 텍스트입니다. 데이터는 Orders 테이블에서 검색 되어 표시를 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. <xref:System.Web.UI.WebControls.GridView> 렌더링을 **삭제** 자동으로 단추 때를 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> 속성이 `true`. 또한 때를 **삭제** 단추를 클릭 합니다 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 자동으로 채웁니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 컬렉션과 호출을 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드. 마지막으로,이 코드 예제에서는 데이터를 삭제 하기 때문에 이벤트 처리기가 추가 되기 전에 디스크에 데이터베이스를 백업 하려고 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 작업이 수행 됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삭제 작업이 완료된 경우 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리는 <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 삭제 작업이 완료 된 후의 값을 검사 하는 이벤트 매개 변수를 출력 합니다. 출력 매개 변수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> 속성에서 사용하는 매개 변수가 들어 있는 매개 변수 컬렉션을 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤에 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체에서 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 속성 매개 변수가 있는 SQL 쿼리를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 컬렉션에 포함 된 <xref:System.Web.UI.WebControls.Parameter> SQL 문자열에 매개 변수 자리 표시자에 해당 하는 개체입니다.  
  
> [!NOTE]
>  했는지 없습니다 <xref:System.Web.UI.WebControls.BoundField> 에 바인딩할 수 있는 데이터 바인딩된 컨트롤의 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤의 모든 매개 변수 이름과 일치 하는 이름이 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 컬렉션. 바인딩된 필드는 SQL 명령에서 "매개 변수가 제공 되지 않았습니다." 오류를 제외 하는 대로 동일한 이름을 가진 매개 변수가 될 수 있습니다.  
  
 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값 매개 변수 데이터의 이전 및 새 값에 대해 만들어집니다. 에 따라 이전 값에 대 한 매개 변수는 명명 된 된 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> 속성입니다.  
  
 ADO.NET 공급자에서 매개 변수의 순서에 따라는 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 컬렉션 중요할 수 있습니다. 합니다 <xref:System.Data.OleDb?displayProperty=nameWithType> 고 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자 매개 변수가 있는 SQL 쿼리가 매개 변수가 나타나는 순서에 따라 컬렉션의 매개 변수를 연결 합니다. 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType> 은 기본 ADO.NET 공급자는 공급자에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어, SQL 쿼리의 자리 표시자를 사용 하 여 매개 변수의 이름과 일치 하 여 컬렉션의 매개 변수를 연결 합니다. 매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
> [!IMPORTANT]
>  값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Northwind 데이터베이스에서 주문을 삭제 하는 텍스트입니다. 데이터를 Orders 테이블에서 검색 하 고 표시 하는 처음에 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다. 명시적으로 선언 해야 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> 속성 및 호출 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 와 같은 데이터 바인딩된 컨트롤을 사용 하는 경우 메서드 <xref:System.Web.UI.WebControls.DropDownList> (다른 컨트롤과 달리와 같은 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView>, 매개 변수 자동 채우기는 및 호출 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 데이터 소스 컨트롤에서). 이 예제에서는 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 이벤트 개인에 게 위임 `OnDelete` 명시적으로 호출 하는 이벤트 처리기를 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드의 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삭제 작업 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 애플리케이션에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 삭제 작업을 수행 합니다.  
  
 데이터 원본에 대 한 연결 아직 열려 있지 이벤트 처리기 대리자를 호출 합니다. 직접 호출 하 여 작업을 취소할 수 없습니다 따라서를 <xref:System.Data.Common.DbCommand.Cancel%2A> 메서드를 <xref:System.Data.Common.DbCommand> 에서 노출 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 개체. 설정 하 여 단, 데이터베이스 작업을 취소할 수 있습니다 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 개체를 `true`입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 하기 전에 발생 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 작업이 발생 합니다. 이 예제에서는 Northwind 데이터베이스에서 데이터를 삭제 하기 때문에 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> 처리기를 추가 하기 전에 디스크에 데이터베이스를 백업 하려고 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 작업이 수행 됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 데이터 캐싱이 활성화되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>데이터 소스 컨트롤에서 데이터 캐싱을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 데이터 캐싱을 지원 합니다. 데이터 캐시 되어 있는 동안은 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 기본 데이터베이스 대신 캐시에서 데이터를 검색 합니다. 캐시가 만료 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드, 기본 데이터베이스에서 데이터를 검색 하 고 다시 데이터를 캐시 합니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 자동으로 데이터를 캐시 때 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> 속성이로 설정 되어 `true` 및 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 속성 캐시를 검색 하기 전에 데이터를 저장 하는 시간 (초) 수를 나타내는 0 보다 큰 값으로 설정 됩니다는 새 집합입니다.  
  
> [!IMPORTANT]
>  Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다. 다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다. 데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다. 데이터에 액세스 하는 둘 이상의 사용자를 예상 하는 경우 각 검색 데이터를 데이터베이스에 대 한 보안 구성으로 확인에 캐싱을 사용 하지 마십시오.  
  
   
  
## Examples  
 다음 코드 예제에는 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 컨트롤, 데이터 캐싱을 사용 하도록 설정 합니다. 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> 속성이 `true` 하며 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 20 초로 설정 됩니다. 때문에 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성을 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> 기본적으로이 페이지의 사용자 필드 새로운 데이터 20 초 마다 표시 됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />에서 캐싱 기능을 지원하지 않을 때 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 속성이 <see langword="true" />로 설정된 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> 메서드가 호출될 때 적용되는 필터링 식을 가져오거나 설정합니다.</summary>
        <value><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> 메서드를 사용하여 데이터가 검색될 때 적용되는 필터링 식을 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성 값은 형식 문자열 식 (에 의해 처리 되는 문자열을 <xref:System.String.Format%2A?displayProperty=nameWithType> 메서드)의 값을 사용 하는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 문자열에 포함 된 대체 매개 변수 컬렉션입니다. 필터 식 구문은에 허용 되는 동일한 구문을 <xref:System.Data.DataView.RowFilter%2A> 속성을 필터 식에 적용 되므로 <xref:System.Data.DataView.RowFilter%2A> 의 속성을 <xref:System.Data.DataView> 실행에서 반환 되는 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드. 자세한 내용은 <xref:System.Data.DataColumn.Expression%2A>을 참조하세요.  
  
 매개 변수를 추가 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션 형식 문자열 자리 표시자를 포함할 수도 있습니다 (예를 들어 `"{0}")` 매개 변수 값에 대 한 대체 식에 있습니다. 매개 변수의 인덱스에 따라 자리 표시자는는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션입니다. 경우에 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 수집은 `null`, 개체를 빈 문자열로 바뀝니다.  
  
 매개 변수는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성입니다. 매개 변수 문자열 또는 문자 형식이 면 매개 변수를 작은따옴표로 묶습니다. 매개 변수가 숫자 형식인 경우 따옴표가 필요 없습니다. 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션에 있는 자리 표시자에 대 한 계산 되는 매개 변수를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성입니다.  
  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 데이터 필터링을 지원의 경우에만 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 모드입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
   
  
## Examples  
 다음 코드 예제에서는 Northwind 데이터베이스에서 데이터를 검색 하 고 사용 하 여 필터링 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 문자열 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션입니다. <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성에는 언제 든 지 적용 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 데이터를 검색할 메서드를 실행 합니다. 이 예제에서는 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 에 포함 된 필터 매개 변수에 대 한 자리 표시자를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션입니다. 또한 filter 매개 변수는를 <xref:System.Web.UI.WebControls.ControlParameter> 바인딩되는 개체를 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 의 속성을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤. 때문에 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤에 해당 <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> 속성이로 설정 `true`에 대 한 선택 변경 합니다 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤이 서버에 대 한 정보를 게시 하는 페이지 및 <xref:System.Web.UI.WebControls.GridView> 데이터 원본에 바인딩할 컨트롤 새 필터를 사용 하 여 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> 속성이 설정되었고 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> 모드인 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>필터 작업 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 하기 전에 필터 매개 변수 값에 대 한 유효성 검사 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 필터 작업을 수행 합니다. 취소할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 설정 하 여 메서드를 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> 개체를 `true`합니다. 경우에 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성을 설정 합니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType> 에 위임 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType> 의 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> 문자열의 모든 매개 변수 자리 표시자와 연결된 매개 변수 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에 있는 모든 매개 변수 자리 표시자와 연결된 매개 변수 집합을 포함하는 <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수를 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션에 지정 된 매개 변수를 사용 하 여 연결 된 된 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성입니다. 에 지정 된 매개 변수 자리 표시자를 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성의 매개 변수 개체를 순서 대로 일치 됩니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션 때는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드가 호출 됩니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
> [!IMPORTANT]
>  값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에서는 Northwind 데이터베이스에서 데이터를 검색 하 고 사용 하 여 필터에 대 한 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 속성입니다. <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 언제 든 지 적용 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 데이터를 검색할 메서드를 실행 합니다. 이 예제에서는 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성에 포함 된 필터 매개 변수에 대 한 자리 표시자를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 컬렉션입니다. 또한 filter 매개 변수는를 <xref:System.Web.UI.WebControls.ControlParameter> 바인딩되는 개체를 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 의 속성을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤. 때문에 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤에 해당 <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> 속성이로 설정 `true`, 변경 사항이 발생 합니다 <xref:System.Web.UI.WebControls.DropDownList> 선택 하면 페이지가 서버에 대 한 정보를 게시 및 <xref:System.Web.UI.WebControls.GridView> 사용 하 여 데이터 소스 컨트롤에 바인딩할 컨트롤은 새 필터입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderFactory">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderFactory GetDbProviderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbProviderFactory () As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbProviderFactory ^ GetDbProviderFactory();" />
      <MemberSignature Language="F#" Value="abstract member GetDbProviderFactory : unit -&gt; System.Data.Common.DbProviderFactory&#xA;override this.GetDbProviderFactory : unit -&gt; System.Data.Common.DbProviderFactory" Usage="sqlDataSource.GetDbProviderFactory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.Common.DbProviderFactory" /> 속성으로 식별되는 ADO.NET 공급자에 연결된 <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> 개체를 반환합니다.</summary>
        <returns>식별된 ADO.NET 공급자를 나타내는 <see cref="T:System.Data.Common.DbProviderFactory" />를 반환하며, 설정된 공급자가 없는 경우에는 <see cref="N:System.Data.SqlClient" />의 인스턴스를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DbProviderFactory> 속성은 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터베이스와 상호 작용할 때 올바른 ADO.NET 연결, 명령 및 매개 변수 개체를 만들기 위해 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbProviderFactory" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="sqlDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">검색할 뷰의 이름입니다. <see cref="T:System.Web.UI.WebControls.SqlDataSource" />는 한 개의 뷰만 지원하기 때문에 <paramref name="viewName" />은 무시됩니다.</param>
        <summary>데이터 소스 컨트롤과 연결된 명명된 데이터 소스 뷰를 가져옵니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />와 연결된 "Table"이라는 이름의 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 하나의 데이터 원본 뷰를 지원 합니다. 모든 데이터 원본 뷰 개체와 마찬가지로 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체 데이터 소스 컨트롤과 연결 된 해당 기능을 정의 기본 데이터베이스에서 데이터를 검색 하는 데 필요한 이며 정렬과 같은 작업을 수행 하는 모든 작업을 수행 합니다. 삽입, 삭제 및 업데이트 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="viewName" />이 <see langword="null" />이거나 <c>Table</c>이 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="sqlDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤과 연결된 뷰 개체 목록을 나타내는 이름의 컬렉션을 가져옵니다.</summary>
        <returns><see cref="T:System.Collections.ICollection" />와 연결된 뷰의 이름이 들어 있는 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 명명 된 해당 기본 데이터에 대해 하나의 뷰만 지원 `"Table"`합니다. <xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A> 메서드는이 보기 이름의 단일 요소 컬렉션을 반환 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="sqlDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> SQL 문자열과 <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" /> 컬렉션에 있는 매개 변수를 사용하여 삽입 작업을 수행합니다.</summary>
        <returns>내부 데이터베이스로 삽입되는 행 수를 나타내는 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 삽입 작업을 수행 하려면 먼저 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 이벤트입니다. 매개 변수의 값을 확인 하 고 전에 전처리 하는 데이 이벤트를 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 작업 합니다. 삽입 작업을 수행 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 빌드 개체는 <xref:System.Data.Common.DbCommand> 를 사용 하 여 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 텍스트 및 연결 된 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 속성을 다음 실행는 <xref:System.Data.Common.DbCommand> 기본 데이터베이스에 대 한 개체입니다.  
  
 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트. 모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.  
  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드를 프로그래밍 방식 액세스를 위해 제공 됩니다는 `Insert` 메서드. 경우는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤은 데이터 바인딩된 컨트롤을 사용 하 여 연결, 데이터 바인딩된 컨트롤을 자동으로 호출 된 `Insert` 메서드.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
> [!IMPORTANT]
>  값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 및 간단한 Web Forms 페이지입니다. 데이터 테이블의 현재 데이터에 표시 됩니다는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다. 값을 입력 하 여 새 레코드를 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 클릭 합니다 **삽입** 단추입니다. 경우는 **삽입** 단추를 클릭 하면, 지정 된 값을 데이터베이스에 삽입 되 고는 <xref:System.Web.UI.WebControls.DropDownList> 새로 고쳐집니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 및 값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
> [!NOTE]
>  이 예제에서는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다. 태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 자세한 내용은 [Visual Studio에서 데이터 액세스](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 내부 데이터베이스에 데이터를 삽입하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 데이터를 삽입하는 데 사용하는 SQL 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> SQL 쿼리 또는 저장된 프로시저의 이름을 나타내며에서 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드.  
  
 데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성으로 식별 가능)에 따라 달라집니다. SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다. 예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인를 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`. 그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다. 매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 데이터 원본에서 저장된 프로시저를 지 원하는 경우 SQL 문자열 또는 저장된 프로시저의 이름일 수 있습니다.  
  
 에 위임 하는이 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다.  
  
> [!IMPORTANT]
>  보안상의 이유로 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 속성 저장 되지 않습니다 보기 상태입니다. 클라이언트에서 보기 상태의 내용이 디코딩할 수 이기 때문에 데이터베이스 구조에 대 한 중요 한 정보를 보기 저장 상태 발생할 수 정보 공개 취약성이 있습니다.  
  
> [!IMPORTANT]
>  값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에서는 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 및 간단한 Web Forms 페이지입니다. 두 번째 코드 예제에는 Microsoft SQL Server에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 및 사용 방법을 <xref:System.Web.UI.WebControls.DetailsView> 제어에 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 컨트롤 형태로 새 레코드를 삽입 하 고 합니다.  
  
> [!NOTE]
>  이러한 예제에는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다. 태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 자세한 내용은 [Visual Studio에서 데이터 액세스](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)합니다.  
  
 다음 코드 예제에서는 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 및 간단한 Web Forms 페이지입니다. 데이터 테이블의 현재 데이터에 표시 됩니다는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다. 값을 입력 하 여 새 레코드를 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 클릭 합니다 **삽입** 단추입니다. 경우는 **삽입** 단추를 클릭 하면, 지정된 된 값은 데이터베이스에 삽입 및 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤 새로 고쳐집니다.  
  
> [!IMPORTANT]
>  잠재적인 보안 위협을 이기도 유효성 검사 없이 매개 변수 값을 삽입할 및이 예제에는 잠재적인 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 다음 코드 예제에는 SQL Server에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 및 사용 방법을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 컨트롤 형태로 새 레코드를 삽입 하 고 합니다.  
  
 에 데이터가 표시 됩니다는 처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행의 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤. <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 다양 한 데이터를 사용 하 여 컨트롤 소스 컨트롤; 연결 된 것을 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 의 선택된 된 행 되도록 하는 속성을는 <xref:System.Web.UI.WebControls.GridView> 는 표시 됩니다.  
  
 자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다. 이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다. 레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 자동으로 채웁니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 호출 고 바인딩된 열에서 값을 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드. 합니다 <xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 있습니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> 양방향 ASP.NET 데이터 바인딩 구문을 사용 하는 경우 개체입니다. 이 예제에서는 추가 매개 변수에서 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 되는 기본 키를 처리할 이벤트 처리기입니다.  
  
 마지막으로 하 여 데이터베이스에 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 됩니다 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드를 <xref:System.Web.UI.WebControls.GridView> 제어 데이터를 새로 고치려면 명시적으로 호출 됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
   
  
## Examples  
 다음 코드 예제에는 Microsoft SQL Server 데이터베이스에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 사용 하는 방법을 보여 줍니다를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 와 폼에 새 레코드를 삽입 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.GridView> 컨트롤에 데이터 집합이 표시 됩니다 및 <xref:System.Web.UI.WebControls.DetailsView> 특정 행에 대 한 세부 정보를 표시 합니다. 자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다. 이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다. 저장된 프로시저 이름에 설정 되어를 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 속성을 설정 하 여 저장된 프로시저를 식별 하 고는 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> 속성을를 <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> 값.  
  
 데이터베이스로 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드의 <xref:System.Web.UI.WebControls.GridView> 컨트롤은 데이터를 새로 고치려면 명시적으로 호출 됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입 작업이 완료되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리는 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 삽입 작업이 완료 된 후의 값을 확인 하려면 출력 매개 변수입니다. 출력 매개 변수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 Microsoft SQL Server에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 및 사용 방법을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 형태로 새 레코드를 삽입 하 고 합니다.  
  
> [!NOTE]
>  이 예제에서는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다. 태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 자세한 내용은 [Visual Studio에서 데이터 액세스](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)합니다.  
  
 에 데이터가 표시 됩니다는 처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행의 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤. <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 다양 한 데이터를 사용 하 여 컨트롤 소스 컨트롤; 연결 된 것을 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 의 선택된 된 행 되도록 하는 속성을는 <xref:System.Web.UI.WebControls.GridView> 는 표시 됩니다.  
  
 자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다. 이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다. 레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 자동으로 채웁니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 호출 고 바인딩된 열에서 값을 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드. 합니다 <xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 있습니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> 양방향 ASP.NET 데이터 바인딩 구문을 사용 하는 경우 개체입니다. 이 예제에서는 추가 매개 변수에서 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 되는 기본 키를 처리할 이벤트 처리기입니다.  
  
 마지막으로 하 여 데이터베이스에 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드를 <xref:System.Web.UI.WebControls.GridView> 제어 데이터를 새로 고치려면 명시적으로 호출 됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입 작업 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 애플리케이션에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 삽입 작업을 수행 합니다. 데이터 원본에 대 한 연결 아직 열려 있지 이벤트 처리기 대리자를 호출 합니다. 직접 호출 하 여 작업을 취소할 수 없습니다 따라서를 <xref:System.Data.Common.DbCommand.Cancel%2A> 메서드를 <xref:System.Data.Common.DbCommand> 에서 노출 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 속성. 설정 하 여 단, 데이터베이스 작업을 취소할 수 있습니다 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 개체를 `true`입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 Microsoft SQL Server에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 및 사용 방법을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 형태로 새 레코드를 삽입 하 고 합니다.  
  
> [!NOTE]
>  이 예제에서는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다. 태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 자세한 내용은 [Visual Studio에서 데이터 액세스](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)합니다.  
  
 에 데이터가 표시 됩니다는 처음에 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행의 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤. <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 다양 한 데이터를 사용 하 여 컨트롤 소스 컨트롤; 연결 된 것을 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 의 선택된 된 행 되도록 하는 속성을는 <xref:System.Web.UI.WebControls.GridView> 는 표시 됩니다.  
  
 자동으로 생성 된 클릭 하면 **삽입** 단추를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다. 이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다. 레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 자동으로 채웁니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 호출 고 바인딩된 열에서 값을 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드. 합니다 <xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 있습니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> 양방향 ASP.NET 데이터 바인딩 구문을 사용 되는 경우. 이 예제에서는 추가 매개 변수에서 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 되는 기본 키를 처리할 이벤트 처리기입니다.  
  
 마지막으로 하 여 데이터베이스에 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 `DataBind` 메서드를 <xref:System.Web.UI.WebControls.GridView> 제어 데이터를 새로 고치려면 명시적으로 호출 됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> 속성에서 사용하는 매개 변수가 들어 있는 매개 변수 컬렉션을 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤에 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체에서 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 속성 매개 변수가 있는 SQL 쿼리를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 컬렉션에 포함 된 <xref:System.Web.UI.WebControls.Parameter> SQL 문자열에 매개 변수 자리 표시자에 해당 하는 개체입니다.  
  
 ADO.NET 공급자에서 매개 변수의 순서에 따라는 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 컬렉션 중요할 수 있습니다. 합니다 <xref:System.Data.OleDb?displayProperty=nameWithType> 고 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자 매개 변수가 있는 SQL 쿼리가 매개 변수가 나타나는 순서에 따라 컬렉션의 매개 변수를 연결 합니다. <xref:System.Data.SqlClient?displayProperty=nameWithType> 은 기본 ADO.NET 공급자는 공급자에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하는 방법으로 컬렉션의 매개 변수를 연결 합니다. 매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.  
  
> [!IMPORTANT]
>  값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하 여 데이터베이스에 데이터를 삽입 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 및 간단한 Web Forms 페이지입니다. 데이터 테이블의 현재 데이터에 표시 됩니다는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다. 값을 입력 하 여 새 레코드를 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.TextBox> 컨트롤 및 클릭 합니다 **삽입** 단추입니다. 경우는 **삽입** 단추를 클릭 하면, 지정된 된 값은 데이터베이스에 삽입 및 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤 새로 고쳐집니다.  
  
> [!IMPORTANT]
>  잠재적인 보안 위협을 이기도 유효성 검사 없이 매개 변수 값을 삽입할 및이 예제에는 잠재적인 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
> [!NOTE]
>  이 예제에서는 데이터 액세스에 대 한 선언적 구문을 사용 하는 방법을 보여 줍니다. 태그 대신 코드를 사용 하 여 데이터에 액세스 하는 방법에 대 한 자세한 내용은 [Visual Studio에서 데이터 액세스](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="sqlDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Web.UI.WebControls.SqlDataSource" />의 상태를 나타내는 개체입니다.</param>
        <summary>유지해야 하는 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에 있는 속성의 상태를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A> 메서드를 사용 하 여 이전에 저장 된 뷰 상태를 로드 하는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> 또는 <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> 메서드에 전달된 모든 매개 변수의 이름에 적용할 서식 문자열을 가져오거나 설정합니다.</summary>
        <value><see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> 또는 <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> 메서드에 전달된 모든 <paramref name="oldValues" /> 매개 변수의 이름에 적용된 서식 문자열을 나타내는 문자열입니다. 기본값은 "{0}"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> 형식 문자열에서 식별 되는 것과 같은 기본 키에만 적용 됩니다는 `DataKeyNames` 삭제 또는 연결된 된 데이터 바인딩된 컨트롤의 속성 업데이트 시나리오 및 위치는 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 합니다 속성이<xref:System.Web.UI.ConflictOptions.CompareAllValues>값 및 집합이 `oldValues` 해당 데이터 메서드에 전달 됩니다. 형식 문자열의 각 매개 변수 이름에 적용 되는 경우에 `oldValues` 컬렉션입니다.  
  
 변경할 수 있는 두 가지 일반적인 시나리오는 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> 속성은 다음과 같습니다.  
  
-   업데이트의 이전 및 새 값을 구분 하 합니다. 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값, 매개 변수는 원래 및 새 값에 추가 됩니다는 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> 컬렉션. 서식 문자열을 사용 하지 않고 이름이 같은 두 개의 매개 변수는 각 데이터 필드에 대해 만들어집니다. 원래 값 매개 변수의 이름을 변경 하 여 충돌을 감지 하 고 키 값을 비교 하 여 원래 데이터 원본에 데이터를 비교할 수 있습니다.  
  
-   일부 비주얼 디자이너에는 원래 값 및 키에 대 한 특정 명명 체계를 구현 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="sqlDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Page.LoadComplete" /> 이벤트 처리기를 <see cref="T:System.Web.UI.Page" /> 컨트롤이 포함된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추가 되는 이벤트 처리기를 <xref:System.Web.UI.WebControls.SqlDataSource> 업데이트 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 값입니다. 값이 업데이트 되는 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트가 발생에 바인딩되는 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource> 바인딩할 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public virtual string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤이 내부 데이터 소스에 연결하기 위해 사용하는 .NET Framework 데이터 공급자의 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 사용하는 데이터 공급자의 이름을 반환하며 설정된 공급자가 없는 경우에는 Microsoft SQL Server용 ADO.NET 공급자를 반환합니다. 기본값은 Microsoft SQL Server용 ADO.NET 공급자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 데이터 공급자를 포함 하는.NET Framework:  
  
-   <xref:System.Data.SqlClient?displayProperty=nameWithType> 공급자는 기본.NET Framework Data Provider for SQL Server입니다.  
  
-   <xref:System.Data.OleDb?displayProperty=nameWithType> 공급자는.NET Framework Data Provider for OLE DB입니다.  
  
-   <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자는.NET Framework Data Provider for ODBC입니다.  
  
-   <xref:System.Data.OracleClient?displayProperty=nameWithType> 공급자는.NET Framework Data Provider for Oracle입니다.  
  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 되지 속성은 관리 되지 않는 ADO.NET 공급자의 이름으로 같은 `MSDAORA`합니다. 자세한 내용은 [SqlDataSource 컨트롤을 사용 하 여 선택 하면 데이터](https://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)입니다.  
  
 변경 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성을 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트가 발생에 바인딩되는 컨트롤을 <xref:System.Web.UI.WebControls.SqlDataSource> 바인딩할.  
  
 사용 가능한 공급자 목록이 지정 되어는 `DbProviderFactories` 하위 섹션은 `system.data` 합니다 Machine.config 파일의 섹션입니다.  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드에 대 한 SQL Server에 대 한.NET Framework Data Provider을 기본값을 사용 하 여 SQL Server 데이터베이스에 연결 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 <xref:System.Data.SqlClient?displayProperty=nameWithType>입니다. 두 번째 코드 예제는.NET Framework Data Provider for ODBC를 사용 하 여 ODBC 데이터베이스에 연결 하는 방법에 설명 합니다 <xref:System.Data.Odbc?displayProperty=nameWithType>합니다.  
  
 다음 코드 예제에 대 한 기본 데이터 공급자를 사용 하 여 SQL Server 데이터베이스에 연결 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 <xref:System.Data.SqlClient?displayProperty=nameWithType>입니다. 때마다는 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성이 명시적으로 설정 되지 않은, 기본 공급자가 사용 됩니다. <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성은 공급자별으로 다릅니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 다음 코드 예제는 기능적으로 앞의 코드 예제와 동일 합니다는.NET Framework Data Provider for ODBC를 사용 하 여 ODBC 데이터베이스에 연결 하는 방법에 설명 합니다 <xref:System.Data.Odbc?displayProperty=nameWithType>합니다. <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 는 ODBC 데이터 원본 이름 (DSN ODBC 데이터베이스 연결에 사용 되 는) 이름으로 설정 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/CS/odbc1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/VB/odbc1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="sqlDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤의 현재 뷰 상태를 저장합니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.SqlDataSource" />의 저장된 상태가 포함된 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSource.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">데이터에 대해 기본 데이터 검색 이상의 작업을 요청하는 데 사용되는 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 개체입니다.</param>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> SQL 문자열과 <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> 컬렉션에 있는 매개 변수를 사용하여 내부 데이터베이스에서 데이터를 검색합니다.</summary>
        <returns>데이터 행의 <see cref="T:System.Collections.IEnumerable" /> 목록입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 중 자동으로 호출 됩니다는 <xref:System.Web.UI.Control.PreRender> 페이지 수명 주기의 단계입니다. 에 연결 되는 데이터 바인딩된 컨트롤에 의해 호출 되는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어를 통해 해당 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 메서드가 반환 되는 <xref:System.Data.DataView> 경우 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> 값. <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 메서드가 반환 되는 <xref:System.Data.IDataReader> 경우 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 값. 닫기는 <xref:System.Data.IDataReader> 데이터 읽기를 마쳤으면 개체입니다.  
  
 전에 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 작업을 수행할를 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 이벤트. 매개 변수의 값을 확인 하 고 전에 처리를 수행 하려면이 이벤트를 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 작업 합니다.  
  
 후는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Selected> 이벤트. 모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.  
  
 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성이 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> 캐싱이 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSource> 개체에서 데이터를 검색 하는 동안 캐시에 데이터를 저장 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 작업 합니다. 캐시가 만들어지는, 삭제 또는 새로 고침의 조합에 의해 지정 된 캐싱 동작을 기반으로 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 고 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> 속성입니다.  
  
> [!IMPORTANT]
>  Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다. 다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다. 데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다. 데이터에 액세스 하는 둘 이상의 사용자를 예상 하 고 데이터베이스에 대 한 보안 구성으로 확인 하는 데이터의 각 검색 하는 경우 캐싱을 사용 하지 마십시오.  
  
 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> 속성이 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> 와 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 속성이 지정 된, 제공 된 필터 식이 계산 되 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 속성 및 결과 필터는 동안에 적용 된 데이터의 목록을 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>작업.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤. 데이터 검색 작업을 수행 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 빌드를 <xref:System.Data.Common.DbCommand> 사용 하 여 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 텍스트 및 연결 된 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 값 및 다음 실행는 <xref:System.Data.Common.DbCommand> 기본 데이터베이스에 대해 합니다.  
  
> [!IMPORTANT]
>  값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
   
  
## Examples  
 다음 예제에서는 프로그래밍 방식으로 호출 하는 방법을 보여는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드 쿼리 결과 기반으로 하는 값을 설정 합니다. 다음 예제에서는 웹 컨트롤에 대 한 선언적 코드를 보여줍니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx#1)]  
  
 다음 예제에서는 프로그래밍 방식으로 호출 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드. <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 정수를 반환 합니다. 정수 값의 텍스트를 설정 하는 <xref:System.Web.UI.WebControls.Label> 컨트롤 및 표시 여부를 결정 하는 <xref:System.Web.UI.WebControls.HyperLink> 컨트롤입니다.  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체를 내부 데이터 소스와 연결할 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤이 내부 데이터베이스에서 데이터를 검색하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 에서 데이터를 검색하는 데 사용되는 SQL 문자열이나 저장 프로시저 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성은 SQL 쿼리 또는 저장된 프로시저의 이름을 나타내며에서 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> SQL Server 데이터베이스에서 데이터를 검색 하는 방법입니다. Select 명령에 별표 (*)를 사용 하 여 모든 열을 선택 하 고 자동 코드 생성을 사용 하 여 작업을 삭제 또는 업데이트를 수행할 수 있는지 확인 하는 경우 열이 없는 경우 이름에 공백  
  
 데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성으로 식별 가능)에 따라 달라집니다. SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다. 예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인를 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`. 그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다. 매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지 원하는 경우.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
> [!IMPORTANT]
>  보안상의 이유로 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 저장 되지 않습니다 보기 상태입니다. 클라이언트에서 보기 상태의 내용이 디코딩할 수 이기 때문에 데이터베이스 구조에 대 한 중요 한 정보를 보기 저장 상태 발생할 수 정보 공개 취약성이 있습니다.  
  
> [!IMPORTANT]
>  값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 텍스트에 표시 하는 ODBC 호환 데이터베이스에서 데이터를 검색 하는 기본 SQL 쿼리를를 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 두 번째 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 저장된 프로시저의 이름으로 텍스트 및 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> 속성을를 <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> Microsoft SQL Server 데이터베이스에서 데이터를 검색에서 표시 하는 값을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤입니다.  
  
 두 예제에는 명시적으로 호출할 필요가 없습니다를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드를 통해 데이터 원본에 연결 된 데이터 바인딩된 컨트롤을 제어 하기 때문에 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 속성이 자동으로 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 합니다 중메서드<xref:System.Web.UI.Control.PreRender> 단계.  
  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 텍스트에 표시 하는 ODBC 호환 데이터베이스에서 데이터를 검색 하는 기본 SQL 쿼리를를 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/CS/odbc4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/VB/odbc4vb.aspx#1)]  
  
 다음 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 저장된 프로시저의 이름으로는 텍스트 및 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> 속성을는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> SQL Server 데이터베이스에서 데이터를 검색에서 표시 하는 값을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤입니다. <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 수 저장된 프로시저의 이름 또는 SQL 쿼리를 데이터 원본에서 저장된 프로시저를 지원 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295">SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> 속성의 텍스트가 SQL 쿼리인지 아니면 저장 프로시저의 이름인지 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
   
  
## Examples  
 다음 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 저장된 프로시저의 이름으로는 텍스트 및 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> 속성을는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> Microsoft SQL Server 데이터베이스에서 데이터를 검색 하 고 표시 하기 위해 값을 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 검색 작업이 완료되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리는 <xref:System.Web.UI.WebControls.SqlDataSource.Selected> 의 값을 검사 하는 이벤트 데이터 검색 작업이 완료 된 후 매개 변수를 출력 합니다. 출력 매개 변수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 검색 작업 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 애플리케이션에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 선택 작업을 수행 합니다. 선택 인수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs> 이벤트와 연결 된 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> 속성에서 사용하는 매개 변수가 들어 있는 매개 변수 컬렉션을 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤에 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 개체에서 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 매개 변수가 있는 SQL 쿼리를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 컬렉션에 포함 된 <xref:System.Web.UI.WebControls.Parameter> SQL 문자열에 매개 변수 자리 표시자에 해당 하는 개체입니다.  
  
 ADO.NET 공급자에서 매개 변수의 순서에 따라는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 컬렉션 중요할 수 있습니다. 합니다 <xref:System.Data.OleDb?displayProperty=nameWithType> 고 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자 매개 변수가 있는 SQL 쿼리가 매개 변수가 나타나는 순서에 따라 컬렉션의 매개 변수를 연결 합니다. <xref:System.Data.SqlClient?displayProperty=nameWithType> 은 기본 ADO.NET 공급자는 공급자에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하는 방법으로 컬렉션의 매개 변수를 연결 합니다. 매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
> [!IMPORTANT]
>  값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하 여 Microsoft SQL Server에서 Northwind 데이터베이스에서 데이터를 검색 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> SQL 쿼리에 속성입니다. SQL 쿼리가 매개 변수화 된 및의 자리 표시자를 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 속성 일치 하는 <xref:System.Web.UI.WebControls.ControlParameter> 에 추가 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 컬렉션입니다. <xref:System.Web.UI.WebControls.DropDownList> 는 제어를 <xref:System.Web.UI.WebControls.ControlParameter> 에 바인딩된에 대 한 필터에 표시 되는 역할을 <xref:System.Web.UI.WebControls.ListBox> 컨트롤입니다.  
  
 다른 유형의 매개 변수에 사용할 수에 대 한 내용은 참조는 <xref:System.Web.UI.WebControls.Parameter> 클래스 개요입니다.  
  
> [!NOTE]
>  매개 변수는 WHERE 절을 사용 하기 때문에 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 코드 예제의 속성은 기능적으로 사용 하는 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 속성입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>저장 프로시저를 사용하여 데이터 검색을 수행할 때 검색된 데이터를 정렬하는 데 사용하는 저장 프로시저 매개 변수의 이름을 가져오거나 설정합니다.</summary>
        <value>저장 프로시저를 사용하여 데이터 검색을 수행할 때 검색된 데이터를 정렬하는 데 사용하는 저장 프로시저 매개 변수의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> 속성이 확인에 포함 된 경우 SQL 명령 즉만 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 속성은 저장된 프로시저의 이름입니다. 이 경우 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A> 속성을 설정 하면 저장된 프로시저의 결과 정렬 하는 데 사용 되는 매개 변수의 이름을 포함 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> 속성을 설정 하면 앞에 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Microsoft SQL Server 캐시 종속성에 사용할 데이터베이스와 테이블을 지정하는 세미콜론으로 구분된 문자열을 가져오거나 설정합니다.</summary>
        <value>SQL Server 캐시 종속성에 사용할 데이터베이스와 테이블을 지정하는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에 따라 선택적 만료 정책을 지원 합니다 <xref:System.Web.Caching.SqlCacheDependency> (데이터베이스 서버에 대 한 서비스를 구성 해야 합니다) 데이터 캐시에 대 한 개체입니다.  
  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> 데이터베이스 및 테이블에서 사용 되는 동일한 형식에 따라 식별 하는 문자열을 `@ Page` 뒤에 콜론 구분 기호를 문자열의 첫 번째 파트 인 Microsoft SQL Server 데이터베이스에 연결 문자열을 지시문 및 마지막으로 데이터베이스 테이블의 이름 (예를 들어 `"connectionstring1:table1"`). 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> 둘 이상의 테이블에 종속 속성, 연결 문자열 및 테이블 이름 쌍은 세미콜론으로 구분 됩니다 (예를 들어 `"connectionstring1:table1";connectionstring2:table2"`).  
  
> [!IMPORTANT]
>  Microsoft Windows 인증에서 클라이언트 가장을 사용 하는 첫 번째 사용자 데이터에 액세스 하는 경우 데이터 캐시 됩니다. 다른 사용자가 동일한 데이터를 요청 하는 경우 데이터 캐시에서 검색 됩니다. 데이터를 호출 하 여 다른 데이터베이스로 데이터에 대 한 사용자의 액세스를 확인 하려면 검색 되지 않습니다. 데이터에 액세스 하는 둘 이상의 사용자를 예상 하는 경우 각 검색 데이터를 데이터베이스에 대 한 보안 구성으로 확인에 캐싱을 사용 하지 마십시오.  
  
   
  
## Examples  
 다음 코드 예제에는 SQL Server 캐시 종속성을 만들고 설정 하는 방법을 보여 줍니다. 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다. 이 예제에서는 데이터베이스 120 초 마다 폴링됩니다. Northwind Traders 직원의 데이터를 변경 하는 동안 시간 테이블에서 캐시 된 데이터를 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 하 고 표시 하 여는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에서 새로 고쳐질는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 다음에 데이터베이스를 사용 하는 간격으로 폴링됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/CS/sql23cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/VB/sql23vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="sqlDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤의 뷰 상태 변경 내용을 컨트롤의 <see cref="T:System.Web.UI.StateBag" /> 개체에 저장할 수 있도록 추적합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A> 컨트롤에 대 한 뷰 상태의 일부로 컨트롤의 변경 내용을 추적 하 고 저장을 시작 하려면 시작 지점을 표시 하기 위해 메서드를 재정의 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="sqlDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> SQL 문자열과 <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" /> 컬렉션의 매개 변수를 사용하여 업데이트 작업을 수행합니다.</summary>
        <returns>내부 데이터베이스에서 업데이트되는 행 수를 나타내는 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드를 자동으로 호출 합니다 <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.FormView> 데이터가 변경 된 경우 다시 게시 하는 동안 제어 합니다. 다른 컨트롤에서 변경 된 데이터에 대 한 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 포스트백 중에 메서드를 명시적으로 호출할 수는 <xref:System.Windows.Forms.Form.Load> 이벤트입니다.  
  
 전에 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 작업을 수행할를 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Updating> 이벤트. 매개 변수의 값을 확인 하 고 전에 전처리 하는 데이 이벤트를 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 작업 합니다.  
  
 후는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 작업이 완료 되 면 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> 메서드를 호출 발생 하는 <xref:System.Web.UI.WebControls.SqlDataSource.Updated> 이벤트. 모든 반환 값 및 오류 코드를 검사 하 고 사후 처리를 수행 하려면이 이벤트를 처리할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> 메서드를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤. 업데이트 작업을 수행 하는 <xref:System.Web.UI.WebControls.SqlDataSourceView> 빌드를 <xref:System.Data.Common.DbCommand> 를 사용 하 여 개체를 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 텍스트 및 연결 된 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 속성을 다음 실행는 <xref:System.Data.Common.DbCommand> 기본 데이터베이스에 대 한 개체입니다.  
  
> [!IMPORTANT]
>  값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Updating> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에 사용 하는 방법을 보여 줍니다.를 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 표시 하려면 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 제어 및 업데이트 데이터 때를 **제출** 단추를 클릭 합니다. 두 번째 코드 예제에는 Microsoft SQL Server 데이터베이스에서 검색 되는 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 하 고 사용 하 여 레코드 업데이트는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다.  
  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.를 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 표시 하려면 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 제어 및 업데이트 데이터 때를 **제출** 단추를 클릭 합니다. 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 매개 변수가 있는 SQL 문 및 두 개의 속성은 <xref:System.Web.UI.WebControls.ControlParameter> 매개 변수가 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션입니다. 경우는 **제출** 단추를 클릭 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 호출 하려는 이벤트가 처리 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드 명시적으로.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 다음 코드 예제에는 SQL Server 데이터베이스에서 검색 되는 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 하 고 사용 하 여 레코드 업데이트는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다. 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Data.Common.DbTransaction> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 업데이트 하도록 컨트롤을 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" />가 내부 데이터 소스와 연결될 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 내부 데이터베이스의 데이터를 업데이트하는 데 사용하는 SQL 문자열을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSource" />에서 데이터를 업데이트하는 데 사용하는 SQL 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> SQL 쿼리 또는 저장된 프로시저의 이름을 나타내며에서 사용 되는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드.  
  
 데이터베이스 제품마다 다양한 SQL을 사용하기 때문에 SQL 문자열의 구문은 현재 사용 중인 ADO.NET 공급자(<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 속성으로 식별 가능)에 따라 달라집니다. SQL 문자열이 매개 변수가 있는 쿼리나 명령인 경우 매개 변수의 자리 표시자도 사용 중인 ADO.NET 공급자에 따라 달라집니다. 예를 들어 공급자가 합니다 <xref:System.Data.SqlClient?displayProperty=nameWithType>에 대 한 기본 공급자 인를 <xref:System.Web.UI.WebControls.SqlDataSource> 클래스는 매개 변수의 자리 표시자는 `'@parameterName'`. 그러나 공급자로 설정 된 경우는 <xref:System.Data.Odbc?displayProperty=nameWithType> 또는 <xref:System.Data.OleDb?displayProperty=nameWithType>, 매개 변수의 자리 표시자는 `'?'`합니다. 매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성 수는 SQL 문자열이 나 저장된 프로시저의 이름을 데이터 원본에서 저장된 프로시저를 지 원하는 경우.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
> [!IMPORTANT]
>  보안상의 이유로 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성 저장 되지 않습니다 보기 상태입니다. 클라이언트에서 보기 상태의 내용이 디코딩할 수 이기 때문에 데이터베이스 구조에 대 한 중요 한 정보를 보기 저장 상태 발생할 수 정보 공개 취약성이 있습니다.  
  
> [!IMPORTANT]
>  값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 사용 하 여 Microsoft SQL Server 데이터베이스에서 데이터를 제어 및 업데이트는 <xref:System.Web.UI.WebControls.GridView> 컨트롤. 두 번째 코드 예제에서는 사용 하 여 ODBC 데이터베이스의 데이터를 업데이트 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 다음 코드 예제에는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 사용 하 여 SQL Server 데이터베이스에서 데이터를 제어 및 업데이트를 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다. <xref:System.Web.UI.WebControls.GridView> 자동으로 채웁니다를 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션, 매개 변수를 유추 합니다 <xref:System.Web.UI.WebControls.BoundField> 개체 및 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드 때를 **업데이트** 링크를 편집할 수 있는 <xref:System.Web.UI.WebControls.GridView>을 선택 합니다. 이 예제에서는 일부 사후 처리에도 포함 되어 있습니다: 레코드 업데이트 되 면 알림 전자 메일 메시지를 전송 됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 앞의 코드 예제와 기능적으로 동일 인 다음 코드 예제를 사용 하 여 ODBC 데이터베이스의 데이터를 업데이트 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> ODBC 용 ADO.NET 공급자를로 <xref:System.Data.Odbc?displayProperty=nameWithType>, 및 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 속성은 ODBC 데이터 원본 이름 (DSN)의 이름으로 설정 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> 속성의 텍스트가 SQL 문과 저장 프로시저의 이름 중 어느 것인지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A> 에 위임 하는 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceView> 개체와 연결 된는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트 작업이 완료되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리는 <xref:System.Web.UI.WebControls.SqlDataSource.Updated> 업데이트 작업이 완료 된 후의 값을 확인 하려면 출력 매개 변수입니다. 출력 매개 변수에서 사용할 수는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 이벤트와 연결 된 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 표시의 ODBC 데이터베이스에서 검색 되는 데이터를 업데이트 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다. 레코드를 성공적으로 업데이트 후의 <xref:System.Web.UI.WebControls.SqlDataSource.Updated> 전자 메일 알림이 전송 되는 후 처리 단계를 수행 하는 이벤트 처리기 이벤트를 처리 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> 속성에서 사용하는 매개 변수가 들어 있는 매개 변수 컬렉션을 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 컨트롤에 연결된 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 속성에서 사용하는 매개 변수가 포함된 <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 속성 매개 변수가 있는 SQL 쿼리를 포함 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션에 포함 된 <xref:System.Web.UI.WebControls.Parameter> SQL 문자열에 매개 변수 자리 표시자에 해당 하는 개체입니다.  
  
 매개 변수 이름은 영향을 받을 수는 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> 속성 이름을 사용 하 여 지정 된 키와 같은 기본 키를 식별 하는 경우에 특히 합니다 `DataKeyNames` 삭제 또는 데이터 바인딩된 컨트롤의 속성 업데이트 시나리오 및 위치를 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 속성을 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 값 및 집합이 `oldValues` 해당 데이터 메서드에 전달 됩니다. 형식 문자열의 각 매개 변수 이름에 적용 되는 경우에 `oldValues` 컬렉션입니다.  
  
 매개 변수 순서는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션 ADO.NET 공급자에 따라 중요할 수 있습니다. 합니다 <xref:System.Data.OleDb?displayProperty=nameWithType> 고 <xref:System.Data.Odbc?displayProperty=nameWithType> 공급자 매개 변수가 있는 SQL 쿼리가 매개 변수가 나타나는 순서에 따라 컬렉션의 매개 변수를 연결 합니다. <xref:System.Data.SqlClient?displayProperty=nameWithType> 은 기본 ADO.NET 공급자는 공급자에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어, SQL 쿼리의 자리 표시자 별칭을 가진 매개 변수의 이름과 일치 하는 방법으로 컬렉션의 매개 변수를 연결 합니다. 매개 변수가 있는 SQL 쿼리 및 명령에 대 한 자세한 내용은 참조 하세요. [SqlDataSource 컨트롤을 사용 하 여 매개 변수를 사용 하 여](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 속성 검색을 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> 속성에 포함 된를 <xref:System.Web.UI.WebControls.SqlDataSourceView> 연관 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤.  
  
> [!IMPORTANT]
>  값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.를 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 표시 하려면 컨트롤을 <xref:System.Web.UI.WebControls.DropDownList> 제어 및 업데이트 데이터 때를 **제출** 단추를 클릭 합니다. 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 매개 변수가 있는 SQL 문 및 2를 사용 하 여 설정 됩니다 <xref:System.Web.UI.WebControls.ControlParameter> 매개 변수가 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 컬렉션입니다. 경우는 **제출** 단추를 클릭 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 호출 하려는 이벤트가 처리 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 메서드 명시적으로.  
  
> [!IMPORTANT]
>  잠재적인 보안 위협을 이기도 유효성 검사 없이 매개 변수 값을 삽입할 및이 예제에는 잠재적인 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트 작업 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리를 <xref:System.Web.UI.WebControls.SqlDataSource.Updating> 매개 변수의 값을 확인 하거나 전에 매개 변수 값을 변경 하려면 애플리케이션에 관련 된 추가 초기화 작업을 수행 하는 이벤트를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤이 업데이트 작업을 수행 합니다. 데이터 원본에 대 한 연결 아직 열려 있지 이벤트 처리기 대리자를 호출 합니다. 따라서 직접을 취소할 수 없습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 작업을 호출 하 여 데이터베이스를 <xref:System.Data.Common.DbCommand.Cancel%2A> 메서드를를 <xref:System.Data.Common.DbCommand> 에서 노출 되는 개체는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 개체. 설정 하 여 단, 데이터베이스 작업을 취소할 수 있습니다는 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 에 `true`입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
> [!IMPORTANT]
>  값 매개 변수 유효성 검사는 잠재적인 보안 위협을 없이 삽입 됩니다. 사용 된 <xref:System.Web.UI.WebControls.SqlDataSource.Updating> 이벤트 쿼리를 실행 하기 전에 매개 변수 값의 유효성 검사를 합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에는 Microsoft SQL Server 데이터베이스에서 검색 되는 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 제어 하 고 사용 하 여 레코드 업데이트는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다. 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Data.Common.DbTransaction> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 업데이트 하도록 컨트롤을 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">데이터 소스 웹 서버 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource 웹 서버 컨트롤 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 페이지 수명 주기 개요</related>
      </Docs>
    </Member>
  </Members>
</Type>