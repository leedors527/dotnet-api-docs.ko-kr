<Type Name="SqlDataSourceCommandEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a93f1ccd154b2ab09e32ab504c6a50b023f087df" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39743066" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceCommandEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceCommandEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceCommandEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceCommandEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceCommandEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" /> 컨트롤의 <see cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />, <see cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" /> 및 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리 하는 이벤트 처리기 대리자를 추가 하 여는 <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, 또는 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 이벤트에 필요한 추가 전처리 수행 하거나 완전히 데이터베이스 명령을 취소할 수 있습니다.  
  
 때문에 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 에서 파생 된 클래스를 <xref:System.ComponentModel.CancelEventArgs> 클래스를 취소할 수 있습니다는 보류 중인 <xref:System.Web.UI.WebControls.SqlDataSource> 명령을 설정 하 여 데이터베이스를 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 속성을 `true`. 검토 하 고 조작할 수는 <xref:System.Data.Common.DbCommand.CommandText%2A>, <xref:System.Data.Common.DbCommand.Parameters%2A> 컬렉션과 다른 명령 속성에 액세스 하 여 명령을 실행 하기 전에 <xref:System.Data.Common.DbCommand> 에서 노출 된 개체는 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 클래스는를 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>, 및 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> 에 대 한 액세스를 제공 하는 메서드를 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터베이스 명령을 실행 하기 전에 합니다. <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 데이터 작업을 사용 하는 동안 기본 데이터 개체를 사용 하 여 작업을 처리할 수 있는 많은 이벤트를 노출 합니다. 다음 표에서 이벤트를 나열 하 고 연결 된 <xref:System.EventArgs> 및 이벤트 처리기 클래스를 사용 하 여 데이터 작업의 수명 주기에 해당 하는 다양 한 이벤트를 소개 하기 위해는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.  
  
|이벤트|EventArgs|이벤트 처리기|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 데이터를 검색 하기 전에 발생 합니다.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>하십시오 <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 업데이트 또는 삭제 작업이 수행 되는 삽입 하기 전에 발생 합니다.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 데이터 검색, 삽입, 업데이트 후에 발생 또는 삭제 작업을 완료 합니다.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 다음 코드 예제에는 Microsoft SQL Server 데이터베이스에서 검색 된 데이터를 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤을 사용 하 여 레코드 업데이트는 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다. 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Data.Common.DbTransaction> 사용 하는 경우 트랜잭션 컨텍스트를 추가 하는 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 업데이트 하도록 컨트롤을 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceCommandEventArgs (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As DbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceCommandEventArgs(System::Data::Common::DbCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceCommandEventArgs : System.Data.Common.DbCommand -&gt; System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceCommandEventArgs command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">취소할 수 있는 <see cref="T:System.Data.Common.DbCommand" />, <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> 또는 <see cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" /> 명령을 나타내는 <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> 개체입니다.</param>
        <summary>지정된 데이터베이스 명령 개체를 사용하여 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>보류 중인 데이터베이스 명령을 가져옵니다.</summary>
        <value>보류 중인 데이터베이스 명령을 나타내는 <see cref="T:System.Data.Common.DbCommand" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, 또는 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 검사 하 고 속성을 조작 하는 이벤트를 <xref:System.Data.Common.DbCommand> 에서 실행 되기 전에 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤입니다. 데이터 원본에 대 한 연결 아직 열려 있지 이벤트 처리기 대리자를 호출 합니다. 호출 하 여 데이터베이스 작업을 취소할 수 없습니다. 따라서 합니다 <xref:System.Data.Common.DbCommand.Cancel%2A> 메서드는 <xref:System.Data.Common.DbCommand> 직접 개체. 설정 하 여 데이터베이스 작업을 취소할 수는 있지만 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> 를 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 Microsoft SQL Server에서 데이터를 검색에서 표시 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView> 제어 및 사용 방법을 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤에서 선택한 행의 세부 정보를 보려면를 <xref:System.Web.UI.WebControls.GridView> 형태로 새 레코드를 삽입 하 고 합니다.  
  
 데이터에 처음 표시 되는 <xref:System.Web.UI.WebControls.GridView> 컨트롤과의 선택된 된 행의 <xref:System.Web.UI.WebControls.GridView> 에 표시 됩니다는 <xref:System.Web.UI.WebControls.DetailsView>합니다. <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 다양 한 데이터를 사용 하 여 컨트롤 소스 컨트롤; 연결 된 것을 <xref:System.Web.UI.WebControls.DetailsView> 에 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 및 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> 선택된 된 행을 확인 하는 <xref:System.Web.UI.WebControls.GridView> 표시 됩니다.  
  
 자동으로 생성 된 삽입 단추를 클릭 하면 합니다 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤을 <xref:System.Web.UI.WebControls.DetailsView> 새 레코드를 삽입 하는 데 사용 되는 다른 사용자 인터페이스를 보여 줍니다. 이 예제에서는 저장된 프로시저를 사용 하 여 레코드를 삽입 하 고 삽입 된 행의 기본 키를 반환 합니다. 레코드를 삽입 하는 경우는 <xref:System.Web.UI.WebControls.DetailsView> 자동으로 채웁니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> 호출 고 바인딩된 열에서 값을 사용 하 여 컬렉션을 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> 메서드. 합니다 <xref:System.Web.UI.WebControls.DetailsView> 에서 올바른 매개 변수를 유추할 수 있습니다 <xref:System.Web.UI.WebControls.BoundField>, 및에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.TemplateField> 양방향 ASP.NET 데이터 바인딩 구문을 사용 되는 경우. 이 예제에서는 추가 매개 변수에서 추가 됩니다는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> 저장된 프로시저에서 반환 하는 기본 키를 처리할 이벤트 처리기입니다.  
  
 마지막으로 하 여 데이터를 삽입 한 후는 <xref:System.Web.UI.WebControls.DetailsView> 데이터베이스에는 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> 처리할 이벤트 처리기가 호출를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 이벤트에 삽입 된 행의 기본 키의 값이 표시 되 면 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드의 합니다 <xref:System.Web.UI.WebControls.GridView>컨트롤 데이터를 새로 고치려면 명시적으로 호출 됩니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
  </Members>
</Type>