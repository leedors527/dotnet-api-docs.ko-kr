<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf662220fa381ff1888a96cd50bfa39d132a8c80" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39938465" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>데이터 작업이 완료된 후 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 발생시키는 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 클래스에서 사용 됩니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, 및 <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 데이터에서 수행 된 후 데이터베이스 작업에 대 한 정보를 전달 하는 이벤트 소스 제어 합니다. 작업에 의해 영향을 받는 행 수를 포함 하는이 정보는 <xref:System.Data.Common.DbCommand> 발생 하는 모든 예외 정보와 작업을 수행 하는 데이터 원본 개체입니다. 처리 하는 이벤트 처리기 대리자를 추가 하 여 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 또는 <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 이벤트를이 데이터를 검사 하 고 필요한 모든 추가 사후 처리를 수행할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤 데이터 작업을 사용 하는 동안 기본 데이터 개체를 사용 하 여 작업을 처리할 수 있는 많은 이벤트를 노출 합니다. 다음 표에서 이벤트를 나열 하 고 연결 된 <xref:System.EventArgs> 및 수명 주기를 사용 하 여 데이터 작업에 해당 하는 다양 한 이벤트를 소개 하기 위해 이벤트 처리기 클래스는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 합니다.  
  
|이벤트|EventArgs|이벤트 처리기|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 데이터를 검색 하기 전에 발생 합니다.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>하십시오 <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 업데이트 또는 삭제 작업이 수행 되는 삽입 하기 전에 발생 합니다.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>를 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 데이터 검색, 삽입, 업데이트 후에 발생 또는 삭제 작업을 완료 합니다.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 반환 값의 및 값을 사용 하는 경우 반환 되는 출력 매개 변수를 검사 하는 클래스를 <xref:System.Web.UI.WebControls.SqlDataSource> 채우는 저장된 프로시저를 사용 하 여 컨트롤을 <xref:System.Web.UI.WebControls.GridView> 컨트롤. 에 표시 되는 데이터를 선택 하는 저장된 프로시저는 <xref:System.Web.UI.WebControls.GridView>, 또한 정수 출력 매개 변수 및 반환 값 등 호출자에 게 다시 기타 정보를 전달 합니다. 매개 변수는 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 저장된 프로시저를 사용 하 여 포함 된를 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 컬렉션 웹 폼에서 정보를 저장된 프로시저에 전달 하는 매개 변수 구성 뿐만 아니라 정보를 전달 하는 매개 변수를는 폼입니다. 합니다 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 이러한 매개 변수 속성 <xref:System.Data.ParameterDirection.Output> 및 <xref:System.Data.ParameterDirection.ReturnValue>합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceStatusEventArgs(System::Data::Common::DbCommand ^ command, int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs : System.Data.Common.DbCommand * int * Exception -&gt; System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs (command, affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command"><see cref="T:System.Data.Common.DbCommand" /> 컨트롤에서 데이터베이스에 전송한 데이터베이스 쿼리, 명령 또는 저장 프로시저를 나타내는 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />입니다.</param>
        <param name="affectedRows">데이터베이스 작업의 영향을 받은 행 수입니다(해당 사항이 있는 경우).</param>
        <param name="exception">데이터베이스 작업에서 throw한 <see cref="T:System.Exception" />입니다(해당 사항이 있는 경우).</param>
        <summary>지정된 출력 매개 변수, 반환 값 및 데이터베이스 작업의 영향을 받은 행 수를 사용하여 <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터베이스 작업의 영향을 받은 행 수를 가져옵니다.</summary>
        <value>데이터베이스 작업의 영향을 받은 행 수입니다. 기본값은 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 작업 작업에 의해 영향을 받는 행 수를 반환 합니다. <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A> 속성이 반환 값으로 동일한 값을 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>, 및 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 메서드.  
  
 경우는 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 메서드가 호출 되 고 데이터 원본이 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 모드, 반환 값은 항상에서 0입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터베이스에 전송된 데이터베이스 명령을 가져옵니다.</summary>
        <value>데이터베이스에 전송된 데이터베이스 명령을 나타내는 <see cref="T:System.Data.Common.DbCommand" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리할 수 있습니다는 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, 또는 <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 점검의 속성을 조작 하는 이벤트를 <xref:System.Data.Common.DbCommand> 에서 제출 된 후를 <xref:System.Web.UI.WebControls.SqlDataSource> 을 데이터베이스. 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A> 속성을 사용 하면 데이터베이스 작업을 통해 수행 된 후 출력 매개 변수에서 값과 반환 값에 액세스할 수 있습니다 해당 <xref:System.Data.Common.DbCommand.Parameters%2A> 속성인 뿐만 <xref:System.Data.Common.DbCommand.CommandText%2A> SQL 쿼리를 나타내는 속성 명령 또는 데이터베이스에 전송 된 저장된 프로시저 이름입니다.  
  
 모든 출력 매개 변수가 있는 매개 변수에서 제공 되는 <xref:System.Data.ParameterDirection.InputOutput> 또는 <xref:System.Data.ParameterDirection.Output> 에 대 한 값을 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 의 속성은 <xref:System.Web.UI.WebControls.Parameter> 개체. 값이 있는 매개 변수에서 반환 된 <xref:System.Data.ParameterDirection.ReturnValue> 값입니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 경우 출력 매개 변수 값을 검사 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.SqlDataSource> 저장된 프로시저를 사용 하 여 제어 합니다. 합니다 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 컬렉션 매개 변수를 포함 하는 <xref:System.Web.UI.WebControls.SqlDataSource> 저장된 프로시저를 사용 하 고 저장된 프로시저에 웹 폼에서 정보를 전달 하는 매개 변수 뿐만 아니라 폼에 다시 정보를 전달 하는 매개 변수 구성 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 작업 중 데이터베이스에서 throw하는 예외에 대한 래퍼를 가져옵니다.</summary>
        <value>데이터베이스에서 throw하는 예외를 <see cref="T:System.Exception" /> 속성으로 래핑하는 <see cref="P:System.Exception.InnerException" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Exception> 속성 실제 데이터베이스 작업에서 throw 한 예외를 나타내지 않습니다. Throw 된 예외를 통해 액세스할 수는 <xref:System.Exception.InnerException%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터베이스에서 throw한 예외가 처리되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>데이터베이스에서 throw한 예외가 처리되었으므로 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 컨트롤에서 해당 예외를 throw하지 않아야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터베이스 예외를 throw 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> 속성이 `false` 예외 래핑되는 및를 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A> 속성입니다. 사용 하는 경우는 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>를 확인할 수 있습니다는 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> 속성 및 예외 처리 합니다. 예외를 처리 하는 경우 설정 합니다 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> 속성을 `true` 또는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤에는 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>