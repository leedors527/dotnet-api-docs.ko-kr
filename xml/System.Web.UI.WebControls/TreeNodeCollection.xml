<Type Name="TreeNodeCollection" FullName="System.Web.UI.WebControls.TreeNodeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5cce4966301477a078a6b2fa8a110793caadbfd5" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51303854" /></Metadata><TypeSignature Language="C#" Value="public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeNodeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNodeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeNodeCollection&#xA;Implements ICollection, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeCollection sealed : System::Collections::ICollection, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNodeCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> 컨트롤에 있는 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체의 컬렉션을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection> 클래스 저장 하 고 컬렉션을 관리 하는 데 사용 됩니다 <xref:System.Web.UI.WebControls.TreeNode> 개체는 <xref:System.Web.UI.WebControls.TreeView> 제어 합니다. <xref:System.Web.UI.WebControls.TreeView> 컨트롤이 사용 하는 <xref:System.Web.UI.WebControls.TreeNodeCollection> 두 가지 속성에는 클래스입니다. 해당 루트 노드를 저장 합니다 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 속성과에서 선택 된 노드는 <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> 속성입니다. 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection> 컬렉션에도 사용 됩니다는 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> (있는 경우)에 자식 노드를 저장 하는 속성입니다.  
  
 <xref:System.Web.UI.WebControls.TreeNodeCollection> 클래스는 컬렉션의 항목에 액세스 하는 여러 방법을 지원 합니다.  
  
-   사용 된 <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A> 검색할 인덱서의 <xref:System.Web.UI.WebControls.TreeNode> 특정 인덱스에서 직접 개체입니다.  
  
-   사용 된 <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> 컬렉션을 반복 하는 데 사용할 수 있는 열거자를 만드는 방법.  
  
-   사용 하 여 `foreach` (C#) 또는 `For Each` (Visual Basic)의 컬렉션을 반복 합니다.  
  
-   사용 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> 컬렉션의 내용을 복사 하는 메서드는 <xref:System.Array> 개체입니다.  
  
 프로그래밍 방식으로 관리할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection> 추가 및 제거 하 여 <xref:System.Web.UI.WebControls.TreeNode> 개체입니다. 컬렉션에 노드를 추가 하려면 사용 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> 또는 <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> 메서드. 컬렉션에서 노드를 제거 하려면 사용 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>, 또는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> 메서드.  
  
> [!NOTE]
>  경우는 <xref:System.Web.UI.WebControls.TreeView> 컨트롤이 데이터 소스에 바인딩되는 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 및 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 컬렉션은 바인딩이 발생할 때마다 자동으로 채워집니다. 바인딩 간의 컬렉션에 모든 변경 내용이 손실 됩니다. 이러한 변경 내용을 유지 하려면 데이터 원본을 업데이트 하거나 수동으로 바인딩할 때마다 컬렉션을 다시 합니다.  
  
 <xref:System.Web.UI.WebControls.TreeNodeCollection> 컬렉션 자체에 대 한 정보를 검색할 수 있는 메서드와 속성을 포함 합니다. 컬렉션에 있는 항목 수를 확인 하려면 사용 된 <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> 속성입니다. 특정 컬렉션에 있는지 여부를 확인 하려는 경우 <xref:System.Web.UI.WebControls.TreeNode> 개체는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> 메서드. 인덱스를 가져올는 <xref:System.Web.UI.WebControls.TreeNode> 사용 하 여 컬렉션에서 개체를 <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 프로그래밍 방식으로 노드를 추가 하 고 제거 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection>합니다. 다음에 유의 합니다 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 및 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 속성 반환을 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>기본값을 사용하여 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection> 클래스 기본값을 사용 합니다. 이 생성자는 일반적으로 부모 노드 (또는 소유자)가 필요 하지 루트 노드의 컬렉션을 만들 때 사용 됩니다.  
  
> [!NOTE]
>  루트가 아닌 노드 컬렉션을 만들면, 오버 로드 된 생성자를 사용 해야는 `owner` 부모 노드를 지정 하려면이 생성자 대신 매개 변수입니다.  
  
 이 생성자는 주로 컨트롤 개발자가 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeNode owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNodeCollection(System::Web::UI::WebControls::TreeNode ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNodeCollection : System.Web.UI.WebControls.TreeNode -&gt; System.Web.UI.WebControls.TreeNodeCollection" Usage="new System.Web.UI.WebControls.TreeNodeCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="owner">컬렉션의 부모 노드를 나타내는 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체입니다.</param>
        <summary>지정된 부모 노드(또는 소유자)를 사용하여 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스를 초기화 하려면이 생성자를 사용 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection> 클래스는 지정 된 부모 노드 (또는 소유자)를 사용 합니다. 이 생성자는 일반적으로 부모 노드를 지정 해야 하는 비 루트 노드의 컬렉션을 만들 때 사용 됩니다.  
  
> [!NOTE]
>  루트 노드의 컬렉션을 만들 때 루트 노드가 부모 노드와 없기 때문에 기본 생성자를 사용 하는 것이 좋습니다.  
  
 이 생성자는 주로 컨트롤 개발자가 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="child">추가할 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체를 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체의 끝에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> 지정 된 추가 하는 방법 <xref:System.Web.UI.WebControls.TreeNode> 개체의 끝에는 <xref:System.Web.UI.WebControls.TreeNodeCollection>합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection> 추가할 수 null 참조 (Visual Basic)에서는 Nothing 중복 뿐만 아니라 <xref:System.Web.UI.WebControls.TreeNode> 개체입니다.  
  
 삽입할 수 있습니다는 <xref:System.Web.UI.WebControls.TreeNode> 개체를 <xref:System.Web.UI.WebControls.TreeNodeCollection> 사용 하 여 특정 인덱스에는 <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> 프로그래밍 방식으로 노드를 추가 하는 방법의 <xref:System.Web.UI.WebControls.TreeNodeCollection>합니다. 있음을 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 하 고 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 속성에는 각각 반환을 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체입니다.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.TreeNode child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, child As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::TreeNode ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="index"><see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체를 삽입할 인덱스 위치(0부터 시작)입니다.</param>
        <param name="child">추가할 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체를 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체의 지정된 인덱스 위치에 삽입합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> 지정 된 삽입 하는 방법 <xref:System.Web.UI.WebControls.TreeNode> 개체를 <xref:System.Web.UI.WebControls.TreeNodeCollection> 의 지정 된 인덱스입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection> 삽입할 수 있도록 null 참조 (Visual Basic)에서는 Nothing 중복 뿐만 아니라 <xref:System.Web.UI.WebControls.TreeNode> 개체입니다.  
  
 추가할 수 있습니다는 <xref:System.Web.UI.WebControls.TreeNode> 의 끝에 개체를 <xref:System.Web.UI.WebControls.TreeNodeCollection> 사용 하 여를 <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> 프로그래밍 방식으로 노드를 추가 하는 방법의 <xref:System.Web.UI.WebControls.TreeNodeCollection>합니다. 있음을 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 하 고 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 속성에는 각각 반환을 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체입니다.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="child" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="treeNodeCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체를 비웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> 제거 하는 방법 마다 <xref:System.Web.UI.WebControls.TreeNode> 에서 개체를 <xref:System.Web.UI.WebControls.TreeNodeCollection>입니다.  
  
> [!NOTE]
>  컬렉션에서 개별 노드를 제거 하려면 사용 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> 또는 <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> 메서드를 프로그래밍 방식으로 빈는 <xref:System.Web.UI.WebControls.TreeNodeCollection>합니다. 다음에 유의 합니다 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 및 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 속성 반환을 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.TreeNode c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.TreeNode c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (c As TreeNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::TreeNode ^ c);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.TreeNode -&gt; bool" Usage="treeNodeCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="c">찾을 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체가 컬렉션에 있는지 여부를 확인합니다.</summary>
        <returns>지정한 <see cref="T:System.Web.UI.WebControls.TreeNode" />이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> 결정 하는 방법 여부를 <xref:System.Web.UI.WebControls.TreeNode> 개체가 포함 된를 <xref:System.Web.UI.WebControls.TreeNodeCollection>입니다. 이 메서드는 일반적으로의 존재 여부를 테스트 하는 데 사용 됩니다는 <xref:System.Web.UI.WebControls.TreeNode> 추가 하거나 컬렉션에서 노드를 제거 하는 등의 작업을 수행 하기 전에 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> 선택한 노드 인지 여부를 결정 하는 방법은 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 컬렉션입니다. 있음을 합니다 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 속성이 반환을 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체입니다.  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.TreeNode[] nodeArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (nodeArray As TreeNode(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::TreeNode ^&gt; ^ nodeArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.TreeNode[] * int -&gt; unit" Usage="treeNodeCollection.CopyTo (nodeArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeArray" Type="System.Web.UI.WebControls.TreeNode[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="nodeArray"><see cref="T:System.Web.UI.WebControls.TreeNode" />에서 복사한 항목을 받는 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체의 배열(0부터 시작)입니다.</param>
        <param name="index">복사된 내용을 받기 시작할 대상 배열 내의 위치입니다.</param>
        <summary>대상 배열의 지정한 인덱스부터 시작하여 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체의 모든 항목을 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체의 호환되는 1차원 배열에 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> 의 내용을 복사 하는 메서드를 <xref:System.Web.UI.WebControls.TreeNodeCollection> 를 지정 된 0부터 시작 <xref:System.Array?displayProperty=nameWithType> 개체입니다. 항목이 대상 배열의 지정한 인덱스부터 복사 됩니다. 사용 하 여 합니다 <xref:System.Array?displayProperty=nameWithType> 개체의 항목에 액세스 하려면 배열 구문을 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection>합니다.  
  
 대신 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> 컬렉션의 항목에 액세스할 수 있는 열거자를 만드는 방법.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> 의 값을 복사 하는 메서드를 <xref:System.Web.UI.WebControls.TreeNodeCollection> 배열로 합니다. 있음을 합니다 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 속성이 반환을 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체입니다.  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.TreeNodeCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체의 항목 수를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />의 항목 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> 속성에 있는 항목의 수를 확인 하는 <xref:System.Web.UI.WebControls.TreeNodeCollection>합니다. 이 속성 컬렉션을 반복할 때 컬렉션의 상한을 결정을 일반적으로 사용 됩니다. <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> 속성은 일반적으로 컬렉션 비어 있는지 여부를 결정 하는 데 사용 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> 속성에 있는 항목의 수를 확인 하는 <xref:System.Web.UI.WebControls.TreeNodeCollection>. 그런 다음 한 전위를 수행 합니다 <xref:System.Web.UI.WebControls.TreeView> 각 노드의 텍스트를 표시 하는 컨트롤입니다.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="treeNodeCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체를 반복하는 데 사용할 수 있는 열거자를 반환합니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />을 반복하는 데 사용할 수 있는 열거자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> 방법을 쉽게 반복할 수의 각 항목을 가져올 수 있는 열거자를 만들 수는 <xref:System.Web.UI.WebControls.TreeNodeCollection>합니다. 열거자에서 현재 가리키는 항목을 사용 합니다 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> 속성입니다. 사용 된 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> 다음 항목으로 이동 하는 방법입니다. 컬렉션의 시작 부분에 열거자를 다시 이동 해야 할 경우 사용 된 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> 메서드.  
  
> [!NOTE]
>  열거자를 만들거나 사용 후 합니다 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType> 호출 해야 합니다는 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType> 메서드. 항목을 표시 하는 고, 그렇지는 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType> 속성 정의 되지 않습니다.  
  
 대신 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> 메서드를는 <xref:System.Array?displayProperty=nameWithType> 컬렉션의 항목에 액세스 하는 개체입니다. 또 다른 방법은 사용 하는 것을 `foreach` 또는 `For Each` 컬렉션을 반복 하는 구조입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> 의 루트 노드를 포함 하는 열거자를 만드는 메서드를는 <xref:System.Web.UI.WebControls.TreeView> 컨트롤입니다.  
  
 [!code-aspx-csharp[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/CS/treenodecollectiongetenumeratorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionGetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionGetEnumerator/VB/treenodecollectiongetenumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As TreeNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.TreeNode -&gt; int" Usage="treeNodeCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">찾을 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체의 인덱스를 확인합니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />에서 <paramref name="value" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> 지정 된 0부터 시작 인덱스를 확인 하는 방법 <xref:System.Web.UI.WebControls.TreeNode> 개체는 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체입니다. 노드 컬렉션에 없는 경우 메서드는-1을 반환 합니다.  
  
> [!NOTE]
>  지정된 된 노드 컬렉션에 여러 번 나타나면 첫 번째 발생의 인덱스가 반환 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> 루트 노드의 인덱스를 확인 하는 방법입니다. 있음을 합니다 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 속성이 반환을 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체입니다.  
  
 [!code-aspx-csharp[TreeNodeCollectionIndexOf#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/CS/treenodecollectionindexofcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionIndexOf/VB/treenodecollectionindexofvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> 속성은 함을 나타내는 데 여부에 대 한 액세스는 <xref:System.Web.UI.WebControls.TreeNodeCollection> 는 동기화 (스레드로부터 안전함). 이 속성에서 파생 되는 <xref:System.Collections.ICollection?displayProperty=nameWithType> 클래스 및 항상 반환 하도록 재정의 됩니다 `false`합니다.  
  
 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> 속성 참조를 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType> 의 속성을 <xref:System.Collections.ICollection?displayProperty=nameWithType> 인터페이스.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ default[int] { System::Web::UI::WebControls::TreeNode ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNodeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">검색할 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체의 인덱스(0부터 시작)입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체의 지정된 인덱스에 있는 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNode" />의 지정된 인덱스에 있는 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인덱서를 사용 하 여 액세스 하는 <xref:System.Web.UI.WebControls.TreeNode> 에서 개체를 <xref:System.Web.UI.WebControls.TreeNodeCollection> 배열 표기법을 사용 하 여 지정 된 인덱스입니다. 인덱서를 사용 하면 수정 하거나 교체 하는 <xref:System.Web.UI.WebControls.TreeNode> 컬렉션에서 직접 개체입니다. 컬렉션은 0부터 시작 합니다.  
  
   
  
## Examples  
 다음 예제에서는 요소에 액세스 하려면 인덱서를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection>합니다. 다음에 유의 합니다 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 및 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 속성 반환을 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TreeNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TreeNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TreeNode ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.TreeNode -&gt; unit" Usage="treeNodeCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.WebControls.TreeNode" />
      </Parameters>
      <Docs>
        <param name="value">제거할 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체에서 지정한 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> 컬렉션에서 지정된 된 노드를 제거 하는 방법입니다. 그런 다음 빈 위치에 맞게 해당 노드 아래에 있는 모든 항목 위로 이동 합니다. 이동된 된 항목의 인덱스도 업데이트 됩니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection> 수 있습니다 (Visual Basic에서는 Nothing), null 참조가 뿐만 아니라 중복 <xref:System.Web.UI.WebControls.TreeNode> 개체입니다.  
  
 대신 사용 하 여 특정 인덱스에 있는 노드를 제거할 수는 <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> 메서드. 사용 하 여 컬렉션의 모든 노드를 제거할 수도 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> 프로그래밍 방식으로에서 노드를 제거 하는 방법의 <xref:System.Web.UI.WebControls.TreeNodeCollection>합니다. 있음을 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 하 고 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 속성에는 각각 반환을 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체입니다.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="treeNodeCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">제거할 노드의 인덱스 위치(0부터 시작)입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체에서 지정한 인덱스에 있는 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> 제거 하는 방법 합니다 <xref:System.Web.UI.WebControls.TreeNode> 에서 지정 된 인덱스 위치에 있는 개체를 <xref:System.Web.UI.WebControls.TreeNodeCollection>. 그런 다음 빈 위치에 맞게 해당 노드 아래에 있는 모든 항목 위로 이동 합니다. 이동된 된 항목의 인덱스도 업데이트 됩니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection> 수 있습니다 (Visual Basic에서는 Nothing), null 참조가 뿐만 아니라 중복 <xref:System.Web.UI.WebControls.TreeNode> 개체입니다.  
  
 대신 특정을 제거할 수 있습니다 <xref:System.Web.UI.WebControls.TreeNode> 사용 하 여 개체를 <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> 메서드. 사용 하 여 컬렉션의 모든 노드를 제거할 수도 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> 프로그래밍 방식으로에서 노드를 제거 하는 방법의 <xref:System.Web.UI.WebControls.TreeNodeCollection>합니다. 있음을 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 하 고 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 속성에는 각각 반환을 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체입니다.  
  
 [!code-aspx-csharp[TreeNodeCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionAdd/CS/treenodecollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionAdd/VB/treenodecollectionaddvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Clear" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.TreeNodeCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Object" />에 대한 액세스를 동기화하는 데 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> 속성의 동기화 된 버전을 제공 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection> (스레드) 코드를 동기화에 사용할 수 있는 합니다.  
  
> [!CAUTION]
>  <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A> 이 클래스는 항상 반환 `false`를 나타내는 <xref:System.Web.UI.WebControls.TreeNodeCollection> 클래스 (스레드로부터 안전 하지) 동기화 되지 않습니다.  
  
 동기화 코드에서 작업을 수행 해야 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.SyncRoot%2A> 의 개체를 <xref:System.Web.UI.WebControls.TreeNodeCollection>에서 직접는 <xref:System.Web.UI.WebControls.TreeNodeCollection> 자체입니다. 이렇게 하면 다른 개체에서 파생되는 컬렉션에 대해 적절한 작업이 수행됩니다. 특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체입니다.  
  
> [!NOTE]
>  이 구현에서 반환 되는 개체를 <xref:System.Collections.ArrayList?displayProperty=nameWithType> 개체를 저장 하는 데는 <xref:System.Web.UI.WebControls.TreeNode> 컬렉션의 개체입니다.  
  
 컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다. 컬렉션이 동기화 된 경우 다른 스레드 수 수정할 하면 열거자가 예외를 throw 하는 컬렉션입니다. 열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.  
  
 대 한 자세한 내용은 <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> 속성 참조를 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType> 의 속성을 <xref:System.Collections.ICollection?displayProperty=nameWithType> 인터페이스.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><see cref="T:System.Array" />에서 복사한 항목을 받는 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체(0부터 시작)입니다.</param>
        <param name="index">복사된 내용을 받기 시작할 대상 배열 내의 위치입니다.</param>
        <summary>대상 배열의 지정한 인덱스부터 시작하여 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체의 모든 항목을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> 의 내용을 복사 하는 메서드를 <xref:System.Web.UI.WebControls.TreeNodeCollection> 를 지정 된 0부터 시작 <xref:System.Array?displayProperty=nameWithType> 개체입니다. 항목이 대상 배열의 지정한 인덱스부터 복사 됩니다. 사용 하 여 합니다 <xref:System.Array?displayProperty=nameWithType> 개체의 항목에 액세스 하려면 배열 구문을 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection>합니다.  
  
 대신 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A> 컬렉션의 항목에 액세스할 수 있는 열거자를 만드는 방법.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> 의 값을 복사 하는 메서드를 <xref:System.Web.UI.WebControls.TreeNodeCollection> 배열로 합니다. 있음을 합니다 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> 속성이 반환을 <xref:System.Web.UI.WebControls.TreeNodeCollection> 개체입니다.  
  
 [!code-aspx-csharp[TreeNodeCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/CS/treenodecollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCopyTo/VB/treenodecollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="array" />가 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 개체의 배열이 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체가 해당 뷰 상태의 변경 내용을 저장하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤에서 해당 상태를 저장하도록 표시되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.NET 상태 관리 개요</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">저장된 뷰 상태 값이 들어 있는 <see cref="T:System.Object" />입니다.</param>
        <summary>이전에 저장된 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 개체의 뷰 상태를 로드합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.NET 상태 관리 개요</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Object" />에 뷰 상태 변경 내용을 저장합니다.</summary>
        <returns>뷰 상태 변경 내용이 들어 있는 <see cref="T:System.Object" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.NET 상태 관리 개요</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />에서 해당 뷰 상태의 변경 내용을 추적하도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서버 컨트롤에이 메서드를 호출한 후 합니다 <xref:System.Web.UI.Control.IsTrackingViewState%2A> 속성은 반환 `true`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.NET 상태 관리 개요</related>
      </Docs>
    </Member>
  </Members>
</Type>