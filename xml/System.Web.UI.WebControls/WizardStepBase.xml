<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="72c221364004187105645aa4c552aa5116b260ab" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55310179" /></Metadata><TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WizardStepBase&#xA;Inherits View" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepBase abstract : System::Web::UI::WebControls::View" />
  <TypeSignature Language="F#" Value="type WizardStepBase = class&#xA;    inherit View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.Wizard" /> 컨트롤의 특정 단계에 필요한 기본 기능을 구현합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스를 직접 만들 수는 <xref:System.Web.UI.WebControls.WizardStepBase> 클래스입니다. 대신이 클래스를 상속 합니다 <xref:System.Web.UI.WebControls.WizardStep> 클래스 및 <xref:System.Web.UI.WebControls.TemplatedWizardStep> 마법사 역할을 하는 컨트롤에 있는 단계의 기본 기능을 제공 합니다.  
  
 파생 될 수 있습니다는 <xref:System.Web.UI.WebControls.WizardStepBase> 마법사 컨트롤의 고유 단계를 나타내는 사용자 지정 클래스를 만드는 클래스입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
    <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">웹 서버 컨트롤 마법사</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WizardStepBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">웹 서버 컨트롤 마법사</related>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReturn : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> 컬렉션의 다음 단계에서 현재 단계로 돌아올 수 있도록 허용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자가 현재 단계로 돌아올 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 속성을 사용 하 여 선형 탐색을 적용할 수 있습니다는 <xref:System.Web.UI.WebControls.Wizard> 제어 합니다. 각 단계에 있는 경우 해당 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 속성이 설정 `false`, 사용자에 액세스 한 후 단계에 반환할 수 없습니다. 이 기능은 사용할 수 있는 시나리오 중 하나 이며 완료 된 각 단계는 데이터베이스에 데이터를 유지 하는 때문에 완료 된 후 단계에 반환할 사용자를 허용 하지 않으려면 각 단계 후 데이터를 저장 하 고 사용자는 단계로 돌아가서 저장 한 후 정보를 변경 하도록 허용 하는 경우 저장된 된 데이터를 손상 될 수 있습니다. 설정 하 여 합니다 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 속성을 `false`, 사용자 단계 왼쪽에, 되 면 자신이 됩니다를 반환 하 고 값을 변경할 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 방법과 시기를 결정 하는 속성을 **이전** 단추가 렌더링 되지 않습니다. 다음 표에서 설명 합니다 **이전** 렌더링 동작을 단추입니다.  
  
|시나리오|동작|  
|--------------|--------------|  
|선형: 1 단계에서 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 로 설정 `false` 되 고 사용자 작업이 2 단계로 이동 합니다.|2 단계에서 표시 되지 않습니다 합니다 **이전** 단추입니다.|  
|비선형: 1 단계에서 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 로 설정 `false` 되 고 사용자 작업이 3 단계로 이동 합니다.|3 단계에서 표시 되지 않습니다 합니다 **이전** 단추입니다.|  
|세로 막대 단추: 2 단계에서 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 로 설정 `false` , <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> 로 설정 된 `true`, 사용자가 세로 막대 단추를 클릭 하 고 합니다.|단추가 없습니다 사이드바에서 자동으로 비활성화 됩니다 때 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 로 설정 된 `false`합니다. 사용자가 단추를 클릭 하면 동작이 무시 됩니다.|  
|선형 및 비선형 사용자 지정 템플릿을 사용 하 여: 사용자 지정 탐색 템플릿으로 있음.|없는 자동 숨기기 또는 표시 하는 경우 발생 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 로 설정 된 `false` 탐색에 대 한 템플릿을 사용 하는 경우. 합니다 **이전** 단추 템플릿이 선택적 요소 여야 합니다.|  
|Visual Studio 디자이너를 사용 하 고 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> : 컨트롤에는 5 단계, 4 단계에서 작업 하는 및 페이지를 실행 합니다.|4 단계가 합니다 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>, 해당 **이전** 단추가 렌더링 됩니다. 합니다 **이전** 단추는 동안만 숨겨져 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 로 설정 <xref:System.Web.UI.WebControls.WizardStepType.Step> 기록에서 이전 단계에 있는 경우 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 로 `false`합니다. 4 단계가 처음 렌더링 되 고 기록의 단계가 있습니다 합니다 **이전** 단추가 숨겨지지 않습니다.|  
|시작 단계 및 비선형 탐색: 사용자가 3 단계 및 4 단계 후에 1 단계를 방문 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 로 <xref:System.Web.UI.WebControls.WizardStepType.Start>합니다.|마법사 추가 하지 않습니다는 **이전** 표시 되 면 합니다 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 로 설정 되어 <xref:System.Web.UI.WebControls.WizardStepType.Start> 해당 단계를 사용자가 탐색 하는 방법에 관계 없이 합니다.|  
|기록에 동일한 단계: 사용자가 방문 3 단계는 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 로 설정 된 <xref:System.Web.UI.WebControls.WizardStepType.Step> 사용자는 해당 작업을 커밋하지 않는 및 합니다. 3 단계에서 이전 단추를 클릭합니다.|마법사 컨트롤 있는지를 확인 합니다 **이전** 기록에는 사용자가 현재는 "동일" 단계입니다. 마법사 컨트롤 앞의 "다른" 단계를 확인 하 고 기록에서 뒤로 검색 및 표시를 베이스 단계에서는 동일한 경우 합니다 **이전** 단추 및 대상 기록에 있는 "다른 단계" 기준입니다.|  
  
> [!NOTE]
>  경우는 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 속성이로 설정 되어 `false`, 되지만 <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> 의 부모 컨트롤의 속성 <xref:System.Web.UI.WebControls.WizardStepBase> 로 설정 되어 `true`, 세로 막대의 단추를 클릭 해도 효과가 없습니다. 세로 막대 일반적으로 표시 되어 제공 비선형 탐색 비선형 탐색 기능을 사용 하지 않는 경우 설정 하려면 할 수 있도록 합니다 <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> 속성을 `false`입니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 의 단계를 반환 하는 사용자를 중지 하는 속성을 <xref:System.Web.UI.WebControls.Wizard> 에 액세스 제어 합니다. 예에서는 `Step1` 단계에 해당 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 속성으로 설정 `false`합니다. 사용자가 합니다 `Step1` 단계에 표시 된 이전 단추가 제공 되지 않음는 `Step2` 단계입니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">웹 서버 컨트롤 마법사</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 컨트롤에 테마를 적용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>테마를 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> 속성에 대 한 테마를 사용할 수 있는지 여부를 나타냅니다는 <xref:System.Web.UI.WebControls.WizardStepBase> 제어 합니다. <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> 속성 또한 여부가 controls 컬렉션에 포함 된 컨트롤에 대 한 테마를 사용할 수 있습니다. 경우는 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> 속성은 `true`를 적용할 컨트롤 스킨에 대 한 애플리케이션의 테마 디렉터리를 검색 합니다. 테마 디렉터리에 특정 컨트롤 스킨이 스킨 적용 되지 않습니다. 경우는 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> 속성은 `false`, 테마 디렉터리는 검색 되지 않습니다 및 값을 <xref:System.Web.UI.Control.SkinID%2A> 속성이 사용 되지 않습니다.  
  
 컨트롤을 재정의할 수는 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> 값이 부모 컨트롤 또는 포함 하는 페이지 설정 합니다. 예를 들어 경우는 <xref:System.Web.UI.WebControls.WizardStepBase> 컨트롤에 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> 로 설정 `false`, 설정 마법사 단계 내에 포함 된 자식 컨트롤에 테마를 선택적으로 적용할 수 있습니다는 <xref:System.Web.UI.Control.EnableTheming%2A> 속성을 `true` 개별 자식 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">웹 서버 컨트롤 마법사</related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버 컨트롤에 할당된 프로그래밍 ID를 가져오거나 설정합니다.</summary>
        <value>컨트롤에 할당된 프로그래밍 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> 속성을 식별 하 고 특정 마법사 단계 컨트롤을 Web Forms 페이지를 참조 합니다. <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> 값 페이지에서 컨트롤 인스턴스의 이름이 됩니다. 이렇게 하면 해당 페이지에 대 한 코드의 특정 단계에 쉽게 액세스할 수 있습니다. 예를 들어, 설정 하는 경우는 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> 의 속성을 <xref:System.Web.UI.WebControls.WizardStepBase> 제어 "1 단계"에 마법사 단계는 해당 페이지에 대 한 코드의 자식 컨트롤을 참조할 수 있습니다 `Step1.Controls`합니다.  
  
 <xref:System.Web.UI.WebControls.WizardStepBase> 제어 되도록의 각 단계는 <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> 단계를 추가 하거나 디자인 타임에 수정할 때 컨트롤에 유효한 고유 식별자입니다. 설정한 경우에 예를 들어, 합니다 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> 식별자에 포함 된 다른 단계에 대 한 디자인 타임에는 단계에 대 한 일치를 <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> 제어 하며 일치할 수 없습니다.를 <xref:System.Web.UI.Control.ID%2A> 포함 하 <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 세 가지 마법사 단계에 대 한 정의 <xref:System.Web.UI.WebControls.Wizard> Web Forms 페이지에 있는 컨트롤입니다. 코드 페이지에서 마법사 단계 인스턴스는 해당 ID 값으로 명명 된 및로 코드를 참조할 수 있습니다 `WizardStep1`, `WizardStep2`, 및 `WizardStep3`합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">디자인 타임에 속성이 잘못된 식별자 문자열로 설정된 경우  
  
또는 
디자인 타임에 속성이 포함하는 <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> 컨트롤과 동일한 식별자로 설정된 경우  
  
또는 
디자인 타임에 속성이 포함하는 <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> 컨트롤에 있는 다른 단계와 동일한 식별자로 설정된 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">웹 서버 컨트롤 마법사</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">웹 폼 컨트롤 확인</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="wizardStepBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">복원할 컨트롤 상태를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <summary><see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> 메서드로 저장한 이전 페이지 요청에서 뷰 상태 정보를 복원합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마법사 역할을 하는 컨트롤의 단계와 관련된 이름을 가져옵니다.</summary>
        <value>마법사 역할을 하는 컨트롤의 단계와 관련된 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> 속성 마법사 컨트롤의 단계를 식별 하는 문자열을 반환 합니다. 에 대 한 값을 지정 하는 경우는 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 속성을 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> 속성 값을 반환 합니다. 없는 값을 지정 하는 경우는 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 속성을 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> 속성의 값을 반환는 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> 속성입니다. 에 대 한 값을 지정 하지 않은 경우는 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 또는 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> 속성을 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> 속성에서 반환 `null`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">웹 서버 컨트롤 마법사</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="wizardStepBase.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary><see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">웹 서버 컨트롤 마법사</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">이벤트 처리 및 발생</related>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="wizardStepBase.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트에서 HTML 콘텐츠를 렌더링하는 데 사용되는 출력 스트림을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>클라이언트에서 렌더링할 내용을 쓰는 지정된 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 개체에 <see cref="T:System.Web.UI.HtmlTextWriter" /> 컨트롤의 자식 컨트롤 내용을 출력합니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">웹 서버 컨트롤 마법사</related>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepType As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepType StepType { System::Web::UI::WebControls::WizardStepType get(); void set(System::Web::UI::WebControls::WizardStepType value); };" />
      <MemberSignature Language="F#" Value="member this.StepType : System.Web.UI.WebControls.WizardStepType with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Wizard" /> 컨트롤의 단계에 대해 표시할 탐색 UI(사용자 인터페이스)의 형식을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.WizardStepType" /> 열거형 값 중 하나입니다. 기본값은 <see langword="WizardStepType.Auto" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 의 단계에 대해 표시할 탐색 단추의 유형을 지정 하는 속성을 <xref:System.Web.UI.WebControls.Wizard> 제어 합니다. 모든 단계가 표시로이 속성에 대 한 값을 지정 하는 경우 <xref:System.Web.UI.WebControls.WizardStepType.Complete> 사이드바에서 비활성화 된 상태로 표시 됩니다.  
  
 이 속성의 값을 지정 하지 않으면 기본값은 `WizardStepType.Auto`합니다.  
  
 다음 표에서 사용 가능한 설정의 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 단계의 결과 동작과 속성:  
  
 `WizardStepType.Auto`  
 탐색 단계에 대해 렌더링 되는 UI 단계는 선언 되는 순서에 따라 결정 됩니다.  
  
 `WizardStepType.Complete`  
 마지막으로 나타나는 단계입니다. 탐색 단추가 렌더링되지 않습니다.  
  
 `WizardStepType.Finish`  
 마지막 데이터 수집 단계입니다. 완료 및 이전 단추를 탐색에 대 한 렌더링 됩니다.  
  
 `WizardStepType.Start`  
 처음으로 나타나는 단계입니다. 이전 단추는 렌더링 되지 않습니다.  
  
 `WizardStepType.Step`  
 시작 범위와 마침 단계 사이의 모든 단계가입니다. 이전 및 다음 단추는 탐색에 대 한 렌더링 됩니다. 이 단계 형식은 <xref:System.Web.UI.WebControls.WizardStepType.Auto> 단계 형식을 재정의하는 데 유용합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 열거형 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">웹 서버 컨트롤 마법사</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세로 막대 기능을 사용하도록 설정한 경우 <see cref="T:System.Web.UI.WebControls.Wizard" /> 컨트롤의 단계에 사용할 제목을 가져오거나 설정합니다.</summary>
        <value>세로 막대 기능을 사용하도록 설정한 경우 <see cref="T:System.Web.UI.WebControls.Wizard" /> 컨트롤의 단계에 사용할 제목입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 의 단계에 대 한 알기 쉬운 제목을 표시 하려면 속성을 <xref:System.Web.UI.WebControls.Wizard> 세로 막대 기능을 활성화 한 경우를 제어 합니다. 경우는 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 속성이 설정 되지 않은 및 세로 막대 기능을 사용 하는 값을 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> 세로 막대 단추에 대 한 속성이 표시 됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 의 단계에 대 한 알기 쉬운 제목을 표시 하려면 속성을 <xref:System.Web.UI.WebControls.Wizard> 컨트롤. 예에서 `Step1` 없는 해당 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 에 표시 되도록 속성을 설정 합니다 <xref:System.Web.UI.WebControls.Wizard> "WizardStep1" 컨트롤입니다. `Step2` 에 해당 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> "2 단계"로 표시 되도록 속성을 설정 합니다.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">웹 서버 컨트롤 마법사</related>
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wizard As Wizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Wizard ^ Wizard { System::Web::UI::WebControls::Wizard ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Wizard : System.Web.UI.WebControls.Wizard" Usage="System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Wizard" />에서 파생된 개체의 부모인 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 컨트롤을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Wizard" />에서 파생된 개체의 부모인 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 컨트롤입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">웹 서버 컨트롤 마법사</related>
      </Docs>
    </Member>
  </Members>
</Type>