<Type Name="AttributeCollection" FullName="System.Web.UI.AttributeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7ba8e2d5015e4ded819409cba98d345722ffee1" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57936292" /></Metadata><TypeSignature Language="C#" Value="public sealed class AttributeCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttributeCollection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeCollection sealed" />
  <TypeSignature Language="F#" Value="type AttributeCollection = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET 서버 컨트롤 요소의 여는 태그에 선언된 모든 특성에 대한 개체 모델 액세스를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컬렉션의 개별 항목 반환을 <xref:System.String> 해당 값으로 개체입니다. 컬렉션 반환 하는 경우 항목이 없습니다 특성 컬렉션에서 `null`합니다.  
  
 HTML 서버 컨트롤의 특성을 통해 프로그래밍 방식으로 사용할 수는 <xref:System.Web.UI.HtmlControls.HtmlControl.Attributes%2A> 모든 HTML 서버 컨트롤에서 상속 된 속성입니다. ASP.NET은 HTML 서버 컨트롤의 특성을 해당 컨트롤의 속성으로 표시합니다.  
  
 특성을 통해 웹 서버 컨트롤을 추가할 수는 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> 모든 웹 서버 컨트롤에서 상속 된 속성입니다. 웹 서버 컨트롤에 대 한 특성 컬렉션의 특성과 해당 컨트롤에 대 한 컨트롤의 강력한 형식의 속성을 반드시 일치 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 새 <xref:System.Web.UI.AttributeCollection> 명명 된 개체 `myAttributeCollection`에 있는지 여부를 페이지 포스트백 되었는지 확인 합니다. 되지 않은 경우 코드를 컬렉션에 두 개의 특성을 추가 합니다. 컬렉션의 특성 수를 가져옵니다 하 고 페이지에 각 특성에 키를 작성 하는 컬렉션을 반복 합니다. 페이지를 포스트백 코드가 새 특성 수를 가져옵니다 하 고 페이지에서 키와 각 특성의 값을 쓸 컬렉션을 반복 합니다.  
  
 [!code-csharp[AttributeCollection_AttributeCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/CS/attributecollection_attributecollection.cs.aspx#1)]
 [!code-vb[AttributeCollection_AttributeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/VB/attributecollection_attributecollection.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeCollection (System.Web.UI.StateBag bag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.StateBag bag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.#ctor(System.Web.UI.StateBag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bag As StateBag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeCollection(System::Web::UI::StateBag ^ bag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.AttributeCollection : System.Web.UI.StateBag -&gt; System.Web.UI.AttributeCollection" Usage="new System.Web.UI.AttributeCollection bag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bag" Type="System.Web.UI.StateBag" />
      </Parameters>
      <Docs>
        <param name="bag">서버 컨트롤의 여는 태그에 있는 특성 키와 해당 값이 들어 있는 개체입니다.</param>
        <summary><see cref="T:System.Web.UI.AttributeCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Web.UI.AttributeCollection> 클래스의 인스턴스를 만드는 생성자 라는 `myAttributeCollection`합니다. 코드는 컨트롤의 전달 <xref:System.Web.UI.Control.ViewState%2A> 매개 변수 인수로 속성입니다.  
  
 [!code-csharp[AttributeCollection_AttributeCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/CS/attributecollection_attributecollection.cs.aspx#2)]
 [!code-vb[AttributeCollection_AttributeCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/VB/attributecollection_attributecollection.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; unit" Usage="attributeCollection.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">특성 이름입니다.</param>
        <param name="value">특성 값입니다.</param>
        <summary>서버 컨트롤의 <see cref="T:System.Web.UI.AttributeCollection" /> 개체에 특성을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 문자열을 `value` 앰퍼샌드 (&), 문자를 포함 하는 매개 변수는 자동으로 인코딩됩니다. 결과 HTML 표현은 "&amp;"입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Web.UI.AttributeCollection.Add%2A> 프로그래밍 방식으로 ASP.NET 서버 컨트롤에 특성을 추가 하는 방법 <xref:System.Web.UI.AttributeCollection> 개체입니다.  
  
 [!code-aspx-csharp[Classic AttributeCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public void AddAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.AddAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="attributeCollection.AddAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">특성을 ASP.NET 서버 컨트롤의 여는 태그에 쓰는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 인스턴스입니다.</param>
        <summary>특성을 태그로 렌더링해야 하는 <see cref="T:System.Web.UI.AttributeCollection" /> 개체에 <see cref="T:System.Web.UI.HtmlTextWriter" /> 클래스의 특성을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서버 컨트롤의 모든 특성을 복사 하는이 메서드는 <xref:System.Web.UI.HtmlTextWriter> 다음 호출에서 렌더링 될 수 있도록 개체를 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 메서드.  
  
 와 같은 다른 컨트롤에 포함 된 컨트롤에 대 한 <xref:System.Web.UI.WebControls.Calendar> 고 <xref:System.Web.UI.WebControls.CheckBoxList>, 직접 포함 된 컨트롤을 렌더링 하 여 성능을 향상 시킬 수 있습니다. 직접 렌더링 하는 컨테이너 컨트롤에 있는 모든 자식 컨트롤 특성을 복사 하 고 복사한 후 렌더링 하는 컨테이너 컨트롤 필요 하기 때문에 컨테이너 컨트롤을 통해 렌더링 보다 빠를 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 새 특성을 추가 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Button> 이라는 서버 컨트롤 `myButton` 와 <xref:System.Web.UI.WebControls.TextBox> 이라는 서버 컨트롤 `myTextBox`합니다. 그런 다음 해당 특성을 사용자 지정 추가 <xref:System.Web.UI.HtmlTextWriter> 이러한 컨트롤 각각에 대해 해당 특성을 출력 스트림에 기록 하는 개체입니다.  
  
 [!code-csharp[AttributeCollection_Item#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_Item/CS/attributecollection_item.cs.aspx#1)]
 [!code-vb[AttributeCollection_Item#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_Item/VB/attributecollection_item.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="attributeCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서버 컨트롤의 <see cref="T:System.Web.UI.AttributeCollection" /> 개체에서 모든 특성을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 프로그래밍 방식으로 HTML 서버 컨트롤의 모든 특성을 제거 하는 방법 <xref:System.Web.UI.AttributeCollection> 개체입니다.  
  
 [!code-aspx-csharp[Classic AttributeCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.AttributeCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.AttributeCollection" /> 개체의 특성 수를 가져옵니다.</summary>
        <value>컬렉션의 항목 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.AttributeCollection.Count%2A> 컨트롤의 특성 수를 포함 하는 페이지에 쓸 속성입니다.  
  
 [!code-csharp[AttributeCollection_AttributeCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/CS/attributecollection_attributecollection.cs.aspx#4)]
 [!code-vb[AttributeCollection_AttributeCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/VB/attributecollection_attributecollection.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="CssStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection CssStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CssStyleCollection CssStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.CssStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CssStyle As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CssStyleCollection ^ CssStyle { System::Web::UI::CssStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CssStyle : System.Web.UI.CssStyleCollection" Usage="System.Web.UI.AttributeCollection.CssStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.AttributeCollection" /> 개체가 속해 있는 ASP.NET 서버 컨트롤에 대한 스타일 컬렉션을 가져옵니다.</summary>
        <value>현재 서버 컨트롤에 대한 스타일이 들어 있는 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 특정 HTML 서버 컨트롤에 추가 됩니다에 대 한 선언 된 모든 스타일을 <xref:System.Web.UI.CssStyleCollection> 포함 하는 ASP.NET 웹 페이지 구문 분석 하는 개체입니다. 이 속성을 추가, 제거 및 서버 컨트롤에 대해 선언 된 스타일 반복을 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 예에서는 서버 컨트롤의 프로그래밍 방식으로 CSS 스타일 값을 추가 하는 방법을 보여 줍니다 <xref:System.Web.UI.AttributeCollection> 개체입니다. 단추를 클릭할 때,의 배경색을 <xref:System.Web.UI.WebControls.TextBox> 이라는 서버 컨트롤 `TextBox1` 에서 선택한 항목으로 설정 됩니다는 <xref:System.Web.UI.WebControls.DropDownList> 이라는 서버 컨트롤 `DropDownList1`합니다.  
  
 [!code-csharp[AttributeCollection_CssStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_CssStyle/CS/attributecollection_cssstyle.cs.aspx#1)]
 [!code-vb[AttributeCollection_CssStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_CssStyle/VB/attributecollection_cssstyle.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="attributeCollection.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="o">이 인스턴스와 비교할 개체 인스턴스입니다.</param>
        <summary><see cref="T:System.Web.UI.AttributeCollection" /> 개체의 현재 인스턴스가 지정된 개체와 같은지 여부를 확인합니다.</summary>
        <returns><paramref name="o" /> 매개 변수에 들어 있는 개체가 <see cref="T:System.Web.UI.AttributeCollection" />의 현재 인스턴스와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비교 하는 개체에 대 한 다음 조건을 충족 해야 합니다.  
  
-   에 포함 된 개체를 `o` 매개 변수 이어야 합니다는 <xref:System.Web.UI.AttributeCollection> 개체입니다.  
  
-   두 컬렉션 모두 동일한 항목 수를 포함 해야 합니다.  
  
-   두 컬렉션의 각 항목의 키 값이 일치 해야 합니다.  
  
    > [!NOTE]
    >  이 메서드는 주로 컨트롤 개발자가 사용합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="attributeCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
        <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.AttributeCollection.GetHashCode%2A> 이 대 한 해시 코드를 결정 하는 방법 <xref:System.Web.UI.AttributeCollection> 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Web.UI.AttributeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">컬렉션의 특성 위치입니다.</param>
        <summary>서버 컨트롤에 지정된 특성 값을 가져오거나 설정합니다.</summary>
        <value>특성 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 특성을 추가 하거나이 속성을 사용 하는 ASP.NET 서버 컨트롤에서 하나를 검색할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 동적 HTML을 설정 하는 방법을 보여 줍니다 `onblur` 명령는 ECMAScript (JavaScript)를 실행 하는 특성을 <xref:System.Web.UI.WebControls.TextBox> 웹 서버 컨트롤이 포커스를 잃을 합니다.  
  
 [!code-aspx-csharp[Classic AttributeCollection Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection Example 2/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Web.UI.AttributeCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버 컨트롤의 <see cref="T:System.Web.UI.AttributeCollection" /> 개체에 있는 모든 특성에 대한 키 컬렉션을 가져옵니다.</summary>
        <value>키 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 있는 모든 키를 포함 합니다 <xref:System.Web.UI.AttributeCollection> 는 ASP.NET 서버 컨트롤의 여부를 추가한 프로그래밍 방식으로 사용 하 여는 <xref:System.Web.UI.AttributeCollection.Add%2A> 메서드 또는 선언적으로.  
  
   
  
## Examples  
 다음 예제에서는 반복 하는 방법을 보여 줍니다는 <xref:System.Web.UI.AttributeCollection.Keys%2A> 의 속성을 <xref:System.Web.UI.AttributeCollection> 개체에 대 한는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 서버 컨트롤입니다.  
  
 [!code-aspx-csharp[Classic AttributeCollection.Keys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Keys Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Keys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Keys Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="attributeCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">제거할 특성의 이름입니다.</param>
        <summary>서버 컨트롤의 <see cref="T:System.Web.UI.AttributeCollection" /> 개체에서 특성을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.AttributeCollection> 개체에 지정 된 특성이 없는 `key`, 컬렉션은 변경 합니다. 예외가 throw되지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 프로그래밍 방식으로 HTML 서버 컨트롤의 특성을 제거 하는 방법 <xref:System.Web.UI.AttributeCollection> 개체입니다.  
  
 [!code-aspx-csharp[Classic AttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="attributeCollection.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">현재 출력 스트림에 특성 컬렉션을 쓰는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 인스턴스입니다.</param>
        <summary>컬렉션이 속하는 컨트롤에 대한 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 출력 스트림에 특성 컬렉션을 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에서 상속 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebControl> 라는 사용자 지정 컨트롤을 만드는 클래스 `AttribRender` 재정의 <xref:System.Web.UI.AttributeCollection.Render%2A> 메서드. 두 번째 코드 예제에서는 ASP.NET 웹 페이지에서 사용자 지정 컨트롤을 사용 하는 방법을 보여 줍니다.  
  
 다음 예제에서는 라는 사용자 지정 컨트롤을 만드는 방법을 보여 줍니다 `AttribRender` 재정의 하는 <xref:System.Web.UI.WebControls.WebControl.Render%2A> 메서드를 <xref:System.Web.UI.WebControls.WebControl> 호출 하지 않고 클래스는 <xref:System.Web.UI.WebControls.WebControl.Render%2A> 기본 클래스의 메서드. 대신 `AttribRender` 호출을 <xref:System.Web.UI.AttributeCollection.Render%2A> 메서드.  
  
 [!code-csharp[AttributeCollection.Render_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/CS/attributecollection_render.cs#1)]
 [!code-vb[AttributeCollection.Render_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/VB/attributecollection_render.vb#1)]  
  
 다음 예제에서는 사용 하는 방법의 `AttribRender` 웹 페이지에서 사용자 지정 컨트롤입니다. 응용 프로그램의 App_Code 폴더에 사용자 지정 컨트롤에 대 한 코드 파일 임을 가정 합니다.  
  
 [!code-aspx-csharp[AttributeCollection.Render_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/CS/attributecollection_rendercs.aspx#2)]
 [!code-aspx-vb[AttributeCollection.Render_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/VB/attributecollection_rendervb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
  </Members>
</Type>