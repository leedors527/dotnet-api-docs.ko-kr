<Type Name="AuthenticationServiceManager" FullName="System.Web.UI.AuthenticationServiceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="daea7fc0679e0b3d002eaf68f16a0d5787702581" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55423760" /></Metadata><TypeSignature Language="C#" Value="public class AuthenticationServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AuthenticationServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationServiceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationServiceManager" />
  <TypeSignature Language="F#" Value="type AuthenticationServiceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>인증 서비스의 사용자 지정 구현 위치를 구성합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.AuthenticationServiceManager> 에 해당 하는 클래스를 <xref:System.Web.UI.ScriptManager.AuthenticationService%2A> 의 속성을 <xref:System.Web.UI.ScriptManager> 또는 <xref:System.Web.UI.ScriptManagerProxy> 컨트롤입니다.  
  
 인증 웹 서비스에 로그온 하 고 클라이언트 스크립트에서 로그 오프 AJAX 지원 애플리케이션에서 사용 됩니다. 사용할 수 있습니다 <xref:System.Web.UI.AuthenticationServiceManager> 인증 ASP.NET의 AJAX 기능을 통해 제공 되는 기본 제공 웹 서비스를 사용 하는 대신 웹 서비스의 대체 구현의 경로 제공 합니다.  
  
 애플리케이션에서 인증 서비스를 사용 하려면 구성 파일에서 활성화 해야 합니다. 기본 제공 인증 웹 서비스를 사용 하면 페이지에서 인증 서비스 관리자를 명시적으로 선언할 필요가 없습니다.  
  
 사용자 고유의 인증 서비스를 만들려면 두 가지 메서드가 포함 된 웹 서비스를 구현 해야 합니다. `Login` 고 `Logout`입니다. 또한 이러한 메서드는 기본 제공 인증 웹 서비스의 동일한 서명이 필요합니다.  
  
 다음 예제에서는 사용자 지정 인증 웹 서비스 클래스에서에서 구현 해야 하는 기본 클래스 구조를 보여 줍니다.  
  
  
  
 사용자 지정 인증 웹 서비스를 사용 하 여 추가할 수 있습니다를 선언적으로 태그에 포함 하 여는 `<AuthenticationService>` 내부 요소를 `<asp:ScriptManager>` 페이지에서 다음 예제에서와 같이 요소입니다.  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <AuthenticationService Path="MyAuthenticationService.asmx" />  
</asp:ScriptManager>  
```  
  
 또한 프로그래밍 방식으로 구성할 수 있습니다 <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> 사용자 지정 인증 웹 서비스를 사용 하도록 합니다.  
  
 에 관계 없이 인증 서비스에 대 한 선언적 섹션 인지 페이지의 AJAX 지원 애플리케이션은 렌더링된 된 페이지의는 ECMAScript (JavaScript) 변수를 포함 하는 인증 서비스 구성 파일에서 사용 되 면 . 이렇게 하면 현재 사용자가 인증 되었는지 여부를 확인 하기 위해 클라이언트 스크립트입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingAuthenticationServiceSection" />
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">ASP.NET AJAX의 웹 서비스</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c50f7dc5-323c-4c63-b4f3-96edfc1e815e">ASP.NET AJAX와 함께 폼 인증을 사용 하 여</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AuthenticationServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.AuthenticationServiceManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AuthenticationServiceManager.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.AuthenticationServiceManager.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인증 서비스의 경로를 가져오거나 설정합니다.</summary>
        <value>사용자 지정 인증 웹 서비스의 경로입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> 속성을 설정 하지 않으면 다음 반환 값은 <xref:System.String.Empty?displayProperty=nameWithType>합니다. ASP.NET의 AJAX 기능을 기본 제공 인증 다음 내부 기본 경로에 해당 하는 웹 서비스는 다음 사용 하는 예제의 경우: ~ / ScriptServices_AuthenticationService.asmx 합니다. 설정 하는 경우 동일한 동작이 수행 <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> 빈 값 또는 `null`합니다.  
  
 <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> 지정할 수 있습니다 합니다 <xref:System.Web.UI.ScriptManager> 제어 나 관련 <xref:System.Web.UI.ScriptManagerProxy> 제어 합니다. 때 <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> 에 설정 됩니다는 <xref:System.Web.UI.ScriptManagerProxy> 수준에서 다음과 같은 주의 사항이 적용 됩니다.  
  
-   컨트롤 계층 구조에서는 여러 프록시 경우 <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> 각 프록시 인스턴스에 설정할 필요가 없습니다.  
  
-   경우 <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> 가 명시적으로 프록시 인스턴스에서 설정 값을 동일 해야이 속성을 명시적으로 설정 하는 다른 모든 프록시에 대 한 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">컨트롤 계층 구조에서 둘 이상의 고유 경로가 설정된 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>