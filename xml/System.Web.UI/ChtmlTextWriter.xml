<Type Name="ChtmlTextWriter" FullName="System.Web.UI.ChtmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef03c43dbc93b3127a7d0d0a57d992baf0a23e50" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58874919" /></Metadata><TypeSignature Language="C#" Value="public class ChtmlTextWriter : System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChtmlTextWriter extends System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ChtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class ChtmlTextWriter&#xA;Inherits Html32TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChtmlTextWriter : System::Web::UI::Html32TextWriter" />
  <TypeSignature Language="F#" Value="type ChtmlTextWriter = class&#xA;    inherit Html32TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Html32TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET 서버 컨트롤의 출력 스트림에 일련의 cHTML 관련 문자와 텍스트를 씁니다. <see cref="T:System.Web.UI.ChtmlTextWriter" /> 클래스는 ASP.NET 서버 컨트롤이 cHTML 내용을 클라이언트로 렌더링할 때 사용하는 서식 기능을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Compact HTML 또는 cHTML HTML 2.0, HTML 3.2 및 HTML 4.0의 하위 집합 및 제한 된 메모리 및 CPU 능력을 작은 디스플레이 화면, 서식 지정 기능 및 제한 된 수의 입력된 옵션 (예: 휴대폰 제한 함께 사용 하 여 장치에서 렌더링 하도록 설계 되었습니다. 터치 패드)입니다. 따라서 cHTML 다음을 지원 하지 않습니다.  
  
-   JPEG 이미지입니다.  
  
-   테이블입니다.  
  
-   이미지에 매핑합니다.  
  
-   여러 문자 글꼴 및 스타일입니다.  
  
-   배경색 및 이미지입니다.  
  
-   프레임입니다.  
  
-   스타일 시트입니다.  
  
 <xref:System.Web.UI.ChtmlTextWriter> 클래스에서 파생 되는 <xref:System.Web.UI.Html32TextWriter> 클래스 및 해당 기능을 많이 제공한를 <xref:System.Web.UI.Html32TextWriter> 와 모든 태그 텍스트 작성기에 대 한 기본 클래스를 <xref:System.Web.UI.HtmlTextWriter> 클래스.  
  
   
  
## Examples  
 다음 코드 예제에는 라는 클래스를 만드는 방법을 보여 줍니다 `CustomChtmlTextWriter` 에서 파생 되는 <xref:System.Web.UI.ChtmlTextWriter> 클래스입니다. 만들고 두 명의 생성자를 재정의 <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> 방지 하기 위해 메서드를 `bgcolor` 의 출력 스트림에 쓸 스타일 특성은 <xref:System.Web.UI.ChtmlTextWriter> 개체. 또한 라는 클래스를 만듭니다 `ChtmlCustomPageAdapter` 메서드를 정의 하는 `CreateCustomChtmlTextWriter`, 생성 되 고 인스턴스를 반환 합니다 `CustomChtmlTextWriter` 클래스입니다. `CustomChtmlTextWriter` cHTML cHTML 태그를 사용 하는 브라우저를 사용 하 여 장치에 페이지 내용을 렌더링 합니다.  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.ChtmlTextWriter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ChtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.ChtmlTextWriter" Usage="new System.Web.UI.ChtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">태그 내용을 렌더링하는 <see cref="T:System.IO.TextWriter" />입니다.</param>
        <summary><see cref="T:System.Web.UI.ChtmlTextWriter" /> 상수를 사용하여 줄을 들여쓰는 <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.ChtmlTextWriter> 클래스에서 직접 또는 간접적으로 파생 되는 모든 클래스에 대 한 표준는 두 명의 생성자에는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다.  
  
 합니다 <xref:System.Web.UI.ChtmlTextWriter.%23ctor%2A> 의 인스턴스를 사용 하는 생성자를 <xref:System.IO.TextWriter> 클래스를 매개 변수로 두 번째 생성자를 호출 하 고 두 매개 변수 값 전달:  
  
-   <xref:System.IO.TextWriter>  
  
-   에 지정 된 문자열 값을 <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> XHTML 텍스트 기록기에 의해 사용 되는 탭 간격을 정의 하는 필드입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 라는 클래스를 만드는 방법을 보여 줍니다 `ChtmlCustomPageAdapter` 메서드를 정의 하 고 `CreateCustomChtmlTextWriter`, 생성 되 고 인스턴스를 반환 합니다 `CustomChtmlTextWriter` 클래스입니다. `CustomChtmlTextWriter` cHTML cHTML 태그를 사용 하는 브라우저를 사용 하 여 장치에 페이지 내용을 렌더링 합니다.  
  
 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.ChtmlTextWriter> 클래스입니다.  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ChtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.ChtmlTextWriter" Usage="new System.Web.UI.ChtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">태그 내용을 렌더링하는 <see cref="T:System.IO.TextWriter" />입니다.</param>
        <param name="tabString"><see cref="P:System.Web.UI.HtmlTextWriter.Indent" />에 정의된 공백 수입니다.</param>
        <summary>지정한 줄 들여쓰기를 사용하는 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter.%23ctor%2A> 의 두 인스턴스를 사용 하는 생성자를 <xref:System.IO.TextWriter> 클래스 및 호출 매개 변수로 문자열을 <xref:System.Web.UI.Html32TextWriter> 의 인스턴스를 만들 때 동일한 매개 변수를 사용 하는 생성자를 <xref:System.Web.UI.ChtmlTextWriter> 클래스.  
  
   
  
## Examples  
 다음 코드 예제에는 명명 된 사용자 지정 클래스를 만드는 방법을 보여 줍니다 `CustomChtmlTextWriter` 에서 파생 되는 <xref:System.Web.UI.ChtmlTextWriter> 클래스입니다. 모든 파생 되는 클래스를 직접 또는 간접적으로에서 동일한 패턴을 사용 하 여 사용자 지정 클래스의 인스턴스를 만드는 데 사용할 수 있는 두 명의 생성자를 만들면는 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다.  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member AddRecognizedAttribute : string * string -&gt; unit&#xA;override this.AddRecognizedAttribute : string * string -&gt; unit" Usage="chtmlTextWriter.AddRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">특성을 추가할 cHTML 요소입니다.</param>
        <param name="attributeName"><paramref name="elementName" />에 추가할 특성입니다.</param>
        <summary><see cref="T:System.Web.UI.ChtmlTextWriter" /> 개체의 cHTML 요소에 특성을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute%2A> 메서드 cHTML 요소에 특성을 추가 합니다. 인식할 수 있는 특성을 인식할 수 있는 특성에 저장 된 <xref:System.Collections.Hashtable> 의 컬렉션을 <xref:System.Web.UI.ChtmlTextWriter> 에서 참조 되는 개체는 <xref:System.Web.UI.ChtmlTextWriter.RecognizedAttributes%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="GlobalSuppressedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable GlobalSuppressedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable GlobalSuppressedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property GlobalSuppressedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ GlobalSuppressedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalSuppressedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>cHTML 요소에서 렌더링할 수 없는 전역으로 억제된 특성의 <see cref="T:System.Collections.Hashtable" /> 개체를 가져옵니다.</summary>
        <value>전역으로 억제된 cHTML 특성의 <see cref="T:System.Collections.Hashtable" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 목록은 때의 새 인스턴스 설정 되는 전역으로 억제 된 특성을 <xref:System.Web.UI.ChtmlTextWriter> 클래스가 만들어집니다.  
  
|||  
|-|-|  
|`onclick`|`onmousemove`|  
|`ondblclick`|`onmouseout`|  
|`onmousedown`|`onkeypress`|  
|`onmouseup`|`onkeydown`|  
|`onmouseover`|`onkeyup`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="chtmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">렌더링할 cHTML 특성입니다.</param>
        <param name="value"><paramref name="name" />에 할당된 값입니다.</param>
        <param name="key"><paramref name="name" />과 관련된 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />입니다.</param>
        <summary>지정한 cHTML 특성과 해당 값이 요청한 페이지로 렌더링되는지 여부를 결정합니다. <see cref="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> 클래스에서 파생되는 클래스에서 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 메서드를 재정의하여 cHTML을 지원하는 장치에서 렌더링하지 않을 특성을 필터링할 수 있습니다.</summary>
        <returns>특성과 해당 값을 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 출력 스트림에 쓰려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> 메서드는 전역으로 억제 된 특성에 나와 있는 것을 금지 합니다 <xref:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes%2A> 속성과 요소별 억제 된 특성에 나열 된는 <xref:System.Web.UI.ChtmlTextWriter.SuppressedAttributes%2A> 출력 스트림에 쓸 속성. 동작을 재정의할 수는 <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> 에서 파생 된 클래스의 메서드는 <xref:System.Web.UI.ChtmlTextWriter> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 재정의 하는 사용자 지정 클래스를 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> 방지 하기 위해 메서드를 `bgcolor` cHTML 출력 스트림에 쓸 특성입니다. 그런 다음 기본 제공 되는 기능을 호출 <xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A> 메서드에서 <xref:System.Web.UI.ChtmlTextWriter> 클래스는 기본 동작이 사용 되도록 합니다.  
  
 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.ChtmlTextWriter> 클래스입니다.  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#2)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="chtmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">렌더링할 스타일 특성의 이름이 포함된 문자열입니다.</param>
        <param name="value"><paramref name="name" />에 할당되는 값이 포함된 문자열입니다.</param>
        <param name="key"><paramref name="name" />과 관련된 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />입니다.</param>
        <summary>지정한 cHTML 태그 스타일 특성과 해당 값이 현재 태그 요소로 렌더링될 수 있는지 여부를 결정합니다.</summary>
        <returns>스타일을 렌더링할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender%2A> 메서드가 반환 `false` 때 `key` 값과 같음 합니다 <xref:System.Web.UI.HtmlTextWriterStyle.TextDecoration> 필드와 값은 `"line-through"`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected override bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="chtmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">렌더링할 cHTML 요소의 이름이 포함된 문자열입니다.</param>
        <param name="key"><paramref name="name" />과 관련된 <see cref="T:System.Web.UI.HtmlTextWriterTag" />입니다.</param>
        <summary>지정한 cHTML 태그 요소가 요청한 페이지에 렌더링되는지 여부를 결정합니다.</summary>
        <returns>지정한 cHTML 태그 요소를 렌더링할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 CHTML 요소 다음 위치에 있는 경우는 `span` 요소를 <xref:System.Web.UI.ChtmlTextWriter.OnTagRender%2A> 메서드가 반환 되는 `false`합니다. 다른 모든 태그를 반환 합니다 `true`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      </Docs>
    </Member>
    <Member MemberName="RecognizedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable RecognizedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable RecognizedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RecognizedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ RecognizedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RecognizedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>cHTML 요소에서 렌더링할 수 있는 올바른 특성의 <see cref="T:System.Collections.Hashtable" /> 개체를 가져옵니다.</summary>
        <value>올바른 cHTML 특성의 <see cref="T:System.Collections.Hashtable" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute%2A> 인식할 수 있는 특성 컬렉션에 특성을 인식할 수 있는 추가 하는 방법입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRecognizedAttribute : string * string -&gt; unit&#xA;override this.RemoveRecognizedAttribute : string * string -&gt; unit" Usage="chtmlTextWriter.RemoveRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">특성을 제거할 cHTML 요소입니다.</param>
        <param name="attributeName"><paramref name="elementName" />에서 제거할 특성입니다.</param>
        <summary><see cref="T:System.Web.UI.ChtmlTextWriter" /> 개체의 cHTML 요소 특성을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute%2A> 메서드 cHTML 요소에서 특성을 제거 합니다. 인식할 수 있는 특성에서 인식할 수 있는 특성을 제거 <xref:System.Collections.Hashtable> 의 컬렉션을 <xref:System.Web.UI.ChtmlTextWriter> 에서 참조 되는 개체는 <xref:System.Web.UI.ChtmlTextWriter.RecognizedAttributes%2A> 속성.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SuppressedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable SuppressedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable SuppressedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SuppressedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ SuppressedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SuppressedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>cHTML 요소에서 렌더링되지 않은 사용자 지정 억제된 특성의 <see cref="T:System.Collections.Hashtable" /> 개체를 가져옵니다.</summary>
        <value>억제된 cHTML 특성의 <see cref="T:System.Collections.Hashtable" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute%2A> 억제 된 특성 컬렉션에 특성을 추가 하는 방법입니다.  
  
 다음 목록에 대해 설정 된 기본 억제 된 특성을 보여 줍니다.는 `div` 요소는 경우의 새 인스턴스를 <xref:System.Web.UI.ChtmlTextWriter> 클래스가 만들어집니다.  
  
|||  
|-|-|  
|`accesskey`|`gridlines`|  
|`cellspacing`|`rules`|  
|`cellpadding`||  
  
 다음 목록에 대해 설정 된 기본 억제 된 특성을 보여 줍니다.는 `span` 요소는 경우의 새 인스턴스를 <xref:System.Web.UI.ChtmlTextWriter> 클래스가 만들어집니다.  
  
|||  
|-|-|  
|`cellspacing`|`gridlines`|  
|`cellpadding`|`rules`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public override void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBreak();" />
      <MemberSignature Language="F#" Value="override this.WriteBreak : unit -&gt; unit" Usage="chtmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see langword="br" /> 요소를 cHTML 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.ChtmlTextWriter.WriteBreak%2A> cHTML 스트림으로 중단 줄을 삽입 하는 방법입니다.  
  
   
  
## Examples  
 이 섹션에는 두 코드 예제가 있습니다. 첫 번째 코드 예제에는 cHTML 클래스 및 사용자 지정 속성을 만드는 방법을 보여 줍니다. 두 번째 코드 예제에서는 웹 페이지에서 사용자 지정 클래스를 사용 하는 방법에 설명 합니다.  
  
 사용자 지정을 사용 하려면 `ChtmlSimplelabelAdapter` 어댑터를.NET Framework 구성 디렉터리 또는 웹의 App_Browsers 디렉터리에서 사용자 지정 브라우저 파일 브라우저에 대 한 하위 디렉터리에 적절 한 컴퓨터 수준 파일에 다음 코드를 추가 합니다. 응용 프로그램 루트입니다.  
  
```  
<controlAdapters>  
   <adapter controlType="AspNet.Samples.SimpleLabel"  
   adapterType="AspNet.Samples.ChtmlSimpleLabelAdapter" />  
</controlAdapters>  
```  
  
 다음 코드 예제에는 cHTML 어댑터 클래스를 만드는 방법을 보여 줍니다 `ChtmlSimpleLabelAdapter` 라는 클래스에 대 한 `SimpleLabel`합니다. 사용자 지정을 만들면 `Control` 속성을 사용 하는 `ChtmlSimpleLabelAdapter` 클래스의 멤버에 액세스 하는 `SimpleLabel` 클래스 및 재정의 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> 메서드. 재정의 다음 작업을 발생합니다.  
  
-   에 대 한 참조를 만들면를 <xref:System.Web.UI.ChtmlTextWriter> 라는 개체 `w`에서 파생 된 합니다 <xref:System.Web.UI.HtmlTextWriter> 로 전달 되는 개체를 `writer` 에 대 한 매개 변수는 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> 메서드.  
  
-   문자열로 만들고을 같게 설정 된 `SimpleLabel.Text` 값입니다.  
  
-   호출을 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 에 정의 된 스타일을 적용 하는 방법의 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성 레이블를 chtml 출력 스트림에.  
  
-   기록 합니다 `Text` 스트림과 닫히는 스타일 블록을 호출 하 여 속성 값을 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> 메서드.  
  
-   호출을 <xref:System.Web.UI.ChtmlTextWriter.WriteBreak%2A> 렌더링 하는 메서드를 `br` 요소를 출력 스트림에 텍스트 및 스타일 렌더링 후.  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/cs/chtmltestlabel.cs#2)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/VB/chtmltestlabel.vb#2)]  
  
 다음 예제에서는 사용 하는 방법에 설명 합니다 `SimpleLabel` 웹 페이지에는 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.UI.ChtmlTextWriter_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/cs/chtmltestlabel.aspx#3)]
 [!code-aspx-vb[System.Web.UI.ChtmlTextWriter_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/VB/chtmltestlabel.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public override void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteEncodedText : string -&gt; unit" Usage="chtmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">인코드하고 출력 스트림에 작성할 텍스트 문자열입니다.</param>
        <summary>요청하는 디바이스에 대해 지정된 텍스트를 인코드한 후 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 매개 변수를 전달 하는 경우는 <xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A> 메서드는 `null` 아무 것도 쓰지 다음 0 이면 길이가 또는 합니다.  
  
 사용 하 여는 <xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A> 꺾쇠 괄호를 포함 하는 문자열 메서드 (\< 또는 >) 또는 앰퍼샌드 (&)는 올바르게 렌더링 되며 요청 하는 장치에서 확인 하려는 합니다.  
  
 합니다 <xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A> 메서드는 기본 클래스를 사용 하 여 <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
  </Members>
</Type>