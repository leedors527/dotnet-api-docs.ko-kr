<Type Name="ControlCachePolicy" FullName="System.Web.UI.ControlCachePolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3961e7cf22a67fad16c553285cbf573acd9de1bf" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53394072" /></Metadata><TypeSignature Language="C#" Value="public sealed class ControlCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlCachePolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlCachePolicy sealed" />
  <TypeSignature Language="F#" Value="type ControlCachePolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET 사용자 정의 컨트롤의 출력 캐시 설정에 프로그래밍 방식으로 액세스할 수 있도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlCachePolicy> 클래스는 사용자 컨트롤 (.ascx 파일)에 대 한 출력 캐싱 설정을 지정 하려면 프로그래밍 방식으로 사용자 정의 컨트롤 시나리오에서 개발자가 사용 됩니다. ASP.NET에서 사용자 정의 컨트롤을 포함 한 <xref:System.Web.UI.BasePartialCachingControl> 인스턴스. <xref:System.Web.UI.BasePartialCachingControl> 클래스에 출력 캐싱을 사용 하도록 설정 하는 사용자 정의 컨트롤을 나타냅니다. 액세스 하는 경우는 <xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=nameWithType> 의 속성을 <xref:System.Web.UI.PartialCachingControl> 컨트롤 항상 유효한 받습니다 <xref:System.Web.UI.ControlCachePolicy> 개체입니다. 그러나 액세스 하는 경우는 <xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=nameWithType> 의 속성을 <xref:System.Web.UI.UserControl> 컨트롤을 유효한 <xref:System.Web.UI.ControlCachePolicy> 사용자 정의 컨트롤은 이미 래핑한 경우에 개체를 <xref:System.Web.UI.BasePartialCachingControl> 컨트롤입니다. 래핑되지 않은 경우는 <xref:System.Web.UI.ControlCachePolicy> 속성에서 반환 된 개체는 연결 된 없기 때문에를 조작 하려고 할 때 예외를 throw <xref:System.Web.UI.BasePartialCachingControl>합니다. 결정할 여부를 <xref:System.Web.UI.UserControl> 인스턴스는 예외를 생성 하지 않고 캐싱을 지원, 검사를 <xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A> 속성입니다.  
  
 사용 하 여 <xref:System.Web.UI.ControlCachePolicy> 클래스는 여러 가지 방법으로 출력 캐싱을 사용할 수 있습니다. 다음 목록에서는 출력 캐싱을 사용 하도록 설정 하 여 메서드를 설명 합니다.  
  
-   선언적 시나리오에서 출력 캐싱을 사용 하도록 설정 하려면 지시문을 사용 합니다.  
  
-   사용 된 <xref:System.Web.UI.PartialCachingAttribute> 특성을 코드 숨김 파일에 사용자 정의 컨트롤에 대 한 캐싱을 사용 하도록 설정 합니다.  
  
-   사용 하 여 합니다 <xref:System.Web.UI.ControlCachePolicy> 클래스를 사용 하는 프로그래밍 시나리오에서 캐시 설정을 지정할 <xref:System.Web.UI.BasePartialCachingControl> 이전 방법 중 하나를 사용 하 여 캐시 활성화 되 고 사용 하 여 동적으로 로드 된 인스턴스는 <xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=nameWithType> 메서드. A <xref:System.Web.UI.ControlCachePolicy> 인스턴스가 성공적으로 조작할 수 사이 에서만 합니다 `Init` 및 `PreRender` 컨트롤 수명 주기의 단계입니다. 수정 하는 경우는 <xref:System.Web.UI.ControlCachePolicy> 후 개체를 `PreRender` 단계에서는 ASP.NET 예외를 throw 컨트롤이 렌더링 되 면 모든 변경 내용이 없습니다 실제로 설정에 영향을 캐시 (컨트롤 하는 동안 캐시 됩니다는 `Render` 단계). 사용자 컨트롤 인스턴스를 마지막으로, (및 따라서 해당 <xref:System.Web.UI.ControlCachePolicy> 개체)은 프로그래밍 방식으로 조작에 사용할 수 있는 경우에 실제로 렌더링 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에는 사용자 정의 컨트롤 수 동적으로 로드 및 런타임에 프로그래밍 방식으로 조작 하는 방법을 보여 줍니다. 합니다 <xref:System.Web.UI.PartialCachingAttribute> 특성이 라는 사용자 정의 컨트롤에 적용 되 `SimpleControl`, 래핑되는 즉, 사용자 정의 컨트롤을 <xref:System.Web.UI.PartialCachingControl> 런타임 시 컨트롤입니다. `SimpleControl` 개체의 캐싱 설정을 프로그래밍 방식으로 수 해당 연결을 통해 조작 <xref:System.Web.UI.ControlCachePolicy> 개체에 대 한 참조를 통해 제공 되는 <xref:System.Web.UI.PartialCachingControl> 를 래핑하는 컨트롤입니다. 이 예제에서는 합니다 <xref:System.Web.UI.ControlCachePolicy.Duration%2A> 페이지 초기화 및 사용 하 여 변경 하는 동안 속성을 검사 합니다 <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> 및 <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> 메서드 일부 조건이 충족 될 경우.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 다음 코드 예제는 `SimpleControl` Web Forms 페이지에서 사용자 정의 컨트롤입니다. 이 예제를 성공적으로 실행 하려면 사용자 정의 컨트롤 파일 (.ascx), 해당 코드 숨김 파일 (.cs 또는.vb) 및 Web Forms 페이지 (.aspx) 사용자 컨트롤을 호스팅하는 동일한 디렉터리에 있는지를 확인 합니다.  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx.cs#2)]
 [!code-vb[System.Web.UI.ControlCachePolicy_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx.vb#2)]  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx#3)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.BasePartialCachingControl.CachePolicy" />
    <altmember cref="P:System.Web.UI.UserControl.CachePolicy" />
    <related type="Article" href="https://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e">ASP.NET 페이지의 부분 캐싱</related>
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public bool Cached { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cached" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Cached" />
      <MemberSignature Language="VB.NET" Value="Public Property Cached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cached { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Cached : bool with get, set" Usage="System.Web.UI.ControlCachePolicy.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 정의 컨트롤에서 부분 캐싱을 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자 정의 컨트롤의 출력이 캐시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">사용자 정의 컨트롤이 <see cref="T:System.Web.UI.BasePartialCachingControl" />과 연결되어 있지 않아 캐시할 수 없는 경우  
  
또는 
<see cref="P:System.Web.UI.ControlCachePolicy.Cached" /> 속성이 컨트롤의 초기화 및 렌더링 단계가 아닌 다른 단계에서 설정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Dependency">
      <MemberSignature Language="C#" Value="public System.Web.Caching.CacheDependency Dependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.CacheDependency Dependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Dependency" />
      <MemberSignature Language="VB.NET" Value="Public Property Dependency As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::CacheDependency ^ Dependency { System::Web::Caching::CacheDependency ^ get(); void set(System::Web::Caching::CacheDependency ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Dependency : System.Web.Caching.CacheDependency with get, set" Usage="System.Web.UI.ControlCachePolicy.Dependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>캐시된 사용자 정의 컨트롤 출력과 관련된 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 인스턴스를 가져오거나 설정합니다.</summary>
        <value>컨트롤과 연결된 <see cref="T:System.Web.Caching.CacheDependency" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlCachePolicy.Dependency%2A> 에 위임 하는 속성을 <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> 의 속성은 <xref:System.Web.UI.BasePartialCachingControl> 사용자 컨트롤을 래핑하는 컨트롤입니다. 경우는 <xref:System.Web.Caching.CacheDependency> 인스턴스가 무효화 되 면 사용자 정의 컨트롤 캐시에서 제거 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">사용자 정의 컨트롤이 <see cref="T:System.Web.UI.BasePartialCachingControl" />과 연결되어 있지 않아 캐시할 수 없는 경우  
  
또는 
<see cref="P:System.Web.UI.ControlCachePolicy.Dependency" /> 속성이 컨트롤의 초기화 및 렌더링 단계가 아닌 다른 단계에서 설정된 경우</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="P:System.Web.UI.BasePartialCachingControl.Dependency" />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Duration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : TimeSpan with get, set" Usage="System.Web.UI.ControlCachePolicy.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>출력 캐시에 캐시된 항목을 보관해야 하는 기간을 가져오거나 설정합니다.</summary>
        <value>사용자 정의 컨트롤을 출력 캐시에 보관할 시간(초)을 나타내는 <see cref="T:System.TimeSpan" />입니다. 기본값은 <see cref="F:System.TimeSpan.Zero" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 절대 만료 정책을 사용 하 여 설정 된 경우는 <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> 메서드는 <xref:System.Web.UI.ControlCachePolicy.Duration%2A> 속성 캐시 엔트리가 만료 될 때까지 남은 시간을 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 사용자 정의 컨트롤 수 동적으로 로드 및 런타임에 프로그래밍 방식으로 조작 하는 방법을 보여 줍니다. <xref:System.Web.UI.PartialCachingAttribute> 특성이 라는 사용자 정의 컨트롤에 적용 되 `SimpleControl`, 즉 래핑되는 <xref:System.Web.UI.PartialCachingControl> 런타임 시 컨트롤입니다. `SimpleControl` 개체의 캐싱 설정을 프로그래밍 방식으로 수 해당 연결을 통해 조작 <xref:System.Web.UI.ControlCachePolicy> 개체에 대 한 참조를 통해 제공 되는 <xref:System.Web.UI.PartialCachingControl> 를 래핑하는 컨트롤입니다. 이 예제는 <xref:System.Web.UI.ControlCachePolicy.Duration%2A> 페이지 초기화 하는 동안 속성을 검사 하 고 일부 조건이 충족 될 경우 캐시 만료를 변경 합니다. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.ControlCachePolicy> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">사용자 정의 컨트롤이 <see cref="T:System.Web.UI.BasePartialCachingControl" />과 연결되어 있지 않아 캐시할 수 없는 경우  
  
또는 
<see cref="P:System.Web.UI.ControlCachePolicy.Duration" /> 속성이 컨트롤의 초기화 및 렌더링 단계가 아닌 다른 단계에서 설정된 경우</exception>
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string with get, set" Usage="System.Web.UI.ControlCachePolicy.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 인스턴스와 연결된 출력 캐시된 공급자의 이름을 가져오거나 설정합니다.</summary>
        <value>공급자의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.ControlCachePolicy.ProviderName%2A> 속성을 사용 하면 사용 하 여 컨트롤과 연결 된 현재 출력 캐시 공급자를 지정할 수 있습니다는 <xref:System.Web.UI.ControlCachePolicy> 인스턴스. 이 속성을 전에만 설정할 수는 <xref:System.Web.UI.Control.PreRender> 컨트롤 수명 주기에서 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">공급자 이름을 찾을 수 없는 경우</exception>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.ControlCachePolicy.ProviderName" />이벤트 진행 중 또는 그 이후 <see cref="E:System.Web.UI.Control.PreRender" /> 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetExpires">
      <MemberSignature Language="C#" Value="public void SetExpires (DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExpires(valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExpires (expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExpires(DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="member this.SetExpires : DateTime -&gt; unit" Usage="controlCachePolicy.SetExpires expirationTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="expirationTime">캐시된 엔트리가 만료되는 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정한 날짜 및 시간에 캐시 엔트리를 만료하도록 사용자 정의 컨트롤을 래핑하는 <see cref="T:System.Web.UI.BasePartialCachingControl" /> 컨트롤에 지시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> 및 <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> 메서드 (전달 `true`) 지시 하는 <xref:System.Web.UI.BasePartialCachingControl> 캐싱 정책은 절대 만료 정책 대신에 상대 (sliding) 만료가 사용 하 여 사용자 정의 컨트롤을 래핑하는 컨트롤입니다. 사용 합니다 <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> 메서드 및 <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> 메서드 (전달 `false`) 절대 만료 정책을 지정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 사용자 정의 컨트롤 수 동적으로 로드 및 런타임에 프로그래밍 방식으로 조작 하는 방법을 보여 줍니다. 합니다 <xref:System.Web.UI.PartialCachingAttribute> 특성이 라는 사용자 정의 컨트롤에 적용 되 `SimpleControl`, 래핑되는 즉, 사용자 정의 컨트롤을 <xref:System.Web.UI.PartialCachingControl> 런타임 시 컨트롤입니다. `SimpleControl` 개체의 캐싱 설정을 프로그래밍 방식으로 수 해당 연결을 통해 조작 <xref:System.Web.UI.ControlCachePolicy> 개체에 대 한 참조를 통해 제공 되는 <xref:System.Web.UI.PartialCachingControl> 를 래핑하는 컨트롤입니다. 이 예제에서는 합니다 <xref:System.Web.UI.ControlCachePolicy.Duration%2A> 페이지 초기화 및 사용 하 여 변경 하는 동안 속성을 검사 합니다 <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> 및 <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> 메서드 일부 조건이 충족 될 경우. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.ControlCachePolicy> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">사용자 정의 컨트롤이 <see cref="T:System.Web.UI.BasePartialCachingControl" />과 연결되어 있지 않아 캐시할 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetSlidingExpiration">
      <MemberSignature Language="C#" Value="public void SetSlidingExpiration (bool useSlidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSlidingExpiration(bool useSlidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSlidingExpiration (useSlidingExpiration As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSlidingExpiration(bool useSlidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.SetSlidingExpiration : bool -&gt; unit" Usage="controlCachePolicy.SetSlidingExpiration useSlidingExpiration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useSlidingExpiration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useSlidingExpiration">절대 만료 대신 슬라이딩 캐시 만료를 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>사용자 정의 컨트롤의 캐시 엔트리에 상대(sliding) 만료 또는 절대 만료를 사용하도록 사용자 정의 컨트롤을 래핑하는 <see cref="T:System.Web.UI.BasePartialCachingControl" /> 컨트롤에 지시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> 및 <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> 메서드 (전달 `true`) 지시 하는 <xref:System.Web.UI.BasePartialCachingControl> 캐싱 정책은 절대 만료 정책 대신에 상대 (sliding) 만료가 사용 하 여 사용자 정의 컨트롤을 래핑하는 컨트롤입니다. 사용 합니다 <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> 메서드 및 <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> 메서드 (전달 `false`) 절대 만료 정책을 지정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 사용자 정의 컨트롤 수 동적으로 로드 및 런타임에 프로그래밍 방식으로 조작 하는 방법을 보여 줍니다. 명명 된 사용자 정의 컨트롤 `SimpleControl` 으로 데코 레이트 된를 <xref:System.Web.UI.PartialCachingAttribute> 특성, 즉 래핑되는 <xref:System.Web.UI.PartialCachingControl> 런타임 시 컨트롤입니다. `SimpleControl` 개체의 캐싱 설정을 프로그래밍 방식으로 수 해당 연결을 통해 조작 <xref:System.Web.UI.ControlCachePolicy> 개체에 대 한 참조를 통해 제공 되는 <xref:System.Web.UI.PartialCachingControl> 를 래핑하는 컨트롤입니다. 이 예제에서는 캐싱 설정은 페이지 초기화 동안 검사할 이며 일부 조건이 충족 될 경우 변경 합니다. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.ControlCachePolicy> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">사용자 정의 컨트롤이 <see cref="T:System.Web.UI.BasePartialCachingControl" />과 연결되어 있지 않아 캐시할 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="SetVaryByCustom">
      <MemberSignature Language="C#" Value="public void SetVaryByCustom (string varyByCustom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVaryByCustom(string varyByCustom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVaryByCustom (varyByCustom As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVaryByCustom(System::String ^ varyByCustom);" />
      <MemberSignature Language="F#" Value="member this.SetVaryByCustom : string -&gt; unit" Usage="controlCachePolicy.SetVaryByCustom varyByCustom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varyByCustom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="varyByCustom">사용자 지정 문자열의 목록입니다.</param>
        <summary>사용자 정의 컨트롤의 출력 캐시를 변경하는 데 사용되는 사용자 지정 문자열의 목록을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 으로 "브라우저"를 전달 하는 경우는 `varyByCustom` 매개 변수를 사용자 정의 컨트롤 브라우저 유형 및 주 버전 번호 따라 달라 집니다. 다른 사용자 지정 문자열을 입력 하 고, 재정의 해야 합니다 <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> 애플리케이션의 Global.asax 파일에는 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">사용자 정의 컨트롤이 <see cref="T:System.Web.UI.BasePartialCachingControl" />과 연결되어 있지 않아 캐시할 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" />
      </Docs>
    </Member>
    <Member MemberName="SupportsCaching">
      <MemberSignature Language="C#" Value="public bool SupportsCaching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.SupportsCaching" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsCaching { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCaching : bool" Usage="System.Web.UI.ControlCachePolicy.SupportsCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 정의 컨트롤이 캐싱을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>사용자 정의 컨트롤이 캐싱을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 정의 컨트롤에서는 연관 된 경우 캐싱을 지원 하는 <xref:System.Web.UI.BasePartialCachingControl> 인스턴스는 ASP.NET 파서가 지시문을 구문 분석 또는 사용자 정의 컨트롤 데코 레이트 된 신호를 보냅니다는 <xref:System.Web.UI.PartialCachingAttribute> 특성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PartialCachingAttribute" />
        <altmember cref="T:System.Web.UI.BasePartialCachingControl" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControl">
      <MemberSignature Language="C#" Value="public string VaryByControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByControl" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByControl : string with get, set" Usage="System.Web.UI.ControlCachePolicy.VaryByControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>출력 캐시를 변경하는 데 사용할 컨트롤 식별자 목록을 가져오거나 설정합니다.</summary>
        <value>사용자 정의 컨트롤의 출력 캐시를 변경하는 데 사용되는 세미콜론으로 구분된 문자열 목록입니다. 이러한 문자열은 사용자 정의 컨트롤에 선언된 ASP.NET 서버 컨트롤의 <see cref="P:System.Web.UI.Control.ID" /> 속성 값을 나타냅니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">사용자 정의 컨트롤이 <see cref="T:System.Web.UI.BasePartialCachingControl" />과 연결되어 있지 않아 캐시할 수 없는 경우  
  
또는 
<see cref="P:System.Web.UI.ControlCachePolicy.VaryByControl" /> 속성이 컨트롤의 초기화 및 렌더링 단계가 아닌 다른 단계에서 설정된 경우</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByControls" />
      </Docs>
    </Member>
    <Member MemberName="VaryByParams">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByParams VaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByParams VaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByParams As HttpCacheVaryByParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByParams ^ VaryByParams { System::Web::HttpCacheVaryByParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByParams : System.Web.HttpCacheVaryByParams" Usage="System.Web.UI.ControlCachePolicy.VaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>출력 캐시를 변경하는 데 사용할 <see langword="GET" /> 또는 <see langword="POST" /> 매개 변수 이름 목록을 가져오거나 설정합니다.</summary>
        <value>출력 캐시를 변경하는 데 사용되는 문자열 목록이며, 세미콜론으로 구분되어 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 문자열은 GET 메서드를 사용 하 여 보낸 쿼리 문자열 값 또는 POST 메서드를 사용 하 여 보낸 매개 변수에 해당 합니다. 경우는 <xref:System.Web.UI.ControlCachePolicy.VaryByParams%2A> 여러 매개 변수 속성, 지정한 각 매개 변수에 대 한 출력 캐시의 요청된 문서가 다른 버전에 포함 합니다. 가능한 값에는 "none", "*" 및 모든 유효한 쿼리 문자열이나 POST 매개 변수 이름이 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">사용자 정의 컨트롤이 <see cref="T:System.Web.UI.BasePartialCachingControl" />과 연결되어 있지 않아 캐시할 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByParams" />
      </Docs>
    </Member>
  </Members>
</Type>