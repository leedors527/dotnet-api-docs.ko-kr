<Type Name="ControlCollection" FullName="System.Web.UI.ControlCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="39310eccb6e299c2073453ba53be3d2b750c716e" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52214418" /></Metadata><TypeSignature Language="C#" Value="public class ControlCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ControlCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ASP.NET 서버 컨트롤을 사용할 수 있도록 하여 그 자식 컨트롤 목록을 관리하는 컬렉션 컨테이너를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메서드와 속성에 액세스할 수 있습니다 합니다 <xref:System.Web.UI.ControlCollection> 를 통해 클래스는 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 속성입니다. 이후를 <xref:System.Web.UI.Control> 클래스는 모든 ASP.NET 서버 컨트롤에 대 한 기본 클래스,이 속성을 상속 하는 모든 서버 컨트롤입니다.  
  
 컬렉션에 대 한 자세한 내용은 참조 하세요. [컬렉션 및 데이터 구조](~/docs/standard/collections/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 된 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> 두 컨트롤, 명명 된 사용자 지정 클래스의 두 인스턴스를 만드는 방법 `ChildControl`, 이라는 문자열 속성이 있는 `Message`합니다. 두 컨트롤에 추가 됩니다 만들어지면는 <xref:System.Web.UI.ControlCollection>합니다. 합니다 <xref:System.Web.UI.ControlCollection.Add%2A> 메서드는 이러한 컨트롤의이 버전을 포함 하는 클래스에 추가할 각 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>합니다. 합니다 <xref:System.Web.UI.Control.ChildControlsCreated%2A> 속성이 `true` 이러한 컨트롤 불필요 하 게 다시 생성 되지 것입니다 있도록 합니다.  
  
 [!code-csharp[Control_Sample_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#1)]
 [!code-vb[Control_Sample_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.UI.Control.Controls" />
    <related type="Article" href="~/docs/standard/collections/index.md">컬렉션 및 데이터 구조</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Web.UI.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlCollection(System::Web::UI::Control ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ControlCollection : System.Web.UI.Control -&gt; System.Web.UI.ControlCollection" Usage="new System.Web.UI.ControlCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="owner">컨트롤 컬렉션을 사용하는 ASP.NET 서버 컨트롤입니다.</param>
        <summary>지정된 부모 서버 컨트롤에 대한 <see cref="T:System.Web.UI.ControlCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 사용자 지정 <xref:System.Web.UI.ControlCollection> 메시지를 작성 하는 생성자를 재정의 하는 클래스 (의 이름을 포함 하는 <xref:System.Web.UI.ControlCollection.Owner%2A> 속성) 컬렉션의 인스턴스를 만들 때 추적 로그에 있습니다. 이 예제가 작동 하려면 애플리케이션 또는 페이지에 대 한 추적을 활성화 해야 합니다.  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#1)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="owner" /> 매개 변수가 <see langword="null" />이면 발생하는 경우</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Web.UI.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Web.UI.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (child As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Web::UI::Control ^ child);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Web.UI.Control -&gt; unit&#xA;override this.Add : System.Web.UI.Control -&gt; unit" Usage="controlCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="child">컬렉션에 추가할 <see cref="T:System.Web.UI.Control" />입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.Control" /> 개체를 컬렉션에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 컨트롤의 서 수 인덱스 배열 끝에 추가 됩니다. 컨트롤에는 모든 ASP.NET 서버 컨트롤, 사용자 지정 서버 컨트롤을 만든 또는 리터럴 컨트롤의 인스턴스일 수 있습니다.  
  
 특정 인덱스 위치의 컬렉션에 컨트롤을 추가 하려면 사용 된 <xref:System.Web.UI.ControlCollection.AddAt%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.ControlCollection.Add%2A> 일련의 수는 서버 컨트롤의 뷰 상태에서 사용자 지정 템플릿 기반 컨트롤을 이동 하 고 템플릿 항목을 추가 하는 방법입니다.  
  
 [!code-csharp[TemplatedDataBoundControl#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#2)]
 [!code-vb[TemplatedDataBoundControl#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="child" /> 매개 변수에서 컨트롤을 지정하지 않으면 throw되는 경우</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.ControlCollection" />이 읽기 전용이면 throw되는 경우</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public virtual void AddAt (int index, System.Web.UI.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAt(int32 index, class System.Web.UI.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAt (index As Integer, child As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAt(int index, System::Web::UI::Control ^ child);" />
      <MemberSignature Language="F#" Value="abstract member AddAt : int * System.Web.UI.Control -&gt; unit&#xA;override this.AddAt : int * System.Web.UI.Control -&gt; unit" Usage="controlCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="index">자식 컨트롤을 추가할 배열의 위치입니다.</param>
        <param name="child">컬렉션에 추가할 <see cref="T:System.Web.UI.Control" />입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.Control" /> 개체를 컬렉션의 지정된 인덱스 위치에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추가 된 컨트롤에는 모든 ASP.NET 서버 컨트롤, 사용자 지정 서버 컨트롤을 만든 또는 리터럴 컨트롤의 인스턴스일 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.ControlCollection.AddAt%2A> 새 메서드 <xref:System.Web.UI.LiteralControl> 라는 `ChildControl2` 에 추가 합니다 `myButton` 컨트롤의 <xref:System.Web.UI.ControlCollection> 컬렉션의 인덱스 위치 1입니다.  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#1)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="child" /> 매개 변수가 컨트롤을 지정하지 않는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 매개 변수가 0보다 작거나 <see cref="P:System.Web.UI.ControlCollection.Count" /> 속성보다 큰 경우</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.ControlCollection" />이 읽기 전용인 경우</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="controlCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 서버 컨트롤의 <see cref="T:System.Web.UI.ControlCollection" /> 개체에서 컨트롤을 모두 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 사용자 지정 컨트롤의 빈 <xref:System.Web.UI.ControlCollection> 재정의 하는 경우는 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> 고 <xref:System.Web.UI.Control.DataBind%2A> 메서드. 복합, 템플릿 기반 컨트롤 또는 템플릿 데이터 바인딩된 컨트롤을 개발 하는 경우이 작업을 수행 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다 합니다 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> 메서드를 사용 하 여를 <xref:System.Web.UI.ControlCollection.Clear%2A> 에서 모든 자식 컨트롤이 이전에 삭제 하는 방법의 <xref:System.Web.UI.ControlCollection> 개체입니다. 이 경우 변경 해야 할 개체에 컨트롤의 오래 된 있도록 <xref:System.Web.UI.ControlCollection> 부적절 하 게 표시 되지 않습니다.  
  
 [!code-csharp[TemplatedDataBoundControl#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#2)]
 [!code-vb[TemplatedDataBoundControl#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Web.UI.Control c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Web.UI.Control c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (c As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Web::UI::Control ^ c);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Web.UI.Control -&gt; bool&#xA;override this.Contains : System.Web.UI.Control -&gt; bool" Usage="controlCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="c">컬렉션에서 검색할 서버 컨트롤입니다.</param>
        <summary>지정된 서버 컨트롤이 부모 서버 컨트롤의 <see cref="T:System.Web.UI.ControlCollection" /> 개체에 있는지 여부를 확인합니다.</summary>
        <returns>지정된 서버 컨트롤이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Web.UI.ctrlCollection_Contains#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CtrlCollection_Contains/CS/ctrlcollection_contains.cs.aspx#1)]
 [!code-vb[System.Web.UI.ctrlCollection_Contains#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CtrlCollection_Contains/VB/ctrlcollection_contains.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="controlCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">자식 컨트롤을 복사할 대상 <see cref="T:System.Array" />입니다.</param>
        <param name="index">복사를 시작하는 <paramref name="array" />의 상대 인덱스(0부터 시작)입니다.</param>
        <summary><see cref="T:System.Web.UI.ControlCollection" /> 개체에 저장된 자식 컨트롤을 <see cref="T:System.Array" />에서 지정된 인덱스 위치의 시작 부분에 있는 <see cref="T:System.Array" /> 개체에 복사합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="array" />가 <see langword="null" /> 및 1차원이 아닌 경우</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.ControlCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정된 ASP.NET 서버 컨트롤의 <see cref="T:System.Web.UI.ControlCollection" /> 개체에 있는 서버 컨트롤 수를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.ControlCollection" />에 있는 서버 컨트롤 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.ControlCollection.Count%2A> 컨트롤을 통해 반복 하는 속성 <xref:System.Web.UI.ControlCollection> 개체입니다. 사용 된 <xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> 속성이 컨트롤에 자식 컨트롤이 있는지 확인 합니다. 하는 경우 <xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> 반환 `false`의 나머지 코드를 실행 하지 않습니다.  
  
 [!code-csharp[Classic Control.HasControls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.HasControls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.HasControls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.HasControls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="controlCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.ControlCollection" /> 개체 전체를 반복할 수 있는 열거자를 검색합니다.</summary>
        <returns>컬렉션 전체를 반복할 열거자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 통해 열거 하는 메서드를 만듭니다는 <xref:System.Web.UI.ControlCollection> 의 컬렉션을 <xref:System.Web.UI.WebControls.Button> 컨트롤, `myButton`합니다. 열거자가 만들어지면를 <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> 작업이 스레드로부터 안전 하며 그렇지 않을 경우 속성을 검사는 <xref:System.Web.UI.ControlCollection.SyncRoot%2A> 속성 작업 스레드로부터 안전 하 게 하는 개체를 가져오는 데 사용 됩니다. 열거형이 완료 되 면,의 값을 <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> 속성으로 기록 됩니다를 <xref:System.Web.UI.WebControls.Label.Text%2A> 의 속성을 <xref:System.Web.UI.WebControls.Label> 포함 하는 페이지의 컨트롤.  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (System.Web.UI.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Web.UI.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Control) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Web::UI::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : System.Web.UI.Control -&gt; int&#xA;override this.IndexOf : System.Web.UI.Control -&gt; int" Usage="controlCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="value">인덱스가 반환된 <see cref="T:System.Web.UI.Control" />입니다.</param>
        <summary>컬렉션에서 지정된 <see cref="T:System.Web.UI.Control" /> 개체의 인덱스를 검색합니다.</summary>
        <returns>지정된 서버 컨트롤의 인덱스입니다. 서버 컨트롤이 현재 컬렉션의 멤버가 아니면 -1을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 지정 된 서버 컨트롤의 인덱스 위치를 결정 하는 <xref:System.Web.UI.ControlCollection> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.ControlCollection.IndexOf%2A> 컨트롤의 인덱스를 작성 하는 방법 `myLiteralControl`를 <xref:System.Web.UI.ControlCollection> 의 컬렉션을 <xref:System.Web.UI.WebControls.Button> 라는 컨트롤 `myButton`합니다.  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#1)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.ControlCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.ControlCollection" /> 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 통해 열거 하는 메서드를 만듭니다는 <xref:System.Web.UI.ControlCollection> 의 컬렉션을 <xref:System.Web.UI.WebControls.Button> 컨트롤, `myButton`합니다. 열거자가 만들어지면를 <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> 작업이 스레드로부터 안전 하며 그렇지 않을 경우 속성을 검사는 <xref:System.Web.UI.ControlCollection.SyncRoot%2A> 속성 작업 스레드로부터 안전 하 게 하는 개체를 가져오는 데 사용 됩니다. 값, 열거형이 완료 되었을 때를 <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> 속성으로 기록 됩니다는 <xref:System.Web.UI.WebControls.Label.Text%2A> 의 속성을 <xref:System.Web.UI.WebControls.Label> 포함 하는 페이지의 컨트롤.  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.ControlCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.ControlCollection" /> 개체가 동기화되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>이 속성은 항상 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 통해 열거 하는 메서드를 만듭니다는 <xref:System.Web.UI.ControlCollection> 의 컬렉션을 <xref:System.Web.UI.WebControls.Button> 컨트롤, `myButton`합니다. 열거자가 만들어지면를 <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> 작업이 스레드로부터 안전 하며 그렇지 않을 경우 속성을 검사는 <xref:System.Web.UI.ControlCollection.SyncRoot%2A> 속성 작업 스레드로부터 안전 하 게 하는 개체를 가져오는 데 사용 됩니다. 값, 열거형이 완료 되었을 때를 <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> 속성으로 기록 됩니다는 <xref:System.Web.UI.WebControls.Label.Text%2A> 의 속성을 <xref:System.Web.UI.WebControls.Label> 포함 하는 페이지의 컨트롤.  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ default[int] { System::Web::UI::Control ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.Control" Usage="System.Web.UI.ControlCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><see cref="T:System.Web.UI.ControlCollection" />의 서버 컨트롤 위치입니다.</param>
        <summary><see cref="T:System.Web.UI.ControlCollection" /> 개체의 지정된 인덱스 위치에서 서버 컨트롤에 대한 참조를 가져옵니다.</summary>
        <value>컨트롤에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.UI.ControlCollection.Item%2A> 인덱스 위치의 자식 컨트롤을 지정 하려면 속성에서 제거 되었습니다를 <xref:System.Web.UI.ControlCollection.Remove%2A> 메서드를 호출 합니다. 이 작업에서 수행 됩니다는 `myButton.Controls.Remove` 구문입니다.  
  
 [!code-aspx-csharp[ControlCollection_ReSubmit_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlCollection_ReSubmit_2/CS/controlcollection_copyto.cs.aspx#1)]
 [!code-aspx-vb[ControlCollection_ReSubmit_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlCollection_ReSubmit_2/VB/controlcollection_copyto.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 매개 변수가 0보다 작거나 <see cref="P:System.Web.UI.ControlCollection.Count" />보다 크거나 같은 경우</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Control Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Owner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Owner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Owner As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Control ^ Owner { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Web.UI.Control" Usage="System.Web.UI.ControlCollection.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.ControlCollection" /> 개체가 들어 있는 ASP.NET 서버 컨트롤을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.Control" />이 속한 <see cref="T:System.Web.UI.ControlCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 사용자 지정 <xref:System.Web.UI.ControlCollection> 재정의 하는 클래스를 <xref:System.Web.UI.ControlCollection.%23ctor%2A> 메시지를 작성 하는 방법 (의 이름을 포함 하는 <xref:System.Web.UI.ControlCollection.Owner%2A> 속성) 컬렉션의 인스턴스를 만들 때 추적 로그에 있습니다. 이 예제가 작동 하려면 애플리케이션 또는 페이지에 대 한 추적을 활성화 해야 합니다.  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#1)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Web.UI.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Web.UI.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Web::UI::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Web.UI.Control -&gt; unit&#xA;override this.Remove : System.Web.UI.Control -&gt; unit" Usage="controlCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="value">제거할 서버 컨트롤입니다.</param>
        <summary>지정된 서버 컨트롤을 부모 서버 컨트롤의 <see cref="T:System.Web.UI.ControlCollection" /> 개체에서 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인덱스 위치에서 컨트롤을 제거 하려면 사용 된 <xref:System.Web.UI.ControlCollection.RemoveAt%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.UI.ControlCollection.Remove%2A> 에서 자식 컨트롤을 삭제 하는 방법의 `myButton` 서버 컨트롤입니다. 먼저 코드를 사용 하 여는 <xref:System.Web.UI.ControlCollection.Contains%2A> 결정 하는 방법 여부를 합니다 `myChildControl` 에 포함 된를 <xref:System.Web.UI.ControlCollection> 개체, 경우 제거 합니다.  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#4)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="controlCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">컬렉션에서 제거할 서버 컨트롤의 서수 인덱스입니다.</param>
        <summary><see cref="T:System.Web.UI.ControlCollection" /> 개체에서 지정된 인덱스 위치의 자식 컨트롤을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 해당 값을 기반으로 컬렉션에서 컨트롤을 제거 하려면 사용 된 <xref:System.Web.UI.ControlCollection.Remove%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.UI.ControlCollection.RemoveAt%2A> 에서 자식 컨트롤을 삭제 하는 방법의 `myButton` 서버 컨트롤입니다. 메서드 호출에는 먼저 컨트롤이 삭제 되기 1의 인덱스 위치를 지정 합니다. 예제에서는 다음 쓰기를 포함 하는 페이지에서 해당 위치의 컨트롤이 삭제 된 것을 알리는 텍스트 메시지를 <xref:System.Web.UI.ControlCollection> 컬렉션입니다.  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#5)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.ControlCollection" />이 읽기 전용이면 throw되는 경우</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.ControlCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
        <value>컬렉션을 동기화하는 데 사용할 <see cref="T:System.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 통해 열거 하는 메서드를 만듭니다는 <xref:System.Web.UI.ControlCollection> 의 컬렉션을 <xref:System.Web.UI.WebControls.Button> 컨트롤, `myButton`합니다. 열거자가 만들어지면를 <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> 작업이 스레드로부터 안전 하며 그렇지 않을 경우 속성을 검사는 <xref:System.Web.UI.ControlCollection.SyncRoot%2A> 속성 작업 스레드로부터 안전 하 게 하는 개체를 가져오는 데 사용 됩니다. 값, 열거형이 완료 되었을 때를 <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> 속성으로 기록 됩니다는 <xref:System.Web.UI.WebControls.Label.Text%2A> 의 속성을 <xref:System.Web.UI.WebControls.Label> 포함 하는 페이지의 컨트롤.  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
  </Members>
</Type>