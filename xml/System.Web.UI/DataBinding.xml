<Type Name="DataBinding" FullName="System.Web.UI.DataBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d82ac2c0e912e2c4c704181862a930733cac0847" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39761123" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinding sealed" />
  <TypeSignature Language="F#" Value="type DataBinding = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET 서버 컨트롤의 단일 데이터 바인딩 식에 대한 정보를 포함하여 Microsoft Visual Studio와 같은 RAD(신속한 응용 프로그램 개발) 디자이너가 디자인 타임에 데이터 바인딩 식을 만들 수 있도록 합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스에서 서버 컨트롤의 각 데이터 바인딩 식을 디자인 타임에 표시 됩니다는 <xref:System.Web.UI.DataBinding> 클래스입니다. 하나 이상의 데이터 바인딩 식을 포함 하는 모든 서버 컨트롤에는 <xref:System.Web.UI.DataBindingCollection> 포함 된 개체는 <xref:System.Web.UI.DataBinding> 개체입니다. 이 컬렉션은는 <xref:System.Web.UI.Control> 구현 하는 클래스는 <xref:System.Web.UI.IDataBindingsAccessor> 인터페이스입니다. 사용자 지정 RAD 디자이너를 만들면 구현을 사용 하 여 해당 컬렉션에 액세스 합니다. 모든 <xref:System.Web.UI.DataBinding> 또는 <xref:System.Web.UI.DataBindingCollection> 서버 컨트롤과 연결 된 개체는 디자인 타임에만 존재 합니다. 런타임 시 존재 하지 않는 하며, 따라서 액세스할 수 없는 런타임 중입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.DataBinding> 개체 및 컨트롤의 기존 개체 같음 집합 <xref:System.Web.UI.DataBindingCollection> 포함 된 컬렉션을 `propertyName` 매개 변수 값을 사용 하 여 `Text`입니다. 컬렉션에 포함 하는 경우는 <xref:System.Web.UI.DataBinding> 개체를 `propertyName` 의 값 `Text`,이 코드는 개체의 값을 반환 합니다. <xref:System.Web.UI.DataBinding.Expression%2A> 속성. 이러한 개체가 없으면 빈 문자열 반환 합니다 ("").  
  
 [!code-csharp[DataBinding_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#2)]
 [!code-vb[DataBinding_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataBinder" />
    <altmember cref="T:System.Web.UI.DataBindingCollection" />
    <altmember cref="T:System.Web.UI.IDataBindingsAccessor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinding (string propertyName, Type propertyType, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Type propertyType, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, propertyType As Type, expression As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinding(System::String ^ propertyName, Type ^ propertyType, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataBinding : string * Type * string -&gt; System.Web.UI.DataBinding" Usage="new System.Web.UI.DataBinding (propertyName, propertyType, expression)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">데이터 바인딩될 속성입니다.</param>
        <param name="propertyType">데이터 바인딩될 속성의 .NET Framework 형식입니다.</param>
        <param name="expression">계산될 데이터 바인딩 식입니다.</param>
        <summary><see cref="T:System.Web.UI.DataBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.DataBinding> 개체 및 컨트롤의 기존 개체 같음 집합 <xref:System.Web.UI.DataBindingCollection> 포함 된 컬렉션을 `propertyName` 매개 변수 값을 사용 하 여 `Text`입니다. 컬렉션에 포함 하는 경우는 <xref:System.Web.UI.DataBinding> 개체를 `propertyName` 의 값 `Text`,이 코드는 개체의 값을 반환 합니다. <xref:System.Web.UI.DataBinding.Expression%2A> 속성. 이러한 개체가 없으면 빈 문자열 반환 합니다 ("").  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataBinder" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dataBinding.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">현재 <see cref="T:System.Web.UI.DataBinding" />와 비교할 개체입니다.</param>
        <summary>지정된 개체가 현재 개체와 같은 <see cref="T:System.Web.UI.DataBinding" /> 클래스의 인스턴스인지 여부를 결정합니다.</summary>
        <returns>데이터 바인딩 속성 이름이 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataBinding.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Web.UI.DataBinding.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>계산될 데이터 바인딩 식을 가져오거나 설정합니다.</summary>
        <value>계산될 데이터 바인딩 식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.DataBinding> 개체 및 컨트롤의 기존 개체 같음 집합 <xref:System.Web.UI.DataBindingCollection> 포함 된 컬렉션을 `propertyName` 매개 변수 값을 사용 하 여 `Text`입니다. 컬렉션에 포함 하는 경우는 <xref:System.Web.UI.DataBinding> 개체를 `propertyName` 의 값 `Text`,이 코드는 개체의 값을 반환 합니다. <xref:System.Web.UI.DataBinding.Expression%2A> 속성. 이러한 개체가 없으면 빈 문자열 반환 합니다 ("").  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dataBinding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.DataBinding" /> 개체의 인스턴스에 대한 해시 코드를 가져옵니다.</summary>
        <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataBinding> 개체에 배치 되는 <xref:System.Web.UI.DataBindingCollection> 개체를 디자인 타임에만 액세스할 수 있습니다. 컬렉션에 컨트롤에 대 한 바인딩을 나타내는 해시 테이블입니다. 하나만 있을 수 있습니다, 속성 당 하나의 바인딩이 해시 코드 계산 일치 하도록를 <xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType> 구현 및만 속성 이름을 고려 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string" Usage="System.Web.UI.DataBinding.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩될 ASP.NET 서버 컨트롤 속성의 이름을 가져옵니다.</summary>
        <value>데이터 바인딩될 속성입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 3 개의 변수 선언 `dataBindingOutput1`, `dataBindingOutput2`, 및 `dataBindingOutput3`의 다른 속성에 액세스 하는 <xref:System.Web.UI.DataBinding> 개체 `myDataBinding2`합니다. 다음 값을 할당 합니다 <xref:System.Web.UI.DataBinding.PropertyName%2A> 속성을 `dataBindingOutput1`, 문자열을 사용 하 여 연결 "속성 이름이" 인 파일에 값을 씁니다.  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Web.UI.DataBinding.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 ASP.NET 서버 컨트롤 속성의 .NET Framework 형식을 가져옵니다.</summary>
        <value>데이터 바인딩된 속성의 .NET Framework 형식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 3 개의 변수 선언 `dataBindingOutput1`, `dataBindingOutput2`, 및 `dataBindingOutput3`의 다른 속성에 액세스 하는 <xref:System.Web.UI.DataBinding> 개체 `myDataBinding2`합니다. 합니다 <xref:System.Web.UI.DataBinding.PropertyType%2A> 속성 값이 할당 `dataBindingOutput2` "속성 형식 is" 문자열과 함께 연결 하 고 파일에 값을 씁니다.  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>