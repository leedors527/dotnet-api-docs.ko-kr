<Type Name="DataSourceControl" FullName="System.Web.UI.DataSourceControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f80d0ba9378c16a7053ee233d26c80595aa888bb" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55334411" /></Metadata><TypeSignature Language="C#" Value="public abstract class DataSourceControl : System.Web.UI.Control, System.ComponentModel.IListSource, System.Web.UI.IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceControl extends System.Web.UI.Control implements class System.ComponentModel.IListSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceControl&#xA;Inherits Control&#xA;Implements IDataSource, IListSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceControl abstract : System::Web::UI::Control, System::ComponentModel::IListSource, System::Web::UI::IDataSource" />
  <TypeSignature Language="F#" Value="type DataSourceControl = class&#xA;    inherit Control&#xA;    interface IDataSource&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.DataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.DataSourceControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.DataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>데이터 바인딩된 컨트롤에 대한 데이터 소스를 나타내는 컨트롤의 기본 클래스로 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 웹 서버 컨트롤에 일관 된 방식으로 데이터를 바인딩할 수 있게 해 주는 컨트롤 데이터 바인딩 아키텍처를 지원 합니다. 데이터에 바인딩되는 웹 서버 컨트롤은 데이터 바인딩된 컨트롤과 바인딩 데이터 소스 컨트롤 이라고 하는 클래스 라고 합니다. 데이터 소스 컨트롤에서 모든 데이터 소스를 나타낼 수 있습니다: 관계형 데이터베이스, 파일, 스트림, 비즈니스 개체 및 등입니다. 데이터 소스 컨트롤에서 소스 나 기본 데이터의 형식에 관계 없이 데이터 바인딩된 컨트롤에 일관 된 방식으로 데이터를 제공 합니다.  
  
 제공 되는 데이터 소스 컨트롤을 사용 하 여 asp.net을 포함 하 여 <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, 및 <xref:System.Web.UI.WebControls.XmlDataSource>, 대부분의 웹 개발 작업을 수행 하 합니다. 기본 사용 <xref:System.Web.UI.DataSourceControl> 사용자 고유의 사용자 지정 데이터 소스 제어를 구현 하려는 경우 클래스입니다.  
  
 구현 하는 모든 클래스는 <xref:System.Web.UI.IDataSource> 인터페이스는 데이터 소스 컨트롤, 대부분의 ASP.NET 데이터 소스 컨트롤 확장 추상 <xref:System.Web.UI.DataSourceControl> 의 기본 구현을 제공 하는 클래스는 <xref:System.Web.UI.IDataSource> 인터페이스입니다. <xref:System.Web.UI.DataSourceControl> 클래스의 구현을 제공 합니다 <xref:System.ComponentModel.IListSource> 데이터 소스 컨트롤을 프로그래밍 방식으로 할당할 수 있는 인터페이스를를 `DataSource` 반환 데이터를 기본 목록으로 컨트롤을 데이터 바인딩된 컨트롤의 속성입니다.  
  
 파생 되는 모든 ASP.NET 컨트롤을 <xref:System.Web.UI.WebControls.DataBoundControl> 클래스는 데이터 소스 컨트롤에 바인딩할 수 있습니다. 경우는 <xref:System.Web.UI.WebControls.DataBoundControl> 바인딩된 데이터 소스 컨트롤에 데이터 바인딩이 자동으로 수행 됩니다 런타임 시. 노출 하는 ASP.NET 컨트롤을 사용 하 여 데이터 소스 컨트롤을 사용할 수도 있습니다는 `DataSource` 나 `DataSourceID` 속성 및 기본 데이터 바인딩을 지원 되지만에서 파생 되지 않은 <xref:System.Web.UI.WebControls.DataBoundControl>합니다. 명시적으로 호출 해야 이러한 데이터 바인딩된 컨트롤을 사용 하는 경우는 `DataBind` 메서드. 데이터 바인딩에 대 한 자세한 내용은 참조 하세요. [ASP.NET 데이터 액세스 콘텐츠 맵](https://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2)합니다.  
  
 데이터 소스 컨트롤의 조합으로 생각할 수 있습니다는 <xref:System.Web.UI.DataSourceControl> 개체 목록과 해당 관련 데이터를 데이터 원본 뷰를 호출 합니다. 각 데이터 목록이 표시 됩니다는 <xref:System.Web.UI.DataSourceView> 개체입니다. 기본 데이터 스토리지에는 하나 이상의 데이터 목록이 포함되어 있으므로 <xref:System.Web.UI.DataSourceControl>은 항상 하나 이상의 명명된 <xref:System.Web.UI.DataSourceView> 개체와 연결됩니다. <xref:System.Web.UI.IDataSource> 데이터 원본 뷰를 사용 하 여 상호 작용 하도록 모든 데이터 소스 컨트롤을 사용 하는 메서드를 정의 하는 인터페이스: 합니다 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> 메서드는 열거 하는 데 현재 데이터 소스 컨트롤과 연결 된 데이터 원본 뷰 및 <xref:System.Web.UI.DataSourceControl.GetView%2A> 메서드 이름으로 특정 데이터 원본 보기 인스턴스를 검색에 사용 됩니다.  
  
 데이터에 액세스 하려면 호출자가 사용 하는 별개의 두 인터페이스 처럼 데이터 소스 컨트롤의 생각할 수 있습니다. 합니다 <xref:System.Web.UI.DataSourceControl> 클래스는 페이지 개발자는 Web Forms 페이지를 개발 하는 경우 직접 상호 작용 하는 인터페이스 및 <xref:System.Web.UI.DataSourceView> 클래스는 데이터 바인딩된 컨트롤 및 데이터 바인딩된 컨트롤 작성자가 상호 작용 하는 인터페이스입니다. 때문에 <xref:System.Web.UI.DataSourceView> 런타임에만 개체를 사용할 수, 데이터 소스 컨트롤에 대 한 모든 상태 유지 또는 데이터 원본 뷰는 데이터 소스 컨트롤에서 직접 노출 되어야 합니다.  
  
 시각적으로 ASP.NET 데이터 소스 컨트롤에 렌더링 되지 필요에 따라 상태 관리에 참여할 수 있도록를 선언적으로 만들 수 있도록 컨트롤로 구현 됩니다. 결과적으로, 데이터 소스 제어와 지원 하지 않는 시각적 기능 같은 <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> 또는 <xref:System.Web.UI.DataSourceControl.SkinID%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 클래스 수 확장 하는 방법을 보여 줍니다는 <xref:System.Web.UI.DataSourceControl> 클래스입니다. `CsvDataSource` 컨트롤.csv 파일에 저장 하는 쉼표로 구분 된 파일 데이터를 나타냅니다. `CsvDataSource` 클래스의 자체 구현을 제공 합니다 <xref:System.Web.UI.DataSourceControl.GetView%2A>, <xref:System.Web.UI.DataSourceControl.GetViewNames%2A>, 및 기타 메서드를 기본 클래스 구현이 작동 하지 않기 때문에.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 `CsvDataSource` 웹 폼에서 컨트롤입니다.  
  
 [!code-aspx-csharp[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1_webform/CS/webform6cs.aspx#50)]
 [!code-aspx-vb[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1_webform/VB/webform6vb.aspx#50)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.DataSourceControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStyleSheetSkin">
      <MemberSignature Language="C#" Value="public override void ApplyStyleSheetSkin (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyStyleSheetSkin(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyStyleSheetSkin(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="override this.ApplyStyleSheetSkin : System.Web.UI.Page -&gt; unit" Usage="dataSourceControl.ApplyStyleSheetSkin page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">컨트롤을 포함하는 <see cref="T:System.Web.UI.Page" />입니다.</param>
        <summary>페이지 스타일시트에 정의된 스타일 속성을 컨트롤에 적용합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.DataSourceControl.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET에서 생성한 서버 컨트롤 식별자를 가져옵니다.</summary>
        <value>ASP.NET에서 생성한 서버 컨트롤 식별자입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDMode : System.Web.UI.ClientIDMode with get, set" Usage="System.Web.UI.DataSourceControl.ClientIDMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성은 데이터 소스 컨트롤에 사용되지 않습니다.</summary>
        <value>이 속성은 데이터 소스 컨트롤에 사용되지 않습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 <xref:System.Web.UI.Control> 데이터 소스 컨트롤 태그를 렌더링 하지 않으면 하므로 데이터 소스 컨트롤에 대 한 기본 클래스 사용 되지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">이 속성을 설정하려고 시도했습니다.</exception>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">ASP.NET 컨트롤 식별</related>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.DataSourceControl.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>UI 계층 구조에서 지정된 서버 컨트롤의 자식 컨트롤을 나타내는 <see cref="T:System.Web.UI.ControlCollection" /> 개체를 가져옵니다.</summary>
        <value>지정된 서버 컨트롤에 대한 자식 컨트롤의 컬렉션입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="dataSourceControl.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>자식 컨트롤을 저장할 컬렉션을 만듭니다.</summary>
        <returns><see cref="T:System.Web.UI.EmptyControlCollection" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  데이터 소스 컨트롤은 자식 컨트롤을 허용 하지 않으므로 <xref:System.Web.UI.DataSourceControl> 클래스의 기본 구현은 컨트롤의 자식 컨트롤이 포함을 지원 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.DataSourceControl.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 컨트롤이 테마를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>모든 경우에 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Web.UI.DataSourceControl> 컨트롤에 없는 시각적 렌더링, 테마를 지원 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.DataSourceControl.EnableTheming" /> 속성의 값을 설정하려고 한 경우</exception>
        <altmember cref="P:System.Web.UI.DataSourceControl.SkinID" />
        <altmember cref="P:System.Web.UI.DataSourceControl.Visible" />
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberSignature Language="F#" Value="override this.FindControl : string -&gt; System.Web.UI.Control" Usage="dataSourceControl.FindControl id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">찾을 컨트롤의 식별자입니다.</param>
        <summary>지정된 <paramref name="id" /> 매개 변수를 사용하여 서버 컨트롤의 현재 명명 컨테이너를 검색합니다.</summary>
        <returns>지정된 컨트롤이나 <see langword="null" />을 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="dataSourceControl.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤에 대한 입력 포커스를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Web.UI.DataSourceControl> 컨트롤에 시각적 렌더링, 호출 합니다 <xref:System.Web.UI.DataSourceControl.Focus%2A> 메서드를 throw를 <xref:System.NotSupportedException> 예외입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="M:System.Web.UI.DataSourceControl.Focus" /> 메서드를 호출하려고 한 경우</exception>
        <altmember cref="P:System.Web.UI.DataSourceControl.Visible" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="dataSourceControl.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">검색할 <see cref="T:System.Web.UI.DataSourceView" />의 이름입니다. <see cref="T:System.Web.UI.WebControls.SqlDataSource" />와 같이 하나의 뷰만 지원하는 데이터 소스 컨트롤에서는 이 매개 변수가 무시됩니다.</param>
        <summary>데이터 소스 컨트롤이 연결된 명명된 데이터 소스 뷰를 가져옵니다.</summary>
        <returns><see cref="T:System.Web.UI.DataSourceView" />과 연결된 명명된 <see cref="T:System.Web.UI.DataSourceControl" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 호출 하 여 데이터 소스 컨트롤과 연결 된 뷰 집합을 열거 하는 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> 메서드.  
  
 데이터 소스 컨트롤 클래스는 내부 데이터에서 하나 이상의 보기를 지원할 수 있습니다. 이러한 보기의 인스턴스로 표시 되는 <xref:System.Web.UI.DataSourceView> 클래스입니다. 데이터 원본 뷰의 데이터 소스 컨트롤의 기능을 정의 하 고, 내부 데이터 저장소에서 데이터를 검색 하는 데 필요한 모든 작업을 수행, 정렬, 삽입, 삭제 및 업데이트 등의 작업을 수행 합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.DataSourceControl> 클래스의 기본 구현은 반환 `null`합니다. 확장 하는 경우는 <xref:System.Web.UI.DataSourceControl> 클래스를 재정의 합니다 <xref:System.Web.UI.DataSourceControl.GetView%2A> 메서드가 반환 된 <xref:System.Web.UI.DataSourceView> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 방법을 확장 하는 데이터 소스 컨트롤 클래스는 <xref:System.Web.UI.DataSourceControl> 클래스가 구현 하는 <xref:System.Web.UI.IDataSource.GetView%2A> 의 강력한 형식의 인스턴스를 반환 하는 메서드를를 <xref:System.Web.UI.DataSourceView> 클래스. 데이터 소스 컨트롤이 하나만 보기를 지원 하므로 이름을 무시 하 고 기본 보기 이름으로 명명 된 뷰를 반환 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.DataSourceControl> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection&#xA;override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="dataSourceControl.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.DataSourceControl" /> 개체의 목록을 나타내는 이름 컬렉션을 가져옵니다.</summary>
        <returns><see cref="T:System.Collections.ICollection" />과 연결된 <see cref="T:System.Web.UI.DataSourceView" /> 개체의 이름이 들어 있는 <see cref="T:System.Web.UI.DataSourceControl" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Collections.ICollection> 이름의 컬렉션을 전달할 수 있는 값의 허용 되는 집합이 <xref:System.Web.UI.DataSourceControl.GetView%2A> 메서드.  
  
 <xref:System.Web.UI.ListSourceHelper> 에 사용 되는 클래스를 <xref:System.Web.UI.DataSourceControl> 클래스의 <xref:System.ComponentModel.IListSource> 구현을 확인를 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> 둘 다에 대해 메서드를 <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A> 및 <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A> 하나를 사용 하 여 연결 된 데이터 소스 컨트롤이 있는지 여부를 결정 하는 호출 또는 더 많은 데이터 원본 뷰. 하는 경우 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> 반환 `null`, 메서드의 기본 구현 되 <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A> 반환 `false` 및 <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A> 반환 `null`합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.DataSourceControl> 클래스의 기본 구현은 반환 `null`합니다. 확장 하는 경우는 <xref:System.Web.UI.DataSourceControl> 클래스에서 재정의 된 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> 뷰 이름의 컬렉션을 반환 하는 방법.  
  
   
  
## Examples  
 다음 코드 예제는 클래스를 확장 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.DataSourceControl> 클래스를 반환 하는 기본 구현에서 재정의할 수 `null`, 뷰 이름의 컬렉션을 제공 합니다. `CsvDataSource` 기본 뷰 이름으로 한 요소의 컬렉션이 반환 됩니다 따라서; 클래스는 하나의 뷰만 지원 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.DataSourceControl> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public override bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HasControls();" />
      <MemberSignature Language="F#" Value="override this.HasControls : unit -&gt; bool" Usage="dataSourceControl.HasControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서버 컨트롤에 자식 컨트롤이 있는지 확인합니다.</summary>
        <returns>서버 컨트롤에 다른 컨트롤이 포함되어 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseDataSourceChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseDataSourceChangedEvent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseDataSourceChangedEvent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseDataSourceChangedEvent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseDataSourceChangedEvent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseDataSourceChangedEvent : EventArgs -&gt; unit&#xA;override this.RaiseDataSourceChangedEvent : EventArgs -&gt; unit" Usage="dataSourceControl.RaiseDataSourceChangedEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.IDataSource.DataSourceChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> 메서드 알리고 데이터 바인딩된 컨트롤을 데이터 원본 또는 메모리에 캐시 된 데이터가 변경 된 컨트롤 다시 바인딩하고 필요한 추가 작업을 수행 해야 합니다. 일반적으로 <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> 메서드 매개 변수 값을 데이터 소스 컨트롤의 속성이 변경 되었음을 때 호출 됩니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> 메서드는 데이터 원본 또는 해당 기본 데이터에 영향을 미치는 모든 방식으로 변경 되 면 바인딩된 컨트롤입니다. 이 예제에서는 파일 기반 데이터 소스 컨트롤을 확장 하는 합니다 <xref:System.Web.UI.DataSourceControl> 클래스에서 발생 시키는 합니다 <xref:System.Web.UI.IDataSource.DataSourceChanged> 호출 하 여 이벤트 <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> 언제 든 지는 `FileName` 속성이 변경 될.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.IDataSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dataSourceControl.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">컨트롤 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체입니다.</param>
        <summary>제공된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체로 서버 컨트롤 콘텐츠를 출력하고 추적을 사용하는 경우 컨트롤에 대한 추적 정보를 저장합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.DataSourceControl.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.DataSourceControl" /> 컨트롤에 적용할 스킨을 가져옵니다.</summary>
        <value><see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 합니다 <xref:System.Web.UI.DataSourceControl> 컨트롤에 없는 시각적 렌더링, 설정할 수 없습니다는 <xref:System.Web.UI.DataSourceControl.SkinID%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.DataSourceControl.SkinID" /> 속성의 값을 설정하려고 한 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3(v=vs.100)">ASP.NET 테마 개요</related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스 컨트롤이 하나 이상의 데이터 목록과 연결되어 있는지 여부를 나타냅니다.</summary>
        <value><see cref="T:System.Web.UI.DataSourceControl" />가 하나 이상의 <see cref="T:System.Web.UI.DataSourceView" /> 개체와 연결되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 현재 개체를 하나 이상의 데이터 목록의 소스로 사용할 수 있는지 여부를 확인 하려면 사용 합니다. 데이터 소스 컨트롤은 데이터의 목록 <xref:System.Web.UI.DataSourceView> 개체 따라서 하나 이상의와 연결 된 경우 <xref:System.Web.UI.DataSourceView> 개체를 <xref:System.Web.UI.DataSourceControl> 컨트롤이 목록 소스 개체와 속성을 나타내는 반환 `true`.  
  
 이 속성은 정적 호출 <xref:System.Web.UI.ListSourceHelper.ContainsListCollection%2A?displayProperty=nameWithType> 현재 데이터 소스 컨트롤이 있는지 여부를 확인 하는 데이터 원본으로 사용할 수 있습니다. <xref:System.Web.UI.ListSourceHelper> 클래스를 결정 하는지 여부를 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> 메서드 뷰 이름의 유효한 컬렉션을 반환 합니다. 이 속성을 반환 하는 경우이 `true`합니다. 경우 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> 반환 `null`의 기본 구현인 합니다 <xref:System.Web.UI.DataSourceControl> 클래스, 메서드는 반환 `false`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 목록의 소스로 사용할 수 있는 데이터 소스 컨트롤 목록을 가져옵니다.</summary>
        <returns>데이터 목록의 소스로 사용할 수 있는 데이터 소스 컨트롤의 <see cref="T:System.Collections.IList" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 데이터 원본으로 사용할 수 있는 개체의 집합을 검색 하려면 사용 됩니다. 데이터 소스 컨트롤은 데이터의 목록 <xref:System.Web.UI.DataSourceView> 개체 따라서 하나 이상의와 연결 된 경우 <xref:System.Web.UI.DataSourceView> 개체를 <xref:System.Web.UI.DataSourceControl> 컨트롤 목록 원본 개체를 나타내며 메서드가 반환는 <xref:System.Collections.IList> 컬렉션 한 요소는 <xref:System.Web.UI.DataSourceControl> 자체입니다.  
  
 이 메서드는 정적 <xref:System.Web.UI.ListSourceHelper.GetList%2A?displayProperty=nameWithType> 검색 하는 메서드는 <xref:System.Collections.IList> 데이터 원본으로 사용할 수 있는 개체의 컬렉션입니다. <xref:System.Web.UI.ListSourceHelper> 클래스를 결정 하는지 여부를 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> 뷰 이름의 유효한 컬렉션을 반환 합니다. 이 경우는 <xref:System.Web.UI.ListSourceHelper> 반환 클래스는 <xref:System.Collections.IList> 하나 요소의 컬렉션을 <xref:System.Web.UI.DataSourceControl> 컨트롤. 경우 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> 반환 `null`의 기본 구현인 합니다 <xref:System.Web.UI.DataSourceControl> 클래스를 <xref:System.Web.UI.ListSourceHelper> 클래스도 반환 `null`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler System.Web.UI.IDataSource.DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event DataSourceChanged As EventHandler Implements System.Web.UI.IDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IDataSource.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이벤트는 데이터 바인딩된 컨트롤에 영향을 주는 방식으로 데이터 소스 컨트롤이 변경된 경우에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 데이터 원본 변경 될 때 발생 합니다. 컨트롤의 속성 변경 또는 수행한 편집 작업으로 인해 데이터가 변경으로 인해 변경 될는 <xref:System.Web.UI.DataSourceControl>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetView">
      <MemberSignature Language="C#" Value="System.Web.UI.DataSourceView IDataSource.GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (viewName As String) As DataSourceView Implements IDataSource.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::DataSourceView ^ System.Web.UI.IDataSource.GetView(System::String ^ viewName) = System::Web::UI::IDataSource::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">검색할 <see cref="T:System.Web.UI.DataSourceView" />의 이름입니다. <see cref="T:System.Web.UI.WebControls.SqlDataSource" />와 같이 하나의 뷰만 지원하는 데이터 소스 컨트롤에서는 이 매개 변수가 무시됩니다.</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> 컨트롤과 연결된 명명된 <see cref="T:System.Web.UI.DataSourceControl" /> 개체를 가져옵니다. 일부 데이터 소스 컨트롤은 하나의 뷰만 지원하지만 다른 컨트롤은 둘 이상의 뷰를 지원합니다.</summary>
        <returns><see cref="T:System.Web.UI.DataSourceView" />과 연결된 명명된 <see cref="T:System.Web.UI.DataSourceControl" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `viewName` 와 같이 하나의 뷰만 지원 데이터 소스 컨트롤에서이 메서드가 호출 될 때 매개 변수가 무시 됩니다 합니다 <xref:System.Web.UI.WebControls.SqlDataSource> 및 <xref:System.Web.UI.WebControls.AccessDataSource> 컨트롤입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.DataSourceControl> 이 인터페이스 메서드를 호출 하는 클래스의 기본 구현은 반환 `null`합니다. 확장 하는 경우는 <xref:System.Web.UI.DataSourceControl> 클래스를 재정의 합니다 <xref:System.Web.UI.DataSourceControl.GetView%2A> 메서드가 반환 된 <xref:System.Web.UI.DataSourceView> 개체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="viewName" />가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetViewNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDataSource.GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Function GetViewNames () As ICollection Implements IDataSource.GetViewNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.Web.UI.IDataSource.GetViewNames() = System::Web::UI::IDataSource::GetViewNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> 컨트롤과 연결된 <see cref="T:System.Web.UI.DataSourceControl" /> 개체의 목록을 나타내는 이름 컬렉션을 가져옵니다.</summary>
        <returns><see cref="T:System.Collections.ICollection" />과 연결된 <see cref="T:System.Web.UI.DataSourceView" /> 개체의 이름이 들어 있는 <see cref="T:System.Web.UI.DataSourceControl" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.DataSourceControl> 이 인터페이스 메서드를 호출 하는 클래스의 기본 구현은 반환 `null`를 나타내는 하나의 뷰만 지원 됩니다. 확장 하는 경우는 <xref:System.Web.UI.DataSourceControl> 클래스에서 재정의 된 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> 뷰 이름의 컬렉션을 반환 하는 방법. 이름을 전달할 수 있습니다 합니다 <xref:System.Web.UI.DataSourceControl.GetView%2A> 반환할 메서드를 <xref:System.Web.UI.DataSourceView> 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.DataSourceControl.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>항상 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 합니다 <xref:System.Web.UI.DataSourceControl> 컨트롤에 없는 시각적 렌더링 합니다 <xref:System.Web.UI.DataSourceControl.Visible%2A> 속성은 항상 반환 `false`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.DataSourceControl.Visible" /> 속성의 값을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>