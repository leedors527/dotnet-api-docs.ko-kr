<Type Name="DataSourceView" FullName="System.Web.UI.DataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04587ce19a7d6ab8bff8066b3a074f1e2ae57605" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57926399" /></Metadata><TypeSignature Language="C#" Value="public abstract class DataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceView abstract" />
  <TypeSignature Language="F#" Value="type DataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>데이터 소스 컨트롤의 기능을 정의하는 모든 데이터 소스 뷰 클래스의 기본 클래스 역할을 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 웹 서버 컨트롤에 일관 된 방식으로 데이터를 바인딩할 수 있도록 하는 데이터 바인딩 아키텍처를 지원 합니다. 데이터에 바인딩되는 웹 서버 컨트롤은 데이터 바인딩된 컨트롤과 바인딩 데이터 소스 컨트롤 이라고 하는 클래스 라고 합니다. 데이터 소스 컨트롤에서 모든 데이터 소스를 나타낼 수 있습니다: 관계형 데이터베이스, 파일, 스트림, 비즈니스 개체 및 등입니다. 데이터 소스 컨트롤에서 소스 나 기본 데이터의 형식에 관계 없이 데이터 바인딩된 컨트롤에 일관 된 방식으로 데이터를 제공 합니다.  
  
 제공 되는 데이터 소스 컨트롤을 사용 하 여 asp.net을 포함 하 여 <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, 및 <xref:System.Web.UI.WebControls.XmlDataSource>, 대부분의 웹 개발 작업을 수행 하 합니다. 기본을 사용할 <xref:System.Web.UI.DataSourceControl> 및 <xref:System.Web.UI.DataSourceView> 클래스 사용자 지정 데이터를 구현 하려는 경우 소스 제어 합니다.  
  
 데이터 소스 컨트롤의 조합으로 생각할 수 있습니다는 <xref:System.Web.UI.IDataSource> 개체 목록과 해당 관련 데이터를 데이터 원본 뷰를 호출 합니다. 각 데이터 목록이 표시 됩니다는 <xref:System.Web.UI.DataSourceView> 개체입니다. <xref:System.Web.UI.DataSourceView> 클래스는 모든 데이터 원본 뷰 또는 목록 데이터 소스 컨트롤과 연결 된 데이터에 대 한 기본 클래스입니다. 데이터 원본 뷰는 데이터 소스 컨트롤의 기능을 정의 합니다. 기본 데이터 스토리지에는 하나 이상의 데이터 목록이 포함되어 있으므로 데이터 원본 컨트롤은 항상 하나 이상의 명명된 데이터 원본 보기와 연결됩니다. 데이터 소스 컨트롤에서 사용 합니다 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> 데이터를 열거 하는 메서드 원본 데이터 소스 컨트롤을 사용 하 여 현재 연결 된 뷰 및 <xref:System.Web.UI.DataSourceControl.GetView%2A> 이름으로 특정 데이터 원본 보기 인스턴스를 검색 하는 방법입니다.  
  
 모든 <xref:System.Web.UI.DataSourceView> 개체를 지원 하 여 기본 데이터 원본에서 데이터를 검색 합니다 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 메서드. 모든 보기에는 필요에 따라 등의 작업을 비롯 하 여 작업의 기본 집합을 지원 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>하십시오 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>, 및 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>합니다. 데이터 바인딩된 컨트롤을 사용 하 여 연결된 된 데이터 소스를 검색 하 여 데이터 소스 컨트롤의 기능 보기를 검색할 수는 <xref:System.Web.UI.DataSourceControl.GetView%2A> 고 <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> 메서드 및 디자인 타임 또는 런타임에 뷰를 쿼리하여 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 확장 하는 방법에 설명 합니다 <xref:System.Web.UI.DataSourceView> 데이터 소스 컨트롤에 대 한 강력한 형식의 뷰 클래스를 만드는 클래스입니다. 합니다 `CsVDataSourceView` 클래스의 기능을 정의 합니다 `CsvDataSource` 데이터 소스 제어 및 쉼표로 구분 된 값 (.csv) 파일에 저장 된 데이터를 사용 하는 데이터 바인딩된 컨트롤에 대 한 구현을 제공 합니다. 대 한 자세한 내용은 합니다 `CsvDataSource` 데이터 소스 컨트롤 참조를 <xref:System.Web.UI.DataSourceControl> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.IDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IDataSource, viewName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceView(System::Web::UI::IDataSource ^ owner, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceView : System.Web.UI.IDataSource * string -&gt; System.Web.UI.DataSourceView" Usage="new System.Web.UI.DataSourceView (owner, viewName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.IDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Web.UI.DataSourceView" />가 연결된 데이터 소스 컨트롤입니다.</param>
        <param name="viewName"><see cref="T:System.Web.UI.DataSourceView" /> 개체의 이름입니다.</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="owner" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="viewName" />가 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.DataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.DataSourceView" /> 개체와 연결된 <see cref="T:System.Web.UI.DataSourceControl" /> 개체가 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 클래스 구현은 <see langword="false" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanDelete%2A> 속성 반영 뿐만 아니라 데이터 소스 컨트롤의 기능 뿐만 아니라 현재 작업을 수행할 적절 한 것입니다. 예를 들어, 경우에 데이터 원본 뷰를 지원 합니다 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 일반적으로 필수 속성 또는 다른 일부 데이터를 설정 하지 않으면 작업 합니다 <xref:System.Web.UI.DataSourceView.CanDelete%2A> 속성에서 반환 `false`삭제 작업은 실패.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.DataSourceView.CanDelete%2A> 속성 및 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 확장 하는 클래스의 메서드는 <xref:System.Web.UI.DataSourceView> 클래스. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.DataSourceView> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute (string commandName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(string commandName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.CanExecute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanExecute (commandName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExecute(System::String ^ commandName);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : string -&gt; bool&#xA;override this.CanExecute : string -&gt; bool" Usage="dataSourceView.CanExecute commandName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="commandName">명령 이름입니다.</param>
        <summary>지정된 명령을 실행할 수 있는지 여부를 결정합니다.</summary>
        <returns>명령을 실행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.DataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.DataSourceView" /> 개체와 연결된 <see cref="T:System.Web.UI.DataSourceControl" /> 개체가 <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 클래스 구현은 <see langword="false" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanInsert%2A> 속성 반영 뿐만 아니라 데이터 소스 컨트롤의 기능 뿐만 아니라 현재 작업을 수행할 적절 한 것입니다. 데이터 소스 컨트롤을 지원 하더라도 예를 들어를 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 작업을 필수 insert 명령 또는 일부 다른 데이터를 설정 하지 않으면 합니다 <xref:System.Web.UI.DataSourceView.CanInsert%2A> 속성에서 반환 `false`삽입 작업은 실패, 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.DataSourceView.CanInsert%2A> 속성 및 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 확장 하는 클래스의 메서드는 <xref:System.Web.UI.DataSourceView> 클래스. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.DataSourceView> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public virtual bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.DataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.DataSourceView" /> 개체와 연결된 <see cref="T:System.Web.UI.DataSourceControl" /> 개체가 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 메서드로 검색된 데이터에 대해 페이징 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 클래스 구현은 <see langword="false" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩된 컨트롤을 추가 하 여 페이징을 요청할 수 있습니다는 <xref:System.Web.UI.DataSourceCapabilities.Page> 필드를 <xref:System.Web.UI.DataSourceSelectArguments> 에 전달 된 개체는 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 메서드. 데이터 바인딩된 컨트롤 페이징 요청 하는 경우 있지만 <xref:System.Web.UI.DataSourceView.CanPage%2A> 속성이 반환 `false`, 예외를 throw 하는 데이터 원본 뷰.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public virtual bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.DataSourceView" /> 개체와 연결된 <see cref="T:System.Web.UI.DataSourceControl" /> 개체가 데이터가 아닌 총 데이터 행 수에 대한 검색을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 클래스 구현은 <see langword="false" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩된 컨트롤을 추가 하 여 전체 행 개수를 요청할 수 있습니다는 <xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType> 필드를 <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=nameWithType> 에 전달 된 개체는 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 메서드. 데이터 바인딩된 컨트롤에는 총 행 수를 요청 하는 경우 있지만 <xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A> 속성이 반환 `false`, 예외를 throw 하는 데이터 원본 뷰.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="F:System.Web.UI.DataSourceOperation.SelectCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public virtual bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.DataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.DataSourceView" /> 개체와 연결된 <see cref="T:System.Web.UI.DataSourceControl" /> 개체가 내부 데이터 소스에 대한 정렬된 뷰를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 구현은 <see langword="false" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩된 컨트롤을 추가 하 여 정렬을 요청할 수 있습니다는 <xref:System.Web.UI.DataSourceCapabilities.Sort> 필드를 <xref:System.Web.UI.DataSourceSelectArguments> 에 전달 된 개체는 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 메서드. 데이터 바인딩된 컨트롤을 정렬 하는 요청 하는 경우 있지만 <xref:System.Web.UI.DataSourceView.CanSort%2A> 속성이 반환 `false`, 예외를 throw 하는 데이터 원본 뷰.  
  
   
  
## Examples  
 다음 코드 예제에는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.DataSourceView.CanSort%2A> 을 확장 하는 클래스의 속성에에서는 <xref:System.Web.UI.DataSourceView> 클래스입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.DataSourceView> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.DataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.DataSourceView" /> 개체와 연결된 <see cref="T:System.Web.UI.DataSourceControl" /> 개체가 <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>작업이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 구현은 <see langword="false" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanUpdate%2A> 속성 반영 뿐만 아니라 데이터 소스 컨트롤의 기능 뿐만 아니라 현재 작업을 수행할 적절 한 것입니다. 데이터 바인딩된 컨트롤을 지원 하더라도 예를 들어 합니다 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> 작업의 경우 필요한 업데이트 명령이 나 일부 다른 데이터가 설정 되어 있지 않으면,는 <xref:System.Web.UI.DataSourceView.CanUpdate%2A> 속성에서 반환 `false`업데이트 작업은 실패, 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.DataSourceView.CanUpdate%2A> 속성 및 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> 확장 하는 클래스의 메서드는 <xref:System.Web.UI.DataSourceView> 클래스. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.DataSourceView> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceViewChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceViewChanged : EventHandler " Usage="member this.DataSourceViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스 뷰가 변경되면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변경 데이터 원본 뷰는 데이터 원본 뷰에서 수행 하는 데이터 작업으로 인해 데이터가 변경 하거나 해당 속성의 값이 변경 때문일 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Delete (keys As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Delete (keys, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> 작업으로 삭제할 개체 또는 행 키의 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />입니다.</param>
        <param name="oldValues">데이터 요소와 원래 값을 나타내는 이름/값 쌍의 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <param name="callback">비동기 작업이 완료되면 이를 데이터 바인딩된 컨트롤에 알리는 데 사용되는 <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> 대리자입니다.</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> 개체가 나타내는 데이터 목록에서 비동기 삭제 작업을 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Delete%2A> 메서드는 비동기 데이터 삭제 인터페이스 모든 데이터 원본 뷰 개체입니다. <xref:System.Web.UI.DataSourceView.Delete%2A> 메서드 호출을 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 메서드를 사용 하 여 `keys` 및 `oldValues` 매개 변수 값을 제공 합니다. `callback` 매개 변수는 데이터 바인딩된 컨트롤을 데이터 원본에 전달 하는 대리자 데이터 바인딩된 알리는 데 사용 되는 뷰를 제어 합니다 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 작업이 완료 합니다. 매개 변수를 사용 하는 메서드를 <xref:System.Web.UI.DataSourceViewOperationCallback> 와 영향을 받은 레코드 수를 반환 하는 대리자 <xref:System.Exception> 에 의해 throw 되는 예외는 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">제공된 <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />이 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.UI.DataSourceView.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스 뷰에 대한 이벤트 처리기 대리자의 목록을 가져옵니다.</summary>
        <value>이벤트 처리기 대리자의 목록입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 형식의 <xref:System.ComponentModel.EventHandlerList>, 대리자의 목록에서 항목을 찾는 선형 검색 알고리즘을 사용 하는 합니다. 선형 검색 알고리즘을 많은 수의 항목을 작업할 때 비효율적입니다. 따라서 큰 목록이 있으면이 속성을 사용 하 여 항목 느려집니다 찾기.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 명령을 실행합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteCommand (commandName, keys, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="values" Type="System.Collections.IDictionary" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="commandName">명령 이름입니다.</param>
        <param name="keys">작업할 개체 키 또는 행 키의 사전입니다.</param>
        <param name="values">데이터 요소와 해당 값을 나타내는 이름/값 쌍의 사전입니다.</param>
        <summary>지정된 명령을 실행합니다.</summary>
        <returns>작업의 영향을 받은 항목 수입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.ExecuteCommand (commandName, keys, values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="values" Type="System.Collections.IDictionary" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="commandName">명령 이름입니다.</param>
        <param name="keys">작업할 개체 키 또는 행 키의 사전입니다.</param>
        <param name="values">데이터 요소와 해당 값을 나타내는 이름/값 쌍의 사전입니다.</param>
        <param name="callback"><see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> 개체입니다.</param>
        <summary>지정된 명령을 실행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 값을 반환하지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> 작업으로 삭제할 개체 또는 행 키의 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />입니다.</param>
        <param name="oldValues">데이터 요소와 원래 값을 나타내는 이름/값 쌍의 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> 개체가 나타내는 데이터의 목록에서 삭제 작업을 수행합니다.</summary>
        <returns>내부 데이터 스토리지에서 삭제된 항목의 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩된 컨트롤을 확인할 수 있습니다 있는지 여부를 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 작업은 검색 하 여 데이터 소스 컨트롤에서 지원 합니다 <xref:System.Web.UI.DataSourceView> 를 사용 하 여 개체를 <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> 메서드를 검사를 <xref:System.Web.UI.DataSourceView.CanDelete%2A> 속성.  
  
 `keys` 매개 변수를 삭제 하는 데이터의 개체 또는 행 키를 나타냅니다. 와 같은 관계형 데이터를 나타내는 데이터 원본에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 `keys` 매개 변수는 데이터베이스 기본 키의 컬렉션입니다. 다른 시나리오의 경우에 `keys` 매개 변수 이름/값 쌍의 컬렉션 이며 데이터의 목록을 필터링 하는 데 사용 됩니다. 이름/값 쌍을 일치 하는 모든 데이터가 삭제 됩니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.DataSourceView> 클래스의 기본 구현은 throw 하는 것을 <xref:System.NotSupportedException> 예외입니다. <xref:System.Web.UI.DataSourceView> 클래스를 확장할 때 클래스가 기본 데이터 스토리지에서 삭제를 지원하는 경우 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 메서드를 재정의합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 방법을 확장 하는 클래스를 <xref:System.Web.UI.DataSourceView> 클래스에서 재정의할 수는 <xref:System.Web.UI.DataSourceView.CanDelete%2A> 속성 및 <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> 메서드. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.DataSourceView> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />가 <see cref="T:System.Web.UI.DataSourceView" /> 작업을 지원하지 않는 경우</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanDelete" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteInsert : System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">삽입 작업을 수행하는 동안 사용되는 이름/값 쌍의 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> 개체가 나타내는 데이터 목록에서 삽입 작업을 수행합니다.</summary>
        <returns>내부 데이터 스토리지에 삽입된 항목의 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩된 컨트롤을 확인할 수 있습니다 있는지 여부를 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 작업은 검색 하 여 데이터 소스 컨트롤에서 지원 합니다 <xref:System.Web.UI.DataSourceView> 를 사용 하 여 개체를 <xref:System.Web.UI.DataSourceControl.GetView%2A> 메서드를 검사를 <xref:System.Web.UI.DataSourceView.CanInsert%2A> 속성.  
  
 `values` 매개 변수는 데이터 열 또는 필드와 해당 값 삽입을 나타내는 이름/값 쌍의 집합입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.DataSourceView> 클래스의 기본 구현은 throw 하는 것을 <xref:System.NotSupportedException> 예외입니다. <xref:System.Web.UI.DataSourceView> 클래스를 확장할 때 클래스가 기본 데이터 스토리지에 삽입을 지원하는 경우 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 클래스를 재정의합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 방법을 확장 하는 클래스를 <xref:System.Web.UI.DataSourceView> 클래스에서 재정의할 수는 <xref:System.Web.UI.DataSourceView.CanInsert%2A> 속성 및 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 메서드. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.DataSourceView> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />가 <see cref="T:System.Web.UI.DataSourceView" /> 작업을 지원하지 않는 경우</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanInsert" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="dataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">데이터에 대해 기본 데이터 검색 이상의 작업을 요청하는 데 사용되는 <see cref="T:System.Web.UI.DataSourceSelectArguments" />입니다.</param>
        <summary>내부 데이터 스토리지에서 데이터 목록을 가져옵니다.</summary>
        <returns>내부 데이터 스토리지에서 가져온 데이터의 <see cref="T:System.Collections.IEnumerable" /> 목록입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 메서드는 내부 데이터 저장소에서 데이터를 검색 하 고 그대로 반환을 <xref:System.Collections.IEnumerable> 개체입니다. 모든 데이터 원본 컨트롤은 삽입 및 정렬과 같은 다른 작업이 지원되지 않더라도 기본 데이터 스토리지에서 데이터 검색을 지원합니다. 데이터 바인딩된 컨트롤을 언제 든 지의 결과로 데이터 목록을 요청할 수 있으므로 한 <xref:System.Web.UI.IDataSource.DataSourceChanged> 이벤트 또는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드 호출에서 요청 시 데이터 검색을 수행 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 확장 하는 클래스의 메서드는 <xref:System.Web.UI.DataSourceView> 클래스입니다. 합니다 `CsvDataSourceView` 쉼표로 구분 된 값 (.csv) 파일을 엽니다, 구문 분석 한 줄씩 만들고는 <xref:System.Data.DataTable> 개체 및 <xref:System.Data.DataView> 메모리에 데이터를 보관 하는 개체입니다. 제공 되는 경우는 정렬 식이 적용 되는 마지막으로, 합니다 <xref:System.Web.UI.DataSourceSelectArguments> 개체 및 <xref:System.Data.DataView> 가 반환 되는 개체는 <xref:System.Collections.IEnumerable> 인스턴스. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.DataSourceView> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">업데이트 작업으로 업데이트할 개체 또는 행 키의 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <param name="values">데이터 요소와 새 값을 나타내는 이름/값 쌍의 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <param name="oldValues">데이터 요소와 원래 값을 나타내는 이름/값 쌍의 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> 개체가 나타내는 데이터 목록에서 업데이트 작업을 수행합니다.</summary>
        <returns>내부 데이터 스토리지에서 업데이트된 항목의 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩된 컨트롤을 확인할 수 있습니다 있는지 여부를 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> 작업은 사용 하 여 데이터 소스 컨트롤에서 지원를 <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> 검색 하는 메서드를 <xref:System.Web.UI.DataSourceView> 개체의 값을 확인 하 고를 <xref:System.Web.UI.DataSourceView.CanUpdate%2A> 속성.  
  
 `keys` 매개 변수는 업데이트할 데이터의 개체 또는 행 키를 나타냅니다. 와 같은 관계형 데이터를 나타내는 데이터 원본에 대 한는 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 `keys` 매개 변수는 데이터베이스 기본 키의 컬렉션입니다. 다른 시나리오의 경우에 `keys` 매개 변수 이름/값 쌍의 컬렉션 이며 데이터의 목록을 필터링 하는 데 사용 됩니다. 이름/값 쌍을 일치 하는 모든 데이터에 있는 값으로 업데이트 됩니다는 `values` 매개 변수는 기존 필드 또는 열에 대 한 새 값을 나타내는 이름/값 쌍의 집합입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.DataSourceView> 클래스의 기본 구현은 throw 하는 것을 <xref:System.NotSupportedException> 예외입니다. <xref:System.Web.UI.DataSourceView> 클래스를 확장할 때 클래스가 기본 스토리지에 데이터를 업데이트할 수 있는 경우 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> 메서드를 재정의합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 방법을 확장 하는 클래스를 <xref:System.Web.UI.DataSourceView> 클래스에서 재정의할 수는 <xref:System.Web.UI.DataSourceView.CanUpdate%2A> 속성 및 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> 메서드. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.DataSourceView> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />가 <see cref="T:System.Web.UI.DataSourceView" /> 작업을 지원하지 않는 경우</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanUpdate" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Insert (values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="values">삽입 작업을 수행하는 동안 사용되는 이름/값 쌍의 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <param name="callback">비동기 작업이 완료되면 이를 데이터 바인딩된 컨트롤에 알리는 데 사용되는 <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> 대리자입니다.</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> 개체가 나타내는 데이터 목록에서 비동기 삽입 작업을 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Insert%2A> 메서드는 비동기 데이터 삽입 인터페이스 모든 데이터 원본 뷰 개체입니다. 합니다 <xref:System.Web.UI.DataSourceView.Insert%2A> 메서드 호출을 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 메서드를 사용 하 여 `values` 제공 합니다. `callback` 매개 변수는 데이터 바인딩된 컨트롤을 데이터 원본에 전달 하는 대리자 데이터 바인딩된 알리는 데 사용 되는 뷰를 제어 합니다 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 작업이 완료 합니다. 매개 변수를 사용 하는 메서드를 <xref:System.Web.UI.DataSourceViewOperationCallback> 와 영향을 받은 레코드 수를 반환 하는 대리자 <xref:System.Exception> 에 의해 throw 되는 예외는 <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> 메서드 호출 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">제공된 <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />이 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.DataSourceView.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>소스 데이터 뷰의 이름을 가져옵니다.</summary>
        <value>지정된 경우 <see cref="T:System.Web.UI.DataSourceView" />의 이름입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : EventArgs -&gt; unit" Usage="dataSourceView.OnDataSourceViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> 메서드 알리고 데이터 바인딩된 컨트롤을 데이터 원본 변경 된 컨트롤 다시 바인딩하고 필요한 작업을 수행 해야 합니다. 일반적으로 <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> 데이터 원본 뷰의 속성이 변경 되 면 호출 됩니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="abstract member RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit&#xA;override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="dataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">뷰가 지원하는 기능과 비교되는 <see cref="T:System.Web.UI.DataSourceCapabilities" /> 값 중 하나입니다.</param>
        <summary><see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> 작업을 위해 요청한 기능과 뷰가 지원하는 기능을 비교하기 위해 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 메서드에 의해 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%2A> 메서드는 데이터 원본 뷰에서 데이터 바인딩된 컨트롤을 나타내는 요청한 기능을 각각 검사를 사용 합니다 <xref:System.Web.UI.DataSourceSelectArguments> 에 전달 된 개체는 <xref:System.Web.UI.DataSourceView.Select%2A> 메서드와 데이터가 지 원하는 기능에 해당 하는 비교 소스 보기입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">데이터 소스 뷰가 지정된 데이터 소스 기능을 지원하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(class System.Web.UI.DataSourceSelectArguments arguments, class System.Web.UI.DataSourceViewSelectCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (arguments As DataSourceSelectArguments, callback As DataSourceViewSelectCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Web::UI::DataSourceSelectArguments ^ arguments, System::Web::UI::DataSourceViewSelectCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit&#xA;override this.Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit" Usage="dataSourceView.Select (arguments, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewSelectCallback" />
      </Parameters>
      <Docs>
        <param name="arguments">데이터에 대해 기본 데이터 검색 이상의 작업을 요청하는 데 사용되는 <see cref="T:System.Web.UI.DataSourceSelectArguments" />입니다.</param>
        <param name="callback">비동기 작업이 완료되면 이를 데이터 바인딩된 컨트롤에 알리는 데 사용되는 <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> 대리자입니다.</param>
        <summary>내부 데이터 스토리지에서 비동기적으로 데이터 목록을 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Select%2A> 메서드는 비동기 데이터 검색 인터페이스 모든 데이터 원본 뷰 개체입니다. 합니다 <xref:System.Web.UI.DataSourceView.Select%2A> 메서드 호출을 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 메서드를 전달 하는 모든 <xref:System.Web.UI.DataSourceSelectArguments> 제공 합니다. `callback` 매개 변수는 데이터 바인딩된 컨트롤을 데이터 원본에 전달 하는 대리자 데이터 바인딩된 알리는 데 사용 되는 뷰를 제어 합니다 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 작업이 완료 합니다. 반환한 데이터를 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> 의 매개 변수에서 호출 되는 <xref:System.Web.UI.DataSourceViewSelectCallback> 대리자.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">제공된 <see cref="T:System.Web.UI.DataSourceViewSelectCallback" />이 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewSelectCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Update (keys, values, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">업데이트 작업으로 업데이트할 개체 또는 행 키의 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <param name="values">데이터 요소와 새 값을 나타내는 이름/값 쌍의 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <param name="oldValues">데이터 요소와 원래 값을 나타내는 이름/값 쌍의 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <param name="callback">비동기 작업이 완료되면 이를 데이터 바인딩된 컨트롤에 알리는 데 사용되는 <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> 대리자입니다.</param>
        <summary><see cref="T:System.Web.UI.DataSourceView" /> 개체가 나타내는 데이터 목록에서 비동기 업데이트 작업을 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Update%2A> 메서드는 비동기 데이터 수정 인터페이스 모든 데이터 원본 뷰 개체입니다. 합니다 <xref:System.Web.UI.DataSourceView.Update%2A> 메서드 호출을 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> 메서드를 사용 하 여 `keys`, `values`, 및 `oldValues` 제공 된 매개 변수 값입니다. `callback` 매개 변수는 데이터 바인딩된 컨트롤을 데이터 원본에 전달 하는 대리자 데이터 바인딩된 알리는 데 사용 되는 뷰를 제어 합니다 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> 작업이 완료 합니다. 매개 변수를 사용 하는 메서드를 <xref:System.Web.UI.DataSourceViewOperationCallback> 와 영향을 받은 레코드 수를 반환 하는 대리자 <xref:System.Exception> 에 의해 throw 되는 예외는 <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> 호출 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">제공된 <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />이 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>