<Type Name="HierarchicalDataSourceView" FullName="System.Web.UI.HierarchicalDataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="12561da0f0928a79c4ec483ae5b166609f0cb077" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39990807" /></Metadata><TypeSignature Language="C#" Value="public abstract class HierarchicalDataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HierarchicalDataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HierarchicalDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HierarchicalDataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataSourceView abstract" />
  <TypeSignature Language="F#" Value="type HierarchicalDataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> 컨트롤에 대한 계층적 데이터 구조의 노드 또는 노드 컬렉션에 데이터 뷰를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 데이터 바인딩 및 일관 된 방식으로 제공 하려면 웹 서버 컨트롤을 사용 하도록 설정 하는 데이터 바인딩 아키텍처를 지원 합니다. 데이터에 바인딩되는 웹 서버 컨트롤에 데이터 바인딩된 컨트롤 이라고 합니다. 및 해당 바인딩을 활용 하는 클래스는 데이터 소스 컨트롤 이라고 합니다. 데이터 소스 컨트롤에서 모든 데이터 소스를 나타낼 수 있습니다: 파일, 스트림, 관계형 데이터베이스, 비즈니스 개체 및 등입니다. 데이터 소스 컨트롤에서 소스 나 기본 데이터의 형식에 관계 없이 데이터 바인딩된 컨트롤에 일관 된 방식으로 데이터를 제공 합니다.  
  
 데이터 소스 컨트롤 계층적 데이터를 나타내는 추상에서 파생 <xref:System.Web.UI.HierarchicalDataSourceControl> 클래스입니다. 데이터 소스 컨트롤이 데이터 소스 컨트롤 개체와 연결된 된 뷰의 데이터 원본 뷰 개체에 의해 표현 되는 기본 데이터의 조합으로 생각할 수 있습니다. 계층적 데이터 소스 컨트롤에는 이들이 나타내는 데이터의 각 계층 수준에 대 한 계층적 데이터 원본 뷰를 지원 합니다. 데이터 원본 뷰 이름이 지정 되지 않은, 같은 합니다 <xref:System.Web.UI.DataSourceView> 와 연결 된 개체는 <xref:System.Web.UI.DataSourceControl> 컨트롤 있지만 고유한 계층 경로 의해 식별 됩니다.  
  
 데이터 원본 뷰는 데이터 소스 컨트롤의 기능을 정의 합니다. 모든 데이터 원본 뷰 개체를 포함 하 여 <xref:System.Web.UI.HierarchicalDataSourceView>를 사용 하 여 기본 데이터 원본에서 데이터 검색을 지원 합니다 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> 데이터의 계층적 목록을 검색 하는 메서드를는 <xref:System.Web.UI.IHierarchicalEnumerable> 개체입니다. 모든 데이터 원본 뷰 개체와 같은 작업을 비롯 한 기능의 기본 집합을 필요에 따라 지원 <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>, 및 정렬 합니다. 데이터 바인딩된 컨트롤을 사용 하 여 연결된 된 데이터 소스를 검색 하 여 데이터 소스 컨트롤의 기능 보기를 검색할 수는 <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> 메서드 및 디자인 타임 또는 런타임 시 뷰를 쿼리 합니다. <xref:System.Web.UI.HierarchicalDataSourceView> 현재 지원 하지 않습니다 <xref:System.Web.UI.DataSourceView.Insert%2A>하십시오 <xref:System.Web.UI.DataSourceView.Update%2A> 또는 <xref:System.Web.UI.DataSourceView.Delete%2A> 작업 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.HierarchicalDataSourceView> 클래스에서 클래스를 파생시켜 계층적 데이터 스토리지(이 경우 파일 시스템)에서 데이터를 검색하는 방법을 보여줍니다. 합니다 `FileSystemDataSourceView` 클래스는 강력한 형식의 <xref:System.Web.UI.HierarchicalDataSourceView> 와 같은 웹 서버 컨트롤 계층 구조를 사용 하도록 설정 하는 인스턴스는 <xref:System.Web.UI.WebControls.TreeView> 컨트롤을 바인딩할는 `FileSystemDataSource` 제어 하 고 파일 시스템 정보를 표시 합니다. 보안상의 이유로 파일 시스템 정보의 데이터 소스 컨트롤 localhost에서 사용 중인 경우에 표시 됩니다, 시나리오에서는 인증 및 데이터 소스 컨트롤을 사용 하 여 Web Forms 페이지에 있는 가상 디렉터리에만 시작 됩니다. 그렇지 않은 경우는 `viewPath` 생성자에 전달 된 매개 변수는 현재 파일 시스템 경로 기준으로 보기를 만드는 데 사용할 수 있습니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.HierarchicalDataSourceControl> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>상속 하는 경우 <see cref="T:System.Web.UI.HierarchicalDataSourceView" />, 다음 멤버를 재정의 해야 합니다: <see cref="M:System.Web.UI.HierarchicalDataSourceView.Select" />합니다.</para></block>
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HierarchicalDataSourceView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HierarchicalDataSourceView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.HierarchicalDataSourceView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public abstract System.Web.UI.IHierarchicalEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.Select" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Select () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::UI::IHierarchicalEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="abstract member Select : unit -&gt; System.Web.UI.IHierarchicalEnumerable" Usage="hierarchicalDataSourceView.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>뷰의 모든 데이터 항목에 대한 목록을 가져옵니다.</summary>
        <returns>데이터 항목의 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> 메서드가 반환 되는 <xref:System.Web.UI.IHierarchicalEnumerable> 현재 보기에서 데이터 항목의 컬렉션입니다. 호출할 수 있습니다 합니다 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 메서드를는 <xref:System.Collections.IEnumerator> 개체 및 데이터 항목의 컬렉션을 반복 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> 에서 파생 된 클래스에서 메서드를 <xref:System.Web.UI.HierarchicalDataSourceView> 계층적 검색할 클래스 <xref:System.IO.FileSystemInfo> 파일 시스템에서 데이터. 보안상의 이유로 파일 시스템 정보의 데이터 소스 컨트롤 localhost에서 사용 중인 경우에 표시 됩니다, 시나리오에서는 인증 및 데이터 소스 컨트롤을 사용 하 여 Web Forms 페이지에 있는 가상 디렉터리에만 시작 됩니다. 그렇지 않은 경우는 `viewPath` 뷰 개체의 생성자에 전달 된 매개 변수는 현재 파일 시스템 경로 기준으로 보기를 만드는 데 사용할 수 있습니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.HierarchicalDataSourceControl> 클래스입니다.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
      </Docs>
    </Member>
  </Members>
</Type>