<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e671a0a3bc5d5304607355a02154bfbacb8a32e7" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51872070" /></Metadata><TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableTemplate&#xA;Implements ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableTemplate : System::Web::UI::ITemplate" />
  <TypeSignature Language="F#" Value="type IBindableTemplate = interface&#xA;    interface ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.DetailsView" /> 및 <see cref="T:System.Web.UI.WebControls.FormView" />와 같은 데이터 바인딩된 ASP.NET 컨트롤이 템플릿 내용 섹션에서 ASP.NET 데이터 소스 컨트롤에 자동으로 바인딩할 수 있도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.IBindableTemplate> 인터페이스를 통해 ASP.NET 데이터 바인딩된 컨트롤에 대 한 같은 <xref:System.Web.UI.WebControls.DetailsView>를 <xref:System.Web.UI.WebControls.GridView>, 및 <xref:System.Web.UI.WebControls.FormView>와 같은 ASP.NET 데이터 소스 컨트롤에서 제공 하는 데이터에 바인딩할 <xref:System.Web.UI.WebControls.ObjectDataSource> 또는 <xref:System.Web.UI.WebControls.SqlDataSource>경우는 데이터 바인딩된 컨트롤에는 템플릿 기반 콘텐츠가 포함 됩니다.  
  
> [!NOTE]
>  페이지 개발자가 구현 하지 않습니다는 <xref:System.Web.UI.IBindableTemplate> 인터페이스입니다. 사용자 지정 데이터 바인딩된 컨트롤을 만드는 개발자를 조작할 수 있습니다 <xref:System.Web.UI.IBindableTemplate> 의 구현에서 개체를 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 하 고 <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> 메서드를 구현 하지는 않습니다 자신의 <xref:System.Web.UI.IBindableTemplate> 개체.  
  
 와 같은 데이터 바인딩된 컨트롤 <xref:System.Web.UI.WebControls.GridView> 일반적으로 해당 자식 컨트롤 트리의 인식 수 있으므로 값을 바인딩하고에서 값을 추출 및 데이터 바인딩이 발생할 때마다 데이터 바인딩된 컨트롤과 데이터 소스 컨트롤 간의 이러한 값을 전달 . 그러나 페이지 개발자는 데이터 바인딩된 컨트롤에 대 한 템플릿 기반 콘텐츠를 정의 하는 경우 템플릿 내에서 자식 컨트롤에 표시 되지 않습니다 데이터 바인딩된 부모 컨트롤이: 부모는 자식 렌더링할 수 있습니다 (컨트롤 자체에 효과적으로 렌더링) 때문에 콘텐츠를 하지만 연결 된 데이터 소스 컨트롤의 업데이트, 삽입 또는 삭제 작업에 전달할 이러한 자식 컨트롤의 값을 추출할 수 없습니다. 데이터 바인딩 시나리오에서 템플릿 기반 콘텐츠는 부모 데이터 바인딩된 컨트롤에 불투명 합니다. 합니다 `Bind` 구문을 사용 하면 데이터 바인딩된 컨트롤 내에서 데이터 바인딩된 컨트롤에서 값을 추출 하는 <xref:System.Web.UI.IBindableTemplate> 인스턴스.  
  
 단방향 또는 양방향 데이터 바인딩을 수 있습니다. (이러한 바인딩 방향은 정의한는 <xref:System.ComponentModel.BindingDirection> 열거형입니다.) 단방향 데이터 바인딩을 데이터 바인딩된 컨트롤을 데이터 소스 컨트롤에서 아웃 바운드 방향, 수행 된 모든 데이터 바인딩 예를 들어, 모든 데이터 읽기 시나리오에는 단방향 데이터 바인딩을 포함합니다. 단방향 데이터 바인딩에 대 한 단방향 데이터 바인딩 구문을 사용할 수 있습니다 (`<%# Eval("fieldname") %>`) 내 템플릿 내용에서 양방향 ASP.NET 데이터 바인딩 구문을 사용 하 여 필요 하지 않습니다. 양방향 데이터 바인딩을 데이터 바인딩된 데이터 소스 컨트롤에 데이터 바인딩된 컨트롤에서 인바운드 방향의 설명합니다. 자동 편집, 삽입 및 삭제 시나리오 ASP.NET을 사용 하 여 데이터 바인딩 및 데이터 소스 컨트롤은 양방향 데이터 바인딩 시나리오입니다. 이러한 시나리오에서는 양방향 데이터 바인딩 식 (`<%# Bind("fieldname") %>`). <xref:System.Web.UI.IBindableTemplate> 인터페이스와 ASP.NET 인프라 ASP.NET 데이터 소스 컨트롤에서 템플릿 내용 사이의 자동 높고 선언적 이며 양방향 데이터 바인딩을 지원 합니다. ASP.NET 데이터 바인딩 식 및 구문에 대 한 자세한 내용은 참조 하세요. [데이터베이스를 바인딩할](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) 하 고 [데이터 바인딩 식을 개요](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)합니다.  
  
 데이터 바인딩된 컨트롤에 대 한 템플릿 내용 대부분 선언적으로 정의 됩니다. 다음 표에서 가장 일반적으로 템플릿 데이터를 데이터 바인딩된 컨트롤에 바인딩하는 데 사용 하는 프로세스를 설명 합니다.  
  
|데이터 바인딩된 컨트롤|프로세스|  
|-------------------------|-------------|  
|<xref:System.Web.UI.WebControls.DetailsView>|데이터 바인딩된 컨트롤을 사용 하 여 데이터에 바인딩된 합니다 `DataSourceID` 템플릿 내용 및 데이터 소스 컨트롤의 속성에 정의 된를 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>를 <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> 또는 <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> 속성입니다.|  
|<xref:System.Web.UI.WebControls.GridView>|데이터 바인딩된 컨트롤을 사용 하 여 데이터에 바인딩된 합니다 `DataSourceID` 템플릿 내용 및 데이터 소스 컨트롤의 속성에 정의 된를 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> 또는 <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> 속성입니다. <xref:System.Web.UI.WebControls.GridView> 컨트롤 삽입 작업을 지원 하지 않습니다.|  
|<xref:System.Web.UI.WebControls.FormView>|데이터 바인딩된 컨트롤을 사용 하 여 데이터에 바인딩되어를 `DataSourceID` 속성 및 템플릿 내용에 정의 된는 <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>, 또는 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> 속성 또는 <xref:System.Web.UI.WebControls.TemplateField> 개체입니다.|  
  
 합니다 <xref:System.Web.UI.WebControls.DataList> 고 <xref:System.Web.UI.WebControls.Repeater> 컨트롤 자동 양방향 데이터 바인딩 시나리오를 지원 하지 않습니다.  
  
 ASP.NET이 암시적으로 생성 하는 <xref:System.Web.UI.IBindableTemplate> 템플릿 내에서 ASP.NET 데이터 소스 컨트롤에 바인딩되는 템플릿 기반 콘텐츠 구문 분석 하는 개체입니다. ASP.NET 파서의 인스턴스를 만들고 특히는 <xref:System.Web.UI.CompiledBindableTemplateBuilder> ASP.NET 데이터 바인딩 구문을 사용 하 고 데이터 바인딩을 지 원하는 ASP.NET 웹 서버 컨트롤을 포함 하는 템플릿 콘텐츠를 구문 분석할 때 클래스입니다. 이러한 ASP.NET 서버 컨트롤에서 표시 되는 <xref:System.ComponentModel.BindableAttribute> 특성입니다.  
  
 합니다 <xref:System.Web.UI.IBindableTemplate> 인터페이스 메서드를 정의 <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>합니다. 이 메서드는 자동으로 템플릿 내용에서 이름/값 쌍을 추출 하 고 런타임에 데이터 소스 컨트롤 쌍을 전달할 수 데이터 바인딩된 컨트롤을 양방향 데이터 바인딩을 위한 정의 됩니다. 자동 데이터 바인딩에 성공 하려면에 대 한 필드 이름은 템플릿 내용에서 추출 된 <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> 메서드는 연결 된 데이터 소스 컨트롤의 매개 변수 이름은 일치 해야 합니다. 개발자 호출을 제어 합니다 <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> 메서드 명시적으로의 구현이 <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> 또는 사용자 지정 데이터 바인딩된 컨트롤의 다른 유사 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 어떻게를 <xref:System.Web.UI.WebControls.FormView> 제어 선언적으로 템플릿 내용 정의 제공한 데이터를 바인딩할를 <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤을 표시 하 고 기존 레코드를 편집 합니다. ASP.NET 파서 템플릿 콘텐츠를 구문 분석 하 고 만듭니다는 <xref:System.Web.UI.IBindableTemplate> 의 값을 바인딩할 수 있는 런타임 시 개체는 <xref:System.Web.UI.WebControls.SqlDataSource> 모두 단방향 ASP.NET 데이터 바인딩 구문을 사용 하 여 템플릿에 정의 된 데이터 바인딩 영역 컨트롤 (`<%# Eval("fieldname") %>`) 및 양방향 데이터 바인딩을 구문 (`<%# Bind("fieldname") %>`).  
  
> [!IMPORTANT]
>  이 컨트롤은 잠재적 보안 위협에는 사용자 입력을 허용 하는 텍스트 상자를 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtractValues (container As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ ExtractValues(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member ExtractValues : System.Web.UI.Control -&gt; System.Collections.Specialized.IOrderedDictionary" Usage="iBindableTemplate.ExtractValues container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">데이터 바인딩된 컨트롤이 양방향 데이터 바인딩 시나리오에서 연결된 데이터 소스 컨트롤에 전달하는 이름/값 쌍을 추출할 <see cref="T:System.Web.UI.Control" />입니다.</param>
        <summary>클래스에 의해 구현될 때 템플릿 내용에서 양방향 ASP.NET 데이터 바인딩 구문을 사용하여 바인딩된 값의 이름/값 쌍 집합을 검색합니다.</summary>
        <returns>이름/값 쌍의 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />입니다. 이름은 템플릿 내용에 있는 컨트롤의 이름을 나타내고 값은 양방향 ASP.NET 데이터 바인딩 구문을 사용하여 바인딩된 속성 값의 현재 값입니다.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> 메서드는 다음 규칙을 따라야 합니다. 
-지정된 된 필드에 대 한 둘 이상의 바인딩이 있는 경우 발생 하는 마지막 바인딩이 사용 됩니다.  
  
-를 순서 대로 컨트롤의 식별자를 참조 합니다 <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> 메서드 컨트롤 있어야 사용자 정의 ID 속성을 구문 분석 시. ID가 없으면이 구문 분석 오류가 발생 합니다.  
  
-양방향 ASP.NET 데이터 바인딩 구문을에 유효는 <see cref="T:System.Web.UI.ITemplate" /> 또는 <see cref="T:System.Web.UI.IBindableTemplate" /> 데이터 바인딩된 컨트롤의 속성입니다.</para></block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>