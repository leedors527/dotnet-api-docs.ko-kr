<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fd0e63154b3f5a2354970a96bf74345816e7be7" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51901515" /></Metadata><TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <TypeSignature Language="F#" Value="type ICallbackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>컨트롤이 서버에 대한 콜백 이벤트 대상이 될 수 있음을 나타내는 데 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구현 된 <xref:System.Web.UI.ICallbackEventHandler> 콜백 이벤트를 수신 해야 하는 모든 사용자 지정 컨트롤에 대 한 인터페이스입니다. 자세한 내용은 [포스트백 없이 클라이언트 콜백 구현](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)합니다.  
  
 구현 하는 컨트롤의 예는 <xref:System.Web.UI.ICallbackEventHandler> 인터페이스를 포함 합니다 <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.TreeView> 컨트롤입니다. 콜백 이벤트를 구현 하는 컨트롤을 대상으로 하는 경우는 <xref:System.Web.UI.ICallbackEventHandler> 인터페이스를 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 메서드를 호출 하는 이벤트 인수를 매개 변수로 전달 하 고 이벤트를 처리 및 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 메서드 콜백의 결과 반환 합니다.  
  
 데이터 소스 컨트롤에서 콜백 하는 동안 데이터를 검색 하는 컨트롤 동기적 또는 비동기적으로 수행할 수 있습니다. 같은 ASP.NET 컨트롤 <xref:System.Web.UI.WebControls.GridView>하십시오 <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.TreeView> 동기적으로 구현 됩니다. 동기 콜백을 사용 해도 사용자 브라우저에서 작동 합니다. 동기 모드에서 한 번에 하나만 콜백 우선 마지막 콜백을 사용 하 여 실행할 수 있습니다. 웹 컨트롤의 비동기 동작을 지원 하기 위해 구현 될 때 여러 콜백을 동시에 발생할 수 있습니다. 비동기 프로그래밍에 대 한 자세한 내용은 참조 하세요 [이벤트 기반 비동기 패턴 (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)합니다.  
  
 사용자 인터페이스에서 발생 하는 콜백 이벤트는 컨트롤을 구현 하 여 렌더링 되는지 여부를 지정할 수 있습니다는 <xref:System.Web.UI.ICallbackEventHandler> 인터페이스에 유효성을 검사 합니다. 이벤트의 유효성 검사는 좋은 보안 방법입니다. 그러나 성능상의 이유로 비활성화할 수 있습니다. 제어 이벤트 유효성 검사 수행 되는지 여부 콜백 이벤트에 설정 합니다는 `enableEventValidation` 특성을 [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) 지시문 또는 `enableEventValidation` 특성은 [pages 요소 (ASP.NET 설정 스키마)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) Web.config 파일입니다. 설정 하는 경우는 <xref:System.Web.UI.Page.EnableEventValidation%2A> 코드에서 속성 설정는 `Page_Init` 페이지 처리의 단계입니다. 성능 저하를 사용 하 여 이벤트 유효성 검사의 보안 이점은 부하 분산에 대 한 자세한 내용은 참조 하세요. [ASP.NET 성능 개요](https://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b)합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string" Usage="iCallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤을 대상으로 하는 콜백 이벤트의 결과를 반환합니다.</summary>
        <returns>콜백의 결과입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 throw 된 예외 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 해도 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 호출 되 고 결과 반환 합니다. 방지 하기 위해 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 예외가 throw 되 면 결과 반환 하는, 플래그를 설정 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 에서 빈 문자열을 반환 하 고 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit" Usage="iCallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">이벤트 처리기에 전달할 이벤트 인수를 나타내는 문자열입니다.</param>
        <summary>컨트롤을 대상으로 하는 콜백 이벤트를 처리합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 `null` 는 이벤트 인수 매개 변수로 문자열 "null" 및 전송 서버 다시 serialize 됩니다. 구별할 수 없기 때문에 `null` 및 "null"을 사용 하면 안 `null` 콜백 사용 하 여 인수 매개 변수입니다.  
  
 throw 된 예외 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 해도 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 호출 되 고 결과 반환 합니다. 방지 하기 위해 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> 예외가 throw 되 면 결과 반환 하는, 플래그를 설정 <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> 에서 빈 문자열을 반환 하 고 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>