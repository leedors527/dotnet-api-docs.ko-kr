<Type Name="IExtenderControl" FullName="System.Web.UI.IExtenderControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad1156ff94cdbef7464177fd4447fee7c21f35b8" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37588240" /></Metadata><TypeSignature Language="C#" Value="public interface IExtenderControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtenderControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IExtenderControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtenderControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExtenderControl" />
  <TypeSignature Language="F#" Value="type IExtenderControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Extender 컨트롤의 동작을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 되는 extender 컨트롤을 <xref:System.Web.UI.ExtenderControl> 클래스 필요를 <xref:System.Web.UI.ScriptManager> 컨트롤 페이지의 수입니다. <xref:System.Web.UI.ExtenderControl> 있는지 명시적 테스트를 수행 하는 기본 클래스를 <xref:System.Web.UI.ScriptManager> 컨트롤을 페이지에 있습니다.  
  
 그러나 extender 컨트롤 및 페이지를 만들려고 할 수 없으면 프로그램 <xref:System.Web.UI.ScriptManager> 컨트롤을 구현 하는 클래스를 만들 수 있습니다는 <xref:System.Web.UI.IExtenderControl> 인터페이스를 직접. 또한에서 파생 된 클래스를 만드는 경우 <xref:System.Web.UI.Control> 에서 파생 되는 기존 컨트롤을 확장 하려는 <xref:System.Web.UI.Control>를 구현할 수 있습니다는 <xref:System.Web.UI.IExtenderControl> 클라이언트 기능을 지 원하는 인터페이스입니다.  
  
 <xref:System.Web.UI.IExtenderControl> 인터페이스를 호출 하 여 컨트롤에 대 한 스크립트 라이브러리를 등록 합니다 <xref:System.Web.UI.IExtenderControl.GetScriptReferences%2A> 메서드를 등록 <xref:System.Web.UI.ScriptDescriptor> 호출 하 여 개체를 <xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A> 메서드. 합니다 <xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A> 메서드가 반환 되는 <xref:System.Collections.IEnumerable> 목록을 <xref:System.Web.UI.ScriptDescriptor> 개체입니다.  
  
> [!NOTE]
>  파생 되는 기존 컨트롤 형식을 확장 하는 경우는 <xref:System.Web.UI.WebControls.WebControl> 클래스에서 구현 된 <xref:System.Web.UI.IScriptControl> 인터페이스.  
  
 구현 하 여 extender 컨트롤을 만들려면 <xref:System.Web.UI.IExtenderControl>, 다음을 수행 합니다.  
  
-   컨트롤에 대 한 코드를 작성할 `OnInit` 이벤트를 감지 하 고 사용을 <xref:System.Web.UI.ScriptManager> 페이지의 사용 가능한 경우를 제어 합니다.  
  
-   경우는 <xref:System.Web.UI.ScriptManager> 페이지에서 사용할 수 없는의 정적 메서드를 호출 하 여 필요한 스크립트를 등록 하려면 대체 방법을 제공 합니다 <xref:System.Web.UI.ScriptManager> 클래스입니다.  
  
-   보호 된 가상 멤버에 대 한 제공 <xref:System.Web.UI.IExtenderControl> 멤버입니다.  
  
-   인스턴스 스크립트를 사용 하 여 등록 하는 스크립트 블록으로 제공 된 <xref:System.Web.UI.ScriptManager> 제어 합니다. 컨트롤의 하는 동안이 작업을 수행 해야 합니다 `PreRender`, `PreRenderComplete`, 또는 `Render` 이벤트입니다.  
  
-   스크립트 설명자를 제어 하는 동안 등록 `Render` 이벤트입니다.  
  
> [!NOTE]
>  페이지에 있는 경우는 <xref:System.Web.UI.UpdatePanel> 컨트롤을 페이지를 포함 해야 합니다는 <xref:System.Web.UI.ScriptManager> 제어 합니다. 구현 해야 합니다는 <xref:System.Web.UI.IExtenderControl> 페이지에 없는 경우에 인터페이스는 <xref:System.Web.UI.ScriptManager> 컨트롤입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ExtenderControl" />
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName="GetScriptDescriptors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors (System.Web.UI.Control targetControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors(class System.Web.UI.Control targetControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IExtenderControl.GetScriptDescriptors(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScriptDescriptors (targetControl As Control) As IEnumerable(Of ScriptDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ GetScriptDescriptors(System::Web::UI::Control ^ targetControl);" />
      <MemberSignature Language="F#" Value="abstract member GetScriptDescriptors : System.Web.UI.Control -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;" Usage="iExtenderControl.GetScriptDescriptors targetControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="targetControl">extender가 연결된 서버 컨트롤입니다.</param>
        <summary>컨트롤에 대한 <see cref="T:System.Web.UI.ScriptDescriptor" /> 개체를 등록하고 컨트롤에 대한 <see cref="T:System.Web.UI.ScriptDescriptor" /> 개체가 들어 있는 개체를 반환합니다.</summary>
        <returns><see cref="T:System.Collections.IEnumerable" /> 개체가 들어 있는 <see cref="T:System.Web.UI.ScriptDescriptor" /> 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IExtenderControl.GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScriptReferences () As IEnumerable(Of ScriptReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ GetScriptReferences();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;" Usage="iExtenderControl.GetScriptReferences " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤에 대한 스크립트 라이브러리를 등록하고 포함된 리소스로 등록된 ECMAScript(JavaScript) 파일의 열거형을 반환합니다.</summary>
        <returns>포함된 리소스로 등록된 JavaScript 파일이 들어 있는 <see cref="T:System.Collections.IEnumerable" /> 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>