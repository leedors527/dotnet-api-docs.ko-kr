<Type Name="ITemplate" FullName="System.Web.UI.ITemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cea67368caf9d5712f85e68bd85e4251d76cd188" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37531106" /></Metadata><TypeSignature Language="C#" Value="public interface ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ITemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITemplate" />
  <TypeSignature Language="F#" Value="type ITemplate = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>템플릿 기반 ASP.NET 서버 컨트롤을 자식 컨트롤로 채우는 동작을 정의합니다. 자식 컨트롤은 페이지에 정의된 인라인 템플릿을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스는 사용자 지정 서버 컨트롤에서 사용 하는 이지만 이들에 의해 구현 되지 않습니다. ASP.NET 항상 구현 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 간단한 템플릿 기반 서버 컨트롤의 <xref:System.Web.UI.ITemplate> 템플릿 속성을 만들려면 인터페이스입니다.  
  
 [!code-csharp[Classic ITemplate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ITemplate Example/CS/source.cs#1)]
 [!code-vb[Classic ITemplate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ITemplate Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName="InstantiateIn">
      <MemberSignature Language="C#" Value="public void InstantiateIn (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstantiateIn(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstantiateIn (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstantiateIn(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member InstantiateIn : System.Web.UI.Control -&gt; unit" Usage="iTemplate.InstantiateIn container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">인라인 템플릿의 컨트롤 인스턴스가 들어 있는 <see cref="T:System.Web.UI.Control" /> 개체입니다.</param>
        <summary>클래스에서 구현될 때, 자식 컨트롤 및 템플릿이 속해 있는 <see cref="T:System.Web.UI.Control" /> 개체를 정의합니다. 그러면 이 자식 컨트롤이 인라인 템플릿에 정의됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 템플릿 기반 서버 컨트롤을 개발할 때 필요가 없습니다;이 메서드를 구현 .NET Framework의 구현을 제공합니다.  
  
   
  
## Examples  
 [!code-csharp[ITemplate_Interface#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ITemplate_Interface/CS/itemplate.cs#2)]
 [!code-vb[ITemplate_Interface#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ITemplate_Interface/VB/itemplate.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
  </Members>
</Type>