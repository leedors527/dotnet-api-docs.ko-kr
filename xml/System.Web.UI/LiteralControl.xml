<Type Name="LiteralControl" FullName="System.Web.UI.LiteralControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5123e5f83197dd645edb171651a885147f59154b" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55345370" /></Metadata><TypeSignature Language="C#" Value="public class LiteralControl : System.Web.UI.Control, System.Web.UI.ITextControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LiteralControl extends System.Web.UI.Control implements class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.LiteralControl" />
  <TypeSignature Language="VB.NET" Value="Public Class LiteralControl&#xA;Inherits Control&#xA;Implements ITextControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class LiteralControl : System::Web::UI::Control, System::Web::UI::ITextControl" />
  <TypeSignature Language="F#" Value="type LiteralControl = class&#xA;    inherit Control&#xA;    interface ITextControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>HTML 요소, 텍스트 및 서버에서 처리하지 않아도 되는 ASP.NET 페이지의 다른 모든 문자열을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET는 모든 HTML 요소와이 클래스의 인스턴스를 서버 쪽 처리가 필요 하지 않습니다는 읽을 수 있는 텍스트를 컴파일합니다. 예를 들어, HTML 요소를 포함 하지 않는 한 `runat="server"` 특성/값 쌍의 여는 태그에서 컴파일될를 <xref:System.Web.UI.LiteralControl> 개체. <xref:System.Web.UI.LiteralControl> 개체 상태 보기를 따라서 유지 하지 않는 내용의 <xref:System.Web.UI.LiteralControl> 각 요청에 개체를 만들어야 합니다.  
  
 리터럴 컨트롤 동작을 리터럴 컨트롤에서 텍스트를 추출 하 고 부모 서버 컨트롤의 리터럴 컨트롤을 제거할 수 있는 의미 <xref:System.Web.UI.ControlCollection> 부모의 컬렉션 <xref:System.Web.UI.Control.Controls%2A> 속성입니다. 따라서에서 파생 된 사용자 지정 컨트롤을 개발 하는 하는 <xref:System.Web.UI.LiteralControl> 클래스에 대 한 호출을 사용 하는 대신 자체 단계를 전처리 하는 데 필요한 모든 컨트롤 수행 해야 합니다는 <xref:System.Web.UI.LiteralControl.Render%2A?displayProperty=nameWithType> 작업을 수행 하는 메서드. 일반적으로 이렇게 하려면 웹 애플리케이션의 응답 시간을 개선 하도록 합니다.  
  
 추가 하거나 프로그래밍 방식으로 사용 하는 페이지 또는 서버 컨트롤에서 리터럴 컨트롤을 제거할 수 있습니다 합니다 <xref:System.Web.UI.ControlCollection.Add%2A?displayProperty=nameWithType> 또는 <xref:System.Web.UI.ControlCollection.Remove%2A?displayProperty=nameWithType> 메서드를 각각.  
  
   
  
## Examples  
 다음 코드 예제에서는 오버 로드 된를 사용 하는 방법을 보여 줍니다 <xref:System.Web.UI.LiteralControl.%23ctor%2A> 재정의 하는 경우 생성자는 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> 메서드. 코드를 추가 하는 두 개의 새 <xref:System.Web.UI.LiteralControl> 개체와 <xref:System.Web.UI.WebControls.TextBox> 웹 서버 컨트롤 현재 서버 컨트롤을 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 속성입니다.  
  
 [!code-csharp[SystemWebUILiteralControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUILiteralControl/CS/controlcreatechildcontrols.cs#1)]
 [!code-vb[SystemWebUILiteralControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUILiteralControl/VB/controlcreatechildcontrols.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.LiteralControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LiteralControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LiteralControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>요청된 ASP.NET 페이지에서 렌더링할 리터럴 문자열을 포함하는 <see cref="T:System.Web.UI.LiteralControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 클래스를 만듭니다 `CustLiteralControlClass`를 확장 하는 <xref:System.Web.UI.LiteralControl> 클래스입니다. 이라는 클래스의 인스턴스를 만들고 `myLiteralControlClass1` 의 텍스트를 지정 하지 않는 생성자를 사용 하 여는 <xref:System.Web.UI.LiteralControl> 개체입니다. 개체를 만든 후의 <xref:System.Web.UI.LiteralControl.Text%2A> 속성은 포함 된 텍스트를 설정 하려면 사용 합니다.  
  
 [!code-csharp[LiteralControlSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/LiteralControlSample/CS/customliteralcontrol.cs.aspx#4)]
 [!code-vb[LiteralControlSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LiteralControlSample/VB/customliteralcontrol.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LiteralControl (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LiteralControl(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.LiteralControl : string -&gt; System.Web.UI.LiteralControl" Usage="new System.Web.UI.LiteralControl text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">요청된 웹 페이지에서 렌더링할 텍스트입니다.</param>
        <summary>지정된 텍스트를 사용하여 <see cref="T:System.Web.UI.LiteralControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는의 두 인스턴스를 만듭니다는 <xref:System.Web.UI.LiteralControl> 를 사용 하 여 클래스를 <xref:System.Web.UI.LiteralControl.%23ctor%2A> 생성자입니다. 두 인스턴스가 H3 HTML 요소의 닫는 태그를 렌더링 하 고 H3 태그 내부에 표시할 텍스트를 포함 합니다.  
  
 [!code-csharp[SystemWebUILiteralControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUILiteralControl/CS/controlcreatechildcontrols.cs#1)]
 [!code-vb[SystemWebUILiteralControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUILiteralControl/VB/controlcreatechildcontrols.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.LiteralControl.Text" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="literalControl.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.EmptyControlCollection" /> 클래스의 현재 인스턴스에 대한 <see cref="T:System.Web.UI.LiteralControl" /> 개체를 만듭니다.</summary>
        <returns>현재 컨트롤에 대한 <see cref="T:System.Web.UI.EmptyControlCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 <xref:System.Web.UI.LiteralControl> 텍스트와 자식 서버 컨트롤이 없는 개체를 포함 합니다. 이 동작을 변경 하려는 경우이 메서드를 재정의 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 <xref:System.Web.UI.LiteralControl.CreateControlCollection%2A> 의 인스턴스를 만드는 메서드를 <xref:System.Web.UI.ControlCollection> 클래스의 인스턴스 대신는 <xref:System.Web.UI.EmptyControlCollection> 클래스입니다.  
  
 [!code-csharp[LiteralControlSample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/LiteralControlSample/CS/customliteralcontrol.cs#2)]
 [!code-vb[LiteralControlSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LiteralControlSample/VB/customliteralcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="literalControl.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output"><see cref="T:System.Web.UI.HtmlTextWriter" />의 내용을 요청한 클라이언트로 렌더링하는 <see cref="T:System.Web.UI.LiteralControl" />입니다.</param>
        <summary><see cref="T:System.Web.UI.LiteralControl" /> 개체의 내용을 ASP.NET 페이지에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤 및 클라이언트에 특정 HTML 또는 텍스트를 렌더링 하려면 사용자 지정 서버를 만들 때의 값을 전달 하 여 컨트롤의 성능을 개선할 수 있습니다는 <xref:System.Web.UI.LiteralControl.Text%2A> 속성을 합니다 <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> 메서드 호출 대신는 <xref:System.Web.UI.LiteralControl.Render%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.LiteralControl.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.LiteralControl.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.ITextControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.LiteralControl" /> 개체의 텍스트 내용을 가져오거나 설정합니다.</summary>
        <value>리터럴 컨트롤의 텍스트 내용을 나타내는 <see cref="T:System.String" />입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 클래스를 만듭니다 `CustLiteralControlClass`를 확장 하는 <xref:System.Web.UI.LiteralControl> 클래스입니다. 이라는 클래스의 인스턴스를 만들고 `myLiteralControlClass1` 의 텍스트를 지정 하지 않는 생성자를 사용 하 여는 <xref:System.Web.UI.LiteralControl> 개체입니다. 개체를 만든 후의 <xref:System.Web.UI.LiteralControl.Text%2A> 속성은 포함 된 텍스트를 설정 하려면 사용 합니다.  
  
 [!code-csharp[LiteralControlSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/LiteralControlSample/CS/customliteralcontrol.cs.aspx#4)]
 [!code-vb[LiteralControlSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LiteralControlSample/VB/customliteralcontrol.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>