<Type Name="MasterPage" FullName="System.Web.UI.MasterPage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f66788b22ce04066d7fdd71498dfc5175b73889d" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57953478" /></Metadata><TypeSignature Language="C#" Value="public class MasterPage : System.Web.UI.UserControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MasterPage extends System.Web.UI.UserControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.MasterPage" />
  <TypeSignature Language="VB.NET" Value="Public Class MasterPage&#xA;Inherits UserControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class MasterPage : System::Web::UI::UserControl" />
  <TypeSignature Language="F#" Value="type MasterPage = class&#xA;    inherit UserControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UserControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.MasterPageControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.Content" /> 컨트롤 및 해당 자식 컨트롤로만 구성된 페이지의 템플릿 및 병합 컨테이너로 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 마스터 페이지 템플릿 컨테이너 및 ASP.NET 웹 응용 프로그램에서 콘텐츠 페이지에 대 한 병합 페이지도 작동합니다. 마스터 페이지 콘텐츠 페이지의 구조와 콘텐츠를 공유 하는 편리한 방법을 제공 합니다. 콘텐츠 자리 표시자를 사용 하 여 콘텐츠 페이지의 내용으로 바꾸려면 마스터 페이지의 섹션을 정의 합니다.  
  
 필요한 XHTML 문서 태그를 추가 하는 마스터 페이지 및 관련된 콘텐츠 페이지를 사용 하는 경우 (같은 `html`, `head`, 및 `body`)만 마스터 페이지를 더 이상 독립 실행형 웹과 다른.aspx 파일 (ASP.NET 페이지)를 만들지 페이지입니다. 콘텐츠 페이지의 마스터 페이지에 있는 자리 표시자에 삽입할 콘텐츠를 정의 합니다.  
  
 HTTP 요청을 페이지에 대 한 런타임 시 만들어진, 마스터 페이지 및 콘텐츠 페이지는 콘텐츠 페이지와 동일한 이름을 가진 단일 클래스로 결합 됩니다. 컴파일된 결과 병합 된 클래스에서 파생 되며는 <xref:System.Web.UI.Page> 클래스입니다.  
  
 컨테이너 컨트롤 뿐만 아니라 직접 태그 및 서버 컨트롤, 마스터 페이지를 포함할 수 있습니다. 마스터 페이지의 외부에 배치 된 모든 요소는 <xref:System.Web.UI.WebControls.ContentPlaceHolder> 컨트롤이 병합 된 마스터 페이지 및 콘텐츠 페이지에서 발생 하는 모든 페이지에 렌더링 됩니다.  
  
 마스터 페이지와 관련 된 각 콘텐츠 페이지의 마스터 페이지를 참조 해야 합니다는 `MasterPageFile` 해당 지시문의 특성입니다. 페이지 수만 포함 될 콘텐츠를 `@ Page` 지시문 및 하나 이상의 <xref:System.Web.UI.WebControls.Content> 컨트롤입니다. 페이지 텍스트, 태그 및 서버 컨트롤의 모든 안에 있어야 <xref:System.Web.UI.WebControls.Content> 컨트롤입니다. 식별를 <xref:System.Web.UI.WebControls.ContentPlaceHolder> 제어 하는 마스터 페이지는 <xref:System.Web.UI.WebControls.Content> 컨트롤을 설정 하 여 연결 된를 <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> 의 속성을 <xref:System.Web.UI.WebControls.Content> 컨트롤.  
  
 런타임 시 각 동적 콘텐츠 <xref:System.Web.UI.WebControls.Content> 관련 된 정확한 위치에 있는 마스터 페이지를 사용 하 여 요청된 된 페이지의 컨트롤 병합 됩니다 <xref:System.Web.UI.WebControls.ContentPlaceHolder> 제어 합니다. 다른 태그와 마스터 페이지에 컨트롤을 받지 않습니다. 콘텐츠 페이지의 마스터 클래스에 이벤트 처리기를 정의할 수 있습니다. 자세한 내용은 [ASP.NET 마스터 및 콘텐츠 페이지의 이벤트](https://msdn.microsoft.com/library/b3ab2d01-9e37-4788-82d0-c6065e3ff5bd)합니다.  
  
 <xref:System.Web.UI.MasterPage> 클래스는.master 확장명을 가진 파일을 사용 하 여 연결 됩니다. 이러한 파일은 런타임에 컴파일됩니다 <xref:System.Web.UI.MasterPage> 개체 및 서버 메모리에 캐시 됩니다.  
  
 마스터 페이지를 통해 콘텐츠 페이지를 사용할 수는 <xref:System.Web.UI.Page.Master%2A> 자료의 속성 <xref:System.Web.UI.Page> 클래스입니다. 그러나 합니다 <xref:System.Web.UI.Page.Master%2A> 마스터 페이지의 인스턴스를 반환 하는 속성;를 기반으로 입력 되는 <xref:System.Web.UI.MasterPage> 클래스입니다. 액세스 제어, 속성 및 마스터 페이지의 기능에는 <xref:System.Web.UI.Page.Master%2A> 속성으로 캐스팅 될 수는 <xref:System.Web.UI.MasterPage> 개체입니다. 마스터 페이지의 클래스 이름을 사용 하 여 정의 되는 `ClassName` 지시문의 특성입니다.  
  
> [!NOTE]
>  브라우저에는.master 확장을 사용 하 여 파일이 제공 되지 않습니다.  
  
 마스터 페이지에 잘못 된 지시문에서 사용할 수 있는 경우와 동일을 <xref:System.Web.UI.UserControl> 개체입니다. 다음 특성을 포함할 수 있습니다.  
  
-   `AutoEventWireup`  
  
-   `ClassName`  
  
-   `CodeFile`  
  
-   `CompilerMode`  
  
-   `CompilerOptions`  
  
-   `Debug`  
  
-   `Description`  
  
-   `EnableTheming`  
  
-   `EnableViewState`  
  
-   `Explicit`  
  
-   `Inherits`  
  
-   `Language`  
  
-   `LinePragmas`  
  
-   `MasterPageFile`  
  
-   `Src`  
  
-   `Strict`  
  
-   `WarningLevel`  
  
 마스터 페이지 지시문에서 개별 콘텐츠 페이지 지시문을 무시 하지 않습니다.  
  
 마스터 페이지는 주로 선언적으로 만들어집니다. 마스터 페이지를 프로그래밍 방식으로 만들려면 원한다 면에서 직접 파생 되는 <xref:System.Web.UI.MasterPage> 클래스입니다. 확장 하는 것 외에도 <xref:System.Web.UI.MasterPage> 클래스 소스 파일에서 호출한 클래스를 사용 하 여 연결 된 사용자 인터페이스 (UI)를 시각적으로 표시할.master 파일을 만들어야 합니다.  
  
> [!NOTE]
>  사용자 고유의 클래스를 먼저 작성 하 여 마스터 페이지를 만들 때 페이지에 의해 사용 되는 클래스에 필요한 모든 네임 스페이스를 포함 해야 합니다.  
  
 마스터 페이지에 대 한 자세한 내용은 참조 하세요. [ASP.NET 마스터 페이지](https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b)합니다.  
  
   
  
## Examples  
 이 섹션에서는 네 가지 코드 예제가 포함 되어 있습니다.  
  
-   첫 번째 코드 예제에는 선언적으로 마스터 페이지를 만드는 방법을 보여 줍니다.  
  
-   두 번째 코드 예제에서는 첫 번째 코드 예제에서 생성 된 마스터 페이지와 연결 된 콘텐츠 페이지를 나타냅니다.  
  
-   세 번째 코드 예제에서는 마스터 페이지에 속성을 추가 하는 방법에 설명 합니다.  
  
-   네 번째 코드 예제에서는 마스터 페이지의 공용 속성에 액세스 하는 콘텐츠 페이지를 사용 하는 방법에 설명 합니다.  
  
 다음 예에서는 마스터 페이지를 선언적으로 만들고 콘텐츠 페이지를 사용 하 여 콘텐츠를 추가 하는 방법을 보여 줍니다. 첫 번째 웹 페이지는 라는.master 페이지 `MasterPageSample_1.master`합니다.  
  
```csharp  
<%@ Master Language="C#" %>  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server" />  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server" />  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 다음 예제에서는 연결 된 콘텐츠 페이지를 나타내는 `MasterPageSample_1.master`합니다. 포함을 <xref:System.Web.UI.WebControls.Content> 제어 하 고 식별 하는 <xref:System.Web.UI.WebControls.ContentPlaceHolder> 콘텐츠를 사용 하 여 연결 된 컨트롤은 <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> 속성입니다.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/MasterPageSample_1cs.master" Title="Content Page"%>  
  
<asp:content   
    runat="server"  
    contentplaceholderid="ContentPlaceHolder1" >Hello, Master Pages!</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/MasterPageSample_1vb.master" Title="Content Page"%>  
  
<asp:content   
    runat="server"  
    contentplaceholderid="ContentPlaceHolder1" >Hello, Master Pages!</asp:content>  
```  
  
 다음 예에서는 마스터 페이지에 속성을 추가 하는 방법에 설명 합니다. `ClassName` 특성 마스터 페이지 이름을 지정 하는 데 사용 됩니다.  
  
```csharp  
<%@ Master Language="C#" ClassName="MasterExample" %>  
  
<script runat="server">  
        public string SiteName  
        {  
            get { return "My Site Name"; }  
        }  
</script>  
  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" ClassName="MasterExample" %>  
  
<script runat="server">  
  Public ReadOnly Property SiteName() As String  
    Get  
      Return "My Site Name"  
    End Get  
  End Property  
  
</script>  
  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 다음 예제에서는 공용 속성에 액세스 하는 콘텐츠 페이지를 사용 하는 방법을 보여 줍니다 `SiteName` 앞의 코드 예제에서 마스터 페이지입니다.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/MasterPage.master" Title="MasterPage Example" %>  
  
<script runat="server">  
  protected void Page_Load(object sender, EventArgs e)  
  {  
    MasterExample m = (MasterExample)Page.Master;  
    mylabel.Text = m.SiteName;  
  }  
</script>  
  
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">  
    Hello, Master Pages!  
    <asp:Label runat="server" Text="Label" ID="mylabel"></asp:Label>  
</asp:Content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/MasterPage.master" Title="MasterPage Example" %>  
  
<script runat="server">  
  
  Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)  
    Dim m As MasterExample = CType(Page.Master, MasterPage)  
    mylabel.Text = m.SiteName  
  End Sub  
</script>  
  
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">  
    Hello, Master Pages!  
    <asp:Label runat="server" Text="Label" ID="mylabel"></asp:Label>  
</asp:Content>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.MasterPageControlBuilder" />
    <altmember cref="T:System.Web.UI.WebControls.ContentPlaceHolder" />
    <altmember cref="T:System.Web.UI.WebControls.Content" />
    <altmember cref="T:System.Web.UI.UserControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">ASP.NET 마스터 페이지 개요</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ec29afad-b7f5-4c58-a4db-b538dbfcea1b">중첩된 마스터 페이지</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MasterPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MasterPage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.MasterPage" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentTemplate">
      <MemberSignature Language="C#" Value="protected internal void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddContentTemplate(string templateName, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddContentTemplate (templateName As String, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddContentTemplate(System::String ^ templateName, System::Web::UI::ITemplate ^ template);" />
      <MemberSignature Language="F#" Value="member this.AddContentTemplate : string * System.Web.UI.ITemplate -&gt; unit" Usage="masterPage.AddContentTemplate (templateName, template)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" />
      </Parameters>
      <Docs>
        <param name="templateName"><see cref="T:System.Web.UI.WebControls.Content" />의 고유 이름입니다.</param>
        <param name="template"><see cref="T:System.Web.UI.WebControls.Content" /></param>
        <summary><see cref="T:System.Web.UI.WebControls.Content" /> 컨트롤을 <see cref="P:System.Web.UI.MasterPage.ContentTemplates" /> 사전에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 마스터 페이지를 파생된 클래스에 추가할 수 있습니다 <xref:System.Web.UI.WebControls.Content> 컨트롤을 합니다 <xref:System.Web.UI.MasterPage.ContentTemplates%2A> 사용 하 여 사전은 <xref:System.Web.UI.MasterPage.AddContentTemplate%2A> 메서드. 파생된 형식은 일반적으로 재정의 하지는 <xref:System.Web.UI.MasterPage.AddContentTemplate%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">이름이 같은 <see cref="T:System.Web.UI.WebControls.Content" /> 컨트롤이 <see cref="P:System.Web.UI.MasterPage.ContentTemplates" /> 사전에 이미 있는 경우</exception>
        <altmember cref="P:System.Web.UI.MasterPage.ContentTemplates" />
      </Docs>
    </Member>
    <Member MemberName="ContentPlaceHolders">
      <MemberSignature Language="C#" Value="protected internal System.Collections.IList ContentPlaceHolders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList ContentPlaceHolders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.ContentPlaceHolders" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ContentPlaceHolders As IList" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::IList ^ ContentPlaceHolders { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentPlaceHolders : System.Collections.IList" Usage="System.Web.UI.MasterPage.ContentPlaceHolders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마스터 페이지에서 다른 콘텐츠 영역을 정의하는 데 사용하는 <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> 컨트롤 목록을 가져옵니다.</summary>
        <value>마스터 페이지에서 콘텐츠 페이지에 있는 <see cref="T:System.Collections.IList" /> 컨트롤의 자리 표시자로 사용하는 <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.Content" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 클래스에 대 한 액세스 마스터 페이지의 <xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A> 현재 속성 <xref:System.Web.UI.WebControls.ContentPlaceHolder> 마스터에서 포함 된 컨트롤입니다. 파생된 형식은 일반적으로 재정의 하지는 <xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplates">
      <MemberSignature Language="C#" Value="protected internal System.Collections.IDictionary ContentTemplates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary ContentTemplates" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.ContentTemplates" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ContentTemplates As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::IDictionary ^ ContentTemplates { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplates : System.Collections.IDictionary" Usage="System.Web.UI.MasterPage.ContentTemplates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마스터 페이지와 관련된 콘텐츠 컨트롤 목록을 가져옵니다.</summary>
        <value>마스터 페이지와 관련된 콘텐츠 컨트롤의 <see cref="T:System.Collections.IList" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 클래스에 대 한 액세스 마스터 페이지는 <xref:System.Web.UI.MasterPage.ContentTemplates%2A> 현재 검색할 속성 <xref:System.Web.UI.WebControls.Content> 관련된 콘텐츠 페이지에 정의 된 대로 컨트롤입니다. 파생된 형식은 일반적으로 재정의 하지는 <xref:System.Web.UI.MasterPage.ContentTemplates%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateInContentPlaceHolder">
      <MemberSignature Language="C#" Value="public void InstantiateInContentPlaceHolder (System.Web.UI.Control contentPlaceHolder, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstantiateInContentPlaceHolder(class System.Web.UI.Control contentPlaceHolder, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstantiateInContentPlaceHolder (contentPlaceHolder As Control, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstantiateInContentPlaceHolder(System::Web::UI::Control ^ contentPlaceHolder, System::Web::UI::ITemplate ^ template);" />
      <MemberSignature Language="F#" Value="member this.InstantiateInContentPlaceHolder : System.Web.UI.Control * System.Web.UI.ITemplate -&gt; unit" Usage="masterPage.InstantiateInContentPlaceHolder (contentPlaceHolder, template)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentPlaceHolder" Type="System.Web.UI.Control" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="contentPlaceHolder">콘텐츠의 컨테이너를 나타내는 컨트롤입니다.</param>
        <param name="template">사용할 <see cref="T:System.Web.UI.WebControls.Content" /> 인스턴스입니다.</param>
        <summary>마스터 페이지를 소유하는 페이지에 현재 템플릿 컨트롤을 설정하는 메서드를 제공합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Master">
      <MemberSignature Language="C#" Value="public System.Web.UI.MasterPage Master { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.MasterPage Master" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.Master" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Master As MasterPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::MasterPage ^ Master { System::Web::UI::MasterPage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Master : System.Web.UI.MasterPage" Usage="System.Web.UI.MasterPage.Master" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.MasterPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>중첩된 마스터 페이지 시나리오에서 현재 마스터의 부모 마스터 페이지를 가져옵니다.</summary>
        <value>현재 마스터 페이지의 부모 마스터 페이지이거나, 현재 마스터 페이지의 부모가 없으면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.MasterPage.Master%2A> 속성은 읽기 전용 런타임에 마스터 페이지 계층 구조를 빌드할 수 없습니다.  
  
   
  
## Examples  
 이 섹션에는 세 가지 코드 예제가 있습니다. 첫 번째 코드 예제에는 중첩된 된 마스터 페이지를 만드는 방법을 보여 줍니다`.` 두 번째 코드 예제에서는 첫 번째 코드 예제에서 생성 된 마스터 페이지를 참조 하는 방법에 설명 합니다. 세 번째 코드 예제에서는 두 번째 코드 예제에서 생성 된 마스터 페이지를 참조 하는 콘텐츠 페이지를 사용 하는 방법에 설명 합니다.  
  
 다음 코드 예제에서는 중첩된 된 마스터 페이지를 만드는 방법을 보여 줍니다 나타내며 라는 부모 마스터 페이지 `ParentMasterPage_1`합니다.  
  
```csharp  
<%@ Master Language="C#" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 다음 코드 예제에는 중첩 된 마스터 페이지를 사용 하는 방법을 보여 줍니다. `ChildMasterPage_1` 앞의 코드 예제에서 생성 된 마스터 페이지를 참조 하는 합니다.  
  
```csharp  
<%@ Master Language="C#" MasterPageFile="~/ParentMasterPage_1cs.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
```vb  
<%@ Master Language="VB" MasterPageFile="~/ParentMasterPage_1vb.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
 다음 코드 예제에서는 명명 된 콘텐츠 페이지를 사용 하는 방법에 설명 `ContentPage` 를 참조 하는 `ChildMasterPage_1` 앞의 코드 예제에서 만든 합니다.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/ChildMasterPage_1cs.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/ChildMasterPage_1vb.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ec29afad-b7f5-4c58-a4db-b538dbfcea1b">중첩된 마스터 페이지</related>
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MasterPageFile : string with get, set" Usage="System.Web.UI.MasterPage.MasterPageFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 콘텐츠를 포함하는 마스터 페이지의 이름을 가져오거나 설정합니다.</summary>
        <value>현재 마스터 페이지의 부모 마스터 페이지 이름이거나, 현재 마스터 페이지의 부모가 없으면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 이 섹션에는 세 가지 코드 예제가 있습니다. 첫 번째 코드 예제에는 중첩된 된 마스터 페이지를 만드는 방법을 보여 줍니다`.` 두 번째 코드 예제에서는 첫 번째 코드 예제에서 생성 된 마스터 페이지를 참조 하는 방법에 설명 합니다. 세 번째 코드 예제에서는 두 번째 코드 예제에서 생성 된 마스터 페이지를 참조 하는 콘텐츠 페이지를 사용 하는 방법에 설명 합니다.  
  
 다음 코드 예제에서는 중첩된 된 마스터 페이지를 만드는 방법을 보여 줍니다 나타내며 라는 부모 마스터 페이지 `ParentMasterPage_1`합니다.  
  
```csharp  
<%@ Master Language="C#" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 다음 코드 예제에는 중첩 된 마스터 페이지를 사용 하는 방법을 보여 줍니다. `ChildMasterPage_1` 앞의 코드 예제에서 생성 된 마스터 페이지를 참조 하는 합니다.  
  
```csharp  
<%@ Master Language="C#" MasterPageFile="~/ParentMasterPage_1cs.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
```vb  
<%@ Master Language="VB" MasterPageFile="~/ParentMasterPage_1vb.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
 다음 코드 예제에서는 명명 된 콘텐츠 페이지를 사용 하는 방법에 설명 `ContentPage` 를 참조 하는 `ChildMasterPage_1` 앞의 코드 예제에서 만든 합니다.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/ChildMasterPage_1cs.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/ChildMasterPage_1vb.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.MasterPage.MasterPageFile" /> 이벤트가 수행되는 중이나 수행되기 전에만 <see cref="E:System.Web.UI.Page.PreInit" /> 속성을 설정할 수 있습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ec29afad-b7f5-4c58-a4db-b538dbfcea1b">중첩된 마스터 페이지</related>
      </Docs>
    </Member>
  </Members>
</Type>