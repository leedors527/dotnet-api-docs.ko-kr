<Type Name="ParseRecorder" FullName="System.Web.UI.ParseRecorder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3274ce32d14e44366c30c809094e20c5f4e70fcb" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59742715" /></Metadata><TypeSignature Language="C#" Value="public abstract class ParseRecorder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ParseRecorder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ParseRecorder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ParseRecorder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParseRecorder abstract" />
  <TypeSignature Language="F#" Value="type ParseRecorder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>페이지를 구문 분석하는 동안 구문 분석 이벤트의 알림을 받아야 하는 개체에 대한 추상 기본 클래스입니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ParseRecorder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseRecorder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ParseRecorder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.ParseRecorder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.Web.UI.TemplateParser parser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.UI.TemplateParser parser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseRecorder.Initialize(System.Web.UI.TemplateParser)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (parser As TemplateParser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::Web::UI::TemplateParser ^ parser);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.UI.TemplateParser -&gt; unit&#xA;override this.Initialize : System.Web.UI.TemplateParser -&gt; unit" Usage="parseRecorder.Initialize parser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Web.UI.TemplateParser" />
      </Parameters>
      <Docs>
        <param name="parser">템플릿 구문 분석기입니다.</param>
        <summary>파생 클래스에서 구현되는 경우 개체의 수신기를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseComplete">
      <MemberSignature Language="C#" Value="public virtual void ParseComplete (System.Web.UI.ControlBuilder root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseComplete(class System.Web.UI.ControlBuilder root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseRecorder.ParseComplete(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ParseComplete (root As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ParseComplete(System::Web::UI::ControlBuilder ^ root);" />
      <MemberSignature Language="F#" Value="abstract member ParseComplete : System.Web.UI.ControlBuilder -&gt; unit&#xA;override this.ParseComplete : System.Web.UI.ControlBuilder -&gt; unit" Usage="parseRecorder.ParseComplete root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="root">컨트롤 작성기 루트입니다.</param>
        <summary>템플릿 파서에서 파일 구문 분석이 완료되면 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessGeneratedCode">
      <MemberSignature Language="C#" Value="public virtual void ProcessGeneratedCode (System.Web.UI.ControlBuilder builder, System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.CodeTypeDeclaration baseType, System.CodeDom.CodeTypeDeclaration derivedType, System.CodeDom.CodeMemberMethod buildMethod, System.CodeDom.CodeMemberMethod dataBindingMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessGeneratedCode(class System.Web.UI.ControlBuilder builder, class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.CodeDom.CodeTypeDeclaration baseType, class System.CodeDom.CodeTypeDeclaration derivedType, class System.CodeDom.CodeMemberMethod buildMethod, class System.CodeDom.CodeMemberMethod dataBindingMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseRecorder.ProcessGeneratedCode(System.Web.UI.ControlBuilder,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessGeneratedCode(System::Web::UI::ControlBuilder ^ builder, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::CodeDom::CodeTypeDeclaration ^ baseType, System::CodeDom::CodeTypeDeclaration ^ derivedType, System::CodeDom::CodeMemberMethod ^ buildMethod, System::CodeDom::CodeMemberMethod ^ dataBindingMethod);" />
      <MemberSignature Language="F#" Value="abstract member ProcessGeneratedCode : System.Web.UI.ControlBuilder * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeTypeDeclaration * System.CodeDom.CodeTypeDeclaration * System.CodeDom.CodeMemberMethod * System.CodeDom.CodeMemberMethod -&gt; unit&#xA;override this.ProcessGeneratedCode : System.Web.UI.ControlBuilder * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeTypeDeclaration * System.CodeDom.CodeTypeDeclaration * System.CodeDom.CodeMemberMethod * System.CodeDom.CodeMemberMethod -&gt; unit" Usage="parseRecorder.ProcessGeneratedCode (builder, codeCompileUnit, baseType, derivedType, buildMethod, dataBindingMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="baseType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="derivedType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="buildMethod" Type="System.CodeDom.CodeMemberMethod" />
        <Parameter Name="dataBindingMethod" Type="System.CodeDom.CodeMemberMethod" />
      </Parameters>
      <Docs>
        <param name="builder">컨트롤 작성기입니다.</param>
        <param name="codeCompileUnit">코드 컴파일 단위입니다.</param>
        <param name="baseType">코드 형식 선언 기본 형식입니다.</param>
        <param name="derivedType">코드 형식 선언 파생 형식입니다.</param>
        <param name="buildMethod">빌드 메서드입니다.</param>
        <param name="dataBindingMethod">데이터 바인딩 메서드입니다.</param>
        <summary>파생된 클래스에서 구현된 경우 구문 레코더를 사용하여 생성된 CodeDom에 액세스하고 코드를 삽입 및 수정할 수 있도록 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RecordBeginTag (System.Web.UI.ControlBuilder builder, System.Text.RegularExpressions.Match tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordBeginTag(class System.Web.UI.ControlBuilder builder, class System.Text.RegularExpressions.Match tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseRecorder.RecordBeginTag(System.Web.UI.ControlBuilder,System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordBeginTag (builder As ControlBuilder, tag As Match)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordBeginTag(System::Web::UI::ControlBuilder ^ builder, System::Text::RegularExpressions::Match ^ tag);" />
      <MemberSignature Language="F#" Value="abstract member RecordBeginTag : System.Web.UI.ControlBuilder * System.Text.RegularExpressions.Match -&gt; unit&#xA;override this.RecordBeginTag : System.Web.UI.ControlBuilder * System.Text.RegularExpressions.Match -&gt; unit" Usage="parseRecorder.RecordBeginTag (builder, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="tag" Type="System.Text.RegularExpressions.Match" />
      </Parameters>
      <Docs>
        <param name="builder">컨트롤 작성기입니다.</param>
        <param name="tag">태그입니다.</param>
        <summary>템플릿 파서가 웹 컨트롤의 시작 태그를 발견하면 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordCodeBlock">
      <MemberSignature Language="C#" Value="public virtual void RecordCodeBlock (System.Web.UI.ControlBuilder builder, System.Text.RegularExpressions.Match codeBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordCodeBlock(class System.Web.UI.ControlBuilder builder, class System.Text.RegularExpressions.Match codeBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseRecorder.RecordCodeBlock(System.Web.UI.ControlBuilder,System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordCodeBlock (builder As ControlBuilder, codeBlock As Match)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordCodeBlock(System::Web::UI::ControlBuilder ^ builder, System::Text::RegularExpressions::Match ^ codeBlock);" />
      <MemberSignature Language="F#" Value="abstract member RecordCodeBlock : System.Web.UI.ControlBuilder * System.Text.RegularExpressions.Match -&gt; unit&#xA;override this.RecordCodeBlock : System.Web.UI.ControlBuilder * System.Text.RegularExpressions.Match -&gt; unit" Usage="parseRecorder.RecordCodeBlock (builder, codeBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="codeBlock" Type="System.Text.RegularExpressions.Match" />
      </Parameters>
      <Docs>
        <param name="builder">컨트롤 작성기입니다.</param>
        <param name="codeBlock">코드 블록입니다.</param>
        <summary>템플릿 파서가 코드 블록을 발견하면 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordEmptyTag">
      <MemberSignature Language="C#" Value="public virtual void RecordEmptyTag (System.Web.UI.ControlBuilder builder, System.Text.RegularExpressions.Match tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordEmptyTag(class System.Web.UI.ControlBuilder builder, class System.Text.RegularExpressions.Match tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseRecorder.RecordEmptyTag(System.Web.UI.ControlBuilder,System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordEmptyTag (builder As ControlBuilder, tag As Match)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordEmptyTag(System::Web::UI::ControlBuilder ^ builder, System::Text::RegularExpressions::Match ^ tag);" />
      <MemberSignature Language="F#" Value="abstract member RecordEmptyTag : System.Web.UI.ControlBuilder * System.Text.RegularExpressions.Match -&gt; unit&#xA;override this.RecordEmptyTag : System.Web.UI.ControlBuilder * System.Text.RegularExpressions.Match -&gt; unit" Usage="parseRecorder.RecordEmptyTag (builder, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="tag" Type="System.Text.RegularExpressions.Match" />
      </Parameters>
      <Docs>
        <param name="builder">컨트롤 작성기입니다.</param>
        <param name="tag">태그입니다.</param>
        <summary>템플릿 파서가 웹 컨트롤의 빈 태그를 발견하면 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordEndTag">
      <MemberSignature Language="C#" Value="public virtual void RecordEndTag (System.Web.UI.ControlBuilder builder, System.Text.RegularExpressions.Match tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordEndTag(class System.Web.UI.ControlBuilder builder, class System.Text.RegularExpressions.Match tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseRecorder.RecordEndTag(System.Web.UI.ControlBuilder,System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordEndTag (builder As ControlBuilder, tag As Match)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordEndTag(System::Web::UI::ControlBuilder ^ builder, System::Text::RegularExpressions::Match ^ tag);" />
      <MemberSignature Language="F#" Value="abstract member RecordEndTag : System.Web.UI.ControlBuilder * System.Text.RegularExpressions.Match -&gt; unit&#xA;override this.RecordEndTag : System.Web.UI.ControlBuilder * System.Text.RegularExpressions.Match -&gt; unit" Usage="parseRecorder.RecordEndTag (builder, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="tag" Type="System.Text.RegularExpressions.Match" />
      </Parameters>
      <Docs>
        <param name="builder">컨트롤 작성기입니다.</param>
        <param name="tag">태그입니다.</param>
        <summary>템플릿 파서가 웹 컨트롤의 끝 태그를 발견하면 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecorderFactories">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Func&lt;System.Web.UI.ParseRecorder&gt;&gt; RecorderFactories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;class System.Func`1&lt;class System.Web.UI.ParseRecorder&gt;&gt; RecorderFactories" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseRecorder.RecorderFactories" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RecorderFactories As IList(Of Func(Of ParseRecorder))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IList&lt;Func&lt;System::Web::UI::ParseRecorder ^&gt; ^&gt; ^ RecorderFactories { System::Collections::Generic::IList&lt;Func&lt;System::Web::UI::ParseRecorder ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RecorderFactories : System.Collections.Generic.IList&lt;Func&lt;System.Web.UI.ParseRecorder&gt;&gt;" Usage="System.Web.UI.ParseRecorder.RecorderFactories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Func&lt;System.Web.UI.ParseRecorder&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>구문 분석 레코더 팩터리의 컬렉션을 가져옵니다.</summary>
        <value>구문 분석 레코더 팩터리입니다. 속성이 <see langword="null" />인 경우 빈 컬렉션이 만들어지고 반환됩니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>