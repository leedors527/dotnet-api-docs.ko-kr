<Type Name="ScriptComponentDescriptor" FullName="System.Web.UI.ScriptComponentDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3db72d969c729c932af51554921f233a7b6c48d4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39889235" /></Metadata><TypeSignature Language="C#" Value="public class ScriptComponentDescriptor : System.Web.UI.ScriptDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptComponentDescriptor extends System.Web.UI.ScriptDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptComponentDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptComponentDescriptor&#xA;Inherits ScriptDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptComponentDescriptor : System::Web::UI::ScriptDescriptor" />
  <TypeSignature Language="F#" Value="type ScriptComponentDescriptor = class&#xA;    inherit ScriptDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>서버 구성 요소를 클라이언트 스크립트로 변환하기 위한 래퍼를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스는 구성 요소, 요소, 속성 및 이벤트에 대 한 참조를 내부 사전을 사용 합니다. 이 사전에 채우기 위해 사용 합니다 <xref:System.Web.UI.ScriptComponentDescriptor.AddComponentProperty%2A>, <xref:System.Web.UI.ScriptComponentDescriptor.AddElementProperty%2A>를 <xref:System.Web.UI.ScriptComponentDescriptor.AddProperty%2A>, 및 <xref:System.Web.UI.ScriptComponentDescriptor.AddEvent%2A> 메서드. 완료 되 면 호출 된 <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> 클라이언트 스크립트를 생성 하는 방법입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptComponentDescriptor (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptComponentDescriptor(System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptComponentDescriptor : string -&gt; System.Web.UI.ScriptComponentDescriptor" Usage="new System.Web.UI.ScriptComponentDescriptor type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">대상 클라이언트 구성 요소의 형식입니다.</param>
        <summary><see cref="T:System.Web.UI.ScriptComponentDescriptor" /> 클래스의 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="type" />이 <see langword="null" /> 또는 빈 문자열("")인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddComponentProperty">
      <MemberSignature Language="C#" Value="public void AddComponentProperty (string name, string componentID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddComponentProperty(string name, string componentID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddComponentProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddComponentProperty (name As String, componentID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddComponentProperty(System::String ^ name, System::String ^ componentID);" />
      <MemberSignature Language="F#" Value="member this.AddComponentProperty : string * string -&gt; unit" Usage="scriptComponentDescriptor.AddComponentProperty (name, componentID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="componentID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">속성의 이름입니다.</param>
        <param name="componentID">대상 구성 요소의 ID입니다.</param>
        <summary>지정된 속성을 추가하고 해당 속성을 지정된 요소에 연결합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤에서 사용 하 여 클라이언트 스크립트로 변환 및 속성의 내부 사전에 지정된 된 속성을 추가 하는이 메서드는 <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 또는 <paramref name="componentID" />가 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddElementProperty">
      <MemberSignature Language="C#" Value="public void AddElementProperty (string name, string elementID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddElementProperty(string name, string elementID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddElementProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddElementProperty (name As String, elementID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddElementProperty(System::String ^ name, System::String ^ elementID);" />
      <MemberSignature Language="F#" Value="member this.AddElementProperty : string * string -&gt; unit" Usage="scriptComponentDescriptor.AddElementProperty (name, elementID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="elementID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">속성의 이름입니다.</param>
        <param name="elementID">대상 요소의 ID입니다.</param>
        <summary>지정된 속성을 추가하고 해당 속성을 지정된 구성 요소에 연결합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 통해 클라이언트 스크립트로 변환 되는 속성의 내부 사전에 지정된 된 속성을 추가 합니다 <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 또는 <paramref name="component" />가 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddEvent">
      <MemberSignature Language="C#" Value="public void AddEvent (string name, string handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEvent(string name, string handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEvent (name As String, handler As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEvent(System::String ^ name, System::String ^ handler);" />
      <MemberSignature Language="F#" Value="member this.AddEvent : string * string -&gt; unit" Usage="scriptComponentDescriptor.AddEvent (name, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="handler" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">이벤트의 이름입니다.</param>
        <param name="handler">지정된 이벤트의 처리기 함수 이름입니다.</param>
        <summary>지정된 이벤트와 처리기를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 이벤트와 처리기를 통해 클라이언트 스크립트로 변환 되는 이벤트의 내부 사전에 추가 된 <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 또는 <paramref name="handler" />가 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddProperty(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddProperty (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddProperty(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddProperty : string * obj -&gt; unit" Usage="scriptComponentDescriptor.AddProperty (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">속성의 이름입니다.</param>
        <param name="value">속성 값입니다.</param>
        <summary>지정된 속성 및 값을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 속성 및 값을 통해 클라이언트 스크립트로 변환 되는 속성의 내부 사전에 추가 된 <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" />이 <see langword="null" /> 또는 빈 문자열("")인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddScriptProperty">
      <MemberSignature Language="C#" Value="public void AddScriptProperty (string name, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddScriptProperty(string name, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddScriptProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddScriptProperty (name As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddScriptProperty(System::String ^ name, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.AddScriptProperty : string * string -&gt; unit" Usage="scriptComponentDescriptor.AddScriptProperty (name, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">속성의 이름입니다.</param>
        <param name="script">브라우저에 렌더링되는 스크립트입니다.</param>
        <summary>지정된 속성을 추가하고 해당 속성을 지정된 스크립트에 연결합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.ScriptComponentDescriptor.AddScriptProperty%2A> 브라우저에 serialize 되지 않은 스크립트를 렌더링 하는 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="script" />이 <see langword="null" /> 또는 빈 문자열("")인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public virtual string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptComponentDescriptor.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.ScriptComponentDescriptor.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 재정의되는 경우 클라이언트 구성 요소의 식별자를 가져옵니다.</summary>
        <value>클라이언트 구성 요소의 ID입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScript">
      <MemberSignature Language="C#" Value="protected internal override string GetScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.GetScript" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetScript () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetScript();" />
      <MemberSignature Language="F#" Value="override this.GetScript : unit -&gt; string" Usage="scriptComponentDescriptor.GetScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>대상 컨트롤을 페이지에 구현하는 클라이언트 스크립트를 가져옵니다.</summary>
        <returns>대상 컨트롤을 페이지에 구현하는 클라이언트 스크립트입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptComponentDescriptor.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.ScriptComponentDescriptor.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> 인스턴스의 ID를 가져오거나 설정합니다.</summary>
        <value>현재 <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> 인스턴스가 설정된 경우 인스턴스의 ID이고, 그렇지 않은 경우 빈 문자열("")입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptComponentDescriptor.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Web.UI.ScriptComponentDescriptor.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대상 클라이언트 구성 요소의 형식을 가져오거나 설정합니다.</summary>
        <value>대상 클라이언트 구성 요소의 형식입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">속성을 <see langword="null" />로 설정하려고 한 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>