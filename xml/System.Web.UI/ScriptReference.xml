<Type Name="ScriptReference" FullName="System.Web.UI.ScriptReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c31f5f5b3250f574b285bdbe59c5b3e3b1e85ead" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57927153" /></Metadata><TypeSignature Language="C#" Value="public class ScriptReference : System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptReference extends System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptReference&#xA;Inherits ScriptReferenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptReference : System::Web::UI::ScriptReferenceBase" />
  <TypeSignature Language="F#" Value="type ScriptReference = class&#xA;    inherit ScriptReferenceBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptReferenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET 웹 페이지에 사용할 ECMAScript(JavaScript) 파일을 등록합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 통해 등록 하 여 ASP.NET 웹 페이지에 JavaScript 파일을 포함할 수는 <xref:System.Web.UI.ScriptReference> 개체입니다. 웹 사이트에서.js 파일 (정적 스크립트 파일)로 있는 스크립트 파일을 등록할 수 있습니다. 또한 어셈블리에 리소스로 포함 된 스크립트 파일을 등록할 수 있습니다. 스크립트 파일을 등록 한 후 웹 페이지에서 클라이언트 스크립트에서 해당 함수를 사용할 수 있습니다.  
  
 정적 스크립트 파일을 등록 하려면 설정 합니다 <xref:System.Web.UI.ScriptReferenceBase.Path%2A> 의 속성은 <xref:System.Web.UI.ScriptReference> 개체 파일의 상대 위치입니다.  
  
 어셈블리에 리소스로 포함 된 스크립트 파일을 등록 하려면 설정의 <xref:System.Web.UI.ScriptReference.Assembly%2A> 속성 파일이 포함 된 어셈블리의 이름입니다. 설정한는 <xref:System.Web.UI.ScriptReference.Name%2A> 속성을 어셈블리에 포함 된.js 파일의 이름입니다. 이 경우 스크립트 파일 포함 되어야 합니다, 연결 되지 않습니다.  
  
 설정한는 <xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A> 디버그를 사용 하거나 스크립트의 버전을 여부를 나타내는 속성입니다.  
  
 <xref:System.Web.UI.ScriptMode.Auto> 값을 독립 실행형 스크립트 파일 또는 어셈블리에 리소스로 포함 된 스크립트 파일을 참조 하는지 여부에 따라 서로 다른 결과 생성 합니다. 독립 실행형 스크립트 파일을 사용 하 여 정의 된 <xref:System.Web.UI.ScriptReferenceBase.Path%2A> 속성입니다. 어셈블리 참조를 통해 액세스 해야 합니다 <xref:System.Web.UI.ScriptReference.Name%2A> 고 <xref:System.Web.UI.ScriptReference.Assembly%2A> 속성입니다. 에 대 한 결과 <xref:System.Web.UI.ScriptMode.Auto> 값은 다음과 같습니다.  
  
-   독립 실행형 스크립트 파일에 적용 될 때 위치를 <xref:System.Web.UI.ScriptReferenceBase.Path%2A> 속성을 지정 합니다 <xref:System.Web.UI.ScriptMode.Auto> 값은 <xref:System.Web.UI.ScriptMode.Release>합니다.  
  
-   스크립트 참조 어셈블리에 적용 될 때 <xref:System.Web.UI.ScriptMode.Auto> 같습니다 <xref:System.Web.UI.ScriptMode.Inherit>합니다. 개체만 <xref:System.Web.UI.ScriptReference.Name%2A> 지정, 스크립트를 참조 하는 것입니다. 때 <xref:System.Web.UI.ScriptReference.Name%2A> 및 <xref:System.Web.UI.ScriptReferenceBase.Path%2A> 속성이 둘 다 지정 합니다 <xref:System.Web.UI.ScriptReferenceBase.Path%2A> 속성 대신 사용 됩니다 <xref:System.Web.UI.ScriptReference.Name%2A>, 하지만 <xref:System.Web.UI.ScriptMode.Auto> 값은 여전히 동일 <xref:System.Web.UI.ScriptMode.Inherit>합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 컨트롤 및 컨트롤 어셈블리에 포함 된 JavaScript 파일을 참조 하는 방법을 보여 줍니다. 어셈블리는 웹 사이트의 Bin 폴더에 있는 것으로 간주 됩니다. 사용자 지정 컨트롤 애니메이션 <xref:System.Web.UI.UpdatePanel> 컨트롤입니다. JavaScript 파일 SampleControl.UpdatePanelAnimation.js 라는 포함 리소스로 컴파일됩니다. 사용 하 여 포함 된 JavaScript 파일을 등록 합니다 <xref:System.Web.UI.ScriptReference.Assembly%2A> 고 <xref:System.Web.UI.ScriptReference.Name%2A> 속성입니다.  
  
 이 예제를 사용 하려면 사용자 지정 컨트롤을 포함 리소스로 예제에 표시 되는 JavaScript 파일을 컴파일하십시오. 결과 어셈블리를 웹 사이트의 Bin 폴더에 넣습니다. 어셈블리의 JavaScript 파일을 포함 하는 방법의 예제를 참조 하세요. [연습: JavaScript 파일을 어셈블리에 리소스로 포함](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)합니다.  
  
 다음 예제에서는 사용자 지정 컨트롤을 사용 하는 페이지를 보여 줍니다.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 다음 예제에서는 사용자 지정 컨트롤 클래스 정을 보여 줍니다.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 다음 예제에서는 지 원하는 JavaScript 파일을 보여줍니다.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 다음 예제에서는 사용자 지정 컨트롤을 포함 하는 프로젝트의 AssemblyInfo 파일 및 JavaScript 파일에 추가 해야 하는 코드를 보여 줍니다.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.ScriptReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.ScriptReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">웹 페이지를 기준으로 하는 클라이언트 스크립트 파일의 경로입니다.</param>
        <summary>지정된 경로를 사용하여 <see cref="T:System.Web.UI.ScriptReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string name, string assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, assembly As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ name, System::String ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string * string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference (name, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">어셈블리에 포함된 스크립트 파일의 이름입니다.</param>
        <param name="assembly">클라이언트 스크립트 파일이 포함 리소스로 들어 있는 어셈블리의 이름입니다.</param>
        <summary>지정된 이름 및 어셈블리를 사용하여 <see cref="T:System.Web.UI.ScriptReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : string with get, set" Usage="System.Web.UI.ScriptReference.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트 스크립트 파일이 포함 리소스로 들어 있는 어셈블리의 이름을 가져오거나 설정합니다.</summary>
        <value>클라이언트 스크립트 파일이 포함 리소스로 들어 있는 어셈블리의 정규화된 이름 또는 부분적으로 정규화된 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정한는 <xref:System.Web.UI.ScriptReference.Assembly%2A> 어셈블리에 포함 리소스로 포함 된 클라이언트 스크립트 파일을 참조 하는 경우에 속성입니다. 설정 <xref:System.Web.UI.ScriptReference.Assembly%2A> 정규화 되거나 부분적으로 정규화 된 어셈블리 이름입니다. 정규화 된 어셈블리 이름을 이름, culture, 공개 키 및 버전 번호를 포함합니다. 부분적으로 정규화 된 어셈블리 이름에는 이름만 포함 됩니다.  
  
 에 대 한 값을 지정 하는 경우 <xref:System.Web.UI.ScriptReference.Assembly%2A>에 포함된 된 리소스의 이름을 지정 해야 합니다 <xref:System.Web.UI.ScriptReference.Name%2A> 속성입니다. 그렇지 않은 경우는 <xref:System.InvalidOperationException> throw 됩니다.  
  
 참조 되는 어셈블리를 전역 어셈블리 캐시 또는 웹 사이트의 Bin 폴더에 있어야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 컨트롤 및 컨트롤 어셈블리에 포함 된 JavaScript 파일을 참조 하는 방법을 보여 줍니다. 어셈블리는 웹 사이트의 Bin 폴더에 있는 것으로 간주 됩니다. 사용자 지정 컨트롤 애니메이션 <xref:System.Web.UI.UpdatePanel> 컨트롤입니다. JavaScript 파일 SampleControl.UpdatePanelAnimation.js 라는 포함 리소스로 컴파일됩니다. 사용 하 여 포함 된 JavaScript 파일을 등록 합니다 <xref:System.Web.UI.ScriptReference.Assembly%2A> 고 <xref:System.Web.UI.ScriptReference.Name%2A> 속성입니다.  
  
 이 예제를 사용 하려면 사용자 지정 컨트롤을 포함 리소스로 예제에 표시 되는 JavaScript 파일을 컴파일하십시오. 결과 어셈블리를 웹 사이트의 Bin 폴더에 넣습니다. 어셈블리의 JavaScript 파일을 포함 하는 방법의 예제를 참조 하세요. [연습: JavaScript 파일을 어셈블리에 리소스로 포함](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)합니다.  
  
 다음 예제에서는 사용자 지정 컨트롤을 사용 하는 페이지를 보여 줍니다.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 다음 예제에서는 사용자 지정 컨트롤 클래스 정을 보여 줍니다.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 다음 예제에서는 지 원하는 JavaScript 파일을 보여줍니다.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 다음 예제에서는 사용자 지정 컨트롤을 포함 하는 프로젝트의 AssemblyInfo 파일 및 JavaScript 파일에 추가 해야 하는 코드를 보여 줍니다.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrl">
      <MemberSignature Language="C#" Value="protected internal override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetUrl(class System.Web.UI.ScriptManager scriptManager, bool zip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetUrl(System::Web::UI::ScriptManager ^ scriptManager, bool zip);" />
      <MemberSignature Language="F#" Value="override this.GetUrl : System.Web.UI.ScriptManager * bool -&gt; string" Usage="scriptReference.GetUrl (scriptManager, zip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="zip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scriptManager">대상 웹 페이지의 <see langword="ScriptManager" /> 컨트롤입니다.</param>
        <param name="zip">스크립트가 압축되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary><see langword="src" /> 요소의 <see langword="script" /> 특성 값으로 렌더링되는 URL을 검색합니다.</summary>
        <returns><see langword="src" /> 요소의 <see langword="script" /> 특성 값으로 렌더링되는 URL을 포함하는 문자열입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreScriptPath">
      <MemberSignature Language="C#" Value="public bool IgnoreScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreScriptPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreScriptPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreScriptPath : bool with get, set" Usage="System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. Instead of using ScriptManager.ScriptPath, set the Path property on each individual ScriptReference.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>리소스에서 클라이언트 스크립트 파일을 등록할 때 URL에 <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> 속성이 포함되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>클라이언트 스크립트를 등록할 때 스크립트 경로를 사용하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정한 <xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A> 하 `true` 클라이언트 스크립트 파일을 포함 하지 않고 등록 하려는 경우는 <xref:System.Web.UI.ScriptManager.ScriptPath%2A> 스크립트 파일의 URL의 값입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAjaxFrameworkScript">
      <MemberSignature Language="C#" Value="protected internal override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsAjaxFrameworkScript(class System.Web.UI.ScriptManager scriptManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsAjaxFrameworkScript(System::Web::UI::ScriptManager ^ scriptManager);" />
      <MemberSignature Language="F#" Value="override this.IsAjaxFrameworkScript : System.Web.UI.ScriptManager -&gt; bool" Usage="scriptReference.IsAjaxFrameworkScript scriptManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="scriptManager"><see cref="T:System.Web.UI.ScriptManager" /> 개체입니다.</param>
        <summary>스크립트 참조가 AJAX 스크립트인지 여부를 결정합니다.</summary>
        <returns>스크립트 참조가 AJAX 스크립트인 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromSystemWebExtensions">
      <MemberSignature Language="C#" Value="protected internal override bool IsFromSystemWebExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsFromSystemWebExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsFromSystemWebExtensions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsFromSystemWebExtensions();" />
      <MemberSignature Language="F#" Value="override this.IsFromSystemWebExtensions : unit -&gt; bool" Usage="scriptReference.IsFromSystemWebExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete. Use IsAjaxFrameworkScript(ScriptManager) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>복합 스크립트에 ASP.NET AJAX 프레임워크 스크립트에 대한 참조가 포함되어 있는지 여부를 나타냅니다.</summary>
        <returns>복합 스크립트에 ASP.NET AJAX 프레임워크 스크립트에 대한 참조가 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.ScriptReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트 스크립트 파일이 들어 있는 포함 리소스의 이름을 가져오거나 설정합니다.</summary>
        <value>어셈블리에 리소스로 포함된 클라이언트 스크립트 파일의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정한는 <xref:System.Web.UI.ScriptReference.Name%2A> 어셈블리에 리소스로 포함 된 클라이언트 스크립트 파일을 참조 하는 속성입니다.  
  
 둘 다에 대 한 값을 정의 하는 경우를 <xref:System.Web.UI.ScriptReferenceBase.Path%2A> 및 <xref:System.Web.UI.ScriptReference.Name%2A> 동일한 스크립트 참조에 대 한 속성을 <xref:System.Web.UI.ScriptReferenceBase.Path%2A> 속성이 우선 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 컨트롤 및 컨트롤 어셈블리에 포함 된 JavaScript 파일을 참조 하는 방법을 보여 줍니다. 어셈블리는 웹 사이트의 Bin 폴더에 있는 것으로 간주 됩니다. 사용자 지정 컨트롤 애니메이션 <xref:System.Web.UI.UpdatePanel> 컨트롤입니다. JavaScript 파일 SampleControl.UpdatePanelAnimation.js 라는 포함 리소스로 컴파일됩니다. 사용 하 여 포함 된 JavaScript 파일을 등록 합니다 <xref:System.Web.UI.ScriptReference.Assembly%2A> 고 <xref:System.Web.UI.ScriptReference.Name%2A> 속성입니다.  
  
 이 예제를 사용 하려면 사용자 지정 컨트롤을 포함 리소스로 예제에 표시 되는 JavaScript 파일을 컴파일하십시오. 결과 어셈블리를 웹 사이트의 Bin 폴더에 넣습니다. 어셈블리의 JavaScript 파일을 포함 하는 방법의 예제를 참조 하세요. [연습: JavaScript 파일을 어셈블리에 리소스로 포함](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)합니다.  
  
 다음 예제에서는 사용자 지정 컨트롤을 사용 하는 페이지를 보여 줍니다.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 다음 예제에서는 사용자 지정 컨트롤 클래스 정을 보여 줍니다.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 다음 예제에서는 지 원하는 JavaScript 파일을 보여줍니다.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 다음 예제에서는 사용자 지정 컨트롤을 포함 하는 프로젝트의 AssemblyInfo 파일 및 JavaScript 파일에 추가 해야 하는 코드를 보여 줍니다.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="scriptReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.ScriptReference.Name" /> 속성이나 <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> 속성의 값 또는 형식 이름을 나타내는 문자열을 반환합니다.</summary>
        <returns><see cref="P:System.Web.UI.ScriptReference.Name" /> 속성 또는 <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> 속성이 정의되어 있으면 해당 속성의 값이고, 그렇지 않으면 <see cref="P:System.Reflection.MemberInfo.Name" /> 속성 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>