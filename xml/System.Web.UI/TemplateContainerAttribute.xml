<Type Name="TemplateContainerAttribute" FullName="System.Web.UI.TemplateContainerAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e278bf0c10a39c1a033e1ba9321b53826ffe5af3" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57932080" /></Metadata><TypeSignature Language="C#" Value="public sealed class TemplateContainerAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TemplateContainerAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.TemplateContainerAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TemplateContainerAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateContainerAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TemplateContainerAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Web.UI.ITemplate" /> 인터페이스를 반환하고 <see cref="T:System.Web.UI.TemplateContainerAttribute" /> 특성으로 표시되는 속성의 컨테이너 컨트롤에 대한 기본 형식을 선언합니다. <see cref="T:System.Web.UI.ITemplate" /> 속성을 가진 컨트롤은 <see cref="T:System.Web.UI.INamingContainer" /> 인터페이스를 구현해야 합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Type> 매개 변수로 전달 되는 개체를 <xref:System.Web.UI.TemplateContainerAttribute> 개체의 형식으로 파서에서 <xref:System.ComponentModel.Container> 데이터 바인딩 식에 사용 되는 개체입니다. 속성이 반환 하는 컨트롤을 <xref:System.Web.UI.ITemplate> 인터페이스를 사용 하 여 표시 됩니다는 <xref:System.Web.UI.TemplateContainerAttribute>를 구현 해야 합니다는 <xref:System.Web.UI.INamingContainer> 인터페이스.  
  
 특성을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [특성](~/docs/standard/attributes/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 명명 된 템플릿 기반 컨트롤을 만드는 방법을 보여 줍니다 `TemplatedFirstControl` 라는 컨테이너를 사용 하 여 연결 및 `FirstTemplateContainer`합니다. 이 템플릿에 지정 된 경우 템플릿이 지정 되지 않은 경우 서버 시간을 표시 하는 사용자 지정 컨트롤 및 서식 파일의 콘텐츠를 만들 수 있습니다.  
  
 [!code-csharp[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.cs#1)]
 [!code-vb[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.vb#1)]  
  
 다음 Web form에는 앞의 코드 예제에서 만든 사용자 지정 컨트롤을 사용 하는 방법을 보여 줍니다. 두 인스턴스는 `TemplatedFirstControl` 페이지에 배치 됩니다.  
  
-   첫 번째 인스턴스는 템플릿이 포함 됩니다. `<FirstTemplate>`합니다.  
  
-   두 번째 인스턴스에 포함 되지 않습니다 `<FirstTemplate>`하므로 방금 시간을 표시 합니다.  
  
 [!code-aspx-csharp[SystemWebUI_TemplateContainerAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.aspx#2)]
 [!code-aspx-vb[SystemWebUI_TemplateContainerAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <related type="Article" href="~/docs/standard/attributes/index.md">특성을 사용하여 메타데이터 확장</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.TemplateContainerAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateContainerAttribute (Type containerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type containerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.TemplateContainerAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (containerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateContainerAttribute(Type ^ containerType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.TemplateContainerAttribute : Type -&gt; System.Web.UI.TemplateContainerAttribute" Usage="new System.Web.UI.TemplateContainerAttribute containerType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="containerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="containerType">컨테이너 컨트롤에 대한 <see cref="T:System.Type" />입니다.</param>
        <summary>지정한 컨테이너 형식을 사용하여 <see cref="T:System.Web.UI.TemplateContainerAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에는 명명 된 템플릿 기반 컨트롤을 만드는 방법을 보여 줍니다 `TemplatedFirstControl` 라는 컨테이너를 사용 하 여 연결 및 `FirstTemplateContainer`합니다. 이 템플릿에 지정 된 경우 템플릿이 지정 되지 않은 경우 서버 시간을 표시 하는 사용자 지정 컨트롤 및 서식 파일의 콘텐츠를 만들 수 있습니다. 합니다 <xref:System.Web.UI.TemplateContainerAttribute> 클래스는를 `FirstTemplate` 속성입니다.  
  
 [!code-csharp[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.cs#1)]
 [!code-vb[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Web.UI.TemplateContainerAttribute.ContainerType" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wxh45wzs(v=vs.100)">ASP.NET 컨트롤 디자이너 소개</related>
        <related type="Article" href="https://msdn.microsoft.com/library/5e601b3d-bb16-4dbe-9e35-7e92a34565ca">Web Forms 사용자 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateContainerAttribute (Type containerType, System.ComponentModel.BindingDirection bindingDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type containerType, valuetype System.ComponentModel.BindingDirection bindingDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.TemplateContainerAttribute.#ctor(System.Type,System.ComponentModel.BindingDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateContainerAttribute(Type ^ containerType, System::ComponentModel::BindingDirection bindingDirection);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.TemplateContainerAttribute : Type * System.ComponentModel.BindingDirection -&gt; System.Web.UI.TemplateContainerAttribute" Usage="new System.Web.UI.TemplateContainerAttribute (containerType, bindingDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="containerType" Type="System.Type" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="bindingDirection" Type="System.ComponentModel.BindingDirection" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="containerType">컨테이너 컨트롤에 대한 <see cref="T:System.Type" />입니다.</param>
        <param name="bindingDirection">컨테이너 컨트롤에 대한 <see cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" />입니다.</param>
        <summary>지정한 컨테이너 형식과 <see cref="T:System.Web.UI.TemplateContainerAttribute" /> 속성을 사용하여 <see cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" />
      </Docs>
    </Member>
    <Member MemberName="BindingDirection">
      <MemberSignature Language="C#" Value="public System.ComponentModel.BindingDirection BindingDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.BindingDirection BindingDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingDirection As BindingDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::BindingDirection BindingDirection { System::ComponentModel::BindingDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingDirection : System.ComponentModel.BindingDirection" Usage="System.Web.UI.TemplateContainerAttribute.BindingDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.BindingDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨테이너 컨트롤의 바인딩 방향을 가져옵니다.</summary>
        <value>컨테이너 컨트롤의 바인딩 방향을 나타내는 <see cref="T:System.ComponentModel.BindingDirection" />입니다. 기본값은 <see cref="F:System.ComponentModel.BindingDirection.OneWay" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateContainerAttribute.BindingDirection%2A> 속성 일 수 있습니다 합니다 <xref:System.ComponentModel.BindingDirection.OneWay> 템플릿의 속성 값만을 허용 하는 위치 필드 또는 <xref:System.ComponentModel.BindingDirection.TwoWay> 템플릿을 수락 하 고 속성 값을 노출할 수 있는 필드입니다. 후자의 경우 데이터 바인딩된 컨트롤이 자동으로 사용할 수 업데이트, 삭제 및 삽입 작업을 사용 하 여 데이터 원본의 `Bind` 데이터 바인딩 구문입니다.  
  
 데이터 바인딩에 대 한 자세한 내용은 참조 하세요. [데이터베이스를 바인딩할](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) 하 고 [데이터 바인딩 식을 개요](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 명명 된 템플릿 기반 컨트롤을 만드는 방법을 보여 줍니다 `TemplatedFirstControl` 라는 컨테이너를 사용 하 여 연결 및 `FirstTemplateContainer`합니다. 이렇게 하면 템플릿에 지정 된 경우 템플릿이 지정 되지 않은 경우 서버 시간을 표시 하는 사용자 지정 컨트롤 만들기 및 서식 파일의 내용을 있습니다. <xref:System.Attribute.GetCustomAttribute%2A> 메서드를 결정 합니다 <xref:System.Web.UI.TemplateContainerAttribute.BindingDirection%2A> 의 속성을 `FirstTemplate` 의 속성을 `TemplateFirstControl`.  
  
 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.TemplateContainerAttribute> 클래스입니다.  
  
 [!code-csharp[SystemWebUI_TemplateContainerAttribute#3](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.aspx#3)]
 [!code-vb[SystemWebUI_TemplateContainerAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.TemplateContainerAttribute.ContainerType" />
        <altmember cref="T:System.ComponentModel.BindingDirection" />
        <altmember cref="Overload:System.Attribute.GetCustomAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a">데이터 바인딩 식 구문</related>
      </Docs>
    </Member>
    <Member MemberName="ContainerType">
      <MemberSignature Language="C#" Value="public Type ContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContainerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.TemplateContainerAttribute.ContainerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContainerType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainerType : Type" Usage="System.Web.UI.TemplateContainerAttribute.ContainerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨테이너 컨트롤 형식을 가져옵니다.</summary>
        <value>컨테이너 컨트롤 <see cref="T:System.Type" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에는 명명 된 템플릿 기반 컨트롤을 만드는 방법을 보여 줍니다 `TemplatedFirstControl` 라는 컨테이너를 사용 하 여 연결 및 `FirstTemplateContainer`합니다. 이 템플릿에 지정 된 경우 템플릿이 지정 되지 않은 경우 서버 시간을 표시 하는 사용자 지정 컨트롤 및 서식 파일의 콘텐츠를 만들 수 있습니다. <xref:System.Web.UI.TemplateContainerAttribute> 클래스는를 `FirstTemplate` 속성 및 지정 하는 <xref:System.Web.UI.TemplateContainerAttribute.ContainerType%2A> 속성으로 `FirstTemplateContainer`합니다.  
  
 [!code-csharp[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.cs#1)]
 [!code-vb[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" />
      </Docs>
    </Member>
  </Members>
</Type>