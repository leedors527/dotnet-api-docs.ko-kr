<Type Name="TemplateInstance" FullName="System.Web.UI.TemplateInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a669c4bc7910ff7f74415a147d562720d9d5fb69" /><Meta Name="ms.sourcegitcommit" Value="9edc1e08bc8793bd984730153f0deb0817ad53c9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/30/2018" /><Meta Name="ms.locfileid" Value="50245410" /></Metadata><TypeSignature Language="C#" Value="public enum TemplateInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TemplateInstance extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.TemplateInstance" />
  <TypeSignature Language="VB.NET" Value="Public Enum TemplateInstance" />
  <TypeSignature Language="C++ CLI" Value="public enum class TemplateInstance" />
  <TypeSignature Language="F#" Value="type TemplateInstance = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>템플릿의 인스턴스를 만들 수 있는 횟수를 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateInstance> 템플릿의 인스턴스를 만들 수 있습니다 하는 횟수를 나타내는 값을 지정 하는 열거형입니다. 합니다 <xref:System.Web.UI.TemplateInstanceAttribute> 클래스에서 값을 사용 하는 <xref:System.Web.UI.TemplateInstanceAttribute> 열거형입니다. 특히 합니다 <xref:System.Web.UI.TemplateInstanceAttribute.Single> 및 <xref:System.Web.UI.TemplateInstanceAttribute.Multiple> 필드 단일 및 템플릿의 여러 인스턴스 각각 지정 합니다. 서식 파일의 단일 인스턴스를 사용 하면 템플릿 내에서 포함 된 컨트롤을 참조할 수 있습니다.  
  
 속성 메타 데이터에는 단일 값을 사용 하는 컨트롤의 예로 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> 의 속성을 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> 의 속성을 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 컨트롤 및 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A> 속성은 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.TemplateInstance> 열거 및 <xref:System.Web.UI.TemplateInstanceAttribute> 클래스입니다. 사용자 지정 <xref:System.Web.UI.WebControls.LoginView> 라는 컨트롤 `MyLoginView`, 재정의 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 사용 하 여 속성을 <xref:System.Web.UI.TemplateInstanceAttribute> 클래스의 인스턴스를 하나만 지정할 수는 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 속성이 만들어집니다.  
  
 [!code-csharp[System.Web.UI.TemplateInstance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.TemplateInstance/cs/templateinstance.cs#1)]
 [!code-vb[System.Web.UI.TemplateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.TemplateInstance/vb/templateinstance.vb#1)]  
  
 다음 코드 예제를 사용 하는 ASPX 파일은는 `MyLoginView` 제어 하 고 액세스 하는 방법을 보여 줍니다를 <xref:System.Web.UI.WebControls.Label> 내에 있는 컨트롤은 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> 속성.  
  
 [!code-aspx-csharp[System.Web.UI.TemplateInstance#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.TemplateInstance/cs/templateinstance.aspx#2)]
 [!code-aspx-vb[System.Web.UI.TemplateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.TemplateInstance/vb/templateinstance.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
    <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
  </Docs>
  <Members>
    <Member MemberName="Multiple">
      <MemberSignature Language="C#" Value="Multiple" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.TemplateInstance Multiple = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.TemplateInstance.Multiple" />
      <MemberSignature Language="VB.NET" Value="Multiple" />
      <MemberSignature Language="C++ CLI" Value="Multiple" />
      <MemberSignature Language="F#" Value="Multiple = 0" Usage="System.Web.UI.TemplateInstance.Multiple" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.TemplateInstance</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>여러 번 인스턴스화되는 템플릿입니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.TemplateInstance Single = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.TemplateInstance.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberSignature Language="F#" Value="Single = 1" Usage="System.Web.UI.TemplateInstance.Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.TemplateInstance</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>한 번만 인스턴스화되는 템플릿입니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>