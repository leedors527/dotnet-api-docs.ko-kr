<Type Name="RequestValidationSource" FullName="System.Web.Util.RequestValidationSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd387d232e3dbf90bfb6d6510852f5386bbe84cd" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36375258" /></Metadata><TypeSignature Language="C#" Value="public enum RequestValidationSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestValidationSource extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.Util.RequestValidationSource" />
  <TypeSignature Language="VB.NET" Value="Public Enum RequestValidationSource" />
  <TypeSignature Language="C++ CLI" Value="public enum class RequestValidationSource" />
  <TypeSignature Language="F#" Value="type RequestValidationSource = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>유효성을 검사할 HTTP 요청의 종류를 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구현 하 여 사용자 지정 요청 유효성 검사 유형을 만들 수 있습니다는 <xref:System.Web.Util.RequestValidator> 형식입니다. ASP.NET 호출 하는 경우는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> ASP.NET 요청 유효성을 검사 하는 메서드를 통과 `requestValidationSource` 유효성을 검사할 데이터의 원본을 지정 하려면 매개 변수입니다. <xref:System.Web.Util.RequestValidationSource> 열거형 소스 또는 유효성 검사 중인 요청 데이터의 종류를 지정 하는 데 사용 됩니다. 열거형에 전달 되는 HTTP 입력의 형식을 나타내는 합니다 `value` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드. 사용자 지정 논리를 사용 하 여 유효성을 검사 하지 않으려는 경우 HTTP 입력에 대 한 기본 요청 유효성 검사 구현으로 대체 하는 방법으로 열거형을 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 쿼리 문자열 값에 대 한 특정 문자열에만 허용 하는 사용자 지정 요청 유효성 검사기 클래스를 만드는 방법을 보여 줍니다.  
  
```vb  
Imports System  
Imports System.Web  
Imports System.Web.Util  
  
Public Class CustomRequestValidation  
    Inherits RequestValidator  
  
Public Sub New()  
End Sub  
  
Protected Overloads Overrides Function IsValidRequestString( _  
        ByVal context As HttpContext, _  
        ByVal value As String, _  
        ByVal requestValidationSource__1 As RequestValidationSource, _  
        ByVal collectionKey As String, _  
        ByRef validationFailureIndex As Integer) As Boolean  
    validationFailureIndex = -1  
    ' Set a default value for the out parameter.  
    ' This application does not use RawUrl directly, so you can   
    ' ignore the check for RequestValidationSource.RawUrl.  
    If requestValidationSource = RequestValidationSource.RawUrl Then  
        Return True  
    End If  
  
    ' Allow the query-string key "data" to have an XML-like value.  
    If (requestValidationSource = _  
            (RequestValidationSource.QueryString) AndAlso _  
            (collectionKey = "data") Then  
        ' The querystring value "<example>1234</example>" is allowed.  
        If value = "<example>1234</example>" Then  
            validationFailureIndex = -1  
            Return True  
        Else  
            ' Leave any further checks to ASP.NET.  
            Return MyBase.IsValidRequestString(context, value, _  
                requestValidationSource__1, collectionKey, _  
                validationFailureIndex)  
        End If  
    Else  
        ' All other HTTP input checks fall back to   
        ' the base ASP.NET implementation.  
        Return MyBase.IsValidRequestString(context, value, _  
            requestValidationSource__1, collectionKey, _  
            validationFailureIndex)  
    End If  
End Function  
End Class  
```  
  
```csharp  
using System;  
using System.Web;  
using System.Web.Util;  
  
public class CustomRequestValidation : RequestValidator  
{  
    public CustomRequestValidation() {}  
  
    protected override bool IsValidRequestString(  
        HttpContext context, string value,   
        RequestValidationSource requestValidationSource, string collectionKey,   
        out int validationFailureIndex)  
    {  
        //Set a default value for the out parameter.  
        validationFailureIndex = -1;  
  
        // This application does not use RawUrl directly,   
        // so you can ignore the check for RequestValidationSource.RawUrl.  
        if (requestValidationSource == RequestValidationSource.RawUrl)  
            return true;  
  
        // Allow the query-string key "data" to have an XML-like value.  
        if (  
            (requestValidationSource == RequestValidationSource.QueryString) &&  
            (collectionKey == "data")  
           )  
        {  
            // The querystring value "<example>1234</example>" is allowed.  
            if (value == "<example>1234</example>")  
            {  
                validationFailureIndex = -1;  
                return true;  
            }  
            else  
           // Leave any further checks to ASP.NET.  
                return base.IsValidRequestString(context, value,   
                requestValidationSource, collectionKey, out   
                validationFailureIndex);  
        }  
        // All other HTTP input checks fall back to   
        // the base ASP.NET implementation.  
        else  
        {  
            return base.IsValidRequestString(context, value,   
                requestValidationSource, collectionKey,   
                out validationFailureIndex);  
        }  
    }  
}  
```  
  
 다음 예제에서는 사용자 지정 유효성 검사기를 사용 하는 ASP.NET을 구성 하는 방법을 보여 줍니다.  
  
```  
<httpRuntime requestValidationType="CustomRequestValidation" />  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Util.RequestValidator" />
  </Docs>
  <Members>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="Cookies" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource Cookies = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.Cookies" />
      <MemberSignature Language="VB.NET" Value="Cookies" />
      <MemberSignature Language="C++ CLI" Value="Cookies" />
      <MemberSignature Language="F#" Value="Cookies = 2" Usage="System.Web.Util.RequestValidationSource.Cookies" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>요청 쿠키입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `collectionKey` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드는 컬렉션의 쿠키의 이름으로 설정 됩니다.  
  
 합니다 `value` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드는 컬렉션의 값으로 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="Files" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource Files = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.Files" />
      <MemberSignature Language="VB.NET" Value="Files" />
      <MemberSignature Language="C++ CLI" Value="Files" />
      <MemberSignature Language="F#" Value="Files = 3" Usage="System.Web.Util.RequestValidationSource.Files" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>업로드된 파일입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `collectionKey` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드는 컬렉션에 업로드 된 파일의 이름으로 설정 됩니다.  
  
 합니다 `value` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드는 컬렉션에 업로드 된 파일의 값으로 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="Form" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource Form = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.Form" />
      <MemberSignature Language="VB.NET" Value="Form" />
      <MemberSignature Language="C++ CLI" Value="Form" />
      <MemberSignature Language="F#" Value="Form = 1" Usage="System.Web.Util.RequestValidationSource.Form" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>폼 값입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `collectionKey` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드는 컬렉션의 형식 매개 변수의 이름으로 설정 됩니다.  
  
 합니다 `value` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드는 컬렉션의 형식 매개 변수의 값으로 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="Headers" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource Headers = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.Headers" />
      <MemberSignature Language="VB.NET" Value="Headers" />
      <MemberSignature Language="C++ CLI" Value="Headers" />
      <MemberSignature Language="F#" Value="Headers = 7" Usage="System.Web.Util.RequestValidationSource.Headers" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>요청 헤더입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `collectionKey` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드는 컬렉션에 HTTP 헤더의 이름으로 설정 됩니다.  
  
 합니다 `value` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드는 컬렉션에 HTTP 헤더의 값으로 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="Path" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource Path = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.Path" />
      <MemberSignature Language="VB.NET" Value="Path" />
      <MemberSignature Language="C++ CLI" Value="Path" />
      <MemberSignature Language="F#" Value="Path = 5" Usage="System.Web.Util.RequestValidationSource.Path" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>가상 경로입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `collectionKey` 의 매개 변수를 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 하도록 설정 되어 `null` (`Path` 값의 컬렉션이 아닌).  
  
 합니다 `value` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드는 경로 필드의 값으로 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="PathInfo" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource PathInfo = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.PathInfo" />
      <MemberSignature Language="VB.NET" Value="PathInfo" />
      <MemberSignature Language="C++ CLI" Value="PathInfo" />
      <MemberSignature Language="F#" Value="PathInfo = 6" Usage="System.Web.Util.RequestValidationSource.PathInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>URL 경로에 대한 확장명인 HTTP <see cref="P:System.Web.HttpRequest.PathInfo" /> 문자열입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `collectionKey` 의 매개 변수를 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 하도록 설정 되어 `null` (`PathInfo` 값의 컬렉션이 아닌).  
  
 합니다 `value` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드 PathInfo 필드의 값으로 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="QueryString" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource QueryString = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.QueryString" />
      <MemberSignature Language="VB.NET" Value="QueryString" />
      <MemberSignature Language="C++ CLI" Value="QueryString" />
      <MemberSignature Language="F#" Value="QueryString = 0" Usage="System.Web.Util.RequestValidationSource.QueryString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>쿼리 문자열입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `collectionKey` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드는 컬렉션의 쿼리 문자열 매개 변수의 이름으로 설정 됩니다.  
  
 합니다 `value` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드는 컬렉션의 쿼리 문자열 매개 변수의 값으로 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="RawUrl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Util.RequestValidationSource RawUrl = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Util.RequestValidationSource.RawUrl" />
      <MemberSignature Language="VB.NET" Value="RawUrl" />
      <MemberSignature Language="C++ CLI" Value="RawUrl" />
      <MemberSignature Language="F#" Value="RawUrl = 4" Usage="System.Web.Util.RequestValidationSource.RawUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidationSource</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>원시 URL입니다. 도메인 뒤의 URL 부분입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `collectionKey` 의 매개 변수를 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드를로 `null`합니다. (`RawUrl` 값의 컬렉션이 아닙니다.)  
  
 합니다 `value` 의 매개 변수는 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 메서드 RawUrl 필드의 값으로 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>