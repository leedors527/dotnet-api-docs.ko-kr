<Type Name="ParserErrorCollection" FullName="System.Web.ParserErrorCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1f3ca0c008fe22cc5070ba06baebc00f1782b6e" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55422369" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParserErrorCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ParserErrorCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.ParserErrorCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParserErrorCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParserErrorCollection sealed : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type ParserErrorCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>구문 분석 중에 검색된 파서 오류 집합을 관리합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.ParserErrorCollection> 클래스는 메서드 및 속성의 컬렉션을 관리 하는 데 사용할 수 있는 제공 <xref:System.Web.ParserError> 개체입니다. 예를 들어, 파서 오류 집합을 사용자 지정을 사용 하는 동안 구문 분석 시 컬렉션에 추가할 수 있습니다 <xref:System.Web.Compilation.BuildProvider> 모든 구문 분석 중 발생 한 예외를 구문 분석 하는 보고할 개체입니다.  
  
 제거 하거나 컬렉션에서 찾습니다 파서 오류를 추가 하려면 다음을 사용 합니다.  
  
-   <xref:System.Web.ParserErrorCollection.Add%2A> 단일 추가 방법 <xref:System.Web.ParserError> 개체 컬렉션입니다.  
  
-   합니다 <xref:System.Web.ParserErrorCollection.AddRange%2A> 여러 개를 추가 하는 방법을 <xref:System.Web.ParserError> 개체를 컬렉션에 있습니다.  
  
-   모두를 <xref:System.Web.ParserErrorCollection.Insert%2A> 메서드 및 <xref:System.Web.ParserErrorCollection.Item%2A> 속성을 <xref:System.Web.ParserErrorCollection> 단일 추가할 인덱서 <xref:System.Web.ParserError> 개체를 컬렉션의 지정 된 인덱스에.  
  
 또한 사용할 수는 <xref:System.Web.ParserErrorCollection> 다음을 수행 하는 클래스:  
  
-   제거할 <xref:System.Web.ParserError> 사용 하 여 개체를 <xref:System.Web.ParserErrorCollection.Remove%2A> 메서드.  
  
-   특정 여부를 확인 <xref:System.Web.ParserError> 를 사용 하 여이 컬렉션에는 <xref:System.Web.ParserErrorCollection.Contains%2A> 메서드.  
  
-   위치를 찾을 <xref:System.Web.ParserError> 를 사용 하 여 개체가 컬렉션에 있는지를 <xref:System.Web.ParserErrorCollection.IndexOf%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.ParserErrorCollection> 메서드.  
  
 [!code-csharp[System.Web.ParserErrorCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#1)]
 [!code-vb[System.Web.ParserErrorCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.HttpException" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.ParserErrorCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserErrorCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserErrorCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.ParserErrorCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는의 인스턴스를 초기화 하는 방법에 설명 합니다 <xref:System.Web.ParserErrorCollection> 클래스입니다.  
  
 [!code-csharp[System.Web.ParserErrorCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#2)]
 [!code-vb[System.Web.ParserErrorCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserErrorCollection (System.Web.ParserError[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.ParserError[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.#ctor(System.Web.ParserError[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ParserError())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserErrorCollection(cli::array &lt;System::Web::ParserError ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.ParserErrorCollection : System.Web.ParserError[] -&gt; System.Web.ParserErrorCollection" Usage="new System.Web.ParserErrorCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError[]" />
      </Parameters>
      <Docs>
        <param name="value">컬렉션에 추가할 오류를 나타내는 <see cref="T:System.Web.ParserError" /> 형식의 배열입니다.</param>
        <summary><see cref="T:System.Web.ParserErrorCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.ParserErrorCollection.%23ctor%2A?displayProperty=nameWithType> 생성자의 배열을 추가 <xref:System.Web.ParserError> 컬렉션 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Add(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As ParserError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.ParserError -&gt; int" Usage="parserErrorCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">컬렉션에 추가할 <see cref="T:System.Web.ParserError" /> 값입니다.</param>
        <summary>컬렉션에 값을 추가합니다.</summary>
        <returns>컬렉션 내의 인덱스 값 또는 -1(값이 컬렉션에 이미 있는 경우)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.ParserErrorCollection.Add%2A> 메서드는 기존 항목 추가를 <xref:System.Web.ParserError> 개체 컬렉션입니다. 동일한 추가할 수 없습니다 <xref:System.Web.ParserError> 컬렉션에 개체를 두 번 이상. 호출 하는 경우는 <xref:System.Web.ParserErrorCollection.Add%2A> 메서드를 사용 하는 <xref:System.Web.ParserError> 컬렉션, 추가 실패 하 고-1에서 이미 사용 중인 개체가 반환 됩니다.  
  
 컬렉션에 여러 개체를 추가 하려면 사용 된 <xref:System.Web.ParserErrorCollection.AddRange%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에 추가 하는 방법을 보여 줍니다.는 <xref:System.Web.ParserError> 개체를 <xref:System.Web.ParserErrorCollection> 개체입니다.  
  
 [!code-csharp[System.Web.ParserErrorCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#3)]
 [!code-vb[System.Web.ParserErrorCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컬렉션에 <see cref="T:System.Web.ParserError" /> 개체를 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.ParserError[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.ParserError[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.AddRange(System.Web.ParserError[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ParserError())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Web::ParserError ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.ParserError[] -&gt; unit" Usage="parserErrorCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError[]" />
      </Parameters>
      <Docs>
        <param name="value">컬렉션에 추가할 값을 나타내는 <see cref="T:System.Web.ParserError" /> 형식의 배열입니다.</param>
        <summary>컬렉션에 <see cref="T:System.Web.ParserError" /> 개체 배열을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.ParserErrorCollection.AddRange%2A> 배열을 추가 하는 방법 <xref:System.Web.ParserError> 개체를 컬렉션에 있습니다. 합니다 <xref:System.Web.ParserErrorCollection.AddRange%2A> 메서드는 여러 만들면 유용 <xref:System.Web.ParserError> 개체 및 단일 메서드 호출을 사용 하 여 컬렉션에 추가할 합니다. 개별 추가할 <xref:System.Web.ParserError> 개체를 컬렉션에 사용 된 <xref:System.Web.ParserErrorCollection.Add%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 범위를 추가 하는 방법을 보여 줍니다 <xref:System.Web.ParserError> 개체를 <xref:System.Web.ParserErrorCollection> 개체입니다.  
  
 [!code-csharp[System.Web.ParserErrorCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#4)]
 [!code-vb[System.Web.ParserErrorCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.ParserErrorCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.ParserErrorCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.AddRange(System.Web.ParserErrorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ParserErrorCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Web::ParserErrorCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.ParserErrorCollection -&gt; unit" Usage="parserErrorCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserErrorCollection" />
      </Parameters>
      <Docs>
        <param name="value">컬렉션에 추가할 <see cref="T:System.Web.ParserErrorCollection" /> 개체를 포함하는 <see cref="T:System.Web.ParserError" />입니다.</param>
        <summary>컬렉션에 기존 <see cref="T:System.Web.ParserErrorCollection" />의 개체를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 달리는 <xref:System.Web.ParserErrorCollection.Add%2A> 메서드를 <xref:System.Web.ParserErrorCollection.AddRange%2A> 메서드 확인에 사용할 수 있는 반환 값이 없는 여부를 <xref:System.Web.ParserError> 추가할 개체가 이미 컬렉션에. 이 정보를 필요로 하는 경우 사용 합니다 <xref:System.Web.ParserErrorCollection.Contains%2A> 메서드를 사용 하기 전에 <xref:System.Web.ParserErrorCollection.AddRange%2A>입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 범위를 추가 하는 방법을 보여 줍니다 <xref:System.Web.ParserError> 개체를 <xref:System.Web.ParserErrorCollection> 개체입니다.  
  
 [!code-csharp[System.Web.ParserErrorCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#4)]
 [!code-vb[System.Web.ParserErrorCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Web.ParserError" /> 값이 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Contains(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ParserError) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.ParserError -&gt; bool" Usage="parserErrorCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">컬렉션에서 찾을 <see cref="T:System.Web.ParserError" />입니다.</param>
        <summary>컬렉션에 <see cref="T:System.Web.ParserError" /> 개체가 있는지 여부를 확인합니다.</summary>
        <returns><see cref="T:System.Web.ParserError" />가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동일한 추가할 수 없습니다 <xref:System.Web.ParserError> 컬렉션에 개체를 두 번 이상. 그러나 추가 하는 동안는 <xref:System.Web.ParserError> 개체 두 번 이상 예외를 throw 하지 것입니다. 대신, 추가 하지 못합니다. 이 경우에 <xref:System.Web.ParserErrorCollection.Add%2A> 메서드는 값이-1 반환 합니다. 그러나 합니다 <xref:System.Web.ParserErrorCollection.AddRange%2A> 고 <xref:System.Web.ParserErrorCollection.Insert%2A> 메서드 반환 값 필요가 없습니다. 추가 하는 경우 <xref:System.Web.ParserError> 이러한 방법 중 하나를 사용 하 여 개체를 사용 합니다 <xref:System.Web.ParserErrorCollection.Contains%2A> 특정 여부를 확인 하는 방법 <xref:System.Web.ParserError> 개체가 컬렉션에 이미 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 지정 된 인스턴스를 검색 하는 방법을 보여 줍니다 <xref:System.Web.ParserError> 개체를 <xref:System.Web.ParserErrorCollection> 개체입니다.  
  
 [!code-csharp[System.Web.ParserErrorCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#5)]
 [!code-vb[System.Web.ParserErrorCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.ParserError[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.ParserError[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.CopyTo(System.Web.ParserError[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ParserError(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::ParserError ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.ParserError[] * int -&gt; unit" Usage="parserErrorCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.ParserError[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">컬렉션의 파서 오류를 복사할 <see cref="T:System.Web.ParserError" /> 형식의 배열입니다.</param>
        <param name="index"><see cref="T:System.Web.ParserError" />를 복사할 배열 내의 첫째 인덱스입니다.</param>
        <summary>대상 배열의 지정된 인덱스에서 시작하여 컬렉션의 <see cref="T:System.Web.ParserError" /> 개체를 호환 가능한 1차원 배열에 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.ParserErrorCollection.CopyTo%2A> 복사 하는 메서드는 <xref:System.Web.ParserError> (포함 된 항목 참조도 포함) 컬렉션의 지정된 된 인덱스부터 호환 되는 배열, 개체입니다. 정렬 하려는 경우에 유용 합니다 <xref:System.Web.ParserError> 를 사용 하 여 컬렉션의 개체는 <xref:System.Array.Sort%2A> 메서드. 가상 하드 디스크 파일에 대한 중요 정보를 제공하려면  
  
1.  복사를 <xref:System.Web.ParserError> 호환 되는 배열 개체입니다.  
  
2.  배열을 정렬 합니다.  
  
3.  사용 하 여는 <xref:System.Web.ParserErrorCollection.Remove%2A> 메서드를 모두 제거 하는 <xref:System.Web.ParserError> 컬렉션에서 개체입니다.  
  
4.  사용 된 <xref:System.Web.ParserErrorCollection.AddRange%2A> 정렬된 된 배열을 다시 컬렉션에 추가 하는 방법입니다.  
  
   
  
## Examples  
 내용을 복사 하는 방법을 다음 코드 예제는 <xref:System.Web.ParserErrorCollection> 지정 된 개체 <xref:System.Web.ParserError> 배열입니다.  
  
 [!code-csharp[System.Web.ParserErrorCollection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#6)]
 [!code-vb[System.Web.ParserErrorCollection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.IndexOf(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ParserError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.ParserError -&gt; int" Usage="parserErrorCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">컬렉션에서 찾을 <see cref="T:System.Web.ParserError" />입니다.</param>
        <summary>컬렉션에서 지정된 <see cref="T:System.Web.ParserError" /> 개체의 인덱스를 가져옵니다.</summary>
        <returns>컬렉션에 포함된 <see cref="T:System.Web.ParserError" /> 개체의 인덱스(0부터 시작) 또는 1(<see cref="T:System.Web.ParserError" />가 컬렉션에 없는 경우)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.ParserErrorCollection.IndexOf%2A> 의 인덱스를 확인 하는 메서드를 <xref:System.Web.ParserError> 컬렉션 내의 개체입니다. 각각의 인덱스를 확인 하는 데 유용 <xref:System.Web.ParserError> 를 사용 하 여 컬렉션을 반복 하는 경우는 <xref:System.Collections.IEnumerator> 반환한 개체는 <xref:System.Collections.CollectionBase.GetEnumerator%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는의 인덱스를 찾는 방법을 <xref:System.Web.ParserError> 개체에서 지정 된 인덱스는 <xref:System.Web.ParserErrorCollection> 컬렉션입니다.  
  
 [!code-csharp[System.Web.ParserErrorCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#5)]
 [!code-vb[System.Web.ParserErrorCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Insert(System.Int32,System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As ParserError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.ParserError -&gt; unit" Usage="parserErrorCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="index">컬렉션에서 <see cref="T:System.Web.ParserError" />를 삽입할 위치의 인덱스입니다.</param>
        <param name="value">컬렉션에 삽입할 <see cref="T:System.Web.ParserError" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Web.ParserError" /> 개체를 컬렉션의 지정된 인덱스에 삽입합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 합니다 <xref:System.Web.ParserErrorCollection.Insert%2A> 기존 삽입 하는 방법 <xref:System.Web.ParserError> 컬렉션 내의 특정 인덱스에는 개체입니다.  
  
 동일한 추가할 수 없습니다 <xref:System.Web.ParserError> 컬렉션에 개체를 두 번 이상. 호출 하는 경우는 <xref:System.Web.ParserErrorCollection.Insert%2A> 메서드를 사용 하 여는 <xref:System.Web.ParserError> 이 이미 컬렉션에서 삽입이 실패 합니다. 사용 하 여는 <xref:System.Web.ParserErrorCollection.Contains%2A> 특정 여부를 확인 하려면 삽입 하기 전에 메서드 <xref:System.Web.ParserError> 컬렉션에 이미 있습니다. 위치를 변경 하는 <xref:System.Web.ParserError> 컬렉션 내에서 먼저 제거 해야 사용 하 여는 <xref:System.Web.ParserErrorCollection.Remove%2A> 메서드를 사용 하 여 원하는 인덱스에 삽입 하 고 <xref:System.Web.ParserErrorCollection.Insert%2A>.  
  
   
  
## Examples  
 다음 코드 예제에는 삽입 하는 방법을 보여 줍니다.는 <xref:System.Web.ParserError> 개체에서 지정 된 인덱스는 <xref:System.Web.ParserErrorCollection> 컬렉션입니다.  
  
 [!code-csharp[System.Web.ParserErrorCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#8)]
 [!code-vb[System.Web.ParserErrorCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.ParserError this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ParserError Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.ParserErrorCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ParserError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ParserError ^ default[int] { System::Web::ParserError ^ get(int index); void set(int index, System::Web::ParserError ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.ParserError with get, set" Usage="System.Web.ParserErrorCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ParserError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">컬렉션에서 가져오거나 설정할 <see cref="T:System.Web.ParserError" /> 개체의 인덱스입니다.</param>
        <summary>컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Web.ParserError" /> 개체를 가져오거나 설정합니다.</summary>
        <value>컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Web.ParserError" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.ParserErrorCollection.Item%2A> 검색할 속성의 <xref:System.Web.ParserError> 컬렉션 내의 지정한 인덱스에 있는 개체입니다. 에 대 한 참조가 있는 경우는 <xref:System.Web.ParserError> 개체 및 필요한 인덱스를 사용 하 여를 <xref:System.Web.ParserErrorCollection.IndexOf%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Remove(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As ParserError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.ParserError -&gt; unit" Usage="parserErrorCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">컬렉션에서 제거할 <see cref="T:System.Web.ParserError" />입니다.</param>
        <summary>컬렉션에서 지정된 <see cref="T:System.Web.ParserError" /> 개체를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.ParserErrorCollection.Remove%2A> 제거 하는 방법을 <xref:System.Web.ParserError> 에 대 한 참조가 있는 경우 컬렉션에서 개체를 <xref:System.Web.ParserError>입니다.  
  
   
  
## Examples  
 다음 코드 예제를 제거 하는 방법에 설명 된 <xref:System.Web.ParserError> 의 지정 된 인덱스에서를 <xref:System.Web.ParserErrorCollection> 개체.  
  
 [!code-csharp[System.Web.ParserErrorCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#8)]
 [!code-vb[System.Web.ParserErrorCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>