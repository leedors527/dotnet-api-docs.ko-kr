<Type Name="AnnotationStore" FullName="System.Windows.Annotations.Storage.AnnotationStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60e43834c78a7d1d89f24fbf8a901393a5c253c0" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46635455" /></Metadata><TypeSignature Language="C#" Value="public abstract class AnnotationStore : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AnnotationStore extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Annotations.Storage.AnnotationStore" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AnnotationStore&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnnotationStore abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type AnnotationStore = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>파생 클래스에서 재정의된 경우 사용자 주석을 쓰고 읽기 위한 데이터 저장소를 나타냅니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnnotationStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AnnotationStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotation">
      <MemberSignature Language="C#" Value="public abstract void AddAnnotation (System.Windows.Annotations.Annotation newAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAnnotation(class System.Windows.Annotations.Annotation newAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddAnnotation (newAnnotation As Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddAnnotation(System::Windows::Annotations::Annotation ^ newAnnotation);" />
      <MemberSignature Language="F#" Value="abstract member AddAnnotation : System.Windows.Annotations.Annotation -&gt; unit" Usage="annotationStore.AddAnnotation newAnnotation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAnnotation" Type="System.Windows.Annotations.Annotation" />
      </Parameters>
      <Docs>
        <param name="newAnnotation">저장소에 추가할 주석입니다.</param>
        <summary>저장소에 새 <see cref="T:System.Windows.Annotations.Annotation" />을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 <xref:System.Windows.Annotations.Annotation> 전역적으로 고유 식별자 (GUID) 저장소에 추가 됩니다 <xref:System.Windows.Annotations.Annotation.Id%2A> 속성을 새 값으로 설정 됩니다.  때 <xref:System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation%2A> 가 호출 해당 <xref:System.Windows.Annotations.Annotation.Id%2A> 속성을 검사 하는 경우 참조 하는 <xref:System.Windows.Annotations.Annotation> 스토어로 이미 추가 되었습니다.  경우는 <xref:System.Windows.Annotations.Annotation> 이미 추가 되었습니다 및 저장소에 있습니다 (기준으로 해당 <xref:System.Windows.Annotations.Annotation.Id%2A> 속성)는 <xref:System.ArgumentException> 오류가 throw 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="newAnnotation" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">같은 <see cref="P:System.Windows.Annotations.Annotation.Id" /> 속성 값을 갖는 <see cref="T:System.Windows.Annotations.Annotation" />이 저장소에 이미 있습니다.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />가 저장소에서 호출되었습니다.</exception>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="AnchorChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Annotations.AnnotationResourceChangedEventHandler AnchorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Annotations.AnnotationResourceChangedEventHandler AnchorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AnchorChanged As AnnotationResourceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Annotations::AnnotationResourceChangedEventHandler ^ AnchorChanged;" />
      <MemberSignature Language="F#" Value="member this.AnchorChanged : System.Windows.Annotations.AnnotationResourceChangedEventHandler " Usage="member this.AnchorChanged : System.Windows.Annotations.AnnotationResourceChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.AnnotationResourceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>저장소의 <see cref="T:System.Windows.Annotations.Annotation" /> 앵커가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged> 주석에 대 한 변경 내용을 모니터링할 이벤트를 사용할 수 <xref:System.Windows.Annotations.Annotation.Anchors%2A> 각각에 등록 하지 않고도 저장소에 포함 된 <xref:System.Windows.Annotations.Annotation> 개별적으로 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AuthorChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Annotations.AnnotationAuthorChangedEventHandler AuthorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Annotations.AnnotationAuthorChangedEventHandler AuthorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorChanged As AnnotationAuthorChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Annotations::AnnotationAuthorChangedEventHandler ^ AuthorChanged;" />
      <MemberSignature Language="F#" Value="member this.AuthorChanged : System.Windows.Annotations.AnnotationAuthorChangedEventHandler " Usage="member this.AuthorChanged : System.Windows.Annotations.AnnotationAuthorChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.AnnotationAuthorChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>저장소의 <see cref="T:System.Windows.Annotations.Annotation" /> 작성자가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged> 주석에 대 한 변경 내용을 모니터링할 이벤트를 사용할 수 <xref:System.Windows.Annotations.Annotation.Authors%2A> 각각에 등록 하지 않고도 저장소에 포함 된 <xref:System.Windows.Annotations.Annotation> 개별적으로 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public abstract bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Windows.Annotations.Storage.AnnotationStore.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>주석 버퍼의 데이터를 실제 데이터 저장소에 즉시 쓸지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>주석 버퍼의 데이터를 각 작업에 대해 실제 데이터 저장소에 즉시 쓰면 <see langword="true" />이고, 응용 프로그램이 명시적으로 <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Flush" />를 호출할 때 주석 버퍼의 데이터를 쓰면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명시적 저장 모델을 사용 하는 애플리케이션을 설정할 수 <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> 하 `false` 호출 <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> 직접을 적절 한 경우.  
  
 암시적 저장 모델을 사용 하는 애플리케이션을 설정할 수 있습니다 <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> 하 `true` 시킬 <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> 모든 저장소 작업 후 자동으로 호출 됩니다 (추가, 삭제 또는 수정).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.Flush" />
      </Docs>
    </Member>
    <Member MemberName="CargoChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Annotations.AnnotationResourceChangedEventHandler CargoChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Annotations.AnnotationResourceChangedEventHandler CargoChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CargoChanged As AnnotationResourceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Annotations::AnnotationResourceChangedEventHandler ^ CargoChanged;" />
      <MemberSignature Language="F#" Value="member this.CargoChanged : System.Windows.Annotations.AnnotationResourceChangedEventHandler " Usage="member this.CargoChanged : System.Windows.Annotations.AnnotationResourceChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.AnnotationResourceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>저장소의 <see cref="T:System.Windows.Annotations.Annotation" /> cargo가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged> 주석에 대 한 변경 내용을 모니터링할 이벤트를 사용할 수 <xref:System.Windows.Annotations.Annotation.Cargos%2A> 각각에 등록 하지 않고도 저장소에 포함 된 <xref:System.Windows.Annotations.Annotation> 개별적으로 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteAnnotation">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Annotations.Annotation DeleteAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Annotations.Annotation DeleteAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Annotations::Annotation ^ DeleteAnnotation(Guid annotationId);" />
      <MemberSignature Language="F#" Value="abstract member DeleteAnnotation : Guid -&gt; System.Windows.Annotations.Annotation" Usage="annotationStore.DeleteAnnotation annotationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId">삭제할 주석의 GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> 속성입니다.</param>
        <summary>지정된 <see cref="P:System.Windows.Annotations.Annotation.Id" />가 있는 주석을 저장소에서 삭제합니다.</summary>
        <returns>삭제된 주석이거나, 지정된 <paramref name="annotationId" />가 있는 주석이 저장소에 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation%2A> 및 <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> 메서드.  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />가 저장소에서 호출되었습니다.</exception>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)" />
        <altmember cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>저장소에서 사용하는 리소스를 해제합니다.</summary>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.Finalize" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="annotationStore.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>저장소에서 사용하는 모든 관리되는 리소스 및 관리되지 않는 리소스를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애플리케이션을 호출 해야 <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> 사용을 마쳤으면는 <xref:System.Windows.Annotations.Storage.AnnotationStore>합니다.  호출한 후 <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> 애플리케이션에 대 한 모든 참조를 해제할 수 있습니다 합니다 <xref:System.Windows.Annotations.Storage.AnnotationStore> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Windows.Annotations.Storage.AnnotationStore> 차지한 합니다.  자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
 공용 <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> 보호 된 메서드 호출 <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> `(Boolean)` 메서드를 `disposing` 의 매개 변수 `true` 모든 관리 및 비관리 리소스를 해제 합니다.  
  
> [!NOTE]
>  호출 <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> 에 대 한 마지막 참조 하기 전에 <xref:System.Windows.Annotations.Storage.AnnotationStore> 해제 됩니다.  하는 경우 <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> 가 호출 되지 않습니다 <xref:System.Windows.Annotations.Storage.AnnotationStore> 가비지 수집기는 저장소를 호출할 때까지 리소스가 해제 되지 것입니다 <xref:System.Windows.Annotations.Storage.AnnotationStore.Finalize%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IDisposable.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="annotationStore.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary>저장소에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보호 된이 <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> 공용 메서드는 <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> 고 <xref:System.Object.Finalize%2A> 메서드.  공용 <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> 보호 된 호출 <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> `(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.  <xref:System.Object.Finalize%2A> 호출 <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> 사용 하 여 `disposing` 로 `false`합니다.  
  
 경우는 `disposing` 매개 변수가 `true`, <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> 릴리스 관리 되는 모든 리소스를 보유 하는 개체는 <xref:System.Windows.Annotations.Storage.AnnotationStore> 참조 합니다.  <xref:System.Windows.Annotations.Storage.AnnotationStore.Dispose%2A> 또한를 호출 하는 `Dispose()` 참조 된 각 개체의 메서드.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" />는 다른 개체에서 여러 번 호출할 수 있습니다.  재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
에 대 한 자세한 내용은 <see cref="M:System.IDisposable.Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnnotationStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnnotationStore ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="annotationStore.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)" />가 이 저장소에 대해 호출되도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 재정의 기본 <xref:System.Object.Finalize%2A> 메서드.  애플리케이션을 호출 하지 않아야 <xref:System.Windows.Annotations.Storage.AnnotationStore.Finalize%2A> 직접.  <xref:System.Windows.Annotations.Storage.AnnotationStore.Finalize%2A> 호출 하 여 사용 하지 않도록 설정 하지 않으면 가비지 수집 중 자동으로 호출 된 <xref:System.GC.SuppressFinalize%2A> 메서드.  
  
 자세한 내용은 [Finalize 메서드 및 소멸자](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))를 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md), 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="annotationStore.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>내부 버퍼에 유지된 모든 주석 데이터를 내부 저장 디바이스에 쓰도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명시적 저장 모델을 사용 하는 애플리케이션을 설정할 수 <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> 하 `false` 호출 <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> 직접을 적절 한 경우.  
  
 암시적 저장 모델을 사용 하는 애플리케이션을 설정할 수는 <xref:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush%2A> 하 `true` 시킬 <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> 모든 저장소 작업 후 자동으로 호출 됩니다 (추가, 삭제 또는 수정).  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> 애플리케이션을 닫으면 메서드는 <xref:System.Windows.Annotations.AnnotationService>합니다.  
  
 [!code-csharp[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#stopannotations)]
 [!code-vb[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#stopannotations)]  
  
 다음 예제에서는 사용 된 <xref:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation%2A> 및 <xref:System.Windows.Annotations.Storage.AnnotationStore.Flush%2A> 메서드.  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />가 저장소에서 호출되었습니다.</exception>
        <altmember cref="P:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotation">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Annotations.Annotation GetAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Annotations.Annotation GetAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Annotations::Annotation ^ GetAnnotation(Guid annotationId);" />
      <MemberSignature Language="F#" Value="abstract member GetAnnotation : Guid -&gt; System.Windows.Annotations.Annotation" Usage="annotationStore.GetAnnotation annotationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId">반환할 주석의 GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> 속성입니다.</param>
        <summary>지정된 <see cref="P:System.Windows.Annotations.Annotation.Id" />가 있는 주석을 저장소에서 반환합니다.</summary>
        <returns>지정된 <paramref name="annotationId" />가 있는 주석이거나, 지정된 <paramref name="annotationId" />가 있는 주석이 저장소에 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />가 저장소에서 호출되었습니다.</exception>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)" />
        <altmember cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAnnotations">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>저장소에 포함된 주석 목록을 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations%2A> 주석이 저장소에 포함 되는지 확인 하는 방법입니다.  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAnnotations () As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations();" />
      <MemberSignature Language="F#" Value="abstract member GetAnnotations : unit -&gt; System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;" Usage="annotationStore.GetAnnotations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>저장소에 있는 모든 주석의 목록을 반환합니다.</summary>
        <returns>현재 저장소에 포함되어 있는 모든 주석의 목록입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations%2A> 주석이 저장소에 포함 되는지 확인 하는 방법입니다.  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />가 저장소에서 호출되었습니다.</exception>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations (System.Windows.Annotations.ContentLocator anchorLocator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations(class System.Windows.Annotations.ContentLocator anchorLocator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAnnotations (anchorLocator As ContentLocator) As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations(System::Windows::Annotations::ContentLocator ^ anchorLocator);" />
      <MemberSignature Language="F#" Value="abstract member GetAnnotations : System.Windows.Annotations.ContentLocator -&gt; System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;" Usage="annotationStore.GetAnnotations anchorLocator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchorLocator" Type="System.Windows.Annotations.ContentLocator" />
      </Parameters>
      <Docs>
        <param name="anchorLocator">일치하는 주석을 반환할 시작 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 시퀀스입니다.</param>
        <summary>일치하는 <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> 시퀀스로 시작하는 로케이터가 있는 <see cref="P:System.Windows.Annotations.Annotation.Anchors" />를 포함하는 주석 목록을 반환합니다.</summary>
        <returns>지정된 <paramref name="anchorLocator" />로 시작하며 이 항목과 일치하는 로케이터가 있는 <see cref="P:System.Windows.Annotations.Annotation.Anchors" />를 포함하는 주석 목록이거나, 일치하는 주석이 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 <xref:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations%2A> 메서드는 내부적으로 사용 합니다 <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> 메서드를 <xref:System.Windows.Annotations.ContentLocator> 클래스를 검색 하 고 반환할 주석에 대 한 일치 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.ContentLocator.StartsWith(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.AnnotationStore.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.Annotations.Storage.AnnotationStore.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />가 호출되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" />가 호출되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.  기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAnchorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAnchorChanged (System.Windows.Annotations.AnnotationResourceChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAnchorChanged(class System.Windows.Annotations.AnnotationResourceChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAnchorChanged (args As AnnotationResourceChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAnchorChanged(System::Windows::Annotations::AnnotationResourceChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAnchorChanged : System.Windows.Annotations.AnnotationResourceChangedEventArgs -&gt; unit&#xA;override this.OnAnchorChanged : System.Windows.Annotations.AnnotationResourceChangedEventArgs -&gt; unit" Usage="annotationStore.OnAnchorChanged args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Annotations.AnnotationResourceChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">이벤트 데이터입니다.</param>
        <summary><see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAuthorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorChanged (System.Windows.Annotations.AnnotationAuthorChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorChanged(class System.Windows.Annotations.AnnotationAuthorChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorChanged (args As AnnotationAuthorChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorChanged(System::Windows::Annotations::AnnotationAuthorChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorChanged : System.Windows.Annotations.AnnotationAuthorChangedEventArgs -&gt; unit&#xA;override this.OnAuthorChanged : System.Windows.Annotations.AnnotationAuthorChangedEventArgs -&gt; unit" Usage="annotationStore.OnAuthorChanged args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Annotations.AnnotationAuthorChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">이벤트 데이터입니다.</param>
        <summary><see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCargoChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCargoChanged (System.Windows.Annotations.AnnotationResourceChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCargoChanged(class System.Windows.Annotations.AnnotationResourceChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCargoChanged (args As AnnotationResourceChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCargoChanged(System::Windows::Annotations::AnnotationResourceChangedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnCargoChanged : System.Windows.Annotations.AnnotationResourceChangedEventArgs -&gt; unit&#xA;override this.OnCargoChanged : System.Windows.Annotations.AnnotationResourceChangedEventArgs -&gt; unit" Usage="annotationStore.OnCargoChanged args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Annotations.AnnotationResourceChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">이벤트 데이터입니다.</param>
        <summary><see cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStoreContentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStoreContentChanged (System.Windows.Annotations.Storage.StoreContentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStoreContentChanged(class System.Windows.Annotations.Storage.StoreContentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStoreContentChanged (e As StoreContentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStoreContentChanged(System::Windows::Annotations::Storage::StoreContentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStoreContentChanged : System.Windows.Annotations.Storage.StoreContentChangedEventArgs -&gt; unit&#xA;override this.OnStoreContentChanged : System.Windows.Annotations.Storage.StoreContentChangedEventArgs -&gt; unit" Usage="annotationStore.OnStoreContentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Annotations.Storage.StoreContentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary><see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="StoreContentChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Annotations.Storage.StoreContentChangedEventHandler StoreContentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Annotations.Storage.StoreContentChangedEventHandler StoreContentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StoreContentChanged As StoreContentChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Annotations::Storage::StoreContentChangedEventHandler ^ StoreContentChanged;" />
      <MemberSignature Language="F#" Value="member this.StoreContentChanged : System.Windows.Annotations.Storage.StoreContentChangedEventHandler " Usage="member this.StoreContentChanged : System.Windows.Annotations.Storage.StoreContentChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Storage.StoreContentChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>저장소에 <see cref="T:System.Windows.Annotations.Annotation" />을 추가하거나 삭제할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에 대 한 이벤트 대리자를 추가 하는 방법을 보여 줍니다는 <xref:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged> 이벤트입니다.  
  
 [!code-csharp[DocumentSerialize#DocSerEnableAnn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserenableann)]  
  
 다음 예제에서는 작업을 <xref:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged> 이벤트 대리자입니다.  
  
 [!code-csharp[DocumentSerialize#DocSerContentChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docsercontentchanged)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged" />
        <altmember cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="protected object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.AnnotationStore.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Annotations.Storage.AnnotationStore.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 임계 영역에 대해 동기화 잠금으로 사용할 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 임계 영역에 대해 동기화 잠금으로 사용할 개체입니다.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/csharp/language-reference/keywords/lock-statement.md">lock 키워드</related>
      </Docs>
    </Member>
  </Members>
</Type>