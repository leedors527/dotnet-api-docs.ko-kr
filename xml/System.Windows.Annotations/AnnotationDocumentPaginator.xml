<Type Name="AnnotationDocumentPaginator" FullName="System.Windows.Annotations.AnnotationDocumentPaginator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1b6df124026f44e30ec23967ebc1624634a09a3" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39813932" /></Metadata><TypeSignature Language="C#" Value="public sealed class AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnnotationDocumentPaginator extends System.Windows.Documents.DocumentPaginator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Annotations.AnnotationDocumentPaginator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnnotationDocumentPaginator&#xA;Inherits DocumentPaginator" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnnotationDocumentPaginator sealed : System::Windows::Documents::DocumentPaginator" />
  <TypeSignature Language="F#" Value="type AnnotationDocumentPaginator = class&#xA;    inherit DocumentPaginator" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.DocumentPaginator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>문서를 연결된 주석과 함께 인쇄할 수 있도록 <see cref="T:System.Windows.Documents.DocumentPaginator" />를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator> 클래스를 래핑하고 합니다 <xref:System.Windows.Documents.DocumentPaginator> 에 지정 된는 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 인쇄할 페이지에 사용자 주석을 추가 하는 생성자입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Annotations.AnnotationDocumentPaginator> 클래스입니다.  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/Window1.xaml.cs#docviewannxpsprint)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/window1.xaml.vb#docviewannxpsprint)]  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#docviewannxpsdocpaginator)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#docviewannxpsdocpaginator)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator> 클래스를 래핑하고 합니다 <xref:System.Windows.Documents.DocumentPaginator> 에 지정 된는 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 인쇄할 페이지에 사용자 주석을 추가 하는 생성자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.IO.Stream annotationStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.IO.Stream annotationStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalPaginator As DocumentPaginator, annotationStore As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnotationDocumentPaginator(System::Windows::Documents::DocumentPaginator ^ originalPaginator, System::IO::Stream ^ annotationStore);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator * System.IO.Stream -&gt; System.Windows.Annotations.AnnotationDocumentPaginator" Usage="new System.Windows.Annotations.AnnotationDocumentPaginator (originalPaginator, annotationStore)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="originalPaginator">인쇄된 주석을 추가할 문서입니다.</param>
        <param name="annotationStore">주석을 검색할 주석 스토리지 스트림입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 및 주석 스토리지 <see cref="T:System.IO.Stream" />을 기반으로 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 생성자 텍스트 흐름 방향을 설정 <xref:System.Windows.FlowDirection.LeftToRight>합니다.  하는 경우 필요한 따르면 대체 중 하나 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 텍스트를 설정 하는 생성자 오버 로드 <xref:System.Windows.FlowDirection> 를 다른 설정 합니다.  
  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator> 클래스를 래핑하고 합니다 <xref:System.Windows.Documents.DocumentPaginator> 에 지정 된는 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 인쇄할 페이지에 사용자 주석을 추가 하는 생성자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.Windows.Annotations.Storage.AnnotationStore annotationStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.Windows.Annotations.Storage.AnnotationStore annotationStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnotationDocumentPaginator(System::Windows::Documents::DocumentPaginator ^ originalPaginator, System::Windows::Annotations::Storage::AnnotationStore ^ annotationStore);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator * System.Windows.Annotations.Storage.AnnotationStore -&gt; System.Windows.Annotations.AnnotationDocumentPaginator" Usage="new System.Windows.Annotations.AnnotationDocumentPaginator (originalPaginator, annotationStore)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.Windows.Annotations.Storage.AnnotationStore" />
      </Parameters>
      <Docs>
        <param name="originalPaginator">인쇄된 주석을 추가할 문서입니다.</param>
        <param name="annotationStore">주석을 검색할 저장소입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 및 <see cref="T:System.Windows.Documents.DocumentPaginator" />를 기반으로 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 생성자 텍스트 흐름 방향을 설정 <xref:System.Windows.FlowDirection.LeftToRight>합니다.  하는 경우 필요한 따르면 대체 중 하나 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 텍스트를 설정 하는 생성자 오버 로드 <xref:System.Windows.FlowDirection> 를 다른 설정 합니다.  
  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator> 클래스를 래핑하고 합니다 <xref:System.Windows.Documents.DocumentPaginator> 에 지정 된는 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 인쇄할 페이지에 사용자 주석을 추가 하는 생성자입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 생성자입니다.  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/Window1.xaml.cs#docviewannxpsprint)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsPrint](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/window1.xaml.vb#docviewannxpsprint)]  
  
 [!code-csharp[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#docviewannxpsdocpaginator)]
 [!code-vb[DocViewerAnnotationsXps#DocViewAnnXpsDocPaginator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#docviewannxpsdocpaginator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.IO.Stream annotationStore, System.Windows.FlowDirection flowDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.IO.Stream annotationStore, valuetype System.Windows.FlowDirection flowDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream,System.Windows.FlowDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnotationDocumentPaginator(System::Windows::Documents::DocumentPaginator ^ originalPaginator, System::IO::Stream ^ annotationStore, System::Windows::FlowDirection flowDirection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator * System.IO.Stream * System.Windows.FlowDirection -&gt; System.Windows.Annotations.AnnotationDocumentPaginator" Usage="new System.Windows.Annotations.AnnotationDocumentPaginator (originalPaginator, annotationStore, flowDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.IO.Stream" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
      </Parameters>
      <Docs>
        <param name="originalPaginator">인쇄된 주석을 추가할 문서입니다.</param>
        <param name="annotationStore">주석을 검색할 주석 스토리지 스트림입니다.</param>
        <param name="flowDirection">텍스트 흐름 방향(<see cref="F:System.Windows.FlowDirection.LeftToRight" /> 또는 <see cref="F:System.Windows.FlowDirection.RightToLeft" />)입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Documents.DocumentPaginator" />, 주석 스토리지 <see cref="T:System.IO.Stream" /> 및 텍스트 <see cref="T:System.Windows.FlowDirection" />를 기반으로 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator> 클래스를 래핑하고 합니다 <xref:System.Windows.Documents.DocumentPaginator> 에 지정 된는 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 인쇄할 페이지에 사용자 주석을 추가 하는 생성자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationDocumentPaginator (System.Windows.Documents.DocumentPaginator originalPaginator, System.Windows.Annotations.Storage.AnnotationStore annotationStore, System.Windows.FlowDirection flowDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.DocumentPaginator originalPaginator, class System.Windows.Annotations.Storage.AnnotationStore annotationStore, valuetype System.Windows.FlowDirection flowDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore,System.Windows.FlowDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnnotationDocumentPaginator(System::Windows::Documents::DocumentPaginator ^ originalPaginator, System::Windows::Annotations::Storage::AnnotationStore ^ annotationStore, System::Windows::FlowDirection flowDirection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Annotations.AnnotationDocumentPaginator : System.Windows.Documents.DocumentPaginator * System.Windows.Annotations.Storage.AnnotationStore * System.Windows.FlowDirection -&gt; System.Windows.Annotations.AnnotationDocumentPaginator" Usage="new System.Windows.Annotations.AnnotationDocumentPaginator (originalPaginator, annotationStore, flowDirection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="annotationStore" Type="System.Windows.Annotations.Storage.AnnotationStore" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
      </Parameters>
      <Docs>
        <param name="originalPaginator">인쇄된 주석을 추가할 문서입니다.</param>
        <param name="annotationStore">주석을 검색할 저장소입니다.</param>
        <param name="flowDirection">텍스트 흐름 방향(<see cref="F:System.Windows.FlowDirection.LeftToRight" /> 또는 <see cref="F:System.Windows.FlowDirection.RightToLeft" />)입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator" />, <see cref="T:System.Windows.Documents.DocumentPaginator" /> 및 텍스트 <see cref="T:System.Windows.Annotations.Storage.AnnotationStore" />을 기반으로 <see cref="T:System.Windows.FlowDirection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator> 클래스를 래핑하고 합니다 <xref:System.Windows.Documents.DocumentPaginator> 에 지정 된는 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.%23ctor%2A> 인쇄할 페이지에 사용자 주석을 추가 하는 생성자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public override void CancelAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CancelAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CancelAsync (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CancelAsync(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="override this.CancelAsync : obj -&gt; unit" Usage="annotationDocumentPaginator.CancelAsync userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">비동기 작업을 시작하는 호출에서 전달된 고유한 애플리케이션 정의 식별자입니다.</param>
        <summary>지정된 <paramref name="userState" /> 개체를 사용하여 시작된 모든 비동기 작업을 취소합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)" />
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ComputePageCount">
      <MemberSignature Language="C#" Value="public override void ComputePageCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ComputePageCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ComputePageCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ComputePageCount();" />
      <MemberSignature Language="F#" Value="override this.ComputePageCount : unit -&gt; unit" Usage="annotationDocumentPaginator.ComputePageCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>콘텐츠의 페이지를 매기고, <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />를 새로운 총 페이지 수로 업데이트하고, <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" />를 <see langword="true" />로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직후 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount%2A> 반환 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A> 됩니다 `true` 고 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> 속성은 페이지의 총 수를 반영 합니다.  
  
 주석은 콘텐츠가 수정 된 경우 페이지 수가 변경 될 수 있습니다 또는 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> 변경 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ComputePageCountAsync">
      <MemberSignature Language="C#" Value="public override void ComputePageCountAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ComputePageCountAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ComputePageCountAsync (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ComputePageCountAsync(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="override this.ComputePageCountAsync : obj -&gt; unit" Usage="annotationDocumentPaginator.ComputePageCountAsync userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">비동기 작업을 식별하기 위한 애플리케이션 정의 개체입니다.</param>
        <summary>콘텐츠의 비동기 페이지 지정을 시작하고, <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />를 새 합계로 업데이트하고, 완료되면 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" />를 <see langword="true" />로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `userState` 매개 변수를 사용 하기 위한 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync%2A> 메서드는 애플리케이션 완료 되기 전에 비동기 작업을 취소 하려는 경우.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)" />
        <altmember cref="E:System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted" />
        <altmember cref="M:System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount" />
      </Docs>
    </Member>
    <Member MemberName="GetPage">
      <MemberSignature Language="C#" Value="public override System.Windows.Documents.DocumentPage GetPage (int pageNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Documents.DocumentPage GetPage(int32 pageNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPage(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPage (pageNumber As Integer) As DocumentPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Documents::DocumentPage ^ GetPage(int pageNumber);" />
      <MemberSignature Language="F#" Value="override this.GetPage : int -&gt; System.Windows.Documents.DocumentPage" Usage="annotationDocumentPaginator.GetPage pageNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pageNumber">반환할 <see cref="T:System.Windows.Documents.DocumentPage" />의 0부터 시작하는 페이지 번호입니다.</param>
        <summary>지정된 페이지 번호에 대해 <see cref="T:System.Windows.Documents.DocumentPage" />를 연결된 사용자 주석과 함께 반환합니다.</summary>
        <returns>지정된 <paramref name="pageNumber" />의 <see cref="T:System.Windows.Documents.DocumentPage" />이거나, 지정된 <paramref name="pageNumber" />가 없는 경우 <see cref="F:System.Windows.Documents.DocumentPage.Missing" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetPageAsync">
      <MemberSignature Language="C#" Value="public override void GetPageAsync (int pageNumber, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetPageAsync(int32 pageNumber, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetPageAsync (pageNumber As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetPageAsync(int pageNumber, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="override this.GetPageAsync : int * obj -&gt; unit" Usage="annotationDocumentPaginator.GetPageAsync (pageNumber, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageNumber" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pageNumber">검색할 <see cref="T:System.Windows.Documents.DocumentPage" />의 페이지 번호(0부터 시작)입니다.</param>
        <param name="userState">비동기 작업을 식별하는 데 사용한 애플리케이션 정의 개체입니다.</param>
        <summary>지정된 페이지 번호의 연결된 사용자 주석과 함께 <see cref="T:System.Windows.Documents.DocumentPage" />를 비동기적으로 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `userState` 매개 변수를 사용 하기 위한 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync%2A> 메서드는 애플리케이션 완료 되기 전에 비동기 작업을 취소 하려는 경우.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)" />
        <altmember cref="E:System.Windows.Documents.DocumentPaginator.GetPageCompleted" />
        <altmember cref="M:System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)" />
        <altmember cref="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPage(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsPageCountValid">
      <MemberSignature Language="C#" Value="public override bool IsPageCountValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPageCountValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsPageCountValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPageCountValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPageCountValid : bool" Usage="System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />가 총 페이지 수인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>페이지 매김이 완료되고 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />가 전체 페이지 수를 나타내면 <see langword="true" />이고, 페이지 매김이 진행 중이고 <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />가 전체 페이지 수가 아닌 현재 형식이 지정된 페이지의 수를 나타내면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A> 전환할 수 있습니다 `true` 하 `false` 하 고 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> 콘텐츠를 변경 하는 경우 다시 계산 또는 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> 트리거하면.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public override int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Windows.Annotations.AnnotationDocumentPaginator.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 형식이 지정된 페이지 수를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" />가 <see langword="true" />이면 주석 페이지의 총 수이고, <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid" />가 <see langword="false" />이면 현재 형식이 지정된 페이지 수(페이지 매김 진행 중)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid%2A> 변경 될 수 있습니다 `true` 하 `false` 하 고 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount%2A> 콘텐츠를 변경 하는 경우 다시 계산 또는 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> 트리거하면 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public override System.Windows.Size PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PageSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Size PageSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : System.Windows.Size with get, set" Usage="System.Windows.Annotations.AnnotationDocumentPaginator.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>각 페이지의 제안 너비 및 높이를 가져오거나 설정합니다.</summary>
        <value>페이지의 형식을 지정하기 위한 제안된 너비 및 높이입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A> 가져오거나 설정 합니다 *제안* 페이지의 형식을 지정 하는 것에 대 한 크기입니다.  사용 하 여는 <xref:System.Windows.Documents.DocumentPage.Size%2A> 속성 페이지의 실제 크기를 가져옵니다 (필요한 경우 실제 크기를 잘릴 수 있습니다 제안에서 <xref:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public override System.Windows.Documents.IDocumentPaginatorSource Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.IDocumentPaginatorSource Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.AnnotationDocumentPaginator.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Source As IDocumentPaginatorSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Documents::IDocumentPaginatorSource ^ Source { System::Windows::Documents::IDocumentPaginatorSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.Windows.Documents.IDocumentPaginatorSource" Usage="System.Windows.Annotations.AnnotationDocumentPaginator.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.IDocumentPaginatorSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지를 매기고 있는 소스 문서를 가져옵니다.</summary>
        <value>페이지를 매기고 있는 소스 문서입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>