<Type Name="AutomationElement+AutomationElementInformation" FullName="System.Windows.Automation.AutomationElement+AutomationElementInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f1f8b6cb32c4a8a7d1504fedb63fc50a6c650e6c" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51872395" /></Metadata><TypeSignature Language="C#" Value="public struct AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit AutomationElement/AutomationElementInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class AutomationElement::AutomationElementInformation" />
  <TypeSignature Language="F#" Value="type AutomationElement.AutomationElementInformation = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="P:System.Windows.Automation.AutomationElement.Cached" /> 또는 <see cref="P:System.Windows.Automation.AutomationElement.Current" /> 속성에서 사용하는 속성 접근자를 포함합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성에서 직접 액세스할 수 있습니다 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 하 고 <xref:System.Windows.Automation.AutomationElement.Current%2A>; 검색할 필요가 없습니다를 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation> 자체 구조체입니다.  
  
 이 구조의 속성을 사용 하 여 검색할 수도 있습니다 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> 하 고 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>, 해당 식별자를 사용 하 여 <xref:System.Windows.Automation.AutomationElement>입니다. 예를 들어 합니다 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey%2A?displayProperty=nameWithType> 속성으로 식별 되는 <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty?displayProperty=nameWithType> 필드입니다. 개별 속성에 대 한 자세한 내용은 해당 식별자;에 대 한 참조 페이지의 수 각 참조 항목의 설명 섹션의 링크를 참조 하세요.  
  
   
  
## Examples  
 다음 예제와 방법을 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> 이 구조에서 속성을 검색 합니다.  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a6c31d7b-b33e-49b3-b5c1-31a345f9b7c8">UI 자동화 속성 개요</related>
    <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">클라이언트의 UI 자동화 속성</related>
    <related type="Article" href="https://msdn.microsoft.com/library/09576b1a-291f-435c-980e-dee32d899ae1">UI 자동화 요소 속성 가져오기</related>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKey">
      <MemberSignature Language="C#" Value="public string AcceleratorKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AcceleratorKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceleratorKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AcceleratorKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceleratorKey : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소의 액셀러레이터 키 조합이 들어 있는 문자열을 가져옵니다.</summary>
        <value>요소에 연결된 작업을 호출하는 키 조합 시퀀스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 액셀러레이터 키 조합 작업을 호출 합니다. 예를 들어, CTRL + O는 대개 호출 하 여 **파일 열기** 대화 상자. [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 액셀러레이터 키 속성이 항상 설정 된 요소를 구현 합니다 <xref:System.Windows.Automation.InvokePattern> 클래스입니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public string AccessKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessKey : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소의 선택키 문자가 들어 있는 문자열을 가져옵니다.</summary>
        <value>요소에 연결되어 해당 요소를 활성화하는 데 사용되는 문자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 액세스 키에는 메뉴, 메뉴 항목 또는 연결된 된 메뉴 기능을 활성화 하는 단추와 같은 컨트롤의 레이블 텍스트의 문자입니다. 예를 들어, "o"는 대개 호출 하는 **엽니다** 파일에서 일반 대화 상자를 **파일** 메뉴.  [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 액세스 키 속성이 항상 설정 된 요소를 구현 합니다 <xref:System.Windows.Automation.InvokePattern> 클래스입니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.AccessKeyProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationId">
      <MemberSignature Language="C#" Value="public string AutomationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AutomationId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutomationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AutomationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomationId : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소의 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]가 들어 있는 문자열을 가져옵니다.</summary>
        <value>고유한 해당 컨테이너 내에서 형제 사이 있는 요소에 대 한 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 가능한 경우는 <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> 요소의 될 항상 현지 언어에 관계 없이 애플리케이션의 모든 인스턴스에서 동일 해야 합니다. 전체 데스크톱 형제 요소 중에서 고유 하지만 반드시 고유 하지 않은 값을 해야 합니다. 예를 들어, 애플리케이션의 여러 인스턴스 또는 Microsoft Windows 탐색기에서 폴더 뷰를 여러 요소가 같은 <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>, 인스턴스나 등입니다.  
  
 지원 하지만 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 것이 좋습니다 더 나은 테스트 용이성에 대 한이 속성은 필수입니다. 것은 지원 되는 경우에 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> UI 언어에 관계 없이 실행 되는 스크립트를 테스트 자동화에 유용 합니다. 클라이언트는 어떠한가 정도 하지 해야와 관련 하 여는 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>다른 애플리케이션에 의해 노출 되 합니다. <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 응용 프로그램의 빌드 또는 서로 다른 릴리스 안정적인 것으로 보장 되지 않습니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect BoundingRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect BoundingRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundingRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect BoundingRectangle { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundingRectangle : System.Windows.Rect" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소를 완전히 둘러싸는 사각형의 좌표를 가져옵니다.</summary>
        <value>둘러싸는 사각형의 점 좌표입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 된 사각형을 클릭할 수 없는 요소를 포함할 수 있습니다. 발생할 수 있습니다이 인스턴스는 다음과 같은 경우는 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 항목의 불규칙 한 모양이 나 클릭할 수 있는 지역 또는 다른에 가려져 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 요소입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      </Docs>
    </Member>
    <Member MemberName="ClassName">
      <MemberSignature Language="C#" Value="public string ClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassName : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 개발자가 할당한 요소의 클래스 이름이 들어 있는 문자열을 가져옵니다.</summary>
        <value>컨트롤 개발자가 할당한 클래스 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 값은 구현에 따라 다릅니다. 속성은 테스트 환경에서 유용 합니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.ClassNameProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.ControlType ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.ControlType ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As ControlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::ControlType ^ ControlType { System::Windows::Automation::ControlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소의 <see cref="T:System.Windows.Automation.ControlType" />을 가져옵니다.</summary>
        <value>이 요소의 상호 작용 모델입니다. 기본값은 <see cref="F:System.Windows.Automation.ControlType.Custom" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤 형식에 대 한 알려진된 상호 작용 모델에 설명 합니다 임의의 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 지역화 컨트롤 형식 또는 복잡 한 논리 규칙의 조합에 의존 하지 않고 요소입니다.  
  
 이 속성 런타임에 변경할 수 있는 유일한 경우는 지 원하는 컨트롤에 대 한 <xref:System.Windows.Automation.MultipleViewPattern>합니다. 예로 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] ListView 컨트롤에서 변경 될 수 있습니다 <xref:System.Windows.Automation.ControlType.DataGrid> 에 <xref:System.Windows.Automation.ControlType.List>현재 보기에 따라 합니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.ControlTypeProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/261dcc59-3a62-4e40-91dd-63ff9d2241c0">UI 자동화 컨트롤 형식</related>
        <related type="Article" href="https://msdn.microsoft.com/library/75159ef8-bd43-4d13-acb7-1f1fe9253160">UI 자동화 컨트롤 형식 개요</related>
      </Docs>
    </Member>
    <Member MemberName="FrameworkId">
      <MemberSignature Language="C#" Value="public string FrameworkId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FrameworkId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FrameworkId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FrameworkId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FrameworkId : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내부 UI 프레임워크의 이름을 가져옵니다.</summary>
        <value>"Win32", "WinForm" 또는 "DirectUI" 등의 UI 프레임워크 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 형식이 속성의 값은 <xref:System.String>합니다. 기본값은 빈 문자열입니다.  
  
 이 속성에는 애플리케이션 전체 UI 프레임 워크에 특수 사례를 적용할 수 있습니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.FrameworkIdProperty>을 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocus">
      <MemberSignature Language="C#" Value="public bool HasKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasKeyboardFocus : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소에 키보드 포커스가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>요소에 키보드 포커스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨테이너 내의 요소에 포커스가 있으면 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus%2A> 컨테이너 요소에도 적용 됩니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소에 연결된 도움말 텍스트를 가져옵니다.</summary>
        <value>요소의 도구 설명 도움말 텍스트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.HelpTextProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentElement">
      <MemberSignature Language="C#" Value="public bool IsContentElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContentElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsContentElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContentElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsContentElement : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소가 콘텐츠 요소인지 여부를 지정하는 값을 가져옵니다.</summary>
        <value>요소가 콘텐츠 요소이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘텐츠 요소를 사용자에 게 표시 되는 데이터를 포함 합니다. 콘텐츠 요소의 예로 목록 상자 또는 대화 상자에서 단추에 있는 항목입니다. 주변 요소 라고도 하는 비 콘텐츠 요소는 일반적으로;에서 복합 컨트롤의 콘텐츠를 조작 하는 데 사용 됩니다. 예를 들어, 드롭다운 목록 컨트롤에 단추입니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.IsContentElementProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 자동화 트리 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsControlElement">
      <MemberSignature Language="C#" Value="public bool IsControlElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsControlElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsControlElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsControlElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsControlElement : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소가 컨트롤로 표시되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>요소가 컨트롤로 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.IsControlElementProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 자동화 트리 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 요소에서 참조하는 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 항목을 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A> 때문에 변경할 수 있는 속성 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 상호 작용 합니다. 호출 하 여 업데이트 된 캐시를 가져와야 <xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A> 경우의 값을 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A> 속성 캐시 요청을 실행 한 이후 변경 될 수 있습니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusable">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusable : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소가 키보드 포커스를 받을 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤이 키보드 포커스를 받을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreen">
      <MemberSignature Language="C#" Value="public bool IsOffscreen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffscreen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffscreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffscreen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffscreen : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소가 화면에 표시되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤이 표시되지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 요소 스크롤됩니다 완전히 지정 하는 부울 값 (예를 들어, 목록 상자의 항목은 컨테이너 개체에 대 한 뷰포트 외부) 또는 뷰 (예: 트리 뷰, 메뉴 또는 최소화 된 창에 있는 항목) 축소 합니다.  
  
 요소에 포커스를 일으킬 수 있는 클릭 가능한 지점이 있으면 화면 밖으로 요소의 일부를 하는 경우에 화면으로 간주 됩니다.  
  
 속성의 값 요소가 특정 모니터에 표시 되는지 여부 또는 다른 windows에서 폐색 받지 않습니다.  
  
 IsOffscreen 경우 `true,` 스크롤되는 또는 보기 축소 하지만 여전히 UI의 최종 사용자의 일부는 요소는 드롭다운 목록 컨트롤에서 클릭 하는 등의 간단한 조작으로 다시에 뷰로 가져올 수 있습니다.  
  
 요소는 최종 사용자가 전혀 느끼지 또는 "프로그래밍 방식으로 숨겨진" (예: 대화 상자는 해제 된 하는 애플리케이션에서 개체가 캐시 되는 위치) 라고 하는 경우 다음이에서 제거 해야 에 IsOffscreen의 값을 설정 하는 것이 아니라 요소 트리의 `true`합니다.  
  
 값이 `true` 컨테이너에 대 한 것도 `true` 컨테이너 요소의 하위 항목에 대 한 합니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPassword : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소에 보호된 내용이 들어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>요소에 보호된 내용이 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 화면 읽기 프로그램과 같은 애플리케이션에서 컨트롤의 텍스트 콘텐츠를 소리 내어 읽어야 하는지 여부를 확인할 수 있습니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.IsPasswordProperty>을 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForForm">
      <MemberSignature Language="C#" Value="public bool IsRequiredForForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequiredForForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequiredForForm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequiredForForm { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRequiredForForm : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>폼에서 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소를 채워야 하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>요소를 채워야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStatus">
      <MemberSignature Language="C#" Value="public string ItemStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStatus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemStatus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStatus { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemStatus : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소 내의 항목 상태에 대한 설명을 가져옵니다.</summary>
        <value>상태에 대한 설명입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하면 요소가 항목에 대 한 상태를 전달 하는지 여부를 확인 하려면 클라이언트입니다. 예를 들어, "Busy" 또는 "연결 됨" 메시징 애플리케이션에서 대화 상대와 연결 된 항목 수 있습니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.ItemStatusProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 형식에 대한 설명을 가져옵니다.</summary>
        <value>항목을 설명하는 지역화된 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 목록, 트리 뷰 또는 데이터 그리드에서 항목에 대 한 정보를 사용 합니다. 예를 들어 "문서 File" 또는 "폴더" 파일 디렉터리 보기의 항목 수 있습니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.ItemTypeProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabeledBy">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement LabeledBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement LabeledBy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LabeledBy As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ LabeledBy { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LabeledBy : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 요소의 텍스트 레이블이 들어 있는 요소를 가져옵니다.</summary>
        <value>이 요소의 레이블인 요소입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 예를 들어, 콤보 상자에 대 한 정적 텍스트 레이블이 검색 하려면 사용할 수 있습니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.LabeledByProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlType">
      <MemberSignature Language="C#" Value="public string LocalizedControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizedControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalizedControlType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalizedControlType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalizedControlType : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 형식에 대한 설명을 가져옵니다.</summary>
        <value>"단추"와 같이 컨트롤 형식의 지역화된 설명입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소의 이름을 가져옵니다.</summary>
        <value>[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 요소의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 요소 이름 요소를 찾는 데 사용할 수는 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소 트리에서 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 속성 요소에서 지원 되지 않습니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.NameProperty>을 참조하세요.  
  
   
  
## Examples  
 다음 예제와 방법을 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> 속성을 검색 합니다.  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandle">
      <MemberSignature Language="C#" Value="public int NativeWindowHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NativeWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeWindowHandle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NativeWindowHandle { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeWindowHandle : int" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소의 창 핸들을 가져옵니다.</summary>
        <value>창의 핸들이 있으면 해당 핸들이고, 그렇지 않으면 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty>을 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.OrientationType Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.OrientationType Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Orientation As OrientationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::OrientationType Orientation { System::Windows::Automation::OrientationType get(); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Windows.Automation.OrientationType" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.OrientationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 방향을 가져옵니다.</summary>
        <value>방향입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 스크롤 막대 및 세로 또는 가로 방향 중 하나를 가질 수 있는 슬라이더와 같은 컨트롤에서 지원 됩니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.OrientationProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 요소의 프로세스 [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]를 가져옵니다.</summary>
        <value>ID 요소를 호스팅하는 프로세스입니다. 속성의 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 프로세스 [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] 운영 체제에서 할당 됩니다. 볼 수 있습니다는 **PID** 열을 **프로세스** 작업 관리자의 탭 합니다.  
  
 자세한 내용은 <xref:System.Windows.Automation.AutomationElement.ProcessIdProperty>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>