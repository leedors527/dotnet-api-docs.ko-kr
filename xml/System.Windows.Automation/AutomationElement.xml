<Type Name="AutomationElement" FullName="System.Windows.Automation.AutomationElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="560cba5a3d2bca14c4cdbee0cf9352422d1d33f5" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53522929" /></Metadata><TypeSignature Language="C#" Value="public sealed class AutomationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AutomationElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AutomationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationElement sealed" />
  <TypeSignature Language="F#" Value="type AutomationElement = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>UI Automation 트리의 UI Automation 요소를 나타내며 UI Automation 클라이언트 애플리케이션에서 식별자로 사용되는 값을 포함합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> 부분에 해당 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]의 내부 구현에 관계 없이 (같은 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 또는 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/65847654-9994-4a9e-b36d-2dd5d998770b">UI 자동화 개요</related>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AcceleratorKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AcceleratorKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceleratorKeyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AcceleratorKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceleratorKeyProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.AcceleratorKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 액셀러레이터 키 조합 작업을 호출 합니다. 예를 들어, CTRL + O는 대개 호출 하는 **열려** 파일 일반 대화 상자. <xref:System.Windows.Automation.AutomationElement> 에 액셀러레이터 키 속성을 설정 한다고 항상 구현 된 <xref:System.Windows.Automation.InvokePattern> 클래스입니다.  
  
 반환 형식이 속성의 값은 <xref:System.String>합니다. 속성의 기본값은 빈 문자열입니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#124](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#124)]
 [!code-vb[UIAClient_snip#124](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#124)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#125](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#125)]
 [!code-vb[UIAClient_snip#125](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#125)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="AccessKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AccessKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AccessKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AccessKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccessKeyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AccessKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccessKeyProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.AccessKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 액세스 키에는 메뉴, 메뉴 항목 또는 연결된 된 메뉴 기능을 활성화 하는 단추와 같은 컨트롤의 레이블 텍스트의 문자입니다. 예를 들어, "o"는 대개 호출 하는 **파일 열기** 에서 공용 대화 상자를 **파일** 메뉴.  
  
 액세스 키 값이 형식의 <xref:System.String> 요소에 대 한 액세스 키로 등록 된 문자를 포함 합니다. 문자열에 대 한 기본값은 빈 문자열입니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#127](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#127)]
 [!code-vb[UIAClient_snip#127](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#127)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#128](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#128)]
 [!code-vb[UIAClient_snip#128](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#128)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="AsyncContentLoadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AsyncContentLoadedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AsyncContentLoadedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AsyncContentLoadedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>비동기 콘텐츠 로드 중 발생하는 이벤트를 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 이벤트는 비동기 콘텐츠 로드 이벤트가 발생 했음을 나타낼를 공급자에서 주로 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AsyncContentLoadedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AutomationFocusChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationFocusChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AutomationFocusChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationFocusChangedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포커스가 변경될 때 발생하는 이벤트를 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationFocusChangedEventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771428(v=vs.90)">TrackFocus 샘플</related>
      </Docs>
    </Member>
    <Member MemberName="AutomationIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AutomationIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AutomationIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AutomationIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소를 식별하는 데 사용되는 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 반환 형식이 속성의 값은 <xref:System.String>합니다. 속성의 기본값은 빈 문자열입니다.  
  
 사용 가능한 경우는 <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> 요소의 될 항상 현지 언어에 관계 없이 애플리케이션의 모든 인스턴스에서 동일 해야 합니다. 전체 데스크톱 형제 요소 중에서 고유 하지만 반드시 고유 하지 않은 값을 해야 합니다. 예를 들어, 애플리케이션의 여러 인스턴스 또는 Microsoft Windows 탐색기에서 폴더 뷰를 여러 요소가 같은 <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>, 인스턴스나 등입니다.  
  
 지원 하지만 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 것이 좋습니다 더 나은 테스트 용이성에 대 한이 속성은 필수입니다. 것은 지원 되는 경우에 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> UI 언어에 관계 없이 실행 되는 스크립트를 테스트 자동화에 유용 합니다. 클라이언트는 어떠한가 정도 하지 해야와 관련 하 여는 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>다른 애플리케이션에 의해 노출 되 합니다. <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 응용 프로그램의 빌드 또는 서로 다른 릴리스 안정적인 것으로 보장 되지 않습니다.  
  
 인스턴스의 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 요소에서 바탕 화면에서 고유 하 게 식별 해당 <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> 속성입니다.  
  
> [!NOTE]
>  <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> 는 최상위 응용 프로그램 창, ID 또는 x:Uid가 없는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 컨트롤에서 파생된 UI 자동화 요소, 컨트롤 ID가 없는 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 컨트롤에서 파생된 UI 자동화 요소를 제외하고 컨트롤 뷰의 모든 UI 자동화 요소에서 지원됩니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#129](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#129)]
 [!code-vb[UIAClient_snip#129](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#129)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#130](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#130)]
 [!code-vb[UIAClient_snip#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#130)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">UI 자동화 요소 가져오기</related>
      </Docs>
    </Member>
    <Member MemberName="AutomationPropertyChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationPropertyChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AutomationPropertyChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutomationPropertyChangedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>속성 변경 이벤트를 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationPropertyChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty BoundingRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty BoundingRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BoundingRectangleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ BoundingRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BoundingRectangleProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 경계 사각형은 형식의 <xref:System.Windows.Rect>합니다. 반환 된 사각형은 실제 화면 좌표입니다. 기본값은 <xref:System.Windows.Rect.Empty%2A>입니다. <xref:System.Windows.Rect.Empty%2A> 항목이 현재 표시 되지 않는 경우 반환 되는 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]합니다.  
  
 반환 된 사각형을 클릭할 수 없는 요소를 포함할 수 있습니다. 이 발생할 수 있습니다 하는 인스턴스를 포함 하는 경우는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 항목의 불규칙 한 모양이 나 클릭할 수 있는 지역 또는 다른에 가려져 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 요소입니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#131](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#131)]
 [!code-vb[UIAClient_snip#131](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#131)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#132](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#132)]
 [!code-vb[UIAClient_snip#132](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#132)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI 자동화 및 화면 크기 조정</related>
      </Docs>
    </Member>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Cached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Cached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cached As AutomationElement.AutomationElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement::AutomationElementInformation Cached { System::Windows::Automation::AutomationElement::AutomationElementInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Cached : System.Windows.Automation.AutomationElement.AutomationElementInformation" Usage="System.Windows.Automation.AutomationElement.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 개체에 대해 캐시된 <see cref="T:System.Windows.Automation.AutomationElement" /> 속성 값을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Automation.AutomationElement" />에 대해 캐시된 속성 값을 포함하는 구조체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 접근자 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 속성에서 반환 된 구조체의 속성으로 표현 됩니다 <xref:System.Windows.Automation.AutomationElement.Cached%2A>합니다. 구조를 검색할 필요가 없습니다. 아래 예제와 같이 해당 멤버에 직접 액세스할 수 있습니다. 사용 가능한 속성 및 해당 용도에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>합니다.  
  
 현재 값을 가져올 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소 사용 하 여가 속성을 <xref:System.Windows.Automation.AutomationElement.Current%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제와 방법을 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> 속성을 캐시 하 고 사용 하 여 검색 한 다음는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">캐시된 속성이 없는 경우</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 자동화 클라이언트의 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName="CachedChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection CachedChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElementCollection CachedChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedChildren As AutomationElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementCollection ^ CachedChildren { System::Windows::Automation::AutomationElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedChildren : System.Windows.Automation.AutomationElementCollection" Usage="System.Windows.Automation.AutomationElement.CachedChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 캐시된 하위 요소 1을 가져 옵니다.</summary>
        <value>자식 요소의 컬렉션입니다. 요소에 자식이 없는 경우 이 컬렉션이 비어 있을 수 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환된 된 컬렉션의 보기에 의해 결정 됩니다는 <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> 의 상태는 <xref:System.Windows.Automation.CacheRequest> 는 활성 상태 였던 경우이 <xref:System.Windows.Automation.AutomationElement> 개체를 가져온 합니다.  
  
 경우에 자식 캐시의 범위는 <xref:System.Windows.Automation.CacheRequest> 포함 <xref:System.Windows.Automation.TreeScope.Subtree>, <xref:System.Windows.Automation.TreeScope.Children>, 또는 <xref:System.Windows.Automation.TreeScope.Descendants>합니다.  
  
 경우는 <xref:System.Windows.Automation.CacheRequest> 지정는 어린이 들이 수준에서는 캐시할 있지만 자식이 없는이 속성의 값은 0입니다. 그러나이 수준에서 자식을 캐시의 요청 된 속성을 검색 하려고 예외를 발생 시킵니다.  
  
   
  
## Examples  
 하는 동안 부모 창 요소에서 다음 예제에서는 목록 상자 요소를 가져옵니다을 <xref:System.Windows.Automation.CacheRequest> 활성 및 <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> 는 <xref:System.Windows.Automation.TreeScope.Children>합니다. 자식 요소 (즉, 목록 항목)의 지정된 된 속성은 캐시에 저장 되며에서 검색할 수 있습니다는 <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> 목록 상자입니다.  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
        <exception cref="T:System.InvalidOperationException">이 요소의 자식을 캐시하도록 요청하지 않은 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 자동화 클라이언트의 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName="CachedParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement CachedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement CachedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedParent As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ CachedParent { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedParent : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.CachedParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 캐시된 부모를 가져옵니다.</summary>
        <value>부모 요소입니다. 반환 값은 <see langword="null" /> 경우 지정된 된 요소에 부모가-예를 들어,이 요소가 루트 노드인 경우.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> 목록 상자 및 해당 목록 항목의 속성 캐시 됩니다. 목록 상자 요소를 사용할 수 있습니다는 <xref:System.Windows.Automation.AutomationElement.CachedParent%2A> 각 목록 항목 요소는 속성입니다.  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">부모 요소가 캐시되지 않은 경우</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 자동화 클라이언트의 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName="ClassNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClassNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClassNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClassNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassNameProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ClassNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClassNameProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ClassNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 클래스 이름에는 UI 자동화 공급자 구현에 따라 달라 집니다 및 다르므로 시 표준 형식 이어야 합니다. 그러나 클래스 이름을 알고 있는 경우 사용할 수 있습니다 애플리케이션에서 정상적인 작동 하는지 확인 하려면 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소입니다.  
  
 반환 형식이 속성의 값은 <xref:System.String>합니다. 기본값은 빈 문자열입니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#133](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#133)]
 [!code-vb[UIAClient_snip#133](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#133)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#134](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#134)]
 [!code-vb[UIAClient_snip#134](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#134)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ClickablePointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClickablePointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClickablePointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClickablePointProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickablePointProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ClickablePointProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClickablePointProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ClickablePointProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클릭 가능 지점 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 <xref:System.Windows.Automation.AutomationElement> 완전히 다른 창으로 가려진 경우 클릭 가능한 아닙니다.  
  
 반환 형식이 속성의 값은 <xref:System.Windows.Point>합니다. 기본값은 `null`입니다.  
  
 반환 값은 실제 화면 좌표에 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다.  
  
 [!code-csharp[UIAClient_snip#135](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#135)]
 [!code-vb[UIAClient_snip#135](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#135)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#166](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#166)]
 [!code-vb[UIAClient_snip#166](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#166)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI 자동화 및 화면 크기 조정</related>
      </Docs>
    </Member>
    <Member MemberName="ControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ControlTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ControlTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ControlTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ControlTypeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ControlTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 속성의 기본값은 <xref:System.Windows.Automation.ControlType.Custom>  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#136](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#136)]
 [!code-vb[UIAClient_snip#136](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#136)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#137](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#137)]
 [!code-vb[UIAClient_snip#137](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#137)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/261dcc59-3a62-4e40-91dd-63ff9d2241c0">UI 자동화 컨트롤 형식</related>
      </Docs>
    </Member>
    <Member MemberName="CultureProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CultureProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CultureProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.CultureProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CultureProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CultureProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CultureProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.CultureProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문화권 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 Windows Presentation Foundation (WPF) 프레임 워크 내에서 보고 되는 기본 값은 항상 `en-US` 영어 기본값은 자동으로.NET Framework 때문입니다. 다른 사용자 인터페이스 (UI) 프레임 워크에서이 속성을 명시적으로 설정 해야 하거나 노출 되지 않습니다.  
  
 이 속성 컨트롤 단위로 기준으로 존재할 수 있지만 일반적으로 에서만 사용 가능 애플리케이션 수준입니다.  
  
 반환 형식이 속성의 값은 <xref:System.Globalization.CultureInfo>합니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다.  
  
 [!code-csharp[UIAClient_snip#138](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#138)]
 [!code-vb[UIAClient_snip#138](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#138)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As AutomationElement.AutomationElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement::AutomationElementInformation Current { System::Windows::Automation::AutomationElement::AutomationElementInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.AutomationElement.AutomationElementInformation" Usage="System.Windows.Automation.AutomationElement.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Automation.AutomationElement" />의 현재 속성 값을 가져옵니다.</summary>
        <value>현재 속성 값이 들어 있는 구조체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 접근자 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 속성에서 반환 된 구조체의 속성으로 표현 됩니다 <xref:System.Windows.Automation.AutomationElement.Current%2A>합니다. 구조를 검색할 필요가 없습니다. 아래 예제와 같이 해당 멤버에 직접 액세스할 수 있습니다. 사용 가능한 속성 및 해당 용도에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>합니다.  
  
 캐시 된 값을 가져올 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 이 요소에 대 한 속성을 사용 합니다 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제와 방법을 <xref:System.Windows.Automation.AutomationElement.Current%2A> 속성 목록에서 선택 된 항목의 이름을 검색 하는 데 사용 됩니다.  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="automationElement.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">비교할 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />의 값이 이 <see cref="T:System.Windows.Automation.AutomationElement" />와 같은지 여부를 확인합니다.</summary>
        <returns>지정된 <see cref="T:System.Windows.Automation.AutomationElement" />가 이 <see cref="T:System.Windows.Automation.AutomationElement" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 요소를 동일한 것으로 비교 시간상에서 다른 지점에서 다른 캐시 된 정보를 포함할 수 있습니다. 같음 확인만 하는 테스트를 <xref:System.Windows.Automation.AutomationElement> 개체 같은 기본 사용자 인터페이스 요소를 가리킵니다. 즉, 같은 런타임 식별자를가지고 있다고 합니다.  
  
 이 메서드는 또한 런타임 식별자를 비교 하는 같음 연산자에 해당 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AutomationElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AutomationElement ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="automationElement.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection FindAll (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElementCollection FindAll(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElementCollection ^ FindAll(System::Windows::Automation::TreeScope scope, System::Windows::Automation::Condition ^ condition);" />
      <MemberSignature Language="F#" Value="member this.FindAll : System.Windows.Automation.TreeScope * System.Windows.Automation.Condition -&gt; System.Windows.Automation.AutomationElementCollection" Usage="automationElement.FindAll (scope, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">검색 범위를 지정하는 값의 비트 조합입니다.</param>
        <param name="condition">대조할 조건이 들어 있는 개체입니다.</param>
        <summary>지정된 조건에 맞는 모든 <see cref="T:System.Windows.Automation.AutomationElement" /> 개체를 반환합니다.</summary>
        <returns>지정된 조건에 맞는 개체의 컬렉션입니다. 일치 항목이 없으면 빈 컬렉션이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 검색 범위가 메서드를 호출 하는 요소를 기준으로 합니다. 요소 트리에서 발견 된 순서 대로 반환 됩니다.  
  
 바탕 화면에서 최상위 창에 대 한 검색 하는 경우 지정 해야 <xref:System.Windows.Automation.TreeScope.Children> 에 `scope`아니라 <xref:System.Windows.Automation.TreeScope.Descendants>합니다. 데스크톱의 전체 하위 트리를 통해 검색 수천 개의 항목을 반복을 스택 오버플로가 발생할 수 있습니다.  
  
 모든 확인 해야 하는 경우 클라이언트 애플리케이션의 고유한 사용자 인터페이스에서 요소를 찾으려면, [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 별도 스레드에서 호출 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다 <xref:System.Windows.Automation.AutomationElement.FindAll%2A> 모두 찾기 하려면 창의 단추를 사용 하도록 설정 합니다.  
  
 [!code-csharp[UIAClient_snip#116](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#116)]
 [!code-vb[UIAClient_snip#116](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#116)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">UI 자동화 요소 가져오기</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0ab8d42c-5b8b-481b-b788-2caecc2f0191">UI 자동화 스레딩 문제</related>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement FindFirst (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement FindFirst(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ FindFirst(System::Windows::Automation::TreeScope scope, System::Windows::Automation::Condition ^ condition);" />
      <MemberSignature Language="F#" Value="member this.FindFirst : System.Windows.Automation.TreeScope * System.Windows.Automation.Condition -&gt; System.Windows.Automation.AutomationElement" Usage="automationElement.FindFirst (scope, condition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">검색 범위를 지정하는 값의 비트 조합입니다.</param>
        <param name="condition">대조할 조건이 들어 있는 개체입니다.</param>
        <summary>지정된 조건에 맞는 첫 번째 자식이나 하위 요소를 반환합니다.</summary>
        <returns>조건에 맞는 첫 번째 요소이거나, 조건에 맞는 요소가 없으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 검색 범위가 메서드를 호출 하는 요소를 기준으로 합니다.  
  
 바탕 화면에서 최상위 창을 검색 하는 경우 지정 해야 <xref:System.Windows.Automation.TreeScope.Children> 에 `scope`아니라 <xref:System.Windows.Automation.TreeScope.Descendants>합니다. 데스크톱의 전체 하위 트리를 통해 검색 수천 개의 항목을 반복을 스택 오버플로가 발생할 수 있습니다.  
  
 모든 확인 해야 하는 경우 클라이언트 애플리케이션의 고유한 사용자 인터페이스에서 요소를 찾으려면, [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 별도 스레드에서 호출 합니다.  
  
   
  
## Examples  
 다음 예제에는 해당 식별자에서 자식 창을 찾는 방법을 보여 줍니다.  
  
 [!code-csharp[UIAClient_snip#110](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#110)]
 [!code-vb[UIAClient_snip#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#110)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">UI 자동화 요소 가져오기</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0ab8d42c-5b8b-481b-b788-2caecc2f0191">UI 자동화 스레딩 문제</related>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::AutomationElement ^ FocusedElement { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedElement : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 포커스를 받고 있는 <see cref="T:System.Windows.Automation.AutomationElement" />를 가져옵니다.</summary>
        <value>포커스를 받고 있는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 요소입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 확인 해야 하는 경우 클라이언트 애플리케이션의 고유한 사용자 인터페이스에서 요소를 찾으려면, [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 별도 스레드에서 호출 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0ab8d42c-5b8b-481b-b788-2caecc2f0191">UI 자동화 스레딩 문제</related>
      </Docs>
    </Member>
    <Member MemberName="FrameworkIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty FrameworkIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty FrameworkIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.FrameworkIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FrameworkIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ FrameworkIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FrameworkIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.FrameworkIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.String>합니다. 기본값은 빈 문자열입니다.  
  
 이 속성에는 애플리케이션 전체 UI 프레임 워크에 특수 사례를 적용할 수 있습니다. 속성 값의 예로 "Win32", "WinForm" 및 "DirectUI"를 들 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다.  
  
 [!code-csharp[UIAClient_snip#139](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#139)]
 [!code-vb[UIAClient_snip#139](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#139)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromHandle (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromHandle(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (hwnd As IntPtr) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromHandle(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHandle : nativeint -&gt; System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FromHandle hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 요소의 핸들입니다.</param>
        <summary>지정된 창 핸들에서 참조하는 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 항목의 새 <see cref="T:System.Windows.Automation.AutomationElement" /> 개체를 검색합니다.</summary>
        <returns><see cref="T:System.Windows.Automation.AutomationElement" />로 식별되는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 항목의 <paramref name="hwnd" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">UI 자동화 요소 가져오기</related>
      </Docs>
    </Member>
    <Member MemberName="FromLocalProvider">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromLocalProvider (System.Windows.Automation.Provider.IRawElementProviderSimple localImpl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromLocalProvider(class System.Windows.Automation.Provider.IRawElementProviderSimple localImpl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromLocalProvider (localImpl As IRawElementProviderSimple) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromLocalProvider(System::Windows::Automation::Provider::IRawElementProviderSimple ^ localImpl);" />
      <MemberSignature Language="F#" Value="static member FromLocalProvider : System.Windows.Automation.Provider.IRawElementProviderSimple -&gt; System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FromLocalProvider localImpl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localImpl" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="localImpl">공급자 개체입니다.</param>
        <summary>로컬 <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> 구현에서 새 <see cref="T:System.Windows.Automation.AutomationElement" /> 개체를 검색합니다.</summary>
        <returns>공급자 개체에서 제공하는 요소를 나타내는 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 해당 호출자가 네이티브 요소 형식 자체에 액세스할 수 있도록 클라이언트 도우미 라이브러리에서 사용할 수 있습니다. 예를 들어 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 반환할 수 있도록 내부적으로이 메서드를 사용 하는 <xref:System.Windows.Automation.AutomationElement> 얻고자 하는 클라이언트에는 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 에서 직접 요소를 <xref:System.Windows.UIElement>합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">UI 자동화 요소 가져오기</related>
      </Docs>
    </Member>
    <Member MemberName="FromPoint">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromPoint (System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromPoint(valuetype System.Windows.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromPoint (pt As Point) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromPoint(System::Windows::Point pt);" />
      <MemberSignature Language="F#" Value="static member FromPoint : System.Windows.Point -&gt; System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.FromPoint pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="pt">데스크톱에서 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 요소를 찾을 실제 화면 좌표입니다.</param>
        <summary>데스크톱에서 지정된 지점에 있는 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 항목의 새 <see cref="T:System.Windows.Automation.AutomationElement" /> 개체를 검색합니다.</summary>
        <returns>지정된 지점에 있는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 항목입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.FromPoint%2A> 루트 요소에 가장 가까운 논리 트리에서 요소를 반환 합니다.  
  
 모든 확인 해야 하는 경우 클라이언트 애플리케이션의 고유한 사용자 인터페이스에서 요소를 찾으려면, [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 별도 스레드에서 호출 합니다.  
  
 반환 된 경계 사각형 내의 지점 되어도 <xref:System.Windows.Automation.AutomationElement>, 반드시 컨트롤의 클릭 가능한 부분입니다. 예를 들어 원형 단추 경계 사각형의 모서리 중 하나를 클릭할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 검색 된 <xref:System.Windows.Automation.AutomationElement> 시스템 커서 위치입니다.  
  
 [!code-csharp[UIAClient_snip#181](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#181)]
 [!code-vb[UIAClient_snip#181](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#181)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c2caaf45-e59c-42a1-bc9b-77a6de520171">UI 자동화 요소 가져오기</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI 자동화 및 화면 크기 조정</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0ab8d42c-5b8b-481b-b788-2caecc2f0191">UI 자동화 스레딩 문제</related>
      </Docs>
    </Member>
    <Member MemberName="GetCachedPattern">
      <MemberSignature Language="C#" Value="public object GetCachedPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPattern (pattern As AutomationPattern) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPattern(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.GetCachedPattern : System.Windows.Automation.AutomationPattern -&gt; obj" Usage="automationElement.GetCachedPattern pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">검색할 패턴의 식별자입니다.</param>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 캐시에서 지정된 패턴을 검색합니다.</summary>
        <returns>지정된 패턴을 나타내는 개체입니다. 일치하는 패턴이 없으면 <see langword="null" />이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A> 캐시에서 지정된 된 패턴을 검색합니다. 지정된 된 패턴에 대 한 현재 개체를 검색 하려면 호출 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>합니다.  
  
 이 메서드는 이전에 요청한 패턴이 캐시 되지 않은 경우 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 캐시 된 패턴을 검색 하는 방법을 보여 줍니다.  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">요청한 패턴이 캐시에 없거나 요소에서 지원되지 않는 경우</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 자동화 클라이언트의 캐싱</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCachedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Automation.AutomationElement" />에서 지정된 속성의 캐시된 값을 검색합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 지정된 된 속성의 캐시에서 검색 된 <xref:System.Windows.Automation.AutomationElement>합니다. 현재 속성을 검색 하려면 호출 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Cached" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 자동화 클라이언트의 캐싱</related>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">클라이언트의 UI 자동화 속성</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPropertyValue (property As AutomationProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPropertyValue(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.GetCachedPropertyValue : System.Windows.Automation.AutomationProperty -&gt; obj" Usage="automationElement.GetCachedPropertyValue property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">검색할 속성의 식별자입니다.</param>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 캐시에서 지정된 속성의 값을 검색합니다. 대상 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 요소에서 해당 속성을 명시적으로 지원하지 않는 경우에는 속성 형식의 적절한 기본값이 반환됩니다.</summary>
        <returns>지정된 속성의 값이 들어 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 요소 자체에 대 한 UI 자동화 공급자의 속성을 지 원하는 속성의 값이 반환 됩니다. 기본 속성을 지정 하는 고, 그렇지 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 반환 됩니다. 참조 속성 식별자 필드의 기본 속성에 대 한 내용은 <xref:System.Windows.Automation.AutomationElement>와 같은 <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>합니다.  
  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 지정된 된 속성을 검색 합니다 <xref:System.Windows.Automation.AutomationElement>의 캐시 합니다. 지정 된 속성이 호출에 대 한 현재 개체를 가져와 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>합니다.  
  
 이 메서드는 요청된 된 속성이 이전에 캐시 되지 않은 경우 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 캐시 된 속성을 검색 하려면이 메서드를 사용할 수 하는 방법을 보여 줍니다.  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]가 더 이상 존재하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPropertyValue (property As AutomationProperty, ignoreDefaultValue As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPropertyValue(System::Windows::Automation::AutomationProperty ^ property, bool ignoreDefaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetCachedPropertyValue : System.Windows.Automation.AutomationProperty * bool -&gt; obj" Usage="automationElement.GetCachedPropertyValue (property, ignoreDefaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">검색할 속성의 식별자입니다.</param>
        <param name="ignoreDefaultValue">지정된 속성이 지원되지 않는 경우 기본값을 무시할지 여부를 지정하는 값입니다.</param>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 캐시에서 지정된 속성의 값을 검색하고, 기본 속성을 선택적으로 무시할 수 있습니다.</summary>
        <returns>지정된 속성의 값이 들어 있는 개체이거나, 요소에서 값을 제공하지 않고 <paramref name="ignoreDefaultValue" />가 <see langword="true" />인 경우 <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 지정된 된 속성에 대 한 캐시에서 검색 된 <xref:System.Windows.Automation.AutomationElement>합니다. 현재 속성을 검색 하려면 호출 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>합니다.  
  
 전달 `false` 에 `ignoreDefaultValue` 호출 하는 것과 같습니다 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=nameWithType>합니다.  
  
 요소 자체에 대 한 UI 자동화 공급자의 속성을 지 원하는 속성의 값이 반환 됩니다. 그렇지 않은 경우, `ignoreDefaultValue` 됩니다 `false`, 지정 된 기본 속성을 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 반환 됩니다. 참조 속성 식별자 필드의 기본 속성에 대 한 내용은 <xref:System.Windows.Automation.AutomationElement>와 같은 <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>합니다.  
  
 이 메서드는 요청된 된 속성이 이전에 캐시 되지 않은 경우 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 캐시 된 속성을 검색 하려면이 메서드를 사용할 수 하는 방법을 보여 줍니다.  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">요청한 속성이 캐시에 없습니다.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetClickablePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetClickablePoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetClickablePoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClickablePoint () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetClickablePoint();" />
      <MemberSignature Language="F#" Value="member this.GetClickablePoint : unit -&gt; System.Windows.Point" Usage="automationElement.GetClickablePoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Automation.AutomationElement" />에서 클릭할 수 있는 지점을 검색합니다.</summary>
        <returns>클라이언트에서 이 요소를 클릭하는 데 사용할 수 있는 지점의 실제 화면 좌표입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> 완전히 다른 창으로 가려진 경우 클릭 가능한 아닙니다.  
  
 <xref:System.Windows.Automation.AutomationElement> 클릭할 수 있는 경우 다음 조건이 모두 충족 합니다.  
  
-   프로그래밍 방식으로 볼 수 있고 제공 된 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 트리.  
  
-   이 완벽 하 게 뷰로 스크롤 해당 부모 컨테이너 내에서 있는 경우. 잘린 요소는 경우 클릭 가능한 임을 보장할 수 없습니다.  
  
-   요소는 다른 UI 요소에 의해 숨겨지지 않습니다. 상위 이외의 일부 UI 요소로 가려진는 요소는 클릭 가능한 되지 않을 수 있습니다.  
  
-   창 요소를 포함 하는 자체가 클릭 가능한 이어야 합니다. 예를 들어, 완전히 투명 하 게 포함 하는 창의 경우에를 창을 클릭할 수 없습니다. 마우스 클릭을 클릭을 통해 하위 창에 투명 한 창 내에서 모든 컨트롤에 클릭 가능한 지점만 반환 되지 것입니다 있도록 합니다.  
  
-   요소 컨테이너 (예: 목록 또는 트리 뷰) 인 경우 해당 지점이 있어야 할 때 클릭는 집중 컨트롤의 배경을 발생 합니다. 컨테이너 컨트롤의 모든 부분을 자식 요소에 의해 이미 사용 되 면 경우 클릭할 수는 없습니다.  
  
 UI 자동화 공급자가으로 클릭할 수 있는 컨트롤 정의 되는 요소를 클릭할 때 아무것도 수행 하지 않을 수도가 있습니다. 대신 컨트롤 패턴을 사용 하 여 컨트롤에서 작업을 수행 하는 것이 좋습니다.  
  
   
  
## Examples  
 다음 코드는 컨트롤에 클릭 가능한 지점을 검색 하 고 해당 지점에 시스템 커서를 이동 합니다.  
  
 [!code-csharp[UIAClient_snip#179](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#179)]
 [!code-vb[UIAClient_snip#179](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#179)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.NoClickablePointException">클릭할 수 있는 지점이 없습니다.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI 자동화 및 화면 크기 조정</related>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPattern">
      <MemberSignature Language="C#" Value="public object GetCurrentPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPattern (pattern As AutomationPattern) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPattern(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPattern : System.Windows.Automation.AutomationPattern -&gt; obj" Usage="automationElement.GetCurrentPattern pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">검색할 패턴의 식별자입니다.</param>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 지정된 패턴 개체를 검색합니다.</summary>
        <returns>지정된 패턴이 현재 <see cref="T:System.Windows.Automation.AutomationElement" />에서 지원되는 경우 해당 패턴 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 가용성을 기반으로 해당 호출 시 지정 된 패턴을 가져옵니다.  
  
 일부 형태의 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)],이 메서드는 크로스 프로세스 성능 오버 헤드가 부과 됩니다. 애플리케이션 패턴을 캐시 하 고 사용 하 여 검색 하 여 오버 헤드 집중할 수 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>입니다.  
  
   
  
## Examples  
 다음 예제에서는이 메서드를 사용 하 여 검색 하는 방법을 보여 줍니다는 <xref:System.Windows.Automation.SelectionItemPattern>에 다음 목록 상자에서 항목을 선택 하는 데 사용 됩니다.  
  
 [!code-csharp[UIAClient_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#103)]
 [!code-vb[UIAClient_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#103)]  
  
> [!NOTE]
>  예제에서와 같은 자주 반복 되는 작업을 효율적으로 패턴을 캐시 하 고 사용 하 여 것 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">패턴이 요소에서 지원되지 않는 경우</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
        <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">클라이언트용 UI 자동화 컨트롤 패턴</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Automation.AutomationElement" />에서 지정된 속성의 현재 값을 검색합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환한 값은 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> 메서드는 호출 시 현재 합니다. 값 수와 상호 작용 하는 다른 애플리케이션에서 이후에 변경 된 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]합니다.  
  
 일부 형태의 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)],이 메서드는 크로스 프로세스 성능 오버 헤드가 부과 됩니다. 애플리케이션 속성을 사용 하 여 검색 한 다음 오버 헤드가 집중할 수 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Current" />
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">클라이언트의 UI 자동화 속성</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a6c31d7b-b33e-49b3-b5c1-31a345f9b7c8">UI 자동화 속성 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPropertyValue (property As AutomationProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPropertyValue(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPropertyValue : System.Windows.Automation.AutomationProperty -&gt; obj" Usage="automationElement.GetCurrentPropertyValue property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">검색할 속성을 지정하는 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 속성 식별자입니다.</param>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 지정된 속성 값을 검색합니다. 대상 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 요소에서 해당 속성을 명시적으로 지원하지 않는 경우에는 속성 형식의 적절한 기본값이 반환됩니다.</summary>
        <returns>지정된 속성의 값이 들어 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환한 값은 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> 메서드는 호출 시 현재 합니다. 값 수와 상호 작용 하는 다른 애플리케이션에서 이후에 변경 된 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]합니다.  
  
 요소 자체에 대 한 UI 자동화 공급자의 속성을 지 원하는 속성의 값이 반환 됩니다. 기본 속성을 지정 하는 고, 그렇지 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 반환 됩니다. 참조 속성 식별자 필드의 기본 속성에 대 한 내용은 <xref:System.Windows.Automation.AutomationElement>와 같은 <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>합니다.  
  
 일부 형태의 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)],이 메서드는 크로스 프로세스 성능 오버 헤드가 부과 됩니다. 캐싱 속성 및 사용 하 여 검색 하 여 오버 헤드 전체가 대상 이지만 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>합니다.  
  
   
  
## Examples  
 다음 예제에서는 변수의 현재 값을 검색 합니다 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> 속성입니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient_snip#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPropertyValue (property As AutomationProperty, ignoreDefaultValue As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPropertyValue(System::Windows::Automation::AutomationProperty ^ property, bool ignoreDefaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPropertyValue : System.Windows.Automation.AutomationProperty * bool -&gt; obj" Usage="automationElement.GetCurrentPropertyValue (property, ignoreDefaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">검색할 속성을 지정하는 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 속성 식별자입니다.</param>
        <param name="ignoreDefaultValue">지정된 속성이 지원되는 경우 기본값을 무시할지 여부를 지정하는 값입니다.</param>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 지정된 속성의 값을 검색하고, 기본 속성을 선택적으로 무시할 수 있습니다.</summary>
        <returns>지정된 속성의 값이 들어 있는 개체이거나, 요소에서 값을 제공하지 않고 <paramref name="ignoreDefaultValue" />가 <see langword="true" />인 경우 <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전달 `false` 에 `ignoreDefaultValue` 호출 하는 것과 같습니다 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=nameWithType>합니다.  
  
 요소 자체에 대 한 UI 자동화 공급자의 속성을 지 원하는 속성의 값이 반환 됩니다. 그렇지 않은 경우, `ignoreDefaultValue` 됩니다 `false`, 지정 된 기본 속성을 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 반환 됩니다. 참조 속성 식별자 필드의 기본 속성에 대 한 내용은 <xref:System.Windows.Automation.AutomationElement>와 같은 <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>합니다.  
  
 반환한 값은 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> 메서드는 호출 시 현재 합니다. 값 수와 상호 작용 하는 다른 애플리케이션에서 이후에 변경 된 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]합니다.  
  
 일부 형태의 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)],이 메서드는 크로스 프로세스 성능 오버 헤드가 부과 됩니다. 애플리케이션 속성을 사용 하 여 검색 한 다음 오버 헤드가 집중할 수 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>입니다.  
  
   
  
## Examples  
 현재 값을 검색 하는 다음 예제는 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> 속성을 지정 하는 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="automationElement.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />의 해시 코드를 검색합니다.</summary>
        <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeId () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRuntimeId();" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeId : unit -&gt; int[]" Usage="automationElement.GetRuntimeId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 항목에 할당된 고유 식별자를 검색합니다.</summary>
        <returns>런타임 식별자를 나타내는 정수 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 식별자를 고유 하 게 보장 됩니다는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 생성 된 데스크톱의 합니다. 시간이 지남에 따라 식별자를 재사용할 수 있습니다.  
  
 런타임 식별자 형식에는 이후 릴리스에서 변경 될 수 있습니다. 반환 된 식별자를 불투명 값으로 처리 하 고 비교에 대해서만 사용 해야 예를 들어 결정할 여부는 <xref:System.Windows.Automation.AutomationElement> 캐시에.  
  
   
  
## Examples  
 다음 예제에서는의 런타임 식별자를 검색 하는 방법을 보여 줍니다는 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#111](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#111)]
 [!code-vb[UIAClient_snip#111](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedPatterns">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[] GetSupportedPatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[] GetSupportedPatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedPatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupportedPatterns () As AutomationPattern()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationPattern ^&gt; ^ GetSupportedPatterns();" />
      <MemberSignature Language="F#" Value="member this.GetSupportedPatterns : unit -&gt; System.Windows.Automation.AutomationPattern[]" Usage="automationElement.GetSupportedPatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 지원하는 컨트롤 패턴을 검색합니다.</summary>
        <returns>지원되는 컨트롤 패턴을 나타내는 <see cref="T:System.Windows.Automation.AutomationPattern" /> 개체의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 디버깅에 대 한 일반적으로 사용 됩니다. 메서드를 호출 하면 많은 양의 처리 쿼리하므로 <xref:System.Windows.Automation.AutomationElement> 가능한 모든 패턴입니다. 일반적으로 사용 하 여 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> 에서 특정 컨트롤 패턴을 검색 하는 <xref:System.Windows.Automation.AutomationElement>합니다. 특정 패턴 지원 되는지 여부를 확인, 적절 한 속성을 확인 예를 들어 <xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>합니다.  
  
   
  
## Examples  
 다음 예제에서 지 원하는 컨트롤 패턴을 검색 하는 방법을 보여 줍니다는 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#114](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#114)]
 [!code-vb[UIAClient_snip#114](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#114)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">클라이언트용 UI 자동화 컨트롤 패턴</related>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedProperties">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationProperty[] GetSupportedProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationProperty[] GetSupportedProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupportedProperties () As AutomationProperty()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationProperty ^&gt; ^ GetSupportedProperties();" />
      <MemberSignature Language="F#" Value="member this.GetSupportedProperties : unit -&gt; System.Windows.Automation.AutomationProperty[]" Usage="automationElement.GetSupportedProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>요소에서 지원하는 속성의 식별자를 검색합니다.</summary>
        <returns>지원되는 속성 식별자의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 요소를 지 원하는 모든 속성을 식별 하는 반환된 된 배열 그러나 포함할 수 있습니다도 포함 하는 속성 또는 중복 항목 `null` 또는 빈 값입니다. 대부분의 용도 대 한 것이 좋습니다 데 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> 속성을 현재 지원 되는지 여부를 확인 하 고 현재 값을 가져오도록 합니다.  
  
   
  
## Examples  
 다음 예제에서는 지 속성을 검색 하는 방법을 보여 줍니다는 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#115](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#115)]
 [!code-vb[UIAClient_snip#115](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#115)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">클라이언트의 UI 자동화 속성</related>
      </Docs>
    </Member>
    <Member MemberName="GetUpdatedCache">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetUpdatedCache (System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetUpdatedCache(class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdatedCache (request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetUpdatedCache(System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetUpdatedCache : System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="automationElement.GetUpdatedCache request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="request">업데이트된 캐시에 포함될 패턴 및 속성입니다.</param>
        <summary>캐시가 업데이트된 새 <see cref="T:System.Windows.Automation.AutomationElement" />를 검색합니다.</summary>
        <returns>캐시가 업데이트된 새 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원래 <xref:System.Windows.Automation.AutomationElement> 변경 되지 않습니다. <xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A> 반환 된 새 <xref:System.Windows.Automation.AutomationElement>를 참조 하는 동일한 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 동일 <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>합니다.  
  
   
  
## Examples  
 다음 예제에서는 콤보 상자의 선택이 변경 될 때마다 캐시 업데이트 될 수 있습니다 하는 방법을 보여 줍니다.  
  
 [!code-csharp[UIAClient_snip#109](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#109)]
 [!code-vb[UIAClient_snip#109](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#109)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 자동화 클라이언트의 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasKeyboardFocusProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ HasKeyboardFocusProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasKeyboardFocusProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#140](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#140)]
 [!code-vb[UIAClient_snip#140](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#140)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="HelpTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HelpTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HelpTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HelpTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HelpTextProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ HelpTextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HelpTextProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.HelpTextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 이 정보는 일반적으로 공급자에 의해 지정 된 도구 설명에서 가져옵니다.  
  
 반환 형식이 속성의 값은 <xref:System.String>합니다. 속성의 기본값은 빈 문자열입니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient_snip#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsContentElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsContentElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsContentElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsContentElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsContentElementProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsContentElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsContentElementProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsContentElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 콘텐츠 뷰를 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 트리 보기를 제공 합니다 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 만 포함 하는 요소 내에서 데이터를 나타내는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]합니다.  
  
 요소는 콘텐츠를 보유 하려면 컨트롤 이어야 합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `true`합니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#141](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#141)]
 [!code-vb[UIAClient_snip#141](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#141)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#142](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#142)]
 [!code-vb[UIAClient_snip#142](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#142)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 자동화 트리 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsControlElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsControlElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsControlElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsControlElementProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsControlElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsControlElementProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 컨트롤은 사용자에 게 대화형 또는 포함 된 정보에는 요소는 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `true`합니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#143](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#143)]
 [!code-vb[UIAClient_snip#143](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#143)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#144](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#144)]
 [!code-vb[UIAClient_snip#144](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#144)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ControlViewCondition" />
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
        <related type="Article" href="https://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">UI 자동화 트리 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsDockPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDockPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsDockPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDockPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.DockPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />에서 참조하는 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 항목을 사용할 수 있는지 여부를 지정하는 <see cref="T:System.Windows.Automation.AutomationElement" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
 컨트롤의 활성화 상태 경우 `false`에 자식 컨트롤은 사용할 수 없는 것으로 가정 합니다. 자식 요소에서 속성 변경 이벤트는 부모의 상태 변경 내용을 제어 하는 경우에 하지 기대할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#146](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#146)]
 [!code-vb[UIAClient_snip#146](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#146)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsExpandCollapsePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsExpandCollapsePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsExpandCollapsePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsExpandCollapsePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 지정된 된 컨트롤 패턴 지원 되는지 여부를 지정 하는 값을 검색 하는 다음 예제는 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsGridItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGridItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsGridItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsGridItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.GridItemPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsGridPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGridPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsGridPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsGridPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.GridPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsInvokePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInvokePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsInvokePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsInvokePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.InvokePattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsItemContainerPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsItemContainerPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsItemContainerPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsItemContainerPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.ItemContainerPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsKeyboardFocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 적절 하 게 작동 하는 데 필요한 정보를 제공 하는 속성을 <xref:System.Windows.Automation.AutomationElement.SetFocus%2A> 메서드.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#147](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#147)]
 [!code-vb[UIAClient_snip#147](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#147)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsMultipleViewPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMultipleViewPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsMultipleViewPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMultipleViewPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.MultipleViewPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsOffscreenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsOffscreenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsOffscreenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOffscreenProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsOffscreenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOffscreenProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsOffscreenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" /> 항목이 화면에 표시되는지 여부를 나타내는 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 형식의 반환 값은 <xref:System.Boolean>, 기본값은 및 `false`합니다.  
  
 이 속성이 대 한 자세한 내용은 `true`를 참조 하세요 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>합니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#148](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#148)]
 [!code-vb[UIAClient_snip#148](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#148)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#149](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#149)]
 [!code-vb[UIAClient_snip#149](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#149)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsPasswordProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsPasswordProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsPasswordProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsPasswordProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPasswordProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsPasswordProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPasswordProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsPasswordProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 이 속성에 대 한 반환 값은 한 <xref:System.Boolean>합니다. 반환 `true` 이 고 그렇지 않으면 보호 된 콘텐츠 임을 나타내려면 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다.  
  
 [!code-csharp[UIAClient_snip#150](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#150)]
 [!code-vb[UIAClient_snip#150](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#150)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsRangeValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsRangeValuePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsRangeValuePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsRangeValuePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.RangeValuePattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForFormProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRequiredForFormProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRequiredForFormProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsRequiredForFormProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsRequiredForFormProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsRequiredForFormProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsRequiredForFormProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 이 속성에 대 한 반환 값은 형식의 <xref:System.Boolean>, 기본값은 및 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#151](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#151)]
 [!code-vb[UIAClient_snip#151](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#151)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsScrollItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsScrollItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsScrollItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsScrollItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.ScrollItemPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsScrollPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsScrollPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsScrollPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsScrollPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.ScrollPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.SelectionItemPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.SelectionPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronizedInputPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSynchronizedInputPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSynchronizedInputPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSynchronizedInputPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTableItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTableItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTableItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTableItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.TableItemPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsTablePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTablePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTablePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTablePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.TablePattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsTextPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTextPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTextPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTextPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.TextPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsTogglePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTogglePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTogglePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTogglePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.TogglePattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsTransformPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTransformPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTransformPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTransformPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.TransformPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsValuePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsValuePatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsValuePatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.ValuePattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsVirtualizedItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVirtualizedItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsVirtualizedItemPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVirtualizedItemPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.VirtualizedItemPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsWindowPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsWindowPatternAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsWindowPatternAvailableProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.AutomationElement" />에서 <see cref="T:System.Windows.Automation.WindowPattern" /> 컨트롤 패턴을 사용할 수 있는지 여부를 나타내는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 형식이 속성의 값은 <xref:System.Boolean>합니다. 속성의 기본값은 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정된 된 컨트롤 패턴 지원 되는지 여부를 확인 한 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ItemStatusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemStatusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemStatusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemStatusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemStatusProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ItemStatusProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemStatusProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ItemStatusProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>복합 항목의 시각적 표시 상태를 지정하는 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 반환 값은 컨트롤이 정의 <xref:System.String>합니다. 기본값은 빈 문자열입니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#152](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#152)]
 [!code-vb[UIAClient_snip#152](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#152)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#153](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#153)]
 [!code-vb[UIAClient_snip#153](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#153)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ItemTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ItemTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemTypeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ItemTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 반환 값은 컨트롤이 정의 <xref:System.String>합니다. 기본값은 빈 문자열입니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#154](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#154)]
 [!code-vb[UIAClient_snip#154](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#154)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만, 요소 자체 속성의 값을 제공 하지 않습니다 하는 경우는 애플리케이션 정의 문자열 임을 지정 기본값 대신 반환할 합니다.  
  
 [!code-csharp[UIAClient_snip#155](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#155)]
 [!code-vb[UIAClient_snip#155](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#155)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LabeledByProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LabeledByProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LabeledByProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LabeledByProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LabeledByProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ LabeledByProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LabeledByProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.LabeledByProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에 연결된 레이블을 식별하는 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 반환 형식이 속성의 값은 <xref:System.Windows.Automation.AutomationElement>합니다. 속성의 기본값은 `null`합니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#156](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#156)]
 [!code-vb[UIAClient_snip#156](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#156)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#157](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#157)]
 [!code-vb[UIAClient_snip#157](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#157)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="LayoutInvalidatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayoutInvalidatedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ LayoutInvalidatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayoutInvalidatedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>레이아웃이 무효화될 때 발생하는 이벤트를 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 이벤트는 많은 요소 표시 유형 정보는 변경 될 때마다 요소 컨테이너에서 발생 합니다.  이 이벤트는 새로 고침 해야 하는 표시기로 클라이언트에서 사용 된 <xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty> 및 <xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty> 트리 내에서 요소에 대 한 캐시 되어 있을 수 있는 정보입니다. 이 이벤트를 트리거하는 권장 되는 변경 수는 25입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalizedControlTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ LocalizedControlTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LocalizedControlTypeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로컬 언어로 <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 공급자는 잘 정의 된 컨트롤 형식은 없는 사용자 지정 컨트롤을 나타낼 경우이 속성을 노출 해야 합니다.  
  
 반환 형식이 속성의 값은 <xref:System.String>합니다. 속성의 기본값은 빈 문자열입니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#158](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#158)]
 [!code-vb[UIAClient_snip#158](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#158)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#159](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#159)]
 [!code-vb[UIAClient_snip#159](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#159)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="MenuClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ MenuClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuClosedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.MenuClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>메뉴가 닫힐 때 발생하는 이벤트를 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MenuOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ MenuOpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuOpenedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.MenuOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>메뉴가 열릴 때 발생하는 이벤트를 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 반환 형식이 속성의 값은 <xref:System.String>합니다. 속성의 기본값은 빈 문자열입니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#160](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#160)]
 [!code-vb[UIAClient_snip#160](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#160)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#161](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#161)]
 [!code-vb[UIAClient_snip#161](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#161)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NativeWindowHandleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NativeWindowHandleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NativeWindowHandleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ NativeWindowHandleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NativeWindowHandleProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.NativeWindowHandleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 반환 형식이 속성의 값은 <xref:System.Int32>합니다. 속성의 기본값은 0입니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#162](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#162)]
 [!code-vb[UIAClient_snip#162](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#162)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#163](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#163)]
 [!code-vb[UIAClient_snip#163](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#163)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="NotSupported">
      <MemberSignature Language="C#" Value="public static readonly object NotSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object NotSupported" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NotSupported As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ NotSupported;" />
      <MemberSignature Language="F#" Value=" staticval mutable NotSupported : obj" Usage="System.Windows.Automation.AutomationElement.NotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>속성이 지원되지 않음을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
   
  
## Examples  
 에 대 한 도움말 텍스트 속성을 검색 하는 다음 예제는 <xref:System.Windows.Automation.AutomationElement>을 지정 하 고는 <xref:System.Windows.Automation.AutomationElement.NotSupported> 컨트롤이 해당 속성을 지원 하지 않습니다 하는 경우 반환 되어야 합니다.  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As AutomationElement, right As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Automation::AutomationElement ^ left, System::Windows::Automation::AutomationElement ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Automation.AutomationElement * System.Windows.Automation.AutomationElement -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">비교할 첫 번째 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</param>
        <param name="right">비교할 두 번째 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" /> 개체가 같은 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 요소를 참조하는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns>두  <see cref="T:System.Windows.Automation.AutomationElement" /> 개체가 같은 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 요소를 참조하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 <xref:System.Windows.Automation.AutomationElement> 개체와 같은지를 비교 하는 시간에 서로 다른 지점에서 다른 캐시 된 정보가 포함 될 수 있습니다. <xref:System.Windows.Automation.AutomationElement.op_Equality%2A> 개체가 동일한 기본 참조는 테스트 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 요소입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As AutomationElement, right As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Automation::AutomationElement ^ left, System::Windows::Automation::AutomationElement ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Automation.AutomationElement * System.Windows.Automation.AutomationElement -&gt; bool" Usage="System.Windows.Automation.AutomationElement.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">비교할 첫 번째 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</param>
        <param name="right">비교할 두 번째 <see cref="T:System.Windows.Automation.AutomationElement" />입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Automation.AutomationElement" /> 개체가 서로 다른 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 요소를 참조하는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns>두 개체가 서로 다른 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 요소를 참조하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.OrientationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OrientationProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ OrientationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OrientationProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.OrientationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 속성의 값이 형식이 <xref:System.Windows.Automation.OrientationType>합니다. 기본값은 <xref:System.Windows.Automation.OrientationType.None>입니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#164](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#164)]
 [!code-vb[UIAClient_snip#164](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#164)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#165](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#165)]
 [!code-vb[UIAClient_snip#165](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#165)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="PositionInSetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty PositionInSetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty PositionInSetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.PositionInSetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PositionInSetProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ PositionInSetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PositionInSetProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.PositionInSetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>형제로 간주되는 일련의 요소 내에서 자동화 요소의 서수 위치를 설명합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

`PositionInSetProperty` 와 함께 작동 <xref:System.Windows.Automation.AutomationElement.SizeOfSetProperty> 자동화 요소 집합에서의 서 수 위치를 설명 합니다.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ProcessIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ProcessIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ProcessIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProcessIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ProcessIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ProcessIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.ProcessIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" /> 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 이 속성을 검색할 수도 있습니다는 <xref:System.Windows.Automation.AutomationElement.Current%2A> 또는 <xref:System.Windows.Automation.AutomationElement.Cached%2A> 속성입니다.  
  
 반환 형식이 속성의 값은 <xref:System.Int32>합니다. 속성의 기본값은 0입니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다. 요소 하나를 제공 하지 않는 경우 기본값 반환 됩니다.  
  
 [!code-csharp[UIAClient_snip#167](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#167)]
 [!code-vb[UIAClient_snip#167](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#167)]  
  
 다음 예제에서는 속성의 현재 값을 검색 하지만 요소 자체의 속성에 대 한 값을 제공 하지 않는 경우 지정 <xref:System.Windows.Automation.AutomationElement.NotSupported> 대신 기본값을 반환 하는 것입니다.  
  
 [!code-csharp[UIAClient_snip#168](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#168)]
 [!code-vb[UIAClient_snip#168](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#168)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="RootElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement RootElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement RootElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.RootElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RootElement As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::AutomationElement ^ RootElement { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootElement : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.RootElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 데스크톱의 루트 <see cref="T:System.Windows.Automation.AutomationElement" />를 가져옵니다.</summary>
        <value>루트 요소입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 루트 요소 시작 지점으로 다른 요소를 찾는 데 사용 하는 <xref:System.Windows.Automation.AutomationElement.FindAll%2A> 및 <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> 메서드.  
  
 루트 요소를 검색할 때 지정 해야 <xref:System.Windows.Automation.TreeScope.Children> 검색의 범위에 있지 <xref:System.Windows.Automation.TreeScope.Descendants>합니다. 데스크톱의 전체 하위 트리를 통해 검색 수천 개의 항목을 반복을 스택 오버플로가 발생할 수 있습니다.  
  
   
  
## Examples  
 다음 예제 코드 데스크톱의 모든 직계 자식 컬렉션을 검색 합니다.  
  
 [!code-csharp[UIAClient_snip#201](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#201)]
 [!code-vb[UIAClient_snip#201](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#201)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty RuntimeIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty RuntimeIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RuntimeIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ RuntimeIdProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RuntimeIdProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소의 런타임 식별자를 포함하는 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 런타임 ID 속성에 대 한 ID를 지정 합니다.는 <xref:System.Windows.Automation.AutomationElement> 바탕 화면에서 고유 합니다.  
  
 속성의 반환 값은 형식의 배열을 <xref:System.Int32>합니다. 기본값은 없습니다.  
  
   
  
## Examples  
 다음 예제에서는 속성의 현재 값을 검색 합니다.  
  
 [!code-csharp[UIAClient_snip#169](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#169)]
 [!code-vb[UIAClient_snip#169](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#169)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.StructureChangedEventArgs.GetRuntimeId" />
        <altmember cref="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
        <related type="Article" href="https://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">UI 자동화 속성 개요</related>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberSignature Language="F#" Value="member this.SetFocus : unit -&gt; unit" Usage="automationElement.SetFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Automation.AutomationElement" />에 집중합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드의 동작을 요소에 대 한 UI 자동화 공급자 구현에 따라 달라 집니다. 포커스를 설정 해도 요소를 포그라운드로 가져옵니다 하거나 볼 수 있도록 반드시 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException"><see cref="T:System.Windows.Automation.AutomationElement" />에 대한 UI가 더 이상 존재하지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="SizeOfSetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty SizeOfSetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty SizeOfSetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.SizeOfSetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeOfSetProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ SizeOfSetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeOfSetProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.AutomationElement.SizeOfSetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>형제로 간주되는 그룹 또는 세트에서 자동화 요소 수를 설명합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

`SizeOfSetProperty` 와 함께 작동 <xref:System.Windows.Automation.AutomationElement.PositionInSetProperty> 집합에 있는 항목의 수를 설명 합니다.

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StructureChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent StructureChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent StructureChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.StructureChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StructureChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ StructureChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StructureChangedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.StructureChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 트리 구조가 변경될 때 발생하는 이벤트를 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ ToolTipClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipClosedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.ToolTipClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>도구 설명이 닫힐 때 발생하는 이벤트를 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ ToolTipOpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipOpenedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.AutomationElement.ToolTipOpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>도구 설명이 열릴 때 발생하는 이벤트를 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 식별자는 UI 자동화 클라이언트 애플리케이션에서 사용 됩니다. UI 자동화 공급자에서 해당 식별자를 사용 해야 <xref:System.Windows.Automation.AutomationElementIdentifiers>합니다.  
  
 도구 설명에는 바탕 화면에서 일시적인 되며 클라이언트 이벤트를 받는 시간을 기준으로 도구 설명을 닫았을 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TryGetCachedPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCachedPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCachedPattern(class System.Windows.Automation.AutomationPattern pattern, [out] object&amp; patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCachedPattern (pattern As AutomationPattern, ByRef patternObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetCachedPattern(System::Windows::Automation::AutomationPattern ^ pattern, [Runtime::InteropServices::Out] System::Object ^ % patternObject);" />
      <MemberSignature Language="F#" Value="member this.TryGetCachedPattern : System.Windows.Automation.AutomationPattern *  -&gt; bool" Usage="automationElement.TryGetCachedPattern (pattern, patternObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">검색할 컨트롤 패턴의 식별자입니다.</param>
        <param name="patternObject">반환 시 패턴이 캐시에 있으면 해당 패턴을, 그렇지 않으면 <see langword="null" />을 포함합니다.</param>
        <summary>캐시에서 컨트롤 패턴을 검색합니다.</summary>
        <returns>패턴이 캐시에 있으면 <see langword="true" />이고, 패턴이 캐시에 없거나 지원되지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 캐시 컨트롤 패턴을 검색 하는 방법을 보여 줍니다.  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c">UI 자동화 클라이언트의 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName="TryGetClickablePoint">
      <MemberSignature Language="C#" Value="public bool TryGetClickablePoint (out System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetClickablePoint([out] valuetype System.Windows.Point&amp; pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetClickablePoint (ByRef pt As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetClickablePoint([Runtime::InteropServices::Out] System::Windows::Point % pt);" />
      <MemberSignature Language="F#" Value="member this.TryGetClickablePoint :  -&gt; bool" Usage="automationElement.TryGetClickablePoint pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pt">메서드 반환 시 클릭할 수 있는 지점의 실제 화면 좌표를 포함합니다.</param>
        <summary>요소 내에서 클릭할 수 있는 지점을 검색합니다.</summary>
        <returns>클릭할 수 있는 지점이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> 완전히 다른 창으로 가려진 경우 클릭 가능한 아닙니다.  
  
   
  
## Examples  
 다음 예제에서 클릭 가능한 지점이 검색 하려고 시도 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIAClient_snip#112](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#112)]
 [!code-vb[UIAClient_snip#112](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#112)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
        <related type="Article" href="https://msdn.microsoft.com/library/4380cad7-e509-448f-b9a5-6de042605fd4">UI 자동화 및 화면 크기 조정</related>
      </Docs>
    </Member>
    <Member MemberName="TryGetCurrentPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCurrentPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern, [out] object&amp; patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCurrentPattern (pattern As AutomationPattern, ByRef patternObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetCurrentPattern(System::Windows::Automation::AutomationPattern ^ pattern, [Runtime::InteropServices::Out] System::Object ^ % patternObject);" />
      <MemberSignature Language="F#" Value="member this.TryGetCurrentPattern : System.Windows.Automation.AutomationPattern *  -&gt; bool" Usage="automationElement.TryGetCurrentPattern (pattern, patternObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">검색할 컨트롤 패턴의 식별자입니다.</param>
        <param name="patternObject">반환 시 컨트롤 패턴이 지원되면 해당 패턴이고, 그렇지 않으면 <see langword="null" />입니다.</param>
        <summary>컨트롤 패턴을 구현하는 개체를 검색합니다.</summary>
        <returns>해당 패턴이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 형태의 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)],이 메서드는 크로스 프로세스 성능 오버 헤드가 부과 됩니다. 애플리케이션 패턴을 캐시 하 고 사용 하 여 검색 하 여 오버 헤드 집중할 수 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>입니다.  
  
   
  
## Examples  
 다음 예제에서는이 메서드를 사용 하 여 컨트롤 패턴을 검색 하는 방법을 보여 줍니다.  
  
 [!code-csharp[UIAClient_snip#113](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#113)]
 [!code-vb[UIAClient_snip#113](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#113)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
        <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">클라이언트용 UI 자동화 컨트롤 패턴</related>
      </Docs>
    </Member>
  </Members>
</Type>