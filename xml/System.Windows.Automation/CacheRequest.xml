<Type Name="CacheRequest" FullName="System.Windows.Automation.CacheRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="611afb8af195ff3309c1e3d60244d862062c961e" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51907235" /></Metadata><TypeSignature Language="C#" Value="public sealed class CacheRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CacheRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.CacheRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CacheRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheRequest sealed" />
  <TypeSignature Language="F#" Value="type CacheRequest = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c4ecf-101"><see cref="T:System.Windows.Automation.AutomationElement" />를 가져올 때 UI Automation 프레임워크에서 캐시하는 속성 및 패턴을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-101">Specifies properties and patterns that the UI Automation framework caches when an <see cref="T:System.Windows.Automation.AutomationElement" /> is obtained.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ecf-102">속성 및 패턴을 통해 검색 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 성능이 느려질 수는 크로스 프로세스 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-102">Retrieving properties and patterns through [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] requires cross-process calls that can slow down performance.</span></span> <span data-ttu-id="c4ecf-103">속성 값 및 일괄 처리 작업의 패턴을 캐시 하 여 애플리케이션의 성능을 향상 시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-103">By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.</span></span>  
  
 <span data-ttu-id="c4ecf-104">클래스 생성자를 호출 하 여 새 캐시 요청을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-104">Create a new cache request by calling the class constructor.</span></span> <span data-ttu-id="c4ecf-105">요청에 대 한 반복된 호출 하 여 채워집니다는 <xref:System.Windows.Automation.CacheRequest.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-105">The request is populated by repeated calls to the <xref:System.Windows.Automation.CacheRequest.Add%2A> method.</span></span>  
  
 <span data-ttu-id="c4ecf-106">단일 <xref:System.Windows.Automation.CacheRequest> 활성화 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-106">Only a single <xref:System.Windows.Automation.CacheRequest> can be active.</span></span> <span data-ttu-id="c4ecf-107">두 가지 방법으로 요청을 활성화 하려면:</span><span class="sxs-lookup"><span data-stu-id="c4ecf-107">There are two ways to activate a request:</span></span>  
  
-   <span data-ttu-id="c4ecf-108">호출 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 를 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-108">Call <xref:System.Windows.Automation.CacheRequest.Activate%2A> on the request.</span></span> <span data-ttu-id="c4ecf-109">스택에 요청 푸시하고 개체가 삭제 되 면 요청이 팝 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-109">This pushes the request onto the stack, and the request is popped when the object is disposed.</span></span> <span data-ttu-id="c4ecf-110">예외가 발생 하는 경우에 삭제 되도록의 반환 값을 사용 하 여 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 내에서 `using` 블록 (`Using` Visual Basic에서).</span><span class="sxs-lookup"><span data-stu-id="c4ecf-110">To ensure disposal even if an exception is raised, use the return value from <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="c4ecf-111">호출 하 여 내부 스택에 요청이 배치 <xref:System.Windows.Automation.CacheRequest.Push%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-111">Put the request onto the internal stack by calling <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span> <span data-ttu-id="c4ecf-112">스택의 맨 위에 있는 요청 활성화 되며, 그 다음 누적 기준에서 제거 해야만 <xref:System.Windows.Automation.CacheRequest.Pop%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-112">Only the topmost request on the stack is active, and it must be the next one removed from the stack by <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span> <span data-ttu-id="c4ecf-113">비활성화 요청 팝 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-113">Popping the request deactivates it.</span></span>  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] <span data-ttu-id="c4ecf-114">요청이 활성 상태인 동안 가져온 요소 속성 및 지정 된 패턴에 대 한 값은 캐싱되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-114">elements obtained while the request is active will have cached values for the properties and patterns specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ecf-115">다음 예제에서는 사용 하는 방법을 보여 줍니다 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 캐시 패턴 및 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-115">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 <span data-ttu-id="c4ecf-116">다음 예제에서는 사용 하는 방법을 보여 줍니다 <xref:System.Windows.Automation.CacheRequest.Push%2A> 고 <xref:System.Windows.Automation.CacheRequest.Pop%2A> 캐시 패턴 및 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-116">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="c4ecf-117">UI 자동화 클라이언트의 캐싱</span><span class="sxs-lookup"><span data-stu-id="c4ecf-117">Caching in UI Automation Clients</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="c4ecf-118">UI 자동화의 캐싱 사용</span><span class="sxs-lookup"><span data-stu-id="c4ecf-118">Use Caching in UI Automation</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771456(v=vs.90)"><span data-ttu-id="c4ecf-119">FetchTimer 샘플</span><span class="sxs-lookup"><span data-stu-id="c4ecf-119">FetchTimer Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4ecf-120"><see cref="T:System.Windows.Automation.CacheRequest" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-120">Initializes a new instance of the <see cref="T:System.Windows.Automation.CacheRequest" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ecf-121">경우는 <xref:System.Windows.Automation.CacheRequest> 만들어지면는 <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> 식별자 캐시에 기본 속성으로 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-121">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="c4ecf-122">UI 자동화 클라이언트의 캐싱</span><span class="sxs-lookup"><span data-stu-id="c4ecf-122">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="c4ecf-123">UI 자동화의 캐싱 사용</span><span class="sxs-lookup"><span data-stu-id="c4ecf-123">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public IDisposable Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; IDisposable" Usage="cacheRequest.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4ecf-124">같은 스레드에서 <see cref="T:System.Windows.Automation.CacheRequest" />를 요청할 때 이 <see cref="T:System.Windows.Automation.AutomationElement" />를 반환되는 항목에 대한 활성 사양으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-124">Sets this <see cref="T:System.Windows.Automation.CacheRequest" /> as the active specification for the items that are returned when an <see cref="T:System.Windows.Automation.AutomationElement" /> is requested on the same thread.</span></span></summary>
        <returns><span data-ttu-id="c4ecf-125"><see cref="T:System.Windows.Automation.CacheRequest" />를 삭제하는 데 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-125">The object that can be used to dispose the <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ecf-126">이 메서드를 사용 하 여 일반적으로 메서드보다 선호도 높습니다 <xref:System.Windows.Automation.CacheRequest.Push%2A> 및 <xref:System.Windows.Automation.CacheRequest.Pop%2A> 활성화 하는 것은 <xref:System.Windows.Automation.CacheRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-126">Using this method is usually preferable to using <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> as a means of activating the <xref:System.Windows.Automation.CacheRequest>.</span></span> <span data-ttu-id="c4ecf-127">개체는 스택에 때 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 호출 되어 삭제 될 때 팝 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-127">The object is pushed onto the stack when <xref:System.Windows.Automation.CacheRequest.Activate%2A> is called, and then popped off when it is disposed.</span></span> <span data-ttu-id="c4ecf-128">개체를 삭제 하려면, 배치 내에 반환 값을 `using` 블록 (`Using` Visual Basic에서).</span><span class="sxs-lookup"><span data-stu-id="c4ecf-128">To ensure disposal, place the return value within a `using` block (`Using` in Visual Basic).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ecf-129">다음 예제에서는 사용 하는 방법을 보여 줍니다 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 캐시 패턴 및 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-129">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="c4ecf-130">UI 자동화 클라이언트의 캐싱</span><span class="sxs-lookup"><span data-stu-id="c4ecf-130">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="c4ecf-131">UI 자동화의 캐싱 사용</span><span class="sxs-lookup"><span data-stu-id="c4ecf-131">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4ecf-132"><see cref="T:System.Windows.Automation.CacheRequest" />에 속성 또는 패턴 식별자를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-132">Adds a property or pattern identifier to a <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ecf-133">경우는 <xref:System.Windows.Automation.CacheRequest> 개체를 만든를 <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> 식별자 캐시에 기본 속성으로 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-133">When a <xref:System.Windows.Automation.CacheRequest> object is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="c4ecf-134">캐시 요청에 이미 있는 개체를 추가 하는 것은 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-134">Adding an object that is already in the cache request has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (pattern As AutomationPattern)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Automation.AutomationPattern -&gt; unit" Usage="cacheRequest.Add pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="c4ecf-135">캐시할 패턴을 지정하는 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-135">An identifier specifying a pattern to cache.</span></span></param>
        <summary><span data-ttu-id="c4ecf-136">지정된 <see cref="T:System.Windows.Automation.AutomationPattern" /> 식별자를 이 <see cref="T:System.Windows.Automation.CacheRequest" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-136">Adds the specified <see cref="T:System.Windows.Automation.AutomationPattern" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ecf-137">캐시 요청에 이미 있는 패턴을 추가 하는 것은 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-137">Adding a pattern that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ecf-138">다음 예제에서는 생성 하는 방법을 보여 줍니다는 <xref:System.Windows.Automation.CacheRequest> 캐시할 패턴을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-138">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a pattern to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4ecf-139"><see cref="T:System.Windows.Automation.CacheRequest" />가 활성 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="c4ecf-139">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="c4ecf-140">UI 자동화 클라이언트의 캐싱</span><span class="sxs-lookup"><span data-stu-id="c4ecf-140">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="c4ecf-141">UI 자동화의 캐싱 사용</span><span class="sxs-lookup"><span data-stu-id="c4ecf-141">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (property As AutomationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Automation.AutomationProperty -&gt; unit" Usage="cacheRequest.Add property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="c4ecf-142">캐시할 속성 값을 지정하는 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-142">An identifier specifying a property value to cache.</span></span></param>
        <summary><span data-ttu-id="c4ecf-143">지정된 <see cref="T:System.Windows.Automation.AutomationProperty" /> 식별자를 이 <see cref="T:System.Windows.Automation.CacheRequest" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-143">Adds the specified <see cref="T:System.Windows.Automation.AutomationProperty" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ecf-144">경우는 <xref:System.Windows.Automation.CacheRequest> 만들어지면는 <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> 식별자 캐시에 기본 속성으로 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-144">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="c4ecf-145">캐시 요청에 이미 있는 속성을 추가 하는 것은 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-145">Adding a property that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ecf-146">다음 예제에서는 생성 하는 방법을 보여 줍니다는 <xref:System.Windows.Automation.CacheRequest> 캐시할 속성을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-146">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a property to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4ecf-147"><see cref="T:System.Windows.Automation.CacheRequest" />가 활성 상태인 경우</span><span class="sxs-lookup"><span data-stu-id="c4ecf-147">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="c4ecf-148">UI 자동화 클라이언트의 캐싱</span><span class="sxs-lookup"><span data-stu-id="c4ecf-148">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="c4ecf-149">UI 자동화의 캐싱 사용</span><span class="sxs-lookup"><span data-stu-id="c4ecf-149">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutomationElementMode">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElementMode AutomationElementMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationElementMode As AutomationElementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementMode AutomationElementMode { System::Windows::Automation::AutomationElementMode get(); void set(System::Windows::Automation::AutomationElementMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutomationElementMode : System.Windows.Automation.AutomationElementMode with get, set" Usage="System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4ecf-150">반환된 요소에 내부 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]에 대한 전체 참조가 포함될지 아니면 캐시된 정보만 포함될지를 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-150">Gets or sets a value that specifies whether returned elements should contain full references to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], or only cached information.</span></span></summary>
        <value><span data-ttu-id="c4ecf-151">반환된 요소에 내부 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]에 대한 전체 참조가 포함되면 <see cref="F:System.Windows.Automation.AutomationElementMode.Full" />이고, 그렇지 않으면 <see cref="F:System.Windows.Automation.AutomationElementMode.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-151"><see cref="F:System.Windows.Automation.AutomationElementMode.Full" /> if the returned elements have a full reference to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]; otherwise <see cref="F:System.Windows.Automation.AutomationElementMode.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ecf-152"><xref:System.Windows.Automation.AutomationElementMode.Full> 기본 값 이며, 반환 되는 요소 내부에 대 한 전체 참조를 포함 하도록 지정 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-152"><xref:System.Windows.Automation.AutomationElementMode.Full> is the default value, and specifies that returned elements contain a full reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="c4ecf-153"><xref:System.Windows.Automation.AutomationElementMode.None> 반환 되는 요소는 기본 참조가 없는 지정 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], 캐시 된 정보만 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-153"><xref:System.Windows.Automation.AutomationElementMode.None> specifies that the returned elements have no reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], and contain only cached information.</span></span>  
  
 <span data-ttu-id="c4ecf-154">포함 하 여 요소에 대해 특정 작업 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, 및 <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, 전체 참조를 필요로;에서이 수행 하는 none이 있는 요소에서 결과 <xref:System.InvalidOperationException>입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-154">Certain operations on elements, including <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, and <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, require a full reference; attempting to perform these on an element that has none results in an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="c4ecf-155">사용 하 여 <xref:System.Windows.Automation.AutomationElementMode.None> 오버 헤드를 방지 하므로 속성만 필요할 경우 더 효율적일 수 있습니다 전체 참조를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-155">Using <xref:System.Windows.Automation.AutomationElementMode.None> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ecf-156">다음 예에서 <xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> 로 설정 된 <xref:System.Windows.Automation.AutomationElementMode.None>, 결과 캐시 된 속성 및 패턴 검색된 된 개체에 대해 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-156">In the following example, <xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> is set to <xref:System.Windows.Automation.AutomationElementMode.None>, with the result that only cached properties and patterns are available for the retrieved object.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="c4ecf-157">UI 자동화 클라이언트의 캐싱</span><span class="sxs-lookup"><span data-stu-id="c4ecf-157">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="c4ecf-158">UI 자동화의 캐싱 사용</span><span class="sxs-lookup"><span data-stu-id="c4ecf-158">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.CacheRequest Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.CacheRequest Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::CacheRequest ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Automation.CacheRequest" Usage="cacheRequest.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4ecf-159">이 <see cref="T:System.Windows.Automation.CacheRequest" />의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-159">Creates a copy of this <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></summary>
        <returns><span data-ttu-id="c4ecf-160">현재 개체의 수정 가능한 복사본입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-160">A modifiable copy of the current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.CacheRequest Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.CacheRequest Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::CacheRequest ^ Current { System::Windows::Automation::CacheRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.CacheRequest" Usage="System.Windows.Automation.CacheRequest.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4ecf-161">현재 스레드에서 활성화된 <see cref="T:System.Windows.Automation.CacheRequest" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-161">Gets the <see cref="T:System.Windows.Automation.CacheRequest" /> that is active on the current thread.</span></span></summary>
        <value><span data-ttu-id="c4ecf-162">활성 <see cref="T:System.Windows.Automation.CacheRequest" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-162">The active <see cref="T:System.Windows.Automation.CacheRequest" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public void Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; unit" Usage="cacheRequest.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4ecf-163">현재 스레드의 내부 스택에서 활성 <see cref="T:System.Windows.Automation.CacheRequest" />를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-163">Removes the active <see cref="T:System.Windows.Automation.CacheRequest" /> from the internal stack for the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ecf-164">현재 요청에만 사용 하 여 제거할 수 있습니다는 <xref:System.Windows.Automation.CacheRequest.Pop%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-164">Only the currently active request can be removed using the <xref:System.Windows.Automation.CacheRequest.Pop%2A> method.</span></span> <span data-ttu-id="c4ecf-165">예외가 현재 한 결과가 아니라는 요청을 제거 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-165">Attempting to remove a request that is not the current one results in an exception.</span></span>  
  
 <span data-ttu-id="c4ecf-166">사용 하는 것이 좋습니다는 캐시 요청을 중첩 하는 경우가 아니면 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 스택에 요청이 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-166">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="c4ecf-167">사용할 수 있는 원인은 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 내에서 `using` 블록 (`Using` Visual Basic의), 되도록 예외가 발생 하더라도 요청이 스택에서 팝 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-167">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ecf-168">다음 예제에서는 비활성화 하는 방법을 보여 줍니다는 <xref:System.Windows.Automation.CacheRequest> 를 사용 하 여 <xref:System.Windows.Automation.CacheRequest.Pop%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-168">The following example shows how to deactivate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c4ecf-169">스택에 마지막으로 푸시되지 않은 캐시 요청을 제거하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="c4ecf-169">An attempt was made to remove a cache request that was not the last one pushed onto the stack.</span></span></exception>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="c4ecf-170">UI 자동화 클라이언트의 캐싱</span><span class="sxs-lookup"><span data-stu-id="c4ecf-170">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="c4ecf-171">UI 자동화의 캐싱 사용</span><span class="sxs-lookup"><span data-stu-id="c4ecf-171">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Push" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push();" />
      <MemberSignature Language="F#" Value="member this.Push : unit -&gt; unit" Usage="cacheRequest.Push " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4ecf-172"><see cref="T:System.Windows.Automation.CacheRequest" />를 내부 상태 스택에 놓아 현재 스레드의 활성 요청으로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-172">Places the <see cref="T:System.Windows.Automation.CacheRequest" /> on the internal state stack, making it the active request on the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ecf-173">여러 <xref:System.Windows.Automation.CacheRequest> 상태 스택에 개체가 배치 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-173">Multiple <xref:System.Windows.Automation.CacheRequest> objects can be placed onto the state stack.</span></span> <span data-ttu-id="c4ecf-174">캐시 요청은 푸시된; 순서로 스택에서 제거 해야 합니다. 그렇지 않은 경우는 <xref:System.InvalidOperationException> 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-174">Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <xref:System.InvalidOperationException> exception is raised.</span></span>  
  
 <span data-ttu-id="c4ecf-175">사용 하는 것이 좋습니다는 캐시 요청을 중첩 하는 경우가 아니면 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 스택에 요청이 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-175">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="c4ecf-176">사용할 수 있는 원인은 <xref:System.Windows.Automation.CacheRequest.Activate%2A> 내에서 `using` 블록 (`Using` Visual Basic의), 되도록 예외가 발생 하더라도 요청이 스택에서 팝 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-176">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ecf-177">다음 예제에서는 활성화 하는 방법에 <xref:System.Windows.Automation.CacheRequest> 를 사용 하 여 <xref:System.Windows.Automation.CacheRequest.Push%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-177">The following example shows how to activate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="c4ecf-178">UI 자동화 클라이언트의 캐싱</span><span class="sxs-lookup"><span data-stu-id="c4ecf-178">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="c4ecf-179">UI 자동화의 캐싱 사용</span><span class="sxs-lookup"><span data-stu-id="c4ecf-179">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TreeFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Condition TreeFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Condition TreeFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeFilter As Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Condition ^ TreeFilter { System::Windows::Automation::Condition ^ get(); void set(System::Windows::Automation::Condition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TreeFilter : System.Windows.Automation.Condition with get, set" Usage="System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4ecf-180">캐싱 시 사용할 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소 트리의 뷰를 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-180">Gets or sets a value specifying the view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree to use when caching.</span></span></summary>
        <value><span data-ttu-id="c4ecf-181">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소 트리 뷰입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-181">The view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree.</span></span> <span data-ttu-id="c4ecf-182">기본 보기는 <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-182">The default view is <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ecf-183">뷰에 대 한 자세한 내용은 합니다 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소 트리를 참조 하세요 [UI 자동화 트리 개요](~/docs/framework/ui-automation/ui-automation-tree-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-183">For additional information on views of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree, see [UI Automation Tree Overview](~/docs/framework/ui-automation/ui-automation-tree-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ecf-184">다음 예에서 <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> 로 설정 된 <xref:System.Windows.Automation.Automation.RawViewCondition> 콘텐츠 뷰 또는 컨트롤 뷰 부분에 있는지에 관계 없이 모든 요소에 캐시가 수행 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-184">In the following example, <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> is set to <xref:System.Windows.Automation.Automation.RawViewCondition> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="c4ecf-185">UI 자동화 클라이언트의 캐싱</span><span class="sxs-lookup"><span data-stu-id="c4ecf-185">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="c4ecf-186">UI 자동화의 캐싱 사용</span><span class="sxs-lookup"><span data-stu-id="c4ecf-186">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TreeScope">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.TreeScope TreeScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.TreeScope TreeScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeScope As TreeScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::TreeScope TreeScope { System::Windows::Automation::TreeScope get(); void set(System::Windows::Automation::TreeScope value); };" />
      <MemberSignature Language="F#" Value="member this.TreeScope : System.Windows.Automation.TreeScope with get, set" Usage="System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4ecf-187">하위 트리의 루트만 캐시할지 아니면 해당 자식이나 하위 항목도 캐시할지를 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-187">Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</span></span></summary>
        <value><span data-ttu-id="c4ecf-188"><see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" /> 또는 <see cref="F:System.Windows.Automation.TreeScope.Subtree" /> 중 하나 이상입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-188">One or more of <see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" />, or <see cref="F:System.Windows.Automation.TreeScope.Subtree" />.</span></span> <span data-ttu-id="c4ecf-189">기본값은 <see cref="F:System.Windows.Automation.TreeScope.Element" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-189">The default value is <see cref="F:System.Windows.Automation.TreeScope.Element" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4ecf-190">캐싱의 범위 개체를 기준으로 되 가져올 때 개체와 관계 없이 <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> 또는 <xref:System.Windows.Automation.AutomationElement.FindAll%2A> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-190">The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> or <xref:System.Windows.Automation.AutomationElement.FindAll%2A> is called.</span></span> <span data-ttu-id="c4ecf-191">예제를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-191">See the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4ecf-192">하는 동안 부모 창 요소에서 다음 예제에서는 목록 상자 요소를 가져옵니다을 <xref:System.Windows.Automation.CacheRequest> 활성 및 <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> 는 <xref:System.Windows.Automation.TreeScope.Children>합니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-192">In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> is <xref:System.Windows.Automation.TreeScope.Children>.</span></span> <span data-ttu-id="c4ecf-193">자식 요소 (즉, 목록 항목)의 지정된 된 속성은 캐시에 저장 되며에서 검색할 수 있습니다는 <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> 목록 상자입니다.</span><span class="sxs-lookup"><span data-stu-id="c4ecf-193">The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> of the list box.</span></span>  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4ecf-194">속성을 <see cref="F:System.Windows.Automation.TreeScope.Parent" /> 또는 <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />로 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="c4ecf-194">An attempt was made to set the property to <see cref="F:System.Windows.Automation.TreeScope.Parent" /> or <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/94c15031-4975-43cc-bcd5-c9439ed21c9c"><span data-ttu-id="c4ecf-195">UI 자동화 클라이언트의 캐싱</span><span class="sxs-lookup"><span data-stu-id="c4ecf-195">Caching in UI Automation Clients</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf"><span data-ttu-id="c4ecf-196">UI 자동화의 캐싱 사용</span><span class="sxs-lookup"><span data-stu-id="c4ecf-196">Use Caching in UI Automation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>