<Type Name="TransformPattern+TransformPatternInformation" FullName="System.Windows.Automation.TransformPattern+TransformPatternInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0edb1e0a8f4397a01b9ade787869128ef143875" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51913176" /></Metadata><TypeSignature Language="C#" Value="public struct TransformPattern.TransformPatternInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit TransformPattern/TransformPatternInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.TransformPattern.TransformPatternInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure TransformPattern.TransformPatternInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class TransformPattern::TransformPatternInformation" />
  <TypeSignature Language="F#" Value="type TransformPattern.TransformPatternInformation = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>해당 <see cref="T:System.Windows.Automation.TransformPattern" /> 또는 <see cref="P:System.Windows.Automation.TransformPattern.Current" /> 접근자를 사용하여 <see cref="P:System.Windows.Automation.TransformPattern.Cached" /> 개체의 속성 값에 액세스할 수 있습니다.</summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">UI 자동화 컨트롤 패턴 개요</related>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">클라이언트용 UI 자동화 컨트롤 패턴</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf">UI 자동화의 캐싱 사용</related>
  </Docs>
  <Members>
    <Member MemberName="CanMove">
      <MemberSignature Language="C#" Value="public bool CanMove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMove : bool" Usage="System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소를 이동할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
        <value>요소를 이동할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체 이동, 크기를 조정 하거나 결과 화면 위치가 컨테이너의 및 키보드 또는 마우스에 액세스할 수 없도록 좌표 완전히 것 회전할 수 없습니다. 예를 들어, 최상위 창이 화면에서 완전히 벗어나거나 이동할 때 또는 자식 개체의 컨테이너의 뷰포트 경계 외부에 이동 됩니다. 이러한 경우 개체는 컨테이너 경계 내에 있도록 재정의 위쪽 또는 왼쪽 좌표를 사용 하 여 최대한 요청 된 화면 좌표를 가깝게 배치 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Automation.TransformPattern> 컨트롤 패턴에서 가져온를 <xref:System.Windows.Automation.AutomationElement> 을 사용 하 여 이동할는 <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIATransformPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#101)]
 [!code-vb[UIATransformPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#101)]  
[!code-csharp[UIATransformPattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#103)]
[!code-vb[UIATransformPattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResize">
      <MemberSignature Language="C#" Value="public bool CanResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanResize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResize : bool" Usage="System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소의 크기를 조정할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
        <value>요소의 크기를 조정할 수 있으면 <see langword="true" />이고, 조정할 수 없으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체 이동, 크기를 조정 하거나 결과 화면 위치가 컨테이너의 및 키보드 또는 마우스에 액세스할 수 없도록 좌표 완전히 것 회전할 수 없습니다. 예를 들어, 최상위 창이 화면에서 완전히 벗어나거나 이동할 때 또는 자식 개체의 컨테이너의 뷰포트 경계 외부에 이동 됩니다. 이러한 경우 개체는 컨테이너 경계 내에 있도록 재정의 위쪽 또는 왼쪽 좌표를 사용 하 여 최대한 요청 된 화면 좌표를 가깝게 배치 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Automation.TransformPattern> 컨트롤 패턴에서 가져온는 <xref:System.Windows.Automation.AutomationElement> 을 사용 하 여 크기를 조정 하려면는 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIATransformPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#101)]
 [!code-vb[UIATransformPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#101)]  
[!code-csharp[UIATransformPattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#104)]
[!code-vb[UIATransformPattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRotate">
      <MemberSignature Language="C#" Value="public bool CanRotate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRotate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRotate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRotate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRotate : bool" Usage="System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 요소를 회전할 수 있는지 여부를 지정하는 값을 가져옵니다.</summary>
        <value>요소를 회전할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체 이동, 크기를 조정 하거나 결과 화면 위치가 컨테이너의 및 키보드 또는 마우스에 액세스할 수 없도록 좌표 완전히 것 회전할 수 없습니다. 예를 들어, 최상위 창이 화면에서 완전히 벗어나거나 이동할 때 또는 자식 개체의 컨테이너의 뷰포트 경계 외부에 이동 됩니다. 이러한 경우 개체는 컨테이너 경계 내에 있도록 재정의 위쪽 또는 왼쪽 좌표를 사용 하 여 최대한 요청 된 화면 좌표를 가깝게 배치 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Automation.TransformPattern> 컨트롤 패턴에서 가져온를 <xref:System.Windows.Automation.AutomationElement> 을 회전을 사용 하 여는 <xref:System.Windows.Automation.AutomationElement>합니다.  
  
 [!code-csharp[UIATransformPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#101)]
 [!code-vb[UIATransformPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#101)]  
[!code-csharp[UIATransformPattern_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#102)]
[!code-vb[UIATransformPattern_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>