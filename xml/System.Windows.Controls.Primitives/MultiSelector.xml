<Type Name="MultiSelector" FullName="System.Windows.Controls.Primitives.MultiSelector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c4fd2a2fa37f8fdc138f93991ea5bd2bd1ecfe0" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55330264" /></Metadata><TypeSignature Language="C#" Value="public abstract class MultiSelector : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MultiSelector extends System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.MultiSelector" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MultiSelector&#xA;Inherits Selector" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiSelector abstract : System::Windows::Controls::Primitives::Selector" />
  <TypeSignature Language="F#" Value="type MultiSelector = class&#xA;    inherit Selector" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>여러 개의 항목을 선택할 수 있도록 하는 컨트롤에 대한 추상 클래스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클래스를 파생 하는 경우는 <xref:System.Windows.Controls.Primitives.MultiSelector> 클래스를 설정 합니다 <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> 속성을 `true` 컨트롤에서 다중 선택을 허용 하 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MultiSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MultiSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.Primitives.MultiSelector" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Primitives.MultiSelector> 추상 클래스 이며 직접 인스턴스화할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdateSelectedItems">
      <MemberSignature Language="C#" Value="protected void BeginUpdateSelectedItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BeginUpdateSelectedItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BeginUpdateSelectedItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BeginUpdateSelectedItems();" />
      <MemberSignature Language="F#" Value="member this.BeginUpdateSelectedItems : unit -&gt; unit" Usage="multiSelector.BeginUpdateSelectedItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>새 선택 트랜잭션을 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> 메서드 집합 <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> 에 `true`입니다. 합니다 <xref:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems%2A> 메서드 집합 <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> 에 `false`입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> 에서 파생 된 클래스에서 메서드가 <xref:System.Windows.Controls.Primitives.MultiSelector>합니다.  
  
 [!code-csharp[System.Windows.Controls.MultiSelectorEx#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Controls.MultiSelectorEx/CS/MyMultiSelector.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 메서드가 호출될 때 <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" />가 <see langword="true" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CanSelectMultipleItems">
      <MemberSignature Language="C#" Value="protected bool CanSelectMultipleItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelectMultipleItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems" />
      <MemberSignature Language="VB.NET" Value="Protected Property CanSelectMultipleItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool CanSelectMultipleItems { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanSelectMultipleItems : bool with get, set" Usage="System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.Primitives.MultiSelector" />에서 여러 항목을 동시에 선택할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Controls.Primitives.MultiSelector" />에서 한 번에 여러 개의 항목을 선택할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 된 <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> 속성을 `true` 해당 클래스에 대 한 다중 선택을 허용 하는 파생된 클래스에서.  
  
   
  
## Examples  
 다음 코드 예제에서는 파생된 클래스에서이 속성을 설정 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Windows.Controls.MultiSelectorEx#1](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Controls.MultiSelectorEx/CS/MyMultiSelector.xaml.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdateSelectedItems">
      <MemberSignature Language="C#" Value="protected void EndUpdateSelectedItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndUpdateSelectedItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndUpdateSelectedItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndUpdateSelectedItems();" />
      <MemberSignature Language="F#" Value="member this.EndUpdateSelectedItems : unit -&gt; unit" Usage="multiSelector.EndUpdateSelectedItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>선택한 항목이 <see cref="T:System.Windows.Controls.Primitives.MultiSelector" />에 커밋된 경우</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 설정 <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> 하 `false` 업데이트는 <xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A> 컬렉션입니다.  
  
 합니다 <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> 메서드 집합 <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> 에 `true`입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems%2A> 에서 파생 된 클래스에서 메서드가 <xref:System.Windows.Controls.Primitives.MultiSelector>합니다.  
  
 [!code-csharp[System.Windows.Controls.MultiSelectorEx#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Controls.MultiSelectorEx/CS/MyMultiSelector.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 메서드가 호출될 때 <see cref="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" />가 <see langword="false" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatingSelectedItems">
      <MemberSignature Language="C#" Value="protected bool IsUpdatingSelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUpdatingSelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsUpdatingSelectedItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsUpdatingSelectedItems { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUpdatingSelectedItems : bool" Usage="System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.Primitives.MultiSelector" />가 현재 <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> 컬렉션에 대해 대량 업데이트를 수행하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Controls.Primitives.MultiSelector" />가 현재 <see cref="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" /> 컬렉션에 대해 대량 업데이트를 수행 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Controls.Primitives.MultiSelector.BeginUpdateSelectedItems%2A> 메서드 집합 <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> 에 `true`입니다. 합니다 <xref:System.Windows.Controls.Primitives.MultiSelector.EndUpdateSelectedItems%2A> 메서드 집합 <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> 에 `false`입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.Primitives.MultiSelector.IsUpdatingSelectedItems%2A> 에서 파생 된 클래스의 속성에서에서 <xref:System.Windows.Controls.Primitives.MultiSelector>합니다.  
  
 [!code-csharp[System.Windows.Controls.MultiSelectorEx#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Controls.MultiSelectorEx/CS/MyMultiSelector.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="multiSelector.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.Primitives.MultiSelector" />의 모든 항목을 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우에만이 메서드를 사용할 수 있습니다 <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> 는 `true`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems" />가 <see langword="false" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Collections.IList SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MultiSelector.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ SelectedItems { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItems : System.Collections.IList" Usage="System.Windows.Controls.Primitives.MultiSelector.SelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.Primitives.MultiSelector" />에서 선택된 항목을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Controls.Primitives.MultiSelector" />에서 선택된 항목입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> 됩니다 `false`, 둘 이상의 항목을 추가할 수 없습니다는 <xref:System.Windows.Controls.Primitives.MultiSelector.SelectedItems%2A> 컬렉션입니다. 이렇게 하려고 하면 예외가 발생 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnselectAll">
      <MemberSignature Language="C#" Value="public void UnselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MultiSelector.UnselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnselectAll();" />
      <MemberSignature Language="F#" Value="member this.UnselectAll : unit -&gt; unit" Usage="multiSelector.UnselectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.Primitives.MultiSelector" />의 모든 항목을 선택 취소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여부에 관계 없이이 메서드를 사용할 수 있습니다 <xref:System.Windows.Controls.Primitives.MultiSelector.CanSelectMultipleItems%2A> 됩니다 `true` 또는 `false`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>