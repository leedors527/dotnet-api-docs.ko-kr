<Type Name="AlternationConverter" FullName="System.Windows.Controls.AlternationConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7737fd83f829e820b07b5e2112745ba09b69ed26" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55402203" /></Metadata><TypeSignature Language="C#" Value="public class AlternationConverter : System.Windows.Data.IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AlternationConverter extends System.Object implements class System.Windows.Data.IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.AlternationConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class AlternationConverter&#xA;Implements IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class AlternationConverter : System::Windows::Data::IValueConverter" />
  <TypeSignature Language="F#" Value="type AlternationConverter = class&#xA;    interface IValueConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Data.IValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Values")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>정수를 개체 목록에 대한 인덱스로 적용하여 정수와 개체를 서로 변환합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Windows.Controls.AlternationConverter> 바인딩할 속성 값을 대체 합니다. 예를 들어 원하는 항목을 <xref:System.Windows.Controls.ListBox> 교대로 반복 되는 파란색 및 연한 파란색 배경을 하려면 다음을 수행 하면:  
  
-   만들기는 <xref:System.Windows.Controls.AlternationConverter> 파란색 추가한 <xref:System.Windows.Media.SolidColorBrush> 밝은 파란색 <xref:System.Windows.Media.SolidColorBrush> 에 해당 <xref:System.Windows.Controls.AlternationConverter.Values%2A> 속성.  
  
-   에 <xref:System.Windows.Style> 에 대 한 <xref:System.Windows.Controls.ListBoxItem>, 바인딩를 <xref:System.Windows.Controls.Control.Background%2A> 속성을 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> 할당 하기 위해 만든 변환기를 <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=nameWithType> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.ListBox> 2를 사용 하 여 <xref:System.Windows.Controls.AlternationConverter> 대체 하는 개체를 <xref:System.Windows.Controls.Control.Background%2A> 및 <xref:System.Windows.Controls.Control.FontStyle%2A> 항목의 합니다.  
  
 [!code-xaml[AlternationIndexSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlternationConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AlternationConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.AlternationConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object o, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (o As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Convert(System::Object ^ o, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="alternationConverter.Convert (o, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="o"><see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 속성의 개체를 찾는 데 사용할 정수입니다.</param>
        <param name="targetType">바인딩 대상 속성의 형식입니다.</param>
        <param name="parameter">사용할 변환기 매개 변수입니다.</param>
        <param name="culture">변환기에서 사용할 문화권입니다.</param>
        <summary>정수를 <see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 목록의 개체로 변환합니다.</summary>
        <returns><see cref="P:System.Windows.Controls.AlternationConverter.Values" />의 항목 수를 법으로 하여 <paramref name="o" /> 위치에 있는 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object o, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (o As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertBack(System::Object ^ o, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="alternationConverter.ConvertBack (o, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="o"><see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 속성에서 찾을 개체입니다.</param>
        <param name="targetType">바인딩 대상 속성의 형식입니다.</param>
        <param name="parameter">사용할 변환기 매개 변수입니다.</param>
        <param name="culture">변환기에서 사용할 문화권입니다.</param>
        <summary><see cref="P:System.Windows.Controls.AlternationConverter.Values" /> 목록의 개체를 정수로 변환합니다.</summary>
        <returns>o가 <see cref="P:System.Windows.Controls.AlternationConverter.Values" />에 있으면 <paramref name="o" />의 인덱스이고, o가 <see cref="P:System.Windows.Controls.AlternationConverter.Values" />에 있지 않으면 –1입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.IList Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.AlternationConverter.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Values { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.IList" Usage="System.Windows.Controls.AlternationConverter.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.AlternationConverter" /> 메서드에 정수를 전달하면 <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />가 반환하는 개체 목록을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Controls.AlternationConverter" /> 메서드에 정수를 전달하면 <see cref="M:System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />가 반환하는 개체 목록입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 경우는 <xref:System.Windows.Controls.AlternationConverter> 바인딩할 속성 값을 교대로 반복 되는 <xref:System.Windows.Controls.AlternationConverter.Values%2A> 속성에 할당 된 개체를 포함 하는 속성입니다.  예를 들어 원하는 항목을 <xref:System.Windows.Controls.ListBox> 파란색 파란색 및 연한 파란색 배경을 교대로 반복 되는에 추가한 <xref:System.Windows.Media.SolidColorBrush> 밝은 파란색 <xref:System.Windows.Media.SolidColorBrush> 를 <xref:System.Windows.Controls.AlternationConverter.Values%2A>.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.ListBox> 2를 사용 하 여 <xref:System.Windows.Controls.AlternationConverter> 대체 하는 개체를 <xref:System.Windows.Controls.Control.Background%2A> 및 <xref:System.Windows.Controls.Control.FontStyle%2A> 항목의 합니다.  
  
 [!code-xaml[AlternationIndexSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>