<Type Name="Calendar" FullName="System.Windows.Controls.Calendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5bc3befb36cf8a70774c92b423bd17253d6a8bc9" /><Meta Name="ms.sourcegitcommit" Value="22744e2f9d07a51900a968efffd9e390117d64a1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/03/2019" /><Meta Name="ms.locfileid" Value="55671241" /></Metadata><TypeSignature Language="C#" Value="public class Calendar : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Calendar extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Calendar" />
  <TypeSignature Language="VB.NET" Value="Public Class Calendar&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class Calendar : System::Windows::Controls::Control" />
  <TypeSignature Language="F#" Value="type Calendar = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Root", Type=typeof(System.Windows.Controls.Panel))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_CalendarItem", Type=typeof(System.Windows.Controls.Primitives.CalendarItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사용자가 시각적 일정 표시를 사용하여 날짜를 선택할 수 있는 컨트롤을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Controls.Calendar> 자체적으로 또는 드롭다운 목록 중 컨트롤을 사용할 수는 <xref:System.Windows.Controls.DatePicker> 제어 합니다. 자세한 내용은 <xref:System.Windows.Controls.DatePicker>을 참조하세요.  
  
> [!NOTE]
>  <xref:System.Windows.Controls.Calendar> Gregorian 달력만 지원 합니다.  
  
 다음 표에서 일반적으로 연결 된 작업에 대 한 정보는 <xref:System.Windows.Controls.Calendar>합니다.  
  
|작업|구현|  
|----------|--------------------|  
|가 <xref:System.Windows.Controls.Calendar> 월간, 연간 또는 10 년을 표시 합니다.|설정 된 <xref:System.Windows.Controls.Calendar.DisplayMode%2A> 월, 연도 또는 10 년 동안에는 속성입니다.|  
|날짜를 선택할 수 있는지 여부, 날짜 범위 또는 여러 날짜 범위를 지정 합니다.|사용 된 <xref:System.Windows.Controls.Calendar.SelectionMode%2A>합니다.|  
|날짜를 지정 하는 선택할 수 없습니다.|<xref:System.Windows.Controls.Calendar.BlackoutDates%2A> 속성을 사용합니다.|  
|날짜 범위를 지정 하는 <xref:System.Windows.Controls.Calendar> 표시 됩니다.|사용 된 <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> 고 <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> 속성입니다.|  
|현재 날짜는 강조 표시 여부를 지정 합니다.|<xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A> 속성을 사용합니다. 기본적으로 <xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A> 는 `true`합니다.|  
|크기를 변경 합니다 <xref:System.Windows.Controls.Calendar>합니다.|사용 하 여는 <xref:System.Windows.Controls.Viewbox> 을 가져오거나 설정 합니다 <xref:System.Windows.FrameworkElement.LayoutTransform%2A> 속성을는 <xref:System.Windows.Media.ScaleTransform>합니다.  설정한 경우 합니다 <xref:System.Windows.FrameworkElement.Width%2A> 및 <xref:System.Windows.FrameworkElement.Height%2A> 의 속성을 <xref:System.Windows.Controls.Calendar>, 실제 달력 해당 크기를 변경 되지 않습니다.|  
  
 <xref:System.Windows.Controls.Calendar> 컨트롤은 마우스 또는 키보드를 사용 하 여 기본 탐색을 제공 합니다. 다음 표에서 키보드 탐색을 보여 줍니다.  
  
|키 조합|<xref:System.Windows.Controls.Calendar.DisplayMode%2A>|작업|  
|---------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|------------|  
|화살표|<xref:System.Windows.Controls.CalendarMode.Month>|변경 된 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 속성 경우는 <xref:System.Windows.Controls.Calendar.SelectionMode%2A> 속성으로 설정 되지 않은 <xref:System.Windows.Controls.CalendarSelectionMode.None>합니다.|  
|화살표|<xref:System.Windows.Controls.CalendarMode.Year>|월을 변경 합니다 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 속성입니다.  <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 변경 되지 않습니다.|  
|화살표|<xref:System.Windows.Controls.CalendarMode.Decade>|연도 변경 합니다 <xref:System.Windows.Controls.Calendar.DisplayDate%2A>합니다.  <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 변경 되지 않습니다.|  
|SHIFT + 화살표|<xref:System.Windows.Controls.CalendarMode.Month>|하는 경우 <xref:System.Windows.Controls.Calendar.SelectionMode%2A> 로 설정 되어 있지 <xref:System.Windows.Controls.CalendarSelectionMode.SingleDate> 또는 <xref:System.Windows.Controls.CalendarSelectionMode.None>, 선택한 날짜 범위를 확장 합니다.|  
|홈|<xref:System.Windows.Controls.CalendarMode.Month>|변경 된 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 현재 달의 첫째 날에 있습니다.|  
|홈|<xref:System.Windows.Controls.CalendarMode.Year>|월을 변경 합니다 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 연도의 첫 번째 월입니다. <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 변경 되지 않습니다.|  
|홈|<xref:System.Windows.Controls.CalendarMode.Decade>|연도 변경 합니다 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 지난 10 년간의 첫 해에 있습니다. <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 변경 되지 않습니다.|  
|End |<xref:System.Windows.Controls.CalendarMode.Month>|변경 된 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 현재 달의 마지막 날입니다.|  
|End |<xref:System.Windows.Controls.CalendarMode.Year>|월을 변경 합니다 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 연도의 지난 달에 있습니다. <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 변경 되지 않습니다.|  
|End |<xref:System.Windows.Controls.CalendarMode.Decade>|연도 변경 합니다 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 지난 10 년간의 마지막 연도입니다. <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 변경 되지 않습니다.|  
|Ctrl+위쪽 화살표|임의의 값|다음으로 전환 큰 <xref:System.Windows.Controls.Calendar.DisplayMode%2A>입니다. 하는 경우 <xref:System.Windows.Controls.Calendar.DisplayMode%2A> 이미 <xref:System.Windows.Controls.CalendarMode.Decade>, 작업이 없습니다.|  
|CTRL+DOWN ARROW|임의의 값|다음으로 전환 작은 <xref:System.Windows.Controls.Calendar.DisplayMode%2A>합니다. 하는 경우 <xref:System.Windows.Controls.Calendar.DisplayMode%2A> 이미 <xref:System.Windows.Controls.CalendarMode.Month>, 작업이 없습니다.|  
|스페이스바 또는 ENTER|<xref:System.Windows.Controls.CalendarMode.Year> 또는 <xref:System.Windows.Controls.CalendarMode.Decade>|스위치 <xref:System.Windows.Controls.Calendar.DisplayMode%2A> 에 <xref:System.Windows.Controls.CalendarMode.Month> 또는 <xref:System.Windows.Controls.CalendarMode.Year> 포커스가 있는 항목으로 표시 합니다.|  
  
## <a name="customizing-the-calendar-control"></a>달력 컨트롤을 사용자 지정  
 여러 동일한 속성 설정에 적용할 <xref:System.Windows.Controls.Calendar> 컨트롤을 사용 하 여는 <xref:System.Windows.FrameworkElement.Style%2A> 속성입니다. 기본값을 수정할 수 있습니다 <xref:System.Windows.Controls.ControlTemplate> 고유한 모양을 제어할 수 있습니다. 만들기에 대 한 자세한 내용은 <xref:System.Windows.Controls.ControlTemplate>를 참조 하세요 [ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)합니다.  부분과 관련 된 상태를 확인 하려면 합니다 <xref:System.Windows.Controls.Calendar>를 참조 하세요 [Calendar 스타일 및 템플릿](~/docs/framework/wpf/controls/calendar-styles-and-templates.md)합니다.  
  
 이 컨트롤에 대 한 종속성 속성은 컨트롤의 기본 스타일으로 설정할 수 있습니다.  속성이 설정 된 기본 스타일을 컨트롤 애플리케이션에 표시 되 면 속성 값이 기본값에서 변경 될 수 있습니다. 기본 스타일은 애플리케이션 실행 중일 때 사용 되는 바탕 화면 테마에서 결정 됩니다.  자세한 내용은 [기본 WPF 테마](https://go.microsoft.com/fwlink/?LinkID=158252)합니다.  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
<a name="xamlObjectElementUsage_Calendar"></a>   
## <a name="xaml-object-element-usage"></a>XAML 개체 요소 사용  
  
```  
<Calendar .../>  
```  
  
## Examples  
 다음 그림에서는 두 개의 <xref:System.Windows.Controls.Calendar> 보여 개 및 없는 제어 합니다.  
  
 ![달력 컨트롤](~/add/media/ndp-calendarcontrols.png "Calendar 컨트롤")  
달력 컨트롤  
  
 다음 코드와 XAML 페이지를 만듭니다. 두 개의 <xref:System.Windows.Controls.Calendar> 이전 그림과 유사 하 게 되는 컨트롤입니다.  
  
 [!code-csharp[CalendarSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[CalendarSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[CalendarSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DatePicker" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Calendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Calendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.Calendar" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackoutDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.BlackoutDates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlackoutDates As CalendarBlackoutDatesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarBlackoutDatesCollection ^ BlackoutDates { System::Windows::Controls::CalendarBlackoutDatesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BlackoutDates : System.Windows.Controls.CalendarBlackoutDatesCollection" Usage="System.Windows.Controls.Calendar.BlackoutDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarBlackoutDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>선택이 가능하지 않은 것으로 표시된 날짜 컬렉션을 가져옵니다.</summary>
        <value>선택할 수 없는 날짜 컬렉션입니다. 기본값은 빈 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 컬렉션에 있는 날짜에 표시 됩니다 회색 및 교차 아웃 달력.  
  
 사용할 수 있도록 모두 과거 날짜 하지 선택할 수 있는는 <xref:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast%2A> 이 속성에 의해 반환 된 컬렉션에서 제공 하는 메서드.  
  
<a name="xamlPropertyElementUsage_BlackoutDates"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.BlackoutDates>  
    oneOrMoreCalendarDateRanges  
  </object.BlackoutDates>  
</object>  
```  
  
<a name="xamlValues_BlackoutDates"></a>   
## <a name="xaml-values"></a>XAML 값  
 *oneOrMoreCalendarDateRanges*  
 형식의 개체 요소를 하나 이상의 <xref:System.Windows.Controls.CalendarDateRange>합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.Calendar> 선택할 수 없는 일부 날짜 포함 합니다.  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 앞의 예제에서는 다음 그림과 유사한 출력을 생성합니다.  
  
 ![선택할 수 없는 날짜가 있는 달력입니다. ] (~/add/media/ndp-calendarblackout.png "달력 날짜를 선택할 수 없습니다.")  
달력 날짜를 선택할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarButtonStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarButtonStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.CalendarButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarButtonStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarButtonStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.Calendar.CalendarButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 내부 <see cref="T:System.Windows.Style" /> 개체와 연결된 <see cref="T:System.Windows.Controls.Primitives.CalendarButton" />을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> 개체의 현재 스타일입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarButtonStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object CalendarButtonStyle="{resourceExtension styleResourceKey"/>  
  
```  
  
<a name="xamlValues_CalendarButtonStyle"></a>   
## <a name="xaml-values"></a>XAML 값  
 *resourceExtension*  
 다음 중 하나: `StaticResource` 또는 `DynamicResource`합니다. 자세한 내용은 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)를 참조하세요.  
  
 *styleResourceKey*  
 요청 된 리소스를 식별 하는 키입니다. 키의 기존 리소스에 참조를 <xref:System.Windows.ResourceDictionary>입니다.  
  
<a name="dependencyPropertyInfo_CalendarButtonStyle"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.Calendar.CalendarButtonStyleProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarButtonStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarButtonStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarButtonStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.CalendarButtonStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarButtonStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarButtonStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CalendarButtonStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.CalendarButtonStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarDayButtonStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarDayButtonStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarDayButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarDayButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarDayButtonStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarDayButtonStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.Calendar.CalendarDayButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 내부 <see cref="T:System.Windows.Style" /> 개체와 연결된 <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" />을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> 개체의 현재 스타일입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarDayButtonStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object CalendarDayButtonStyle="{resourceExtension styleResourceKey}"/>  
  
```  
  
<a name="xamlValues_CalendarDayButtonStyle"></a>   
## <a name="xaml-values"></a>XAML 값  
 *resourceExtension*  
 다음 중 하나: `StaticResource` 또는 `DynamicResource`합니다. 자세한 내용은 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)를 참조하세요.  
  
 *styleResourceKey*  
 요청 된 리소스를 식별 하는 키입니다. 키의 기존 리소스에 참조를 <xref:System.Windows.ResourceDictionary>입니다.  
  
<a name="dependencyPropertyInfo_CalendarDayButtonStyle"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarDayButtonStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarDayButtonStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarDayButtonStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarDayButtonStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarDayButtonStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CalendarDayButtonStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarItemStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarItemStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.CalendarItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarItemStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarItemStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarItemStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.Calendar.CalendarItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 내부 <see cref="T:System.Windows.Style" /> 개체와 연결된 <see cref="T:System.Windows.Controls.Primitives.CalendarItem" />을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> 개체의 현재 스타일입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarItemStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object CalendarItemStyle="{resourceExtension styleResourceKey}"/>  
  
```  
  
<a name="xamlValues_CalendarItemStyle"></a>   
## <a name="xaml-values"></a>XAML 값  
 *resourceExtension*  
 다음 중 하나: `StaticResource` 또는 `DynamicResource`합니다. 자세한 내용은 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)를 참조하세요.  
  
 *styleResourceKey*  
 요청 된 리소스를 식별 하는 키입니다. 키의 기존 리소스에 참조를 <xref:System.Windows.ResourceDictionary>입니다.  
  
<a name="dependencyPropertyInfo_CalendarItemStyle"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.Calendar.CalendarItemStyleProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarItemStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarItemStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarItemStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.CalendarItemStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarItemStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarItemStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CalendarItemStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.CalendarItemStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDate">
      <MemberSignature Language="C#" Value="public DateTime DisplayDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DisplayDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayDate" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DisplayDate { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDate : DateTime with get, set" Usage="System.Windows.Controls.Calendar.DisplayDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표시할 날짜를 가져오거나 설정합니다.</summary>
        <value>표시할 날짜입니다. 기본값은 <see cref="P:System.DateTime.Today" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 및 <xref:System.Windows.Controls.Calendar.DisplayMode%2A> 달력에서 표시 하는 내용 및 일정 내에서 포커스가 어떤 속성을 지정 합니다.  사용자가 변경할 수는 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 경우에만 <xref:System.Windows.Controls.Calendar.DisplayMode%2A> 월으로 설정 된 사용자가 변경할 수 있지만 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 달력 연도 및 10 년 모드인 경우.  다음 표에서 모드를 변경 하는 방법을 설명 합니다 <xref:System.Windows.Controls.Calendar.DisplayDate%2A>합니다.  
  
|DisplayMode|작업|  
|-----------------|------------|  
|월|<xref:System.Windows.Controls.Calendar.DisplayDate%2A> 사용자가 다른 달으로 이동할 때 변경 됩니다.|  
|Year|월을 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 사용자가 클릭 하거나 다른 달으로 이동 하는 경우 변경 합니다.|  
|10 년|연도 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 사용자가 클릭 하거나 다른 연도를 탐색 하는 경우 변경 합니다.|  
  
 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 지정 된 날짜의 범위를 벗어난 값이 무시 됩니다 <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> 고 <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> 속성입니다.  
  
<a name="dependencyPropertyInfo_DisplayDate"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.Calendar.DisplayDateProperty>|  
|메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDate"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<Calendar DisplayDate="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDate"></a>   
## <a name="xaml-values"></a>XAML 값  
 *dateTimeString*  
 에 나열 된 형식 중 하나에 있는 날짜를 [DateTime XAML 구문](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md) 항목입니다.  
  
   
  
## Examples  
 다음 코드에서는 설정 된 <xref:System.Windows.Controls.Calendar> 표시할 수 있는 날짜 및 현재 선택 되 고 표시 된 날짜 집합의 특정 범위를 사용 하 여 합니다.  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt; DisplayDateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.CalendarDateChangedEventArgs&gt; DisplayDateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.DisplayDateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DisplayDateChanged As EventHandler(Of CalendarDateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::CalendarDateChangedEventArgs ^&gt; ^ DisplayDateChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayDateChanged : EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt; " Usage="member this.DisplayDateChanged : System.EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> 속성이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트 발생 후 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 해당 새 값이 할당 됩니다.  
  
<a name="xamlAttributeUsage_DisplayDateChanged"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<Calendar DisplayDateChanged="eventhandler"/>  
```  
  
   
  
## Examples  
 다음 이벤트 처리기 업데이트를 <xref:System.Windows.Controls.TextBox> 의 정보로는 <xref:System.Windows.Controls.Calendar.DisplayDateChanged> 이벤트입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Controls.Calendar> 개요.  
  
 [!code-xaml[CalendarSnippets#6](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEnd">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayDateEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDateEnd As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; DisplayDateEnd { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDateEnd : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.Calendar.DisplayDateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>달력에서 사용할 수 있는 날짜 범위의 마지막 날짜를 가져오거나 설정합니다.</summary>
        <value>달력에서 사용할 수 있는 마지막 날짜입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 범위를 제한할 수는 <xref:System.Windows.Controls.Calendar> 설정 하 여는 <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> 및 <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> 속성입니다.  사용자를 스크롤하여 하거나 해당이 범위를 벗어나는 날짜를 선택할 수 없습니다.  설정 하는 경우는 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 속성을 뒤에 오는 날짜 <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A>를 <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> 동일한 값으로 설정 되어 <xref:System.Windows.Controls.Calendar.SelectedDate%2A>입니다.  
  
<a name="dependencyPropertyInfo_DisplayDateEnd"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.Calendar.DisplayDateEndProperty>|  
|메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateEnd"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<Calendar DisplayDateEnd="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateEnd"></a>   
## <a name="xaml-values"></a>XAML 값  
 *dateTimeString*  
 에 나열 된 형식 중 하나에 있는 날짜를 [DateTime XAML 구문](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md) 항목입니다.  
  
   
  
## Examples  
 다음 코드에서는 설정 된 <xref:System.Windows.Controls.Calendar> 표시할 수 있는 날짜 및 현재 선택 되 고 표시 된 날짜 집합의 특정 범위를 사용 하 여 합니다.  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEndProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateEndProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateEndProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayDateEndProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateEndProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateEndProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateEndProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.DisplayDateEndProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayDateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.DisplayDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStart">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayDateStart" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDateStart As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; DisplayDateStart { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDateStart : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.Calendar.DisplayDateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>달력에서 사용할 수 있는 첫 번째 날짜를 가져오거나 설정합니다.</summary>
        <value>달력에서 사용할 수 있는 첫 번째 날짜입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 하 여 달력의 범위를 제한할 수 있습니다 합니다 <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> 고 <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> 속성입니다.  사용자를 스크롤하여 하거나 해당이 범위를 벗어나는 날짜를 선택할 수 없습니다.  설정 하는 경우는 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 속성을 앞에 있는 날짜 <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A>를 <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> 동일한 값으로 설정 되어 <xref:System.Windows.Controls.Calendar.SelectedDate%2A>입니다.  
  
<a name="dependencyPropertyInfo_DisplayDateStart"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.Calendar.DisplayDateStartProperty>|  
|메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateStart"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<Calendar DisplayDateStart="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateStart"></a>   
## <a name="xaml-values"></a>XAML 값  
 *dateTimeString*  
 에 나열 된 형식 중 하나에 있는 날짜를 [DateTime XAML 구문](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md) 항목입니다.  
  
   
  
## Examples  
 다음 코드에서는 설정 된 <xref:System.Windows.Controls.Calendar> 표시할 수 있는 날짜 및 현재 선택 되 고 표시 된 날짜 집합의 특정 범위를 사용 하 여 합니다.  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStartProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateStartProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateStartProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayDateStartProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateStartProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateStartProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateStartProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.DisplayDateStartProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarMode DisplayMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CalendarMode DisplayMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMode As CalendarMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarMode DisplayMode { System::Windows::Controls::CalendarMode get(); void set(System::Windows::Controls::CalendarMode value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMode : System.Windows.Controls.CalendarMode with get, set" Usage="System.Windows.Controls.Calendar.DisplayMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>달력이 월, 연도 또는 10년 단위를 표시하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Controls.Calendar" />가 표시해야 할 시간 길이를 나타내는 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 달력 월, 연도 또는 10 년 이상 표시할 수 있습니다. 다음 표에서 각 모드에 사용자가 탐색 하는 방법을 보여 줍니다.  
  
|DisplayMode|작업|  
|-----------------|------------|  
|월|연도 모드로 이동할 월 머리글을 클릭 합니다.|  
|Year|10 년 동안 모드로 이동할 연도 머리글을 클릭 합니다. 월 모드도 이동 하려면 표시 된 월 중 하나를 클릭 합니다.|  
|10 년|연도 모드로 이동할 표시 년 중 하나를 클릭 합니다.|  
  
<a name="dependencyPropertyInfo_DisplayMode"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.Calendar.DisplayModeProperty>|  
|메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 다음 예제에서는 1 년 및 핸들의 월을 표시 하는 일정 합니다 <xref:System.Windows.Controls.Calendar.DisplayModeChanged> 이벤트 달력 경우 사용자가 한 달 또는 연도에 변경 되지 않습니다 해당 <xref:System.Windows.Controls.Calendar.DisplayMode%2A>합니다.  
  
 [!code-csharp[CalendarSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#4)]
 [!code-vb[CalendarSnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#4)]
 [!code-xaml[CalendarSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#4)]  
  
 [!code-csharp[CalendarSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#5)]
 [!code-vb[CalendarSnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt; DisplayModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.CalendarModeChangedEventArgs&gt; DisplayModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.DisplayModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DisplayModeChanged As EventHandler(Of CalendarModeChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::CalendarModeChangedEventArgs ^&gt; ^ DisplayModeChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanged : EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt; " Usage="member this.DisplayModeChanged : System.EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> 속성이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_DisplayModeChanged"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<Calendar DisplayModeChanged="eventhandler"/>  
```  
  
   
  
## Examples  
 다음 예제에서는 1 년 및 핸들의 월을 표시 하는 일정 합니다 <xref:System.Windows.Controls.Calendar.DisplayModeChanged> 이벤트 달력 경우 사용자가 한 달 또는 연도에 변경 되지 않습니다 해당 <xref:System.Windows.Controls.Calendar.DisplayMode%2A>합니다.  
  
 [!code-csharp[CalendarSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#4)]
 [!code-vb[CalendarSnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#4)]
 [!code-xaml[CalendarSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#4)]  
  
 [!code-csharp[CalendarSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#5)]
 [!code-vb[CalendarSnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.DisplayModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Windows.Controls.Calendar.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>한 주를 시작하는 것으로 간주되는 요일을 가져오거나 설정합니다.</summary>
        <value>한 주의 시작을 나타내는 <see cref="T:System.DayOfWeek" />입니다. 기본값은 현재 문화권에 따라 결정되는 <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_FirstDayOfWeek"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.Calendar.FirstDayOfWeekProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
<a name="xamlAttributeUsage_FirstDayOfWeek"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
 \<Calendar **FirstDayOfWeek**="<xref:System.DayOfWeek>"/>  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Windows.Controls.Calendar.FirstDayOfWeek%2A> 속성을 <xref:System.DayOfWeek.Monday>입니다.  
  
 [!code-xaml[CalendarSnippets#8](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeekProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FirstDayOfWeekProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FirstDayOfWeekProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.FirstDayOfWeekProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FirstDayOfWeekProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FirstDayOfWeekProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FirstDayOfWeekProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.FirstDayOfWeekProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlighted">
      <MemberSignature Language="C#" Value="public bool IsTodayHighlighted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTodayHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.IsTodayHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTodayHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTodayHighlighted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTodayHighlighted : bool with get, set" Usage="System.Windows.Controls.Calendar.IsTodayHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 날짜가 강조 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>현재 날짜가 강조 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsTodayHighlighted"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.Calendar.IsTodayHighlightedProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
<a name="xamlAttributeUsage_IsTodayHighlighted"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<Calendar IsTodayHighlighted="bool"/>  
```  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.Calendar> 현재 날짜가 강조 표시 되지 않습니다.  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTodayHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTodayHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.IsTodayHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTodayHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTodayHighlightedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTodayHighlightedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.IsTodayHighlightedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="calendar.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>새 템플릿이 적용될 때 <see cref="T:System.Windows.Controls.Calendar" /> 컨트롤의 표시 트리를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 애플리케이션 코드 또는 레이아웃 과정 다시 빌드 같은 내부 프로세스를 호출할 때마다 호출 되는 <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="calendar.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[!INCLUDE[silverlight](~/includes/silverlight-md.md)] 자동화 인프라에서 사용할 <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" />를 반환합니다.</summary>
        <returns><see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> 개체에 대한 <see cref="T:System.Windows.Controls.Calendar" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 만듭니다 <xref:System.Windows.Automation.Peers.CalendarAutomationPeer> 컨트롤 인스턴스의 경우 인스턴스 만들어지지 않은; 그렇지는 <xref:System.Windows.Automation.Peers.CalendarAutomationPeer> 이전에 만든 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayDateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayDateChanged (System.Windows.Controls.CalendarDateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayDateChanged(class System.Windows.Controls.CalendarDateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayDateChanged (e As CalendarDateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayDateChanged(System::Windows::Controls::CalendarDateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayDateChanged : System.Windows.Controls.CalendarDateChangedEventArgs -&gt; unit&#xA;override this.OnDisplayDateChanged : System.Windows.Controls.CalendarDateChangedEventArgs -&gt; unit" Usage="calendar.OnDisplayDateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.CalendarDateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary><see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanged (System.Windows.Controls.CalendarModeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanged(class System.Windows.Controls.CalendarModeChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanged (e As CalendarModeChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanged(System::Windows::Controls::CalendarModeChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanged : System.Windows.Controls.CalendarModeChangedEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanged : System.Windows.Controls.CalendarModeChangedEventArgs -&gt; unit" Usage="calendar.OnDisplayModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.CalendarModeChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary><see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="calendar.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>이 컨트롤에 포커스가 있는 동안 사용자가 키를 누르면 발생하는 <see cref="E:System.Windows.UIElement.KeyDown" /> 라우트된 이벤트에 대한 클래스 처리를 제공합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> 재정의 <xref:System.Windows.Controls.Calendar.OnKeyDown%2A> 키보드 탐색을 지 원하는 방법입니다.  자세한 내용은 <xref:System.Windows.Controls.Calendar> 클래스를 참조하세요. 이 구현 합니다 <xref:System.Windows.UIElement.KeyDown> 이벤트를 설정 하 여 처리 합니다 <xref:System.Windows.RoutedEventArgs.Handled%2A> 이벤트 데이터의 속성 `true` 화살표 키를 누르는 것과 같은 키 입력을 탐색 동작을 수행 하는 경우.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, 항상 기본 구현을 호출 하면 <see cref="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> 구현 합니다. 최종 클래스의 런타임 동작을 변경할 수는 클래스 처리기를 사용 하 여 이벤트 처리에서 기본 클래스를 방지 하는 기본 구현을 호출 하지 못했습니다. 기본 구현은 앞 이나 뒤에 특수 한 처리 요구 사항에 따라 호출할 수 있습니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="calendar.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>이 컨트롤에 포커스가 있는 동안 사용자가 키를 놓으면 발생하는 <see cref="E:System.Windows.UIElement.KeyUp" /> 라우트된 이벤트에 대한 클래스 처리를 제공합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> 재정의 <xref:System.Windows.Controls.Calendar.OnKeyDown%2A> 키보드 탐색을 지 원하는 방법입니다.  자세한 내용은 <xref:System.Windows.Controls.Calendar> 클래스를 참조하세요. 이 구현은 처리 상태를 변경 하지 않습니다 (합니다 <xref:System.Windows.RoutedEventArgs.Handled%2A> 속성)의 <xref:System.Windows.UIElement.KeyUp> 이벤트 데이터입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, 항상 기본 구현을 호출 하면 <see cref="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> 구현 합니다. 최종 클래스의 런타임 동작을 변경할 수는 클래스 처리기를 사용 하 여 이벤트 처리에서 기본 클래스를 방지 하는 기본 구현을 호출 하지 못했습니다. 기본 구현은 앞 이나 뒤에 특수 한 처리 요구 사항에 따라 호출할 수 있습니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedDatesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedDatesChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedDatesChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedDatesChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedDatesChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedDatesChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit&#xA;override this.OnSelectedDatesChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit" Usage="calendar.OnSelectedDatesChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary><see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> 라우트된 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤의 <xref:System.Windows.Controls.Calendar.SelectedDatesChanged> 이벤트를 호출 하 여 <xref:System.Windows.UIElement.RaiseEvent%2A>입니다. 자세한 내용은 [라우트된 이벤트 개요](~/docs/framework/wpf/advanced/routed-events-overview.md)합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionModeChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionModeChanged : EventArgs -&gt; unit" Usage="calendar.OnSelectionModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary><see cref="E:System.Windows.Controls.Calendar.SelectionModeChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="SelectedDate">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; SelectedDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; SelectedDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.SelectedDate" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedDate As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; SelectedDate { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedDate : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.Calendar.SelectedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 선택한 날짜를 가져오거나 설정합니다.</summary>
        <value>현재 선택한 날짜입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectedDate"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.Calendar.SelectedDateProperty>|  
|메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 이 속성을 사용 하면 <xref:System.Windows.Controls.Calendar.SelectionMode%2A> 로 설정 된 <xref:System.Windows.Controls.CalendarSelectionMode.SingleDate>합니다. 다른 모드에서이 속성은 항상 첫 번째 날짜 <xref:System.Windows.Controls.Calendar.SelectedDates%2A>합니다.  
  
<a name="xamlAttributeUsage_SelectedDate"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<Calendar SelectedDate="dateTimeString"/>  
```  
  
<a name="xamlValues_SelectedDate"></a>   
## <a name="xaml-values"></a>XAML 값  
 *dateTimeString*  
 에 나열 된 형식 중 하나에 있는 날짜를 [DateTime XAML 구문](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md) 항목입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.Calendar> 특정 범위의 표시 가능한 날짜 및 현재 선택 되 고 표시 된 날짜를 설정 합니다.  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 날짜가 <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> 및 <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />에서 지정된 범위 밖에 있습니다.  
  
또는 
지정된 날짜는 <see cref="P:System.Windows.Controls.Calendar.BlackoutDates" /> 컬렉션에 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Controls.Calendar.SelectionMode" />가 <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" />으로 설정되어 있을 때 <see langword="null" /> 이외의 값으로 설정되어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.SelectedDateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedDateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedDateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.SelectedDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SelectedDatesCollection SelectedDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SelectedDatesCollection SelectedDates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.SelectedDates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedDates As SelectedDatesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SelectedDatesCollection ^ SelectedDates { System::Windows::Controls::SelectedDatesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedDates : System.Windows.Controls.SelectedDatesCollection" Usage="System.Windows.Controls.Calendar.SelectedDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SelectedDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>선택한 날짜의 컬렉션을 가져옵니다.</summary>
        <value>현재 선택한 날짜를 포함하는 <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> 개체입니다. 기본값은 빈 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개별적으로 또는 사용 하 여 범위에서 날짜를 컬렉션에 추가할 수 있습니다는 <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> 메서드. 값에 따라는 <xref:System.Windows.Controls.Calendar.SelectionMode%2A> 속성을 날짜 또는 범위를 컬렉션에 추가 있기 지워집니다. 다음 표에서 어떻게 <xref:System.Windows.Controls.CalendarSelectionMode> 영향을 줍니다는 <xref:System.Windows.Controls.Calendar.SelectedDates%2A> 속성입니다.  
  
|CalendarSelectionMode|설명|  
|---------------------------|-----------------|  
|<xref:System.Windows.Controls.CalendarSelectionMode.None>|선택할 수 없습니다. <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 설정할 수 없습니다 값이 없는 추가할 수 있습니다 및 <xref:System.Windows.Controls.Calendar.SelectedDates%2A>합니다.|  
|<xref:System.Windows.Controls.CalendarSelectionMode.SingleDate>|단일 날짜를 선택할 수 있습니다를 설정 하거나 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 값과 첫 번째 <xref:System.Windows.Controls.Calendar.SelectedDates%2A>입니다. <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> 사용할 수 없습니다.|  
|<xref:System.Windows.Controls.CalendarSelectionMode.SingleRange>|하나의 날짜 범위를 선택할 수 있습니다. 설정 <xref:System.Windows.Controls.Calendar.SelectedDate%2A>, 날짜를 개별적으로 추가 <xref:System.Windows.Controls.Calendar.SelectedDates%2A>를 알거나 <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> 에서 모든 이전 값이 지워집니다 <xref:System.Windows.Controls.Calendar.SelectedDates%2A>합니다.|  
|<xref:System.Windows.Controls.CalendarSelectionMode.MultipleRange>|연속되지 않는 날짜 범위 여러 개를 선택할 수 있습니다. 날짜를 개별적으로 추가 <xref:System.Windows.Controls.Calendar.SelectedDates%2A> 알거나 <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> 지워지지 것입니다. <xref:System.Windows.Controls.Calendar.SelectedDates%2A>합니다. 설정 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 지워집니다 여전히 <xref:System.Windows.Controls.Calendar.SelectedDates%2A>, 하지만 추가 날짜 또는 범위 추가할 수 있습니다. 이미 선택 되어 있고 공용 구조체에 다른 범위 결과 범위와 겹치는 경우 예외가 발생 하지 않습니다는 일부 날짜를 포함 하는 범위를 추가 합니다.|  
  
<a name="xamlPropertyElementUsage_SelectedDates"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.SelectedDates>  
    oneOrMoreDateTimeObjects  
  </object.SelectedDates>  
</object>  
  
```  
  
<a name="xamlValues_SelectedDates"></a>   
## <a name="xaml-values"></a>XAML 값  
 *oneOrMoreDateTimeObjects*  
 하나 이상의 <xref:System.DateTime> 개체 요소입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.Calendar> 선택한 날짜 범위를 여러 개 포함 합니다.  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDatesChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDatesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDatesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.SelectedDatesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedDatesChanged As EventHandler(Of SelectionChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::SelectionChangedEventArgs ^&gt; ^ SelectedDatesChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedDatesChanged : EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; " Usage="member this.SelectedDatesChanged : System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> 속성에서 반환된 컬렉션이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectedDatesChanged"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<Calendar SelectedDatesChanged="eventhandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDatesChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectedDatesChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectedDatesChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.SelectedDatesChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDatesChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectedDatesChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedDatesChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Calendar.SelectedDatesChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> 라우트된 이벤트를 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CalendarSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As CalendarSelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarSelectionMode SelectionMode { System::Windows::Controls::CalendarSelectionMode get(); void set(System::Windows::Controls::CalendarSelectionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionMode : System.Windows.Controls.CalendarSelectionMode with get, set" Usage="System.Windows.Controls.Calendar.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>허용되는 선택 종류를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>현재 선택 모드를 나타내는 값입니다. 기본값은 <see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectionMode"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.Calendar.SelectionModeProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 이 속성에 따라 결정 여부는 <xref:System.Windows.Controls.Calendar> 없습니다 선택, 다양 한 단일 날짜 또는 여러 날짜를 선택 합니다. 선택 모드를 사용 하 여 지정 된 <xref:System.Windows.Controls.CalendarSelectionMode> 열거형입니다.  
  
 이 속성이 변경 되 면 모든 선택한 날짜는 지워집니다.  
  
<a name="xamlAttributeUsage_SelectionMode"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
 \<Calendar **SelectionMode**="<xref:System.Windows.Controls.CalendarSelectionMode>"/>  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.Calendar> 선택한 날짜 범위를 여러 개 포함 합니다.  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; SelectionModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; SelectionModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.SelectionModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionModeChanged As EventHandler(Of EventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;EventArgs ^&gt; ^ SelectionModeChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionModeChanged : EventHandler&lt;EventArgs&gt; " Usage="member this.SelectionModeChanged : System.EventHandler&lt;System.EventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.SelectionMode" />가 변경될 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.SelectionModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.SelectionModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="calendar.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>선택한 날짜를 텍스트로 표현합니다.</summary>
        <returns>선택한 날짜의 텍스트 표현이거나 <see cref="P:System.Windows.Controls.Calendar.SelectedDate" />가 <see langword="null" />인 경우 빈 문자열입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>