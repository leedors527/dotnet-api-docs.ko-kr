<Type Name="ExceptionValidationRule" FullName="System.Windows.Controls.ExceptionValidationRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23b3c696d55e6437db905debb0839a119d528c03" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51913412" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExceptionValidationRule : System.Windows.Controls.ValidationRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExceptionValidationRule extends System.Windows.Controls.ValidationRule" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ExceptionValidationRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExceptionValidationRule&#xA;Inherits ValidationRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionValidationRule sealed : System::Windows::Controls::ValidationRule" />
  <TypeSignature Language="F#" Value="type ExceptionValidationRule = class&#xA;    inherit ValidationRule" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ValidationRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>바인딩 소스 속성을 업데이트하는 동안 발생되는 예외를 확인하는 규칙을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 데이터 바인딩 모델에 연결할 수 있습니다 <xref:System.Windows.Data.Binding.ValidationRules%2A> 사용 하 여를 <xref:System.Windows.Data.Binding> 개체입니다. <xref:System.Windows.Controls.ExceptionValidationRule> 클래스는 바인딩 소스 속성의 업데이트 하는 동안 throw 된 예외에 대 한 확인 하는 기본 제공 규칙. 바인딩 엔진 사용 하 여 이러한 예외를 처리 하는 방법을 지정 하려면 사용자 지정 논리를 제공할 수 있습니다는 <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>합니다. 자세한 내용은 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>을 참조하세요.  
  
 설정 하는 대체 구문은 <xref:System.Windows.Controls.ExceptionValidationRule> 명시적으로 설정 하는 것을 <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> 속성을 `true` 에서 프로그램 <xref:System.Windows.Data.Binding> 또는 <xref:System.Windows.Data.MultiBinding> 개체입니다.  
  
 파생 되는 클래스를 만들어 사용자 지정 규칙을 만들 수 있습니다 <xref:System.Windows.Controls.ValidationRule>합니다. 자세한 내용 및 데이터 유효성 검사의 자세한 내용은 참조 하세요 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.  
  
   
  
## Examples  
 합니다 <xref:System.Windows.Data.Binding.ValidationRules%2A> 속성의 컬렉션을 가져와서 <xref:System.Windows.Controls.ValidationRule> 개체입니다. 다음 예제에서는 <xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=nameWithType> 바인딩 대상 속성 및 `StartPrice` (정수) 바인딩 소스 속성으로. 사용자가 정수로 변환할 수 없는 값을 입력 하는 경우 예외가 발생을 유발 하는 <xref:System.Windows.Controls.ExceptionValidationRule> 대상 값을 무효화 합니다.  
  
 [!code-xaml[DataBindingLab#DefaultValidation](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#defaultvalidation)]  
  
 유효성 검사 오류가 있으면 기본적으로는 <xref:System.Windows.Controls.TextBox> 빨간색 테두리가 나타납니다. 필요에 따라 사용자 지정을 작성할 수 있습니다 <xref:System.Windows.Controls.Validation.ErrorTemplate%2A> 유효성 검사 오류가 있을 때 사용자에 게 하고자 하는 방법을 지정 합니다.  
  
 데이터 유효성 검사에 대 한 자세한 내용은 참조 하세요. [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.  
  
 전체 샘플을 참조 하세요 [데이터 바인딩 데모](https://go.microsoft.com/fwlink/?LinkID=163703)합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ValidationRule" />
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExceptionValidationRule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ExceptionValidationRule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExceptionValidationRule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj * System.Globalization.CultureInfo -&gt; System.Windows.Controls.ValidationResult" Usage="exceptionValidationRule.Validate (value, cultureInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">검사할 바인딩 대상 값입니다.</param>
        <param name="cultureInfo">이 규칙에 사용할 문화권입니다.</param>
        <summary>값에 대한 유효성 검사를 수행합니다.</summary>
        <returns><see cref="T:System.Windows.Controls.ValidationResult" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
  </Members>
</Type>