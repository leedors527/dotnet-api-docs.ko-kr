<Type Name="GridViewColumn" FullName="System.Windows.Controls.GridViewColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8fda264cad002720d80e4b5efe9fd62cda7d8e7a" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55364389" /></Metadata><TypeSignature Language="C#" Value="public class GridViewColumn : System.Windows.DependencyObject, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GridViewColumn extends System.Windows.DependencyObject implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.GridViewColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class GridViewColumn&#xA;Inherits DependencyObject&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class GridViewColumn : System::Windows::DependencyObject, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type GridViewColumn = class&#xA;    inherit DependencyObject&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Header")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="HeaderContainerStyle", StyleTargetType=typeof(System.Windows.Controls.GridViewColumnHeader))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>데이터를 표시하는 열을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Controls.GridViewColumn> 에서 사용 되는 <xref:System.Windows.Controls.GridView> 데이터의 열을 표시 하려면 보기 모드입니다. 합니다 <xref:System.Windows.Controls.ListView> 구현 하는 <xref:System.Windows.Controls.GridView> 보기 모드 열에 대 한 데이터를 제공 합니다. 데이터 바인딩을 사용 하 여 데이터를 지정 하는 <xref:System.Windows.Controls.GridViewColumn>합니다.  
  
 사용할 수는 <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A> 열에 표시할 데이터를 정의 합니다. 일부로 데이터를 정의할 수도 있습니다는 <xref:System.Windows.DataTemplate> 으로 지정 된는 <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A> 속성입니다. 서로 다른 셀 서로 다를 경우 <xref:System.Windows.DataTemplate> 개체를 <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A> 속성을 지정할 수는 <xref:System.Windows.Controls.DataTemplateSelector>합니다. 다음 목록은 여기에서 순위가 가장 높은 우선 순위 순서에 언급 된 속성을 보여 줍니다.  
  
-   <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>  
  
 <xref:System.Windows.Controls.GridViewColumn> 클래스 정의 및 열에 대 한 열 헤더를 사용자 지정 하는 데 사용할 수 있는 속성도 포함 합니다. <xref:System.Windows.Controls.GridViewColumn.Header%2A> 속성 열 머리글의 콘텐츠를 정의할 수 있습니다. 와 같은 다른 속성 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> 고 <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A> 콘텐츠 및 열 머리글 스타일을 지정할 수도 있습니다. 이러한 속성 중 일부는에 있는 다른 클래스와 같은 <xref:System.Windows.Controls.GridViewColumnHeader> 클래스입니다. 스타일 및 열 머리글에 대 한 이러한 속성에 대 한 우선 순위에 대 한 정보에 대 한 템플릿을 정의 하는 데 사용 되는 속성에 대 한 자세한 내용은 참조 하세요. [GridView 열 머리글 스타일 및 템플릿 개요](~/docs/framework/wpf/controls/gridview-column-header-styles-and-templates-overview.md).  
  
 <xref:System.Windows.Controls.GridViewColumn> 클래스는 <xref:System.ComponentModel.INotifyPropertyChanged> 인터페이스를 구현합니다. 이 인터페이스와 같은 속성 값에 변경이 발생할 때 발생 하는 이벤트를 구독 하는 기능을 제공 합니다 <xref:System.Windows.Controls.GridViewColumn.ActualWidth%2A> 속성 값입니다.  
  
   
  
## Examples  
 다음 예제에서는 정의 하는 방법을 보여 줍니다 <xref:System.Windows.Controls.GridViewColumn> 에 대 한 개체는 <xref:System.Windows.Controls.GridView>합니다.  
  
 [!code-xaml[ListViewSnips#GridViewColumnContent](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#gridviewcolumncontent)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.GridView" />
    <altmember cref="T:System.Windows.Controls.GridViewColumnHeader" />
    <altmember cref="T:System.Windows.Controls.GridViewColumnCollection" />
    <altmember cref="T:System.Windows.Controls.ListView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridViewColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GridViewColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GridViewColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.GridViewColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualWidth">
      <MemberSignature Language="C#" Value="public double ActualWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ActualWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.ActualWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActualWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ActualWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ActualWidth : double" Usage="System.Windows.Controls.GridViewColumn.ActualWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.GridViewColumn" />의 실제 너비를 가져옵니다.</summary>
        <value>열의 현재 너비입니다. 기본값은 (0.0)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 현재 너비를 가져옵니다는 <xref:System.Windows.Controls.GridViewColumn> 경우는 <xref:System.Windows.Controls.GridViewColumn.Width%2A> 속성이 <xref:System.Double.NaN?displayProperty=nameWithType>합니다. 값이 <xref:System.Double.NaN?displayProperty=nameWithType> 에 대 한는 <xref:System.Windows.Controls.GridViewColumn.Width%2A> 속성 열 크기 열 머리글 없는 가장 큰 표시 가능 항목을 수용할 수 있는지를 지정 합니다.  
  
 와 달리 <xref:System.Windows.FrameworkElement.ActualWidth%2A?displayProperty=nameWithType>, <xref:System.Windows.Controls.GridViewColumn.ActualWidth%2A?displayProperty=nameWithType> 종속성 속성이 아닙니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate CellTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate CellTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.CellTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property CellTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ CellTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CellTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.Controls.GridViewColumn.CellTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 셀의 내용을 표시하는 데 사용할 템플릿을 가져오거나 설정합니다.</summary>
        <value>열 셀의 서식을 지정하는 데 사용되는 <see cref="T:System.Windows.DataTemplate" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 속성을 바인딩할 모든 열 셀의 내용을 표시 및 최고부터 최하까지 우선 순위 순서에 나와 있습니다.  
  
-   <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>  
  
<a name="xamlAttributeUsage_CellTemplate"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object CellTemplate="{ResourceExtension TemplateResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_CellTemplate"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
<a name="xamlValues_CellTemplate"></a>   
## <a name="xaml-values"></a>XAML 값  
 *ResourceExtension*  
 다음 중 하나: `StaticResource`, 또는 `DynamicResource`합니다. 참조 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)합니다.  
  
 *TemplateResourceKey*  
 요청 되는 템플릿을 식별 하는 키입니다. 키의 기존 리소스에 참조를 <xref:System.Windows.ResourceDictionary>입니다.  
  
> [!NOTE]
>  속성 요소 구문은 기술적으로 가능 하지만 권장 하지는 않습니다. 참조 [인라인 스타일 및 템플릿](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)합니다. 바인딩을 사용 하 여 참조 또는 가능한 경우이 긴 하지만 드문 이기도 합니다.  
  
<a name="dependencyPropertyInfo_CellTemplate"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.GridViewColumn.CellTemplateProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 다음 예제에서는 지정 하는 방법을 보여 줍니다는 <xref:System.Windows.DataTemplate> 표시 하는 데는 <xref:System.Windows.Controls.GridViewColumn>합니다.  
  
 [!code-xaml[ListViewTemplate#GridViewCellTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewcelltemplate)]  
  
 [!code-xaml[ListViewTemplate#CellTemplateProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#celltemplateproperty)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector" />
        <altmember cref="P:System.Windows.Controls.GridViewColumn.DisplayMemberBinding" />
      </Docs>
    </Member>
    <Member MemberName="CellTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CellTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CellTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.CellTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CellTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CellTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CellTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.GridViewColumn.CellTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.GridViewColumn.CellTemplate" /> 종속성 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A> 종속성 속성의 식별자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector CellTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector CellTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property CellTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ CellTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CellTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.Controls.GridViewColumn.CellTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 셀을 표시하는 데 사용할 템플릿을 결정하는 <see cref="T:System.Windows.Controls.DataTemplateSelector" />를 가져오거나 설정합니다.</summary>
        <value>열 셀의 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> 선택 영역을 제공하는 <see cref="T:System.Windows.DataTemplate" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 속성을 바인딩할 모든 열 셀의 내용을 표시 및 최고부터 최하까지 우선 순위 순서에 나와 있습니다.  
  
-   <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>  
  
<a name="xamlAttributeUsage_CellTemplateSelector"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object CellTemplateSelector="{ResourceExtension DataTemplateSelectorClassKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_CellTemplateSelector"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.CellTemplateSelector>  
    <MyDataTemplateSelectorImplementation .../>  
  </object.CellTemplateSelector>  
</object>  
```  
  
<a name="xamlValues_CellTemplateSelector"></a>   
## <a name="xaml-values"></a>XAML 값  
 *MyDataTemplateSelectorImplementation*  
 파생 된 클래스 <xref:System.Windows.Controls.DataTemplateSelector> 실제 구현 하는 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> 재정의 합니다. 사용자 지정 클래스를 매핑하는 방법에 대 한 정보를 참조 하세요 [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)합니다.  
  
 *ResourceExtension*  
 다음 중 하나: `StaticResource`, 또는 `DynamicResource`합니다. 참조 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)합니다.  
  
 *DataTemplateSelectorClassKey*  
 선택기 구현을 요청 하 게 식별 하는 키입니다. 키를 유용한 팁을 구현 하는 파생된 클래스를 가리킵니다. <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> 재정의 합니다. 사용자 지정 클래스를 매핑하는 방법에 대 한 정보를 참조 하세요 [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)합니다. 인스턴스를 프로그래밍 방식으로 추가할 수 있습니다 프로그램 <xref:System.Windows.Controls.DataTemplateSelector> 리소스 사전 리소스로 클래스입니다.  
  
<a name="dependencyPropertyInfo_CellTemplateSelector"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A> 속성을 설정하는 방법을 보여 줍니다.  
  
 [!code-xaml[ListViewSnips#GridViewColumnContent](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#gridviewcolumncontent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CellTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CellTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CellTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CellTemplateSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CellTemplateSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector" /> 종속성 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A> 종속성 속성의 식별자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase DisplayMemberBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase DisplayMemberBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.DisplayMemberBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMemberBinding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ DisplayMemberBinding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMemberBinding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.Controls.GridViewColumn.DisplayMemberBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 열에 대해 바인딩할 데이터 항목을 가져오거나 설정합니다.</summary>
        <value>열에 표시되는 지정된 데이터 항목 형식입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 형식의 열에 데이터 원본에서 데이터를 연결 하므로 열에는 해당 형식의 값 집합이 표시 됩니다. 데이터 원본 개체의 예로 <xref:System.Windows.Data.XmlDataProvider> 개체 및 <xref:System.Windows.Data.ObjectDataProvider> 개체입니다.  
  
 다음 속성을 모든 콘텐츠 및 열 셀의 스타일을 정의 하 되 및 최고부터 최하까지 우선 순위 순서에 나와 있습니다.  
  
-   `DisplayMemberBinding` (이 속성) 
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A> 속성을 설정하는 방법을 보여 줍니다.  
  
 [!code-csharp[ListViewCode#GridViewColumnProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml.cs#gridviewcolumnproperties)]
 [!code-vb[ListViewCode#GridViewColumnProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCode/visualbasic/window1.xaml.vb#gridviewcolumnproperties)]
 [!code-xaml[ListViewCode#GridViewColumnProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#gridviewcolumnproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public object Header { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Header" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.Header" />
      <MemberSignature Language="VB.NET" Value="Public Property Header As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Header { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Header : obj with get, set" Usage="System.Windows.Controls.GridViewColumn.Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.GridViewColumn" />의 머리글 내용을 가져오거나 설정합니다.</summary>
        <value>열 머리글에 사용할 개체입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Controls.GridViewColumn.Header%2A> 간단 하 게 하는 개체에 속성을 설정할 수 있습니다를 `string`와 같은 복잡 한 개체 또는 <xref:System.Windows.Controls.StackPanel> 포함 된 내용이 있는 합니다. 기본 열 머리글을 <xref:System.Windows.Controls.GridView> 보기 모드에서 파생 되는 단추 스타일 <xref:System.Windows.Controls.Primitives.ButtonBase> 내용의 했으며는 <xref:System.Windows.Controls.GridViewColumn.Header%2A> 자식 속성입니다. 참조 열 머리글에 대 한 템플릿을 지정 합니다 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> 또는 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A> 속성 설명 합니다.  
  
 콘텐츠, 레이아웃 및 열 머리글의 스타일을 정의 하는 속성은 여러 관련된 클래스에 있으며 이러한 속성 중 일부와 유사한 기능을 동일 합니다. 자세한 내용은 [GridView 열 헤더 스타일 및 템플릿 개요](~/docs/framework/wpf/controls/gridview-column-header-styles-and-templates-overview.md)를 참조하세요.  
  
<a name="dependencyPropertyInfo_Header"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.GridViewColumn.HeaderProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
<a name="xamlAttributeUsage_Header"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object Header="string"/>  
```  
  
<a name="xamlPropertyElementUsage_Header"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <HeaderContentObject.../>  
</object>  
```  
  
<a name="xamlValues_Header"></a>   
## <a name="xaml-values"></a>XAML 값  
 \<*HeaderContentObject*.../>  
 단일 요소입니다. 이 요소는 경우 자식 요소를 포함할 수는 *HeaderContentObject* 수 콘텐츠 모델.  
  
## <a name="example"></a>예  
 다음 예제에서는 <xref:System.Windows.Controls.GridViewColumn.Header%2A> 속성을 설정하는 방법을 보여 줍니다.  
  
 [!code-csharp[ListViewCode#GridViewColumnProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml.cs#gridviewcolumnproperties)]
 [!code-vb[ListViewCode#GridViewColumnProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCode/visualbasic/window1.xaml.vb#gridviewcolumnproperties)]
 [!code-xaml[ListViewCode#GridViewColumnProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#gridviewcolumnproperties)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.GridViewColumnHeader" />
        <altmember cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplate" />
        <altmember cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" />
      </Docs>
    </Member>
    <Member MemberName="HeaderContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style HeaderContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style HeaderContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ HeaderContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderContainerStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.GridViewColumn.HeaderContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.GridViewColumn" /> 헤더에 사용할 스타일을 가져오거나 설정합니다.</summary>
        <value>열 머리글의 디스플레이 속성을 정의하는 <see cref="T:System.Windows.Style" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A> 속성 및 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> 속성 값 및 열 머리글 내용에 대 한 시각적 트리에 함께 속성 정의할 수 있습니다. 합니다 <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A> 속성을 정의 하 여 시각적 트리를 지정할 수도 있습니다는 <xref:System.Windows.Controls.ControlTemplate>합니다.  
  
 콘텐츠, 레이아웃 및 열 머리글의 스타일을 정의 하는 속성은 여러 관련된 클래스에 있으며 이러한 속성 중 일부와 유사한 기능을 동일 합니다. 자세한 내용은 [GridView 열 헤더 스타일 및 템플릿 개요](~/docs/framework/wpf/controls/gridview-column-header-styles-and-templates-overview.md)를 참조하세요.  
  
 스타일을 설정 하는 경우 몇 가지 제한 사항이 적용 됩니다. 자세한 내용은 참조는 [스타일 및 템플릿](~/docs/framework/wpf/controls/styling-and-templating.md)합니다.  
  
<a name="xamlAttributeUsage_HeaderContainerStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object HeaderContainerStyle="{ResourceExtension StyleResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_HeaderContainerStyle"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
<a name="xamlValues_HeaderContainerStyle"></a>   
## <a name="xaml-values"></a>XAML 값  
 *ResourceExtension*  
 다음 중 하나: `StaticResource`, 또는 `DynamicResource`합니다. 참조 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)합니다.  
  
 *StyleResourceKey*  
 요청 되는 스타일을 식별 하는 키입니다. 키의 기존 리소스에 참조를 <xref:System.Windows.ResourceDictionary>입니다.  
  
> [!NOTE]
>  속성 요소 구문은 기술적으로 가능 하지만 권장 하지는 않습니다. 참조 [인라인 스타일 및 템플릿](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)합니다. 바인딩을 사용 하 여 참조 또는 가능한 경우이 긴 하지만 드문 이기도 합니다.  
  
<a name="dependencyPropertyInfo_HeaderContainerStyle"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 다음 예제에서는 정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A> 열 머리글에 대 한 표시 속성을 지정 하 합니다.  
  
 [!code-xaml[ListViewTemplate#GridViewHeaderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewheaderstyle)]  
  
 [!code-xaml[ListViewTemplate#GridViewColumnTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewcolumntemplate)]  
  
 다음 예제에서는 정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A> 를 사용 하 여 표시 속성을 정의 하는 <xref:System.Windows.Controls.ControlTemplate>합니다.  
  
 [!code-xaml[ListViewTemplate#GridViewColumnHCTwithControlTemplatePart1](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewcolumnhctwithcontroltemplatepart1)]  
  
 [!code-xaml[ListViewTemplate#GridViewColumnHCTwithControlTemplatePart2](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewcolumnhctwithcontroltemplatepart2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplate" />
        <altmember cref="P:System.Windows.Controls.GridView.ColumnHeaderContainerStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderContainerStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderContainerStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderContainerStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderContainerStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HeaderContainerStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderContainerStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle" /> 종속성 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A> 종속성 속성의 식별자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.HeaderProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HeaderProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.GridViewColumn.HeaderProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 종속성 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GridViewColumn.Header%2A> 종속성 속성의 식별자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormat">
      <MemberSignature Language="C#" Value="public string HeaderStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HeaderStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStringFormat : string with get, set" Usage="System.Windows.Controls.GridViewColumn.HeaderStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 속성이 문자열로 표시되는 경우 이 속성의 형식 지정 방법을 지정하는 합성 문자열을 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 속성이 문자열로 표시되는 경우 이 속성의 형식 지정 방법을 지정하는 합성 문자열입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Controls.GridView.ColumnHeaderTemplate%2A?displayProperty=nameWithType>, <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A?displayProperty=nameWithType>, 또는 <xref:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate%2A?displayProperty=nameWithType> 속성이 설정 되 면이 속성은 무시 됩니다.  
  
 열 머리글의 서식을 지정 하려면 몇 가지 속성을 사용할 수 있습니다.  둘 이상의 속성을 설정 하 고, 열 머리글의 우선 순위가 높은 속성의 값을 사용 하 여 형식이 지정 됩니다. 여러 형식에는 열에 대 한 형식이 설정할 수 있습니다. 다음은 가장 낮은 가장 높은 우선 순위 정렬에 열 머리글의 서식을 지정 하는 속성을 보여 줍니다.  
  
-   <xref:System.Windows.Controls.GridView.ColumnHeaderStringFormat%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Controls.GridViewColumn.HeaderStringFormat%2A?displayProperty=nameWithType>  
  
<a name="dependencyPropertyInfo_HeaderStringFormat"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HeaderStringFormatProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderStringFormatProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ HeaderTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.Controls.GridViewColumn.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 머리글의 콘텐츠를 표시하는 데 사용할 템플릿을 가져오거나 설정합니다.</summary>
        <value>열 머리글을 표시하는 데 사용할 <see cref="T:System.Windows.DataTemplate" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모두를 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A> 속성 및 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> 속성을 설정 하는 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> 속성이 우선 합니다.  
  
 후는 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> 또는 <xref:System.Windows.Controls.GridView.ColumnHeaderTemplate%2A> 에 대해 지정 된을 <xref:System.Windows.Controls.GridViewColumn>를 변경할 수 없습니다.  
  
 열 머리글의 표시를 지정 하 여 정의할 수도 있습니다는 <xref:System.Windows.Controls.ControlTemplate> 의 일부로 <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A?displayProperty=nameWithType>합니다.  
  
 콘텐츠, 레이아웃 및 열 머리글의 스타일을 정의 하는 속성은 여러 관련된 클래스에 있으며 이러한 속성 중 일부와 유사한 기능을 동일 합니다. 자세한 내용은 [GridView 열 헤더 스타일 및 템플릿 개요](~/docs/framework/wpf/controls/gridview-column-header-styles-and-templates-overview.md)를 참조하세요.  
  
<a name="xamlAttributeUsage_HeaderTemplate"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object HeaderTemplate="{ResourceExtension TemplateResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_HeaderTemplate"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
<a name="xamlValues_HeaderTemplate"></a>   
## <a name="xaml-values"></a>XAML 값  
 *ResourceExtension*  
 다음 중 하나: `StaticResource`, 또는 `DynamicResource`합니다. 참조 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)합니다.  
  
 *TemplateResourceKey*  
 요청 되는 템플릿을 식별 하는 키입니다. 키의 기존 리소스에 참조를 <xref:System.Windows.ResourceDictionary>입니다.  
  
> [!NOTE]
>  속성 요소 구문은 기술적으로 가능 하지만 권장 하지는 않습니다. 참조 [인라인 스타일 및 템플릿](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)합니다. 바인딩을 사용 하 여 참조 또는 가능한 경우이 긴 하지만 드문 이기도 합니다.  
  
<a name="dependencyPropertyInfo_HeaderTemplate"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.GridViewColumn.HeaderTemplateProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 다음 예제에서는의 머리글을 표시 하는 데 템플릿을 지정 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.GridViewColumn>합니다.  
  
 [!code-xaml[ListViewTemplate#GridViewHeaderTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewheadertemplate)]  
  
 [!code-xaml[ListViewTemplate#GridViewColumnTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewcolumntemplate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" />
        <altmember cref="P:System.Windows.Controls.GridView.ColumnHeaderTemplate" />
        <altmember cref="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.HeaderTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HeaderTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.GridViewColumn.HeaderTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplate" /> 종속성 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> 종속성 속성의 식별자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ HeaderTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 머리글을 표시하는 데 사용할 템플릿을 선택하는 논리를 제공하는 <see cref="T:System.Windows.Controls.DataTemplateSelector" />를 가져오거나 설정합니다.</summary>
        <value>각 <see cref="T:System.Windows.Controls.DataTemplateSelector" />에 대한 데이터 템플릿 선택을 제공하는 <see cref="T:System.Windows.Controls.GridViewColumn" /> 개체입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모두를 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A> 속성 및 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> 속성을 설정 하는 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> 속성이 우선 합니다.  
  
 콘텐츠, 레이아웃 및 열 머리글의 스타일을 정의 하는 속성은 여러 관련된 클래스에 있으며 이러한 속성 중 일부와 유사한 기능을 동일 합니다. 자세한 내용은 [GridView 열 헤더 스타일 및 템플릿 개요](~/docs/framework/wpf/controls/gridview-column-header-styles-and-templates-overview.md)를 참조하세요.  
  
<a name="xamlAttributeUsage_HeaderTemplateSelector"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object HeaderTemplateSelector="{ResourceExtension DataTemplateSelectorClassKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_HeaderTemplateSelector"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.HeaderTemplateSelector>  
    <MyDataTemplateSelectorImplementation .../>  
  </object.HeaderTemplateSelector>  
</object>  
```  
  
<a name="xamlValues_HeaderTemplateSelector"></a>   
## <a name="xaml-values"></a>XAML 값  
 *ResourceExtension*  
 다음 중 하나: `StaticResource`, 또는 `DynamicResource`합니다. 참조 [XAML 리소스](~/docs/framework/wpf/advanced/xaml-resources.md)합니다.  
  
 *DataTemplateSelectorClassKey*  
 선택기 구현을 요청 하 게 식별 하는 키입니다. 키를 유용한 팁을 구현 하는 파생된 클래스를 가리킵니다. <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> 재정의 합니다. 사용자 지정 클래스를 매핑하는 방법에 대 한 정보를 참조 하세요 [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)합니다. 인스턴스를 프로그래밍 방식으로 추가할 수 있습니다 프로그램 <xref:System.Windows.Controls.DataTemplateSelector> 리소스 사전 리소스로 클래스입니다.  
  
 *MyDataTemplateSelectorImplementation*  
 파생 된 클래스 <xref:System.Windows.Controls.DataTemplateSelector> 실제 구현 하는 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> 재정의 합니다. 사용자 지정 클래스를 매핑하는 방법에 대 한 정보를 참조 하세요 [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)합니다.  
  
<a name="dependencyPropertyInfo_HeaderTemplateSelector"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HeaderTemplateSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeaderTemplateSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" /> 종속성 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A> 종속성 속성의 식별자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderStringFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderStringFormatChanged (string oldHeaderStringFormat, string newHeaderStringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderStringFormatChanged(string oldHeaderStringFormat, string newHeaderStringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHeaderStringFormatChanged (oldHeaderStringFormat As String, newHeaderStringFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHeaderStringFormatChanged(System::String ^ oldHeaderStringFormat, System::String ^ newHeaderStringFormat);" />
      <MemberSignature Language="F#" Value="abstract member OnHeaderStringFormatChanged : string * string -&gt; unit&#xA;override this.OnHeaderStringFormatChanged : string * string -&gt; unit" Usage="gridViewColumn.OnHeaderStringFormatChanged (oldHeaderStringFormat, newHeaderStringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldHeaderStringFormat" Type="System.String" />
        <Parameter Name="newHeaderStringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldHeaderStringFormat"><see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 속성의 이전 값입니다.</param>
        <param name="newHeaderStringFormat"><see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 속성의 새 값입니다.</param>
        <summary><see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GridViewColumn.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="gridViewColumn.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary><see cref="E:System.Windows.Controls.GridViewColumn.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.GridViewColumn.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.GridViewColumn" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GridViewColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="gridViewColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.GridViewColumn" />의 문자열 표현을 만듭니다.</summary>
        <returns>개체를 <see cref="T:System.Windows.Controls.GridViewColumn" /> 개체로 식별하고 <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 속성 값을 표시하는 문자열입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.Controls.GridViewColumn.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 너비를 가져오거나 설정합니다.</summary>
        <value>열의 너비입니다. 기본값은 열 머리글이 아닌 최대 열 항목으로 크기를 자동 조정하는 <see cref="F:System.Double.NaN" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 설정 된 경우 정확한 너비를 가져오려고 <xref:System.Double.NaN?displayProperty=nameWithType>를 사용 하 여는 <xref:System.Windows.Controls.GridViewColumn.ActualWidth%2A> 속성입니다.  
  
<a name="xamlAttributeUsage_Width"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object Width="double"/>  
- or -  
<object Width="qualifiedDouble"/>  
- or -  
<object Width="Auto"/>  
```  
  
<a name="xamlValues_Width"></a>   
## <a name="xaml-values"></a>XAML 값  
 *double*  
 <xref:System.Double>  
  
 문자열 표현 된 <xref:System.Double> 값입니다. 이것은 [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] 측정 합니다. 문자열 소수점이 하를 명시적으로 포함 되지 해야 합니다. 예를 들어 값 `1` 허용 됩니다.  
  
 *qualifiedDouble*  
 A *이중* 단위 선언 문자열 중 하나에서 다음 위에서 설명한 대로 값: `px`, `in`, `cm`, `pt`합니다.  
  
 `px` (기본값) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` 인치; 1에서 96px = =  
  
 `cm` 센티미터; 1cm==(96/2.54) px  
  
 `pt` 포인트; 1pt==(96/72) px  
  
 `Auto`  
 자동 크기 조정 동작을 사용 하도록 설정 합니다. 설명 부분을 참조하세요.  
  
<a name="dependencyPropertyInfo_Width"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Controls.GridViewColumn.WidthProperty>|  
|메타 데이터 속성 설정 `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.GridViewColumn.Width%2A> 속성을 설정하는 방법을 보여 줍니다.  
  
 [!code-csharp[ListViewCode#GridViewColumnProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml.cs#gridviewcolumnproperties)]
 [!code-vb[ListViewCode#GridViewColumnProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCode/visualbasic/window1.xaml.vb#gridviewcolumnproperties)]
 [!code-xaml[ListViewCode#GridViewColumnProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#gridviewcolumnproperties)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GridViewColumn.ActualWidth" />
      </Docs>
    </Member>
    <Member MemberName="WidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.WidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.GridViewColumn.WidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.GridViewColumn.Width" /> 종속성 속성을 식별합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.GridViewColumn.Width%2A> 종속성 속성의 식별자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>