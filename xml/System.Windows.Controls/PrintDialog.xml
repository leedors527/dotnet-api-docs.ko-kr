<Type Name="PrintDialog" FullName="System.Windows.Controls.PrintDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d7dd974fcc6ede7af5729dd9fe28e1710b51ed22" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006237" /></Metadata><TypeSignature Language="C#" Value="public class PrintDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintDialog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.PrintDialog" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintDialog" />
  <TypeSignature Language="F#" Value="type PrintDialog = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>사용자 입력에 따라 <see cref="T:System.Printing.PrintTicket" /> 및 <see cref="T:System.Printing.PrintQueue" />를 구성한 다음 문서를 인쇄하는 표준 Microsoft Windows 인쇄 대화 상자를 호출합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자가 사용할 수는 **인쇄** 대화 상자를 프린터 선택, 구성 및 인쇄 작업을 수행 합니다.  
  
 엄격히 말해, 사용할 수 있습니다는 <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A> 적이 대화 상자를 열지 않고 메서드. 이런 의미에서 컨트롤이 보이지 않는 인쇄 구성 요소로 사용할 수 있습니다. 하지만 성능상의 이유로 사용 하 여 더 나은 것은 <xref:System.Printing.PrintQueue.AddJob%2A> 메서드 또는 다양 한 <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> 및 <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> 의 메서드는 <xref:System.Windows.Xps.XpsDocumentWriter>합니다. 이 대 한 자세한 내용은 참조 [방법: 프로그래밍 방식으로 XPS 파일 인쇄](~/docs/framework/wpf/advanced/how-to-programmatically-print-xps-files.md)합니다.  
  
 이 클래스를 혼동 하지 마십시오 <xref:System.Windows.Controls.PrintDialog?displayProperty=nameWithType>를 사용 하 여 <xref:System.Windows.Forms.PrintDialog?displayProperty=nameWithType>입니다. 후자는 Windows Forms 애플리케이션을 사용 하 여 사용 됩니다. <xref:System.Windows.Controls.PrintDialog?displayProperty=nameWithType> Windows Presentation Foundation 애플리케이션에 사용 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 인스턴스를 만드는 간단한 표시 하는 방법을 보여 줍니다 <xref:System.Windows.Controls.PrintDialog> 를 사용 하 여 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 태그 및 코드입니다.  
  
 [!code-xaml[PrintDialog#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.PrintDialog" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPageEnabled">
      <MemberSignature Language="C#" Value="public bool CurrentPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CurrentPageEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.CurrentPageEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPageEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CurrentPageEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPageEnabled : bool with get, set" Usage="System.Windows.Controls.PrintDialog.CurrentPageEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 페이지를 인쇄 하는 옵션이 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.</summary>
        <value><see langword="true" /> 현재 페이지를 인쇄 하는 옵션이 사용 되는 경우 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPage">
      <MemberSignature Language="C#" Value="public uint MaxPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.MaxPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPage As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 MaxPage { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPage : uint32 with get, set" Usage="System.Windows.Controls.PrintDialog.MaxPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 범위에 허용 되는 최대 페이지 번호를 가져오거나 설정 합니다.</summary>
        <value>A <see cref="T:System.UInt32" /> 의 페이지 범위에 사용할 수 있는 최대 페이지 번호를 나타내는 합니다 **인쇄** 대화 상자.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클릭 하는 사용자 **인쇄** 때 합니다 **인쇄** 대화 상자에서 설정 된 범위를 벗어난 페이지를 인쇄 하도록 설정 되어 합니다 <xref:System.Windows.Controls.PrintDialog.MaxPage%2A> 및 <xref:System.Windows.Controls.PrintDialog.MinPage%2A> 값을 확인 하 라는 오류 메시지가 표시 됩니다는 최대 및 최소 페이지 번호입니다. 아무 것도 표시 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">속성이 1 보다 작게 설정 됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="MinPage">
      <MemberSignature Language="C#" Value="public uint MinPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MinPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.MinPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MinPage As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 MinPage { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberSignature Language="F#" Value="member this.MinPage : uint32 with get, set" Usage="System.Windows.Controls.PrintDialog.MinPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 범위에 허용 되는 최소 페이지 수를 가져오거나 설정 합니다.</summary>
        <value>A <see cref="T:System.UInt32" /> 의 페이지 범위에 사용할 수 있는 최소 페이지 수를 나타내는 합니다 **인쇄** 대화 상자.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클릭 하는 사용자 **인쇄** 때 합니다 **인쇄** 대화 상자에서 설정 된 범위를 벗어난 페이지를 인쇄 하도록 설정 되어 합니다 <xref:System.Windows.Controls.PrintDialog.MaxPage%2A> 및 <xref:System.Windows.Controls.PrintDialog.MinPage%2A> 값을 확인 하 라는 오류 메시지가 표시 됩니다는 최대 및 최소 페이지 번호입니다. 아무 것도 표시 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">속성이 1 보다 작게 설정 됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="PageRange">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.PageRange PageRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.PageRange PageRange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PageRange" />
      <MemberSignature Language="VB.NET" Value="Public Property PageRange As PageRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::PageRange PageRange { System::Windows::Controls::PageRange get(); void set(System::Windows::Controls::PageRange value); };" />
      <MemberSignature Language="F#" Value="member this.PageRange : System.Windows.Controls.PageRange with get, set" Usage="System.Windows.Controls.PrintDialog.PageRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.PageRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>경우 페이지 범위를 가져오거나 설정 합니다. <see cref="P:System.Windows.Controls.PrintDialog.PageRangeSelection" /> 로 설정 된 <see cref="F:System.Windows.Controls.PageRangeSelection.UserPages" />합니다.</summary>
        <value><see cref="T:System.Windows.Controls.PageRange" /> 인쇄 되는 페이지 범위를 나타내는입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Windows.Controls.PageRange" /> 개체는 속성을 설정 하는 데 사용 되는 범위의 시작 부분 또는 끝 범위는 1 보다 작은 값으로 설정 합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="PageRangeSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.PageRangeSelection PageRangeSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.PageRangeSelection PageRangeSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PageRangeSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PageRangeSelection As PageRangeSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::PageRangeSelection PageRangeSelection { System::Windows::Controls::PageRangeSelection get(); void set(System::Windows::Controls::PageRangeSelection value); };" />
      <MemberSignature Language="F#" Value="member this.PageRangeSelection : System.Windows.Controls.PageRangeSelection with get, set" Usage="System.Windows.Controls.PrintDialog.PageRangeSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.PageRangeSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>가져오거나 설정 합니다 <see cref="T:System.Windows.Controls.PageRangeSelection" /> 의이 인스턴스에 대 한 <see cref="T:System.Windows.Controls.PrintDialog" />합니다.</summary>
        <value><see cref="T:System.Windows.Controls.PageRangeSelection" /> 인쇄할 페이지 범위 형식을 나타내는 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 설정 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.PrintDialog.PageRangeSelection%2A> 를 사용 하 여 속성 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 태그 및 코드입니다.  
  
 [!code-xaml[PrintDialog#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintableAreaHeight">
      <MemberSignature Language="C#" Value="public double PrintableAreaHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PrintableAreaHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintableAreaHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintableAreaHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PrintableAreaHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintableAreaHeight : double" Usage="System.Windows.Controls.PrintDialog.PrintableAreaHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지의 인쇄 가능 영역의 높이 가져옵니다.</summary>
        <value><see cref="T:System.Double" /> 인쇄할 수 있는 페이지 영역의 높이 나타내는입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에는 값을 가져오는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.PrintDialog.PrintableAreaHeight%2A> 를 사용 하 여 속성 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 태그 및 코드입니다.  
  
 [!code-xaml[PrintDialog#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#4)]  
  
 ...  
  
 [!code-csharp[PrintDialog#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PrintDialog#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintableAreaWidth">
      <MemberSignature Language="C#" Value="public double PrintableAreaWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PrintableAreaWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintableAreaWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintableAreaWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PrintableAreaWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintableAreaWidth : double" Usage="System.Windows.Controls.PrintDialog.PrintableAreaWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지의 인쇄 가능 영역의 너비를 가져옵니다.</summary>
        <value><see cref="T:System.Double" /> 인쇄할 수 있는 페이지 영역의 너비를 나타내는입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에는 값을 가져오는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.PrintDialog.PrintableAreaWidth%2A> 를 사용 하 여 속성 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 태그 및 코드입니다.  
  
 [!code-xaml[PrintDialog#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#3)]  
  
 ...  
  
 [!code-csharp[PrintDialog#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PrintDialog#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDocument">
      <MemberSignature Language="C#" Value="public void PrintDocument (System.Windows.Documents.DocumentPaginator documentPaginator, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintDocument(class System.Windows.Documents.DocumentPaginator documentPaginator, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.PrintDocument(System.Windows.Documents.DocumentPaginator,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrintDocument(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::String ^ description);" />
      <MemberSignature Language="F#" Value="member this.PrintDocument : System.Windows.Documents.DocumentPaginator * string -&gt; unit" Usage="printDialog.PrintDocument (documentPaginator, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentPaginator"><see cref="T:System.Windows.Documents.DocumentPaginator" /> 인쇄 개체입니다.</param>
        <param name="description">인쇄 된 작업의 설명입니다. 이 텍스트에 표시 된 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 프린터의 합니다.</param>
        <summary>출력을 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 개체는 <see cref="T:System.Printing.PrintQueue" /> 현재 선택 된 합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="documentPaginator" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="PrintQueue">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueue PrintQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintQueue PrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintQueue As PrintQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueue ^ PrintQueue { System::Printing::PrintQueue ^ get(); void set(System::Printing::PrintQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrintQueue : System.Printing.PrintQueue with get, set" Usage="System.Windows.Controls.PrintDialog.PrintQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>가져오거나를 <see cref="T:System.Printing.PrintQueue" /> 선택한 프린터를 나타내는입니다.</summary>
        <value><see cref="T:System.Printing.PrintQueue" /> 사용자 선택 합니다.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">인쇄할 수 있는 권한입니다. 연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.PrintTicket PrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket PrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintTicket As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintTicket ^ PrintTicket { System::Printing::PrintTicket ^ get(); void set(System::Printing::PrintTicket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrintTicket : System.Printing.PrintTicket with get, set" Usage="System.Windows.Controls.PrintDialog.PrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 인쇄 작업에 대해 **인쇄**를 클릭할 때 <see cref="T:System.Printing.PrintTicket" />에서 사용되는 <see cref="T:System.Windows.Controls.PrintDialog" />을 가져오거나 설정합니다.</summary>
        <value>A <see cref="T:System.Printing.PrintTicket" /> 다음에 사용 되는 합니다 **인쇄** 대화 상자에서 단추를 클릭 합니다.  
  
이 설정은 <see cref="P:System.Windows.Controls.PrintDialog.PrintTicket" /> 속성의 유효성을 검사 하지 않거나 지정 된 수정 <see cref="T:System.Printing.PrintTicket" /> 특정 <see cref="T:System.Printing.PrintQueue" />합니다.  필요한 경우 사용 합니다 <see cref="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> 메서드를를 <see cref="T:System.Printing.PrintQueue" />-특정 <see cref="T:System.Printing.PrintTicket" /> 지정된 된 된 프린터에 대 한 유효 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정도 아니고이 속성의 유효성을 검사 합니다 <xref:System.Printing.PrintTicket>합니다. 사용 하 여 검사할 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintVisual">
      <MemberSignature Language="C#" Value="public void PrintVisual (System.Windows.Media.Visual visual, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintVisual(class System.Windows.Media.Visual visual, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.PrintVisual(System.Windows.Media.Visual,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrintVisual(System::Windows::Media::Visual ^ visual, System::String ^ description);" />
      <MemberSignature Language="F#" Value="member this.PrintVisual : System.Windows.Media.Visual * string -&gt; unit" Usage="printDialog.PrintVisual (visual, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="visual"><see cref="T:System.Windows.Media.Visual" /> 인쇄 합니다.</param>
        <param name="description">인쇄 된 작업의 설명입니다. 이 텍스트에 표시 된 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 프린터의 합니다.</param>
        <summary>파생 되는 시각적 (텍스트가 아닌) 개체를 인쇄 합니다 <see cref="T:System.Windows.Media.Visual" /> 클래스에 <see cref="T:System.Printing.PrintQueue" /> 현재 선택 된 합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="visual" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedPagesEnabled">
      <MemberSignature Language="C#" Value="public bool SelectedPagesEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectedPagesEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.SelectedPagesEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedPagesEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelectedPagesEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedPagesEnabled : bool with get, set" Usage="System.Windows.Controls.PrintDialog.SelectedPagesEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>선택한 페이지를 인쇄 하는 옵션이 사용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.</summary>
        <value><see langword="true" /> 선택한 페이지를 인쇄 하는 옵션이 사용 되는 경우 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; Nullable&lt;bool&gt;" Usage="printDialog.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.PrintDialog" />를 모달 대화 상자로 호출합니다.</summary>
        <returns>사용자가 **인쇄**를 클릭한 경우 <see langword="true" />이고, 사용자가 **취소**를 클릭한 경우 <see langword="false" />이고, 사용자가 **인쇄** 또는 **취소**를 클릭하지 않고 대화 상자를 닫으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 하는 방법의 <xref:System.Windows.Controls.PrintDialog.ShowDialog%2A> 코드에서 메서드.  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserPageRangeEnabled">
      <MemberSignature Language="C#" Value="public bool UserPageRangeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserPageRangeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.UserPageRangeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property UserPageRangeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserPageRangeEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UserPageRangeEnabled : bool with get, set" Usage="System.Windows.Controls.PrintDialog.UserPageRangeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**인쇄** 대화 상자에서 인쇄할 페이지 범위를 지정할 수 있는 옵션이 제공되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see langword="true" /> 이면 옵션을 사용할 수 있습니다. 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 설정 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.PrintDialog.UserPageRangeEnabled%2A> 를 사용 하 여 속성 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 태그 및 코드입니다.  
  
 [!code-xaml[PrintDialog#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>