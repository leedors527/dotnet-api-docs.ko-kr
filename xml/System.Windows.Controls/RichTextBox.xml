<Type Name="RichTextBox" FullName="System.Windows.Controls.RichTextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4080981a9e14f22998d5b04f55c60793061cf53a" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59015984" /></Metadata><TypeSignature Language="C#" Value="public class RichTextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RichTextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.RichTextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class RichTextBox&#xA;Inherits TextBoxBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class RichTextBox : System::Windows::Controls::Primitives::TextBoxBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type RichTextBox = class&#xA;    inherit TextBoxBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Inherit)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Document")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Documents.FlowDocument" /> 개체에서 작동하는 rich edit 컨트롤을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.FlowDocument> 에 대 한 유일한 지원 되는 자식 요소는 <xref:System.Windows.Controls.RichTextBox>합니다.  
  
> [!IMPORTANT]
>  <xref:System.Windows.Controls.RichTextBox> 버블링에 대 한 기본 제공 처리가 <xref:System.Windows.UIElement.MouseUp> 고 <xref:System.Windows.UIElement.MouseDown> 이벤트입니다.  결과적으로 사용자 지정 이벤트 처리기는 수신 대기할 `MouseUp` 또는 `MouseDown` 에서 이벤트를 <xref:System.Windows.Controls.RichTextBox> 호출 되지 것입니다.  이러한 이벤트에 응답 해야 하는 경우 터널링에 대 한 수신 대기 <xref:System.Windows.UIElement.PreviewMouseUp> 및 <xref:System.Windows.UIElement.PreviewMouseDown> 이벤트 대신 사용 하 여 처리기를 등록 또는 <xref:System.Windows.EventSetter.HandledEventsToo%2A> 인수 (이 두 번째 옵션은 코드를 통해 사용할 수만). 이벤트를 의도적으로 사용 하지 않도록 설정 하려는 경우가 아니면 처리를 표시 하지 마십시오 <xref:System.Windows.Controls.RichTextBox> 이러한 이벤트를 처리 하는 네이티브 컨트롤에 주목할 만한 영향에 주의 및 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]합니다.  
  
 하지만 <xref:System.Windows.Controls.RichTextBox> 지원 복사 및 붙여넣기 이미지의 특정 시나리오는 현재 지원 되지 않습니다 하 고 제대로 작동 하지 않을 수 있습니다.  다음 표에서 이러한 시나리오 및 예상된 결과 요약 합니다.  
  
|이미지 복사 원본|이미지 붙여넣기 결과|  
|-----------------------|------------------------|  
|이미지 원본이 그래픽 메타 파일|이미지를 붙여넣지 않습니다.|  
|이미지 원본 상대 경로 또는 링크를 사용합니다.|붙여넣은 왜곡 되거나 빈 이미지가|  
|필요한 이미지 형식으로 이미지 소스 링크 끝나지 않음 (합니다. PNG입니다. JPG, 합니다. GIF)|붙여넣은 왜곡 되거나 빈 이미지가|  
|이미지 원본에서 잘못 된 RichText rtf (서식)를 복사 합니다.|이미지 원본에 대 한 링크를 붙여 넣는 대신 이미지|  
  
 HTML 콘텐츠를 붙여 넣는 <xref:System.Windows.Controls.RichTextBox> 때문에 예기치 않은 동작이 발생할 <xref:System.Windows.Controls.RichTextBox> 직접 HTML 형식으로 사용 하는 대신 사용 하 여 RTF 형식입니다.  
  
 텍스트에서 항상 래핑하는 <xref:System.Windows.Controls.RichTextBox>합니다. 텍스트에는 줄바꿈을 설정 하지 않을 경우는 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> 에 <xref:System.Windows.Documents.FlowDocument> 의 너비 보다 클 수는 <xref:System.Windows.Controls.RichTextBox>합니다. 그러나 페이지 너비에 도달 하면 텍스트 여전히 래핑합니다.  
  
 가로 및 세로로 정렬 내에서 콘텐츠를 <xref:System.Windows.Controls.RichTextBox> 작업을 완료 합니다 <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> 및 <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> 속성입니다. 맞춤를 <xref:System.Windows.Controls.RichTextBox> 페이지의 레이아웃 내에서 작업을 완료 합니다 <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> 및 <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> 속성입니다.  
  
 스크롤 막대에 표시 되지 않습니다.는 <xref:System.Windows.Controls.RichTextBox> 기본적으로 합니다. 스크롤 막대를 표시 하려면 설정 합니다 <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> 속성을 <xref:System.Windows.Controls.ScrollBarVisibility.Visible> 또는 <xref:System.Windows.Controls.ScrollBarVisibility.Auto>합니다.  
  
 일반적으로 <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> 이벤트를 검색할 때 사용 해야의 텍스트를 <xref:System.Windows.Controls.TextBox> 또는 <xref:System.Windows.Controls.RichTextBox> 변경 대신 <xref:System.Windows.UIElement.KeyDown> 예상할 수 있듯이 합니다. 예는 [방법: TextBox에서 텍스트가 변경 되 면 검색](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md)합니다.  
  
 <xref:System.Windows.Controls.RichTextBox> 다양 한 키보드 명령 지원합니다. 키보드 명령 목록을 보려면 참조 <xref:System.Windows.Documents.EditingCommands>합니다.  
  
 이 컨트롤에 대 한 종속성 속성은 컨트롤의 기본 스타일으로 설정할 수 있습니다.  속성이 설정 된 기본 스타일을 컨트롤 응용 프로그램에 표시 되 면 속성 값이 기본값에서 변경 될 수 있습니다. 기본 스타일은 응용 프로그램 실행 중일 때 사용 되는 바탕 화면 테마에서 결정 됩니다.  자세한 내용은 [기본 WPF 테마](https://go.microsoft.com/fwlink/?LinkID=158252)합니다.  
  
   
  
## Examples  
 다음 예제에서는 선언 된 <xref:System.Windows.Controls.RichTextBox> 간단한을 포함 하는 <xref:System.Windows.Documents.FlowDocument>합니다.  
  
 [!code-xaml[RichTextBoxSnippets#_RTB_XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml#_rtb_xaml)]  
  
 [!code-csharp[RichTextBoxMiscSnippets_procedural_snip#RichTextBoxCodeOnlyExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxMiscSnippets_procedural_snip/CSharp/RichTextBoxExample.cs#richtextboxcodeonlyexample)]
 [!code-vb[RichTextBoxMiscSnippets_procedural_snip#RichTextBoxCodeOnlyExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxMiscSnippets_procedural_snip/visualbasic/richtextboxexample.vb#richtextboxcodeonlyexample)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.RichTextBox" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RichTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RichTextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.RichTextBox" /> 클래스의 새 기본 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 빈 만듭니다 <xref:System.Windows.Documents.FlowDocument> 문서 속성을 사용 하 여 연결 합니다.  특히 이 빈 <xref:System.Windows.Documents.FlowDocument>에는 텍스트를 포함하지 않는 단일 <xref:System.Windows.Documents.Paragraph>이 들어 있는 단일 <xref:System.Windows.Documents.Run>가 포함됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RichTextBox (System.Windows.Documents.FlowDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.FlowDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.#ctor(System.Windows.Documents.FlowDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As FlowDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RichTextBox(System::Windows::Documents::FlowDocument ^ document);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.RichTextBox : System.Windows.Documents.FlowDocument -&gt; System.Windows.Controls.RichTextBox" Usage="new System.Windows.Controls.RichTextBox document" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Windows.Documents.FlowDocument" />
      </Parameters>
      <Docs>
        <param name="document">새 <see cref="T:System.Windows.Documents.FlowDocument" />의 초기 콘텐츠로 추가할 <see cref="T:System.Windows.Controls.RichTextBox" />입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Controls.RichTextBox" />를 초기 콘텐츠로 추가하여 <see cref="T:System.Windows.Documents.FlowDocument" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는이 생성자의 사용을 하는 방법을 보여 줍니다.  
  
 [!code-csharp[RichTextBoxSnippets#_RTB_Constructor](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_rtb_constructor)]
 [!code-vb[RichTextBoxSnippets#_RTB_Constructor](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_rtb_constructor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer CaretPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer CaretPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.RichTextBox.CaretPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretPosition As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ CaretPosition { System::Windows::Documents::TextPointer ^ get(); void set(System::Windows::Documents::TextPointer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CaretPosition : System.Windows.Documents.TextPointer with get, set" Usage="System.Windows.Controls.RichTextBox.CaretPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>입력 캐럿의 위치를 가져오거나 설정합니다.</summary>
        <value>입력 캐럿의 위치를 지정하는 <see cref="T:System.Windows.Documents.TextPointer" /> 개체입니다.  
  
기본적으로 캐럿은 <see cref="T:System.Windows.Controls.RichTextBox" />가 호스팅하는 콘텐츠의 시작 부분에 있는 첫 번째 삽입 위치에 있습니다. "삽입 위치" 등의 텍스트 위치 관련 용어에 대한 자세한 내용은 <see cref="T:System.Windows.Documents.TextPointer" />를 참조하십시오.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는이 속성의 사용을 보여 줍니다.  
  
 [!code-csharp[RichTextBoxSnippets#_RTB_CaretPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_rtb_caretposition)]
 [!code-vb[RichTextBoxSnippets#_RTB_CaretPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_rtb_caretposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">해당 속성을 <see langword="null" />로 설정하려고 한 경우</exception>
        <exception cref="T:System.ArgumentException">이 속성을 현재 문서 외부에 있는 위치를 참조하는 <see cref="T:System.Windows.Documents.TextPointer" />로 설정하려고 한 경우</exception>
        <altmember cref="T:System.Windows.Documents.TextPointer" />
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.FlowDocument Document { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.FlowDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.RichTextBox.Document" />
      <MemberSignature Language="VB.NET" Value="Public Property Document As FlowDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::FlowDocument ^ Document { System::Windows::Documents::FlowDocument ^ get(); void set(System::Windows::Documents::FlowDocument ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Document : System.Windows.Documents.FlowDocument with get, set" Usage="System.Windows.Controls.RichTextBox.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.FlowDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.FlowDocument" />의 콘텐츠를 나타내는 <see cref="T:System.Windows.Controls.RichTextBox" />를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Documents.FlowDocument" />의 콘텐츠를 나타내는 <see cref="T:System.Windows.Controls.RichTextBox" /> 개체입니다.  
  
기본적으로 이 속성은 빈 <see cref="T:System.Windows.Documents.FlowDocument" />로 설정됩니다.  특히 이 빈 <see cref="T:System.Windows.Documents.FlowDocument" />에는 텍스트를 포함하지 않는 단일 <see cref="T:System.Windows.Documents.Paragraph" />이 들어 있는 단일 <see cref="T:System.Windows.Documents.Run" />가 포함됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 FlowDocument만 호스트할 수는 단일 <xref:System.Windows.Controls.RichTextBox>합니다.  단일 FlowDocument 여러 콘텐츠로 지정 <xref:System.Windows.Controls.RichTextBox> 컨트롤은 지원 되지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는이 속성의 사용을 보여 줍니다.  
  
 [!code-csharp[RichTextBoxSnippets#_RTB_Document](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_rtb_document)]
 [!code-vb[RichTextBoxSnippets#_RTB_Document](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_rtb_document)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">해당 속성을 <see langword="null" />로 설정하려고 한 경우</exception>
        <exception cref="T:System.ArgumentException">이 속성을 다른 <see cref="T:System.Windows.Documents.FlowDocument" />의 콘텐츠를 나타내는 <see cref="T:System.Windows.Controls.RichTextBox" />로 설정하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">변경 블록이 활성화된 상태에서 이 속성을 설정한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextSpellingErrorPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextSpellingErrorPosition (System.Windows.Documents.TextPointer position, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextSpellingErrorPosition(class System.Windows.Documents.TextPointer position, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSpellingErrorPosition (position As TextPointer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextSpellingErrorPosition(System::Windows::Documents::TextPointer ^ position, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextSpellingErrorPosition : System.Windows.Documents.TextPointer * System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="richTextBox.GetNextSpellingErrorPosition (position, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="position">다음 맞춤법 오류 검색을 시작할 위치를 나타내는 <see cref="T:System.Windows.Documents.TextPointer" />입니다.</param>
        <param name="direction">지정된 <c>위치</c>에서 시작하여 다음 맞춤법 오류를 검색할 <see cref="T:System.Windows.Documents.LogicalDirection" />입니다.</param>
        <summary><see cref="T:System.Windows.Documents.TextPointer" />의 콘텐츠에서 다음 맞춤법 오류를 가리키는 <see cref="T:System.Windows.Controls.RichTextBox" />를 반환합니다.</summary>
        <returns><see cref="T:System.Windows.Documents.TextPointer" />의 콘텐츠에서 다음 맞춤법 오류를 가리키는 <see cref="T:System.Windows.Controls.RichTextBox" />이거나, 다음 맞춤법 오류가 없으면 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)" />
        <altmember cref="M:System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionFromPoint (System.Windows.Point point, bool snapToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionFromPoint(valuetype System.Windows.Point point, bool snapToText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionFromPoint(System::Windows::Point point, bool snapToText);" />
      <MemberSignature Language="F#" Value="member this.GetPositionFromPoint : System.Windows.Point * bool -&gt; System.Windows.Documents.TextPointer" Usage="richTextBox.GetPositionFromPoint (point, snapToText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="snapToText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><see cref="T:System.Windows.Point" />를 검색할 위치를 지정하는 <see cref="T:System.Windows.Documents.TextPointer" /> 개체입니다.</param>
        <param name="snapToText"><see langword="true" />인 경우 이 메서드는 항상 <see cref="T:System.Windows.Documents.TextPointer" />를 반환하며, 제공된 <see cref="T:System.Windows.Point" />가 문자 경계 상자 내에 있는지 여부에 관계없이 지정된 <see cref="T:System.Windows.Point" />에 가장 가까운 삽입 위치를 지정합니다.  
  
<see langword="false" />인 경우 이 메서드는 지정된 <see cref="T:System.Windows.Point" />가 문자 경계 상자 범위 내에 있지 않으면 <see langword="null" />을 반환합니다.</param>
        <summary>지정된 위치에 가장 가까운 삽입 지점을 가리키는 <see cref="T:System.Windows.Documents.TextPointer" />를 반환합니다.</summary>
        <returns>제공된 지점에 가장 가까운 삽입 위치를 지정하는 <see cref="T:System.Windows.Documents.TextPointer" />이거나, <paramref name="snapToText" />가 <see langword="null" />이고 제공된 <see cref="T:System.Windows.Point" />가 문자의 경계 상자 범위 내에 있지 않으면 <see langword="false" />입니다. 반환되는 <see cref="T:System.Windows.Documents.TextPointer" />는 보통 두 문자 사이의 위치입니다. 반환되는 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" />의 <see cref="T:System.Windows.Documents.TextPointer" /> 속성을 사용하여 두 문자 중 <see cref="T:System.Windows.Documents.TextPointer" />에 해당하는 문자를 확인합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.RichTextBox> 왼쪽 위 모서리에 있는 원본과 표준 좌표계를 사용 하 여 <xref:System.Windows.Controls.RichTextBox>입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Controls.RichTextBox" />에 대한 레이아웃 정보가 최신 정보가 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingError GetSpellingError (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Controls.SpellingError GetSpellingError(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingError (position As TextPointer) As SpellingError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::SpellingError ^ GetSpellingError(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingError : System.Windows.Documents.TextPointer -&gt; System.Windows.Controls.SpellingError" Usage="richTextBox.GetSpellingError position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">맞춤법 오류를 확인하기 위해 문자를 확인하는 위치 및 논리 방향을 지정하는 <see cref="T:System.Windows.Documents.TextPointer" />입니다. 이 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" />의 <see cref="T:System.Windows.Documents.TextPointer" /> 속성을 사용하여 확인할 문자의 방향을 지정합니다.</param>
        <summary><see cref="T:System.Windows.Controls.SpellingError" />의 콘텐츠에서 지정된 위치에 있는 맞춤법 오류와 연결된 <see cref="T:System.Windows.Controls.RichTextBox" /> 개체를 반환합니다.</summary>
        <returns><paramref name="position" />에 지정된 문자에 있는 맞춤법 오류에 대한 세부 정보가 들어 있는 <see cref="T:System.Windows.Controls.SpellingError" /> 개체이거나, 지정된 문자에 맞춤법 오류가 없으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Documents.TextPointer> 같은 `position` 일반적으로 두 문자 사이의 위치를 지정 합니다. 사용 하 여를 <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> 의 속성 `position` 문자 검사를 지정 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)" />
        <altmember cref="M:System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorRange">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextRange GetSpellingErrorRange (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextRange GetSpellingErrorRange(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorRange (position As TextPointer) As TextRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextRange ^ GetSpellingErrorRange(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorRange : System.Windows.Documents.TextPointer -&gt; System.Windows.Documents.TextRange" Usage="richTextBox.GetSpellingErrorRange position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">맞춤법 오류를 확인하기 위해 문자를 확인하는 위치 및 논리 방향을 지정하는 <see cref="T:System.Windows.Documents.TextPointer" />입니다. 이 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" />의 <see cref="T:System.Windows.Documents.TextPointer" /> 속성을 사용하여 확인할 문자의 방향을 지정합니다.</param>
        <summary><see cref="T:System.Windows.Documents.TextRange" /> 콘텐츠의 지정된 위치에 있는 철자가 잘못된 단어를 다루는 <see cref="T:System.Windows.Controls.RichTextBox" /> 개체를 반환합니다.</summary>
        <returns><paramref name="position" />에 지정된 문자를 포함하는 철자가 잘못된 단어를 다루는 <see cref="T:System.Windows.Documents.TextRange" /> 개체이거나, 지정된 문자에 맞춤법 오류가 없으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Documents.TextPointer> 같은 `position` 일반적으로 두 문자 사이의 위치를 지정 합니다. 사용 하 여를 <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> 의 속성 `position` 문자 검사를 지정 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)" />
        <altmember cref="M:System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsDocumentEnabled">
      <MemberSignature Language="C#" Value="public bool IsDocumentEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDocumentEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDocumentEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDocumentEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDocumentEnabled : bool with get, set" Usage="System.Windows.Controls.RichTextBox.IsDocumentEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 <see cref="T:System.Windows.UIElement" /> 내에 있는 <see cref="T:System.Windows.ContentElement" /> 및 <see cref="T:System.Windows.Controls.RichTextBox" /> 개체와 상호 작용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자가 <see cref="T:System.Windows.UIElement" /> 내에 있는 <see cref="T:System.Windows.ContentElement" /> 및 <see cref="T:System.Windows.Controls.RichTextBox" /> 개체와 상호 작용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.RichTextBox.IsDocumentEnabled%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.  자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.CheckBox> 와 <xref:System.Windows.Controls.RichTextBox> 포함 하는 <xref:System.Windows.Documents.Hyperlink> 및 <xref:System.Windows.Controls.Button>합니다.  <xref:System.Windows.Controls.RichTextBox.IsDocumentEnabled%2A> 의 속성을 <xref:System.Windows.Controls.RichTextBox> 바인딩되는 <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> 의 속성은 <xref:System.Windows.Controls.CheckBox>합니다.  사용자가 선택 하는 경우는 <xref:System.Windows.Controls.CheckBox>, 사용자와 상호 작용할 수는 <xref:System.Windows.Controls.Button> 및 <xref:System.Windows.Documents.Hyperlink>합니다. 사용자 선택을 취소 하는 경우는 <xref:System.Windows.Controls.CheckBox>서 <xref:System.Windows.Controls.Button> 및 <xref:System.Windows.Documents.Hyperlink> 비활성화 됩니다.  
  
 [!code-xaml[RTBIsDocumentEnabled#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RTBIsDocumentEnabled/VB/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDocumentEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDocumentEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDocumentEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDocumentEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDocumentEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDocumentEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.RichTextBox.IsDocumentEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.RichTextBox.IsDocumentEnabled" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.RichTextBox.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.RichTextBox.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="RichTextBox" />의 논리적 자식을 반복할 수 있는 열거자를 가져옵니다.</summary>
        <value>논리적 자식의 열거자입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="richTextBox.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><see cref="T:System.Windows.Size" />의 크기에 대한 제약 조건을 지정하는 <see cref="T:System.Windows.Controls.RichTextBox" /> 구조체입니다.</param>
        <summary><see cref="T:System.Windows.Controls.RichTextBox" />을 다시 측정하기 위해 호출됩니다.</summary>
        <returns><see cref="T:System.Windows.Size" />의 새 크기를 나타내는 <see cref="T:System.Windows.Controls.RichTextBox" /> 구조체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Windows.Controls.Control.MeasureOverride%2A>를 재정의합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="richTextBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />에 대한 <see cref="T:System.Windows.Controls.RichTextBox" /> 개체를 만들어 반환합니다.</summary>
        <returns>이 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />에 대한 <see cref="T:System.Windows.Controls.RichTextBox" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>를 재정의합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected override void OnDpiChanged (System.Windows.DpiScale oldDpiScaleInfo, System.Windows.DpiScale newDpiScaleInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpiScaleInfo, valuetype System.Windows.DpiScale newDpiScaleInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDpiChanged (oldDpiScaleInfo As DpiScale, newDpiScaleInfo As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDpiChanged(System::Windows::DpiScale oldDpiScaleInfo, System::Windows::DpiScale newDpiScaleInfo);" />
      <MemberSignature Language="F#" Value="override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="richTextBox.OnDpiChanged (oldDpiScaleInfo, newDpiScaleInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpiScaleInfo" Type="System.Windows.DpiScale" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="newDpiScaleInfo" Type="System.Windows.DpiScale" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="oldDpiScaleInfo">이전 DPI 배율 설정입니다.</param>
        <param name="newDpiScaleInfo">새 DPI 배율 설정입니다.</param>
        <summary>이 Rich Text Box가 렌더링되는 DPI가 변경될 때 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextSelection Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextSelection Selection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.RichTextBox.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As TextSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextSelection ^ Selection { System::Windows::Documents::TextSelection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Selection : System.Windows.Documents.TextSelection" Usage="System.Windows.Controls.RichTextBox.Selection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Documents.TextSelection" />의 현재 선택 영역이 포함된 <see cref="T:System.Windows.Controls.RichTextBox" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Documents.TextSelection" />의 현재 선택 영역이 포함된 <see cref="T:System.Windows.Controls.RichTextBox" /> 개체입니다.  
  
기본적으로 반환되는 <see cref="T:System.Windows.Documents.TextSelection" />의 <see cref="P:System.Windows.Documents.TextRange.IsEmpty" /> 속성 값은 <see langword="true" />입니다. 빈 <see cref="T:System.Windows.Documents.TextSelection" />은 선택 영역이 없는 텍스트 영역에 캐럿으로 렌더링됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Documents.TextRange.Select%2A> 메서드를 프로그래밍 방식으로 콘텐츠를 선택 합니다.  
  
   
  
## Examples  
 다음 예제에서는이 속성의 사용을 보여 줍니다.  
  
 [!code-csharp[RichTextBoxSnippets#_RTB_Selection](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_rtb_selection)]
 [!code-vb[RichTextBoxSnippets#_RTB_Selection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_rtb_selection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeDocument">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.ShouldSerializeDocument" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeDocument () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeDocument();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeDocument : unit -&gt; bool" Usage="richTextBox.ShouldSerializeDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Controls.RichTextBox.Document" /> 개체를 serialize하는 동안 <see cref="T:System.Windows.Controls.RichTextBox" /> 속성의 유효 값을 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns><see cref="P:System.Windows.Controls.RichTextBox.Document" /> 속성을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">자식으로 추가할 개체입니다.</param>
        <summary>이 형식 또는 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.RichTextBox.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">개체에 추가할 문자열입니다.</param>
        <summary>이 형식 또는 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>