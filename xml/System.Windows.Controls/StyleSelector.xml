<Type Name="StyleSelector" FullName="System.Windows.Controls.StyleSelector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03833416c4c7fda249c15b4398d23d6584f816b1" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39890044" /></Metadata><TypeSignature Language="C#" Value="public class StyleSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StyleSelector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.StyleSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class StyleSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class StyleSelector" />
  <TypeSignature Language="F#" Value="type StyleSelector = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>사용자 지정 논리에 따라 스타일을 적용하는 방법을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 만들려는 <xref:System.Windows.Controls.StyleSelector> 서브 클래스를 만든, 사용자 지정 논리에 따라 스타일을 적용 하는 <xref:System.Windows.Controls.StyleSelector> 클래스 및 구현를 <xref:System.Windows.Controls.StyleSelector.SelectStyle%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.StyleSelector> 정의 하는 <xref:System.Windows.Style> 행에 대 한 합니다. 이 예제에서는 정의 된 <xref:System.Windows.Controls.Control.Background%2A> 행 인덱스에 따라 색입니다.  
  
 [!code-csharp[ListViewSnips#ItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml.cs#itemstyleselector)]
 [!code-vb[ListViewSnips#ItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewSnips/visualbasic/window1.xaml.vb#itemstyleselector)]  
  
 다음 예제에서는 정의 하는 방법을 보여 줍니다는 <xref:System.Windows.ResourceKey> 에 대 한는 <xref:System.Windows.Controls.StyleSelector>합니다. 합니다 `namespc` 접두사를 매핑할를 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 네임 스페이스 및 해당 어셈블리 위치를 <xref:System.Windows.Controls.StyleSelector> 정의 됩니다. 자세한 내용은 [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)합니다.  
  
 [!code-xaml[ListViewSnips#myStyleSelectorKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#mystyleselectorkey)]  
  
 다음 예제에서는 설정 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> 의 속성을 <xref:System.Windows.Controls.ListView> 이 <xref:System.Windows.Controls.StyleSelector> 리소스입니다.  
  
 [!code-xaml[ListViewSnips#StyleSelectorXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#styleselectorxaml)]  
  
 정의 된 스타일 리소스를 선택 하는 선택기를 만드는 방법의 예 참조 구현의 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A?displayProperty=nameWithType>, 사용자 지정 논리를 사용 하 여 선택할 수 있습니다를 <xref:System.Windows.DataTemplate>비슷한 개념에 기반 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
    <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
    <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StyleSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StyleSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StyleSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.StyleSelector" />의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Style SelectStyle (object item, System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Style SelectStyle(object item, class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectStyle (item As Object, container As DependencyObject) As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Style ^ SelectStyle(System::Object ^ item, System::Windows::DependencyObject ^ container);" />
      <MemberSignature Language="F#" Value="abstract member SelectStyle : obj * System.Windows.DependencyObject -&gt; System.Windows.Style&#xA;override this.SelectStyle : obj * System.Windows.DependencyObject -&gt; System.Windows.Style" Usage="styleSelector.SelectStyle (item, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="item">콘텐츠입니다.</param>
        <param name="container">스타일을 적용할 요소입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 사용자 지정 논리에 따라 <see cref="T:System.Windows.Style" />을 반환합니다.</summary>
        <returns>적용할 애플리케이션별 스타일을 반환하거나, 그렇지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 만들려는 <xref:System.Windows.Controls.StyleSelector> 서브 클래스를 만든, 사용자 지정 논리에 따라 스타일을 적용 하는 <xref:System.Windows.Controls.StyleSelector> 클래스 및 구현를 <xref:System.Windows.Controls.StyleSelector.SelectStyle%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Controls.StyleSelector> 정의 하는 <xref:System.Windows.Style> 행에 대 한 합니다. 이 예제에서는 정의 된 <xref:System.Windows.Controls.Control.Background%2A> 행 인덱스에 따라 색입니다.  
  
 [!code-csharp[ListViewSnips#ItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml.cs#itemstyleselector)]
 [!code-vb[ListViewSnips#ItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewSnips/visualbasic/window1.xaml.vb#itemstyleselector)]  
  
 다음 예제에서는 정의 하는 방법을 보여 줍니다는 <xref:System.Windows.ResourceKey> 에 대 한는 <xref:System.Windows.Controls.StyleSelector>합니다. 합니다 `namespc` 접두사를 매핑할를 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 네임 스페이스 및 해당 어셈블리 위치를 <xref:System.Windows.Controls.StyleSelector> 정의 됩니다. 자세한 내용은 [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)합니다.  
  
 [!code-xaml[ListViewSnips#myStyleSelectorKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#mystyleselectorkey)]  
  
 다음 예제에서는 설정 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> 의 속성을 <xref:System.Windows.Controls.ListView> 이 <xref:System.Windows.Controls.StyleSelector> 리소스입니다.  
  
 [!code-xaml[ListViewSnips#StyleSelectorXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#styleselectorxaml)]  
  
 정의 된 스타일 리소스를 선택 하는 선택기를 만드는 방법의 예 참조 구현의 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A?displayProperty=nameWithType>, 사용자 지정 논리를 사용 하 여 선택할 수 있습니다를 <xref:System.Windows.DataTemplate>비슷한 개념에 기반 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
      </Docs>
    </Member>
  </Members>
</Type>