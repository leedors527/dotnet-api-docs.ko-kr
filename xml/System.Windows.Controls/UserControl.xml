<Type Name="UserControl" FullName="System.Windows.Controls.UserControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da51772d2112997afa7b6617862ad6c6b75f4249" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52600908" /></Metadata><TypeSignature Language="C#" Value="public class UserControl : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UserControl extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.UserControl" />
  <TypeSignature Language="VB.NET" Value="Public Class UserControl&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserControl : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type UserControl = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>컨트롤을 만드는 간단한 방법을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 풍부한 콘텐츠, 스타일, 트리거 및 템플릿을 지원 합니다. 대부분의 경우에서 이러한 기능을 통해 새 컨트롤을 만들 필요 없이 사용자 지정 및 일관 된 환경을 만들 수 있습니다. 자세한 내용은 [스타일 지정 및 템플릿](~/docs/framework/wpf/controls/styling-and-templating.md)을 참조하세요.  
  
 가장 간단한 방법은에서 파생 되는 클래스를 만드는 경우 새 컨트롤을 만들 필요가 <xref:System.Windows.Controls.UserControl>합니다. 이렇게 하기 전에 컨트롤 템플릿을 지원 하지 것입니다 하 고 복잡 한 사용자 지정을 지원 하지 것입니다는 것이 좋습니다. 그러나에서 파생 <xref:System.Windows.Controls.UserControl> 이며 적합 한 모델이 고, 애플리케이션을 빌드하는 방법을 비슷합니다 기존 요소를 추가 하 여 컨트롤을 빌드 하려는 경우 복잡 한 사용자 지정을 지원 해야 하는 경우. (에서 파생 된 컨트롤 템플릿을 사용 하려는 경우 <xref:System.Windows.Controls.Control> 대신 합니다.) 컨트롤 작성에 대 한 다른 모델에 대 한 자세한 내용은 참조 하세요. [컨트롤 제작 개요](~/docs/framework/wpf/controls/control-authoring-overview.md)합니다.  
  
 A <xref:System.Windows.Controls.UserControl> 는 <xref:System.Windows.Controls.ContentControl>, 즉, 모든 형식 (예: 문자열, 이미지 또는 패널)의 단일 개체가 포함 될 수 있습니다. 자세한 내용은 <xref:System.Windows.Controls.ContentControl> 클래스를 참조하세요.  
  
 이 컨트롤에 대 한 종속성 속성은 컨트롤의 기본 스타일으로 설정할 수 있습니다.  속성이 설정 된 기본 스타일을 컨트롤 애플리케이션에 표시 되 면 속성 값이 기본값에서 변경 될 수 있습니다. 기본 스타일은 애플리케이션 실행 중일 때 사용 되는 바탕 화면 테마에서 결정 됩니다.  자세한 내용은 [기본 WPF 테마](https://go.microsoft.com/fwlink/?LinkID=158252)합니다.  
  
   
  
## Examples  
 다음 예제에는 간단한을 만드는 방법을 보여 줍니다 `NumericUpDown` <xref:System.Windows.Controls.UserControl>합니다.  
  
 [!code-xaml[UserControlNumericUpDown#Markup](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml#markup)]  
  
 다음은이 논리 <xref:System.Windows.Controls.UserControl>:  
  
 [!code-csharp[UserControlNumericUpDown#CodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml.cs#codebehind)]
 [!code-vb[UserControlNumericUpDown#CodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UserControlNumericUpDown/visualbasic/numericupdown.xaml.vb#codebehind)]  
  
 자세한 내용은 [컨트롤 제작 개요](~/docs/framework/wpf/controls/control-authoring-overview.md)를 참조하십시오.  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160025">테마 및 UI 자동화 지원 샘플이 있는 NumericUpDown 사용자 지정 컨트롤</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UserControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.UserControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="userControl.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />에 대한 <see cref="T:System.Windows.Controls.UserControl" />를 만들어 반환합니다.</summary>
        <returns>이 <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" />에 대한 새 <see cref="T:System.Windows.Controls.UserControl" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>