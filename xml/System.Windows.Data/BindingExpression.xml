<Type Name="BindingExpression" FullName="System.Windows.Data.BindingExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="613ee494d595960ab5dada5a6aab3bf52b6c65db" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53522214" /></Metadata><TypeSignature Language="C#" Value="public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BindingExpression extends System.Windows.Data.BindingExpressionBase implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BindingExpression&#xA;Inherits BindingExpressionBase&#xA;Implements IWeakEventListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingExpression sealed : System::Windows::Data::BindingExpressionBase, System::Windows::IWeakEventListener" />
  <TypeSignature Language="F#" Value="type BindingExpression = class&#xA;    inherit BindingExpressionBase&#xA;    interface IWeakEventListener" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingExpressionBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.Windows.Data.Binding" />의 단일 인스턴스에 대한 정보를 포함합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.Binding> 클래스는 바인딩 선언의 상위 수준 클래스입니다. <xref:System.Windows.Data.BindingExpression> 클래스는 바인딩 소스에서 바인딩 대상 사이의 연결을 유지 관리 하는 기본 개체입니다. A <xref:System.Windows.Data.Binding> 에 몇 개의 공유할 수 있는 모든 정보가 <xref:System.Windows.Data.BindingExpression> 개체입니다. A <xref:System.Windows.Data.BindingExpression> 인스턴스 식에서 공유할 수 없는 및에 대 한 모든 인스턴스 정보를 포함 하는 <xref:System.Windows.Data.Binding>합니다.  
  
 예를 들어, 다음을 고려 위치 `myDataObject` 의 인스턴스를 `MyData` 클래스 `myBinding` 원본인 <xref:System.Windows.Data.Binding> 개체 및 `MyData` 클래스는 문자열 속성을 포함 하는 정의 된 클래스 `MyDataProperty`. 이 예에서는 텍스트의 콘텐츠를 바인딩합니다 `mytext`의 인스턴스인 <xref:System.Windows.Controls.TextBlock>를 `MyDataProperty`입니다.  
  
 [!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]
 [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]  
  
 동일한를 사용할 수 있습니다 `myBinding` 다른 바인딩을 만드는 개체입니다. 예를 들어 사용할 수 있습니다 합니다 `myBinding` 하는 확인란의 텍스트 내용을 바인딩할 개체 `MyDataProperty`합니다. 이 시나리오의 두 인스턴스 됩니다 <xref:System.Windows.Data.BindingExpression> 해당 공유를 `myBinding` 개체입니다.  
  
 가져올 수 있습니다는 <xref:System.Windows.Data.BindingExpression> 사용 하 여 개체를 <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> 메서드 또는 <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> 데이터 바인딩된 개체에서 메서드.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Windows.Data.BindingExpression.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Data.BindingExpression" />이 사용하는 바인딩 소스 개체를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Windows.Data.BindingExpression" />이 사용하는 바인딩 소스 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 구현을 보여 줍니다를 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 를 사용 하는 이벤트 처리기를 <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> 메서드를 <xref:System.Windows.Data.BindingExpression> 를 호출 하는 <xref:System.Windows.Data.BindingExpression.DataItem%2A> 바인딩 소스 개체에 액세스 하는 속성.  
  
 합니다 <xref:System.Windows.Controls.TextBlock> `SavingsText` 바인딩 대상 개체인 고 <xref:System.Windows.Controls.TextBlock.Text%2A> 속성은 바인딩 대상 속성입니다.  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.Binding ParentBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.Binding ParentBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::Binding ^ ParentBinding { System::Windows::Data::Binding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentBinding : System.Windows.Data.Binding" Usage="System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Windows.Data.BindingExpression" />의 <see cref="T:System.Windows.Data.Binding" /> 개체를 반환합니다.</summary>
        <value>현재 바인딩 식의 <see cref="T:System.Windows.Data.Binding" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSource">
      <MemberSignature Language="C#" Value="public object ResolvedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResolvedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResolvedSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResolvedSource : obj" Usage="System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Data.BindingExpression" />에 대한 바인딩 소스를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Windows.Data.BindingExpression" />에 대한 바인딩 소스입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSourcePropertyName">
      <MemberSignature Language="C#" Value="public string ResolvedSourcePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResolvedSourcePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSourcePropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResolvedSourcePropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResolvedSourcePropertyName : string" Usage="System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Data.BindingExpression" />에 대한 바인딩 소스 속성의 이름을 가져옵니다.</summary>
        <value>이 <see cref="T:System.Windows.Data.BindingExpression" />에 대한 바인딩 소스 속성의 이름입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean Implements IWeakEventListener.ReceiveWeakEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.IWeakEventListener.ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e) = System::Windows::IWeakEventListener::ReceiveWeakEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">이 메서드를 호출하는 <see cref="T:System.Windows.WeakEventManager" />의 형식입니다. 이 형식은 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 형식의 관리자 개체만 인식합니다.</param>
        <param name="sender">이벤트를 발생시킨 개체입니다.</param>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>이 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</summary>
        <returns>수신기가 이벤트를 처리했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public override void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateSource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateSource();" />
      <MemberSignature Language="F#" Value="override this.UpdateSource : unit -&gt; unit" Usage="bindingExpression.UpdateSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 또는 <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> 바인딩의 바인딩 소스 속성에 현재 바인딩 대상 값을 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 아무 작업도 수행 하지 경우 합니다 <xref:System.Windows.Data.Binding.Mode%2A> 바인딩의 아닙니다 <xref:System.Windows.Data.BindingMode.TwoWay> 또는 <xref:System.Windows.Data.BindingMode.OneWayToSource>합니다.  
  
 경우는 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 바인딩의 값으로 설정 됩니다 <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>를 호출 해야 합니다는 <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> 메서드 또는 변경 내용이 다시 소스에 전파 되지 것입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">바인딩이 해당 대상에서 분리되었습니다.</exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public override void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateTarget ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateTarget();" />
      <MemberSignature Language="F#" Value="override this.UpdateTarget : unit -&gt; unit" Usage="bindingExpression.UpdateTarget " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>바인딩 소스 속성에서 바인딩 대상 속성으로 데이터를 강제로 전송합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하면 source 속성에서 데이터 전송 대상 속성에 적용할 수 있습니다. 소스 개체와 같은 적절 한 속성 변경 알림 메커니즘을 구현 하는 경우 <xref:System.ComponentModel.INotifyPropertyChanged>, 대상 업데이트가 자동으로 수행 합니다. 그러나이 메서드를 사용 하 여 소스 개체가 적절 한 속성 변경 알림을 제공 하지 않는 경우도에서 명시적으로 대상 속성을 업데이트 하는 옵션을 해야 합니다. 애플리케이션 대상 속성을 주기적으로 업데이트 해야 하는 경우에이 메서드를 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">바인딩이 해당 대상에서 분리되었습니다.</exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
  </Members>
</Type>