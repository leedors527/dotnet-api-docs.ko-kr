<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0fe6bc661e8e484013d19506baf20af1584373d8" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53498450" /></Metadata><TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>개체의 유효성을 검사하는 데 사용되는 <see cref="T:System.Windows.Controls.ValidationRule" /> 개체 및 바인딩의 컬렉션을 포함합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingGroup> 유효성을 검사 하 고 함께 업데이트할 수 있는 여러 바인딩 간의 관계를 만듭니다. 예를 들어, 애플리케이션 주소를 입력 하 라는 메시지가 표시 됩니다. 그런 다음 애플리케이션 형식의 개체를 채웁니다 `Address`에 속성이 `Street`, `City`, `ZipCode`, 및 `Country`, 사용자가 제공한 값을 사용 하 여 합니다. 애플리케이션에 4 개를 포함 하는 패널 <xref:System.Windows.Controls.TextBox> 컨트롤을 각각 데이터가 개체의 속성 중 하나에 바인딩됩니다. 사용할 수는 <xref:System.Windows.Controls.ValidationRule> 에 <xref:System.Windows.Data.BindingGroup> 유효성을 검사 하는 `Address` 개체. 동일한 바인딩에 참여 하는 경우 <xref:System.Windows.Data.BindingGroup>, 주소의 국가 대 한 우편 번호가 올바른지 확인 하십시오.  
  
 설정 된 <xref:System.Windows.FrameworkElement.BindingGroup%2A> 속성을 <xref:System.Windows.FrameworkElement> 또는 <xref:System.Windows.FrameworkContentElement>합니다. 자식 요소에서 상속 된 <xref:System.Windows.Data.BindingGroup> 다른 상속 가능한 속성에서와 마찬가지로 해당 부모 요소에서. 에 하위 요소를 바인딩에 추가 되는 <xref:System.Windows.Data.BindingGroup> 다음 상황 중 하나가 발생 하는 경우:  
  
-   바인딩의 소스 및 <xref:System.Windows.FrameworkElement.DataContext%2A> 있는 요소를 <xref:System.Windows.Data.BindingGroup> 가 같은 개체 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 속성이 설정 되지 않았습니다.  
  
-   <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 바인딩의 속성 값과 같음 합니다 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> 명시적으로 설정 되지 않은 및 `null`합니다.  
  
 주소의 예 된다고 가정 합니다 <xref:System.Windows.FrameworkElement.DataContext%2A> 의 <xref:System.Windows.Controls.Panel> 형식의 개체로 설정 됩니다 `Address`합니다. 각각에 대 한 바인딩을 <xref:System.Windows.Controls.TextBox> 에 추가 되는 <xref:System.Windows.Data.BindingGroup> 패널의 합니다.  
  
 추가한 <xref:System.Windows.Controls.ValidationRule> 개체는 <xref:System.Windows.Data.BindingGroup>합니다. 합니다 <xref:System.Windows.Data.BindingGroup> 의 첫 번째 매개 변수로 전달 되는 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드 때는 <xref:System.Windows.Controls.ValidationRule> 실행 합니다. 사용할 수는 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 또는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 메서드를 <xref:System.Windows.Data.BindingGroup> 개체의 제안 된 값을 가져옵니다 및 <xref:System.Windows.Data.BindingGroup.Items%2A> 바인딩의 소스를 가져올 속성입니다.  
  
 <xref:System.Windows.Data.BindingGroup> 개별적으로 업데이트 되 고 각 바인딩하는 대신 동시 바인딩 소스를 업데이트 합니다. 데이터의 유효성을 검사 하는 방법 중 하나를 호출 하는 경우 (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, 또는 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), 각각에 대 한 바인딩을 <xref:System.Windows.Controls.TextBox> 의 예에서는 유효성 검사 및 잠재적으로 업데이트 합니다. 바인딩을의 일부인 경우는 <xref:System.Windows.Data.BindingGroup>를 바인딩 소스를 호출할 때까지 업데이트 되지 않습니다 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> 또는 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 에 <xref:System.Windows.Data.BindingGroup>명시적으로 설정 되지 않은 경우는 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 속성.  
  
   
  
## Examples  
 다음 예제에서는 항목의 가격 및 설명을 입력 하 라는 메시지를 표시 하는 애플리케이션 및 제품이 만료 날짜를 만듭니다. 애플리케이션 폼 아래 항목에 대 한 현재 정보를 표시 합니다. 사용자는 제출 하거나 변경 내용을 취소할 수 있습니다.  
  
 애플리케이션에는이 동작을 달성 하려면 다음을 수행 합니다.  
  
-   만듭니다는 <xref:System.Windows.Data.BindingGroup> 루트 추가 <xref:System.Windows.Controls.StackPanel> 를 만들 때의 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 애플리케이션의 합니다.  
  
-   호출 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, 및 <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 사용 하도록 설정 하는 애플리케이션의 논리가 변경 내용 롤백.  
  
-   호출 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 사용자의 입력을 가져오고 다음 7 일 이상 100 달러가 넘는 항목을 사용할 수를 확인 합니다.  
  
 다음 예제에서는 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 애플리케이션입니다. 루트 <xref:System.Windows.Controls.StackPanel> 에 <xref:System.Windows.Data.BindingGroup> 포함 하는 <xref:System.Windows.Controls.ValidationRule> 앞에서 설명한 대로 항목을 유효성을 검사 하는 합니다. 바인딩 개체를 `Price` 속성 및 `OfferExpires` 될 속성 부분 합니다 <xref:System.Windows.Data.BindingGroup> 각 바인딩에 및를 <xref:System.Windows.Controls.ValidationRule> 있는지 가격 및 날짜를 각각 유효한 값을 합니다. 개별 속성에 대 한 유효성 검사 규칙을 실행 하기 전에 합니다 <xref:System.Windows.Controls.ValidationRule> 에 <xref:System.Windows.Data.BindingGroup>합니다.  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 다음 예제에서는 애플리케이션에 대 한 이벤트 처리기를 보여 줍니다. 사용자가 제출 단추를 클릭 하면 애플리케이션 호출 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 개의 실행 하려면 <xref:System.Windows.Controls.ValidationRule> 연관 된는 <xref:System.Windows.Data.BindingGroup>합니다. 경우 각 <xref:System.Windows.Controls.ValidationRule> 성공 하면 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 편집 트랜잭션을 끝내 고 개체에 값을 저장 합니다. 경우 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 가 성공 하면 애플리케이션이 다른 편집 트랜잭션을 시작 합니다. 경우는 <xref:System.Windows.Controls.ValidationRule> 실패 하면를 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 애플리케이션 설정 때문에 이벤트가 발생 <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> 를 `true` 에 <xref:System.Windows.Data.BindingGroup> (이전 예제의). `ItemError` 핸들을 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 사용자에 게 유효성 검사 오류에 대 한 이벤트 및 표시 정보입니다. 예제도 처리를 <xref:System.Windows.FrameworkElement.Loaded> 에 대 한 이벤트를 <xref:System.Windows.Controls.StackPanel> 및 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 에 대 한 이벤트를 **취소** 단추.  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 다음 예제에서는 사용자 지정 <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`에 추가 됨을 <xref:System.Windows.Data.BindingGroup> 첫 번째 예제에서입니다. <xref:System.Windows.Controls.ValidationRule> 사용 하 여는 <xref:System.Windows.Data.BindingGroup> 에서 해당 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드 양식과 100 달러 개 항목을 사용 하는 경우이 수 있는 최소 7 일 동안 확인에 입력 한 값을 가져옵니다.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" />의 소스에 대한 편집 트랜잭션을 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 원본에는 <xref:System.Windows.Data.BindingGroup> 보류 중인 변경 내용 취소 지원, 호출할 수 있습니다 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 편집 트랜잭션을 시작 하려면 호출 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 보류 중인 변경 내용을 저장 하려면 호출 <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 보류 중인 변경 내용을 취소 하 합니다.  
  
 각 개체에 대해 <xref:System.Windows.Data.BindingGroup.Items%2A> 구현 하는 <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 호출 <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 편집 트랜잭션을 시작 하는 창이 로드 되는 경우.  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingExpression" />의 각 바인딩에 대한 정보가 들어 있는 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Data.BindingExpression" />의 각 바인딩에 대한 정보가 들어 있는 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Data.BindingExpression> 속한는 <xref:System.Windows.Data.BindingGroup> 다음 경우 중 하나가 발생 하는 경우:  
  
-   바인딩의 소스 및 <xref:System.Windows.FrameworkElement.DataContext%2A> 에 요소는 <xref:System.Windows.Data.BindingGroup> 가 같은 개체 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 설정 되지 않았습니다.  
  
-   <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 바인딩의 속성 및 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 동일한 null이 아닌 값으로 설정 됩니다 및 <xref:System.Windows.Data.BindingGroup> 바인딩의 대상 요소의 부모 요소에 속합니다.  
  
-   추가 된 <xref:System.Windows.Data.BindingExpression> 에 <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>편집 트랜잭션을 끝내고 보류 중인 변경 내용을 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 소스를입니다. 원본 개체를 계속할 수 있는 경우 보류 중인 변경 내용을 취소 하 고 편집 트랜잭션을 종료 시킵니다. 다음 메서드는 저장 된 원본 값을 사용 하 여 대상 속성을 업데이트 합니다.  
  
 각 개체에 대해 <xref:System.Windows.Data.BindingGroup.Items%2A> 구현 하는 <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 호출 <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 보류 중인 변경 내용 및 다음 호출을 삭제 하려면 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 소스를 다시 편집할 준비를 합니다.  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바인딩의 각 소스에서 보류 중인 변경 내용을 삭제하고 원래 값을 복원할 수 있는지 여부를 가져옵니다.</summary>
        <value>바인딩의 각 소스에서 보류 중인 변경 내용을 삭제하고 원래 값을 복원할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구현 하는 경우 원본 보류 중인 변경 내용을 취소할 수 <xref:System.ComponentModel.IEditableObject>입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>모든 <see cref="T:System.Windows.Controls.ValidationRule" /> 개체를 실행하고 모든 유효성 검사 규칙이 성공하는 경우 바인딩 소스를 업데이트합니다.</summary>
        <returns>모든 <see cref="T:System.Windows.Controls.ValidationRule" />이 성공하고 값이 소스에 커밋되면 sources;<see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 경우 <xref:System.Windows.Controls.ValidationRule> 성공 하면 원본 개체를 계속할 수 있는 경우이 방법을 사용 하면 소스입니다. 보류 중인 변경 내용을 커밋하고 편집 트랜잭션을 종료 합니다.  
  
 각 개체에 대해 <xref:System.Windows.Data.BindingGroup.Items%2A> 구현 하는 <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 호출 <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType>  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 보류 중인 변경 내용 및 다음 호출을 저장 하려면 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 소스를 다시 편집할 준비를 합니다.  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="override this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">지정된 속성을 포함하는 개체입니다.</param>
        <param name="propertyName">제안된 값을 가져올 속성입니다.</param>
        <summary>지정된 속성 및 항목에 대해 제안된 값을 반환합니다.</summary>
        <returns>제안된 속성 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 합니다 <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> 메서드는 소스에 커밋할 수 값을 가져옵니다. 반환 값 유형의 하는 단계에 따라 달라 집니다는 <xref:System.Windows.Controls.ValidationRule> 발생 합니다. 예를 들어 경우는 <xref:System.Windows.Controls.TextBox> 정수 형식의 속성에 바인딩된 데이터 및 <xref:System.Windows.Controls.ValidationRule> 를 호출 하는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 에 해당 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 로 <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, 메서드는 문자열을 반환 합니다. 경우는 <xref:System.Windows.Controls.ValidationRule> 에 해당 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 로 <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, 메서드가 바인딩의 변환기에서 반환 되는 형식에 관계 없이 반환 합니다. 이 예제에서는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 일반적으로 정수를 반환 합니다.  
  
   
  
## Examples  
 다음 예제는 여러 고객을 입력 하 고 각 고객에 게는 영업 담당자를 할당 하 라는 메시지는 애플리케이션의 일부입니다. 애플리케이션 판매 담당자와 고객 동일한 지역에 속해 있는지 확인 합니다. 예제에 나와 있는 합니다 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 사용 하는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 고객이 입력 한 값을 가져오는 방법입니다.  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">지정된 항목 및 속성에 대한 바인딩이 없는 경우</exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException">변환 오류나 이전의 유효성 검사 규칙 실패로 인해 지정된 속성 값을 사용할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" />에 실패한 유효성 검사 규칙이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" />에 실패한 유효성 검사 규칙이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" />이 소스에 기록되지 않은 제안된 값을 포함하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" />에 소스에 작성되지 않은 제안 값이 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" />의 바인딩 개체에 사용되는 소스를 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" />의 바인딩 개체에 사용되는 소스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본에 추가 됨에 따라 사용 되는 각 개체는 <xref:System.Windows.Data.BindingGroup.Items%2A> 속성을 한 번에 여러 바인딩에 대 한 개체를 원본으로 사용 되는 경우에 합니다. 종종 항목이 하나만에서 <xref:System.Windows.Data.BindingGroup.Items%2A>는 개체인를 <xref:System.Windows.FrameworkElement.DataContext%2A> 를 사용 하는 요소는 <xref:System.Windows.Data.BindingGroup>. 하지만 이기는 <xref:System.Windows.Data.BindingGroup> 여러 원본에 있어야 합니다. 예를 들어 동일한 바인딩 개체 공유 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 다양 한 원본 개체를 사용 하지만 원본으로 사용 되는 각 개체에는 <xref:System.Windows.Data.BindingGroup.Items%2A>합니다.  
  
 여러 개체에 있을 수도 있습니다 <xref:System.Windows.Data.BindingGroup.Items%2A> 원본의 중첩 된 속성에 바인딩 경로 확인 하는 경우. 예를 들어를 <xref:System.Windows.Controls.TextBox> 컨트롤의 바인딩의 일부인를 <xref:System.Windows.Data.BindingGroup> 및 해당 <xref:System.Windows.FrameworkElement.DataContext%2A> 가 `Customer` 형식의 속성이 있는 개체 `Address`합니다. 경우는 <xref:System.Windows.Data.Binding.Path%2A> 의 <xref:System.Windows.Data.Binding> 는 `Address.ZipCode` 속성인을 `Address` 에 추가 됩니다는 <xref:System.Windows.Data.BindingGroup.Items%2A> 속성.  
  
   
  
## Examples  
 다음 예제는 사용자가 값과 동일 하 게 두 개체의 속성을 설정 하는지 여부를 확인 하는 애플리케이션의 일부입니다. 첫 번째 예제에서는 두 개의 <xref:System.Windows.Controls.TextBox> 각각은 서로 다른 소스에 바인딩된 데이터 컨트롤입니다. 첫 번째의 바인딩을 <xref:System.Windows.Controls.TextBox> 해당 소스를 가져옵니다 `object1`에서 <xref:System.Windows.FrameworkElement.DataContext%2A> 의 <xref:System.Windows.Controls.TextBox> 컨트롤의 부모 요소 (의 <xref:System.Windows.Controls.StackPanel>). 두 번째 <xref:System.Windows.Controls.TextBox>, 바인딩 소스를로 `object2`합니다. 예제에서는 <xref:System.Windows.Controls.Label> 유효성 검사 오류를 표시 하는 합니다.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 다음 예제는 <xref:System.Windows.Controls.ValidationRule> 앞의 예제를 사용 하는 합니다. 에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 예제에서 각 원본 개체를 가져옵니다는 <xref:System.Windows.Data.BindingGroup> 개체 속성이 같은지 여부를 확인 합니다.  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" />에서 바인딩 개체를 포함하거나 제외하는 데 사용할 수 있는 <see cref="T:System.Windows.Data.BindingGroup" />을 식별하는 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" />을 식별하는 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 <xref:System.Windows.Data.BindingGroup.Name%2A> 는 `null`, 소스와 같은 개체를 바인딩이 <xref:System.Windows.FrameworkElement.DataContext%2A> 있는 요소의 <xref:System.Windows.Data.BindingGroup> 참여할는 <xref:System.Windows.Data.BindingGroup>.  
  
 다른 소스가 있는 바인딩을 포함할 수 있습니다는 <xref:System.Windows.FrameworkElement.DataContext%2A> 있는 부모 요소의 합니다 <xref:System.Windows.Data.BindingGroup> 설정 하 여 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 동일한 값에 대 한 바인딩의 속성입니다. 동일한 소스에 있는 바인딩을 제외할 수 있습니다 <xref:System.Windows.FrameworkElement.DataContext%2A> 있는 부모 요소의 합니다 <xref:System.Windows.Data.BindingGroup> 설정 하 여 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 서로 다른 값에 대 한 바인딩의 속성입니다.  
  
   
  
## Examples  
 다음 예제는 사용자가 값과 동일 하 게 두 개체의 속성을 설정 하는지 여부를 확인 하는 애플리케이션의 일부입니다. 첫 번째 예제에서는 두 개의 <xref:System.Windows.Controls.TextBox> 각각은 서로 다른 소스에 바인딩된 데이터 컨트롤입니다. 첫 번째 바인딩 <xref:System.Windows.Controls.TextBox> 의 일부인 합니다 <xref:System.Windows.Data.BindingGroup> 때문에 <xref:System.Windows.Controls.TextBox> 상속를 <xref:System.Windows.FrameworkElement.DataContext%2A> 및 <xref:System.Windows.Data.BindingGroup> 부모 로부터 <xref:System.Windows.Controls.StackPanel>합니다.  
  
 두 번째 바인딩 <xref:System.Windows.Controls.TextBox> 의 일부인 합니다 <xref:System.Windows.Data.BindingGroup> 때문에 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 의 <xref:System.Windows.Data.Binding> 로 설정 됩니다 `bindingGroup`합니다.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 다음 예제는 <xref:System.Windows.Controls.ValidationRule> 앞의 예제를 사용 하는 합니다. 에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 예제에서 각 원본 개체를 가져옵니다는 <xref:System.Windows.Data.BindingGroup> 개체 속성이 같은지 여부를 확인 합니다.  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Controls.Validation.Error" />의 상태가 변경될 때 <see cref="T:System.Windows.Controls.ValidationRule" /> 이벤트가 발생하는지 여부를 가져오거나 설정합니다.</summary>
        <value><see cref="E:System.Windows.Controls.Validation.Error" />의 상태가 변경될 때 <see cref="T:System.Windows.Controls.ValidationRule" /> 이벤트가 발생하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 있는 요소에서 연결 된 이벤트가 발생 된 <xref:System.Windows.Data.BindingGroup>합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Data.BindingGroup> 설정 및 <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> 에 `true` 애플리케이션에서 처리할 수 있도록 합니다 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 이벤트 때를 <xref:System.Windows.Controls.ValidationRule> 실패 합니다.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 다음 예제에서는 처리 된 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 이벤트입니다.  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Data.BindingGroup" />이 할당되는 개체를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Windows.Data.BindingGroup" />이 할당되는 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Data.BindingGroup" />에서 소스에 커밋되지 않은 대상 값을 다시 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" />에서 소스에 커밋되지 않은 대상 값을 다시 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제안 된 값에 바인딩의 대상 쪽에서 변경 되었지만 소스에 커밋되지 않은 하는 값이입니다. 예를 들어, 한지를 양방향 바인딩으로 <xref:System.Windows.Controls.TextBox> 하며 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 속성이 <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>합니다. 사용자의 값을 변경 하는 경우는 <xref:System.Windows.Controls.TextBox>, 제안된 된 값에 있는 값이는 <xref:System.Windows.Controls.TextBox> 원본에 커밋되기 전에 합니다.  
  
 때 <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> 됩니다 `true`는 <xref:System.Windows.Data.BindingGroup> 바인딩이 두 개는 BindingGroup 떠나고 같은 소스를 사용 하 여 다른 바인딩 BindingGroup를 조인 하는 경우 제안 된 값을 사용 합니다.  예를 들어, 애플리케이션을 통해 여러 필드를 편집 하 고 단추를 클릭 하 여 원본 개체를 업데이트 하는 사용자 수 있음을 가정 합니다. 애플리케이션에서 표시 하는 필드를 편집 되지 않는 경우는 <xref:System.Windows.Controls.TextBlock>합니다. 사용자 필드 편집을 시작 하는 경우 애플리케이션 대체 합니다 <xref:System.Windows.Controls.TextBlock> 사용 하 여는 <xref:System.Windows.Controls.TextBox>합니다. 사용자가 해당 필드의 편집을 마치면 애플리케이션을 대체 합니다 <xref:System.Windows.Controls.TextBox> 사용 하 여를 <xref:System.Windows.Controls.TextBlock>입니다. 에 대 한 방법이 있어야 하므로 사용자가 단추를 클릭할 때까지 소스를 업데이트 하지 않으면는 <xref:System.Windows.Controls.TextBlock> 제안 된 값을 표시 합니다. 설정 하 여 <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> 에 `true`를 소스 업데이트 되지 않은 경우에 애플리케이션 필드에 사용자의 변경 내용이 표시 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string *  -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">지정된 속성을 포함하는 개체입니다.</param>
        <param name="propertyName">제안된 값을 가져올 속성입니다.</param>
        <param name="value">이 메서드의 반환 값에는 제안된 속성 값을 나타내는 개체가 포함됩니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 속성 및 항목에 대해 제안된 값을 가져오려고 시도합니다.</summary>
        <returns>값이 지정된 속성에 제안된 값이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 반환 `false` 지정한 항목 및 속성에 대 한 바인딩이 없는 경우 지정된 된 속성의 값을 변환 오류로 인해 사용할 수 없는 경우 또는 이전 유효성 검사 규칙을 실패 합니다.  
  
 이 메서드를 사용 합니다 <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> 메서드는 소스에 커밋할 수 값을 가져옵니다. 형식 `value` 하는 단계에 따라 달라 집니다는 <xref:System.Windows.Controls.ValidationRule> 발생 합니다. 예를 들어 경우는 <xref:System.Windows.Controls.TextBox> 정수 형식의 속성에 바인딩된 데이터가 `value` 문자열인 경우를 <xref:System.Windows.Controls.ValidationRule> 호출 하는 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 에 해당 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 로 <xref:System.Windows.Controls.ValidationStep.RawProposedValue>합니다. 경우는 <xref:System.Windows.Controls.ValidationRule> 에 해당 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 로 설정 <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, 형식의 `value` 바인딩의 변환기에서 반환 되는 모든 형식입니다. 이 예제에서는 `value` 는 일반적으로 정수입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 <xref:System.Windows.Controls.ValidationRule> 라는 `ValidateDateAndPrice`합니다. 에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 사용 하 여 합니다 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 메서드 및 <xref:System.Windows.Data.BindingGroup.Items%2A> 사용자가 양식에 입력 한 값을 가져올 속성입니다. 다음 예제에서는 100 달러 개 항목을 사용 하는 경우이 수 있는 최소 7 일 동안 확인 합니다. 이 예제는에서 더 큰 예제의 일부는 <xref:System.Windows.Data.BindingGroup> 클래스  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ValidationRule" /> 속성이 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" />, <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 또는 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />로 설정된 <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> 개체 및 바인딩에 대해 변환기를 실행하고 모든 유효성 검사 규칙이 성공하는 경우 대상의 값을 소스 개체에 저장합니다.</summary>
        <returns>모든 유효성 검사 규칙이 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 모든 경우의 소스를 업데이트 <xref:System.Windows.Controls.ValidationRule> 성공 하면 소스입니다. 보류 중인 변경 내용을 커밋하고 편집 트랜잭션을 종료 시 키 지 않습니다. 즉, 원본 개체를 구현 하는 경우 <xref:System.ComponentModel.IEditableObject>합니다. 이 메서드에서 발생 하지 않습니다 호출 <xref:System.ComponentModel.IEditableObject.EndEdit%2A> 호출할 수 있습니다. 사용 된 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 메서드를 사용 하려면 소스 보류 중인 변경 내용을 커밋합니다.  
  
   
  
## Examples  
 다음 예제는 여러 고객을 입력 하 고 각 고객에 게는 영업 담당자를 할당 하 라는 메시지는 애플리케이션의 일부입니다. 애플리케이션 판매 담당자와 고객 동일한 지역에 속해 있는지 확인 합니다. 예제에서는 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> 바인딩을 유효성을 검사 하 여 모든 유효성 검사 규칙이 성공 하는 경우 원본에 값을 저장 합니다.  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />을 포함하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> 됩니다 `true`, 바인딩을 확인 하 고 구현 하는 데이터 소스에 의해 발생 하는 오류를 보고 <xref:System.ComponentModel.INotifyDataErrorInfo>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ValidationRule" /> 속성이 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 또는 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />로 설정된 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> 개체 및 바인딩에 대해 변환기를 실행합니다.</summary>
        <returns>유효성 검사 규칙이 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출 하는 경우에 소스 업데이트 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ValidationError" />을 유효하지 않게 만든 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Controls.ValidationError" />을 유효하지 않게 만든 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션입니다.  오류가 없을 경우 이 값은 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ValidationRule" />에서 소스 개체의 유효성을 검사하는 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Controls.ValidationRule" />에서 소스 개체의 유효성을 검사하는 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Controls.ValidationRule> 에 추가 됩니다을 <xref:System.Windows.Data.BindingGroup>의 <xref:System.Windows.Data.BindingGroup> 의 첫 번째 매개 변수로 전달 됩니다는 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드. 사용 하 여 개체의 제안 된 값을 가져올 수는 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 또는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 메서드. 바인딩 소스 개체를 가져올 수 있습니다는 <xref:System.Windows.Data.BindingGroup.Items%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`를 <xref:System.Windows.Data.BindingGroup>입니다.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 다음 예제에서는 `ValidateDateAndPrice` 클래스를 보여줍니다. 합니다 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드는 <xref:System.Windows.Data.BindingGroup> 양식과 100 달러 개 항목을 사용 하는 경우이 수 있는 최소 7 일 동안 확인에 입력 한 값을 가져옵니다.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>