<Type Name="BindingOperations" FullName="System.Windows.Data.BindingOperations">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd6c8d921090628de948182b18107a0340ae04db" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57935044" /></Metadata><TypeSignature Language="C#" Value="public static class BindingOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BindingOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingOperations" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingOperations abstract sealed" />
  <TypeSignature Language="F#" Value="type BindingOperations = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" /> 및 <see cref="T:System.Windows.Data.PriorityBinding" /> 개체를 비롯하여 바인딩을 조작하는 정적 메서드를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스는 데이터 바인딩에 대 한 도우미 작업으로 사용 되는 정적 메서드 집합을 제공 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessCollection">
      <MemberSignature Language="C#" Value="public static void AccessCollection (System.Collections.IEnumerable collection, Action accessMethod, bool writeAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccessCollection(class System.Collections.IEnumerable collection, class System.Action accessMethod, bool writeAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AccessCollection (collection As IEnumerable, accessMethod As Action, writeAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AccessCollection(System::Collections::IEnumerable ^ collection, Action ^ accessMethod, bool writeAccess);" />
      <MemberSignature Language="F#" Value="static member AccessCollection : System.Collections.IEnumerable * Action * bool -&gt; unit" Usage="System.Windows.Data.BindingOperations.AccessCollection (collection, accessMethod, writeAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="accessMethod" Type="System.Action" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="writeAccess" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection">액세스할 컬렉션입니다.</param>
        <param name="accessMethod">컬렉션에 수행할 작업입니다.</param>
        <param name="writeAccess"><paramref name="accessMethod" />가 컬렉션에 쓰면 <see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>EnableCollectionSynchronization으로 호출되면 응용 프로그램에서 지정한 동기화 메커니즘을 사용하여 컬렉션에 대한 액세스 권한을 부여합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllBindings">
      <MemberSignature Language="C#" Value="public static void ClearAllBindings (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllBindings(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllBindings (target As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllBindings(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member ClearAllBindings : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Data.BindingOperations.ClearAllBindings target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">바인딩을 제거할 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.DependencyObject" />에서 <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" /> 및 <see cref="T:System.Windows.Data.PriorityBinding" /> 형식의 바인딩을 포함한 모든 바인딩을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 된 개체 데이터 바인딩되지 않은 경우이 메서드는 영향을 주지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" />이 <see langword="null" />인 경우입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearBinding">
      <MemberSignature Language="C#" Value="public static void ClearBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearBinding (target As DependencyObject, dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member ClearBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; unit" Usage="System.Windows.Data.BindingOperations.ClearBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">바인딩을 제거할 개체입니다.</param>
        <param name="dp">바인딩을 제거할 종속성 속성입니다.</param>
        <summary>있는 경우 속성에서 바인딩을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 지정된 된 속성은 데이터 바인딩 사용 하 여는 <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, 또는 <xref:System.Windows.Data.MultiBinding>, 해당 하는 바인딩 식 및 복원 바인딩을 통해 설정 된 로컬 값 전에 속성의 값이이 메서드를 제거 합니다.  
  
 지정된 된 속성 데이터 바인딩되지 않은 경우이 메서드는 영향을 주지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" /> 및 <paramref name="dp" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionRegistering As EventHandler(Of CollectionRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionRegisteringEventArgs ^&gt; ^ CollectionRegistering;" />
      <MemberSignature Language="F#" Value="member this.CollectionRegistering : EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; " Usage="member this.CollectionRegistering : System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩 시스템에서 컬렉션을 통지하는 경우 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionViewRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionViewRegistering As EventHandler(Of CollectionViewRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionViewRegisteringEventArgs ^&gt; ^ CollectionViewRegistering;" />
      <MemberSignature Language="F#" Value="member this.CollectionViewRegistering : EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; " Usage="member this.CollectionViewRegistering : System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩 시스템에서 컬렉션 뷰를 통지하는 경우 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void DisableCollectionSynchronization (System.Collections.IEnumerable collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCollectionSynchronization(class System.Collections.IEnumerable collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCollectionSynchronization (collection As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCollectionSynchronization(System::Collections::IEnumerable ^ collection);" />
      <MemberSignature Language="F#" Value="static member DisableCollectionSynchronization : System.Collections.IEnumerable -&gt; unit" Usage="System.Windows.Data.BindingOperations.DisableCollectionSynchronization collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection">동기화된 액세스를 제거하는 컬렉션입니다.</param>
        <summary>지정된 컬렉션에 등록된 동기화를 제거합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectedSource">
      <MemberSignature Language="C#" Value="public static object DisconnectedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object DisconnectedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DisconnectedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ DisconnectedSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisconnectedSource : obj" Usage="System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목 컨테이너가 시각적 트리에서 제거될 때 <see cref="P:System.Windows.FrameworkElement.DataContext" />를 대체하는 개체를 가져옵니다.</summary>
        <value>항목 컨테이너가 시각적 트리에서 제거될 때 <see cref="P:System.Windows.FrameworkElement.DataContext" />를 대체하는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리 해야 할 경우이 속성을 사용 합니다 <xref:System.Windows.FrameworkElement.DataContext%2A> 항목 컨테이너의 합니다.  항목 컨테이너에 있는 항목을 표시 하는 UI 요소는는 <xref:System.Windows.Controls.ItemsControl>합니다.  경우는 <xref:System.Windows.Controls.ItemsControl> 데이터가 컬렉션에 바인딩된 각 항목에 대해 항목 컨테이너가 생성 됩니다.  경우에 따라 항목 컨테이너는 시각적 트리에서 제거됩니다.  항목 컨테이너는 제거 되는 두 가지 일반적인 경우는 기본 컬렉션에서 항목이 제거 될 때 및에 가상화가 사용 하는 경우는 <xref:System.Windows.Controls.ItemsControl>합니다.  이러한 경우에는 <xref:System.Windows.FrameworkElement.DataContext%2A> 항목 컨테이너의 속성으로 설정 됩니다는 <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> 확인 해야 하는 속성 있는지 여부를 <xref:System.Windows.FrameworkElement.DataContext%2A> 값과 같음는 <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> 에 액세스 하기 전에 <xref:System.Windows.FrameworkElement.DataContext%2A> 에서 <xref:System.Windows.FrameworkElement.DataContextChanged> 항목에 대 한 이벤트 컨테이너입니다. 항목 컨테이너 및 가상화에 대 한 자세한 내용은의 설명 부분을 참조 하세요.를 <xref:System.Windows.Controls.VirtualizingStackPanel> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableCollectionSynchronization">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>여러 스레드에 사용된 컬렉션에 대한 동기화된 액세스에 참여하도록 <see cref="T:System.Windows.Data.CollectionView" /> 개체를 활성화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

WPF 응용 프로그램을 사용 하 여 데이터의 컬렉션을 표시할 수는 <xref:System.Windows.Controls.ItemsControl> 또는 해당 서브 클래스 중 하나 (<xref:System.Windows.Controls.ListBox>를 <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>등.). WPF의 서브 클래스를 통해 컬렉션에 대 한 모든 액세스 채널 <xref:System.Windows.Data.CollectionView>합니다. 모두를 <xref:System.Windows.Controls.ItemsControl> 및 <xref:System.Windows.Data.CollectionView> 는 스레드 선호도는 <xref:System.Windows.Controls.ItemsControl> 생성 된, 즉 다른 스레드에서 사용 금지 되 고 예외가 throw 됩니다. 실제로이 제한은 컬렉션에 적용 됩니다.
 
여러 스레드에서 컬렉션을 사용 수 있습니다.   예를 들어 컬렉션을 업데이트 하려면 (추가 또는 제거 항목) "데이터 수집" 스레드에서 "user interface" 스레드에서 결과 표시 하는 동안 UI 응답 하는 동안 유지 되도록 데이터 수집 발생 합니다. 이러한 상황에서 동기화 된 ("스레드로부터 안전한") 컬렉션에 대 한 책임이 담당 합니다.   일반적으로 이렇게와 같은 간단한 잠금 메커니즘 또는 보다 세밀 하 게 동기화 메커니즘을 사용 하 여 세마포, 이벤트 등을 다시 설정 합니다.   액세스 하는 WPF에서 또한 보장 해야 컬렉션에 대 한 응용 프로그램의 액세스를 동기화 해야 하는 동안 (특히에서 <xref:System.Windows.Data.CollectionView>) 같은 동기화 메커니즘에 참여 합니다.  이 작업은 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> 메서드를 호출하여 수행합니다.
 
여러 스레드에서 컬렉션을 사용 하려면 그 중 하나는 소유 하는 UI 스레드는 <xref:System.Windows.Controls.ItemsControl>, 응용 프로그램은 책임은 다음과 같습니다:

1. 동기화 메커니즘을 선택 합니다.

1. 이 메커니즘을 사용 하 여 컬렉션에 응용 프로그램의 모든 액세스를 동기화 합니다.

1. 호출 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> 메커니즘의 WPF에 알림을 보내야 합니다.

   - 호출이 UI 스레드에서 발생 해야 합니다.

   - 다른 스레드에서 컬렉션을 사용 하 여 또는 컬렉션을 연결 하기 전에 호출이 발생 해야 합니다 <xref:System.Windows.Controls.ItemsControl>, 더 이상.

   - 호출 된 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> 호출; 오버 로드 하는 간단한 잠금 메커니즘을 사용 하는 경우는 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> 보다 정교한 메커니즘을 사용 하는 경우 오버 로드 합니다.

1. 컬렉션 및 해당 변경 알림 변경 했는지 (통해 <xref:System.Collections.Specialized.INotifyCollectionChanged>)은 다른 스레드에서 액세스할 수 없는 사용자가 개입할 수 원자성입니다.  (이 일반적으로 무료입니다. For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> 모든 변경 내용을 동기화 하 여 보호 되는이 보장 합니다.)

1. 호출 하는 경우 <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, 호출이 UI 스레드에서 있어야 합니다.

1. 여러 UI 스레드에서 동일한 컬렉션을 사용 하려는 경우 호출 해야 합니다 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (및 <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, 필요한 경우) 각 UI 스레드에 대해 개별적으로 합니다.

1. 교착 상태를 방지 합니다.  이 이미 응용 프로그램의 책임 동기화 계정 WPF의 참여를 사용 해야 하지만 동기화를 사용 하려면 선택 되 면 다음 단락에서 설명한입니다.

WPF는 다음 동작을 제공 합니다.

- <xref:System.Windows.Data.CollectionView> 지정된 동기화 메커니즘을 사용 하 여 컬렉션에 액세스 합니다.

- <xref:System.Windows.Data.CollectionView> "의 섀도 복사본"의 컬렉션을 사용 하 여 UI 스레드에서 유지 관리 합니다.

- <xref:System.Windows.Data.CollectionView.CollectionChanged> 이벤트 대기 상태가 됩니다 (모든 스레드)에 도착 합니다.

- 보류 중인 이벤트에 적용 됩니다 섀도 복사본을 UI 스레드에서 비동기적으로 수행할 수 있는 경우.

- <xref:System.Windows.Data.CollectionView> 응용 프로그램에서 볼 다른 동기화 메커니즘을 직접 사용 되지 않습니다. 이것은 WPF의 방지 하는 데 방식의 (이전 항목 7 참조)을 교착 상태가 발생 합니다.   

최종 결과에 결국 변경 내용이 표시 및 모든 스레드에서 컬렉션을 변경할 수 있습니다는 <xref:System.Windows.Controls.ItemsControl> UI 스레드 시간을 따라잡을에 하는 경우.  구현에서 UI 스레드를 포화 일반 사용자 입력에 대 한 응답 성능이 저하 되 고 스레드 UI 스레드를 백그라운드 유지에 변경 내용을 속도 제한에 조정 되었습니다.

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object lockObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object lockObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, lockObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ lockObject);" />
      <MemberSignature Language="F#" Value="static member EnableCollectionSynchronization : System.Collections.IEnumerable * obj -&gt; unit" Usage="System.Windows.Data.BindingOperations.EnableCollectionSynchronization (collection, lockObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lockObject" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection">동기화된 액세스가 필요한 컬렉션입니다.</param>
        <param name="lockObject">컬렉션에 액세스할 때 잠글 개체입니다.</param>
        <summary>간단한 잠금 메커니즘을 사용하여 여러 스레드에 용된 컬렉션에 대한 동기화된 액세스에 참여하도록 <see cref="T:System.Windows.Data.CollectionView" /> 개체를 활성화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

WPF 응용 프로그램을 사용 하 여 데이터의 컬렉션을 표시할 수는 <xref:System.Windows.Controls.ItemsControl> 또는 해당 서브 클래스 중 하나 (<xref:System.Windows.Controls.ListBox>를 <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>등.). WPF의 서브 클래스를 통해 컬렉션에 대 한 모든 액세스 채널 <xref:System.Windows.Data.CollectionView>합니다. 모두를 <xref:System.Windows.Controls.ItemsControl> 및 <xref:System.Windows.Data.CollectionView> 는 스레드 선호도는 <xref:System.Windows.Controls.ItemsControl> 생성 된, 즉 다른 스레드에서 사용 금지 되 고 예외가 throw 됩니다. 실제로이 제한은 컬렉션에 적용 됩니다.
 
여러 스레드에서 컬렉션을 사용 수 있습니다.   예를 들어 컬렉션을 업데이트 하려면 (추가 또는 제거 항목) "데이터 수집" 스레드에서 "user interface" 스레드에서 결과 표시 하는 동안 UI 응답 하는 동안 유지 되도록 데이터 수집 발생 합니다. 이러한 상황에서는 책임은 컬렉션에 액세스 하는 WPF에서 보장 하기 위해 ("스레드로부터 안전한") 액세스를 동기화 되도록 (특히에서 <xref:System.Windows.Data.CollectionView>) 같은 동기화 메커니즘에 참여 합니다. 호출 하 여는 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> 메서드를 하면이 간단한 잠금 메커니즘을 사용 하 여 합니다. 
 
그 중 하나는 소유 하는 UI 스레드를 여러 스레드에서 컬렉션을 사용 하려면를 <xref:System.Windows.Controls.ItemsControl>, 다음을 수행 해야 합니다.

1. 컬렉션에 액세스할 때 잠글 개체를를 인스턴스화하십시오.

1. 해당 개체를 잠그는 방식으로 컬렉션에 응용 프로그램의 모든 액세스를 동기화 합니다.

1. 호출 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> 간단한 잠금 메커니즘을 사용 하는 WPF에 알리기 위해.

   - 호출이 UI 스레드에서 발생 해야 합니다.

   - 다른 스레드에서 컬렉션을 사용 하 여 또는 컬렉션을 연결 하기 전에 호출이 발생 해야 합니다 <xref:System.Windows.Controls.ItemsControl>, 더 이상.

1. 컬렉션 및 해당 변경 알림 변경 했는지 (통해 <xref:System.Collections.Specialized.INotifyCollectionChanged>)은 다른 스레드에서 액세스할 수 없는 사용자가 개입할 수 원자성입니다.  (이 일반적으로 무료입니다. For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> 모든 변경 내용을 동기화 하 여 보호 되는이 보장 합니다.)

1. 호출 하는 경우 <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, 호출이 UI 스레드에서 있어야 합니다.

1. 여러 UI 스레드에서 동일한 컬렉션을 사용 하려는 경우 호출 해야 합니다 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (및 <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, 필요한 경우) 각 UI 스레드에 대해 개별적으로 합니다.

1. 교착 상태를 방지 합니다.  동기화를 사용 하도록 선택 하지만 것도 고려해 야 WPF의 참여는 동기화 후에 응용 프로그램의 책임 이미입니다. (자세한 내용은 아래 참조.)

WPF는 다음 동작을 제공 합니다.

- <xref:System.Windows.Data.CollectionView> 잠금 메커니즘을 사용 하 여 컬렉션에 액세스 합니다.

- <xref:System.Windows.Data.CollectionView> "의 섀도 복사본"의 컬렉션을 사용 하 여 UI 스레드에서 유지 관리 합니다.

- <xref:System.Windows.Data.CollectionView.CollectionChanged> 이벤트 대기 상태가 됩니다 (모든 스레드)에 도착 합니다.

- 보류 중인 이벤트에 적용 됩니다 섀도 복사본을 UI 스레드에서 비동기적으로 수행할 수 있는 경우.

- <xref:System.Windows.Data.CollectionView> 는 직접 사용 하 여 응용 프로그램에서 볼 다른 동기화 메커니즘입니다. 이것은 WPF의 방지 하는 데 방식의 (이전 항목 7 참조)을 교착 상태가 발생 합니다.   

최종 결과에 결국 변경 내용이 표시 및 모든 스레드에서 컬렉션을 변경할 수 있습니다는 <xref:System.Windows.Controls.ItemsControl> UI 스레드 시간을 따라잡을에 하는 경우.  구현에서 UI 스레드를 포화 일반 사용자 입력에 대 한 응답 성능이 저하 되 고 스레드 UI 스레드를 백그라운드 유지에 변경 내용을 속도 제한에 조정 되었습니다.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object context, System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object context, class System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, context As Object, synchronizationCallback As CollectionSynchronizationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ context, System::Windows::Data::CollectionSynchronizationCallback ^ synchronizationCallback);" />
      <MemberSignature Language="F#" Value="static member EnableCollectionSynchronization : System.Collections.IEnumerable * obj * System.Windows.Data.CollectionSynchronizationCallback -&gt; unit" Usage="System.Windows.Data.BindingOperations.EnableCollectionSynchronization (collection, context, synchronizationCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="synchronizationCallback" Type="System.Windows.Data.CollectionSynchronizationCallback" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection">동기화된 액세스가 필요한 컬렉션입니다.</param>
        <param name="context">콜백에 전달되는 개체입니다.</param>
        <param name="synchronizationCallback">컬렉션에 대한 액세스가 필요할 때마다 호출되는 콜백입니다. 한 번 하나의 스레드가 해당 컬렉션에 액세스하도록 사용할 수 있습니다.</param>
        <summary>간단한 잠금 이외의 메커니즘을 사용하여 여러 스레드에 사용된 컬렉션에 대한 동기화된 액세스에 참여하도록 <see cref="T:System.Windows.Data.CollectionView" /> 개체를 활성화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

WPF 응용 프로그램을 사용 하 여 데이터의 컬렉션을 표시할 수는 <xref:System.Windows.Controls.ItemsControl> 또는 해당 서브 클래스 중 하나 (<xref:System.Windows.Controls.ListBox>를 <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>등.). WPF의 서브 클래스를 통해 컬렉션에 대 한 모든 액세스 채널 <xref:System.Windows.Data.CollectionView>합니다. 모두를 <xref:System.Windows.Controls.ItemsControl> 및 <xref:System.Windows.Data.CollectionView> 는 스레드 선호도는 <xref:System.Windows.Controls.ItemsControl> 생성 된, 즉 다른 스레드에서 사용 금지 되 고 예외가 throw 됩니다. 실제로이 제한은 컬렉션에 적용 됩니다.
 
여러 스레드에서 컬렉션을 사용 수 있습니다.   예를 들어 컬렉션을 업데이트 하려면 (추가 또는 제거 항목) "데이터 수집" 스레드에서 "user interface" 스레드에서 결과 표시 하는 동안 UI 응답 하는 동안 유지 되도록 데이터 수집 발생 합니다. 이러한 상황에서는 책임은 컬렉션에 액세스 하는 WPF에서 보장 하기 위해 ("스레드로부터 안전한") 액세스를 동기화 되도록 (특히에서 <xref:System.Windows.Data.CollectionView>) 같은 동기화 메커니즘에 참여 합니다. 호출 하 여는 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> 메서드를 하면이 세마포, 재설정 이벤트 등와 같은 동기화 메커니즘을 사용 하 여 합니다.   그 중 하나는 소유 하는 UI 스레드를 여러 스레드에서 컬렉션을 사용 하려면를 <xref:System.Windows.Controls.ItemsControl>, 다음을 수행 해야 합니다.

1. 동기화 메커니즘을 선택 합니다.

1. 이 메커니즘을 사용 하 여 컬렉션에 응용 프로그램의 모든 액세스를 동기화 합니다.

1. 호출 된 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> 간단한 잠금 이외의 메커니즘을 사용 하는 WPF에 알리기 위해 오버 로드 합니다.

   - 호출이 UI 스레드에서 발생 해야 합니다.

   - 다른 스레드에서 컬렉션을 사용 하 여 또는 컬렉션을 연결 하기 전에 호출이 발생 해야 합니다 <xref:System.Windows.Controls.ItemsControl>, 더 이상.

1. 컬렉션 및 해당 변경 알림 변경 했는지 (통해 <xref:System.Collections.Specialized.INotifyCollectionChanged>)은 다른 스레드에서 액세스할 수 없는 사용자가 개입할 수 원자성입니다.  (이 일반적으로 무료입니다. For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> 모든 변경 내용을 동기화 하 여 보호 되는이 보장 합니다.)

1. 호출 하는 경우 <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, 호출이 UI 스레드에서 있어야 합니다.

1. 여러 UI 스레드에서 동일한 컬렉션을 사용 하려는 경우 호출 해야 합니다 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (및 <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, 필요한 경우) 각 UI 스레드에 대해 개별적으로 합니다.

1. 교착 상태를 방지 합니다.  동기화를 사용 하도록 선택 하지만 것도 고려해 야 WPF의 참여는 동기화 후에 응용 프로그램의 책임 이미입니다. (자세한 내용은 아래 참조.)

WPF는 다음 동작을 제공 합니다.

- 합니다 <xref:System.Windows.Data.CollectionView> 등록 된 호출 하 여 컬렉션을 액세스 <xref:System.Windows.Data.CollectionSynchronizationCallback> 인수를 사용 하 여:

   - `collection`: 대상의 컬렉션입니다.
   - `context`: 등록 된 컨텍스트 개체입니다.
   - `accessMethod`: 실제 액세스를 수행 하는 대리자입니다.
   - `writeAccess`: `true` 대리자 컬렉션을 수정 하는 경우 `false` 그렇지 않은 경우.

   에 <xref:System.Windows.Data.CollectionSynchronizationCallback> 컬렉션에 대해 동기화를 설정 해야 (사용 하 여는 `context` 개체 및 `writeAccess` 값을 적절 하 게), 호출는 `accessMethod`, 다음 동기화를 해제 합니다.

- <xref:System.Windows.Data.CollectionView> "의 섀도 복사본"의 컬렉션을 사용 하 여 UI 스레드에서 유지 관리 합니다.

- <xref:System.Windows.Data.CollectionView.CollectionChanged> 이벤트 대기 상태가 됩니다 (모든 스레드)에 도착 합니다.

- 보류 중인 이벤트에 적용 됩니다 섀도 복사본을 UI 스레드에서 비동기적으로 수행할 수 있는 경우.

- <xref:System.Windows.Data.CollectionView> 는 직접 사용 하 여 응용 프로그램에서 볼 다른 동기화 메커니즘입니다. 이것은 WPF의 방지 하는 데 방식의 (이전 항목 7 참조)을 교착 상태가 발생 합니다.   

최종 결과에 결국 변경 내용이 표시 및 모든 스레드에서 컬렉션을 변경할 수 있습니다는 <xref:System.Windows.Controls.ItemsControl> UI 스레드 시간을 따라잡을에 하는 경우.  구현에서 UI 스레드를 포화 일반 사용자 입력에 대 한 응답 성능이 저하 되 고 스레드 UI 스레드를 백그라운드 유지에 변경 내용을 속도 제한에 조정 되었습니다.

 합니다 `context` 매개 변수는에 전달 되는 임의의 개체를 `callback`입니다. 에 대 한 액세스를 제어 하는 데는 동기화 메커니즘을 결정 하는 데 사용할 수 있습니다 `collection`합니다. `Context` 수 `null`입니다.  
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.Binding GetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.Binding GetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBinding (target As DependencyObject, dp As DependencyProperty) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::Binding ^ GetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.Binding" Usage="System.Windows.Data.BindingOperations.GetBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><paramref name="dp" />가 있는 개체입니다.</param>
        <param name="dp">바인딩을 검색할 바인딩 대상 속성입니다.</param>
        <summary>지정된 속성에 설정된 <see cref="T:System.Windows.Data.Binding" /> 개체를 검색합니다.</summary>
        <returns>지정된 속성에 설정된 <see cref="T:System.Windows.Data.Binding" /> 개체입니다. <see cref="T:System.Windows.Data.Binding" /> 개체가 설정되지 않은 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" /> 및 <paramref name="dp" /> 매개 변수가 null인 경우</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingBase GetBindingBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingBase GetBindingBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingBase (target As DependencyObject, dp As DependencyProperty) As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingBase ^ GetBindingBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingBase : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingBase" Usage="System.Windows.Data.BindingOperations.GetBindingBase (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><paramref name="dp" />가 있는 개체입니다.</param>
        <param name="dp"><see cref="T:System.Windows.Data.BindingBase" /> 개체를 검색할 바인딩 대상 속성입니다.</param>
        <summary>지정된 속성에 설정된 <see cref="T:System.Windows.Data.BindingBase" /> 개체를 검색합니다.</summary>
        <returns>지정된 속성에 설정된 <see cref="T:System.Windows.Data.BindingBase" /> 개체입니다. 바인딩 개체가 설정되지 않은 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Data.BindingBase> 클래스에 대 한 공통 기본 클래스는 합니다 <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, 및 <xref:System.Windows.Data.MultiBinding> 클래스입니다. 사용할 수는 <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>, 및 <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A> 메서드는 바인딩 형식을 미리 알고 있는 경우 속성을 설정 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" /> 및 <paramref name="dp" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpression (target As DependencyObject, dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpression" Usage="System.Windows.Data.BindingOperations.GetBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><paramref name="dp" />가 있는 바인딩 대상 개체입니다.</param>
        <param name="dp"><see cref="T:System.Windows.Data.BindingExpression" /> 개체를 검색할 바인딩 대상 속성입니다.</param>
        <summary>지정한 개체에서 지정한 바인딩 대상 속성에 연결된 된 <see cref="T:System.Windows.Data.BindingExpression" /> 개체를 반환합니다.</summary>
        <returns>지정된 속성에 연결된 <see cref="T:System.Windows.Data.BindingExpression" /> 개체입니다. 개체가 없는 경우 <see langword="null" />입니다. 속성에 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 개체가 설정된 경우 <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" />이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingExpression> 개체 바인딩 소스에서 바인딩 대상 사이의 연결을 유지 관리 합니다. 가져올 수 있습니다 합니다 <xref:System.Windows.Data.BindingExpression> 이 정적 메서드를 호출 하거나 호출 하 여 개체를 <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> 메서드를 데이터 바인딩된 <xref:System.Windows.FrameworkElement> 또는 <xref:System.Windows.FrameworkContentElement> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 구현을 보여 줍니다를 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 를 사용 하는 이벤트 처리기를 <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> 메서드를 <xref:System.Windows.Data.BindingExpression> 를 호출 하는 <xref:System.Windows.Data.BindingExpression.DataItem%2A> 바인딩 소스 개체에 액세스 하는 속성.  
  
 합니다 <xref:System.Windows.Controls.TextBlock> `SavingsText` 바인딩 대상 개체인 및 <xref:System.Windows.Controls.TextBlock.Text%2A> 바인딩 대상 속성입니다.  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" /> 및 <paramref name="dp" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpressionBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase GetBindingExpressionBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase GetBindingExpressionBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpressionBase (target As DependencyObject, dp As DependencyProperty) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ GetBindingExpressionBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingExpressionBase : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpressionBase" Usage="System.Windows.Data.BindingOperations.GetBindingExpressionBase (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><paramref name="dp" />가 있는 개체입니다.</param>
        <param name="dp"><see cref="T:System.Windows.Data.BindingExpressionBase" /> 개체를 검색할 바인딩 대상 속성입니다.</param>
        <summary>지정된 속성에 설정된 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 개체를 검색합니다.</summary>
        <returns>지정된 속성에 설정된 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 개체입니다. 바인딩 개체가 설정되지 않은 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Data.BindingExpressionBase> 클래스에 대 한 공통 기본 클래스는 합니다 <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>, 및 <xref:System.Windows.Data.MultiBindingExpression> 클래스입니다. 사용할 수는 <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>, 및 <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A> 메서드를 이미 아는 속성에는 바인딩 형식이 설정 된 경우.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" /> 및 <paramref name="dp" /> 매개 변수가 null인 경우</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBinding GetMultiBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBinding GetMultiBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBinding (target As DependencyObject, dp As DependencyProperty) As MultiBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBinding ^ GetMultiBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetMultiBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.MultiBinding" Usage="System.Windows.Data.BindingOperations.GetMultiBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><paramref name="dp" />가 있는 개체입니다.</param>
        <param name="dp">바인딩을 검색할 바인딩 대상 속성입니다.</param>
        <summary>지정된 속성에 설정된 <see cref="T:System.Windows.Data.MultiBinding" /> 개체를 검색합니다.</summary>
        <returns>지정된 속성에 설정된 <see cref="T:System.Windows.Data.MultiBinding" /> 개체입니다. <see cref="T:System.Windows.Data.MultiBinding" /> 개체가 설정되지 않은 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" /> 및 <paramref name="dp" /> 매개 변수가 null인 경우</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBindingExpression GetMultiBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBindingExpression GetMultiBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBindingExpression (target As DependencyObject, dp As DependencyProperty) As MultiBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBindingExpression ^ GetMultiBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetMultiBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.MultiBindingExpression" Usage="System.Windows.Data.BindingOperations.GetMultiBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><paramref name="dp" />가 있는 바인딩 대상 개체입니다.</param>
        <param name="dp"><see cref="T:System.Windows.Data.MultiBindingExpression" /> 개체를 검색할 바인딩 대상 속성입니다.</param>
        <summary>지정한 개체에서 지정한 바인딩 대상 속성에 연결된 된 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 개체를 반환합니다.</summary>
        <returns>지정된 속성에 연결된 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 개체입니다. 개체가 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 속성에 연결된 <xref:System.Windows.Data.MultiBindingExpression> 개체입니다. 개체가 없는 경우 `null`입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" /> 및 <paramref name="dp" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBinding GetPriorityBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBinding GetPriorityBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBinding (target As DependencyObject, dp As DependencyProperty) As PriorityBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBinding ^ GetPriorityBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetPriorityBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.PriorityBinding" Usage="System.Windows.Data.BindingOperations.GetPriorityBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><paramref name="dp" />가 있는 개체입니다.</param>
        <param name="dp">바인딩을 검색할 바인딩 대상 속성입니다.</param>
        <summary>지정된 속성에 설정된 <see cref="T:System.Windows.Data.PriorityBinding" /> 개체를 검색합니다.</summary>
        <returns>지정된 속성에 설정된 <see cref="T:System.Windows.Data.PriorityBinding" /> 개체입니다. <see cref="T:System.Windows.Data.PriorityBinding" /> 개체가 설정되지 않은 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" /> 및 <paramref name="dp" /> 매개 변수가 null인 경우</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBindingExpression (target As DependencyObject, dp As DependencyProperty) As PriorityBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBindingExpression ^ GetPriorityBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetPriorityBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.PriorityBindingExpression" Usage="System.Windows.Data.BindingOperations.GetPriorityBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><paramref name="dp" />가 있는 바인딩 대상 개체입니다.</param>
        <param name="dp"><see cref="T:System.Windows.Data.PriorityBindingExpression" /> 개체를 검색할 바인딩 대상 속성입니다.</param>
        <summary>지정한 개체에서 지정한 바인딩 대상 속성에 연결된 된 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 개체를 반환합니다.</summary>
        <returns>지정된 속성에 연결된 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 개체입니다. 개체가 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" /> 및 <paramref name="dp" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindingGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindingGroups (root As DependencyObject) As ReadOnlyCollection(Of BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingGroup ^&gt; ^ GetSourceUpdatingBindingGroups(System::Windows::DependencyObject ^ root);" />
      <MemberSignature Language="F#" Value="static member GetSourceUpdatingBindingGroups : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;" Usage="System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="root">바인딩 그룹을 가져올 루트 <see cref="T:System.Windows.UIElement" />입니다.  이 메서드는 이 요소 또는 해당 하위 항목 요소와 연결된 <see cref="T:System.Windows.Data.BindingGroup" /> 개체를 반환합니다.</param>
        <summary>잘못된 값이 있거나 대상 값이 소스를 업데이트하지 않은 모든 <see cref="T:System.Windows.Data.BindingGroup" /> 개체를 가져옵니다.</summary>
        <returns>지정된 요소와 연결되었고 값이 유효하지 않거나 대상 값이 소스를 업데이트하지 않은 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `root` 됩니다 `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> 모두 반환 <xref:System.Windows.Data.BindingGroup> 유효 하지 않거나 업데이트 되지 않은 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindings">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindings (root As DependencyObject) As ReadOnlyCollection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ GetSourceUpdatingBindings(System::Windows::DependencyObject ^ root);" />
      <MemberSignature Language="F#" Value="static member GetSourceUpdatingBindings : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingOperations.GetSourceUpdatingBindings root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="root">바인딩 그룹을 가져올 루트 <see cref="T:System.Windows.UIElement" />입니다.  이 메서드는 이 요소 또는 해당 하위 항목 요소와 연결된 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 개체를 반환합니다.</param>
        <summary>잘못된 값이 있거나 대상 값이 소스를 업데이트하지 않은 모든 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 개체를 가져옵니다.</summary>
        <returns>지정된 요소와 연결되었고 값이 유효하지 않거나 대상 값이 소스를 업데이트하지 않은 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 개체의 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `root` 됩니다 `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> 모두 반환 <xref:System.Windows.Data.BindingExpressionBase> 유효 하지 않거나 업데이트 되지 않은 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataBound">
      <MemberSignature Language="C#" Value="public static bool IsDataBound (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDataBound(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDataBound (target As DependencyObject, dp As DependencyProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDataBound(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member IsDataBound : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.Data.BindingOperations.IsDataBound (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><paramref name="dp" />가 있는 개체입니다.</param>
        <param name="dp">확인할 종속성 속성입니다.</param>
        <summary>지정된 속성이 현재 데이터 바인딩되어 있는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns>지정된 속성이 데이터 바인딩되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="target" />이 <see langword="null" />인 경우입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetBinding (target As DependencyObject, dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberSignature Language="F#" Value="static member SetBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty * System.Windows.Data.BindingBase -&gt; System.Windows.Data.BindingExpressionBase" Usage="System.Windows.Data.BindingOperations.SetBinding (target, dp, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="target">바인딩할 바인딩 대상입니다.</param>
        <param name="dp">바인딩할 대상 속성입니다.</param>
        <param name="binding">바인딩을 설명하는 <see cref="T:System.Windows.Data.BindingBase" /> 개체입니다.</param>
        <summary><see cref="T:System.Windows.Data.BindingExpressionBase" />의 새 인스턴스를 만들어 지정된 바인딩 대상 속성과 연결합니다.</summary>
        <returns>지정된 속성을 사용하여 만들고 연결하는 <see cref="T:System.Windows.Data.BindingExpressionBase" />의 인스턴스입니다. <see cref="T:System.Windows.Data.BindingExpressionBase" /> 클래스는 <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" /> 및 <see cref="T:System.Windows.Data.PriorityBindingExpression" />의 기본 클래스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는의 새 인스턴스를 만듭니다는 <xref:System.Windows.Data.BindingExpressionBase> 지정된 된 개체의 지정 된 종속성 속성을 사용 하 여 인스턴스를 연결 합니다. 이 메서드는 임의의에 바인딩을 연결 하는 방법은 <xref:System.Windows.DependencyObject> 자체 SetBinding 메서드를 노출 하지 않을 수 있습니다.  
  
   
  
## Examples  
 다음 예에서는 바인딩을 설정 하려면이 메서드를 사용 하는 방법을 보여 줍니다. 이 예에서 `myNewBindDef` 되는 <xref:System.Windows.Data.Binding> 바인딩을 설명 하는 개체입니다. 바인딩 대상은 `myDateText`, 인스턴스는 <xref:System.Windows.Controls.TextBlock> 클래스입니다.  
  
 [!code-csharp[BindConversion#BOSetBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#bosetbinding)]
 [!code-vb[BindConversion#BOSetBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#bosetbinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="binding" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>