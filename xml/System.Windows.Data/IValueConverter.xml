<Type Name="IValueConverter" FullName="System.Windows.Data.IValueConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b8c6cb41e50e3c60f13fdc97930862b45ee2d24b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37521901" /></Metadata><TypeSignature Language="C#" Value="public interface IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueConverter" />
  <TypeSignature Language="F#" Value="type IValueConverter = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>바인딩에 사용자 지정 논리를 적용할 방법을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바인딩을 사용 하 여 값 변환기를 연결 하려는 경우 구현 하는 클래스를 만듭니다는 <xref:System.Windows.Data.IValueConverter> 인터페이스를 구현할 수는 <xref:System.Windows.Data.IValueConverter.Convert%2A> 및 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 메서드. 변환기 형식 간에 데이터 변경, 문화권 정보를 기반으로 데이터를 변환 하거나 프레젠테이션의 다른 측면을 수정할 수 있습니다. 몇 가지 일반적인 변환기 시나리오의 예에 "데이터 변환"을 참조 하십시오 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.  
  
 값 변환기는 문화권을 인식 합니다. 모두를 <xref:System.Windows.Data.IValueConverter.Convert%2A> 하 고 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 메서드를 `culture` 문화권 정보를 나타내는 매개 변수입니다. 문화권 정보를 변환과 관련이 없는 경우 사용자 지정 변환기에서 해당 매개 변수를 무시할 수 있습니다.  
  
 합니다 <xref:System.Windows.Data.IValueConverter.Convert%2A> 하 고 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 메서드에도 라는 매개 변수를 `parameter` 다른 매개 변수와 함께 변환기의 동일한 인스턴스를 사용할 수 있도록 합니다. 예를 들어, 다양 한 형식의 사용 하는 입력된 매개 변수를 기반으로 데이터를 생성 하는 형식 변환기를 작성할 수 있습니다. 사용할 수는 <xref:System.Windows.Data.Binding.ConverterParameter%2A> 의 합니다 <xref:System.Windows.Data.Binding> 매개 변수를 인수로 전달 하는 클래스는 <xref:System.Windows.Data.IValueConverter.Convert%2A> 및 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 메서드.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
    <altmember cref="T:System.Windows.Data.ValueConversionAttribute" />
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iValueConverter.Convert (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">바인딩 소스에서 생성한 값입니다.</param>
        <param name="targetType">바인딩 대상 속성의 형식입니다.</param>
        <param name="parameter">사용할 변환기 매개 변수입니다.</param>
        <param name="culture">변환기에서 사용할 문화권입니다.</param>
        <summary>값을 변환합니다.</summary>
        <returns>변환된 값입니다. 메서드에서 <see langword="null" />을 반환하면 유효한 null 값이 사용됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩 엔진 바인딩 소스에서 바인딩 대상 값에 전파할 때이 메서드를 호출 합니다.  
  
 데이터 바인딩 엔진에서 사용자가 제공한 변환기에서 throw 된 예외를 catch 하지 않습니다. throw 되는 모든 예외는 <xref:System.Windows.Data.IValueConverter.Convert%2A> 메서드 또는 메서드에서 throw 된 예외로는 <xref:System.Windows.Data.IValueConverter.Convert%2A> 메서드 호출에서 런타임 오류로 처리 됩니다. 반환 하 여 예상 되는 문제를 처리 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>합니다.  
  
 반환 값 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> 변환기가 값을 생성 함을 나타내며 바인딩에서 사용 하는 <xref:System.Windows.Data.BindingBase.FallbackValue%2A>사용 가능한 경우, 또는 기본값을 대신 합니다.  
  
 반환 값 <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> 바인딩이 값을 전송 하거나 사용 하지 않는 나타냅니다는 <xref:System.Windows.Data.BindingBase.FallbackValue%2A> 또는 기본 값입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertBack(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iValueConverter.ConvertBack (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">바인딩 대상에서 생성한 값입니다.</param>
        <param name="targetType">변환할 대상 형식입니다.</param>
        <param name="parameter">사용할 변환기 매개 변수입니다.</param>
        <param name="culture">변환기에서 사용할 문화권입니다.</param>
        <summary>값을 변환합니다.</summary>
        <returns>변환된 값입니다. 메서드에서 <see langword="null" />을 반환하면 유효한 null 값이 사용됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩 엔진 바인딩 소스에서 바인딩 대상 값에 전파할 때이 메서드를 호출 합니다.  
  
 이 메서드의 구현은의 역함수 값 이어야 합니다는 <xref:System.Windows.Data.IValueConverter.Convert%2A> 메서드.  
  
 데이터 바인딩 엔진에서 사용자가 제공한 변환기에서 throw 된 예외를 catch 하지 않습니다. throw 되는 모든 예외는 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 메서드 또는 메서드에서 throw 된 예외로는 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 메서드 호출에서 런타임 오류로 처리 됩니다. 반환 하 여 예상 되는 문제를 처리할 <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>합니다.  
  
 반환 값 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> 변환기가 값을 생성 함을 나타내며 바인딩에서 사용 하는 <xref:System.Windows.Data.BindingBase.FallbackValue%2A>사용 가능한 경우, 또는 기본값을 대신 합니다.  
  
 반환 값 <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> 바인딩이 값을 전송 하거나 사용 하지 않는 나타냅니다는 <xref:System.Windows.Data.BindingBase.FallbackValue%2A> 또는 기본 값입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>