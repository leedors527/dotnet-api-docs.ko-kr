<Type Name="MultiBinding" FullName="System.Windows.Data.MultiBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="294b7b6af0117116a9d26758620b1f71e08c5302" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56397196" /></Metadata><TypeSignature Language="C#" Value="public class MultiBinding : System.Windows.Data.BindingBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultiBinding extends System.Windows.Data.BindingBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.MultiBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class MultiBinding&#xA;Inherits BindingBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiBinding : System::Windows::Data::BindingBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type MultiBinding = class&#xA;    inherit BindingBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Bindings")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>단일 바인딩 대상 속성에 연결된 <see cref="T:System.Windows.Data.Binding" /> 개체의 컬렉션을 설명합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여러 바인딩을 지정할 수 있습니다는 <xref:System.Windows.Data.MultiBinding> 개체입니다. 사용 하는 경우는 <xref:System.Windows.Data.MultiBinding> 개체 변환기를 사용 하 여 해당 바인딩의 값을 기반으로 바인딩 대상에 대 한 최종 값을 생성 합니다. 예를 들어 색이 동일 하거나 다른 바인딩 소스 개체의 값일 수 있는 빨강, 파랑 및 녹색 값에서 계산 될 수 있습니다. 이동할 때 대상에서 소스를 바인딩으로 공급 되는 값 집합을 대상 속성 값을 변환 됩니다.  
  
 값을 <xref:System.Windows.Data.MultiBinding.Mode%2A> 및 <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> 속성의 기능을 확인 합니다 <xref:System.Windows.Data.MultiBinding> 개별 바인딩은 이러한 속성을 재정의 하지 않는 한 컬렉션의 모든 바인딩에 대 한 기본값으로 사용 됩니다. 예를 들어 경우는 <xref:System.Windows.Data.MultiBinding.Mode%2A> 속성에는 <xref:System.Windows.Data.MultiBinding> 개체로 설정 됩니다 <xref:System.Windows.Data.BindingMode.TwoWay>, 컬렉션의 모든 바인딩 간주 됩니다 <xref:System.Windows.Data.BindingMode.TwoWay> 다른 설정 하지 않으면 <xref:System.Windows.Data.MultiBinding.Mode%2A> 바인딩 중 하나에 값 명시적으로 합니다. 자세한 내용은 참조는 <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=nameWithType> 및 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=nameWithType> 속성입니다.  
  
 <xref:System.Windows.Data.MultiBinding>에서는 현재 <xref:System.Windows.Data.Binding> 형식의 개체만 지원하고 <xref:System.Windows.Data.MultiBinding> 또는 <xref:System.Windows.Data.PriorityBinding>을 지원하지 않습니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultiBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Data.MultiBinding" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingBase&gt; Bindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingBase&gt; Bindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.Bindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bindings As Collection(Of BindingBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingBase ^&gt; ^ Bindings { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bindings : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingBase&gt;" Usage="System.Windows.Data.MultiBinding.Bindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Data.MultiBinding" /> 인스턴스 내 <see cref="T:System.Windows.Data.Binding" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Data.Binding" /> 개체의 컬렉션입니다. <see cref="T:System.Windows.Data.MultiBinding" />에서는 현재 <see cref="T:System.Windows.Data.Binding" /> 형식의 개체만 지원하고 <see cref="T:System.Windows.Data.MultiBinding" /> 또는 <see cref="T:System.Windows.Data.PriorityBinding" />을 지원하지 않습니다. <see cref="T:System.Windows.Data.MultiBinding" /> 개체에 <see cref="T:System.Windows.Data.Binding" /> 자식을 추가하면 <see cref="T:System.Windows.Data.MultiBinding" /> 개체에 대한 <see cref="T:System.Windows.Data.BindingBase" /> 컬렉션에 자식이 암시적으로 추가됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 속성 설정할 수 있습니다 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 만 표시 되는 구문을 사용 하 여 또는 컬렉션 개체를 액세스 및와 같은 여러 메서드를 사용 하 여 `Add`입니다. 컬렉션 개체에 액세스 하는 데 속성이 읽기 전용 이지만 컬렉션 자체는 읽기/쓰기입니다.  
  
<a name="xamlPropertyElementUsage_Bindings"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  oneOrMoreBindings  
</object>  
  
```  
  
<a name="xamlValues_Bindings"></a>   
## <a name="xaml-values"></a>XAML 값  
 *oneOrMoreBindings*  
 하나 이상의 <xref:System.Windows.Data.Binding> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IMultiValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IMultiValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IMultiValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IMultiValueConverter ^ Converter { System::Windows::Data::IMultiValueConverter ^ get(); void set(System::Windows::Data::IMultiValueConverter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.Windows.Data.IMultiValueConverter with get, set" Usage="System.Windows.Data.MultiBinding.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IMultiValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>소스 값을 대상 값으로 변환하거나 그 반대로 변환하는 데 사용할 변환기를 가져오거나 설정합니다.</summary>
        <value>사용할 변환기를 나타내는 <see cref="T:System.Windows.Data.IMultiValueConverter" /> 형식의 값입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컬렉션의 개별 바인딩 고유한 값을 가질 수 <xref:System.Windows.Data.Binding.Converter%2A>입니다. 자세한 내용은 <xref:System.Windows.Data.IValueConverter>를 참조하십시오.  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a>XAML 값  
 *myConverter*  
 구현 하는 클래스에 대 한 리소스 참조를 <xref:System.Windows.Data.IMultiValueConverter> 인터페이스의 구현을 포함 하는 합니다 <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> 및 <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> 메서드. 값 변환기를 참조 하려면 사용 합니다 [태그 확장 및 WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterCulture : System.Globalization.CultureInfo with get, set" Usage="System.Windows.Data.MultiBinding.ConverterCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Globalization.CultureInfo" />에 의해 래핑된 바인딩에 할당된 변환기에 적용되거나 <see cref="T:System.Windows.Data.MultiBinding" /> 자체에 적용되는 <see cref="T:System.Windows.Data.MultiBinding" /> 개체를 가져오거나 설정합니다.</summary>
        <value>유효한 <see cref="T:System.Globalization.CultureInfo" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ConverterCulture"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object ConverterCulture="ietfLanguageTag"/>  
```  
  
<a name="xamlValues_ConverterCulture"></a>   
## <a name="xaml-values"></a>XAML 값  
 *ietfLanguageTag*  
 설정 하는 데 사용 하는 문자열을 <xref:System.Globalization.CultureInfo>입니다. 이 문자열은 내부적으로 호출을 사용 합니다. <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A>. 문자열 형식에 대 한 자세한 내용은 참조 하세요. <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterParameter : obj with get, set" Usage="System.Windows.Data.MultiBinding.ConverterParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>추가 정보로 변환기에 전달할 선택적 매개 변수를 가져오거나 설정합니다.</summary>
        <value>변환기에 전달할 매개 변수입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_ConverterParameter"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.ConverterParameter>  
    converterParameter  
  </object.ConverterParameter>  
</object>  
```  
  
<a name="xamlAttributeUsage_ConverterParameter"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="converterParameter" />  
```  
  
<a name="xamlValues_ConverterParameter"></a>   
## <a name="xaml-values"></a>XAML 값  
 *converterParameter*  
 정 및 속성 둘 다 형식이 사용 되는 XAML 기능에 따라 문자열 또는 개체 요소가 될 수 있는 변환기에서 예상 되는 형식 및 변환기를 구현 하는 값입니다. 변환기를 통해 해당 형식을 사용 합니다 `parameter` 매개 변수에서 정의 된 대로 해당 <xref:System.Windows.Data.IValueConverter.Convert%2A> 및 <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> 구현 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Data.BindingMode with get, set" Usage="System.Windows.Data.MultiBinding.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 바인딩의 데이터 흐름의 방향을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Data.BindingMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Data.BindingMode.Default" />이며, 대상 종속성 속성의 기본 바인딩 모드 값을 반환합니다. 그러나 기본값은 각 종속성 속성에 따라 다릅니다. 일반적으로 <see cref="P:System.Windows.Controls.TextBox.Text" />처럼 사용자가 편집 가능한 컨트롤 속성의 기본값은 양방향 바인딩으로 설정되지만 대부분의 다른 속성 기본값은 단방향 바인딩으로 설정됩니다.  
  
종속성 속성이 기본적으로 단방향 또는 양방향으로 바인드되는지를 프로그래밍 방식으로 결정하려면 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />를 사용하여 속성의 속성 메타데이터를 가져온 후 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 속성의 부울 값을 확인합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Windows.Data.MultiBinding.Mode%2A> 및 <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> 속성의 기능을 확인 합니다 <xref:System.Windows.Data.MultiBinding> 개별 바인딩은 이러한 속성을 재정의 하지 않는 한 컬렉션의 모든 바인딩에 대 한 기본값으로 사용 됩니다. 예를 들어 경우는 <xref:System.Windows.Data.MultiBinding.Mode%2A> 속성에는 <xref:System.Windows.Data.MultiBinding> 개체로 설정 됩니다 <xref:System.Windows.Data.BindingMode.TwoWay>, 컬렉션의 모든 바인딩 간주 됩니다 <xref:System.Windows.Data.BindingMode.TwoWay> 다른 설정 하지 않으면 <xref:System.Windows.Data.MultiBinding.Mode%2A> 바인딩 중 하나에 값 명시적으로 합니다. 자세한 내용은 참조는 <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=nameWithType> 및 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=nameWithType> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnSourceUpdated : bool with get, set" Usage="System.Windows.Data.MultiBinding.NotifyOnSourceUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>값이 바인딩 대상에서 바인딩 소스로 전송되는 경우 <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> 이벤트를 발생시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>바인딩 소스 값이 업데이트될 때 <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> 이벤트를 발생시키면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnTargetUpdated : bool with get, set" Usage="System.Windows.Data.MultiBinding.NotifyOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>값이 바인딩 소스에서 바인딩 대상으로 전송될 때 <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> 이벤트를 발생시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>바인딩 대상 값이 업데이트될 때 <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> 이벤트가 발생하면 <see langword="true" />이고, 발생하지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.MultiBinding.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바인딩된 요소에서 <see cref="E:System.Windows.Controls.Validation.Error" /> 연결된 이벤트를 발생시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see langword="true" /> 경우는 <see cref="E:System.Windows.Controls.Validation.Error" /> 연결 된 이벤트 고, 그렇지 않으면 원본 업데이트 중에 유효성 검사 오류가 있을 경우 바인딩된 요소에서 발생 됩니다 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.NotifyOnValidationError" />
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidationRules" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.ShouldSerializeBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeBindings : unit -&gt; bool" Usage="multiBinding.ShouldSerializeBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Data.MultiBinding.Bindings" /> 속성을 유지해야 하는지를 나타냅니다.</summary>
        <returns>속성 값이 기본값에서 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 `ShouldSerialize` 때문에 메서드가 제공 됩니다는 <xref:System.Windows.Data.MultiBinding.Bindings%2A> 속성에는 간단한 기본 값이 없습니다. 이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다. 에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출 합니다 <xref:System.Windows.Data.MultiBinding> 통합 하는 고유한 컨트롤을 개발 하거나는 <xref:System.Windows.Data.MultiBinding>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeValidationRules : unit -&gt; bool" Usage="multiBinding.ShouldSerializeValidationRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Data.MultiBinding.ValidationRules" /> 속성을 유지해야 하는지를 나타냅니다.</summary>
        <returns>속성 값이 기본값에서 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 `ShouldSerialize` 때문에 메서드가 제공 됩니다는 <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> 속성에는 간단한 기본 값이 없습니다. 이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다. 에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출 합니다 <xref:System.Windows.Data.MultiBinding> 통합 하는 고유한 컨트롤을 개발 하거나는 <xref:System.Windows.Data.MultiBinding>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">추가할 자식 개체입니다.</param>
        <summary>자식 개체를 추가합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">개체에 추가할 텍스트입니다.</param>
        <summary>노드의 텍스트 콘텐츠를 개체에 추가합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceExceptionFilter : System.Windows.Data.UpdateSourceExceptionFilterCallback with get, set" Usage="System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바인딩 소스 값을 업데이트하는 동안 바인딩 엔진에서 발생하는 예외를 처리하기 위한 사용자 지정 논리를 제공하는 데 사용할 수 있는 처리기를 가져오거나 설정합니다. 이는 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />을 <see cref="T:System.Windows.Data.MultiBinding" /> 개체와 연결한 경우에만 적용됩니다.</summary>
        <value>바인딩 소스 값을 업데이트하는 동안 바인딩 엔진에서 발생하는 예외를 처리하기 위한 사용자 지정 논리를 제공하는 메서드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ExceptionValidationRule> 클래스 바인딩 소스 속성을 업데이트 하는 동안 throw 된 예외에 대 한 확인 하는 기본 제공 유효성 검사 규칙을 나타냅니다. 연결한 경우 합니다 <xref:System.Windows.Controls.ExceptionValidationRule> 개체에 <xref:System.Windows.Data.MultiBinding> 개체를 이러한 예외를 처리 하는 것에 대 한 사용자 지정 논리를 제공 하는 처리기를 설정 하려면이 속성을 사용할 수 있습니다.  
  
 예제를 보려면 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=nameWithType>를 참조하십시오.  
  
 유효성 검사 프로세스에 대 한 자세한 내용은 <xref:System.Windows.Data.MultiBinding> 개체는 <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceTrigger : System.Windows.Data.UpdateSourceTrigger with get, set" Usage="System.Windows.Data.MultiBinding.UpdateSourceTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바인딩 소스 업데이트의 타이밍을 결정하는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />이며, 대상 종속성 속성의 기본 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 값을 반환합니다. 그러나 대부분의 종속성 속성 기본값이 <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />인 반면 <see cref="P:System.Windows.Controls.TextBox.Text" /> 속성은 기본값이 <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />입니다.  
  
종속성 속성의 기본 <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 값을 프로그래밍 방식으로 결정하려면 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />를 사용하여 속성의 속성 메타데이터를 가져온 후 <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> 속성의 값을 확인합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Windows.Data.MultiBinding.Mode%2A> 및 <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> 속성의 기능을 확인 합니다 <xref:System.Windows.Data.MultiBinding> 개별 바인딩은 이러한 속성을 재정의 하지 않는 한 컬렉션의 모든 바인딩에 대 한 기본값으로 사용 됩니다. 예를 들어 경우는 <xref:System.Windows.Data.MultiBinding.Mode%2A> 속성에는 <xref:System.Windows.Data.MultiBinding> 개체로 설정 됩니다 <xref:System.Windows.Data.BindingMode.TwoWay>, 컬렉션의 모든 바인딩 간주 됩니다 <xref:System.Windows.Data.BindingMode.TwoWay> 다른 설정 하지 않으면 <xref:System.Windows.Data.MultiBinding.Mode%2A> 바인딩 중 하나에 값 명시적으로 합니다. 자세한 내용은 참조는 <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=nameWithType> 및 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=nameWithType> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnDataErrors : bool with get, set" Usage="System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.DataErrorValidationRule" />을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Controls.DataErrorValidationRule" />을 포함하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 대신 제공이 속성을 설정 합니다 <xref:System.Windows.Controls.DataErrorValidationRule> 요소가 명시적으로 합니다. 합니다 <xref:System.Windows.Controls.DataErrorValidationRule> 에서 발생 하는 오류를 검사 하는 기본 제공 유효성 검사 규칙을 <xref:System.ComponentModel.IDataErrorInfo> 소스 개체의 구현입니다. 바인딩 엔진에서 만드는 오류가 발생 하는 경우는 <xref:System.Windows.Controls.ValidationError> 오류로 추가 합니다 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 바인딩된 요소의 컬렉션입니다. 오류가 없는 다른 규칙 유효성 검사 문제를 발생 하지 않는 한이 유효성 검사 의견을 지웁니다.  
  
 유효성 검사 프로세스에 대 한 자세한 내용은 <xref:System.Windows.Data.MultiBinding> 개체는 <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> 속성입니다.  
  
 <xref:System.Windows.Data.MultiBinding.ValidatesOnDataErrors%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.  자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnExceptions : bool with get, set" Usage="System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.ExceptionValidationRule" />을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Controls.ExceptionValidationRule" />을 포함하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 대신 제공이 속성을 설정 합니다 <xref:System.Windows.Controls.ExceptionValidationRule> 요소가 명시적으로 합니다. <xref:System.Windows.Controls.ExceptionValidationRule> 원본 속성을 업데이트 하는 동안 throw 된 예외를 검사 하는 기본 제공 유효성 검사 규칙입니다. 예외가 throw 되 면 바인딩 엔진에서 만드는 <xref:System.Windows.Controls.ValidationError> 예외를 사용 하 여 추가 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> 바인딩된 요소의 컬렉션입니다. 오류가 없는 다른 규칙 유효성 검사 문제를 발생 하지 않는 한이 유효성 검사 의견을 지웁니다.  
  
 유효성 검사 프로세스에 대 한 자세한 내용은 <xref:System.Windows.Data.MultiBinding> 개체는 <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> 속성입니다.  
  
 <xref:System.Windows.Data.MultiBinding.ValidatesOnExceptions%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.  자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataErrors : bool with get, set" Usage="System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />을 포함하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 <xref:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors%2A> 됩니다 `true`, 바인딩을 확인 하 고 구현 하는 데이터 소스에 의해 발생 하는 오류를 보고 <xref:System.ComponentModel.INotifyDataErrorInfo>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.MultiBinding.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Controls.ValidationRule" /> 인스턴스에 대한 <see cref="T:System.Windows.Data.MultiBinding" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>이 <see cref="T:System.Windows.Controls.ValidationRule" /> 인스턴스에 대한 <see cref="T:System.Windows.Data.MultiBinding" /> 개체의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 둘 다에서 유효성 검사 규칙을 설정할 수 있습니다 합니다 <xref:System.Windows.Data.MultiBinding> 개체와 개별 <xref:System.Windows.Data.Binding> 개체는 <xref:System.Windows.Data.MultiBinding> 개체입니다. 바인딩 엔진에서 평가 <xref:System.Windows.Data.MultiBinding.ValidationRules%2A> 에 <xref:System.Windows.Data.MultiBinding> 바인딩 대상 속성의 값이 이동할 때 개체는 <xref:System.Windows.Data.IMultiValueConverter> 개체입니다. 그런 다음 개별는 바인딩의 바인딩 소스 속성에 값이 변환기에서 이동할 때 바인딩 엔진 평가 <xref:System.Windows.Data.Binding.ValidationRules%2A> 에 <xref:System.Windows.Data.Binding> 개체입니다.  
  
 유효성 검사 프로세스 및 무효화 될 시각적 피드백을 제공 하는 방법에 대 한 자세한 내용은 "데이터 유효성 검사"를 참조 하세요 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)합니다.  
  
> [!NOTE]
>  이 속성 설정할 수 있습니다 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 표시 된 구문을 사용 해야만 또는 컬렉션 개체를 액세스 및와 같은 여러 메서드를 사용 하 여 `Add`입니다. 컬렉션 개체에 액세스 하는 데 속성이 읽기 전용 컬렉션 자체는 읽기 / 쓰기입니다.  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a>XAML 값  
 *oneOrMoreValidationRules*  
 하나 이상의 <xref:System.Windows.Controls.ValidationRule> 개체입니다. 사용할 수는 <xref:System.Windows.Controls.ExceptionValidationRule> 서브클래싱하 여 사용자 지정 규칙을 만들거나 클래스는 <xref:System.Windows.Controls.ValidationRule> 클래스.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159972">바인딩 유효성 검사 샘플</related>
      </Docs>
    </Member>
  </Members>
</Type>