<Type Name="SerializerWriter" FullName="System.Windows.Documents.Serialization.SerializerWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6ed7ca7247d55df47c1b62be7f1fb88bb7e08d1" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52248986" /></Metadata><TypeSignature Language="C#" Value="public abstract class SerializerWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SerializerWriter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Serialization.SerializerWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SerializerWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerializerWriter abstract" />
  <TypeSignature Language="F#" Value="type SerializerWriter = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>플러그 인 문서 출력 직렬 변환기를 구현하는 데 필요한 추상 메서드 및 이벤트를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Documents.Serialization.SerializerWriter>합니다.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 [!code-csharp[DocumentSerialize#DocSerializeFileFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializefilefilter)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerializerWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SerializerWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스의 <xref:System.Windows.Documents.Serialization.SerializerWriter> 를 사용 하 여 만들어야 합니다 <xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> 메서드의 <xref:System.Windows.Documents.Serialization.SerializerProvider> 개체가 아니라는 <xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A> 메서드의 <xref:System.Windows.Documents.Serialization.ISerializerFactory> 개체.  
  
   
  
## Examples  
 다음 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Windows.Documents.Serialization.SerializerWriter> 를 사용 하는 <xref:System.Windows.Documents.Serialization.SerializerProvider>합니다.<xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> 메서드를 재정의합니다.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public abstract void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelAsync();" />
      <MemberSignature Language="F#" Value="abstract member CancelAsync : unit -&gt; unit" Usage="serializerWriter.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 비동기 쓰기 작업을 취소합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateVisualsCollator">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 데이터 정렬된 <see cref="T:System.Windows.Media.Visual" /> 요소를 serialization <see cref="T:System.IO.Stream" />에 쓰는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />를 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> 메서드.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateVisualsCollator () As SerializerWriterCollator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Documents::Serialization::SerializerWriterCollator ^ CreateVisualsCollator();" />
      <MemberSignature Language="F#" Value="abstract member CreateVisualsCollator : unit -&gt; System.Windows.Documents.Serialization.SerializerWriterCollator" Usage="serializerWriter.CreateVisualsCollator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 데이터 정렬된 <see cref="T:System.Windows.Media.Visual" /> 요소를 쓰는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />를 반환합니다.</summary>
        <returns>데이터 정렬된 <see cref="T:System.Windows.Media.Visual" /> 요소를 문서 출력 serialization <see cref="T:System.IO.Stream" />에 쓰는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> 메서드.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" /> 반환 해야 합니다는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> 동일한 serialization에 쓰는 <see cref="T:System.IO.Stream" /> 으로 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 만들어야 하는 데 사용 되는.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator (System.Printing.PrintTicket documentSequencePT, System.Printing.PrintTicket documentPT);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator(class System.Printing.PrintTicket documentSequencePT, class System.Printing.PrintTicket documentPT) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateVisualsCollator (documentSequencePT As PrintTicket, documentPT As PrintTicket) As SerializerWriterCollator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Documents::Serialization::SerializerWriterCollator ^ CreateVisualsCollator(System::Printing::PrintTicket ^ documentSequencePT, System::Printing::PrintTicket ^ documentPT);" />
      <MemberSignature Language="F#" Value="abstract member CreateVisualsCollator : System.Printing.PrintTicket * System.Printing.PrintTicket -&gt; System.Windows.Documents.Serialization.SerializerWriterCollator" Usage="serializerWriter.CreateVisualsCollator (documentSequencePT, documentPT)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentSequencePT" Type="System.Printing.PrintTicket" />
        <Parameter Name="documentPT" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentSequencePT"><see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <param name="documentPT"><see cref="T:System.Windows.Documents.FixedDocument" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 데이터 정렬된 <see cref="T:System.Windows.Media.Visual" /> 요소를 지정된 인쇄 티켓과 함께 쓰는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />를 반환합니다.</summary>
        <returns>데이터 정렬된 <see cref="T:System.Windows.Media.Visual" /> 요소를 문서 출력 serialization <see cref="T:System.IO.Stream" />에 쓰는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `documentSequencePT` 또는 `documentPT` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지 마십시오 특정 작업에 대해 지정된 된 인쇄 티켓 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> 메서드.  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> 반환 해야 합니다는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> 동일한 serialization에 쓰는 <see cref="T:System.IO.Stream" /> 으로 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 권한 집합을 만든.</para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 콘텐츠를 serialization <see cref="T:System.IO.Stream" />에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> 출력 파일에 유동 문서를 serialize 하는 방법.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::DocumentPaginator ^ documentPaginator);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.DocumentPaginator -&gt; unit" Usage="serializerWriter.Write documentPaginator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">직렬화 <see cref="T:System.IO.Stream" />에 쓸 콘텐츠를 정의하는 문서 페이지 지정자입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.DocumentPaginator" />의 내용을 serialization <see cref="T:System.IO.Stream" />에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 출력 파일에 유동 문서를 serialize 하는 방법.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocument ^ fixedDocument);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedDocument -&gt; unit" Usage="serializerWriter.Write fixedDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">직렬화 <see cref="T:System.IO.Stream" />에 작성할 문서입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedDocument" />를 serialization <see cref="T:System.IO.Stream" />에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 출력 파일에 유동 문서를 serialize 하는 방법.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedDocumentSequence -&gt; unit" Usage="serializerWriter.Write fixedDocumentSequence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">직렬화 <see cref="T:System.IO.Stream" />에 쓸 콘텐츠를 정의하는 문서 시퀀스입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedDocumentSequence" />를 serialization <see cref="T:System.IO.Stream" />에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 출력 파일에 유동 문서를 serialize 하는 방법.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedPage ^ fixedPage);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedPage -&gt; unit" Usage="serializerWriter.Write fixedPage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">직렬화 <see cref="T:System.IO.Stream" />에 작성할 페이지입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedPage" />를 serialization <see cref="T:System.IO.Stream" />에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 출력 파일에 유동 문서를 serialize 하는 방법.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Media.Visual -&gt; unit" Usage="serializerWriter.Write visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">serialization <see cref="T:System.IO.Stream" />에 작성할 <see cref="T:System.Windows.Media.Visual" /> 요소입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 직렬화 <see cref="T:System.IO.Stream" />에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 출력 파일에 유동 문서를 serialize 하는 방법.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.DocumentPaginator * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (documentPaginator, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">직렬화 <see cref="T:System.IO.Stream" />에 쓸 콘텐츠를 정의하는 문서 페이지 지정자입니다.</param>
        <param name="printTicket"><paramref name="documentPaginator" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 페이지가 지정된 콘텐츠를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 직렬화 <see cref="T:System.IO.Stream" />에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 출력 파일에 유동 문서를 serialize 하는 방법.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedDocument * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (fixedDocument, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">직렬화 <see cref="T:System.IO.Stream" />에 작성할 문서입니다.</param>
        <param name="printTicket"><paramref name="fixedDocument" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedDocument" />를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 serialization <see cref="T:System.IO.Stream" />에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 출력 파일에 유동 문서를 serialize 하는 방법.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedDocumentSequence * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (fixedDocumentSequence, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">직렬화 <see cref="T:System.IO.Stream" />에 쓸 콘텐츠를 정의하는 문서 시퀀스입니다.</param>
        <param name="printTicket"><paramref name="fixedDocumentSequence" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedDocumentSequence" />를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 serialization <see cref="T:System.IO.Stream" />에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 출력 파일에 유동 문서를 serialize 하는 방법.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedPage * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (fixedPage, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">직렬화 <see cref="T:System.IO.Stream" />에 작성할 페이지입니다.</param>
        <param name="printTicket"><paramref name="fixedPage" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedPage" />를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 serialization <see cref="T:System.IO.Stream" />에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 출력 파일에 유동 문서를 serialize 하는 방법.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Media.Visual * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (visual, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">serialization <see cref="T:System.IO.Stream" />에 작성할 <see cref="T:System.Windows.Media.Visual" /> 요소입니다.</param>
        <param name="printTicket"><paramref name="visual" /> 요소에 대한 기본 인쇄 설정입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 serialization <see cref="T:System.IO.Stream" />에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 출력 파일에 유동 문서를 serialize 하는 방법.  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 콘텐츠를 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.DocumentPaginator -&gt; unit" Usage="serializerWriter.WriteAsync documentPaginator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">직렬화 <see cref="T:System.IO.Stream" />에 쓸 콘텐츠를 정의하는 문서 페이지 지정자입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.DocumentPaginator" />의 콘텐츠를 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocument -&gt; unit" Usage="serializerWriter.WriteAsync fixedDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">직렬화 <see cref="T:System.IO.Stream" />에 작성할 문서입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedDocument" />를 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocumentSequence -&gt; unit" Usage="serializerWriter.WriteAsync fixedDocumentSequence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">직렬화 <see cref="T:System.IO.Stream" />에 쓸 콘텐츠를 정의하는 문서 시퀀스입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedDocumentSequence" />를 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedPage -&gt; unit" Usage="serializerWriter.WriteAsync fixedPage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">직렬화 <see cref="T:System.IO.Stream" />에 작성할 페이지입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedPage" />를 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual -&gt; unit" Usage="serializerWriter.WriteAsync visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">serialization <see cref="T:System.IO.Stream" />에 작성할 <see cref="T:System.Windows.Media.Visual" /> 요소입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.DocumentPaginator * obj -&gt; unit" Usage="serializerWriter.WriteAsync (documentPaginator, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">직렬화 <see cref="T:System.IO.Stream" />에 쓸 콘텐츠를 정의하는 문서 페이지 지정자입니다.</param>
        <param name="userState">비동기 쓰기 작업을 식별하기 위해 호출자가 지정한 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.DocumentPaginator" />의 콘텐츠를 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState` 에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> 경우는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> 이벤트가 발생 합니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.DocumentPaginator * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (documentPaginator, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">직렬화 <see cref="T:System.IO.Stream" />에 쓸 콘텐츠를 정의하는 문서 페이지 지정자입니다.</param>
        <param name="printTicket"><paramref name="documentPaginator" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.DocumentPaginator" />의 콘텐츠를 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocument * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocument, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">직렬화 <see cref="T:System.IO.Stream" />에 작성할 문서입니다.</param>
        <param name="userState">비동기 쓰기 작업을 식별하기 위해 호출자가 지정한 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedDocument" />를 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState` 에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> 경우는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> 이벤트가 발생 합니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocument * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocument, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">직렬화 <see cref="T:System.IO.Stream" />에 작성할 문서입니다.</param>
        <param name="printTicket"><paramref name="fixedDocument" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedDocument" />를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocumentSequence * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocumentSequence, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">직렬화 <see cref="T:System.IO.Stream" />에 쓸 콘텐츠를 정의하는 문서 시퀀스입니다.</param>
        <param name="userState">비동기 쓰기 작업을 식별하기 위해 호출자가 지정한 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedDocumentSequence" />를 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState` 에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> 경우는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> 이벤트가 발생 합니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocumentSequence * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocumentSequence, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">직렬화 <see cref="T:System.IO.Stream" />에 쓸 콘텐츠를 정의하는 문서 시퀀스입니다.</param>
        <param name="printTicket"><paramref name="fixedDocumentSequence" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedDocumentSequence" />를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedPage * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedPage, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">직렬화 <see cref="T:System.IO.Stream" />에 작성할 페이지입니다.</param>
        <param name="userState">비동기 쓰기 작업을 식별하기 위해 호출자가 지정한 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedPage" />를 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState` 에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> 경우는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> 이벤트가 발생 합니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedPage * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (fixedPage, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">직렬화 <see cref="T:System.IO.Stream" />에 작성할 페이지입니다.</param>
        <param name="printTicket"><paramref name="fixedPage" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedPage" />를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual * obj -&gt; unit" Usage="serializerWriter.WriteAsync (visual, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">serialization <see cref="T:System.IO.Stream" />에 작성할 <see cref="T:System.Windows.Media.Visual" /> 요소입니다.</param>
        <param name="userState">비동기 쓰기 작업을 식별하기 위해 호출자가 지정한 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `userState` 에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> 경우는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> 이벤트가 발생 합니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (visual, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">serialization <see cref="T:System.IO.Stream" />에 작성할 <see cref="T:System.Windows.Media.Visual" /> 요소입니다.</param>
        <param name="printTicket"><paramref name="visual" /> 요소에 대한 기본 인쇄 설정입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.DocumentPaginator * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (documentPaginator, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">직렬화 <see cref="T:System.IO.Stream" />에 쓸 콘텐츠를 정의하는 문서 페이지 지정자입니다.</param>
        <param name="printTicket"><paramref name="documentPaginator" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <param name="userState">비동기 쓰기 작업을 식별하기 위해 호출자가 지정한 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 페이지가 지정된 콘텐츠를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 `userState` 에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> 경우는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> 이벤트가 발생 합니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocument * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocument, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">직렬화 <see cref="T:System.IO.Stream" />에 작성할 문서입니다.</param>
        <param name="printTicket"><paramref name="fixedDocument" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <param name="userState">비동기 쓰기 작업을 식별하기 위해 호출자가 지정한 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedDocument" />를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 `userState` 에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> 경우는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> 이벤트가 발생 합니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocumentSequence * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocumentSequence, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">직렬화 <see cref="T:System.IO.Stream" />에 쓸 콘텐츠를 정의하는 문서 시퀀스입니다.</param>
        <param name="printTicket"><paramref name="fixedDocumentSequence" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <param name="userState">비동기 쓰기 작업을 식별하기 위해 호출자가 지정한 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedDocumentSequence" />를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 `userState` 에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> 경우는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> 이벤트가 발생 합니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedPage * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedPage, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">직렬화 <see cref="T:System.IO.Stream" />에 작성할 페이지입니다.</param>
        <param name="printTicket"><paramref name="fixedPage" /> 콘텐츠에 대한 기본 인쇄 설정입니다.</param>
        <param name="userState">비동기 쓰기 작업을 식별하기 위해 호출자가 지정한 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Documents.FixedPage" />를 연결된 <see cref="T:System.Printing.PrintTicket" />과 함께 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 `userState` 에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> 경우는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> 이벤트가 발생 합니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (visual, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">serialization <see cref="T:System.IO.Stream" />에 작성할 <see cref="T:System.Windows.Media.Visual" /> 요소입니다.</param>
        <param name="printTicket"><paramref name="visual" /> 요소에 대한 기본 인쇄 설정입니다.</param>
        <param name="userState">비동기 쓰기 작업을 식별하기 위해 호출자가 지정한 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 연결된 <see cref="T:System.Printing.PrintTicket" /> 및 식별자와 함께 serialization <see cref="T:System.IO.Stream" />에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 이 메서드는 유효성을 검사 하거나 수정 하지는 주어진 `printTicket` 특정 <xref:System.Printing.PrintQueue>합니다.  필요한 경우 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 메서드를 사용하여 지정된 프린터에 맞는 <xref:System.Printing.PrintQueue>별 <xref:System.Printing.PrintTicket>을 만듭니다.  
  
 `userState` 에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> 경우는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> 이벤트가 발생 합니다.  
  
 출력 <xref:System.IO.Stream> 쓰기 작업은 구현 하는 파생된 클래스의 생성자에 매개 변수로 지정 일반적으로 <xref:System.Windows.Documents.Serialization.SerializerWriter>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingCancelled">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingCancelled As WritingCancelledEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingCancelledEventHandler ^ WritingCancelled;" />
      <MemberSignature Language="F#" Value="member this.WritingCancelled : System.Windows.Documents.Serialization.WritingCancelledEventHandler " Usage="member this.WritingCancelled : System.Windows.Documents.Serialization.WritingCancelledEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCancelledEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" /> 작업이 수행될 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingCompleted">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingCompleted As WritingCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingCompletedEventHandler ^ WritingCompleted;" />
      <MemberSignature Language="F#" Value="member this.WritingCompleted : System.Windows.Documents.Serialization.WritingCompletedEventHandler " Usage="member this.WritingCompleted : System.Windows.Documents.Serialization.WritingCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 재정의되는 경우 쓰기 작업이 끝날 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingPrintTicketRequired">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingPrintTicketRequired As WritingPrintTicketRequiredEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingPrintTicketRequiredEventHandler ^ WritingPrintTicketRequired;" />
      <MemberSignature Language="F#" Value="member this.WritingPrintTicketRequired : System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler " Usage="member this.WritingPrintTicketRequired : System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Printing.PrintTicket" /> 또는 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write" /> 메서드를 통해 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />이 스트림에 추가되기 직전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired> 이벤트를 대체할 새 이벤트 처리기를 사용 하면 <xref:System.Printing.PrintTicket> 에 지정 된에 대 한 합니다 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> 또는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A> 메서드를 호출 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingProgressChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingProgressChanged As WritingProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingProgressChangedEventHandler ^ WritingProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.WritingProgressChanged : System.Windows.Documents.Serialization.WritingProgressChangedEventHandler " Usage="member this.WritingProgressChanged : System.Windows.Documents.Serialization.WritingProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />가 진행률을 업데이트할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예를 들어를 <xref:System.Windows.Documents.Serialization.SerializerWriter> 모든 페이지 또는 다중 문서에서 모든 문서 쓰기 작업 후에 진행률을 업데이트할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>