<Type Name="DataPoint" FullName="System.Windows.Forms.DataVisualization.Charting.DataPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28cade3ae2933ec43371e836d4cb55cde5c04d80" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57943234" /></Metadata><TypeSignature Language="C#" Value="public class DataPoint : System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPoint extends System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPoint&#xA;Inherits DataPointCustomProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPoint : System::Windows::Forms::DataVisualization::Charting::DataPointCustomProperties" />
  <TypeSignature Language="F#" Value="type DataPoint = class&#xA;    inherit DataPointCustomProperties" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("YValues")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataVisualization.Charting.DataPointConverter, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPointCollection" /> 클래스에 저장된 데이터 요소를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 클래스 저장소 연결 된 속성 데이터 뿐만 아니라 데이터 요소 값입니다. 예를 들어, 데이터 요소에 값이 했으나도 color 속성, 배경 이미지 속성, 배경 그라데이션 속성 및 등입니다. 점 속성 데이터에 대 한 자세한 내용은 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties> 클래스 개요 항목입니다.  
  
 각 데이터 요소의 X 값 및 하나 이상의 Y 값으로 구성 됩니다. X 값에는 0 일 수 또는 명시적으로 설정할 수 있습니다.  
  
 요소당 Y 값이 하나만 거품형, 원통형 및 주식형 차트를 제외한 모든 차트 종류에 필요한 경우 이러한 종류의 차트 데이터 요소 하나씩 여러 값으로 구성 하기 때문에 둘 이상의 Y 값을 필요 합니다. 예를 들어 주식형 차트 열이 하나 그릴 4 개의 값이 필요한: 높음, 낮음, 열기 및 닫기 값입니다.  
  
 데이터를 추가 디자인 타임 또는 런타임에; 수 있습니다. 또한 런타임 시 데이터 바인딩을 사용할 수 있습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하 수는 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 클래스입니다.  
  
 그러나 것이 좋습니다 데이터 요소는 런타임에 추가 대신 시간을 사용 하는 <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> 컬렉션 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor(System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.DataPoint : System.Windows.Forms.DataVisualization.Charting.Series -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="new System.Windows.Forms.DataVisualization.Charting.DataPoint series" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">데이터 요소가 속하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 개체입니다.</param>
        <summary><see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 클래스의 새 인스턴스를 초기화하고 데이터 요소가 속하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하 수는 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 클래스입니다.  
  
 그러나 것이 좋습니다 데이터 요소는 런타임에 추가 대신 시간을 사용 하는 <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> 컬렉션 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValue As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, double yValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.DataPoint : double * double -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="new System.Windows.Forms.DataVisualization.Charting.DataPoint (xValue, yValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xValue">데이터 요소의 X 값입니다.</param>
        <param name="yValue">데이터 요소의 Y 값입니다.</param>
        <summary>지정된 X 및 Y 값을 사용하여 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하 수는 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 클래스입니다.  
  
 그러나 것이 좋습니다 데이터 요소는 런타임에 추가 대신 시간을 사용 하는 <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> 컬렉션 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, double[] yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, float64[] yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValues As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, cli::array &lt;double&gt; ^ yValues);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.DataPoint : double * double[] -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="new System.Windows.Forms.DataVisualization.Charting.DataPoint (xValue, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValues" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="xValue">데이터 요소의 X 값입니다.</param>
        <param name="yValues">데이터 요소의 Y 값 배열입니다.</param>
        <summary>지정된 X 값과 Y 값 배열을 사용하여 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하 수는 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 클래스입니다.  
  
 그러나 것이 좋습니다 데이터 요소는 런타임에 추가 대신 시간을 사용 하는 <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> 컬렉션 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, string yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, string yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValues As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, System::String ^ yValues);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.DataPoint : double * string -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="new System.Windows.Forms.DataVisualization.Charting.DataPoint (xValue, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValues" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xValue">데이터 요소의 X 값입니다.</param>
        <param name="yValues">데이터 요소의 Y 값을 쉼표로 구분한 <see langword="string" />입니다.</param>
        <summary>지정된 X 값 및 Y 값을 사용하여 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하 수는 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 클래스입니다.  
  
 그러나 것이 좋습니다 데이터 요소는 런타임에 추가 대신 시간을 사용 하는 <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> 컬렉션 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPoint.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 요소의 정확한 복사본인 새 인스턴스를 반환합니다.</summary>
        <returns>데이터 요소의 정확한 복사본인 복제된 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.Clone%2A> 데이터 요소의 정확한 복사본을 가져오는 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueByName">
      <MemberSignature Language="C#" Value="public double GetValueByName (string valueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetValueByName(string valueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.GetValueByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueByName (valueName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetValueByName(System::String ^ valueName);" />
      <MemberSignature Language="F#" Value="member this.GetValueByName : string -&gt; double" Usage="dataPoint.GetValueByName valueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueName">요소 값 이름입니다. X, Y, Y2...</param>
        <summary>이름으로 지정된 데이터 요소를 반환합니다. 이 함수는 도우미 함수입니다.</summary>
        <returns>데이터 요소를 나타내는 <see langword="string" /> 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataPoint.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataPoint.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 요소를 빈 상태로 표시할지 여부를 나타내는 플래그를 가져오거나 설정합니다.</summary>
        <value>요소를 빈 요소로 표시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 `true` 빈 요소로 데이터 요소를 표시 합니다.  
  
 중 하나 또는 합니다 `InsertEmptyPoints` 의 메서드는 <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> 누락 된 데이터를 빈 요소로 표시 하는 클래스를 사용할 수 있습니다.  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.EmptyPointStyle%2A> 어떻게 빈 요소를 결정 하는 속성이 표시 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataPoint.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataPoint.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 요소의 이름을 가져오거나 설정합니다.</summary>
        <value>데이터 지점의 텍스트 이름을 나타내는 <see langword="string" /> 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueXY">
      <MemberSignature Language="C#" Value="public void SetValueXY (object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueXY(object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueXY(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueXY (xValue As Object, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueXY(System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.SetValueXY : obj * obj[] -&gt; unit" Usage="dataPoint.SetValueXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">데이터 요소의 X 값입니다.</param>
        <param name="yValue">데이터 요소의 Y 값 목록입니다.</param>
        <summary>데이터 요소의 X 값과 하나 이상의 Y 값을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueXY%2A> 런타임 시 데이터 요소의 값을 설정 하는 방법입니다.  
  
 Note는 0이 아닌 값으로 X 값을 설정한 경우 산 점도 생성 됩니다. 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue%2A> 속성입니다.  
  
 개체 형식 매개 변수에 대해 사용할 수 있는 유효한.NET Framework 형식의 전체 목록은 다음 표를 참조 하세요.  
  
||||  
|-|-|-|  
|문자열|DateTime|Double|  
|Decimal|Single|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueY">
      <MemberSignature Language="C#" Value="public void SetValueY (params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueY(object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueY(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueY (ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueY(... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.SetValueY : obj[] -&gt; unit" Usage="dataPoint.SetValueY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">컬렉션에 있는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체의 Y 값입니다. 쉼표로 구분된 하나 이상의 값으로 서식이 지정되었습니다.</param>
        <summary>단일 데이터 요소의 Y 값을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.SetValueY%2A> Y를 설정 하려면 속성은 사용-런타임에 지점 데이터의 값입니다.  
  
 요소당 Y 값이 하나만 거품형, 원통형 및 주식형 차트를 제외한 모든 차트 종류에 필요한 경우 이러한 종류의 차트 데이터 요소 하나씩 여러 값으로 구성 하기 때문에 둘 이상의 Y 값을 필요 합니다. 예를 들어 주식형 차트 열이 하나 그릴 4 개의 값이 필요한: 높음, 낮음, 열기 및 닫기 값입니다.  
  
 이 속성의 배열을 반환 `double` 값을 여러 Y 값을 검색 하는 데 사용 하는 경우.  
  
> [!IMPORTANT]
>  <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValuesPerPoint%2A> 속성에서 모든 데이터 요소 Y 값의 최대 수를 결정 한 <xref:System.Windows.Forms.DataVisualization.Charting.Series> 있을 수 있습니다. Y 값의 허용 되는 개수 보다 많은 지정 하면 예외가 발생 합니다.  
>   
>  개체 형식 매개 변수에 대해 사용할 수 있는 유효한.NET Framework 형식의 전체 목록은 다음 표를 참조 하세요.  
  
||||  
|-|-|-|  
|문자열|DateTime|Double|  
|Decimal|Single|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValue">
      <MemberSignature Language="C#" Value="public double XValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 XValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XValue As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double XValue { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.XValue : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Double), "0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DataPointValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 요소의 X 값을 가져오거나 설정합니다.</summary>
        <value>데이터 요소의 X 값을 나타내는 <see langword="double" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 차트 종류 X 값과 Y 값을 설정할 수 있으므로 두 산 점도 또는 비 산 점도 표시할 수 있습니다. X 값을 설정 아닌 산 점도 하면-해당 하는 0으로 설정-이 속성을 설정 하지 않는 반면 산 점도 발생 합니다. 예를 들어 요소 차트 종류를 그리려면, X-0 값을 가진 데이터 요소를 추가 합니다. 기존 분산형 차트를 표시 하려면 0이 아닌 X 값이 있는 데이터 요소를 추가 합니다.  
  
 데이터 요소의 X 값을 설정할 필요 하지 않습니다. 설정 하지 않은 경우 그려질 데이터 요소 순차적으로 해당 인덱스 값을 사용 하 여 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValues">
      <MemberSignature Language="C#" Value="public double[] YValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64[] YValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues" />
      <MemberSignature Language="VB.NET" Value="Public Property YValues As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;double&gt; ^ YValues { cli::array &lt;double&gt; ^ get(); void set(cli::array &lt;double&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YValues : double[] with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Drawing.Design.UITypeEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleArrayConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 요소의 Y 값을 가져오거나 설정합니다.</summary>
        <value>데이터 요소의 Y 값을 나타내는 <see langword="double" /> 값의 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues%2A> 속성은 데이터 요소의 Y 값을 설정 하려면 사용 합니다.  
  
 요소당 Y 값이 하나만 거품형, 원통형 및 주식형 차트를 제외한 모든 차트 종류에 필요한 경우 이러한 종류의 차트 데이터 요소 하나씩 여러 값으로 구성 하기 때문에 둘 이상의 Y 값을 필요 합니다. 예를 들어 주식형 차트 열이 하나 그릴 4 개의 값이 필요한: 높음, 낮음, 열기 및 닫기 값입니다.  
  
 합니다 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.YValues%2A> 속성의 배열을 반환 `double` 값의 Y 값을 검색 하는 데 사용 하는 경우.  
  
 > [!IMPORTANT] 
 > <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValuesPerPoint%2A> 속성에서 모든 데이터 요소 Y 값의 최대 수를 결정 한 <xref:System.Windows.Forms.DataVisualization.Charting.Series> 있을 수 있습니다. Y 값의 허용 되는 개수 보다 많은 지정 하면 예외가 발생 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>