<Type Name="DataPointCollection" FullName="System.Windows.Forms.DataVisualization.Charting.DataPointCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="93e25e5ac087389fff355ee51b2996b2f6cfdda0" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57927322" /></Metadata><TypeSignature Language="C#" Value="public class DataPointCollection : System.Windows.Forms.DataVisualization.Charting.ChartElementCollection&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPointCollection extends System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataPointCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPointCollection&#xA;Inherits ChartElementCollection(Of DataPoint)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPointCollection : System::Windows::Forms::DataVisualization::Charting::ChartElementCollection&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt;" />
  <TypeSignature Language="F#" Value="type DataPointCollection = class&#xA;    inherit ChartElementCollection&lt;DataPoint&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.ChartElementCollection&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">System.Windows.Forms.DataVisualization.Charting.DataPoint</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체의 컬렉션을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection> 클래스의 컬렉션을 나타냅니다 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 을 차례로 포함 된 데이터 요소를 나타내는 개체를 <xref:System.Windows.Forms.DataVisualization.Charting.Series> 개체입니다.  
  
 이 컬렉션 클래스로 구현 됩니다 합니다 <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> 의 속성을 <xref:System.Windows.Forms.DataVisualization.Charting.Series> 개체입니다.  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 개체를 추가 하거나 해당 X 값 및 Y를 사용 하 여 컬렉션에 삽입할 수-이미 매개 변수로 지정 된 값입니다. 이러한도 추가 됩니다 자동으로 시리즈 중 하나를 사용 하 여 데이터 원본에 바인딩될 때 합니다 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY%2A> 또는 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> 메서드.  
  
 컬렉션에 속하는 계열에 있는 경우에이 컬렉션에서 발생 하는 순서로 그려질 데이터 요소 해당 <xref:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed%2A> 속성으로 설정 `true` (기본값은 `false`), 모든 데이터 요소에 대 한 모든 X 값이 0 인 경우. 그렇지 않은 경우 데이터 요소 X 값을 사용 하 여 표시 됩니다.  
  
 데이터 요소 수 수를 및 조작, 최대, 최소 또는 지정 된 X 또는 Y 값을 사용 하 여 오버 로드 된 기준 `FindMaxValue`, `FindMinValue` 또는 `FindValue` 메서드를 각각.  
  
 <xref:System.Collections.ObjectModel.Collection%601.Count%2A> 속성 컬렉션에 있는 항목의 총 수를 나타내며 컬렉션의 상한 값을 찾는 데 주로 사용 됩니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint Add (params double[] y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint Add(float64[] y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.Add(System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ParamArray y As Double()) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ Add(... cli::array &lt;double&gt; ^ y);" />
      <MemberSignature Language="F#" Value="override this.Add : double[] -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.Add y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="y">데이터 요소의 Y 값입니다.</param>
        <summary>새 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체를 컬렉션에 추가하고 해당 Y 값을 설정합니다.</summary>
        <returns>새로 추가된 <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddXY">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 X 값과 Y 값을 사용하여 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체를 컬렉션의 끝에 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddXY">
      <MemberSignature Language="C#" Value="public int AddXY (double xValue, double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddXY(float64 xValue, float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddXY(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddXY (xValue As Double, yValue As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddXY(double xValue, double yValue);" />
      <MemberSignature Language="F#" Value="member this.AddXY : double * double -&gt; int" Usage="dataPointCollection.AddXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xValue">데이터 요소의 X 값입니다.</param>
        <param name="yValue">데이터 요소의 Y 값입니다.</param>
        <summary>지정된 X 값과 Y 값을 사용하여 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체를 컬렉션의 끝에 추가합니다.</summary>
        <returns>데이터 요소 컬렉션에 항목이 삽입된 위치를 인덱스(0부터 시작)로 나타내는 <see langword="integer" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 추가 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 개체는 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>; 개체는 항상 컬렉션의 끝에 추가 됩니다.  
  
 사용 된 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddXY%2A> 데이터 요소가 두 개 이상의 Y 값을 필요한 경우 메서드 오버 로드 합니다.  
  
 데이터 지점 X 값으로 필요 하지 않은 경우 즉, 비 산 점도-만들려는 경우 사용 된 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddY%2A> 메서드 대신 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddXY">
      <MemberSignature Language="C#" Value="public int AddXY (object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddXY(object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddXY(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddXY (xValue As Object, ParamArray yValue As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddXY(System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.AddXY : obj * obj[] -&gt; int" Usage="dataPointCollection.AddXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">데이터 요소의 X 값입니다.</param>
        <param name="yValue">데이터 요소의 Y 값을 나타내는 쉼표로 구분된 하나 이상의 값입니다.</param>
        <summary>지정된 X 값과 Y 값을 사용하여 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체를 컬렉션의 끝에 추가합니다.</summary>
        <returns>컬렉션에 항목이 삽입된 위치를 인덱스(0부터 시작)로 나타내는 <see langword="integer" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 추가 하나 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 개체는 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>, 데이터 요소는 항상 컬렉션의 끝에 추가 됩니다.  
  
 적어도 하나 (1) Y 값을 입력 해야, 그렇지 않으면 예외가 throw 됩니다. 이 메서드는 또한 확인 합니다 <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A> 의 속성을 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection> 개체이 데이터가 속한; 경우 너무 많은 Y-값이 지정 되는 예외가 throw 됩니다.  
  
 되려면에서 <xref:System.DateTime> 영향을 주도록 서식 값 이어야 합니다는 <xref:System.DateTime> 개체입니다.  
  
 데이터 지점 X 값으로 필요 하지 않은 경우 즉, 비 산 점도-만들려는 경우 사용 된 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddY%2A> 메서드 대신  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddY">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 Y 값을 사용하여 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체를 컬렉션의 끝에 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddY">
      <MemberSignature Language="C#" Value="public int AddY (double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddY(float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddY (yValue As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddY(double yValue);" />
      <MemberSignature Language="F#" Value="member this.AddY : double -&gt; int" Usage="dataPointCollection.AddY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="yValue">데이터 요소의 Y 값입니다.</param>
        <summary>지정된 Y 값을 사용하여 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체를 컬렉션의 끝에 추가합니다.</summary>
        <returns>데이터 요소 컬렉션에 항목이 삽입된 위치를 인덱스(0부터 시작)로 나타내는 <see langword="integer" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 추가 하나 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 개체는 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>, 데이터 요소는 항상 컬렉션의 끝에 추가 됩니다.  
  
 데이터 요소가 두 개 이상의 Y 값을 필요한 경우 Y 값의 배열을 허용 하는 메서드 정의 사용 합니다.  
  
 데이터 요소가 X 값-필요로 하는 경우 즉,-산 점도 만들려는 경우 중 하나를 사용 합니다 `AddXY` 메서드 대신 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddY">
      <MemberSignature Language="C#" Value="public int AddY (params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddY(object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddY(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddY (ParamArray yValue As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddY(... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.AddY : obj[] -&gt; int" Usage="dataPointCollection.AddY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">컬렉션에 추가된 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체의 Y 값을 쉼표로 구분한 목록입니다.</param>
        <summary>지정된 Y 값을 사용하여 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체를 컬렉션의 끝에 추가합니다.</summary>
        <returns>컬렉션에 항목이 삽입된 위치를 인덱스(0부터 시작)로 나타내는 <see langword="integer" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 추가 하나 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 개체는 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>, 데이터 요소는 항상 컬렉션의 끝에 추가 됩니다.  
  
 적어도 하나 (1) Y 값을 입력 해야, 그렇지 않으면 예외가 throw 됩니다. 이 메서드는 또한 확인 합니다 <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartType%2A> 의 속성을 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 에 속한이 데이터 개체, 경우 너무 많은 Y-값이 지정 되는 예외가 throw 됩니다.  
  
 X 값 항상 설정 됩니다 영 (0)를 비 산 점도 생성 합니다. X 값을 사용 하 여 데이터 요소를 하려는 경우 중 하나를 호출 합니다 `AddXY` 메서드 대신 합니다.  
  
 되려면에서 <xref:System.DateTime> 영향을 주도록 서식 값 이어야 합니다는 <xref:System.DateTime> 개체입니다.  
  
 개체 형식 매개 변수에 대해 사용할 수 있는 유효한.NET Framework 형식의 전체 목록은 다음을 참조 하십시오.  
  
||||  
|-|-|-|  
|문자열|DateTime|Double|  
|Decimal|Single|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="dataPointCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Collections.ObjectModel.Collection`1" />에서 요소를 모두 제거합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public void DataBind (System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBind(class System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBind(System.Collections.IEnumerable,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBind (dataSource As IEnumerable, xField As String, yFields As String, otherFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBind(System::Collections::IEnumerable ^ dataSource, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields);" />
      <MemberSignature Language="F#" Value="member this.DataBind : System.Collections.IEnumerable * string * string * string -&gt; unit" Usage="dataPointCollection.DataBind (dataSource, xField, yFields, otherFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">X 값 및 Y 값에 바인딩할 데이터 소스입니다.</param>
        <param name="xField">X 값에 대한 필드의 이름입니다.</param>
        <param name="yFields">Y 값에 대한 필드의 이름을 쉼표로 구분한 목록입니다.</param>
        <param name="otherFields">바인딩 규칙을 사용하는 다음과 같은 형식의 다른 데이터 요소 속성입니다. PointProperty=Field[{Format}] [,PointProperty=Field[{Format}]].  
  
예: "Tooltip=Price{C1},Url=WebSiteName".</param>
        <summary>Tooltip 또는 LabelStyle 등 데이터 요소의 속성 값, X 값 및 Y 값을 데이터 소스에 데이터 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 원본은 Ole (SQL) DataReader, DataView, DataSet, DataTable 또는 DataRow일 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindXY">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컬렉션의 데이터 요소에 대한 X 값 및 Y 값을 지정된 데이터 소스의 지정된 열에 데이터 바인딩합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindXY">
      <MemberSignature Language="C#" Value="public void DataBindXY (System.Collections.IEnumerable xValue, params System.Collections.IEnumerable[] yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindXY(class System.Collections.IEnumerable xValue, class System.Collections.IEnumerable[] yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.Collections.IEnumerable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindXY (xValue As IEnumerable, ParamArray yValues As IEnumerable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindXY(System::Collections::IEnumerable ^ xValue, ... cli::array &lt;System::Collections::IEnumerable ^&gt; ^ yValues);" />
      <MemberSignature Language="F#" Value="member this.DataBindXY : System.Collections.IEnumerable * System.Collections.IEnumerable[] -&gt; unit" Usage="dataPointCollection.DataBindXY (xValue, yValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yValues" Type="System.Collections.IEnumerable[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">데이터 요소의 X 값을 제공할 데이터 소스입니다.</param>
        <param name="yValues">컬렉션에 추가된 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체의 Y 값을 쉼표로 구분한 목록입니다.</param>
        <summary>컬렉션의 데이터 요소에 대한 X 값 및 Y 값을 지정된 데이터 소스의 첫 번째 열에 데이터 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 모든 바인딩합니다 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 개체는 <xref:System.Windows.Forms.DataVisualization.Charting.Series>, X 및 Y에 대 한 별도 데이터 소스 사용 및-값입니다.  
  
 데이터 소스의 첫 번째 사용 가능한 열을 사용할 수는 경우 테이블에 데이터 바인딩. 사용 하 여 첫 번째 열이 아닌 열에 바인딩하는 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> 메서드.  
  
 여러 Y 값의 쉼표로 구분 된 목록을 제공 하 여 바인딩할 수 있습니다 <xref:System.Collections.Generic.IEnumerable%601> 에 대 한 개체는 `yValues` 매개 변수입니다.  
  
 Y 값을 데이터 원본에서 제공 하지 또는 잘못 된 값이 제공 되는 경우 예외가 throw 됩니다.  
  
 X 및 Y 값을 모두 사용 되는, 분산형 플롯 표시 하지 않을 경우 중 하나를 사용 합니다 `DataBindY` 메서드 대신 합니다.  
  
 다음은 데이터 소스 매개 변수로 사용할 수 있는 개체의 목록입니다.  
  
-   DataView  
  
-   데이터 판독기 (SQL, OleDB)  
  
-   배열  
  
-   목록  
  
-   사용 하는 다른 모든 개체는 <xref:System.Collections.Generic.IEnumerable%601> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindXY">
      <MemberSignature Language="C#" Value="public void DataBindXY (System.Collections.IEnumerable xValue, string xField, System.Collections.IEnumerable yValue, string yFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindXY(class System.Collections.IEnumerable xValue, string xField, class System.Collections.IEnumerable yValue, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.String,System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindXY (xValue As IEnumerable, xField As String, yValue As IEnumerable, yFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindXY(System::Collections::IEnumerable ^ xValue, System::String ^ xField, System::Collections::IEnumerable ^ yValue, System::String ^ yFields);" />
      <MemberSignature Language="F#" Value="member this.DataBindXY : System.Collections.IEnumerable * string * System.Collections.IEnumerable * string -&gt; unit" Usage="dataPointCollection.DataBindXY (xValue, xField, yValue, yFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xValue">데이터 요소의 X 값을 제공할 데이터 소스입니다.</param>
        <param name="xField">데이터 요소의 X 값을 제공할 열의 이름입니다.</param>
        <param name="yValue">컬렉션에 추가된 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체의 Y 값을 쉼표로 구분한 목록입니다.</param>
        <param name="yFields">데이터 요소의 Y 값을 제공할 열의 이름을 쉼표로 구분한 목록입니다. 이중 쉼표를 사용하여 쉼표를 열 이름에 포함할 수 있습니다.</param>
        <summary>컬렉션의 데이터 요소에 대한 X 값 및 Y 값을 지정된 데이터 소스의 지정된 열에 데이터 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터는 컬렉션을 지정 된 데이터 소스의 첫 번째 열에서 X 값 및 데이터 요소의 Y 값을 바인딩합니다.  
  
 여러 Y 값을 설정 하 여 바인딩할 수 있습니다는 `yFields` 여러 열 이름에 대 한 매개 변수입니다. 열 이름을 쉼표로 구분 합니다.  
  
 Y 값을 데이터 원본에서 제공 하지 또는 잘못 된 값이 제공 되는 경우 예외가 throw 됩니다.  
  
 X 및 Y 값을 모두 사용 되는, 분산형 플롯 표시 하지 않을 경우 중 하나를 사용 합니다 `DataBindY` 메서드 대신 합니다.  
  
 다음은 데이터 소스 매개 변수로 사용할 수 있는 개체의 목록입니다.  
  
-   DataView  
  
-   데이터 판독기 (SQL, OleDB)  
  
-   배열  
  
-   목록  
  
-   사용 하는 다른 모든 개체는 <xref:System.Collections.Generic.IEnumerable%601> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindY">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터 요소의 Y 값을 지정된 데이터 소스의 지정된 열에 데이터 바인딩합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindY">
      <MemberSignature Language="C#" Value="public void DataBindY (params System.Collections.IEnumerable[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindY(class System.Collections.IEnumerable[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindY (ParamArray yValue As IEnumerable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindY(... cli::array &lt;System::Collections::IEnumerable ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.DataBindY : System.Collections.IEnumerable[] -&gt; unit" Usage="dataPointCollection.DataBindY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Collections.IEnumerable[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">쉼표로 구분된 하나 이상의 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 데이터 소스입니다.</param>
        <summary>컬렉션의 데이터 요소에 대한 Y 값을 지정된 데이터 소스의 첫 번째 열에 데이터 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 Y 바인딩합니다-지정 된 데이터 원본의 첫 번째 열 컬렉션에서 데이터 요소의 값입니다.  
  
 사용 하 여 첫 번째 사용 가능한 열을 하지 않은 데이터 원본 열에 Y 값을 바인딩하는 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY%2A> 메서드.  
  
 사용 하 여 여러 데이터 소스를 지정 하 여 여러 Y 값을 바인딩할 수 있습니다는 `yValue` 매개 변수입니다. 각 데이터 원본에서 첫 번째 사용 가능한 열을 각 데이터 요소의 연속 된 Y 값에 사용할는 참고 합니다. 첫 번째 열의 첫 번째 예를 들어 <xref:System.Collections.Generic.IEnumerable%601> 데이터 원본에서 첫 번째 열의 두 번째 데이터 요소의 첫 번째 Y 값에 바인딩될 <xref:System.Collections.Generic.IEnumerable%601> 데이터 소스는 데이터 요소의 두 번째 Y 값에 바인딩할 수 및 등입니다.  
  
 Y 값을 데이터 원본에서 제공 하지 또는 잘못 된 값이 제공 되는 경우 예외가 throw 됩니다.  
  
 다음은 데이터 소스 매개 변수로 사용할 수 있는 개체의 목록입니다.  
  
 다음은 데이터 원본으로 사용할 수 있는 개체의 목록입니다.  
  
-   DataView  
  
-   데이터 판독기 (SQL, OleDB)  
  
-   배열  
  
-   목록  
  
-   사용 하는 다른 모든 개체는 <xref:System.Collections.Generic.IEnumerable%601> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindY">
      <MemberSignature Language="C#" Value="public void DataBindY (System.Collections.IEnumerable yValue, string yFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindY(class System.Collections.IEnumerable yValue, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindY (yValue As IEnumerable, yFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindY(System::Collections::IEnumerable ^ yValue, System::String ^ yFields);" />
      <MemberSignature Language="F#" Value="member this.DataBindY : System.Collections.IEnumerable * string -&gt; unit" Usage="dataPointCollection.DataBindY (yValue, yFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="yValue">Y-값을 제공하는 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 데이터 소스 개체입니다.</param>
        <param name="yFields">데이터 요소를 바인딩할 데이터 소스 필드입니다. 이중 쉼표를 사용하여 쉼표를 열 이름에 포함할 수 있습니다.</param>
        <summary>데이터 요소의 Y 값을 지정된 데이터 소스의 지정된 열에 데이터 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 데이터 소스의 지정 된 필드 (s) 컬렉션에서 데이터 요소의 Y 값을 바인딩합니다.  
  
 데이터 소스의 첫 번째 필드에만 바인딩할 사용 된 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY%2A> 메서드.  
  
 설정 하 여 여러 필드에 바인딩할 수 있습니다는 `yFields` 매개 변수를 쉼표로 구분 된 여러 필드 이름입니다. 데이터 요소의 첫 번째 Y 값에 사용할 첫 번째 필드에 명명된 된 두 번째 필드 데이터 요소의 두 번째 Y 값에 사용할 등 note 합니다.  
  
 Y 값을 데이터 원본에서 제공 하지 않거나 잘못 된 값이 제공 되는, 예외가 throw 됩니다.  
  
 다음은 데이터 원본으로 사용할 수 있는 개체의 목록입니다.  
  
-   DataView  
  
-   데이터 판독기 (SQL, OleDB)  
  
-   배열  
  
-   목록  
  
-   사용 하는 다른 모든 개체는 <xref:System.Collections.Generic.IEnumerable%601> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllByValue">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 값과 같은 모든 데이터 요소를 찾습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllByValue (valueToFind As Double) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double -&gt; seq&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue valueToFind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="valueToFind">찾을 데이터 요소 값입니다.</param>
        <summary>지정된 값과 같은 모든 데이터 요소를 찾습니다.</summary>
        <returns>일치하는 데이터 요소의 열거자를 나타내는 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 인터페이스입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind, string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind, string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function FindAllByValue (valueToFind As Double, useValue As String) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind, System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double * string -&gt; seq&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue (valueToFind, useValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Forms.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__23))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Forms.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueToFind">찾을 데이터 요소 값입니다.</param>
        <param name="useValue">(X, Y1, Y2...)를 사용할 데이터 요소 값입니다.</param>
        <summary>지정된 값과 같은 모든 데이터 요소를 찾습니다.</summary>
        <returns>일치하는 데이터 요소의 열거자를 나타내는 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 인터페이스입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind, string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind, string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function FindAllByValue (valueToFind As Double, useValue As String, startIndex As Integer) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind, System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double * string * int -&gt; seq&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue (valueToFind, useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Forms.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__22))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Forms.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueToFind">찾을 데이터 요소 값입니다.</param>
        <param name="useValue">(X, Y1, Y2...)를 사용할 데이터 요소 값입니다.</param>
        <param name="startIndex">검색을 시작할 데이터 요소의 인덱스 위치입니다.</param>
        <summary>지정된 인덱스 위치에서 시작하며, 지정된 값과 같은 모든 데이터 요소를 찾습니다.</summary>
        <returns>일치하는 데이터 요소의 열거자를 나타내는 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 인터페이스입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByValue">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 값과 같은 첫 번째 데이터 요소를 찾습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindByValue (double valueToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue valueToFind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="valueToFind">찾을 데이터 요소 값입니다.</param>
        <summary>지정된 값과 같은 첫 번째 데이터 요소를 찾습니다.</summary>
        <returns>지정된 값과 일치하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" />이거나, 일치하는 항목이 없으면 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindByValue (double valueToFind, string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind, string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double, useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind, System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double * string -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue (valueToFind, useValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueToFind">찾을 데이터 요소 값입니다.</param>
        <param name="useValue">(X, Y1, Y2...)를 사용할 데이터 요소 값입니다.</param>
        <summary>지정된 값과 같은 첫 번째 데이터 요소를 찾습니다.</summary>
        <returns>지정된 값과 일치하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" />이거나, 일치하는 항목이 없으면 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindByValue (double valueToFind, string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind, string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double, useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind, System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double * string * int -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue (valueToFind, useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueToFind">찾을 데이터 요소 값입니다.</param>
        <param name="useValue">(X, Y1, Y2...)를 사용할 데이터 요소 값입니다.</param>
        <param name="startIndex">검색을 시작할 데이터 요소의 인덱스 위치입니다.</param>
        <summary>지정된 인덱스 위치에서 시작하며, 지정된 값과 같은 첫 번째 데이터 요소를 찾습니다.</summary>
        <returns>지정된 값과 일치하는 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" />이거나, 일치하는 항목이 없으면 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMaxByValue">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>최대값을 가진 데이터 요소를 찾습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindMaxByValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindMaxByValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindMaxByValue" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindMaxByValue();" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : unit -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>최대값을 가진 데이터 요소를 찾습니다.</summary>
        <returns>최대값을 가진 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindMaxByValue (string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindMaxByValue(string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue (useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindMaxByValue(System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : string -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue useValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useValue">(X, Y1, Y2...)를 사용할 데이터 요소 값입니다.</param>
        <summary>최대값을 가진 데이터 요소 값을 찾습니다.</summary>
        <returns>최대값을 가진 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindMaxByValue (string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindMaxByValue(string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue (useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindMaxByValue(System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : string * int -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue (useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="useValue">(X, Y1, Y2...)를 사용할 데이터 요소 값입니다.</param>
        <param name="startIndex">검색을 시작할 데이터 요소의 인덱스 위치입니다.</param>
        <summary>지정된 인덱스 위치에서 시작하며, 최대값을 가진 데이터 요소를 찾습니다.</summary>
        <returns>최대값을 가진 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMinByValue">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>최소값을 가진 데이터 요소를 찾습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindMinByValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindMinByValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindMinByValue" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindMinByValue();" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : unit -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>최소값을 가진 데이터 요소를 찾습니다.</summary>
        <returns>최소값을 가진 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindMinByValue (string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindMinByValue(string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue (useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindMinByValue(System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : string -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue useValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useValue">(X, Y1, Y2...)를 사용할 데이터 요소 값입니다.</param>
        <summary>최소값을 가진 데이터 요소를 찾습니다.</summary>
        <returns>최소값을 가진 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindMinByValue (string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindMinByValue(string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue (useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindMinByValue(System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : string * int -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue (useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="useValue">(X, Y1, Y2...)를 사용할 데이터 요소 값입니다.</param>
        <param name="startIndex">검색을 시작할 데이터 요소의 인덱스 위치입니다.</param>
        <summary>지정된 인덱스 위치에서 시작하며, 최소값을 가진 데이터 요소를 찾습니다.</summary>
        <returns>최소값을 가진 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertXY">
      <MemberSignature Language="C#" Value="public void InsertXY (int index, object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertXY(int32 index, object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.InsertXY(System.Int32,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertXY (index As Integer, xValue As Object, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertXY(int index, System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.InsertXY : int * obj * obj[] -&gt; unit" Usage="dataPointCollection.InsertXY (index, xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">데이터 요소를 삽입할 인덱스입니다.</param>
        <param name="xValue">데이터 요소의 X 값입니다.</param>
        <param name="yValue">데이터 요소의 Y 값을 쉼표로 구분한 목록입니다.</param>
        <summary>지정된 X 값 및 하나 이상의 지정된 Y 값을 가진 데이터 요소를 삽입합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertY">
      <MemberSignature Language="C#" Value="public void InsertY (int index, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertY(int32 index, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.InsertY(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertY (index As Integer, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertY(int index, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.InsertY : int * obj[] -&gt; unit" Usage="dataPointCollection.InsertY (index, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">데이터 요소를 삽입할 인덱스입니다.</param>
        <param name="yValue">데이터 요소의 Y 값을 쉼표로 구분한 목록입니다.</param>
        <summary>하나 이상의 지정된 Y 값을 가진 데이터 요소를 삽입합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>