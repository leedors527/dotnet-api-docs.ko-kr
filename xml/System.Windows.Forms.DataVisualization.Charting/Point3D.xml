<Type Name="Point3D" FullName="System.Windows.Forms.DataVisualization.Charting.Point3D">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a158f824058f4108266fb075ddf588e12e4a039b" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55380613" /></Metadata><TypeSignature Language="C#" Value="public class Point3D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Point3D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Point3D" />
  <TypeSignature Language="VB.NET" Value="Public Class Point3D" />
  <TypeSignature Language="C++ CLI" Value="public ref class Point3D" />
  <TypeSignature Language="F#" Value="type Point3D = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>3차원(3D) 데이터 요소의 좌표를 나타냅니다. 이 클래스는 3D 차트를 사용하여 사용자 지정 그리기를 수행할 때 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 -는 GDI +를 사용 하 여 수행 됩니다-사용자 지정 3D 그리기에 사용 되는 시점에서 상대 X, Y 및 Z (3d) 상대 X 좌표로 변형 해야 하 고 Y (2D)를 사용 하 여 조정 된 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> 메서드. 호출 하 여 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, X 및 Y 값을 <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> 개체는 3 차원 공간에 맞게 변경 합니다. 새 X 및 Y 지점을 사용할 수 있습니다-Z 값을 무시 합니다-GDI + 메서드 호출에 대 한 절대 픽셀 좌표로 사용 하 여 변경 후의 <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> 메서드.  
  
 (차트 영역 뒤에 있는) 0 보다 작은 Z 좌표 수는 100 (차트 영역 앞에 있음) 보다 큽니다.  
  
 3D 차트를 사용 하도록 설정 및 해당 스타일으로 작업을 사용 하 여는 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.Area3DStyle%2A> 속성입니다. <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> 3D 스타일 클래스 사용 되지 않습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataVisualization.Charting.Point3D" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point3D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point3D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataVisualization.Charting.Point3D" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point3D (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 x, float32 y, float32 z) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Point3D.#ctor(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Single, y As Single, z As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point3D(float x, float y, float z);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.Point3D : single * single * single -&gt; System.Windows.Forms.DataVisualization.Charting.Point3D" Usage="new System.Windows.Forms.DataVisualization.Charting.Point3D (x, y, z)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">3D 요소의 X 좌표입니다.</param>
        <param name="y">3D 요소의 Y 좌표입니다.</param>
        <param name="z">3D 요소의 깊이를 나타내는 Z 좌표입니다.</param>
        <summary>지정된 X, Y 및 Z 좌표를 사용하여 <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointF">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF PointF { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF PointF" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF" />
      <MemberSignature Language="VB.NET" Value="Public Property PointF As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::PointF PointF { System::Drawing::PointF get(); void set(System::Drawing::PointF value); };" />
      <MemberSignature Language="F#" Value="member this.PointF : System.Drawing.PointF with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Point3D.PointF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>3D 요소의 X 및 Y 좌표를 저장하는 <see cref="T:System.Drawing.PointF" /> 구조체를 가져오거나 설정합니다.</summary>
        <value>3D 요소의 X 및 Y 좌표를 저장하는 <see cref="T:System.Drawing.PointF" /> 구조체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 -는 GDI +를 사용 하 여 수행 됩니다-사용자 지정 3D 그리기에 사용 되는 시점을 변환 해야 합니다에서 X, Y 및 Z (3d) 좌표 X 및 Y (2D)를 사용 하 여 조정 된 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> 메서드. 이 메서드는 배열을 <xref:System.Windows.Forms.DataVisualization.Charting.Point3D> 유일한 매개 변수로 개체입니다. 호출 하 여 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A>, X 및 Y 속성 값이 3 차원 공간에 맞게 변경 합니다.  
  
 이러한 새 X 및 Y 좌표와 같은 메서드를 사용 하 여를 절대 좌표로 변환할된는 <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> 메서드. 좌표를 변환한 후 합니다 <xref:System.Windows.Forms.DataVisualization.Charting.Point3D.PointF%2A> 각 Point3D 개체의 속성을 사용 하는 모든 GDI + 메서드에서 사용할 수는 <xref:System.Drawing.PointF> 개체를 매개 변수로 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float X { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.X : single with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Point3D.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>3D 요소의 X 좌표 값을 가져오거나 설정합니다.</summary>
        <value>3D 요소의 X 좌표를 나타내는 <see langword="float" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 -는 GDI +를 사용 하 여 수행 됩니다-사용자 지정 3D 그리기에 사용 되는 시점을 변환 해야 합니다에서 X, Y 및 Z (3d) 좌표 X 및 Y (2D)를 사용 하 여 조정 된 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> 메서드. 이 메서드가 Point3D 개체의 배열을 유일한 매개 변수로 사용 합니다. 호출 하 여는 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> 메서드, X 및 Y 속성 값이 3 차원 공간에 맞게 변경 합니다.  
  
 이러한 새 X 및 Y 좌표를 절대 좌표로 변환할된를 사용 하 여 <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> 메서드. GDI + 메서드 호출에 대 한 다음 사용 됩니다.  
  
 상대 X 좌표를 호출 하 여 축 값에서 얻을 수 있습니다는 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Y { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Y : single with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Point3D.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>3D 요소의 Y 좌표를 가져오거나 설정합니다.</summary>
        <value>3D 요소의 Y 좌표를 나타내는 <see langword="float" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 -는 GDI +를 사용 하 여 수행 됩니다-사용자 지정 3D 그리기에 사용 되는 시점을 변환 해야 합니다에서 X, Y 및 Z (3d) 좌표 X 및 Y (2D)를 사용 하 여 조정 된 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> 메서드. 이 메서드가 Point3D 개체의 배열을 유일한 매개 변수로 사용 합니다. 호출 하 여는 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> 메서드, X 및 Y 속성 값이 3 차원 공간에 맞게 변경 합니다.  
  
 이러한 새 X 및 Y 좌표를 사용 하 여를 절대 좌표로 변환할된는 <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> 메서드. GDI + 메서드 호출에 대 한 다음 사용 됩니다.  
  
 상대 Y 좌표를 사용 하 여 축 값에서 얻을 수 있습니다는 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.ValueToPosition%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public float Z { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Z" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Point3D.Z" />
      <MemberSignature Language="VB.NET" Value="Public Property Z As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Z { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Z : single with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Point3D.Z" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>3D 요소의 Z 좌표를 가져오거나 설정합니다.</summary>
        <value>3D 요소의 Z 좌표로 관련 차트 영역 깊이의 백분율로 측정됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 Z 속성은 항상 관련 차트 영역 깊이의 백분율로 표현 됩니다. 3D 차트를 사용 하 여 Z 좌표는 상대적 이며, 0의 차트 영역 뒷면 및 차트 영역의 앞면 벽에 대 한 100 사이의 값에 대 한 값입니다.  
  
 **참고** 이 Z 속성 작을 수 있습니다 (차트 영역 뒤에 있는) 0 보다 (차트 영역 앞에 있음) 100 보다 큽니다.  
  
 -는 GDI +를 사용 하 여 수행 됩니다-사용자 지정 3D 그리기에 사용 되는 시점을 변환 해야 합니다에서 X, Y 및 Z (3d) 좌표 X 및 Y (2D)를 사용 하 여 조정 된 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> 메서드. 이 메서드가 Point3D 개체의 배열을 유일한 매개 변수로 사용 합니다. 호출 하 여는 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.TransformPoints%2A> 메서드, X 및 Y 속성 값이 3 차원 공간에 맞게 변경 합니다.  
  
 이러한 새 X 및 Y 좌표를 사용 하 여를 절대 좌표로 변환할된는 <xref:System.Windows.Forms.DataVisualization.Charting.ChartGraphics.GetAbsolutePoint%2A> 메서드. GDI + 메서드 호출에 대 한 다음 사용 됩니다.  
  
 사용 하 여 계열에 대 한 상대 Z 좌표를 가져올 수 있습니다 합니다 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesDepth%2A> 고 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.GetSeriesZPosition%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>