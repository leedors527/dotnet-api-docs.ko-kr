<Type Name="SnapLine" FullName="System.Windows.Forms.Design.Behavior.SnapLine">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36124f4af8fb867dd586e0c1fa224d31325217bc" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59355308" /></Metadata><TypeSignature Language="C#" Value="public sealed class SnapLine" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SnapLine extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.Behavior.SnapLine" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SnapLine" />
  <TypeSignature Language="C++ CLI" Value="public ref class SnapLine sealed" />
  <TypeSignature Language="F#" Value="type SnapLine = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>디자인 타임에 컨테이너에서 컨트롤의 레이아웃을 쉽게 조정할 수 있도록 UI(사용자 인터페이스)에 동적으로 만들어지는 가로 및 세로 선 세그먼트를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 배치 하 고 디자인 화면에서 컨트롤 크기 조정 수 있도록 지 원하는 비주얼 디자인 도구는 일반적인 모드를 나열 합니다.  
  
|모드|설명|  
|----------|-----------------|  
|자유 형식|컨트롤을 배치 자유롭게 할 수 있습니다.|  
|표|컨트롤을 배치에 도움이 되는 고정 된 모눈을 표시 합니다.|  
|맞춤선|서로 기준으로 컨테이너의 컨트롤을 배치 하는 데 도움이 안내선을 표시 합니다. 맞춤선은 컨트롤 및 해당 컨테이너에서 발생합니다.|  
  
 <xref:System.Windows.Forms.Design.Behavior.SnapLine> 클래스 및 관련된 형식은 도움말 맞춤선 모드를 지원 합니다.  
  
 맞춤선을 동적으로 생성 되 고 자동으로 컨트롤로 edge 이동 다른 컨트롤 가까이 또는 해당 컨테이너의 경계 근처 합니다. 이 컨트롤을 도구 상자에서 추가 또는 이동 하거나, 마우스 작업이 나 키보드 명령에서 크기가 조정 된 경우 발생할 수 있습니다. 컨트롤에는 일반적으로 가로 및 세로 맞춤선; 정의 사각형 컨트롤에 대 한 이러한 일반적으로 확장에서 모든 네 가장자리입니다.  
  
 <xref:System.Windows.Forms.Design.Behavior.SnapLine> 클래스 다음 표에 나와 있는 것 처럼 각 맞춤선을 설명 하기 위해 몇 가지 속성만 사용 합니다.  
  
|속성|설명|  
|--------------|-----------------|  
|<xref:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType%2A>|위치와 연결 된 해당 컨트롤을 기준으로 줄의 방향을 지정합니다. 일반적으로 유사한 형식의 맞춤선만 자동으로 맞춰집니다 서로 합니다.|  
|<xref:System.Windows.Forms.Design.Behavior.SnapLine.Offset%2A>|맞춤선의 시작 위치를 컨트롤의 왼쪽 위 모서리는 원본에서의 픽셀 단위의 거리를 지정 합니다.|  
|<xref:System.Windows.Forms.Design.Behavior.SnapLine.Priority%2A>|맞춤선의 상대적인 중요도 지정 합니다. 모든 지정 된 레이아웃 의사 결정 지점 활성화 되 고 우선 순위가 가장 되는 맞춤선만 표시 됩니다.|  
|<xref:System.Windows.Forms.Design.Behavior.SnapLine.Filter%2A>|맞춤선의 사용자 지정 범주를 정의합니다. 이 선택적 문자열입니다.|  
|<xref:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal%2A> 및 <xref:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical%2A>|맞춤선 가로 또는 세로 방향으로 각각에 있는지 여부를 나타냅니다.|  
  
 <xref:System.Windows.Forms.Design.ControlDesigner> 클래스는 해당 컨트롤 형식에 대 한 맞춤선 저장 된 <xref:System.Windows.Forms.Design.ControlDesigner.SnapLines%2A> 속성입니다. 이 정의 대부분의 컨트롤을 맞춤선이 기본 클래스 처리 만으로도 충분 합니다 <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Left>, <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Right>, <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Top>, 및 <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom> 컨트롤의 가장자리를 따라 정렬 되는 맞춤선입니다. 이 기본 조직 충분 하지 않은 경우 사용자 지정 컨트롤을 개발 하는 경우 재정의 <xref:System.Windows.Forms.Design.ControlDesigner.SnapLines%2A> 에서 파생 된 클래스의 속성 <xref:System.Windows.Forms.Design.ControlDesigner>합니다. 예를 들어, 다음 레이블 (컨트롤의 위쪽 및 아래쪽 가장자리) 하는 대신 텍스트의 기준선 위와 같은 텍스트 기반 컨트롤의 가로 맞춤선을 정렬 하는 것이 좋습니다.  
  
 <xref:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType%2A> 클래스에서 파생 될 수 없습니다.  
  
 Visual Studio에서이 기능에 대 한 지원은 광범위 한 내용은 [연습: Snaplines를 사용 하 여 Forms Windows에서 컨트롤 정렬](~/docs/framework/winforms/controls/walkthrough-arranging-controls-on-windows-forms-using-snaplines.md)합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />
    <altmember cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />
    <altmember cref="P:System.Windows.Forms.Design.ControlDesigner.SnapLines" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바꾸거나 비주얼 디자이너에서 제공 하는 기본 맞춤선 동작을 보완 하는 맞춤선을 명시적으로 만들어야 합니다. 맞춤선을 만들려면 맞춤선의 인스턴스를 추가한 다음이 <xref:System.Windows.Forms.Design.ControlDesigner.SnapLines%2A> 의 속성을 <xref:System.Windows.Forms.Design.ControlDesigner> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SnapLine (System.Windows.Forms.Design.Behavior.SnapLineType type, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Design.Behavior.SnapLineType type, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As SnapLineType, offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SnapLine(System::Windows::Forms::Design::Behavior::SnapLineType type, int offset);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Design.Behavior.SnapLine : System.Windows.Forms.Design.Behavior.SnapLineType * int -&gt; System.Windows.Forms.Design.Behavior.SnapLine" Usage="new System.Windows.Forms.Design.Behavior.SnapLine (type, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Windows.Forms.Design.Behavior.SnapLineType" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="type">만들 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />입니다. 맞춤선의 상대 위치와 방향을 나타냅니다.</param>
        <param name="offset">소유하고 있는 컨트롤의 왼쪽 위 원점을 기준으로 계산된 맞춤선의 위치(픽셀)입니다.</param>
        <summary>지정한 맞춤선 형식과 오프셋을 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 설정 합니다 <xref:System.Windows.Forms.Design.Behavior.SnapLine.Filter%2A> 속성을 `null` 하며 <xref:System.Windows.Forms.Design.Behavior.SnapLine.Priority%2A> 속성을 <xref:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SnapLine (System.Windows.Forms.Design.Behavior.SnapLineType type, int offset, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Design.Behavior.SnapLineType type, int32 offset, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As SnapLineType, offset As Integer, filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SnapLine(System::Windows::Forms::Design::Behavior::SnapLineType type, int offset, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Design.Behavior.SnapLine : System.Windows.Forms.Design.Behavior.SnapLineType * int * string -&gt; System.Windows.Forms.Design.Behavior.SnapLine" Usage="new System.Windows.Forms.Design.Behavior.SnapLine (type, offset, filter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Windows.Forms.Design.Behavior.SnapLineType" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">만들 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />입니다. 맞춤선의 상대 위치와 방향을 나타냅니다.</param>
        <param name="offset">소유하고 있는 컨트롤의 왼쪽 위 원점을 기준으로 계산된 맞춤선의 위치(픽셀)입니다.</param>
        <param name="filter">프로그래머가 정의한 맞춤선 범주를 지정하는 데 사용되는 <see cref="T:System.String" />입니다.</param>
        <summary>지정한 맞춤선 형식, 오프셋 및 필터 이름을 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 설정 합니다 <xref:System.Windows.Forms.Design.Behavior.SnapLine.Priority%2A> 속성을 <xref:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SnapLine (System.Windows.Forms.Design.Behavior.SnapLineType type, int offset, System.Windows.Forms.Design.Behavior.SnapLinePriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Design.Behavior.SnapLineType type, int32 offset, valuetype System.Windows.Forms.Design.Behavior.SnapLinePriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As SnapLineType, offset As Integer, priority As SnapLinePriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SnapLine(System::Windows::Forms::Design::Behavior::SnapLineType type, int offset, System::Windows::Forms::Design::Behavior::SnapLinePriority priority);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Design.Behavior.SnapLine : System.Windows.Forms.Design.Behavior.SnapLineType * int * System.Windows.Forms.Design.Behavior.SnapLinePriority -&gt; System.Windows.Forms.Design.Behavior.SnapLine" Usage="new System.Windows.Forms.Design.Behavior.SnapLine (type, offset, priority)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Windows.Forms.Design.Behavior.SnapLineType" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="priority" Type="System.Windows.Forms.Design.Behavior.SnapLinePriority" />
      </Parameters>
      <Docs>
        <param name="type">만들 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />입니다. 맞춤선의 상대 위치와 방향을 나타냅니다.</param>
        <param name="offset">소유하고 있는 컨트롤의 왼쪽 위 원점을 기준으로 계산된 맞춤선의 위치(픽셀)입니다.</param>
        <param name="priority">맞춤선의 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />입니다.</param>
        <summary>지정된 맞춤선 형식, 오프셋 및 우선 순위를 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 설정 합니다 <xref:System.Windows.Forms.Design.Behavior.SnapLine.Filter%2A> 속성을 `null`입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SnapLine (System.Windows.Forms.Design.Behavior.SnapLineType type, int offset, string filter, System.Windows.Forms.Design.Behavior.SnapLinePriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Design.Behavior.SnapLineType type, int32 offset, string filter, valuetype System.Windows.Forms.Design.Behavior.SnapLinePriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As SnapLineType, offset As Integer, filter As String, priority As SnapLinePriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SnapLine(System::Windows::Forms::Design::Behavior::SnapLineType type, int offset, System::String ^ filter, System::Windows::Forms::Design::Behavior::SnapLinePriority priority);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Design.Behavior.SnapLine : System.Windows.Forms.Design.Behavior.SnapLineType * int * string * System.Windows.Forms.Design.Behavior.SnapLinePriority -&gt; System.Windows.Forms.Design.Behavior.SnapLine" Usage="new System.Windows.Forms.Design.Behavior.SnapLine (type, offset, filter, priority)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Windows.Forms.Design.Behavior.SnapLineType" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="priority" Type="System.Windows.Forms.Design.Behavior.SnapLinePriority" />
      </Parameters>
      <Docs>
        <param name="type">만들 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />입니다. 맞춤선의 상대 위치와 방향을 나타냅니다.</param>
        <param name="offset">소유하고 있는 컨트롤의 왼쪽 위 원점을 기준으로 계산된 맞춤선의 위치(픽셀)입니다.</param>
        <param name="filter">프로그래머가 정의한 맞춤선 범주를 지정하는 데 사용되는 <see cref="T:System.String" />입니다.</param>
        <param name="priority">맞춤선의 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />입니다.</param>
        <summary>지정된 맞춤선 형식, 오프셋, 필터 이름 및 우선 순위를 사용하여 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 맞춤선의 속성을 모두 프로그래머가 제공한 값으로 설정합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority" />
      </Docs>
    </Member>
    <Member MemberName="AdjustOffset">
      <MemberSignature Language="C#" Value="public void AdjustOffset (int adjustment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AdjustOffset(int32 adjustment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdjustOffset (adjustment As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AdjustOffset(int adjustment);" />
      <MemberSignature Language="F#" Value="member this.AdjustOffset : int -&gt; unit" Usage="snapLine.AdjustOffset adjustment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adjustment" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="adjustment">맞춤선 오프셋을 변경할 픽셀 수입니다.</param>
        <summary>맞춤선의 <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> 속성을 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 맞춤선의 오프셋 거리 맞춤선이 연결된 된 컨트롤의 왼쪽 위 원점에서 위치한 픽셀입니다. 오프셋은 정수 값으로 설정할 수 있습니다, 있지만 일반적으로 맞춤선 유지 사용 권한에 포함 된 공간 관계 해당 <xref:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType%2A> 속성 값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string" Usage="System.Windows.Forms.Design.Behavior.SnapLine.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 맞춤선과 관련하여 프로그래머가 정의한 필터 범주를 가져옵니다.</summary>
        <value>필터 범주를 정의하는 <see cref="T:System.String" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.Behavior.SnapLine.Filter%2A> 속성 맞춤선의 사용자 지정 범주를 정의 하는 데 사용 됩니다. 필터 이름이 같은 맞춤선에 맞추기 서로 수 있습니다. 이 속성 컨트롤의 상태 또는 수행 되는 작업의 형식에 따라 맞춤선 범주를 다르게 노출 하려면 사용자 지정 컨트롤 디자이너에 사용할 수 있습니다. 예를 들어, round 컨트롤 "Center" 값 필터를 사용 하 여 사용자 지정 맞춤선을 제공 수 있습니다.  
  
 이 속성에는 언제 든 지 변경할 수 없습니다 및 생성 하는 동안 초기화 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.Design.Behavior.SnapLine.#ctor" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority" />
      </Docs>
    </Member>
    <Member MemberName="IsHorizontal">
      <MemberSignature Language="C#" Value="public bool IsHorizontal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHorizontal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHorizontal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHorizontal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHorizontal : bool" Usage="System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>가로 방향 맞춤선인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>가로 방향 맞춤선이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가로 방향 맞춤선 형식: <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Top>, <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom>를 <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal>, 및 <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType" />
      </Docs>
    </Member>
    <Member MemberName="IsVertical">
      <MemberSignature Language="C#" Value="public bool IsVertical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVertical" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVertical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVertical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVertical : bool" Usage="System.Windows.Forms.Design.Behavior.SnapLine.IsVertical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세로 방향 맞춤선인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>세로 방향 맞춤선이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 세로 맞춤선 형식: <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Left>, <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Right>, 및 <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="System.Windows.Forms.Design.Behavior.SnapLine.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결된 컨트롤의 원점부터 계산된 맞춤선의 오프셋(픽셀)을 가져옵니다.</summary>
        <value>맞춤선의 오프셋(픽셀)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤의 출처는 컨트롤의 왼쪽 위 지점입니다. 세로 맞춤선 가로 맞춤선을 0이 아닌 y 축에 하나만 있을 수 있습니다 하지만 0이 아닌 x 축 오프셋만 있을 수 있으므로 단일 오프셋 맞춤선의 위치를 나타낼 수 오프셋입니다.  
  
 합니다 <xref:System.Windows.Forms.Design.Behavior.SnapLine.Offset%2A> 속성은 생성 시 초기화 됩니다. 하지만 이후에 사용 하 여 변경할 수는 <xref:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Design.Behavior.SnapLinePriority Priority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Design.Behavior.SnapLinePriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Priority As SnapLinePriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Design::Behavior::SnapLinePriority Priority { System::Windows::Forms::Design::Behavior::SnapLinePriority get(); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Windows.Forms.Design.Behavior.SnapLinePriority" Usage="System.Windows.Forms.Design.Behavior.SnapLine.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.SnapLinePriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>맞춤선의 상대적인 중요도를 나타내는 값을 가져옵니다.</summary>
        <value>맞춤선의 우선 순위 범주를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.Behavior.SnapLine.Priority%2A> 속성은 컨트롤에 연결 된 맞춤선에 대 한 중요도의 범주를 설정 합니다.  
  
 Windows Forms 디자이너는 맞춤선을 컨트롤 추가 하는 동안 표시할 크기 조정 또는 이동 작업을 확인 하려면이 속성을 사용 합니다. 자세한 내용은 <xref:System.Windows.Forms.Design.Behavior.SnapLinePriority> 열거형을 참조하세요.  
  
 이 속성에는 언제 든 지 변경할 수 없습니다 및 생성 하는 동안 초기화 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />
        <altmember cref="Overload:System.Windows.Forms.Design.Behavior.SnapLine.#ctor" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSnap">
      <MemberSignature Language="C#" Value="public static bool ShouldSnap (System.Windows.Forms.Design.Behavior.SnapLine line1, System.Windows.Forms.Design.Behavior.SnapLine line2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSnap(class System.Windows.Forms.Design.Behavior.SnapLine line1, class System.Windows.Forms.Design.Behavior.SnapLine line2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShouldSnap (line1 As SnapLine, line2 As SnapLine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ShouldSnap(System::Windows::Forms::Design::Behavior::SnapLine ^ line1, System::Windows::Forms::Design::Behavior::SnapLine ^ line2);" />
      <MemberSignature Language="F#" Value="static member ShouldSnap : System.Windows.Forms.Design.Behavior.SnapLine * System.Windows.Forms.Design.Behavior.SnapLine -&gt; bool" Usage="System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap (line1, line2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line1" Type="System.Windows.Forms.Design.Behavior.SnapLine" />
        <Parameter Name="line2" Type="System.Windows.Forms.Design.Behavior.SnapLine" />
      </Parameters>
      <Docs>
        <param name="line1">지정된 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />입니다.</param>
        <param name="line2">지정한 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />을 맞출 대상 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />입니다.</param>
        <summary>지정한 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />을 다른 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />에 맞출지 여부를 나타내는 값을 반환합니다.</summary>
        <returns><paramref name="line1" />을 <paramref name="line2" />에 맞추려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapLineType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Design.Behavior.SnapLineType SnapLineType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Design.Behavior.SnapLineType SnapLineType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SnapLineType As SnapLineType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Design::Behavior::SnapLineType SnapLineType { System::Windows::Forms::Design::Behavior::SnapLineType get(); };" />
      <MemberSignature Language="F#" Value="member this.SnapLineType : System.Windows.Forms.Design.Behavior.SnapLineType" Usage="System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.SnapLineType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>일반적인 위치와 방향을 나타내는 맞춤선의 형식을 가져옵니다.</summary>
        <value>컨트롤 가장자리를 기준으로 맞춤선의 방향과 일반적인 위치를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비주얼 디자이너를 사용 하 여는 <xref:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType%2A> 맞춤 작업을 수행 하는 속성입니다. 일반적으로 서로 방향이 비슷한 맞춤선만 고정할 수 있습니다. 형식의 예를 들어 두 맞춤선 <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal> 맞춰질 수 있지만 <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal> 및 <xref:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical> 맞춤선 수 없습니다.  
  
 이 속성에는 언제 든 지 변경할 수 없습니다 및 생성 하는 동안 초기화 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority" />
        <altmember cref="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="snapLine.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 맞춤선의 문자열 표현을 반환합니다.</summary>
        <returns>현재 <see cref="T:System.String" />를 나타내는 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 형식, 오프셋, 우선 순위 및 계산 된 맞춤선의 필터 값에 대 한 정보를 포함 하는 문자열을 반환 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority" />
        <altmember cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter" />
      </Docs>
    </Member>
  </Members>
</Type>