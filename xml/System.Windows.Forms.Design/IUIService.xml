<Type Name="IUIService" FullName="System.Windows.Forms.Design.IUIService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3412136addae4e243bbb20a814ed3f67e96a3ea" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006075" /></Metadata><TypeSignature Language="C#" Value="public interface IUIService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUIService" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.IUIService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IUIService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IUIService" />
  <TypeSignature Language="F#" Value="type IUIService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("06A9C74B-5E32-4561-BE73-381B37869F4F")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>디자이너를 호스트 하는 개발 환경 개체의 사용자 인터페이스와 상호 작용을 사용 하도록 설정 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.IUIService> 오류 메시지를 표시, 대화 상자, 표시 및 글꼴 대화 상자 및 색 구성표를 같은 호스트의 앰비언트 속성을 통해 가져올 수는 <xref:System.Windows.Forms.Design.IUIService.Styles%2A> 사전 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 메서드를 호출 하는 디자이너 동사 메뉴 명령을 제공 하는 디자이너 만듭니다는 <xref:System.Windows.Forms.Design.IUIService>합니다. 예제를 사용 하려면 어셈블리에 샘플 코드를 컴파일 및 Windows Forms 애플리케이션에서 어셈블리에 대 한 참조를 추가 합니다. Visual Studio를 사용 하는 경우는 `IUIServiceExampleControl` 자동으로 추가 되는 **도구 상자**합니다. 인스턴스를 추가 합니다 `IUIServiceExampleControl` 에 <xref:System.Windows.Forms.Form>합니다. 호출 하는 디자이너 동사 명령에 액세스할 <xref:System.Windows.Forms.Design.IUIService> 메서드 중 하나는 컨트롤의 화면을 마우스 오른쪽 단추로 클릭 합니다. 또는 컨트롤의 스마트 태그 문자 모양을 클릭 및 스마트 태그 패널에서 항목을 선택 합니다.  
  
 [!code-cpp[IUIServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#1)]
 [!code-csharp[IUIServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#1)]
 [!code-vb[IUIServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanShowComponentEditor">
      <MemberSignature Language="C#" Value="public bool CanShowComponentEditor (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanShowComponentEditor(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.CanShowComponentEditor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanShowComponentEditor (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanShowComponentEditor(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member CanShowComponentEditor : obj -&gt; bool" Usage="iUIService.CanShowComponentEditor component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">확인 표시를 지원 하려면 구성 요소는 <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" />합니다.</param>
        <summary>구성 요소를 표시할 수 있는지 여부를 나타냅니다는 <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" />합니다.</summary>
        <returns><see langword="true" /> 지정된 된 구성 요소 구성 요소 편집기 폼;을 표시 하는 경우 그렇지 않으면 <see langword="false" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구성 요소 편집기 구성 요소 개체 모델 (COM)에서 속성 페이지와 비슷한 구성 요소 편집기 폼을 표시할 수 있습니다.  
  
 이 메서드는 지정된 된 구성 요소에 있는지 여부를 확인 하려면 확인을 <xref:System.ComponentModel.ComponentEditor> 표시할 수 있는 한 <xref:System.Windows.Forms.Design.ComponentEditorForm>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Design.IUIService.ShowComponentEditor(System.Object,System.Windows.Forms.IWin32Window)" />
      </Docs>
    </Member>
    <Member MemberName="GetDialogOwnerWindow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IWin32Window GetDialogOwnerWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.IWin32Window GetDialogOwnerWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.GetDialogOwnerWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDialogOwnerWindow () As IWin32Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::IWin32Window ^ GetDialogOwnerWindow();" />
      <MemberSignature Language="F#" Value="abstract member GetDialogOwnerWindow : unit -&gt; System.Windows.Forms.IWin32Window" Usage="iUIService.GetDialogOwnerWindow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IWin32Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>대화 상자를 표시할 때 소유자로 사용 해야 하는 창을 가져옵니다.</summary>
        <returns><see cref="T:System.Windows.Forms.IWin32Window" /> 를 모든 자식 대화 상자를 소유할 창을 나타내는입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 대화 상자는 소유자 애플리케이션에 자식은 및 작업 목록에 표시 되지 않습니다. 이 메서드가 반환을 <xref:System.Windows.Forms.IWin32Window> 나타내는 창에는 통합된 개발 환경에서 생성 되는 이러한 종류의 대화 상자에 대 한 소유자 여야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUIDirty">
      <MemberSignature Language="C#" Value="public void SetUIDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUIDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.SetUIDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUIDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUIDirty();" />
      <MemberSignature Language="F#" Value="abstract member SetUIDirty : unit -&gt; unit" Usage="iUIService.SetUIDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>UI 변경 되었음을 나타내는 플래그를 설정 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 UI 변경 했으며 새로 고쳐져 야 있는지를 나타냅니다. 도구 모음 또는 메뉴 항목의 상태가 변경 될 때마다 새로 고침 필요를 나타내는 두는 것이 반드시 합니다. 속도 대 한 이러한 요소의 상태를 캐시 하 고 업데이트 해야 할 때를 알아야 하는 대부분의 개발 환경. 예를 들어 개체 잘라내기 메뉴 항목을 복사 하는 디자이너 뷰 내에서 선택한 후이 메서드가 호출 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowComponentEditor">
      <MemberSignature Language="C#" Value="public bool ShowComponentEditor (object component, System.Windows.Forms.IWin32Window parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowComponentEditor(object component, class System.Windows.Forms.IWin32Window parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowComponentEditor(System.Object,System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowComponentEditor (component As Object, parent As IWin32Window) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowComponentEditor(System::Object ^ component, System::Windows::Forms::IWin32Window ^ parent);" />
      <MemberSignature Language="F#" Value="abstract member ShowComponentEditor : obj * System.Windows.Forms.IWin32Window -&gt; bool" Usage="iUIService.ShowComponentEditor (component, parent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="parent" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="component">표시할 구성 요소는 <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" />합니다.</param>
        <param name="parent"><see cref="T:System.Windows.Forms.IWin32Window" /> 모든 대화 상자를 부모입니다.</param>
        <summary>표시 하려고를 <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" /> 구성 요소에 대 한 합니다.</summary>
        <returns><see langword="true" /> 시도 성공할 경우 그렇지 않으면 <see langword="false" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.ComponentEditorForm> 는 구성 요소 개체 모델 (COM)에서 속성 페이지와 유사 합니다.  
  
 구성 요소는 구성 요소 편집기를 지원 하지 않는 경우는 <xref:System.ArgumentException> throw 됩니다. 이 방지 하려면 호출 해야 <xref:System.Windows.Forms.Design.IUIService.CanShowComponentEditor%2A> 첫 번째입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">구성 요소는 구성 요소 편집기를 지원 하지 않습니다.</exception>
        <altmember cref="M:System.Windows.Forms.Design.IUIService.CanShowComponentEditor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.Form form);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DialogResult ShowDialog(class System.Windows.Forms.Form form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowDialog(System.Windows.Forms.Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog(System::Windows::Forms::Form ^ form);" />
      <MemberSignature Language="F#" Value="abstract member ShowDialog : System.Windows.Forms.Form -&gt; System.Windows.Forms.DialogResult" Usage="iUIService.ShowDialog form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="form">표시할 <see cref="T:System.Windows.Forms.Form" />입니다.</param>
        <summary>대화 상자에서 지정된 된 폼을 표시 하려고 합니다.</summary>
        <returns>중 하나는 <see cref="T:System.Windows.Forms.DialogResult" /> 대화 상자에서 반환 된 결과 코드를 나타내는 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 인스턴스를 가져오려고 시도 합니다 <xref:System.Windows.Forms.Design.IUIService> 클래스 및 서비스의 호출 <xref:System.Windows.Forms.Design.IUIService.ShowDialog%2A> 메서드.  
  
 [!code-cpp[IUIServiceExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#4)]
 [!code-csharp[IUIServiceExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#4)]
 [!code-vb[IUIServiceExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DialogResult" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowError">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>메시지 상자에 지정된 된 오류 메시지를 표시합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowError">
      <MemberSignature Language="C#" Value="public void ShowError (Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowError(class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowError (ex As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowError(Exception ^ ex);" />
      <MemberSignature Language="F#" Value="abstract member ShowError : Exception -&gt; unit" Usage="iUIService.ShowError ex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ex">표시할 <see cref="T:System.Exception" />입니다.</param>
        <summary>메시지 상자에 지정 된 예외 및 예외에 대 한 정보를 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 메시지 상자 표시를 하도록 적절 하 게 개발 환경과 통합 될 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowError">
      <MemberSignature Language="C#" Value="public void ShowError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowError (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowError(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ShowError : string -&gt; unit" Usage="iUIService.ShowError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">표시할 오류 메시지입니다.</param>
        <summary>메시지 상자에 지정된 된 오류 메시지를 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 메시지 상자 표시를 하도록 적절 하 게 개발 환경과 통합 될 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowError">
      <MemberSignature Language="C#" Value="public void ShowError (Exception ex, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowError(class System.Exception ex, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowError(System.Exception,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowError (ex As Exception, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowError(Exception ^ ex, System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ShowError : Exception * string -&gt; unit" Usage="iUIService.ShowError (ex, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ex">표시할 <see cref="T:System.Exception" />입니다.</param>
        <param name="message">예외에 대 한 정보를 제공 하는 표시할 메시지입니다.</param>
        <summary>메시지 상자에 지정 된 예외 및 예외에 대 한 정보를 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 메시지 상자 표시를 하도록 적절 하 게 개발 환경과 통합 될 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 인스턴스를 가져오려고 시도 합니다 <xref:System.Windows.Forms.Design.IUIService> 서비스의 호출 및 <xref:System.Windows.Forms.Design.IUIService.ShowError%2A> 메서드.  
  
 [!code-cpp[IUIServiceExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#3)]
 [!code-csharp[IUIServiceExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#3)]
 [!code-vb[IUIServiceExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowMessage">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>메시지 상자에 지정된 된 메시지를 표시합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowMessage">
      <MemberSignature Language="C#" Value="public void ShowMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowMessage (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowMessage(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ShowMessage : string -&gt; unit" Usage="iUIService.ShowMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">표시할 메시지</param>
        <summary>메시지 상자에 지정된 된 메시지를 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 메시지 상자 표시 개발 환경에 적절 하 게 통합 되는 확인 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Design.IUIService.ShowMessage%2A> 메시지 상자를 표시 하는 방법입니다.  
  
 [!code-cpp[IUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[IUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#2)]
 [!code-vb[IUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMessage">
      <MemberSignature Language="C#" Value="public void ShowMessage (string message, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowMessage(string message, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowMessage(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowMessage (message As String, caption As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowMessage(System::String ^ message, System::String ^ caption);" />
      <MemberSignature Language="F#" Value="abstract member ShowMessage : string * string -&gt; unit" Usage="iUIService.ShowMessage (message, caption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">표시할 메시지입니다.</param>
        <param name="caption">메시지 상자의 캡션입니다.</param>
        <summary>지정 된 캡션 사용 하 여 메시지 상자에 지정된 된 메시지를 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 메시지 상자 표시 개발 환경에 적절 하 게 통합 되는 확인 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 인스턴스를 가져오려고 시도 합니다 <xref:System.Windows.Forms.Design.IUIService> 서비스의 호출 및 <xref:System.Windows.Forms.Design.IUIService.ShowMessage%2A> 메서드.  
  
 [!code-cpp[IUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[IUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#2)]
 [!code-vb[IUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMessage">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowMessage (string message, string caption, System.Windows.Forms.MessageBoxButtons buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DialogResult ShowMessage(string message, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowMessage(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowMessage (message As String, caption As String, buttons As MessageBoxButtons) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowMessage(System::String ^ message, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons);" />
      <MemberSignature Language="F#" Value="abstract member ShowMessage : string * string * System.Windows.Forms.MessageBoxButtons -&gt; System.Windows.Forms.DialogResult" Usage="iUIService.ShowMessage (message, caption, buttons)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
      </Parameters>
      <Docs>
        <param name="message">표시할 메시지입니다.</param>
        <param name="caption">대화 상자 캡션입니다.</param>
        <param name="buttons">중 하나를 <see cref="T:System.Windows.Forms.MessageBoxButtons" /> 값: <see cref="F:System.Windows.Forms.MessageBoxButtons.OK" />, <see cref="F:System.Windows.Forms.MessageBoxButtons.OKCancel" />합니다 <see cref="F:System.Windows.Forms.MessageBoxButtons.YesNo" />, 또는 <see cref="F:System.Windows.Forms.MessageBoxButtons.YesNoCancel" />합니다.</param>
        <summary>지정한 캡션 및 대화 상자에 배치 하는 단추를 사용 하 여 메시지 상자에 지정된 된 메시지를 표시 합니다.</summary>
        <returns>중 하나는 <see cref="T:System.Windows.Forms.DialogResult" /> 대화 상자에서 반환 된 결과 코드를 나타내는 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 메시지 상자 표시 개발 환경에 적절 하 게 통합 되는 확인 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.Design.IUIService.ShowMessage%2A> 메시지 상자를 표시 하는 방법입니다.  
  
 [!code-cpp[IUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#2)]
 [!code-csharp[IUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#2)]
 [!code-vb[IUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DialogResult" />
        <altmember cref="T:System.Windows.Forms.MessageBox" />
      </Docs>
    </Member>
    <Member MemberName="ShowToolWindow">
      <MemberSignature Language="C#" Value="public bool ShowToolWindow (Guid toolWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowToolWindow(valuetype System.Guid toolWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.IUIService.ShowToolWindow(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowToolWindow (toolWindow As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowToolWindow(Guid toolWindow);" />
      <MemberSignature Language="F#" Value="abstract member ShowToolWindow : Guid -&gt; bool" Usage="iUIService.ShowToolWindow toolWindow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolWindow" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="toolWindow"><see cref="T:System.Guid" /> 도구 창에 대 한 식별자입니다. 사용자 지정 수 있습니다 <see cref="T:System.Guid" /> 에서 미리 정의 된 값 중 하나 또는 <see cref="T:System.ComponentModel.Design.StandardToolWindows" />합니다.</param>
        <summary>지정한 도구 창이 표시 됩니다.</summary>
        <returns><see langword="true" /> 도구 창이 성공적으로 표시 된; <see langword="false" /> 경우 표시 되거나 발견 하지 못했습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 인스턴스를 가져오려고 시도 합니다 <xref:System.Windows.Forms.Design.IUIService> 서비스의 호출 및 <xref:System.Windows.Forms.Design.IUIService.ShowToolWindow%2A> 메서드.  
  
 [!code-cpp[IUIServiceExample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/IUIServiceExample/CPP/class1.cpp#5)]
 [!code-csharp[IUIServiceExample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/IUIServiceExample/CS/class1.cs#5)]
 [!code-vb[IUIServiceExample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IUIServiceExample/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.StandardToolWindows" />
      </Docs>
    </Member>
    <Member MemberName="Styles">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Styles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Styles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.IUIService.Styles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Styles As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Styles { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Styles : System.Collections.IDictionary" Usage="System.Windows.Forms.Design.IUIService.Styles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호스트의 환경에 관련 된 스타일의 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Collections.IDictionary" /> 스타일 설정이 들어 있는입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사전은 호스트 환경에서 정보를 제공할 수 있습니다. 최소한 표준 UI 텍스트 및 색에 대 한 강조 표시 하는 데 사용 해야 하는 글꼴의 구성 됩니다. 이러한 스타일은 "DialogFont" 및 "HighlightColor" 필요 합니다.  
  
 이러한 스타일 값은 스타일 인덱서로 키를 사용 하 여 사전에 액세스 하는 사전에 대 한 키로 사용 하 여 검색할 수 있습니다. 예를 들어: (구현 하는 개체 <xref:System.Windows.Forms.Design.IUIService>). 스타일 [(스타일 이름 문자열을 따옴표로)]입니다.  
  
   
  
## Examples  
 다음 코드 예제는 호스트 환경에서 대화 상자 글꼴을 가져옵니다.  
  
 [!code-cpp[Classic IUIService.Styles Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic IUIService.Styles Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IUIService.Styles Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic IUIService.Styles Example/CS/source.cs#1)]
 [!code-vb[Classic IUIService.Styles Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic IUIService.Styles Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
  </Members>
</Type>