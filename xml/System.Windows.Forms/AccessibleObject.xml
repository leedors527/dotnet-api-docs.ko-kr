<Type Name="AccessibleObject" FullName="System.Windows.Forms.AccessibleObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14b686f479793cbb7e6fd25b1bc140eeb0bda8e4" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58874997" /></Metadata><TypeSignature Language="C#" Value="public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibleObject extends System.Runtime.InteropServices.StandardOleMarshalObject implements class Accessibility.IAccessible, class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessibleObject&#xA;Inherits StandardOleMarshalObject&#xA;Implements IAccessible, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessibleObject : System::Runtime::InteropServices::StandardOleMarshalObject, Accessibility::IAccessible, System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type AccessibleObject = class&#xA;    inherit StandardOleMarshalObject&#xA;    interface IReflect&#xA;    interface IAccessible" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.StandardOleMarshalObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Accessibility.IAccessible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>접근성 응용 프로그램이 장애가 있는 사용자를 위해 응용 프로그램 UI(사용자 인터페이스)를 조정하는 데 사용하는 정보를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 접근성 응용 프로그램이 장애가 있는 사용자에 대 한 유용성을 개선 하기 위해 응용 프로그램의 기능을 조정할 수 있습니다.  
  
 시각 장애가 있는 사용자에 대 한 소프트웨어와 운영 체제의 기능을 조정할 수 있습니다. 예를 들어, 텍스트 및 이미지를 확대 하 고 대비를 사용 하 여 렌더링할 수 있습니다. 또한 색맹 적절 한 색 사용 하 여 사용자를 수용할 수 있습니다. 컴퓨터 화면의 변환 하는 화면 검토 기능을 사용 하 여 액세스할 수는 심각 하 게 시각 장애가 있는 사용자에 대 한 텍스트를 음성 이나 동적, 새로 고칠 수 있는, 브라유 점자 표시 되도록 합니다.  
  
 청각 장애인을 위해 깜박이 도구 모음; 같은 시각 신호를 사용 하는 프로그램을 디자인할 수 있습니다. 또는 텍스트를 음성된 메시지를 표시할 수 있습니다. 예를 들어, 켤 때의 `SoundSentry` 제어판에서 내게 필요한 옵션 기능을 사용 하면 시스템 경보 사운드 때마다 시각적 경고가 표시를 제공 합니다.  
  
 동작 장애가 있는 사용자에 대 한 컴퓨터 액세스 가능성 향상을 구체화 또는 키보드 및 마우스 사용을 제거 하는 컨트롤 디자인할 수 있습니다. 제어판 지원을 제공합니다. 예를 들어, 한 가지 대안은 탐색을 위한 마우스 대신 숫자 키패드를 사용 하는 것입니다. 라는 옵션을 `StickyKeys`, 없습니다 채로 두 개 이상의 키 (예: CTRL + P) 한 번에 한 번에 하나의 키를 입력 하 여 동일한 결과 얻기 위해 사용자를 사용 하도록 설정 합니다.  
  
 Cognitive를 사용 하 여 사용자가 있으며 언어 장애가 자신의 요구에 더 잘 맞도록 소프트웨어 프로그램을 디자인할 수 있습니다. 예를 들어, 이해, 표시, 적은 단어 및 초등학교 수준의 사용 하 여 이러한 사용자가 이용할 수 있습니다.  
  
 점유 장애가 있는 사용자에 대 한 점유 요인을 패턴을 제거 하기 위해 소프트웨어 프로그램을 디자인할 수 있습니다.  
  
 접근성 응용 프로그램에 대 한 정보를 포함 하 여 내게 필요한 옵션에 대 한 자세한 내용은 MSDN library에서 또는 Microsoft 웹 사이트에서 Microsoft 내게 필요한 옵션에 대 한 설명서를 참조 합니다.  
  
> [!NOTE]
>  사용 하는 <xref:System.Windows.Forms.AccessibleObject>에 대 한 참조를 추가 해야 합니다는 `Accessibility` 와 함께 설치 되는 어셈블리는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다. Windows Forms Active Accessibility 2.0 지원합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 내게 필요한 옵션 인식 차트를 만드는 방법을 보여 줍니다 컨트롤을 사용 하 여 <xref:System.Windows.Forms.AccessibleObject> 및 <xref:System.Windows.Forms.Control.ControlAccessibleObject> 액세스할 수 있는 정보를 노출 하는 클래스입니다. 컨트롤은 범례를 따라 두 곡선을 그립니다. 합니다 `ChartControlAccessibleObject` 클래스에서 파생 되는 `ControlAccessibleObject`에 사용 되는 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 차트 컨트롤에 대 한 사용자 지정 액세스할 수 있는 정보를 제공 하는 방법입니다. 차트 범례 실제 아니므로 <xref:System.Windows.Forms.Control> -컨트롤을 따르지만 그려지며 차트 컨트롤에 의해 되지 않은 기본 제공 정보를 액세스할 수 있습니다. 이 인해 합니다 `ChartControlAccessibleObject` 재정의 클래스를 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> 반환 하는 방법은 `CurveLegendAccessibleObject` 범례의 각 부분에 액세스할 수 있는 정보를 나타내는입니다. 인식 액세스할 수 있는 응용 프로그램에서이 컨트롤을 사용 하는 경우 컨트롤이 필요한 액세스할 수 있는 정보를 제공할 수 있습니다.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#1)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#1)]
 [!code-vb[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>이 클래스에서 상속 하는 경우에 모든 멤버를 재정의할 수 있습니다.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessibleObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.AccessibleObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로이 메서드를 사용 하 여 액세스 가능 개체를 만들 때 제공 하는 응용 프로그램에 특정 기능을 제공 하는 클래스의 메서드와 속성의 고유한 구현 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accChildCount">
      <MemberSignature Language="C#" Value="int Accessibility.IAccessible.accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Accessibility.IAccessible.accChildCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accChildCount As Integer Implements IAccessible.accChildCount" />
      <MemberSignature Language="C++ CLI" Value="property int Accessibility::IAccessible::accChildCount { int get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accChildCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 개체에 속한 자식 인터페이스의 수를 가져옵니다. 이 멤버에 대한 설명은 <see cref="P:Accessibility.IAccessible.accChildCount" />를 참조하세요.</summary>
        <value>이 개체에 속한 액세스 가능한 자식 개체의 수입니다. 개체에 자식 개체가 없으면 이 값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:Accessibility.IAccessible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accDoDefaultAction">
      <MemberSignature Language="C#" Value="void IAccessible.accDoDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accDoDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accDoDefaultAction (childID As Object) Implements IAccessible.accDoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accDoDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::accDoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">액세스 가능한 개체를 나타내는 <see cref="T:Accessibility.IAccessible" /> 인터페이스/자식 ID 쌍에 들어 있는 자식 ID입니다.</param>
        <summary>지정된 개체의 기본 동작을 수행합니다. 모든 개체마다 기본 작업이 있는 것은 아닙니다. 이 멤버에 대한 설명은 <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />를 참조하세요.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:Accessibility.IAccessible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accFocus">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accFocus As Object Implements IAccessible.accFocus" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accFocus { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accFocus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>키보드 포커스를 갖는 개체를 가져옵니다. 이 멤버에 대한 설명은 <see cref="P:Accessibility.IAccessible.accFocus" />를 참조하세요.</summary>
        <value>키보드 포커스를 갖는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 값 유형의 <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> 키보드 포커스가 있는 개체의 속성에 따라 달라 집니다. 다음 표에서 개체 형식에 <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> 속성에서 반환 합니다.  
  
|형식|설명|  
|----------|-----------------|  
|`null`|이 개체 자체는 키보드 포커스가 없고 키보드 포커스를가지고 있는 자식이 없습니다.|  
|정수|현재 개체에 키보드 포커스가 없으면 0 그렇지 않은 경우 키보드 포커스가 있는 자식 액세스 가능 개체의 자식 ID입니다.|  
|<xref:Accessibility.IAccessible>|키보드 포커스가 있는 자식 액세스 가능 개체입니다.|  
  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:Accessibility.IAccessible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accHitTest">
      <MemberSignature Language="C#" Value="object IAccessible.accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accHitTest(int32 xLeft, int32 yTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function accHitTest (xLeft As Integer, yTop As Integer) As Object Implements IAccessible.accHitTest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accHitTest(int xLeft, int yTop) = Accessibility::IAccessible::accHitTest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft">가로 좌표입니다.</param>
        <param name="yTop">세로 좌표입니다.</param>
        <summary>지정된 화면 좌표의 자식 개체를 가져옵니다. 이 멤버에 대한 설명은 <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />를 참조하세요.</summary>
        <returns><paramref name="xLeft" /> 및 <paramref name="yTop" />에 지정된 점에 위치한 액세스 가능한 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 개체 형식에 <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A> 메서드를 반환할 수 있습니다.  
  
|형식|설명|  
|----------|-----------------|  
|<xref:Accessibility.IAccessible>|지정된 된 방향에 액세스할 수 있는 개체입니다.|  
|정수|0 이면 지정 된 포인터가 현재 개체 또는 개체의 경계입니다. 그렇지 않은 경우 지정된 된 방향에 액세스할 수 있는 개체를 식별 하는 자식 ID입니다.|  
  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:Accessibility.IAccessible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accLocation">
      <MemberSignature Language="C#" Value="void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, childID As Object) Implements IAccessible.accLocation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accLocation([Runtime::InteropServices::Out] int % pxLeft, [Runtime::InteropServices::Out] int % pyTop, [Runtime::InteropServices::Out] int % pcxWidth, [Runtime::InteropServices::Out] int % pcyHeight, System::Object ^ childID) = Accessibility::IAccessible::accLocation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft">이 메서드가 반환될 때 개체의 왼쪽 가장자리의 x 좌표가 포함됩니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <param name="pyTop">이 메서드가 반환될 때 개체의 위쪽 가장자리의 y 좌표가 포함됩니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <param name="pcxWidth">이 메서드가 반환될 때 개체의 너비가 포함됩니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <param name="pcyHeight">이 메서드가 반환될 때 개체의 높이가 포함됩니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <param name="childID">액세스 가능한 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체의 위치를 가져오고, 자식 ID이면 개체의 자식 개체 중 한 개체의 위치를 가져옵니다.</param>
        <summary>개체의 현재 화면 위치를 가져옵니다. 이 멤버에 대한 설명은 <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />를 참조하세요.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:Accessibility.IAccessible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accNavigate">
      <MemberSignature Language="C#" Value="object IAccessible.accNavigate (int navDir, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accNavigate(int32 navDir, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function accNavigate (navDir As Integer, childID As Object) As Object Implements IAccessible.accNavigate" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accNavigate(int navDir, System::Object ^ childID) = Accessibility::IAccessible::accNavigate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir">탐색할 방향을 지정하는 <see cref="T:System.Windows.Forms.AccessibleNavigation" /> 열거형 중 하나입니다.</param>
        <param name="childID">액세스 가능한 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체에서 시작하고, 자식 ID이면 개체의 자식 개체 중 한 개체에서 시작합니다.</param>
        <summary>현재 개체를 기준으로 액세스 가능한 개체를 탐색합니다. 이 멤버에 대한 설명은 <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />를 참조하세요.</summary>
        <returns><paramref name="navDir" />에 지정된 값에 위치한 액세스 가능한 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 개체 형식에 <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A> 메서드를 반환할 수 있습니다.  
  
|형식|설명|  
|----------|-----------------|  
|`null`|지정된 된 방향에 액세스할 수 있는 개체는 없습니다.|  
|<xref:Accessibility.IAccessible>|지정된 된 방향에 액세스할 수 있는 개체입니다.|  
|정수|지정된 된 방향에 액세스할 수 있는 개체를 식별 하는 자식 ID입니다. 부모를 사용 하 여 <xref:Accessibility.IAccessible> 및 액세스할 수 있는 개체에 액세스 하려면 자식 ID입니다.|  
  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:Accessibility.IAccessible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accParent">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accParent As Object Implements IAccessible.accParent" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accParent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 개체의 액세스 가능한 부모 개체를 가져옵니다. 이 멤버에 대한 설명은 <see cref="P:Accessibility.IAccessible.accParent" />를 참조하세요.</summary>
        <value>액세스 가능한 개체의 부모를 나타내는 <see cref="T:Accessibility.IAccessible" />이며, 부모 개체가 없으면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:Accessibility.IAccessible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다. 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelect">
      <MemberSignature Language="C#" Value="void IAccessible.accSelect (int flagsSelect, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accSelect(int32 flagsSelect, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accSelect (flagsSelect As Integer, childID As Object) Implements IAccessible.accSelect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accSelect(int flagsSelect, System::Object ^ childID) = Accessibility::IAccessible::accSelect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect"><see cref="T:System.Windows.Forms.AccessibleSelection" /> 값의 비트 조합입니다.</param>
        <param name="childID">선택 영역을 변경할 내게 필요한 옵션 지원 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체를 선택하고, 자식 ID이면 개체의 자식 개체 중 한 개체를 선택합니다.</param>
        <summary>선택을 수정하거나 액세스 가능 개체의 키보드 포커스를 이동합니다. 이 멤버에 대한 설명은 <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />를 참조하십시오.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음을 설명 하는 <xref:System.Windows.Forms.AccessibleSelection> 호출할 때 지정 하는 값 `Select` 복잡 한 선택 작업을 수행 합니다.  
  
|작업|플래그 조합|  
|---------------|----------------------|  
|클릭을 시뮬레이션할|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.TakeSelection>|  
|CTRL + 클릭을 시뮬레이션 하 여 대상 항목 선택|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.AddSelection>|  
|CTRL + 클릭을 시뮬레이션 하 여 대상 항목의 선택을 취소 하려면|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>|  
|시뮬레이션 SHIFT + 클릭|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>|  
|개체의 범위를 선택 하 여 마지막 개체에 포커스를 둡니다|지정 <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> 선택 영역 앵커를 설정 하려면 시작 개체입니다. 그런 다음 Select를 다시 호출 하 고 지정 <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> 또는 <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection> 마지막 개체입니다.|  
|모든 개체의 선택을 취소 하려면|지정 <xref:System.Windows.Forms.AccessibleSelection.TakeSelection> 모든 개체에 있습니다. 이 플래그는 방금 선택한 것을 제외 하 고 선택한 개체를 모두 선택 취소 합니다. 그런 다음 Select를 다시 호출 하 고 지정 <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection> 동일한 개체에서.|  
  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:Accessibility.IAccessible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelection">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accSelection As Object Implements IAccessible.accSelection" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accSelection { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>액세스 가능한 개체의 선택된 자식 개체를 가져옵니다. 이 멤버에 대한 설명은 <see cref="P:Accessibility.IAccessible.accSelection" />를 참조하세요.</summary>
        <value>액세스 가능한 개체의 선택된 자식 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 개체 형식에 <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A> 속성 반환  
  
|형식|설명|  
|----------|-----------------|  
|`null`|자식 개체가 선택 됩니다.|  
|<xref:Accessibility.IAccessible>|선택한 자식 액세스 가능 개체입니다.|  
|정수|선택 된 액세스 가능 개체를 식별 하는 자식 ID입니다. 부모를 사용 하 여 <xref:Accessibility.IAccessible> 및 액세스할 수 있는 개체에 액세스 하려면 자식 ID입니다.|  
|`IEnumVARIANT`|선택 된 자식 개체의 목록입니다.|  
  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:Accessibility.IAccessible> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accChild">
      <MemberSignature Language="C#" Value="object IAccessible.get_accChild (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accChild(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accChild (childID As Object) As Object Implements IAccessible.get_accChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accChild(System::Object ^ childID) = Accessibility::IAccessible::get_accChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">검색할 자식 개체의 ID 번호입니다.</param>
        <summary>지된 자식 개체를 검색합니다.</summary>
        <returns>존재하는 경우 지정된 자식 개체이고, 존재하지 않는 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDefaultAction">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDefaultAction (childID As Object) As String Implements IAccessible.get_accDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::get_accDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">기본 작업을 가져올 내게 필요한 옵션 지원 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체를 선택하고, 자식 ID이면 개체의 자식 개체 중 한 개체를 선택합니다.</param>
        <summary>지정된 개체의 기본 작업을 나타내는 문자열을 반환합니다.</summary>
        <returns><paramref name="childID" />라는 기본 작업을 나타내는 문자열이고, <paramref name="childID" />에 기본 작업이 없는 경우 <see langword="name" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDescription">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDescription (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDescription(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDescription (childID As Object) As String Implements IAccessible.get_accDescription" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDescription(System::Object ^ childID) = Accessibility::IAccessible::get_accDescription;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">설명을 가져올 내게 필요한 옵션 지원 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체를 선택하고, 자식 ID이면 개체의 자식 개체 중 한 개체를 선택합니다.</param>
        <summary>지정한 내게 필요한 옵션 지원 개체의 시각적 모양을 설명하는 문자열을 반환합니다.</summary>
        <returns>지정된 내게 필요한 옵션 지원 개체를 설명하는 지역화된 문자열입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelp">
      <MemberSignature Language="C#" Value="string IAccessible.get_accHelp (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accHelp(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelp (childID As Object) As String Implements IAccessible.get_accHelp" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accHelp(System::Object ^ childID) = Accessibility::IAccessible::get_accHelp;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">도움말 정보를 가져올 내게 필요한 옵션 지원 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체를 선택하고, 자식 ID이면 개체의 자식 개체 중 한 개체를 선택합니다.</param>
        <summary>지정된 내게 필요한 옵션 지원 개체와 연결된 WinHelp 파일의 전체 경로를 검색합니다.</summary>
        <returns><paramref name="childID" />와 연결된 WinHelp 파일의 전체 경로입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelpTopic">
      <MemberSignature Language="C#" Value="int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Accessibility.IAccessible.get_accHelpTopic([out] string&amp; pszHelpFile, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelpTopic (ByRef pszHelpFile As String, childID As Object) As Integer Implements IAccessible.get_accHelpTopic" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Accessibility.IAccessible.get_accHelpTopic([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ childID) = Accessibility::IAccessible::get_accHelpTopic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile">이 메서드가 반환되면 WinHelp 파일의 전체 경로는 지정된 개체와 연결됩니다.</param>
        <param name="childID">도움말 토픽을 검색할 내게 필요한 옵션 지원 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체를 선택하고, 자식 ID이면 개체의 자식 개체 중 하나를 선택합니다.</param>
        <summary>파일에서 특정 항목의 식별자와 함께 지정된 개체와 연결된 WinHelp 파일의 전체 경로를 검색합니다.</summary>
        <returns><paramref name="pszHelpFile" />에서 특정 토픽의 식별자입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accKeyboardShortcut">
      <MemberSignature Language="C#" Value="string IAccessible.get_accKeyboardShortcut (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accKeyboardShortcut(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accKeyboardShortcut (childID As Object) As String Implements IAccessible.get_accKeyboardShortcut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accKeyboardShortcut(System::Object ^ childID) = Accessibility::IAccessible::get_accKeyboardShortcut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">바로 가기 키를 가져올 내게 필요한 옵션 지원 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체를 선택하고, 자식 ID이면 개체의 자식 개체 중 한 개체를 선택합니다.</param>
        <summary>지정된 개체의 바로 가기 키 또는 액세스 키를 검색합니다.</summary>
        <returns>바로 가기 키를 식별하는 지역화된 문자열이고, 바로 가기 키가 지정된 개체와 연결되지 않은 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accName">
      <MemberSignature Language="C#" Value="string IAccessible.get_accName (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accName(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accName (childID As Object) As String Implements IAccessible.get_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accName(System::Object ^ childID) = Accessibility::IAccessible::get_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">이름을 검색해야 하는 내게 필요한 옵션 지원 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체를 선택하고, 자식 ID이면 개체의 자식 개체 중 한 개체를 선택합니다.</param>
        <summary>지정된 개체의 이름을 검색합니다.</summary>
        <returns>지정된 개체의 이름입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accRole">
      <MemberSignature Language="C#" Value="object IAccessible.get_accRole (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accRole(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accRole (childID As Object) As Object Implements IAccessible.get_accRole" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accRole(System::Object ^ childID) = Accessibility::IAccessible::get_accRole;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">역할 정보를 가져올 내게 필요한 옵션 지원 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체를 선택하고, 자식 ID이면 개체의 자식 개체 중 한 개체를 선택합니다.</param>
        <summary>지정된 개체의 역할을 설명하는 정보를 검색합니다.</summary>
        <returns>지정된 액세스 가능 개체에 대한 역할 정보를 제공하는 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accState">
      <MemberSignature Language="C#" Value="object IAccessible.get_accState (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accState(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accState (childID As Object) As Object Implements IAccessible.get_accState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accState(System::Object ^ childID) = Accessibility::IAccessible::get_accState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">상태 정보를 가져올 내게 필요한 옵션 지원 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체를 선택하고, 자식 ID이면 개체의 자식 개체 중 한 개체를 선택합니다.</param>
        <summary>지정된 내게 필요한 옵션 지원 개체의 현재 상태를 검색합니다.</summary>
        <returns>지정된 내게 필요한 옵션 지원 개체의 현재 상태를 설명하는 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accValue">
      <MemberSignature Language="C#" Value="string IAccessible.get_accValue (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accValue(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accValue (childID As Object) As String Implements IAccessible.get_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accValue(System::Object ^ childID) = Accessibility::IAccessible::get_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">값을 검색해야 하는 내게 필요한 옵션 지원 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체를 선택하고, 자식 ID이면 개체의 자식 개체 중 한 개체를 선택합니다.</param>
        <summary>지정된 내게 필요한 옵션 지원 개체의 값을 검색합니다. 모든 개체에 값이 있는 것은 아닙니다.</summary>
        <returns><paramref name="childID" /> 값이고, 개체에 값이 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accName">
      <MemberSignature Language="C#" Value="void IAccessible.set_accName (object childID, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accName(object childID, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accName (childID As Object, newName As String) Implements IAccessible.set_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accName(System::Object ^ childID, System::String ^ newName) = Accessibility::IAccessible::set_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">이름을 새로 할당할 내게 필요한 옵션 지원 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체를 선택하고, 자식 ID이면 개체의 자식 개체 중 한 개체를 선택합니다.</param>
        <param name="newName"><paramref name="childID" />에 할당할 새 이름입니다.</param>
        <summary>지정된 요소에 새 액세스 가능한 이름을 할당합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accValue">
      <MemberSignature Language="C#" Value="void IAccessible.set_accValue (object childID, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accValue(object childID, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accValue (childID As Object, newValue As String) Implements IAccessible.set_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accValue(System::Object ^ childID, System::String ^ newValue) = Accessibility::IAccessible::set_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accValue(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">값을 새로 할당할 내게 필요한 옵션 지원 개체의 ID 번호입니다. 이 매개 변수가 0이면 해당 개체를 선택하고, 자식 ID이면 개체의 자식 개체 중 한 개체를 선택합니다.</param>
        <param name="newValue">지정된 내게 필요한 옵션 지원 개체에 할당할 새로운 값입니다.</param>
        <summary>지정된 요소에 새 값을 할당합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내게 필요한 옵션 지원 개체의 위치와 크기를 가져옵니다.</summary>
        <value>내게 필요한 옵션 지원 개체의 경계를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> 속성 화면 좌표에서 개체의 경계 사각형을 검색 합니다. 사각형이 아닌 도형 개체가 있으면이 속성은 전체 개체 영역을 완전히 둘러싸는 가장 작은 사각형을 나타냅니다. 따라서 목록 보기 항목 등과 같은 사각형이 아닌 개체에 대 한 개체의 경계 사각형의 좌표를 실패할 수 있습니다를 호출 하 여 테스트 합니다 <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> 메서드를 때문에 <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> 픽셀 단위의 기준 개체의 경계를 결정 합니다.  
  
   
  
## Examples  
 다음 예제에서는 내게 필요한 옵션 인식 차트를 만드는 컨트롤을 사용 하는 <xref:System.Windows.Forms.AccessibleObject> 및 <xref:System.Windows.Forms.Control.ControlAccessibleObject> 액세스할 수 있는 정보를 노출 하는 클래스입니다. 컨트롤은 범례를 따라 두 곡선을 그립니다. 합니다 `ChartControlAccessibleObject` 클래스에서 파생 되는 `ControlAccessibleObject`에 사용 되는 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 차트 컨트롤에 대 한 사용자 지정 액세스할 수 있는 정보를 제공 하는 방법입니다. 차트 범례 실제 아니므로 <xref:System.Windows.Forms.Control> -컨트롤을 따르지만 그려지며 차트 컨트롤에 의해 되지 않은 기본 제공 정보를 액세스할 수 있습니다. 이 인해 합니다 `ChartControlAccessibleObject` 재정의 클래스를 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> 반환 하는 방법은 `CurveLegendAccessibleObject` 범례의 각 부분에 액세스할 수 있는 정보를 나타내는입니다. 인식 액세스할 수 있는 응용 프로그램에서이 컨트롤을 사용 하는 경우 컨트롤이 필요한 액세스할 수 있는 정보를 제공할 수 있습니다.  
  
 이 코드 예제를 재정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> 속성입니다. 참조 된 <xref:System.Windows.Forms.AccessibleObject> 전체 코드 예제에 대 한 클래스 개요입니다.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">컨트롤의 경계를 검색할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>기본 구현 개체가 시스템 컨트롤에 래핑하는 경우 액세스 가능한 개체의 경계 사각형을 반환 합니다. 그러지 않으면 반환 <see cref="F:System.Drawing.Rectangle.Empty" />합니다. 표시 되는 모든 액세스 가능한 개체는이 메서드를 지원 해야 합니다. 사운드 개체는이 메서드를 지원 하지 않습니다.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public virtual string DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultAction { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAction : string" Usage="System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체의 기본 작업을 설명하는 문자열을 가져옵니다. 모든 개체마다 기본 작업이 있는 것은 아닙니다.</summary>
        <value>개체의 기본 작업에 대한 설명 또는 이 개체에 기본 작업이 없는 경우 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문자열 하지 개체의 역할이 결과적으로 개체에서 수행 되는 동작을 설명 합니다. 즉, 문서를 인쇄 하는 도구 모음 단추에 "현재 문서를 인쇄 합니다." 대신 "Press"의 기본 작업 해당 값을 사용 하 여 개체의 기본 동작을 혼동 하지 마십시오.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">컨트롤의 기본 동작을 검색할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>개체가 기본 동작이; 시스템 컨트롤을 래핑하는 경우 기본 구현에서는 액세스 가능 개체의 기본 동작을 반환 그러지 않으면 반환 <see langword="null" />합니다. 작업을 수행 하는 컨트롤에만이 메서드를 지원 해야 합니다. 일부 개체에는 기본적으로 작업 하 고 일부 개체는 관련 기본 작업을 해야 할 수는 <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> 다음 예제와 같이 속성: 선택한 확인란을 선택 "취소" 기본 작업을 있고 값이 "선택"을 선택 합니다. 확인란 선택이 취소 "확인" 기본 작업을 있고 값이 "선택 취소 합니다." "인쇄" 레이블이 붙은 단추 기본 동작이 "Press,"의 값이 없는 합니다. 정적 텍스트 컨트롤 또는 "Printer" 보여 주는 편집 컨트롤에 기본 작업이 없는 경우에 값이 "Printer"로 지정 합니다. 개체의 <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> 속성 동사 또는 짧은 동사 구 여야 합니다.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Windows.Forms.AccessibleObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정한 개체의 시각적 모양을 설명하는 문자열을 가져옵니다. 모든 개체에 설명이 있는 것은 아닙니다.</summary>
        <value>사용자에게 표시되는 개체의 시각적 모양에 대한 설명이며 개체에 설명이 없으면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 사용자에 게 개체의 시각적 모양을 설명합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">컨트롤에 대한 설명을 검색할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>기본 구현은 반환 액세스 가능 개체의 설명을 개체가 시스템 컨트롤에 래핑하는 경우 그러지 않으면 반환 <see langword="null" />합니다. 설명은 이해를 돕기 위해 시각 장애인 위해 일반적으로 사용 됩니다. 상황에 맞는 검색 또는 다른 응용 프로그램에 대 한 데도 수 있습니다. 서버를 지원 해야 합니다 <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> 속성에 대 한 설명, 없는 경우 또는 중복 될 경우 개체를 기준으로 <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, <see cref="P:System.Windows.Forms.AccessibleObject.State" />, 및 <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> 속성. 예를 들어, "확인" 단추에 추가 정보 필요 하지 않습니다 하지만 선인장 그림이 표시 된 단추입니다. 합니다 <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, 및 아마도 <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> 선인장 단추에 대 한 속성에는 용도 설명 하지만 <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> "선인장 그림을 표시 하는 단추"와 같은 명백 하지 않은 정보를 전달 하는 속성입니다.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="accessibleObject.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 액세스 가능 개체에 연결된 기본 동작을 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트 개체를 검사 하 여 개체의 기본 동작을 검색할 수 있습니다 <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> 속성입니다. 클라이언트 사용 하는 자동화 (지원) 하는 경우 대신 <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> 개체의 기본 작업을 수행할 수 있습니다. 그러나 <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> 개체를 수행 하는 쉬운 방법을 작업 사용 하는 가장 일반적으로 제공 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">컨트롤의 기본 동작을 수행할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>시스템 제공 사용자 인터페이스 요소에서 수행 되는 기본 동작 키보드 상태에 따라 달라 집니다. 즉, SHIFT 등 보조키를 ALT 또는 ctrl 키가 눌러져 있는지 (또는 사용자 작업에 의해 프로그래밍 방식으로) 때 <see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" /> 호출 되는 기본 동작 하지 않을 경우 해당 키 않은 경우와 동일 합니다. 모든 개체마다 기본 작업이 있는 것은 아닙니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChild (index As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetChild : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetChild : int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">액세스 가능한 자식의 인덱스(0부터 시작)입니다.</param>
        <summary>지정된 인덱스에 해당하는 액세스 가능한 자식을 검색합니다.</summary>
        <returns>지정한 인덱스에 해당하는 내게 필요한 옵션 지원 자식을 나타내는 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 내게 필요한 옵션 인식 차트를 만드는 컨트롤을 사용 하는 <xref:System.Windows.Forms.AccessibleObject> 및 <xref:System.Windows.Forms.Control.ControlAccessibleObject> 액세스할 수 있는 정보를 노출 하는 클래스입니다. 컨트롤은 범례를 따라 두 곡선을 그립니다. 합니다 `ChartControlAccessibleObject` 클래스에서 파생 되는 `ControlAccessibleObject`에 사용 되는 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 차트 컨트롤에 대 한 사용자 지정 액세스할 수 있는 정보를 제공 하는 방법입니다. 차트 범례 실제 아니므로 <xref:System.Windows.Forms.Control> -컨트롤을 따르지만 그려지며 차트 컨트롤에 의해 되지 않은 기본 제공 정보를 액세스할 수 있습니다. 이 인해 합니다 `ChartControlAccessibleObject` 재정의 클래스를 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> 반환 하는 방법은 `CurveLegendAccessibleObject` 범례의 각 부분에 액세스할 수 있는 정보를 나타내는입니다. 인식 액세스할 수 있는 응용 프로그램에서이 컨트롤을 사용 하는 경우 컨트롤이 필요한 액세스할 수 있는 정보를 제공할 수 있습니다.  
  
 이 코드 예제를 재정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> 메서드. 참조 된 <xref:System.Windows.Forms.AccessibleObject> 전체 코드 예제에 대 한 클래스 개요입니다.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>모든 액세스 가능 개체는이 속성을 지원 해야 합니다. 반환 하는 경우 메서드를 재정의 하지 않은 <see langword="null" />합니다. 액세스 가능한 개체를 사용자 지정 액세스 가능 자식을 제공 해야 하는 경우이 메서드를 재정의 합니다. 인덱스가 유효 경우이 메서드에서 반환 해야 <see langword="null" />합니다. 이 메서드를 재정의 하면 재정의 해야 <see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public virtual int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChildCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildCount();" />
      <MemberSignature Language="F#" Value="abstract member GetChildCount : unit -&gt; int&#xA;override this.GetChildCount : unit -&gt; int" Usage="accessibleObject.GetChildCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>액세스 가능한 개체에 속하는 자식 수를 검색합니다.</summary>
        <returns>액세스 가능한 개체에 속하는 자식 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 내게 필요한 옵션 인식 차트를 만드는 컨트롤을 사용 하는 <xref:System.Windows.Forms.AccessibleObject> 및 <xref:System.Windows.Forms.Control.ControlAccessibleObject> 액세스할 수 있는 정보를 노출 하는 클래스입니다. 컨트롤은 범례를 따라 두 곡선을 그립니다. 합니다 `ChartControlAccessibleObject` 클래스에서 파생 되는 `ControlAccessibleObject`에 사용 되는 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 차트 컨트롤에 대 한 사용자 지정 액세스할 수 있는 정보를 제공 하는 방법입니다. 차트 범례 실제 아니므로 <xref:System.Windows.Forms.Control> -컨트롤을 따르지만 그려지며 차트 컨트롤에 의해 되지 않은 기본 제공 정보를 액세스할 수 있습니다. 이 인해 합니다 `ChartControlAccessibleObject` 재정의 클래스를 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> 반환 하는 방법은 `CurveLegendAccessibleObject` 범례의 각 부분에 액세스할 수 있는 정보를 나타내는입니다. 인식 액세스할 수 있는 응용 프로그램에서이 컨트롤을 사용 하는 경우 컨트롤이 필요한 액세스할 수 있는 정보를 제공할 수 있습니다.  
  
 이 코드에서는 재정의 보여 줍니다.는 <xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A> 메서드. 참조 된 <xref:System.Windows.Forms.AccessibleObject> 전체 코드 예제에 대 한 클래스 개요입니다.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>모든 개체는이 속성을 지원 해야 합니다. 기본 구현된 경우에는 -1을 반환합니다. 액세스 가능한 개체를 사용자 지정 액세스 가능 자식을 제공 해야 하는 경우이 메서드를 재정의 합니다. 이 메서드를 재정의 하면 재정의 해야 <see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetFocused">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetFocused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetFocused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetFocused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocused () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetFocused();" />
      <MemberSignature Language="F#" Value="abstract member GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetFocused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>키보드 포커스를 갖는 개체를 검색합니다.</summary>
        <returns>현재 포커스를 받은 자식을 지정하는 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다. 이 메서드는 호출 개체 자신이 포커스를 받는 경우 자신을 반환합니다. 포커스를 갖는 개체가 없으면 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 활성 창에 키보드 포커스 개념이 관련 되어 있습니다. 활성 창에는 사용자가 작업 전경 창이입니다. 키보드 포커스가 있는 개체에는 활성 창 또는 활성 창의 자식 개체입니다.  
  
 하나의 개체 또는 항목 컨테이너 내에서 한 번에 포커스가 있을 수 있습니다. 키보드 포커스가 있는 개체 반드시 선택한 개체가 아닙니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">컨트롤을 검색할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>키보드 포커스를 받을 수 있는 모든 개체는이 속성을 지원 해야 합니다.</para></block>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHelpTopic">
      <MemberSignature Language="C#" Value="public virtual int GetHelpTopic (out string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHelpTopic([out] string&amp; fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHelpTopic (ByRef fileName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHelpTopic([Runtime::InteropServices::Out] System::String ^ % fileName);" />
      <MemberSignature Language="F#" Value="abstract member GetHelpTopic :  -&gt; int&#xA;override this.GetHelpTopic :  -&gt; int" Usage="accessibleObject.GetHelpTopic fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName">반환 시 이 속성에는 이 액세스 가능 개체에 연결된 도움말 파일의 경로가 포함됩니다.</param>
        <summary>도움말 항목 식별자에 대한 식별자와 이 액세스 가능 개체에 연결된 도움말 파일의 경로를 가져옵니다.</summary>
        <returns>도움말 항목에 대한 식별자이며, 도움말 항목이 없으면 -1입니다. 반환 시 <paramref name="fileName" /> 매개 변수에는 이 액세스 가능 개체에 연결된 도움말 파일의 경로가 포함됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 도움말을 표시 하는 <xref:System.Windows.Forms.AccessibleObject> Windows 도움말 시스템을 사용 하 여, 전달할 수 있습니다 파일 이름 및 항목 ID를 적절 한 <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType> 메서드의 <xref:System.Windows.Forms.Help>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">컨트롤에 대한 도움말 항목을 검색할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>일부 개체는이 속성을 지원 해야 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelected () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetSelected();" />
      <MemberSignature Language="F#" Value="abstract member GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetSelected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 선택된 자식을 검색합니다.</summary>
        <returns>현재 선택된 자식을 나타내는 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다. 이 메서드는 호출 개체 자신이 선택된 경우 자신을 반환합니다. 현재 선택된 자식이 없고 개체 자신에 포커스가 없으면 <see langword="null" />을 반환합니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">선택된 자식을 검색할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>선택할 수 있는 모든 개체는이 속성을 지원 해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public virtual string Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Help" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Help As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Help { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : string" Usage="System.Windows.Forms.AccessibleObject.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체의 역할이나 개체의 사용 방법에 대한 설명을 가져옵니다.</summary>
        <value>개체의 역할이나 개체의 사용 방법에 대한 설명이 들어 있는 <see cref="T:System.String" />입니다. 정의된 도움말이 없으면 <see langword="null" />을 반환합니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">컨트롤에 대한 도움말 문자열을 검색할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>일부 개체는이 속성을 지원 해야 합니다. 이 속성에서 도구 설명 스타일 정보를 포함 하는 일반적으로 개체의 역할이 나 사용 하는 방법을 설명 하는 데 사용 합니다. 예를 들어를 <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> 프린터 수를 표시 하는 도구 모음 단추에 대 한 속성 "현재 문서를 인쇄 합니다." 에 대 한 텍스트는 <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> 속성 사용자 인터페이스 내에서 고유할 필요가 없습니다. 서버를 지원 하지 않아도 <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> 속성 개체에 대 한 충분 한 정보를 제공 하는 다른 속성이 있는 경우의 용도 작업 개체를 수행할 수 있습니다.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HitTest (x As Integer, y As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">가로 화면 좌표입니다.</param>
        <param name="y">세로 화면 좌표입니다.</param>
        <summary>지정된 화면 좌표에 있는 자식 개체를 검색합니다.</summary>
        <returns>지정된 화면 좌표에 있는 자식 개체를 나타내는 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다. 이 메서드는 호출하는 개체 자신이 지정된 위치에 있는 경우에 호출하는 개체를 반환합니다. 테스트한 위치에 개체가 없는 경우 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 목록 보기 항목 등과 같은 사각형이 아닌 개체에 대 한 개체의 좌표의 경계 사각형에서 검색할 <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> 사용 하 여 테스트 하는 경우 실패할 수 있습니다 <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>이므로 <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> 픽셀 단위의 기준 개체의 경계를 결정 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">컨트롤의 적중 테스트를 수행할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>모든 시각적 개체는이 메서드를 지원 해야 합니다. 사운드 개체 것을 지원 하지 않습니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="KeyboardShortcut">
      <MemberSignature Language="C#" Value="public virtual string KeyboardShortcut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyboardShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardShortcut As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyboardShortcut { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardShortcut : string" Usage="System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>액세스 가능 개체의 바로 가기 키나 선택키를 가져옵니다.</summary>
        <value>액세스 가능 개체의 바로 가기 키나 선택키이고 이 개체에 연결된 바로 가기 키가 없으면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 액세스 키를 라고도 니모닉은 메뉴, 메뉴 항목, 단추나 다른 컨트롤의 레이블 텍스트에 밑줄이 그어진 문자. 사용자도 지정 된 밑줄 표시와 같은 키를 열려면 ALT + F를 누른 채 ALT 키를 눌러 메뉴를 표시할 수 있습니다 예를 들어를 `File` 메뉴. 메뉴 항목의 액세스 키를 사용 하려면 메뉴 항목을 포함 하는 활성 상태 여야 합니다. 도구 모음 단추 및 메뉴 항목과 같은 컨트롤에 관련 된 바로 가기 키를 있는 경우가 많습니다. 메뉴 항목을 액세스 키와 연결 된 바로 가기 키를 가질 수 있습니다. 경우 값은 <xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A> 속성은 단일 문자은 액세스 키를 가정할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">컨트롤에 대한 바로 가기를 검색할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>바로 가기 키나 선택 키에 있는 모든 개체는이 속성을 지원 해야 합니다.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체 이름을 가져오거나 설정합니다.</summary>
        <value>개체 이름이며 속성이 설정되어 있지 않으면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Name%2A> 속성은 식별, 검색 또는 사용자에 대 한 개체를 발표를 위해 클라이언트에서 사용 하는 문자열입니다. 자식 개체의 이름에 액세스 하려면 먼저 불러와야 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> 자식의 이름을 검색 하는 인덱스를 사용 하 여 합니다.  
  
   
  
## Examples  
 다음 예제에서는 내게 필요한 옵션 인식 차트를 만드는 컨트롤을 사용 하는 <xref:System.Windows.Forms.AccessibleObject> 및 <xref:System.Windows.Forms.Control.ControlAccessibleObject> 액세스할 수 있는 정보를 노출 하는 클래스입니다. 컨트롤은 범례를 따라 두 곡선을 그립니다. 합니다 `ChartControlAccessibleObject` 클래스에서 파생 되는 `ControlAccessibleObject`에 사용 되는 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 차트 컨트롤에 대 한 사용자 지정 액세스할 수 있는 정보를 제공 하는 방법입니다. 차트 범례 실제 아니므로 <xref:System.Windows.Forms.Control> -컨트롤을 따르지만 그려지며 차트 컨트롤에 의해 되지 않은 기본 제공 정보를 액세스할 수 있습니다. 이 인해 합니다 `ChartControlAccessibleObject` 재정의 클래스를 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> 반환 하는 방법은 `CurveLegendAccessibleObject` 범례의 각 부분에 액세스할 수 있는 정보를 나타내는입니다. 인식 액세스할 수 있는 응용 프로그램에서이 컨트롤을 사용 하는 경우 컨트롤이 필요한 액세스할 수 있는 정보를 제공할 수 있습니다.  
  
 이 코드 예제를 재정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.AccessibleObject.Name%2A> 속성입니다. 참조 된 <xref:System.Windows.Forms.AccessibleObject> 전체 코드 예제에 대 한 클래스 개요입니다.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">컨트롤의 이름을 검색하거나 설정할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>모든 개체는이 속성을 지원 해야 합니다. 개체의 이름은 사용자 개체의 의미 나 용도 이해할 수 있도록 직관적 이어야 합니다. 또한 했는지를 <see langword="Name" /> 속성은 부모에서 모든 형제 개체에 대해 고유 합니다. 일부 사용자에 게 특히 어려운 문제를 표시 하는 테이블 내에서 탐색 합니다. 따라서 server 개발자 해야 테이블 셀 이름을 최대한으로 설명 합니다. 예를 들어 셀 이름을 "A1."와 같은 차지 하는 열과 행의 이름을 결합 하 여 만들 수 있습니다. 그러나 편이 일반적으로 "Karin, 2 월."와 같은 보다 알기 쉬운 이름으로 사용 하려면 아이콘, 메뉴, 확인란, 콤보 상자, 다른 컨트롤 등의 많은 개체에는 사용자에 게 표시 되는 레이블이 있습니다. 개체에 사용할 사용자에 게 표시 되는 모든 레이블을 <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> 속성입니다. 자세한 내용은 참조는 <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> 속성입니다.  
  
에 대 한 메뉴 또는 단추 텍스트를 사용 하는 경우는 <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> 속성인 경우 앰퍼샌드가 제거 (&amp;) 키보드 선택 키를 표시 하는 합니다.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject Navigate(valuetype System.Windows.Forms.AccessibleNavigation navdir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Navigate (navdir As AccessibleNavigation) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ Navigate(System::Windows::Forms::AccessibleNavigation navdir);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.Navigate navdir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navdir" Type="System.Windows.Forms.AccessibleNavigation" />
      </Parameters>
      <Docs>
        <param name="navdir"><see cref="T:System.Windows.Forms.AccessibleNavigation" /> 값 중 하나입니다.</param>
        <summary>다른 내게 필요한 옵션 지원 개체를 탐색합니다.</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" /> 값 중 하나를 나타내는 <see cref="T:System.Windows.Forms.AccessibleNavigation" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 탐색, 공간 및 논리는 항상 컨테이너 내에서 사용자 인터페이스 요소에 제한 됩니다. 공간 탐색이 있는 클라이언트 수만 시작 개체에 대 한 형제로 탐색 합니다. 클라이언트는 논리적 탐색을 사용 하 고 탐색 플래그에 따라 자식 이거나 또는 시작 개체의 형제를 탐색할 수 있습니다. 이 메서드는 선택 상태나 포커스 변경 되지 않습니다. 포커스를 변경 하거나 개체를 선택 하려면 사용 <xref:System.Windows.Forms.AccessibleObject.Select%2A>합니다. <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> 메서드 정의 된 화면 위치에 있는 사용자 인터페이스 요소만 검색 합니다.  
  
   
  
## Examples  
 다음 예제에서는 내게 필요한 옵션 인식 차트를 만드는 컨트롤을 사용 하는 <xref:System.Windows.Forms.AccessibleObject> 및 <xref:System.Windows.Forms.Control.ControlAccessibleObject> 액세스할 수 있는 정보를 노출 하는 클래스입니다. 컨트롤은 범례를 따라 두 곡선을 그립니다. 합니다 `ChartControlAccessibleObject` 클래스에서 파생 되는 `ControlAccessibleObject`에 사용 되는 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 차트 컨트롤에 대 한 사용자 지정 액세스할 수 있는 정보를 제공 하는 방법입니다. 차트 범례 실제 아니므로 <xref:System.Windows.Forms.Control> -컨트롤을 따르지만 그려지며 차트 컨트롤에 의해 되지 않은 기본 제공 정보를 액세스할 수 있습니다. 이 인해 합니다 `ChartControlAccessibleObject` 재정의 클래스를 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> 반환 하는 방법은 `CurveLegendAccessibleObject` 범례의 각 부분에 액세스할 수 있는 정보를 나타내는입니다. 인식 액세스할 수 있는 응용 프로그램에서이 컨트롤을 사용 하는 경우 컨트롤이 필요한 액세스할 수 있는 정보를 제공할 수 있습니다.  
  
 이 코드에서는 재정의 보여 줍니다.는 <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> 메서드. 참조 된 <xref:System.Windows.Forms.AccessibleObject> 전체 코드 예제에 대 한 클래스 개요입니다.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">탐색 시도가 실패하는 경우</exception>
        <block subset="none" type="overrides"><para>모든 시각적 개체는이 메서드를 지원 해야 합니다. 개체 상태에 있으면 <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />, 숨겨진된이 개체에 대 한 탐색 실패할 수 있습니다. 메뉴, 메뉴 항목 및 팝업 메뉴와 같은 일부 시스템에 정의 된 인터페이스 요소가 표시 되지 않는 개체의 탐색을 허용 합니다. 그러나 다른 시스템에 정의 된 사용자 인터페이스 요소가이 지원 하지 않습니다. 가능한 경우 서버가 표시 되지 않는 개체에 대 한 탐색을 지원 해야 하지만 이러한 지원이 필요 하지 않습니다 고 클라이언트 것을 기대 하지.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ Parent { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.AccessibleObject.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내게 필요한 옵션 지원 개체의 부모를 가져옵니다.</summary>
        <value>액세스할 수 있는 개체의 부모를 나타내는 <see cref="T:System.Windows.Forms.AccessibleObject" /> 또는 부모 개체가 없는 경우 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 내게 필요한 옵션 인식 차트를 만드는 컨트롤을 사용 하는 <xref:System.Windows.Forms.AccessibleObject> 및 <xref:System.Windows.Forms.Control.ControlAccessibleObject> 액세스할 수 있는 정보를 노출 하는 클래스입니다. 컨트롤은 범례를 따라 두 곡선을 그립니다. 합니다 `ChartControlAccessibleObject` 클래스에서 파생 되는 `ControlAccessibleObject`에 사용 되는 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 차트 컨트롤에 대 한 사용자 지정 액세스할 수 있는 정보를 제공 하는 방법입니다. 차트 범례 실제 아니므로 <xref:System.Windows.Forms.Control> -컨트롤을 따르지만 그려지며 차트 컨트롤에 의해 되지 않은 기본 제공 정보를 액세스할 수 있습니다. 이 인해 합니다 `ChartControlAccessibleObject` 재정의 클래스를 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> 반환 하는 방법은 `CurveLegendAccessibleObject` 범례의 각 부분에 액세스할 수 있는 정보를 나타내는입니다. 인식 액세스할 수 있는 응용 프로그램에서이 컨트롤을 사용 하는 경우 컨트롤이 필요한 액세스할 수 있는 정보를 제공할 수 있습니다.  
  
 이 코드 예제를 재정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.AccessibleObject.Parent%2A> 속성입니다. 참조 된 <xref:System.Windows.Forms.AccessibleObject> 전체 코드 예제에 대 한 클래스 개요입니다.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>모든 개체는이 속성을 지원 해야 합니다.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationNotification">
      <MemberSignature Language="C#" Value="public bool RaiseAutomationNotification (System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RaiseAutomationNotification(valuetype System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, valuetype System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseAutomationNotification(System.Windows.Forms.Automation.AutomationNotificationKind,System.Windows.Forms.Automation.AutomationNotificationProcessing,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RaiseAutomationNotification (notificationKind As AutomationNotificationKind, notificationProcessing As AutomationNotificationProcessing, notificationText As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RaiseAutomationNotification(System::Windows::Forms::Automation::AutomationNotificationKind notificationKind, System::Windows::Forms::Automation::AutomationNotificationProcessing notificationProcessing, System::String ^ notificationText);" />
      <MemberSignature Language="F#" Value="member this.RaiseAutomationNotification : System.Windows.Forms.Automation.AutomationNotificationKind * System.Windows.Forms.Automation.AutomationNotificationProcessing * string -&gt; bool" Usage="accessibleObject.RaiseAutomationNotification (notificationKind, notificationProcessing, notificationText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationKind" Type="System.Windows.Forms.Automation.AutomationNotificationKind" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationProcessing" Type="System.Windows.Forms.Automation.AutomationNotificationProcessing" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationText" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="notificationKind">알림의 형식입니다.</param>
        <param name="notificationProcessing">알림을 처리하는 방법의 표시기입니다.</param>
        <param name="notificationText">알림의 텍스트입니다.</param>
        <summary>UI 자동화 알림 이벤트를 발생시킵니다.</summary>
        <returns>작업에 성공하면 <see langword="true" />이고, 기본 Windows 인프라를 사용할 수 없거나 작업에 실패하는 경우 <see langword="false" />입니다. 자세한 내용은 <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />를 호출합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

이 이벤트는 Windows 10 버전 1709부터 사용할 수 있습니다.
  
       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseLiveRegionChanged">
      <MemberSignature Language="C#" Value="public virtual bool RaiseLiveRegionChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RaiseLiveRegionChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseLiveRegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RaiseLiveRegionChanged () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RaiseLiveRegionChanged();" />
      <MemberSignature Language="F#" Value="abstract member RaiseLiveRegionChanged : unit -&gt; bool&#xA;override this.RaiseLiveRegionChanged : unit -&gt; bool" Usage="accessibleObject.RaiseLiveRegionChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>LiveRegionChanged UI 자동화 이벤트를 발생시킵니다.</summary>
        <returns>작업에 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

이 메서드는 UI automation 라이브 영역의 기능을 지 원하는 파생된 클래스에서 재정의 해야 합니다.
  
     ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">내게 필요한 옵션 개체 라이브 영역은 지원되지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Role" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Role As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleRole Role { System::Windows::Forms::AccessibleRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Forms.AccessibleRole" Usage="System.Windows.Forms.AccessibleObject.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 액세스 가능성 개체의 역할을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.AccessibleRole" /> 값 중 하나이며, 지정된 역할이 없으면 <see cref="F:System.Windows.Forms.AccessibleRole.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체의 역할 개체의 기능을 설명 하는 데 도움이 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 내게 필요한 옵션 인식 차트를 만드는 컨트롤을 사용 하는 <xref:System.Windows.Forms.AccessibleObject> 및 <xref:System.Windows.Forms.Control.ControlAccessibleObject> 액세스할 수 있는 정보를 노출 하는 클래스입니다. 컨트롤은 범례를 따라 두 곡선을 그립니다. 합니다 `ChartControlAccessibleObject` 클래스에서 파생 되는 `ControlAccessibleObject`에 사용 되는 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 차트 컨트롤에 대 한 사용자 지정 액세스할 수 있는 정보를 제공 하는 방법입니다. 차트 범례 실제 아니므로 <xref:System.Windows.Forms.Control> -컨트롤을 따르지만 그려지며 차트 컨트롤에 의해 되지 않은 기본 제공 정보를 액세스할 수 있습니다. 이 인해 합니다 `ChartControlAccessibleObject` 재정의 클래스를 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> 반환 하는 방법은 `CurveLegendAccessibleObject` 범례의 각 부분에 액세스할 수 있는 정보를 나타내는입니다. 인식 액세스할 수 있는 응용 프로그램에서이 컨트롤을 사용 하는 경우 컨트롤이 필요한 액세스할 수 있는 정보를 제공할 수 있습니다.  
  
 이 코드 예제를 재정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.AccessibleObject.Role%2A> 속성입니다. 참조 된 <xref:System.Windows.Forms.AccessibleObject> 전체 코드 예제에 대 한 클래스 개요입니다.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>모든 개체는이 속성을 지원 해야 합니다.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RuntimeIDFirstItem">
      <MemberSignature Language="C#" Value="protected const int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal int32 RuntimeIDFirstItem = (42)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberSignature Language="VB.NET" Value="Protected Const RuntimeIDFirstItem As Integer  = 42" />
      <MemberSignature Language="C++ CLI" Value="protected: int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="F#" Value="val mutable RuntimeIDFirstItem : int" Usage="System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>42</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Windows.Forms.AccessibleSelection flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(valuetype System.Windows.Forms.AccessibleSelection flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (flags As AccessibleSelection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Windows::Forms::AccessibleSelection flags);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Windows.Forms.AccessibleSelection -&gt; unit&#xA;override this.Select : System.Windows.Forms.AccessibleSelection -&gt; unit" Usage="accessibleObject.Select flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.AccessibleSelection" />
      </Parameters>
      <Docs>
        <param name="flags"><see cref="T:System.Windows.Forms.AccessibleSelection" /> 값 중 하나입니다.</param>
        <summary>선택을 수정하거나 액세스 가능 개체의 키보드 포커스를 이동합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램이이 메서드를 사용 하 여 복잡 한 선택 작업을 수행할 수 있습니다.  
  
 다음을 설명 하는 <xref:System.Windows.Forms.AccessibleSelection> 호출할 때 지정 하는 값 <xref:System.Windows.Forms.AccessibleObject.Select%2A> 복잡 한 선택 작업을 수행 합니다.  
  
|작업|플래그 조합|  
|---------------|----------------------|  
|클릭을 시뮬레이션할|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **참고:**  사용자 고유의 응용 프로그램 내에서 호출 하는 경우이 조합은 원하는 컨트롤을 선택 하지 않습니다. 그러나 하는 경우 원하는 결과 외부 응용 프로그램에서 호출 된 경우|  
|CTRL + 클릭을 시뮬레이션 하 여 대상 항목 선택|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType>|  
|CTRL + 클릭을 시뮬레이션 하 여 대상 항목의 선택을 취소 하려면|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>|  
|시뮬레이션 SHIFT + 클릭|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>|  
|개체의 범위를 선택 하 여 마지막 개체에 포커스를 둡니다|지정 <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> 선택 영역 앵커를 설정 하려면 시작 개체입니다. 다음 호출 <xref:System.Windows.Forms.AccessibleObject.Select%2A> 다시 지정 <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType> 마지막 개체입니다.|  
|모든 개체의 선택을 취소 하려면|지정 <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> 모든 개체에 있습니다. 이 플래그는 방금 선택한 것을 제외 하 고 선택한 개체를 모두 선택 취소 합니다. 그런 다음 호출 <xref:System.Windows.Forms.AccessibleObject.Select%2A> 다시 지정 <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType> 동일한 개체에서.|  
  
   
  
## Examples  
 다음 예제에서는 내게 필요한 옵션 인식 차트를 만드는 컨트롤을 사용 하는 <xref:System.Windows.Forms.AccessibleObject> 및 <xref:System.Windows.Forms.Control.ControlAccessibleObject> 액세스할 수 있는 정보를 노출 하는 클래스입니다. 컨트롤은 범례를 따라 두 곡선을 그립니다. 합니다 `ChartControlAccessibleObject` 클래스에서 파생 되는 `ControlAccessibleObject`에 사용 되는 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 차트 컨트롤에 대 한 사용자 지정 액세스할 수 있는 정보를 제공 하는 방법입니다. 차트 범례 실제 아니므로 <xref:System.Windows.Forms.Control> -컨트롤을 따르지만 그려지며 차트 컨트롤에 의해 되지 않은 기본 제공 정보를 액세스할 수 있습니다. 이 인해 합니다 `ChartControlAccessibleObject` 재정의 클래스를 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> 반환 하는 방법은 `CurveLegendAccessibleObject` 범례의 각 부분에 액세스할 수 있는 정보를 나타내는입니다. 인식 액세스할 수 있는 응용 프로그램에서이 컨트롤을 사용 하는 경우 컨트롤이 필요한 액세스할 수 있는 정보를 제공할 수 있습니다.  
  
 이 코드에서는 재정의 보여 줍니다.는 <xref:System.Windows.Forms.AccessibleObject.Select%2A> 메서드. 참조 된 <xref:System.Windows.Forms.AccessibleObject> 전체 코드 예제에 대 한 클래스 개요입니다.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">선택을 수행할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>선택할 수 있습니다 또는 키보드 포커스를 받을 모든 개체는이 메서드를 지원 해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.State" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AccessibleStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleStates State { System::Windows::Forms::AccessibleStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.AccessibleStates" Usage="System.Windows.Forms.AccessibleObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 액세스 가능 개체의 상태를 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.AccessibleStates" /> 값 중 하나이며, 설정된 상태가 없으면 <see cref="F:System.Windows.Forms.AccessibleStates.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 내게 필요한 옵션 인식 차트를 만드는 컨트롤을 사용 하는 <xref:System.Windows.Forms.AccessibleObject> 및 <xref:System.Windows.Forms.Control.ControlAccessibleObject> 액세스할 수 있는 정보를 노출 하는 클래스입니다. 컨트롤은 범례를 따라 두 곡선을 그립니다. 합니다 `ChartControlAccessibleObject` 클래스에서 파생 되는 `ControlAccessibleObject`에 사용 되는 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 차트 컨트롤에 대 한 사용자 지정 액세스할 수 있는 정보를 제공 하는 방법입니다. 차트 범례 실제 아니므로 <xref:System.Windows.Forms.Control> -컨트롤을 따르지만 그려지며 차트 컨트롤에 의해 되지 않은 기본 제공 정보를 액세스할 수 있습니다. 이 인해 합니다 `ChartControlAccessibleObject` 재정의 클래스를 <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> 반환 하는 방법은 `CurveLegendAccessibleObject` 범례의 각 부분에 액세스할 수 있는 정보를 나타내는입니다. 인식 액세스할 수 있는 응용 프로그램에서이 컨트롤을 사용 하는 경우 컨트롤이 필요한 액세스할 수 있는 정보를 제공할 수 있습니다.  
  
 이 코드 예제를 재정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.AccessibleObject.State%2A> 속성입니다. 참조 된 <xref:System.Windows.Forms.AccessibleObject> 전체 코드 예제에 대 한 클래스 개요입니다.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>모든 개체는이 속성을 지원 해야 합니다.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo System.Reflection.IReflect.GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ System.Reflection.IReflect.GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">찾을 필드의 이름입니다.</param>
        <param name="bindingAttr">검색을 제어하는 데 사용되는 바인딩 특성입니다.</param>
        <summary>지정된 필드 및 바인딩 플래그에 해당하는 <see cref="T:System.Reflection.FieldInfo" /> 개체를 가져옵니다. 이 멤버에 대한 설명은 <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />를 참조하세요.</summary>
        <returns><paramref name="bindingAttr" />에 지정된 검색 제약 조건을 충족하는 명명된 개체에 대한 필드 정보가 포함된 <see cref="T:System.Reflection.FieldInfo" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:System.Reflection.IReflect> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">개체가 이름이 같은 여러 필드를 구현하는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetFields">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo[] System.Reflection.IReflect.GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetFields (bindingAttr As BindingFlags) As FieldInfo() Implements IReflect.GetFields" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ System.Reflection.IReflect.GetFields(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetFields;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">검색을 제어하는 데 사용되는 바인딩 특성입니다.</param>
        <summary>현재 클래스의 모든 필드에 해당하는 <see cref="T:System.Reflection.FieldInfo" /> 개체의 배열을 가져옵니다. 이 멤버에 대한 설명은 <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />를 참조하세요.</summary>
        <returns><paramref name="bindingAttr" />에 지정된 검색 제약 조건을 충족하는 이 리플렉션 개체에 대한 모든 필드 정보가 포함된 <see cref="T:System.Reflection.FieldInfo" /> 개체의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 각 필드에는 고유한 이름이 있어야 합니다. <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> public이 아닌 필드 검색에 포함 됨을 지정 하는 플래그입니다. <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> public 필드 검색에 포함 됨을 지정 하는 플래그입니다.  
  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:System.Reflection.IReflect> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMember">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">찾을 멤버의 이름입니다.</param>
        <param name="bindingAttr">검색을 제어하는 데 사용되는 바인딩 특성입니다.</param>
        <summary>모든 public 멤버나 지정된 이름과 일치하는 이름을 가진 모든 멤버에 해당하는 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열을 가져옵니다. 이 멤버에 대한 설명은 <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />를 참조하세요.</summary>
        <returns>이름 매개 변수와 일치하는 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:System.Reflection.IReflect> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMembers">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMembers (bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMembers" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMembers(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMembers;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">검색을 제어하는 데 사용되는 바인딩 특성입니다.</param>
        <summary>모든 public 멤버나 현재 클래스의 모든 멤버에 해당하는 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열을 가져옵니다. 이 멤버에 대한 설명은 <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />를 참조하세요.</summary>
        <returns>이 리플렉션 개체에 대한 모든 멤버 정보가 포함된 <see cref="T:System.Reflection.MemberInfo" /> 개체의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:System.Reflection.IReflect> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">찾을 멤버의 이름입니다.</param>
        <param name="bindingAttr">검색을 제어하는 데 사용되는 바인딩 특성입니다.</param>
        <summary>지정된 검색 제약 조건에 지정된 메서드에 해당하는 <see cref="T:System.Reflection.MethodInfo" /> 개체를 가져옵니다. 이 멤버에 대한 설명은 <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />를 참조하세요.</summary>
        <returns><paramref name="bindingAttr" />에 지정된 검색 제약 조건과 메서드 이름이 일치하는, 메서드 정보가 포함된 <see cref="T:System.Reflection.MethodInfo" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:System.Reflection.IReflect> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">개체가 이름이 같은 여러 메서드를 구현하는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">찾을 멤버의 이름입니다.</param>
        <param name="bindingAttr">검색을 제어하는 데 사용되는 바인딩 특성입니다.</param>
        <param name="binder"><see cref="T:System.Reflection.Binder" />를 구현하는 개체로, 이 메서드와 관련된 속성을 포함합니다.</param>
        <param name="types">오버로드된 메서드 중에서 선택하는 데 사용되는 배열입니다.</param>
        <param name="modifiers">바인딩을 형식이 수정된 매개 변수 서명과 함께 작동하도록 만드는 데 사용되는 매개 변수 한정자 배열입니다.</param>
        <summary>오버로드된 메서드 중에서 선택할 형식 배열을 사용하여 지정된 메서드에 해당하는 <see cref="T:System.Reflection.MethodInfo" /> 개체를 가져옵니다. 이 멤버에 대한 설명은 <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />를 참조하세요.</summary>
        <returns>지정된 모든 매개 변수를 충족하는 요청된 메서드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 값은 일치 하는 메서드 이름 뒤에 <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> 열거형, 지정 된 형식 변환의 종류를 `binder` 매개 변수, 오버 로드 및 <xref:System.Reflection.ParameterInfo?displayProperty=nameWithType> 메서드의 시그니처를 설명 하는.  
  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:System.Reflection.IReflect> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">개체가 이름이 같은 여러 메서드를 구현하는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethods">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo[] System.Reflection.IReflect.GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethods (bindingAttr As BindingFlags) As MethodInfo() Implements IReflect.GetMethods" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ System.Reflection.IReflect.GetMethods(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethods;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">검색을 제어하는 데 사용되는 바인딩 특성입니다.</param>
        <summary>모든 public 메서드나 현재 클래스의 모든 메서드가 포함된 <see cref="T:System.Reflection.MethodInfo" /> 개체의 배열을 가져옵니다. 이 멤버에 대한 설명은 <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />를 참조하세요.</summary>
        <returns><see langword="bindingAttr" />에 지정된 검색 제약 조건을 충족하는 이 리플렉션 개체에 대해 정의된 모든 메서드가 포함된 <see cref="T:System.Reflection.MethodInfo" /> 개체의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:System.Reflection.IReflect> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperties">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] System.Reflection.IReflect.GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo() Implements IReflect.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ System.Reflection.IReflect.GetProperties(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">검색을 제어하는 데 사용되는 바인딩 특성입니다.</param>
        <summary>모든 public 속성이나 현재 클래스의 모든 속성에 해당하는 <see cref="T:System.Reflection.PropertyInfo" /> 개체의 배열을 가져옵니다. 이 멤버에 대한 설명은 <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />를 참조하세요.</summary>
        <returns>리플렉션 개체에 정의된 모든 속성에 대한 <see cref="T:System.Reflection.PropertyInfo" /> 개체의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:System.Reflection.IReflect> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">찾으려는 속성의 이름입니다.</param>
        <param name="bindingAttr">검색을 제어하는 데 사용되는 바인딩 특성입니다.</param>
        <summary>지정된 검색 제약 조건에 지정된 속성에 해당하는 <see cref="T:System.Reflection.PropertyInfo" /> 개체를 가져옵니다. 이 멤버에 대한 설명은 <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />를 참조하세요.</summary>
        <returns><paramref name="bindingAttr" />에 지정된 검색 제약 조건을 충족하는 찾은 속성에 대한 <see cref="T:System.Reflection.PropertyInfo" /> 개체입니다. 해당 속성을 찾지 못한 경우에는 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:System.Reflection.IReflect> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">개체가 이름이 같은 여러 메서드를 구현하는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">찾을 멤버의 이름입니다.</param>
        <param name="bindingAttr">검색을 제어하는 데 사용되는 바인딩 특성입니다.</param>
        <param name="binder">바인더를 구현하며 이 메서드와 관련된 속성이 포함된 개체입니다.</param>
        <param name="returnType">오버로드된 메서드 중에서 선택하는 데 사용되는 배열입니다.</param>
        <param name="types">바인딩을 형식이 수정된 매개 변수 서명과 함께 작동하도록 만드는 데 사용되는 매개 변수 한정자 배열입니다.</param>
        <param name="modifiers">매개 변수 한정자를 선택하는 데 사용되는 배열입니다.</param>
        <summary>지정된 속성에 해당하는 <see cref="T:System.Reflection.PropertyInfo" /> 개체를 지정된 검색 제약 조건을 사용하여 가져옵니다. 이 멤버에 대한 설명은 <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />를 참조하세요.</summary>
        <returns>지정된 이름을 가진 속성을 이 리플렉션 개체에서 찾은 경우 찾은 속성에 대한 <see cref="T:System.Reflection.PropertyInfo" /> 개체입니다. 해당 속성을 찾지 못한 경우에는 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:System.Reflection.IReflect> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.InvokeMember">
      <MemberSignature Language="C#" Value="object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Reflection.IReflect.InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Reflection.IReflect.InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters) = System::Reflection::IReflect::InvokeMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">찾을 멤버의 이름입니다.</param>
        <param name="invokeAttr"><see cref="T:System.Reflection.BindingFlags" /> 호출 특성 중 하나입니다.</param>
        <param name="binder"><see cref="T:System.Reflection.BindingFlags" /> 비트 플래그 중 하나입니다. 이 메서드와 관련된 속성이 포함된 바인더를 구현합니다.</param>
        <param name="target">지정한 멤버를 호출할 개체입니다. 이 매개 변수는 정적 멤버에 대해서는 무시됩니다.</param>
        <param name="args">호출되는 멤버에 대한 매개 변수의 개수, 순서 및 형식이 포함된 개체의 배열입니다. 매개 변수가 없는 경우 이 배열은 빈 배열입니다.</param>
        <param name="modifiers"><see cref="T:System.Reflection.ParameterModifier" /> 개체의 배열입니다.</param>
        <param name="culture">형식의 강제 변환을 제어하는 데 사용되는 <see cref="T:System.Globalization.CultureInfo" />의 인스턴스입니다.</param>
        <param name="namedParameters">매개 변수의 문자열 배열입니다.</param>
        <summary>지정된 멤버를 호출합니다. 이 멤버에 대한 설명은 <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />를 참조하세요.</summary>
        <returns>지정된 멤버입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `invokeAttr` 매개 변수는 생성자, 메서드, 속성 또는 필드일 수 있습니다. 적합한 호출 특성을 지정해야 합니다. 빈 문자열("")을 멤버의 이름으로 전달하여 클래스의 기본 멤버를 호출합니다.  
  
 합니다 `modifiers` 매개 변수는 길이가 같은 `args` 메타 데이터에서 호출된 된 멤버의 인수 특성을 나타내는 매개 변수입니다. 매개 변수는 다음 특성을 가질 수 있습니다: pdIn, pdOut, pdRetval, pdOptional, 및 pdHasDefault 합니다. 이러한 특성은 각각 [In], [Out], [retval], [optional] 및 기본 매개 변수를 나타내며  
  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:System.Reflection.IReflect> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="invokeAttr" />가 <see cref="F:System.Reflection.BindingFlags.CreateInstance" />이고 다른 비트 플래그도 설정되는 경우

-또는- <paramref name="invokeAttr" />가 <see cref="F:System.Reflection.BindingFlags.CreateInstance" />가 아니고 이름이 <see langword="null" />인 경우

또는

<paramref name="invokeAttr" />가 <see cref="T:System.Reflection.BindingFlags" />의 호출 특성이 아닌 경우

또는

<paramref name="invokeAttr" />가 속성이나 필드에 대해 get과 set을 모두 지정하는 경우

또는

<paramref name="invokeAttr" />은 필드 세트 및 Invoke 메서드를 모두 지정합니다.<paramref name="args" /> 는 필드 가져오기 작업에 제공됩니다.

또는

필드 설정 작업에 두 개 이상의 인수가 지정된 경우</exception>
        <exception cref="T:System.MissingFieldException">필드 또는 속성을 찾을 수 없습니다.</exception>
        <exception cref="T:System.MissingMethodException">메서드를 찾을 수 없는 경우</exception>
        <exception cref="T:System.Security.SecurityException">필요한 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 없이 전용 멤버가 호출되는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.UnderlyingSystemType">
      <MemberSignature Language="C#" Value="Type System.Reflection.IReflect.UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UnderlyingSystemType As Type Implements IReflect.UnderlyingSystemType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Reflection::IReflect::UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Reflection.IReflect" /> 개체를 나타내는 내부 형식을 가져옵니다. 이 멤버에 대한 설명은 <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />를 참조하세요.</summary>
        <value><see cref="T:System.Reflection.IReflect" /> 개체를 나타내는 내부 형식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.AccessibleObject> 인스턴스가 <xref:System.Reflection.IReflect> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UseStdAccessibleObjects">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>개체를 <see cref="T:System.Windows.Forms.AccessibleObject" />의 인스턴스와 연결합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">개체의 핸들이 들어 있는 <see cref="T:System.IntPtr" />입니다.</param>
        <summary>개체의 핸들을 기준으로 <see cref="T:System.Windows.Forms.AccessibleObject" />의 인스턴스와 개체를 연결합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 시스템 제공 개체에 유사한 사용자 지정 UI 개체를 포함 하는 경우 서버 응용 프로그램에서이 함수를 호출할 수 있습니다. 서버 응용 프로그램 호출 `CreateStdAccessibleObject` 재정의 <xref:Accessibility.IAccessible> 메서드 및 해당 사용자 지정 개체와 일치 하는 데 필요한 속성입니다. 이 방법은 서버 개발자는 작업을 완전 하 게 구현 된 <xref:Accessibility.IAccessible> 속성 및 메서드. 이 함수는 비슷합니다 `CreateStdAccessibleProxy`점을 제외 하 고 `CreateStdAccessibleProxy` 반면 클래스 이름을 매개 변수로 지정할 수 있습니다 `CreateStdAccessibleObject` 와 관련 된 클래스 이름을 사용 하는 `hwnd`합니다.  
  
 이 버전의 호출을 `UseStdAccessible` 라는 objid 클라이언트를 사용 하 여 2 개의 매개 변수가 버전을 호출 하는 것과 같습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle, int objid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle, int32 objid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr, objid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle, int objid);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint * int -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects (handle, objid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="objid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle">개체의 핸들이 들어 있는 <see cref="T:System.IntPtr" />입니다.</param>
        <param name="objid"><paramref name="handle" /> 매개 변수가 참조하는 개체의 형식을 정의하는 Int입니다.</param>
        <summary>개체의 개체 ID와 핸들을 기준으로 <see cref="T:System.Windows.Forms.AccessibleObject" />의 인스턴스와 개체를 연결합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 된 형식의 시스템 제공 사용자 인터페이스 요소에 대 한 속성과 메서드를 사용 하 여 액세스할 수 있는 개체를 만듭니다.  
  
 시스템 제공 개체에 유사한 사용자 지정 UI 개체를 포함 하는 경우 서버 응용 프로그램에서이 함수를 호출할 수 있습니다. 서버 응용 프로그램 호출 `CreateStdAccessibleObject` 재정의 <xref:Accessibility.IAccessible> 메서드 및 해당 사용자 지정 개체와 일치 하는 데 필요한 속성입니다. 이 방법은 서버 개발자는 작업을 완전 하 게 구현 된 <xref:Accessibility.IAccessible> 속성 및 메서드.  
  
 유효한 `objid` 값입니다.  
  
|개체|값|설명|  
|------------|-----------|-----------------|  
|경으십시오|0xFFFFFFF6|창 또는 응용 프로그램에 연결 된 메시지를 나타냅니다.|  
|캐럿|0xFFFFFFF8|텍스트 삽입 가리킵니다 창의 (캐럿) 모음입니다.|  
|클라이언트|0xFFFFFFFC|창의 클라이언트 영역을 가리킵니다. 대부분의 경우에서 프레임 요소를 제어 하는 운영 체제 및 응용 프로그램을 제어 하는 모든 요소를 포함 하는 클라이언트 개체입니다.|  
|커서|0xFFFFFFF7|마우스 포인터를 가리킵니다. 시스템에 마우스 포인터가 하나만 및 창의 자식이 아닙니다.|  
|HSCROLL|0xFFFFFFFA|창의 가로 스크롤 막대를 가리킵니다.|  
|MENU|0xFFFFFFFD|창의 메뉴 모음을 가리킵니다.|  
|SIZEGRIP|0xFFFFFFF9|창의 크기 조정 그립 창 프레임의 오른쪽 아래 모서리에 있는 프레임 선택적 구성 요소를 가리킵니다.|  
|소리|0xFFFFFFF5|Sound 개체를 가리킵니다. 사운드 개체 화면 위치 또는 자식이 없는 없지만 특성 이름 및 상태입니다. 소리 재생 응용 프로그램의 자식인 있습니다.|  
|SYSMENU|0xFFFFFFFF|창의 시스템 메뉴를 가리킵니다.|  
|제목 표시줄|0xFFFFFFFE|창의 제목 표시줄을 가리킵니다.|  
|VSCROLL|0xFFFFFFFB|창의 세로 스크롤 막대를 가리킵니다.|  
|창|0x00000000|자식 개체 대신 창 자체를 나타냅니다.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>액세스 가능 개체의 값을 가져오거나 설정합니다.</summary>
        <value>액세스 가능한 개체의 값이거나, 개체에 설정된 값이 없는 경우 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 <xref:System.Windows.Forms.AccessibleObject.Value%2A> 속성 개체에 포함 된 시각적 정보를 나타냅니다. 일부 개체를 지원 합니다 <xref:System.Windows.Forms.AccessibleObject.Value%2A> 속성입니다.  
  
 대부분의 경우에는 <xref:System.Windows.Forms.AccessibleObject.Value%2A> 속성 개체는 시각적 정보를 포함 하는 방법에 대 한 클라이언트에 게 알리는 데 사용 됩니다. 예를 들어 편집 컨트롤에 대 한 값이 포함 된 텍스트 되었지만 메뉴 항목에 값이 없습니다.  
  
 <xref:System.Windows.Forms.AccessibleObject.Value%2A> 속성 계층적 트리 뷰 컨트롤 등의 사례 정보를 제공할 수 있습니다. 트리 뷰 컨트롤의 부모 개체에 대 한 정보를 제공 하지 않지만 <xref:System.Windows.Forms.AccessibleObject.Value%2A> 속성, 컨트롤 내에서 각 항목에는 계층 구조 내에서 해당 수준을 나타내는 0부터 시작 값입니다. 0 값이 있는 최상위 항목, 두 번째 수준 항목 값이 1, 및 등입니다.  
  
> [!NOTE]
>  값 반환 스크롤 막대 트랙 표시줄에서 액세스할 수 있는 0에서 100 사이의 정수를 되므로 개체 백분율을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">값을 설정하거나 검색할 수 없는 경우</exception>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
      </Docs>
    </Member>
  </Members>
</Type>