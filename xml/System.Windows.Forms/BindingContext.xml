<Type Name="BindingContext" FullName="System.Windows.Forms.BindingContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0cdb6e31b10c758b82312805f33c3de7f8a23dc9" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57941128" /></Metadata><TypeSignature Language="C#" Value="public class BindingContext : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingContext extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingContext" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingContext&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingContext : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type BindingContext = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CollectionChanged")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="006e5-101"><see cref="T:System.Windows.Forms.Control" /> 클래스에서 상속되는 모든 개체에 대해 <see cref="T:System.Windows.Forms.BindingManagerBase" /> 개체의 컬렉션을 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-101">Manages the collection of <see cref="T:System.Windows.Forms.BindingManagerBase" /> objects for any object that inherits from the <see cref="T:System.Windows.Forms.Control" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="006e5-102">각 Windows Form에 하나 이상의 <xref:System.Windows.Forms.BindingContext> 개체를 관리 하는 <xref:System.Windows.Forms.BindingManagerBase> 폼에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-102">Each Windows Form has at least one <xref:System.Windows.Forms.BindingContext> object that manages the <xref:System.Windows.Forms.BindingManagerBase> objects for the form.</span></span> <span data-ttu-id="006e5-103">때문에 <xref:System.Windows.Forms.BindingManagerBase> 클래스는 추상 클래스의 반환 형식을 합니다 <xref:System.Windows.Forms.BindingContext.Item%2A> 속성이 <xref:System.Windows.Forms.CurrencyManager> 또는 <xref:System.Windows.Forms.PropertyManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-103">Because the <xref:System.Windows.Forms.BindingManagerBase> class is abstract, the return type of the <xref:System.Windows.Forms.BindingContext.Item%2A> property is either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="006e5-104">데이터 원본 개체를 개체 목록) 하는 경우 (대신 하나의 속성만 반환할 수 있는 경우는 <xref:System.Type> 되는 <xref:System.Windows.Forms.PropertyManager>.</span><span class="sxs-lookup"><span data-stu-id="006e5-104">If the data source is an object that can return only a single property (instead of a list of objects), the <xref:System.Type> is a <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="006e5-105">예를 들어 지정 하는 경우는 <xref:System.Windows.Forms.TextBox> 데이터 원본으로는 <xref:System.Windows.Forms.PropertyManager> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-105">For example, if you specify a <xref:System.Windows.Forms.TextBox> as the data source, a <xref:System.Windows.Forms.PropertyManager> is returned.</span></span> <span data-ttu-id="006e5-106">반면, 데이터 원본 개체를 구현 하는 경우 <xref:System.Collections.IList> 나 <xref:System.ComponentModel.IBindingList>, <xref:System.Windows.Forms.CurrencyManager> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-106">On the other hand, if the data source is an object that implements <xref:System.Collections.IList> or <xref:System.ComponentModel.IBindingList>, a <xref:System.Windows.Forms.CurrencyManager> is returned.</span></span>  
  
 <span data-ttu-id="006e5-107">각 Windows Form에 데이터 원본에 대해는 단일 <xref:System.Windows.Forms.CurrencyManager> 또는 <xref:System.Windows.Forms.PropertyManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-107">For each data source on a Windows Form, there is a single <xref:System.Windows.Forms.CurrencyManager> or <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="006e5-108">Windows 폼을 사용 하 여 연결 된 여러 데이터 원본 수 있으므로 합니다 <xref:System.Windows.Forms.BindingContext> 특정을 검색할 수 있도록 <xref:System.Windows.Forms.CurrencyManager> 데이터 원본에 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-108">Because there may be multiple data sources associated with a Windows Form, the <xref:System.Windows.Forms.BindingContext> enables you to retrieve any particular <xref:System.Windows.Forms.CurrencyManager> associated with a data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="006e5-109">사용 하는 경우는 <xref:System.Windows.Forms.BindingContext.Item%2A> 속성을 <xref:System.Windows.Forms.BindingContext> 새 <xref:System.Windows.Forms.BindingManagerBase> 아직 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="006e5-109">When using the <xref:System.Windows.Forms.BindingContext.Item%2A> property, the <xref:System.Windows.Forms.BindingContext> creates a new <xref:System.Windows.Forms.BindingManagerBase> if one does not already exist.</span></span> <span data-ttu-id="006e5-110">이 목록 (또는 모든 목록)을 반환된 된 개체를 관리 하지 못할 수도 처럼 약간의 혼동이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-110">This can lead to some confusion, as the returned object may not manage the list (or any list) that you intend.</span></span> <span data-ttu-id="006e5-111">잘못 된 반환 하지 않도록 하려면 <xref:System.Windows.Forms.BindingManagerBase>를 사용 하 여는 <xref:System.Windows.Forms.BindingContext.Contains%2A> 여부를 확인 하는 메서드 의도 한 <xref:System.Windows.Forms.BindingManagerBase> 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-111">To prevent returning an invalid <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine if the intended <xref:System.Windows.Forms.BindingManagerBase> already exists.</span></span>  
  
 <span data-ttu-id="006e5-112">와 같은 컨테이너 컨트롤을 사용 하는 경우는 <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.Panel>, 또는 <xref:System.Windows.Forms.TabControl>데이터 바인딩된 컨트롤을 포함 하기 만들 수 있습니다는 <xref:System.Windows.Forms.BindingContext> 만 해당 컨테이너 컨트롤과 해당 컨트롤에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-112">If you use a container control, such as a <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.Panel>, or <xref:System.Windows.Forms.TabControl>, to contain data-bound controls, you can create a <xref:System.Windows.Forms.BindingContext> for just that container control and its controls.</span></span> <span data-ttu-id="006e5-113">폼의 각 부분을 자체에서 관리할 수 있습니다 다음 <xref:System.Windows.Forms.BindingManagerBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-113">Then, each part of your form can be managed by its own <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="006e5-114">참조 된 <xref:System.Windows.Forms.BindingContext.%23ctor%2A> 여러 만들기에 대 한 자세한 정보에 대 한 생성자 <xref:System.Windows.Forms.BindingManagerBase> 동일한 데이터 원본에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-114">See the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor for more information about creating multiple <xref:System.Windows.Forms.BindingManagerBase> objects for the same data source.</span></span>  
  
 <span data-ttu-id="006e5-115"><xref:System.Windows.Forms.TextBox> 컨트롤을 폼에 추가하고 데이터 세트의 테이블 열에 바인딩하면 컨트롤은 해당 폼의 <xref:System.Windows.Forms.BindingContext>와 통신합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-115">If you add a <xref:System.Windows.Forms.TextBox> control to a form and bind it to a column of a table in a dataset, the control communicates with the <xref:System.Windows.Forms.BindingContext> of that form.</span></span> <span data-ttu-id="006e5-116">합니다 <xref:System.Windows.Forms.BindingContext>, 차례로 설명 하는 특정 <xref:System.Windows.Forms.CurrencyManager> 해당 데이터 연결에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-116">The <xref:System.Windows.Forms.BindingContext>, in turn, talks to the specific <xref:System.Windows.Forms.CurrencyManager> for that data association.</span></span> <span data-ttu-id="006e5-117">쿼리 하는 경우는 `Position` 의 속성을 <xref:System.Windows.Forms.CurrencyManager>의 바인딩에 대 한 현재 레코드 보고할 수 <xref:System.Windows.Forms.TextBox> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="006e5-117">If you queried the `Position` property of the <xref:System.Windows.Forms.CurrencyManager>, it would report the current record for the binding of that <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="006e5-118">다음 코드 예제에서는 <xref:System.Windows.Forms.TextBox> 컨트롤이 `dataSet1` 데이터 세트의 `Customers` 테이블에 있는 `FirstName` 열을 통해 <xref:System.Windows.Forms.BindingContext>에 바인딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-118">In the following code example, a <xref:System.Windows.Forms.TextBox> control is bound to the `FirstName` column of a `Customers` table on the `dataSet1` dataset through the <xref:System.Windows.Forms.BindingContext> for the form it is on.</span></span>  
  
```vb  
TextBox1.DataBindings.Add("Text", dataSet1, "Customers.FirstName")  
  
```  
  
```csharp  
textBox1.DataBindings.Add("Text", dataSet1, "Customers.FirstName");  
  
```  
  
```cpp  
textBox1->DataBindings->Add("Text", dataSet1, "Customers.FirstName");  
```  
  
 <span data-ttu-id="006e5-119">두 번째 <xref:System.Windows.Forms.TextBox> 컨트롤(`TextBox2`)을 폼에 추가하고 동일한 데이터 세트의 `Customers` 데이블의 `LastName` 열에 바인딩할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-119">You can add a second <xref:System.Windows.Forms.TextBox> control (`TextBox2`) to the form and bind it to the `LastName` column of the `Customers` table in the same dataset.</span></span> <span data-ttu-id="006e5-120"><xref:System.Windows.Forms.BindingContext> 첫 번째 바인딩 인지 (`TextBox1` 하 `Customers.FirstName`) 이므로 동일한 사용 됩니다 <xref:System.Windows.Forms.CurrencyManager>처럼 두 텍스트 상자는 동일한 데이터 집합에 바인딩됩니다 (`DataSet1`).</span><span class="sxs-lookup"><span data-stu-id="006e5-120">The <xref:System.Windows.Forms.BindingContext> is aware of the first binding (`TextBox1` to `Customers.FirstName`), so it would use the same <xref:System.Windows.Forms.CurrencyManager>, as both text boxes are bound to the same dataset (`DataSet1`).</span></span>  
  
```vb  
TextBox2.DataBindings.Add("Text", dataSet1, "Customers.LastName")  
  
```  
  
```csharp  
textBox2.DataBindings.Add("Text", dataSet1, "Customers.LastName");  
  
```  
  
```cpp  
textBox2->DataBindings->Add("Text", dataSet1, "Customers.LastName");  
```  
  
 <span data-ttu-id="006e5-121">`TextBox2`을 다른 데이터 세트에 바인딩하면 <xref:System.Windows.Forms.BindingContext>가 두 번째 <xref:System.Windows.Forms.CurrencyManager>을 만들고 관리합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-121">If you bind `TextBox2` to a different dataset, the <xref:System.Windows.Forms.BindingContext> creates and manages a second <xref:System.Windows.Forms.CurrencyManager>.</span></span>  
  
 <span data-ttu-id="006e5-122"><xref:System.Windows.Forms.ListControl.DataSource%2A> 및 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성을 설정하는 방법에 대해 일관성을 유지하는 것이 중요합니다. 그렇지 않으면 <xref:System.Windows.Forms.BindingContext>이 동일한 데이터 세트에 대해 여러 통화 관리자를 만들어 오류가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-122">It is important to be consistent about how you set the <xref:System.Windows.Forms.ListControl.DataSource%2A> and <xref:System.Windows.Forms.ListControl.DisplayMember%2A> properties; otherwise, the <xref:System.Windows.Forms.BindingContext> creates multiple currency managers for the same dataset, which results in errors.</span></span> <span data-ttu-id="006e5-123">다음 코드 예제에서는 속성 및 이와 관련 된 설정에 몇 가지 방법을 보여 줍니다 <xref:System.Windows.Forms.BindingContext> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-123">The following code example shows a few ways to set the properties and their associated <xref:System.Windows.Forms.BindingContext> objects.</span></span> <span data-ttu-id="006e5-124">로 코드 전체에서 일관성은 다음 방법 중 하나를 사용 하 여 속성을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-124">You can set the properties using either of the following methods, as long as you are consistent throughout your code.</span></span>  
  
```vb  
ComboBox1.DataSource = DataSet1  
ComboBox1.DisplayMember = "Customers.FirstName"  
Me.BindingContext(dataSet1, "Customers").Position = 1  
  
```  
  
```csharp  
comboBox1.DataSource = DataSet1;  
comboBox1.DisplayMember = "Customers.FirstName";  
this.BindingContext[dataSet1, "Customers"].Position = 1;  
  
```  
  
```cpp  
comboBox1->DataSource = dataSet1;  
comboBox1->DisplayMember = "Customers.FirstName";  
this->BindingContext->get_Item(dataSet1, "Customers")->Position = 1;  
  
```  
  
```vb  
ComboBox1.DataSource = DataSet1.Customers  
ComboBox1.DisplayMember = "FirstName"  
Me.BindingContext(dataSet1.Customers).Position = 1  
  
```  
  
```csharp  
comboBox1.DataSource = DataSet1.Customers;  
comboBox1.DisplayMember = "FirstName";  
this.BindingContext[dataSet1.Customers].Position = 1;  
  
```  
  
```cpp  
comboBox1->DataSource = dataSet1->Customers;  
comboBox1->DisplayMember = "FirstName";  
this->BindingContext->get_Item(dataSet1->Customers)->Position = 1;  
  
```  
  
> [!NOTE]
>  <span data-ttu-id="006e5-125">대부분의 Windows Forms 응용 프로그램을 통해 바인딩하는 <xref:System.Windows.Forms.BindingSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-125">Most Windows Forms applications bind through a <xref:System.Windows.Forms.BindingSource>.</span></span> <span data-ttu-id="006e5-126">합니다 <xref:System.Windows.Forms.BindingSource> 구성 요소를 캡슐화를 <xref:System.Windows.Forms.CurrencyManager> 노출는 <xref:System.Windows.Forms.CurrencyManager> 프로그래밍 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-126">The <xref:System.Windows.Forms.BindingSource> component encapsulates a <xref:System.Windows.Forms.CurrencyManager> and exposes the <xref:System.Windows.Forms.CurrencyManager> programming interface.</span></span> <span data-ttu-id="006e5-127">사용 하는 경우는 <xref:System.Windows.Forms.BindingSource> 바인딩에 대 한 하 여 노출 되는 멤버를 사용 해야는 <xref:System.Windows.Forms.BindingSource> "currency"를 조작 하 (즉, `Position`)를 통해 수행 하지 않고는 <xref:System.Windows.Forms.BindingContext>.</span><span class="sxs-lookup"><span data-stu-id="006e5-127">When using a <xref:System.Windows.Forms.BindingSource> for binding, you should use the members exposed by the <xref:System.Windows.Forms.BindingSource> to manipulate "currency" (that is, `Position`) rather than go through the <xref:System.Windows.Forms.BindingContext>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="006e5-128">다음 코드 예제에서는 네 개를 만듭니다 <xref:System.Windows.Forms.Binding> -다섯 개의 컨트롤을 바인딩할 개체를 <xref:System.Windows.Forms.DateTimePicker> -4 <xref:System.Windows.Forms.TextBox> 컨트롤-여러 데이터 원본.</span><span class="sxs-lookup"><span data-stu-id="006e5-128">The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls - a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls - to several data sources.</span></span> <span data-ttu-id="006e5-129">합니다 <xref:System.Windows.Forms.BindingContext> get을 사용 하는 <xref:System.Windows.Forms.BindingManagerBase> 각 데이터 원본에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-129">The <xref:System.Windows.Forms.BindingContext> is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.</span></span>  
  
 [!code-cpp[Classic BindingContext Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="006e5-130"><see cref="T:System.Windows.Forms.BindingContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-130">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="006e5-131">여러 하려는 경우 <xref:System.Windows.Forms.BindingManagerBase> 동일한 데이터 원본에 대 한 인스턴스를 만듭니다 <xref:System.Windows.Forms.BindingContext> 로 설정 합니다 <xref:System.Windows.Forms.Control.BindingContext%2A> 에서 상속 되는 개체의 속성을 <xref:System.Windows.Forms.Control> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-131">If you want to have multiple <xref:System.Windows.Forms.BindingManagerBase> instances for the same data source, create a new <xref:System.Windows.Forms.BindingContext> and set it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property of an object that inherits from the <xref:System.Windows.Forms.Control> class.</span></span> <span data-ttu-id="006e5-132">예를 들어, 두 개 있는 경우 <xref:System.Windows.Forms.BindingManagerBase> 개체 (에서 서로 다른 두 <xref:System.Windows.Forms.BindingContext> 개체)를 설정할 수 있습니다 합니다 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 의 각 속성 <xref:System.Windows.Forms.BindingManagerBase> 서로 다른 값으로.</span><span class="sxs-lookup"><span data-stu-id="006e5-132">For example, if you have two <xref:System.Windows.Forms.BindingManagerBase> objects (from two different <xref:System.Windows.Forms.BindingContext> objects), you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> properties of each <xref:System.Windows.Forms.BindingManagerBase> to different values.</span></span> <span data-ttu-id="006e5-133">이렇게 하면 각 데이터 바인딩된 컨트롤 집합을 동일한 데이터 원본에서 다른 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-133">This causes each set of data-bound controls to display different values from the same data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="006e5-134">다음 코드 예제에서는 두 개의 새 <xref:System.Windows.Forms.BindingContext> 개체 및 각 개체를 할당 합니다 <xref:System.Windows.Forms.BindingContext> 의 속성을 <xref:System.Windows.Forms.GroupBox> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="006e5-134">The following code example creates two new <xref:System.Windows.Forms.BindingContext> objects and assigns each object to the <xref:System.Windows.Forms.BindingContext> property of a <xref:System.Windows.Forms.GroupBox> control.</span></span> <span data-ttu-id="006e5-135">`GroupBox1` 포함 `TextBox1`, 및 `GroupBox2` 포함 `TextBox2` (사용 하 여 수행 되는 <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> 메서드를 <xref:System.Windows.Forms.Control.ControlCollection> 클래스).</span><span class="sxs-lookup"><span data-stu-id="006e5-135">`GroupBox1` contains `TextBox1`, and `GroupBox2` contains `TextBox2` (which is accomplished by using the <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> method of the <xref:System.Windows.Forms.Control.ControlCollection> class).</span></span> <span data-ttu-id="006e5-136">예제에서는 그런 <xref:System.Windows.Forms.Binding> 개체를 두 개의 <xref:System.Windows.Forms.TextBox> 각각 동일한 데이터 원본 및 데이터 멤버에 바인딩 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-136">The example then adds <xref:System.Windows.Forms.Binding> objects to the two <xref:System.Windows.Forms.TextBox> controls, binding each to the same data source and data member.</span></span> <span data-ttu-id="006e5-137">또한이 예제에서는 두 명의 이벤트 처리기를 사용 하는 합니다 <xref:System.Windows.Forms.BindingContext> 에서 <xref:System.Windows.Forms.GroupBox> 설정 하는 컨트롤이 <xref:System.Windows.Forms.BindingManagerBase.Position%2A> 속성을 다른 <xref:System.Windows.Forms.BindingManagerBase> 개체.</span><span class="sxs-lookup"><span data-stu-id="006e5-137">The example also shows two event handlers that use the <xref:System.Windows.Forms.BindingContext> from the <xref:System.Windows.Forms.GroupBox> controls to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property on different <xref:System.Windows.Forms.BindingManagerBase> objects.</span></span>  
  
 [!code-cpp[Classic BindingContext.BindingContext Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.BindingContext Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.BindingContext Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.BindingContext Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.BindingContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.BindingContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="protected internal void Add (object dataSource, System.Windows.Forms.BindingManagerBase listManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Add(object dataSource, class System.Windows.Forms.BindingManagerBase listManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Add (dataSource As Object, listManager As BindingManagerBase)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Add(System::Object ^ dataSource, System::Windows::Forms::BindingManagerBase ^ listManager);" />
      <MemberSignature Language="F#" Value="member this.Add : obj * System.Windows.Forms.BindingManagerBase -&gt; unit" Usage="bindingContext.Add (dataSource, listManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="listManager" Type="System.Windows.Forms.BindingManagerBase" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="006e5-138"><see cref="T:System.Object" />와 연결된 <see cref="T:System.Windows.Forms.BindingManagerBase" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-138">The <see cref="T:System.Object" /> associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <param name="listManager"><span data-ttu-id="006e5-139">추가할 <see cref="T:System.Windows.Forms.BindingManagerBase" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-139">The <see cref="T:System.Windows.Forms.BindingManagerBase" /> to add.</span></span></param>
        <summary><span data-ttu-id="006e5-140">특정 데이터 소스와 연관된 <see cref="T:System.Windows.Forms.BindingManagerBase" />를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-140">Adds the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with a specific data source to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCore">
      <MemberSignature Language="C#" Value="protected virtual void AddCore (object dataSource, System.Windows.Forms.BindingManagerBase listManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddCore(object dataSource, class System.Windows.Forms.BindingManagerBase listManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddCore (dataSource As Object, listManager As BindingManagerBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddCore(System::Object ^ dataSource, System::Windows::Forms::BindingManagerBase ^ listManager);" />
      <MemberSignature Language="F#" Value="abstract member AddCore : obj * System.Windows.Forms.BindingManagerBase -&gt; unit&#xA;override this.AddCore : obj * System.Windows.Forms.BindingManagerBase -&gt; unit" Usage="bindingContext.AddCore (dataSource, listManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="listManager" Type="System.Windows.Forms.BindingManagerBase" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="006e5-141"><see cref="T:System.Windows.Forms.BindingManagerBase" />와 관련된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-141">The object associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <param name="listManager"><span data-ttu-id="006e5-142">추가할 <see cref="T:System.Windows.Forms.BindingManagerBase" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-142">The <see cref="T:System.Windows.Forms.BindingManagerBase" /> to add.</span></span></param>
        <summary><span data-ttu-id="006e5-143">특정 데이터 소스와 연관된 <see cref="T:System.Windows.Forms.BindingManagerBase" />를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-143">Adds the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with a specific data source to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="006e5-144"><paramref name="dataSource" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-144"><paramref name="dataSource" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="006e5-145">또는</span><span class="sxs-lookup"><span data-stu-id="006e5-145">-or-</span></span> 
 <span data-ttu-id="006e5-146"><paramref name="listManager" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-146"><paramref name="listManager" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="protected internal void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Clear" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="bindingContext.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="006e5-147"><see cref="T:System.Windows.Forms.BindingManagerBase" /> 개체의 컬렉션을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-147">Clears the collection of any <see cref="T:System.Windows.Forms.BindingManagerBase" /> objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCore">
      <MemberSignature Language="C#" Value="protected virtual void ClearCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.ClearCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearCore();" />
      <MemberSignature Language="F#" Value="abstract member ClearCore : unit -&gt; unit&#xA;override this.ClearCore : unit -&gt; unit" Usage="bindingContext.ClearCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="006e5-148">컬렉션을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-148">Clears the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingContext.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="006e5-149">처리될 때 항상 <see cref="T:System.NotImplementedException" />을 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-149">Always raises a <see cref="T:System.NotImplementedException" /> when handled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="006e5-150">합니다 <xref:System.Windows.Forms.BindingContext.CollectionChanged> 이벤트는 사용 되지 않으며 항상를 <xref:System.NotImplementedException> 처리 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="006e5-150">The <xref:System.Windows.Forms.BindingContext.CollectionChanged> event is obsolete and always raises a <xref:System.NotImplementedException> when handled.</span></span> <span data-ttu-id="006e5-151">이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="006e5-151">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="006e5-152">모든 경우에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-152">Occurs in all cases.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="006e5-153"><see cref="T:System.Windows.Forms.BindingContext" />에 지정한 <see cref="T:System.Windows.Forms.BindingManagerBase" />가 포함되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-153">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingContext" /> contains the specified <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (dataSource As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ dataSource);" />
      <MemberSignature Language="F#" Value="member this.Contains : obj -&gt; bool" Usage="bindingContext.Contains dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="006e5-154">데이터 소스를 나타내는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-154">An <see cref="T:System.Object" /> that represents the data source.</span></span></param>
        <summary><span data-ttu-id="006e5-155"><see cref="T:System.Windows.Forms.BindingContext" />에 지정한 데이터 소스와 관련된 <see cref="T:System.Windows.Forms.BindingManagerBase" />가 포함되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-155">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingContext" /> contains the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source.</span></span></summary>
        <returns><span data-ttu-id="006e5-156"><see cref="T:System.Windows.Forms.BindingContext" />에 지정된 <see cref="T:System.Windows.Forms.BindingManagerBase" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-156"><see langword="true" /> if the <see cref="T:System.Windows.Forms.BindingContext" /> contains the specified <see cref="T:System.Windows.Forms.BindingManagerBase" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="006e5-157">참조 된 <xref:System.Windows.Forms.Binding> 컨트롤을 데이터 소스에 바인딩하는 방법에 대 한 정보와 가능한 데이터 원본 목록에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-157">See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and information about creating bindings between controls and data sources.</span></span>  
  
 <span data-ttu-id="006e5-158">참조를 <xref:System.Windows.Forms.BindingContext.Item%2A> 반환에 대 한 정보에 대 한 속성을 <xref:System.Windows.Forms.BindingManagerBase> 데이터 원본만 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-158">See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using only a data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="006e5-159">다음 코드 예제에서는 합니다 <xref:System.Windows.Forms.BindingContext.Contains%2A> 결정 하는 방법 여부를 <xref:System.Windows.Forms.BindingManagerBase> 양식의 각 컨트롤에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-159">The following code example uses the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine whether a <xref:System.Windows.Forms.BindingManagerBase> exists for each control on a form.</span></span> <span data-ttu-id="006e5-160">각 전달 <xref:System.Data.DataTable> 에 <xref:System.Data.DataSet> 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-160">The example passes each <xref:System.Data.DataTable> in a <xref:System.Data.DataSet> to the method.</span></span>  
  
 [!code-cpp[Classic BindingContext.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingContext.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Contains(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (dataSource As Object, dataMember As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="member this.Contains : obj * string -&gt; bool" Usage="bindingContext.Contains (dataSource, dataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="006e5-161">데이터 소스를 나타내는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-161">An <see cref="T:System.Object" /> that represents the data source.</span></span></param>
        <param name="dataMember"><span data-ttu-id="006e5-162">특정 <see cref="T:System.Windows.Forms.BindingManagerBase" />에 대한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-162">The information needed to resolve to a specific <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <summary><span data-ttu-id="006e5-163"><see cref="T:System.Windows.Forms.BindingContext" />에 지정한 데이터 소스 및 데이터 멤버와 관련된 <see cref="T:System.Windows.Forms.BindingManagerBase" />가 포함되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-163">Gets a value indicating whether the <see cref="T:System.Windows.Forms.BindingContext" /> contains the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source and data member.</span></span></summary>
        <returns><span data-ttu-id="006e5-164"><see cref="T:System.Windows.Forms.BindingContext" />에 지정된 <see cref="T:System.Windows.Forms.BindingManagerBase" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-164"><see langword="true" /> if the <see cref="T:System.Windows.Forms.BindingContext" /> contains the specified <see cref="T:System.Windows.Forms.BindingManagerBase" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="006e5-165">참조 된 <xref:System.Windows.Forms.Binding> 컨트롤을 데이터 소스에 바인딩하는 방법에 대 한 정보 및 가능한 데이터 원본 목록은 클래스.</span><span class="sxs-lookup"><span data-stu-id="006e5-165">See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.</span></span>  
  
 <span data-ttu-id="006e5-166">참조를 <xref:System.Windows.Forms.BindingContext.Item%2A> 반환에 대 한 자세한 속성을 <xref:System.Windows.Forms.BindingManagerBase> 데이터 원본 및 데이터 멤버를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-166">See the <xref:System.Windows.Forms.BindingContext.Item%2A> property for information about returning a <xref:System.Windows.Forms.BindingManagerBase> using a data source and data member.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="006e5-167">다음 코드 예제에서는 합니다 <xref:System.Windows.Forms.BindingContext.Contains%2A> 특정 여부를 테스트 하는 방법 <xref:System.Windows.Forms.BindingManagerBase> 를 통해 가져오려고 시도 하기 전에 존재는 <xref:System.Windows.Forms.BindingContext.Item%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="006e5-167">The following code example uses the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to test whether a specific <xref:System.Windows.Forms.BindingManagerBase> exists before attempting to get it through the <xref:System.Windows.Forms.BindingContext.Item%2A> property.</span></span>  
  
 [!code-cpp[Classic BindingContext.Contains1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.Contains1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.Contains1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.Contains1 Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.Contains1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.Contains1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingContext.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.BindingContext.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="006e5-168">컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-168">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="006e5-169">컬렉션이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-169"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="006e5-170">이 속성은 <xref:System.Collections.ICollection>에서 파생되고 `false`을 항상 반환하도록 재정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-170">This property is derived from <xref:System.Collections.ICollection>, and is overridden to always return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="006e5-171"><see cref="T:System.Windows.Forms.BindingManagerBase" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-171">Gets a <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingManagerBase this[object dataSource] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingManagerBase Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(dataSource As Object) As BindingManagerBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingManagerBase ^ default[System::Object ^] { System::Windows::Forms::BindingManagerBase ^ get(System::Object ^ dataSource); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : System.Windows.Forms.BindingManagerBase" Usage="System.Windows.Forms.BindingContext.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="006e5-172">특정 <see cref="T:System.Windows.Forms.BindingManagerBase" />와 관련된 데이터 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-172">The data source associated with a particular <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <summary><span data-ttu-id="006e5-173">지정된 데이터 소스와 연결된 <see cref="T:System.Windows.Forms.BindingManagerBase" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-173">Gets the <see cref="T:System.Windows.Forms.BindingManagerBase" /> that is associated with the specified data source.</span></span></summary>
        <value><span data-ttu-id="006e5-174">지정된 데이터 소스에 대한 <see cref="T:System.Windows.Forms.BindingManagerBase" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-174">A <see cref="T:System.Windows.Forms.BindingManagerBase" /> for the specified data source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="006e5-175">이 오버 로드를 사용 합니다 <xref:System.Windows.Forms.BindingManagerBase> 원하는, 탐색 경로 사용할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-175">Use this overload if the <xref:System.Windows.Forms.BindingManagerBase> you want does not require a navigation path.</span></span> <span data-ttu-id="006e5-176">예를 들어 경우는 <xref:System.Windows.Forms.BindingManagerBase> 집합을 관리 <xref:System.Windows.Forms.Binding> 사용 하는 개체를 <xref:System.Collections.ArrayList> 또는 <xref:System.Data.DataTable> 로 <xref:System.Windows.Forms.Binding.DataSource%2A>, 탐색 경로가 필요 없습니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-176">For example, if the <xref:System.Windows.Forms.BindingManagerBase> manages a set of <xref:System.Windows.Forms.Binding> objects that use an <xref:System.Collections.ArrayList> or <xref:System.Data.DataTable> as the <xref:System.Windows.Forms.Binding.DataSource%2A>, no navigation path is required.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="006e5-177"><xref:System.Windows.Forms.BindingContext.Item%2A> 속성은 항상 반환 된 <xref:System.Windows.Forms.BindingManagerBase>, 않으며 반환 하지 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-177">The <xref:System.Windows.Forms.BindingContext.Item%2A> property will always return a <xref:System.Windows.Forms.BindingManagerBase>, and never return `null`.</span></span>  
  
 <span data-ttu-id="006e5-178">참조 된 <xref:System.Windows.Forms.Binding> 컨트롤을 데이터 소스에 바인딩하는 방법에 대 한 정보 및 가능한 데이터 원본 목록은 클래스.</span><span class="sxs-lookup"><span data-stu-id="006e5-178">See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="006e5-179">다음 코드 예제에서는 3 개를 반환 합니다 <xref:System.Windows.Forms.BindingManagerBase> 개체:에 대 한는 <xref:System.Data.DataView>하나씩에 대 한는 <xref:System.Collections.ArrayList>, 및를 <xref:System.Windows.Forms.Binding.DataSource%2A> 의 <xref:System.Windows.Forms.Binding> 에 속하는 <xref:System.Windows.Forms.TextBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-179">The following code example returns three <xref:System.Windows.Forms.BindingManagerBase> objects: one for a <xref:System.Data.DataView>, one for an <xref:System.Collections.ArrayList>, and one for the <xref:System.Windows.Forms.Binding.DataSource%2A> of a <xref:System.Windows.Forms.Binding> that belongs to a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic BindingContext.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.this Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingManagerBase this[object dataSource, string dataMember] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingManagerBase Item(object, string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(dataSource As Object, dataMember As String) As BindingManagerBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingManagerBase ^ default[System::Object ^, System::String ^] { System::Windows::Forms::BindingManagerBase ^ get(System::Object ^ dataSource, System::String ^ dataMember); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj * string) : System.Windows.Forms.BindingManagerBase" Usage="System.Windows.Forms.BindingContext.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="006e5-180">특정 <see cref="T:System.Windows.Forms.BindingManagerBase" />와 관련된 데이터 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-180">The data source associated with a particular <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <param name="dataMember"><span data-ttu-id="006e5-181">특정 <see cref="T:System.Windows.Forms.BindingManagerBase" />에 대한 정보가 포함된 탐색 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-181">A navigation path containing the information that resolves to a specific <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></param>
        <summary><span data-ttu-id="006e5-182">지정된 데이터 소스 및 데이터 멤버와 관련된 <see cref="T:System.Windows.Forms.BindingManagerBase" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-182">Gets a <see cref="T:System.Windows.Forms.BindingManagerBase" /> that is associated with the specified data source and data member.</span></span></summary>
        <value><span data-ttu-id="006e5-183">지정된 데이터 소스 및 데이터 멤버에 대한 <see cref="T:System.Windows.Forms.BindingManagerBase" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-183">The <see cref="T:System.Windows.Forms.BindingManagerBase" /> for the specified data source and data member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="006e5-184">이 오버 로드 될 때 사용 합니다 <xref:System.Windows.Forms.BindingManagerBase> 집합을 관리 <xref:System.Windows.Forms.Binding> 데이터 소스는 여러 개체를 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-184">Use this overload when the <xref:System.Windows.Forms.BindingManagerBase> manages a set of <xref:System.Windows.Forms.Binding> objects for which the data source contains multiple objects.</span></span> <span data-ttu-id="006e5-185">예를 들어, 한 <xref:System.Data.DataSet> 여러 포함할 수 있습니다 <xref:System.Data.DataTable> 하 여 연결 된 개체 <xref:System.Data.DataRelation> 개체.</span><span class="sxs-lookup"><span data-stu-id="006e5-185">For example, a <xref:System.Data.DataSet> can contain several <xref:System.Data.DataTable> objects linked by <xref:System.Data.DataRelation> objects.</span></span> <span data-ttu-id="006e5-186">이러한 경우 탐색 경로가 사용 하도록 설정 하려면 필요 합니다 <xref:System.Windows.Forms.BindingContext> 올바른 반환할 <xref:System.Windows.Forms.BindingManagerBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-186">In such a case, the navigation path is required to enable the <xref:System.Windows.Forms.BindingContext> to return the correct <xref:System.Windows.Forms.BindingManagerBase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="006e5-187"><xref:System.Windows.Forms.BindingContext.Item%2A> 속성은 항상 반환을 <xref:System.Windows.Forms.BindingManagerBase>경우는 `dataMember` 매개 변수는 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-187">The <xref:System.Windows.Forms.BindingContext.Item%2A> property will always return a <xref:System.Windows.Forms.BindingManagerBase>, when the `dataMember` parameter is valid.</span></span> <span data-ttu-id="006e5-188">반환 하지 것입니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-188">It will never return `null`.</span></span>  
  
 <span data-ttu-id="006e5-189">참조 된 <xref:System.Windows.Forms.Binding> 컨트롤을 데이터 소스에 바인딩하는 방법에 대 한 정보 및 가능한 데이터 원본 목록은 클래스.</span><span class="sxs-lookup"><span data-stu-id="006e5-189">See the <xref:System.Windows.Forms.Binding> class for a list of possible data sources and for information about creating bindings between controls and data sources.</span></span>  
  
 <span data-ttu-id="006e5-190">경우 원하는 <xref:System.Windows.Forms.BindingManagerBase> 목록 관리 탐색 경로 목록을 끝나야 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-190">If the desired <xref:System.Windows.Forms.BindingManagerBase> manages a list, the navigation path must also end with a list.</span></span> <span data-ttu-id="006e5-191">예를 들어 다음 C# 코드를 바인딩하는 <xref:System.Windows.Forms.TextBox> orders 테이블에 주문 날짜를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-191">For example, the following C# code binds a <xref:System.Windows.Forms.TextBox> control to the order date in a table of orders.</span></span> <span data-ttu-id="006e5-192">탐색 경로 포함 된 <xref:System.Data.DataTable.TableName%2A>, <xref:System.Data.DataRelation.RelationName%2A>, 및 <xref:System.Data.DataColumn.ColumnName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-192">The navigation path includes the <xref:System.Data.DataTable.TableName%2A>, the <xref:System.Data.DataRelation.RelationName%2A>, and the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span> <span data-ttu-id="006e5-193">그러나 합니다 <xref:System.Windows.Forms.BindingManagerBase> 만 사용 하 여 검색 해야 합니다 <xref:System.Data.DataTable.TableName%2A> 및 <xref:System.Data.DataRelation.RelationName%2A> (로 확인 되는 목록).</span><span class="sxs-lookup"><span data-stu-id="006e5-193">However, the <xref:System.Windows.Forms.BindingManagerBase> must be retrieved using only the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataRelation.RelationName%2A> (which resolves to a list).</span></span>  
  
```  
// The navigation path for a Binding ends with a property.  
textBox1.DataBindings.Add  
("Text", dataSet1, "Customers.custToOrders.OrderDate");  
// The navigation path for the BindingManagerBase ends with a list.  
BindingManagerBase bmOrders = this.BindingContext  
[dataSet1, "Customers.custToOrders"];  
```  
  
 <span data-ttu-id="006e5-194">반환 하는 경우는 <xref:System.Windows.Forms.BindingManagerBase>, 동일한 데이터 원본으로 사용 해야는 <xref:System.Windows.Forms.Binding> 만 탐색 경로 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-194">When returning a <xref:System.Windows.Forms.BindingManagerBase>, you should use the same data source as the <xref:System.Windows.Forms.Binding> and modify only the navigation path.</span></span>  
  
 <span data-ttu-id="006e5-195">사용 합니다 <xref:System.Windows.Forms.BindingContext.Contains%2A> 여부를 확인 하는 메서드 원하는 <xref:System.Windows.Forms.BindingManagerBase> 이미 있습니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-195">Use the <xref:System.Windows.Forms.BindingContext.Contains%2A> method to determine if the desired <xref:System.Windows.Forms.BindingManagerBase> already exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="006e5-196">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.BindingContext.Item%2A> 검색할는 <xref:System.Windows.Forms.BindingManagerBase> 특정 바인딩에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-196">The following code example demonstrates how to use the <xref:System.Windows.Forms.BindingContext.Item%2A> to retrieve the <xref:System.Windows.Forms.BindingManagerBase> for a particular binding.</span></span> <span data-ttu-id="006e5-197">또한 처리 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> 에 대 한 이벤트를 <xref:System.Windows.Forms.BindingManagerBase> 동일한 데이터 소스에 바인딩된 여러 컨트롤의 컨트롤 값 중 하나가 변경 되 면 들이 동기화 된 상태로 유지 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-197">It also shows how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event for the <xref:System.Windows.Forms.BindingManagerBase> to ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed.</span></span> <span data-ttu-id="006e5-198">이 예제를 실행 하려면 호출을 Windows Form에 코드를 붙여넣은 합니다 `InitializeControlsAndData` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.</span><span class="sxs-lookup"><span data-stu-id="006e5-198">To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="006e5-199">데이터 소스에 지정한 <paramref name="dataMember" />가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="006e5-199">The specified <paramref name="dataMember" /> does not exist within the data source.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs ccevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollectionChanged (ccevent As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollectionChanged(System::ComponentModel::CollectionChangeEventArgs ^ ccevent);" />
      <MemberSignature Language="F#" Value="abstract member OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit&#xA;override this.OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit" Usage="bindingContext.OnCollectionChanged ccevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccevent" Type="System.ComponentModel.CollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="ccevent"><span data-ttu-id="006e5-200">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-200">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="006e5-201"><see cref="E:System.Windows.Forms.BindingContext.CollectionChanged" /> 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-201">Raises the <see cref="E:System.Windows.Forms.BindingContext.CollectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="006e5-202">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-202">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="006e5-203">자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-203">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="006e5-204">또한 <xref:System.Windows.Forms.BindingContext.OnCollectionChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-204">The <xref:System.Windows.Forms.BindingContext.OnCollectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="006e5-205">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-205">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="006e5-206">파생 클래스에서 <see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> 메서드를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-206">When overriding <see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="protected internal void Remove (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Remove(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Remove (dataSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Remove(System::Object ^ dataSource);" />
      <MemberSignature Language="F#" Value="member this.Remove : obj -&gt; unit" Usage="bindingContext.Remove dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="006e5-207">제거하려는 <see cref="T:System.Windows.Forms.BindingManagerBase" />와 관련된 데이터 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-207">The data source associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" /> to remove.</span></span></param>
        <summary><span data-ttu-id="006e5-208">지정된 데이터 소스와 관련된 <see cref="T:System.Windows.Forms.BindingManagerBase" />를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-208">Deletes the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCore">
      <MemberSignature Language="C#" Value="protected virtual void RemoveCore (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveCore(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.RemoveCore(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveCore (dataSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveCore(System::Object ^ dataSource);" />
      <MemberSignature Language="F#" Value="abstract member RemoveCore : obj -&gt; unit&#xA;override this.RemoveCore : obj -&gt; unit" Usage="bindingContext.RemoveCore dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="006e5-209">제거하려는 <see cref="T:System.Windows.Forms.BindingManagerBase" />와 관련된 데이터 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-209">The data source associated with the <see cref="T:System.Windows.Forms.BindingManagerBase" /> to remove.</span></span></param>
        <summary><span data-ttu-id="006e5-210">지정된 데이터 소스와 관련된 <see cref="T:System.Windows.Forms.BindingManagerBase" />를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-210">Removes the <see cref="T:System.Windows.Forms.BindingManagerBase" /> associated with the specified data source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array ar, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array ar, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (ar As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ ar, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ar"><span data-ttu-id="006e5-211">복사할 대상 <see cref="T:System.Array" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-211">An <see cref="T:System.Array" /> to copy into.</span></span></param>
        <param name="index"><span data-ttu-id="006e5-212">복사를 시작할 컬렉션 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-212">The collection index to begin copying from.</span></span></param>
        <summary><span data-ttu-id="006e5-213">컬렉션 인덱스부터 컬렉션의 요소를 지정한 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-213">Copies the elements of the collection into a specified array, starting at the collection index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[Classic BindingContext.ICollection.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.ICollection.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.ICollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.ICollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.ICollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.ICollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="006e5-214"><see cref="T:System.Windows.Forms.CurrencyManager" />가 관리하는 전체 <see cref="T:System.Windows.Forms.BindingContext" /> 개체의 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-214">Gets the total number of <see cref="T:System.Windows.Forms.CurrencyManager" /> objects managed by the <see cref="T:System.Windows.Forms.BindingContext" />.</span></span></summary>
        <value><span data-ttu-id="006e5-215"><see cref="T:System.Windows.Forms.BindingContext" />가 관리하는 데이터 소스의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-215">The number of data sources managed by the <see cref="T:System.Windows.Forms.BindingContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="006e5-216">다음 코드 예제에서는 수를 반환 합니다. <xref:System.Windows.Forms.CurrencyManager> 하 여 관리 되는 개체는 <xref:System.Windows.Forms.BindingContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-216">The following code example returns the number of <xref:System.Windows.Forms.CurrencyManager> objects managed by the <xref:System.Windows.Forms.BindingContext>.</span></span>  
  
 [!code-cpp[Classic BindingContext.ICollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.ICollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.ICollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.ICollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.ICollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.ICollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="006e5-217">컬렉션이 동기화되는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-217">Gets a value indicating whether the collection is synchronized.</span></span></summary>
        <value><span data-ttu-id="006e5-218">컬렉션이 스레드로부터 안전하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-218"><see langword="true" /> if the collection is thread safe; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="006e5-219">이 속성은 <xref:System.Collections.ICollection>에서 파생되고 `false`을 항상 반환하도록 재정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-219">This property is derived from <xref:System.Collections.ICollection>, and is overridden to always return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="006e5-220">동기화(스레드로부터의 안전성)에 사용할 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-220">Gets an object to use for synchronization (thread safety).</span></span></summary>
        <value><span data-ttu-id="006e5-221">이 속성은 <see cref="T:System.Collections.ICollection" />에서 파생되고 <see langword="null" />을 항상 반환하도록 재정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-221">This property is derived from <see cref="T:System.Collections.ICollection" />, and is overridden to always return <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="006e5-222">컬렉션의 열거자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-222">Gets an enumerator for the collection.</span></span></summary>
        <returns><span data-ttu-id="006e5-223">컬렉션에 대한 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-223">An <see cref="T:System.Collections.IEnumerator" /> for the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="006e5-224"><xref:System.Collections.IEnumerator> 반환한 합니다 <xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A> 메서드를 사용 하면 관리 하는 컬렉션을 반복 하는 <xref:System.Windows.Forms.BindingContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-224">The <xref:System.Collections.IEnumerator> returned by the <xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A> method allows you to iterate over the collection managed by the <xref:System.Windows.Forms.BindingContext>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="006e5-225">다음 코드 예제에서는 <xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A> 반환할 메서드를 <xref:System.Collections.IEnumerator> 에 대 한는 <xref:System.Windows.Forms.BindingContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-225">The following code example uses the <xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A> method to return an <xref:System.Collections.IEnumerator> for the <xref:System.Windows.Forms.BindingContext>.</span></span>  
  
 [!code-cpp[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext.IEnumerable.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext.IEnumerable.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext.IEnumerable.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext.IEnumerable.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBinding">
      <MemberSignature Language="C#" Value="public static void UpdateBinding (System.Windows.Forms.BindingContext newBindingContext, System.Windows.Forms.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateBinding(class System.Windows.Forms.BindingContext newBindingContext, class System.Windows.Forms.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateBinding(System::Windows::Forms::BindingContext ^ newBindingContext, System::Windows::Forms::Binding ^ binding);" />
      <MemberSignature Language="F#" Value="static member UpdateBinding : System.Windows.Forms.BindingContext * System.Windows.Forms.Binding -&gt; unit" Usage="System.Windows.Forms.BindingContext.UpdateBinding (newBindingContext, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBindingContext" Type="System.Windows.Forms.BindingContext" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="binding" Type="System.Windows.Forms.Binding" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="newBindingContext"><span data-ttu-id="006e5-226"><see cref="T:System.Windows.Forms.BindingContext" />과 연결할 새 <see cref="T:System.Windows.Forms.Binding" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-226">The new <see cref="T:System.Windows.Forms.BindingContext" /> to associate with the <see cref="T:System.Windows.Forms.Binding" />.</span></span></param>
        <param name="binding"><span data-ttu-id="006e5-227">새 <see cref="T:System.Windows.Forms.Binding" />와 연결할 <see cref="T:System.Windows.Forms.BindingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-227">The <see cref="T:System.Windows.Forms.Binding" /> to associate with the new <see cref="T:System.Windows.Forms.BindingContext" />.</span></span></param>
        <summary><span data-ttu-id="006e5-228"><see cref="T:System.Windows.Forms.Binding" />을 새 <see cref="T:System.Windows.Forms.BindingContext" />와 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-228">Associates a <see cref="T:System.Windows.Forms.Binding" /> with a new <see cref="T:System.Windows.Forms.BindingContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="006e5-229">이 메서드는 바인딩을 구현 하는 구성 요소 업데이트 <xref:System.Windows.Forms.IBindableComponent>때 해당 <xref:System.Windows.Forms.BindingContext> 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="006e5-229">This method is intended update the bindings of components that implement <xref:System.Windows.Forms.IBindableComponent>, when their <xref:System.Windows.Forms.BindingContext> changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>