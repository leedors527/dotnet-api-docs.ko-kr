<Type Name="BindingNavigator" FullName="System.Windows.Forms.BindingNavigator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7167531d7d5a6bb147246e6daf875436765fc086" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65016147" /></Metadata><TypeSignature Language="C#" Value="public class BindingNavigator : System.Windows.Forms.ToolStrip, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingNavigator extends System.Windows.Forms.ToolStrip implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingNavigator" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingNavigator&#xA;Inherits ToolStrip&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingNavigator : System::Windows::Forms::ToolStrip, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type BindingNavigator = class&#xA;    inherit ToolStrip&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStrip</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RefreshItems")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("BindingSource")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingNavigatorDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.BindingNavigatorDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>데이터에 바인딩된 폼의 컨트롤에 대한 탐색 및 조작 UI(사용자 인터페이스)를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator> 컨트롤은 이동 하 고 폼의 데이터를 조작 하는 표준화 된 방법을 나타냅니다. 대부분의 경우에는 <xref:System.Windows.Forms.BindingNavigator> 이룹니다를 <xref:System.Windows.Forms.BindingSource> 컨트롤을 폼에 데이터 레코드를 탐색 하 고 상호 작용 합니다. 이러한 경우에는 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> 속성은 연결 된 <xref:System.Windows.Forms.BindingSource?displayProperty=nameWithType> 데이터 원본으로 사용 되는 구성 요소입니다.  
  
 기본적으로 <xref:System.Windows.Forms.BindingNavigator> 컨트롤의 사용자 인터페이스 (UI)는 일련의 이루어져 <xref:System.Windows.Forms.ToolStrip> 단추, 텍스트 상자 및 데이터 추가, 삭제 및 데이터 탐색과 같은 가장 일반적인 데이터 관련 작업에 대 한 정적 텍스트 요소입니다. 검색 하거나의 연결 된 멤버를 통해 설정할 수 있습니다 이러한 각각의이 컨트롤을 <xref:System.Windows.Forms.BindingNavigator> 제어 합니다. 마찬가지로, 이기도 내에서 멤버를 일대일로 대응을 <xref:System.Windows.Forms.BindingSource> 다음 표에 나와 있는 것 처럼 동일한 기능을 프로그래밍 방식으로 수행 하는 클래스입니다.  
  
|UI 컨트롤|<xref:System.Windows.Forms.BindingNavigator> 멤버|<xref:System.Windows.Forms.BindingSource> 멤버|  
|----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|  
|**먼저 이동**|<xref:System.Windows.Forms.BindingNavigator.MoveFirstItem%2A>|<xref:System.Windows.Forms.BindingSource.MoveFirst%2A>|  
|**이전으로 이동**|<xref:System.Windows.Forms.BindingNavigator.MovePreviousItem%2A>|<xref:System.Windows.Forms.BindingSource.MovePrevious%2A>|  
|**현재 위치**|<xref:System.Windows.Forms.BindingNavigator.PositionItem%2A>|<xref:System.Windows.Forms.BindingSource.Current%2A>|  
|**개수**|<xref:System.Windows.Forms.BindingNavigator.CountItem%2A>|<xref:System.Windows.Forms.BindingSource.Count%2A>|  
|**다음으로 이동**|<xref:System.Windows.Forms.BindingNavigator.MoveNextItem%2A>|<xref:System.Windows.Forms.BindingSource.MoveNext%2A>|  
|**마지막으로 이동**|<xref:System.Windows.Forms.BindingNavigator.MoveLastItem%2A>|<xref:System.Windows.Forms.BindingSource.MoveLast%2A>|  
|**새로 추가**|<xref:System.Windows.Forms.BindingNavigator.AddNewItem%2A>|<xref:System.Windows.Forms.BindingSource.AddNew%2A>|  
|**삭제**|<xref:System.Windows.Forms.BindingNavigator.DeleteItem%2A>|<xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>|  
  
 추가 <xref:System.Windows.Forms.BindingNavigator> 컨트롤을 폼과 같은 데이터 원본에 바인딩하지는 <xref:System.Windows.Forms.BindingSource>,이 테이블의 관계를 자동으로 설정 됩니다.  
  
 이 도구 모음 사용자 지정 하려면 다음 방법 중 하나를 사용할 수 있습니다.  
  
-   만들기는 <xref:System.Windows.Forms.BindingNavigator> 사용 하 여 합니다 <xref:System.Windows.Forms.BindingNavigator.%23ctor%28System.Boolean%29> 부울 값을 받아들이는 생성자 `addStandardItems` 매개 변수를이 매개 변수를 설정 하 고 `false`입니다. 추가한 후 원하는 <xref:System.Windows.Forms.ToolStripItem> 개체는 <xref:System.Windows.Forms.ToolStrip.Items%2A> 컬렉션입니다.  
  
-   클래스를 파생 하는 많은 양의 사용자 지정이 필요한 경우 사용자 지정 디자인을 다시 사용 됩니다 <xref:System.Windows.Forms.BindingNavigator> 재정의 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 추가 또는 대체 표준 항목을 정의 하는 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 된 <xref:System.Windows.Forms.BindingNavigator> 데이터 집합을 통해 이동할 컨트롤입니다. 집합은 <xref:System.Windows.Forms.BindingSource> 구성 요소를 사용하여 <xref:System.Windows.Forms.TextBox> 컨트롤에 바인딩된 <xref:System.Data.DataView>에 포함됩니다.  
  
 [!code-csharp[System.Windows.Forms.DataNavigator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <related type="Article" href="https://msdn.microsoft.com/library/18c1e2a5-9834-40d3-9b2e-2b545e4e769e">BindingNavigator 컨트롤(Windows Forms)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.BindingNavigator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingNavigator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.BindingNavigator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 생성자 집합을 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> 속성을 `null`입니다. 이 생성자는 호출에 해당 하는 <xref:System.Windows.Forms.BindingNavigator.%23ctor%28System.Boolean%29> 생성자의 매개 변수 값을 사용 하 여 `false`입니다. 별도 호출 하 여 표준 항목을 추가할 수 있습니다 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingNavigator (bool addStandardItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool addStandardItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (addStandardItems As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingNavigator(bool addStandardItems);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingNavigator : bool -&gt; System.Windows.Forms.BindingNavigator" Usage="new System.Windows.Forms.BindingNavigator addStandardItems" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="addStandardItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addStandardItems"><see langword="true" /> 표준 탐색 UI를 표시 하려면 그렇지 않으면 <see langword="false" />합니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Windows.Forms.BindingNavigator" /> 는 표준 탐색 UI (사용자 인터페이스)를 표시할지 여부를 나타내는 클래스입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 설정 합니다 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> 속성을 `null`입니다. 경우 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 됩니다 `false`, <xref:System.Windows.Forms.BindingNavigator.AddNewItem%2A>, <xref:System.Windows.Forms.BindingNavigator.MoveFirstItem%2A>, <xref:System.Windows.Forms.BindingNavigator.MoveLastItem%2A>, <xref:System.Windows.Forms.BindingNavigator.MoveNextItem%2A>, <xref:System.Windows.Forms.BindingNavigator.MovePreviousItem%2A>, <xref:System.Windows.Forms.BindingNavigator.DeleteItem%2A>, <xref:System.Windows.Forms.BindingNavigator.CountItem%2A> 및 <xref:System.Windows.Forms.BindingNavigator.PositionItem%2A> 수도 `null`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingNavigator (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingNavigator(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingNavigator : System.ComponentModel.IContainer -&gt; System.Windows.Forms.BindingNavigator" Usage="new System.Windows.Forms.BindingNavigator container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container"><see cref="T:System.ComponentModel.IContainer" /> 새 추가할 <see cref="T:System.Windows.Forms.BindingNavigator" /> 를 제어 합니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Windows.Forms.BindingNavigator" /> 클래스 및 지정된 된 컨테이너에 새 인스턴스를 추가 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 새로 만드는 단계를 결합, 편의상 제공 됩니다 <xref:System.Windows.Forms.BindingNavigator> 컨트롤과 부모에 추가 <xref:System.ComponentModel.IContainer>합니다. 기본 생성자와 같은 설정 합니다 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> 속성을 `null` 하지만 표준 사용자 인터페이스를 표시 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingNavigator (System.Windows.Forms.BindingSource bindingSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.BindingSource bindingSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.#ctor(System.Windows.Forms.BindingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingNavigator(System::Windows::Forms::BindingSource ^ bindingSource);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingNavigator : System.Windows.Forms.BindingSource -&gt; System.Windows.Forms.BindingNavigator" Usage="new System.Windows.Forms.BindingNavigator bindingSource" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bindingSource" Type="System.Windows.Forms.BindingSource" />
      </Parameters>
      <Docs>
        <param name="bindingSource"><see cref="T:System.Windows.Forms.BindingSource" /> 데이터 원본으로 사용 합니다.</param>
        <summary>새 인스턴스를 초기화 합니다 <see cref="T:System.Windows.Forms.BindingNavigator" /> 지정된 된 <see cref="T:System.Windows.Forms.BindingSource" /> 데이터 원본으로 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 합니다 `BindingSource` 초기화 매개 변수는 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> 속성입니다. 또한 탐색 단추는 표준 집합을 추가 하 고 해당 속성을 설정 하는 등 <xref:System.Windows.Forms.BindingNavigator.CountItem%2A> 고 <xref:System.Windows.Forms.BindingNavigator.MoveNextItem%2A>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="AddNewItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem AddNewItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem AddNewItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.AddNewItem" />
      <MemberSignature Language="VB.NET" Value="Public Property AddNewItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ AddNewItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AddNewItem : System.Windows.Forms.ToolStripItem with get, set" Usage="System.Windows.Forms.BindingNavigator.AddNewItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**새로 추가** 단추를 나타내는 <see cref="T:System.Windows.Forms.ToolStripItem" />을 가져오거나 설정합니다.</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> 나타내는 합니다 **새로 추가** 단추를 <see cref="T:System.Windows.Forms.BindingSource" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 된 경우는 <xref:System.Windows.Forms.BindingNavigator.AddNewItem%2A> 속성 생성 합니다 <xref:System.Windows.Forms.Control.Click> 에 대 한 이벤트 처리기를 **새로 추가** 단추입니다. 이 이벤트 처리기를 호출 합니다 <xref:System.Windows.Forms.BindingSource.AddNew%2A> 메서드 때 합니다 **새로 추가** 런타임에 단추를 클릭 합니다.  
  
 이 속성은 `null` 이전에 설정 되지 않은 경우 및 하기 전에 액세스 하는 것은 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 암시적 또는 명시적으로 호출 됩니다.  
  
 <xref:System.Windows.Forms.BindingNavigator> 컨트롤은 사용 하지 않도록 설정 합니다 **새로 추가** 단추를 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> 속성은 `null` 또는 <xref:System.Windows.Forms.BindingSource.AllowNew%2A> 속성은 `false`합니다.  
  
 기본 구현에서는이 속성 형식의 컨트롤을 나타냅니다. <xref:System.Windows.Forms.ToolStripButton>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.AddNew" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.DeleteItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="AddStandardItems">
      <MemberSignature Language="C#" Value="public virtual void AddStandardItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStandardItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStandardItems ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStandardItems();" />
      <MemberSignature Language="F#" Value="abstract member AddStandardItems : unit -&gt; unit&#xA;override this.AddStandardItems : unit -&gt; unit" Usage="bindingNavigator.AddStandardItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>탐색 항목의 표준 집합을 추가 합니다 <see cref="T:System.Windows.Forms.BindingNavigator" /> 제어 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 사용자 인터페이스의 표준 집합을 추가 하는 메서드 <xref:System.Windows.Forms.ToolStripItem> 개체를 <xref:System.Windows.Forms.BindingNavigator> 기본 탐색 작업에 대 한 제거와 같은 도구 **처음으로 이동**를 **마지막으로 이동**, 및 **새로 추가**합니다.  
  
 재정의 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 파생 된 클래스를 추가 또는 대체 도구 스트립 항목을 정의 합니다. 파생된 클래스에 대 한 최적의 디자인 타임 지원을 위해, 각 항목에 있는지 의미 있는 값 해당 <xref:System.Windows.Forms.ToolStripItem.Name%2A> 속성입니다. 디자인 타임에 해당 멤버 변수에 대 한 고유한 이름을 생성에 사용이 됩니다. 항목의 <xref:System.Windows.Forms.ToolStripItem.Name%2A> 속성은 다음 멤버 변수를 지정 된 이름과 일치 하도록 업데이트 됩니다.  
  
> [!NOTE]
>  이 메서드를 이전에 기존 항목을 명시적으로 제거 하지 않습니다는 <xref:System.Windows.Forms.BindingNavigator>에 대 한 새 값을 설정 하지만 합니다 <xref:System.Windows.Forms.BindingNavigator.MoveNextItem%2A>, <xref:System.Windows.Forms.BindingNavigator.MovePreviousItem%2A>, <xref:System.Windows.Forms.BindingNavigator.MoveFirstItem%2A>, <xref:System.Windows.Forms.BindingNavigator.MoveLastItem%2A>를 <xref:System.Windows.Forms.BindingNavigator.PositionItem%2A>, <xref:System.Windows.Forms.BindingNavigator.CountItem%2A>, <xref:System.Windows.Forms.BindingNavigator.AddNewItem%2A> 및 <xref:System.Windows.Forms.BindingNavigator.DeleteItem%2A> 속성입니다. 또한 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 항목을 추가 하는 동안 레이아웃 일시 중단 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolStripItem" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Name" />
        <altmember cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="bindingNavigator.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>에 대 한 업데이트를 사용 하지 않도록 설정 합니다 <see cref="T:System.Windows.Forms.ToolStripItem" /> 컨트롤을 <see cref="T:System.Windows.Forms.BindingNavigator" /> 구성 요소의 초기화 하는 동안.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator.BeginInit%2A> 하 고 <xref:System.Windows.Forms.BindingNavigator.EndInit%2A> 메서드를 사용 하면를 <xref:System.Windows.Forms.BindingNavigator> 여러 속성을 변경 해도 최적화 하는 컨트롤입니다. 이 쌍의 메서드를 사용 하는 상호 종속적인 속성을 초기화할 수 있습니다 또는 디자인 타임에 여러 속성을 설정 하는 일괄 처리 합니다. 호출 된 <xref:System.Windows.Forms.BindingNavigator.BeginInit%2A> 초기화가 시작 되었음을 컨트롤에 알리기 위해 메서드를 호출 합니다 <xref:System.Windows.Forms.BindingNavigator.EndInit%2A> 해당 초기화를 알리기 위해 메서드가 완료 될.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <altmember cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.EndInit" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
        <altmember cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="BindingSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingSource BindingSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingSource BindingSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.BindingSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingSource As BindingSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingSource ^ BindingSource { System::Windows::Forms::BindingSource ^ get(); void set(System::Windows::Forms::BindingSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingSource : System.Windows.Forms.BindingSource with get, set" Usage="System.Windows.Forms.BindingNavigator.BindingSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>가져오거나 설정 합니다 <see cref="T:System.Windows.Forms.BindingSource" /> 데이터의 원인이 되는 구성 요소입니다.</summary>
        <value>합니다 <see cref="T:System.Windows.Forms.BindingSource" /> 구성 요소와 연결 된 <see cref="T:System.Windows.Forms.BindingNavigator" />합니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> 속성이 나타내는 데이터 원본의 <xref:System.Windows.Forms.BindingNavigator> 탐색 합니다. 구체적으로 <xref:System.Windows.Forms.BindingSource.List%2A> 의 속성을 <xref:System.Windows.Forms.BindingSource> 실제 데이터 목록을 나타냅니다.  
  
 이 기본 속성을 <xref:System.Windows.Forms.BindingNavigator> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 된 <xref:System.Windows.Forms.BindingNavigator> 데이터 집합을 통해 이동할 컨트롤입니다. 집합은 <xref:System.Windows.Forms.BindingSource> 구성 요소를 사용하여 <xref:System.Windows.Forms.TextBox> 컨트롤에 바인딩된 <xref:System.Data.DataView>에 포함됩니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: Windows Forms BindingNavigator 컨트롤을 사용 하 여 데이터 집합에서 이동](~/docs/framework/winforms/controls/move-through-a-dataset-with-wf-bindingnavigator-control.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataNavigator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DataNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataNavigator/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingSource" />
        <altmember cref="P:System.Windows.Forms.BindingSource.List" />
      </Docs>
    </Member>
    <Member MemberName="CountItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem CountItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem CountItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.CountItem" />
      <MemberSignature Language="VB.NET" Value="Public Property CountItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ CountItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CountItem : System.Windows.Forms.ToolStripItem with get, set" Usage="System.Windows.Forms.BindingNavigator.CountItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>가져오거나 설정 합니다 <see cref="T:System.Windows.Forms.ToolStripItem" /> 연결 된 항목의 총 수를 표시 하는 <see cref="T:System.Windows.Forms.BindingSource" />합니다.</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> 연결 된 항목의 총 수를 표시 하는 <see cref="T:System.Windows.Forms.BindingSource" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator.CountItem%2A> 속성은 `null` 이전에 설정 되지 않은 경우 및 하기 전에 액세스 하는 것은 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 암시적 또는 명시적으로 호출 됩니다.  
  
 통해 액세스 하는 항목의 수를 <xref:System.Windows.Forms.BindingSource.Count%2A> 의 속성을 <xref:System.Windows.Forms.BindingSource>입니다.  
  
 기본 구현에서는이 속성 형식의 컨트롤을 나타냅니다. <xref:System.Windows.Forms.ToolStripLabel>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.BindingSource" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItemFormat" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
      </Docs>
    </Member>
    <Member MemberName="CountItemFormat">
      <MemberSignature Language="C#" Value="public string CountItemFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CountItemFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.CountItemFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property CountItemFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CountItemFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CountItemFormat : string with get, set" Usage="System.Windows.Forms.BindingNavigator.CountItemFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표시 되는 정보 형식을 지정 하는 데 사용 하는 문자열을 가져오거나 설정 합니다.는 <see cref="P:System.Windows.Forms.BindingNavigator.CountItem" /> 제어 합니다.</summary>
        <value>형식 <see cref="T:System.String" /> 항목 수의 형식을 지정 하는 데 사용 합니다. 기본값은 문자열 "의 {0}"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.BindingNavigator.CountItem%2A> 컨트롤은는 <xref:System.Windows.Forms.ToolStripLabel> 에 있는 항목의 총 수를 표시 하는 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A>합니다. <xref:System.Windows.Forms.BindingNavigator.CountItemFormat%2A> 속성이 수의 형식을 지정 하는 데 사용 하는 서식 문자열입니다.  
  
 형식 문자열에 대 한 자세한 내용은 참조는 <xref:System.String.Format%28System.String%2CSystem.Object%29?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.String.Format" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItem" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Count" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem DeleteItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem DeleteItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ DeleteItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteItem : System.Windows.Forms.ToolStripItem with get, set" Usage="System.Windows.Forms.BindingNavigator.DeleteItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**삭제** 기능과 연결된 <see cref="T:System.Windows.Forms.ToolStripItem" />을 가져오거나 설정합니다.</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> 나타내는 합니다 **삭제** 단추를 <see cref="T:System.Windows.Forms.BindingSource" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성으로 설정 된 경우 생성 합니다 <xref:System.Windows.Forms.Control.Click> 에 대 한 이벤트 처리기는 **삭제** 단추. 이 이벤트 처리기를 호출 합니다 <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A> 메서드 때 합니다 **삭제** 런타임에 단추를 클릭 합니다.  
  
 이 속성은 `null` 이전에 설정 되지 않은 경우 및 하기 전에 액세스 하는 것은 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 암시적 또는 명시적으로 호출 됩니다.  
  
 <xref:System.Windows.Forms.BindingNavigator> 컨트롤은 사용 하지 않도록 설정 합니다 **삭제** 다음과 같은 런타임 상황 단추:를 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> 속성은 `null`, <xref:System.Windows.Forms.BindingSource.Count%2A> 속성은 0으로, 또는 <xref:System.Windows.Forms.BindingSource.AllowRemove%2A> 속성은 `false`.  
  
 기본 구현에서는이 속성 형식의 컨트롤을 나타냅니다. <xref:System.Windows.Forms.ToolStripButton>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.RemoveCurrent" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.AddNewItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="bindingNavigator.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary><see cref="T:System.Windows.Forms.BindingNavigator" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 공용 `Dispose` 메서드 및 <xref:System.Object.Finalize%2A> 메서드. `Dispose` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.  
  
 경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 되는 개체가 보유 한 모든 리소스를 해제이 <xref:System.Windows.Forms.BindingNavigator> 참조 합니다. 이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="bindingNavigator.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>에 대 한 업데이트를 사용 하도록 설정 합니다 <see cref="T:System.Windows.Forms.ToolStripItem" /> 컨트롤을 <see cref="T:System.Windows.Forms.BindingNavigator" /> 구성 요소의 초기화가 완료 된 후 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingNavigator.BeginInit%2A> 하 고 <xref:System.Windows.Forms.BindingNavigator.EndInit%2A> 메서드를 사용 하면를 <xref:System.Windows.Forms.BindingNavigator> 여러 속성을 변경 해도 최적화 하는 컨트롤입니다. 이 쌍의 메서드를 사용 하는 상호 종속적인 속성을 초기화할 수 있습니다 또는 디자인 타임에 여러 속성을 설정 하는 일괄 처리 합니다. 호출 된 <xref:System.Windows.Forms.BindingNavigator.BeginInit%2A> 초기화가 시작 되었음을 컨트롤에 알리기 위해 메서드를 호출 합니다 <xref:System.Windows.Forms.BindingNavigator.EndInit%2A> 해당 초기화를 알리기 위해 메서드가 완료 될.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <altmember cref="M:System.ComponentModel.ISupportInitialize.EndInit" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.BeginInit" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
        <altmember cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="MoveFirstItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem MoveFirstItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem MoveFirstItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.MoveFirstItem" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveFirstItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ MoveFirstItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MoveFirstItem : System.Windows.Forms.ToolStripItem with get, set" Usage="System.Windows.Forms.BindingNavigator.MoveFirstItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**처음으로 이동** 기능과 연결된 <see cref="T:System.Windows.Forms.ToolStripItem" />을 가져오거나 설정합니다.</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> 나타내는 합니다 **처음으로 이동** 단추를 <see cref="T:System.Windows.Forms.BindingSource" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성으로 설정 된 경우 생성 합니다 <xref:System.Windows.Forms.Control.Click> 에 대 한 이벤트 처리기는 **처음으로 이동** 단추. 이 이벤트 처리기를 호출 합니다 <xref:System.Windows.Forms.BindingSource.MoveFirst%2A> 메서드 때 합니다 **처음으로 이동** 런타임에 단추를 클릭 합니다.  
  
 이 속성은 `null` 이전에 설정 되지 않은 경우 및 하기 전에 액세스 하는 것은 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 암시적 또는 명시적으로 호출 됩니다.  
  
 <xref:System.Windows.Forms.BindingNavigator> 컨트롤은 사용 하지 않도록 설정 합니다 **처음으로 이동** 다음과 같은 런타임 상황 단추:를 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> 속성은 `null`, <xref:System.Windows.Forms.BindingSource.Position%2A?displayProperty=nameWithType> 속성이 0 또는 <xref:System.Windows.Forms.BindingSource.AllowNew%2A> 에 대 한를 관련 <xref:System.Windows.Forms.BindingSource> 는 `false`합니다.  
  
 기본 구현에서는이 속성 형식의 컨트롤을 나타냅니다. <xref:System.Windows.Forms.ToolStripButton>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveFirst" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveLastItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveNextItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MovePreviousItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="MoveLastItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem MoveLastItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem MoveLastItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.MoveLastItem" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveLastItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ MoveLastItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MoveLastItem : System.Windows.Forms.ToolStripItem with get, set" Usage="System.Windows.Forms.BindingNavigator.MoveLastItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**마지막으로 이동** 기능과 연결된 <see cref="T:System.Windows.Forms.ToolStripItem" />을 가져오거나 설정합니다.</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> 나타내는 합니다 **마지막으로 이동** 단추를 <see cref="T:System.Windows.Forms.BindingSource" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성으로 설정 된 경우 생성 합니다 <xref:System.Windows.Forms.Control.Click> 에 대 한 이벤트 처리기는 **마지막으로 이동** 단추. 이 이벤트 처리기를 호출 합니다 <xref:System.Windows.Forms.BindingSource.MoveLast%2A> 메서드 때 합니다 **마지막으로 이동** 런타임에 단추를 클릭 합니다.  
  
 이 속성은 `null` 이전에 설정 되지 않은 경우 및 하기 전에 액세스 하는 것은 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 암시적 또는 명시적으로 호출 됩니다.  
  
 <xref:System.Windows.Forms.BindingNavigator> 컨트롤은 사용 하지 않도록 설정 합니다 **마지막으로 이동** 다음과 같은 런타임 상황 단추:는 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> 속성은 `null` 또는 <xref:System.Windows.Forms.BindingSource.Position%2A> 속성 보다 크거나 같으면 합니다 <xref:System.Windows.Forms.BindingSource.Count%2A> 속성입니다.  
  
 기본 구현에서는이 속성 형식의 컨트롤을 나타냅니다. <xref:System.Windows.Forms.ToolStripButton>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveLast" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveFirstItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveNextItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MovePreviousItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="MoveNextItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem MoveNextItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem MoveNextItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.MoveNextItem" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveNextItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ MoveNextItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MoveNextItem : System.Windows.Forms.ToolStripItem with get, set" Usage="System.Windows.Forms.BindingNavigator.MoveNextItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**다음으로 이동** 기능과 연결된 <see cref="T:System.Windows.Forms.ToolStripItem" />을 가져오거나 설정합니다.</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> 나타내는 합니다 **다음으로 이동** 단추를 <see cref="T:System.Windows.Forms.BindingSource" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성으로 설정 된 경우 생성 합니다 <xref:System.Windows.Forms.Control.Click> 에 대 한 이벤트 처리기는 **다음으로 이동** 단추. 이 이벤트 처리기를 호출 합니다 <xref:System.Windows.Forms.BindingSource.MoveNext%2A> 메서드 때 합니다 **다음으로 이동** 런타임에 단추를 클릭 합니다.  
  
 이 속성은 `null` 이전에 설정 되지 않은 경우 및 하기 전에 액세스 하는 것은 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 암시적 또는 명시적으로 호출 됩니다.  
  
 <xref:System.Windows.Forms.BindingNavigator> 컨트롤은 사용 하지 않도록 설정 합니다 **다음으로 이동** 다음과 같은 런타임 상황 단추:는 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> 속성은 `null` 또는 <xref:System.Windows.Forms.BindingSource.Position%2A> 속성 보다 크거나 같으면 합니다 <xref:System.Windows.Forms.BindingSource.Count%2A> 속성입니다.  
  
 기본 구현에서는이 속성 형식의 컨트롤을 나타냅니다. <xref:System.Windows.Forms.ToolStripButton>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.MoveNext" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveFirstItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveLastItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MovePreviousItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="MovePreviousItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem MovePreviousItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem MovePreviousItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.MovePreviousItem" />
      <MemberSignature Language="VB.NET" Value="Public Property MovePreviousItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ MovePreviousItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MovePreviousItem : System.Windows.Forms.ToolStripItem with get, set" Usage="System.Windows.Forms.BindingNavigator.MovePreviousItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**이전으로 이동** 기능과 연결된 <see cref="T:System.Windows.Forms.ToolStripItem" />을 가져오거나 설정합니다.</summary>
        <value>A <see cref="T:System.Windows.Forms.ToolStripItem" /> 나타내는 합니다 **이전으로 이동** 단추를 <see cref="T:System.Windows.Forms.BindingSource" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 된 경우는 <xref:System.Windows.Forms.BindingNavigator.MovePreviousItem%2A> 속성 생성 합니다 <xref:System.Windows.Forms.Control.Click> 에 대 한 이벤트 처리기를 **이전으로 이동** 단추입니다. 이 이벤트 처리기를 호출 합니다 <xref:System.Windows.Forms.BindingSource.MovePrevious%2A> 메서드 때 합니다 **이전으로 이동** 런타임에 단추를 클릭 합니다.  
  
 이 속성은 `null` 이전에 설정 되지 않은 경우 및 하기 전에 액세스 하는 것은 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 암시적 또는 명시적으로 호출 됩니다.  
  
 <xref:System.Windows.Forms.BindingNavigator> 컨트롤은 사용 하지 않도록 설정 합니다 **이전으로 이동** 다음과 같은 런타임 상황 단추:를 <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A> 속성은 `null` 또는 <xref:System.Windows.Forms.BindingSource.Position%2A> 속성이 0 보다 작거나.  
  
 기본 구현에서는이 속성 형식의 컨트롤을 나타냅니다. <xref:System.Windows.Forms.ToolStripButton>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingSource.MovePrevious" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveFirstItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveLastItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.MoveNextItem" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.PositionItem" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="OnRefreshItems">
      <MemberSignature Language="C#" Value="protected virtual void OnRefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.OnRefreshItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRefreshItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRefreshItems();" />
      <MemberSignature Language="F#" Value="abstract member OnRefreshItems : unit -&gt; unit&#xA;override this.OnRefreshItems : unit -&gt; unit" Usage="bindingNavigator.OnRefreshItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 해당 발생 하는 것 외에도 <xref:System.Windows.Forms.BindingNavigator.RefreshItems> 이벤트를 <xref:System.Windows.Forms.BindingNavigator.OnRefreshItems%2A> 연결 된 상태에 대해 다음 작업을 수행 하는 메서드 <xref:System.Windows.Forms.BindingSource>합니다.  
  
-   현재 사용 하 여 내부 멤버를 설정 <xref:System.Windows.Forms.BindingSource> 상태입니다.  
  
-   현재에 맞게 사용자 인터페이스 (UI) 항목을 사용 하지 않도록 설정 하거나 <xref:System.Windows.Forms.BindingSource> 상태입니다.  
  
-   업데이트를 <xref:System.Windows.Forms.BindingNavigator.CountItem%2A> 고 <xref:System.Windows.Forms.BindingNavigator.PositionItem%2A> 컨트롤입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.BindingNavigator.OnRefreshItems%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.BindingNavigator.OnRefreshItems" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.BindingNavigator.OnRefreshItems" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
        <altmember cref="M:System.Windows.Forms.BindingNavigator.AddStandardItems" />
      </Docs>
    </Member>
    <Member MemberName="PositionItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem PositionItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem PositionItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingNavigator.PositionItem" />
      <MemberSignature Language="VB.NET" Value="Public Property PositionItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ PositionItem { System::Windows::Forms::ToolStripItem ^ get(); void set(System::Windows::Forms::ToolStripItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PositionItem : System.Windows.Forms.ToolStripItem with get, set" Usage="System.Windows.Forms.BindingNavigator.PositionItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>가져오거나 설정 합니다 <see cref="T:System.Windows.Forms.ToolStripItem" /> 내의 현재 위치를 표시 하는 <see cref="T:System.Windows.Forms.BindingSource" />.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripItem" /> 는 현재 위치를 표시 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 구현에는 <xref:System.Windows.Forms.BindingNavigator.PositionItem%2A> 형식의 속성이 <xref:System.Windows.Forms.ToolStripTextBox>합니다.  
  
 이 속성은 `null` 이전에 설정 되지 않은 경우 및 하기 전에 액세스 하는 것은 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 암시적 또는 명시적으로 호출 됩니다.  
  
 확보 하 여 현재 위치를 계산 합니다 <xref:System.Windows.Forms.BindingSource.Position%2A> 의 속성을 <xref:System.Windows.Forms.BindingSource>, 1부터 수 위치를 변환 하는 1을 추가 하 고 합니다.  
  
 기본 구현에서는이 속성 형식의 컨트롤을 나타냅니다. <xref:System.Windows.Forms.ToolStripTextBox>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolStripTextBox" />
        <altmember cref="P:System.Windows.Forms.BindingNavigator.CountItem" />
        <altmember cref="P:System.Windows.Forms.BindingSource.Position" />
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="public event EventHandler RefreshItems;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RefreshItems" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingNavigator.RefreshItems" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RefreshItems As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RefreshItems;" />
      <MemberSignature Language="F#" Value="member this.RefreshItems : EventHandler " Usage="member this.RefreshItems : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내부 데이터의 현재 상태를 반영하기 위해 탐색 UI(사용자 인터페이스)의 상태를 새로 고쳐야 하는 경우에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.BindingNavigator.RefreshItems?displayProperty=nameWithType> 이벤트 신호는의 탐색 UI를 <xref:System.Windows.Forms.BindingNavigator> 관련 된 현재 상태를 반영 하도록 업데이트 해야 <xref:System.Windows.Forms.BindingSource>합니다.  
  
 이 이벤트는 <xref:System.Windows.Forms.BindingNavigator> 클래스의 기본 이벤트입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.BindingNavigator.RefreshItems> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.BindingNavigator> 라는 `BindingNavigator1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.BindingNavigator.RefreshItems> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#124](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#124)]
 [!code-vb[System.Windows.Forms.EventExamples#124](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#124)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingNavigator.OnRefreshItems" />
      </Docs>
    </Member>
    <Member MemberName="RefreshItemsCore">
      <MemberSignature Language="C#" Value="protected virtual void RefreshItemsCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RefreshItemsCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.RefreshItemsCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RefreshItemsCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RefreshItemsCore();" />
      <MemberSignature Language="F#" Value="abstract member RefreshItemsCore : unit -&gt; unit&#xA;override this.RefreshItemsCore : unit -&gt; unit" Usage="bindingNavigator.RefreshItemsCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>표준 항목의 상태를 새로 고쳐 데이터의 현재 상태를 반영합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 한 경우 <xref:System.Windows.Forms.BindingNavigator.AddStandardItems%2A> 파생된 클래스에서 재정의 해야 <xref:System.Windows.Forms.BindingNavigator.RefreshItemsCore%2A> 에 추가한 모든 사용자 지정 표준 항목을 새로 고치는 <xref:System.Windows.Forms.BindingNavigator> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public bool Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingNavigator.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Function Validate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Validate();" />
      <MemberSignature Language="F#" Value="member this.Validate : unit -&gt; bool" Usage="bindingNavigator.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>폼 유효성 검사를 발생시키고 유효성 검사의 성공 여부를 반환합니다.</summary>
        <returns><see langword="true" /> 유효성 검사에 성공 하 고 포커스를 이동할 수는 <see cref="T:System.Windows.Forms.BindingNavigator" />이 고, 그렇지 않으면 <see langword="false" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 포커스를 이동 하려면에서 항목에 대 한 클릭 동작을 수행 하기 전에 확인을 <xref:System.Windows.Forms.BindingNavigator> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>