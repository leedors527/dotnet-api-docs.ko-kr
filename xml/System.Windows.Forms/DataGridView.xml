<Type Name="DataGridView" FullName="System.Windows.Forms.DataGridView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8f3ad0677266b46d97d70b890054e0fb29a05bd0" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59017644" /></Metadata><TypeSignature Language="C#" Value="public class DataGridView : System.Windows.Forms.Control, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridView extends System.Windows.Forms.Control implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridView" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridView&#xA;Inherits Control&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridView : System::Windows::Forms::Control, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type DataGridView = class&#xA;    inherit Control&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CellContentClick")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewComponentEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사용자 지정 가능한 표에 데이터를 표시합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 컨트롤은 데이터를 표시 하기 위한 사용자 지정 가능한 테이블을 제공 합니다. 합니다 <xref:System.Windows.Forms.DataGridView> 클래스와 같은 셀, 행, 열 및 테두리 속성을 사용 하 여 사용자 지정할 수 있습니다 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>를 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>를 <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, 및 <xref:System.Windows.Forms.DataGridView.GridColor%2A>합니다. 자세한 내용은 [기본 서식 지정 및 Windows Forms DataGridView 컨트롤의 스타일 지정](~/docs/framework/winforms/controls/basic-formatting-and-styling-in-the-windows-forms-datagridview-control.md)합니다.  
  
 사용할 수는 <xref:System.Windows.Forms.DataGridView> 컨트롤 또는 기본 데이터 원본을 사용 하지 않고 데이터를 표시 합니다. 데이터 소스를 지정 하지 않고 데이터를 포함 하 고에 직접 추가 하는 열과 행을 만들 수는 <xref:System.Windows.Forms.DataGridView> 를 사용 하는 <xref:System.Windows.Forms.DataGridView.Rows%2A> 및 <xref:System.Windows.Forms.DataGridView.Columns%2A> 속성. 사용할 수도 있습니다는 <xref:System.Windows.Forms.DataGridView.Rows%2A> 액세스할 컬렉션 <xref:System.Windows.Forms.DataGridViewRow> 개체 및 <xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=nameWithType> 속성을 읽거나 셀 값을 직접 작성 합니다. <xref:System.Windows.Forms.DataGridView.Item%2A> 인덱서 또한 셀에 대 한 직접 액세스를 제공 합니다.  
  
 수동으로 컨트롤을 채우는 대신 설정할 수 있습니다는 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 및 <xref:System.Windows.Forms.DataGridView.DataMember%2A> 바인딩할 속성을 <xref:System.Windows.Forms.DataGridView> 에 대 한 데이터 원본 및 자동으로 데이터를 채웁니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤에서 데이터 표시](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)합니다.  
  
 매우 많은 양의 데이터를 사용할 때 설정할 수 있습니다 합니다 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성을 `true` 사용 가능한 데이터의 하위 집합을 표시 합니다. 가상 모드 데이터 캐시를 구현 해야 합니다 <xref:System.Windows.Forms.DataGridView> 컨트롤 채워집니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 데이터 디스플레이 모드](~/docs/framework/winforms/controls/data-display-modes-in-the-windows-forms-datagridview-control.md)합니다.  
  
 사용 가능한 기능에 대 한 자세한 내용은 합니다 <xref:System.Windows.Forms.DataGridView> 제어를 참조 하십시오 [DataGridView 컨트롤](~/docs/framework/winforms/controls/datagridview-control-windows-forms.md)합니다. 다음 표에서 일반적인 작업에 대 한 직접 링크를 제공합니다.  
  
-   [방법: Windows Forms DataGridView 컨트롤에 데이터 바인딩](https://msdn.microsoft.com/library/fbk67b6z\(v=vs.110\).aspx)  
  
-   [방법: Windows Forms DataGridView 컨트롤에서 개별 셀에 도구 설명 추가](https://msdn.microsoft.com/library/2249cf0a\(v=vs.110\).aspx)  
  
-   [방법: Windows Forms DataGridView 컨트롤의 글꼴 및 색 스타일 설정](https://msdn.microsoft.com/library/z2akwyy7\(v=vs.110\).aspx)  
  
-   [방법: 디자이너를 사용하여 Windows Forms DataGridView 컨트롤의 형식 변경](https://msdn.microsoft.com/library/053656ss\(v=vs.110\).aspx)  
  
-   [방법: 디자이너를 사용하여 Windows Forms DataGridView 컨트롤에 데이터 바인딩](https://msdn.microsoft.com/library/33w255ac\(v=vs.110\).aspx)  
  
-   [방법: 디자이너를 사용하여 Windows Forms DataGridView 컨트롤에 기본 셀 스타일 및 데이터 형식 설정](https://msdn.microsoft.com/library/95y5fz2x\(v=vs.110\).aspx)  
  
-   [방법: Windows Forms DataGridView 컨트롤의 데이터 형식 지정](https://msdn.microsoft.com/library/f9x2790s\(v=vs.110\).aspx)  
  
-   [연습: Windows Forms DataGridView 컨트롤의 데이터 유효성 검사](https://msdn.microsoft.com/library/ykdxa0bc\(v=vs.110\).aspx)  
  
-   [방법: Windows Forms DataGridView 컨트롤에서 데이터 형식 사용자 지정](https://msdn.microsoft.com/library/z1cc356h\(v=vs.110\).aspx)  
  
-   [연습: 두 개의 Windows Forms DataGridView 컨트롤을 사용하여 마스터/세부 폼 만들기](https://msdn.microsoft.com/library/y8c0cxey\(v=vs.110\).aspx)  
  
 있지만 <xref:System.Windows.Forms.DataGridView> 컨트롤이 대체 하 고 기능을 추가 합니다 <xref:System.Windows.Forms.DataGrid> 이전 버전의 <xref:System.Windows.Forms.DataGrid> 컨트롤을 선택 하면 이전 버전과 호환성 및 향후 사용을 위해 유지 됩니다. 자세한 내용은 [Windows Forms DataGridView 및 DataGrid 컨트롤의 차이점](~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)을 참조하십시오.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView> 컨트롤이 모두 상속 합니다 <xref:System.Windows.Forms.Control.ContextMenu%2A> 및 <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> 속성을 <xref:System.Windows.Forms.Control>만 지원 하지만 <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> 속성. 사용 하는 <xref:System.Windows.Forms.Control.ContextMenu%2A> 속성과 <xref:System.Windows.Forms.DataGridView> 컨트롤에 영향을 주지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에는 바인딩되지 않은 초기화 하는 방법을 보여 줍니다. <xref:System.Windows.Forms.DataGridView> 제어 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSimpleUnbound#00](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/CS/simpleunbound.cs#00)]
 [!code-vb[System.Windows.Forms.DataGridViewSimpleUnbound#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/VB/simpleunbound.vb#00)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
    <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-overview-windows-forms.md">DataGridView 컨트롤 개요(Windows Forms)</related>
    <related type="Article" href="~/docs/framework/winforms/controls/basic-formatting-and-styling-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤에서 기본 형식 및 스타일 지정</related>
    <related type="Article" href="~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤에서 데이터 표시</related>
    <related type="Article" href="~/docs/framework/winforms/controls/data-display-modes-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 데이터 디스플레이 모드</related>
    <related type="Article" href="~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md">Windows Forms DataGridView 및 DataGrid 컨트롤 간의 차이점</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.Windows.Forms.DataGridView> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRows%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumns%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumns%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>|<xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None>|  
|<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>|<xref:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None>|  
|<xref:System.Windows.Forms.DataGridView.ClipboardCopyMode%2A>|<xref:System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithAutoHeaderText>|  
|<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>|<xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing>|  
|<xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.EditMode%2A>|<xref:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2>|  
|<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.ReadOnly%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>|<xref:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing>|  
|<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>|<xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityNotifyCurrentCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void AccessibilityNotifyCurrentCellChanged (System.Drawing.Point cellAddress);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AccessibilityNotifyCurrentCellChanged(valuetype System.Drawing.Point cellAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AccessibilityNotifyCurrentCellChanged (cellAddress As Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AccessibilityNotifyCurrentCellChanged(System::Drawing::Point cellAddress);" />
      <MemberSignature Language="F#" Value="abstract member AccessibilityNotifyCurrentCellChanged : System.Drawing.Point -&gt; unit&#xA;override this.AccessibilityNotifyCurrentCellChanged : System.Drawing.Point -&gt; unit" Usage="dataGridView.AccessibilityNotifyCurrentCellChanged cellAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cellAddress" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="cellAddress">새로운 현재 셀의 행 및 열 인덱스를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
        <summary>새 셀이 현재 셀이 될 때 액세스 가능 클라이언트 애플리케이션에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 지정된 된 행 및 열 인덱스를 변환 합니다. `objectID` 및 `childID` 매개 변수 및 호출 합니다 <xref:System.Windows.Forms.Control.AccessibilityNotifyClients%28System.Windows.Forms.AccessibleEvents%2CSystem.Int32%2CSystem.Int32%29> 메서드를 사용 하 여 두 번 오버 로드를 <xref:System.Windows.Forms.AccessibleEvents.Focus> 및 <xref:System.Windows.Forms.AccessibleEvents.Selection> 값은 <xref:System.Windows.Forms.AccessibleEvents> 열거형. 합니다 `objectID` 고 `childID` 행 또는 열 머리글을 표시 하 고 1부터 시작 되어 있는 경우 계산, 표시 순서에서 표시 되는 행 및 열 번호를 매겨 결정 됩니다. 예를 들어 열 머리글이 표시 되는 `objectID` 첫 번째 표시 머리글이 아닌 행은 2입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="cellAddress" />의 <see cref="P:System.Drawing.Point.X" /> 속성 값이 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="cellAddress" />의 <see cref="P:System.Drawing.Point.Y" /> 속성 값이 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하 여 사용자 지정 하는 경우는 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤과 현재 셀의 변경 시기와 방법을 수정 합니다. 예를 들어 단일 셀에 여러 셀을 병합 하는 사용자 지정 행 형식 만들고 탐색을 적절 하 게 수정 하는 경우 변경 내용을 내게 필요한 옵션 지원 하기 위해이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.Windows.Forms.AccessibleEvents" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AdjustColumnHeaderBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustColumnHeaderBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustColumnHeaderBorderStyle(class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AdjustColumnHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, dataGridViewAdvancedBorderStylePlaceholder As DataGridViewAdvancedBorderStyle, isFirstDisplayedColumn As Boolean, isLastVisibleColumn As Boolean) As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustColumnHeaderBorderStyle(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStyleInput, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn);" />
      <MemberSignature Language="F#" Value="abstract member AdjustColumnHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle&#xA;override this.AdjustColumnHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="dataGridView.AdjustColumnHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput, dataGridViewAdvancedBorderStylePlaceholder, isFirstDisplayedColumn, isLastVisibleColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewAdvancedBorderStyleInput" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="dataGridViewAdvancedBorderStylePlaceholder" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isLastVisibleColumn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataGridViewAdvancedBorderStyleInput">수정할 열 머리글 테두리 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</param>
        <param name="dataGridViewAdvancedBorderStylePlaceholder">열 머리글 테두리 스타일에 대한 중간 변경 사항을 저장하는 데 사용되는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</param>
        <param name="isFirstDisplayedColumn">현재 칠하는 중인 <see cref="T:System.Windows.Forms.DataGridViewCell" />이 <see cref="T:System.Windows.Forms.DataGridView" />에 표시된 첫 번째 열에 있음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="isLastVisibleColumn">현재 칠하는 중인 <see cref="T:System.Windows.Forms.DataGridViewCell" />이 <see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" /> 속성이 <see langword="true" />로 설정된 <see cref="T:System.Windows.Forms.DataGridView" />의 마지막 열에 있음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>현재 칠하고 있는 <see cref="T:System.Windows.Forms.DataGridView" />의 열 머리글 셀에 대한 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />을 조정합니다.</summary>
        <returns>현재 열 머리글의 테두리 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridView> 컨트롤을 내부적으로 호출 된 <xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A> 열 머리글 셀에 대 한 테두리의 모양을 결정 하는 방법. <xref:System.Windows.Forms.DataGridView> 컨트롤의 값을 일반적으로 사용 합니다 <xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A> 속성에 대 한는 `dataGridViewAdvancedBorderStyleInput` 매개 변수입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A> 열 머리글 셀의 테두리를 사용자 지정 하는 방법입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#15)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>열 머리글 셀의 테두리의 모양을 사용자 지정 하려는 경우이 메서드를 재정의 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AdjustedTopLeftHeaderBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustedTopLeftHeaderBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustedTopLeftHeaderBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AdjustedTopLeftHeaderBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustedTopLeftHeaderBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdjustedTopLeftHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에서 왼쪽 위에 있는 셀의 테두리 스타일을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" />에서 왼쪽 위에 있는 셀의 테두리 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 왼쪽 위 셀 열 머리글 행 및 행 머리글 열에서 공유 하는 셀이 합니다. <xref:System.Windows.Forms.DataGridView> 왼쪽 위 셀 그리기 하는 동안이 속성의 값을 가져옵니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle%2A> 왼쪽 위 셀의 테두리를 사용자 지정 하는 속성입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#12)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>왼쪽 위 머리글 셀의 테두리의 모양을 사용자 지정 하려는 경우이 속성을 재정의 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AdvancedCellBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedCellBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedCellBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedCellBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdvancedCellBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdvancedCellBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdvancedCellBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에 있는 셀의 테두리 스타일을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" />에 있는 셀의 테두리 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A> 셀 테두리의 모양을 사용자 지정 하는 속성입니다. 기본 스타일을 사용 하 여 테두리의 스타일을 변경 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AdvancedColumnHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedColumnHeadersBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedColumnHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedColumnHeadersBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdvancedColumnHeadersBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdvancedColumnHeadersBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에 있는 열 머리글 셀의 테두리 스타일을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" />에 있는 <see cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" /> 개체의 테두리 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A> 열 머리글 셀의 테두리의 모양을 사용자 지정 하는 속성입니다. 기본 스타일을 사용 하 여 테두리의 스타일을 변경 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AdvancedRowHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedRowHeadersBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedRowHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedRowHeadersBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdvancedRowHeadersBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdvancedRowHeadersBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에 있는 행 머리글 셀의 테두리 스타일을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" />에 있는 <see cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" /> 개체의 테두리 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A> 속성에서 파생 된 행 머리글 셀의 테두리의 모양을 사용자 지정을 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 기본 스타일을 사용 하 여 테두리의 스타일을 변경 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToAddRows">
      <MemberSignature Language="C#" Value="public bool AllowUserToAddRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToAddRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToAddRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToAddRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToAddRows : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToAddRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행을 추가하기 위한 옵션이 사용자에게 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>행을 추가하는 옵션이 사용자에게 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView> 바인딩된 데이터에 사용자가 행을 추가할 수이 속성 및 데이터 원본의 <xref:System.ComponentModel.IBindingList.AllowNew%2A?displayProperty=nameWithType> 로 설정 된 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서이 속성을 사용 하는 <xref:System.Windows.Forms.DataGridView> 표시 데 주로 합니다. 이 예제에서는 여러 가지 방법으로 사용자 지정 된 컨트롤의 시각적 모양 및 제한적된으로 상호 작용에 대 한 구성 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToAddRowsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToAddRowsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToAddRowsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToAddRowsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToAddRowsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToAddRowsChanged : EventHandler " Usage="member this.AllowUserToAddRowsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#250](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#250)]
 [!code-vb[System.Windows.Forms.EventExamples#250](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#250)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToDeleteRows">
      <MemberSignature Language="C#" Value="public bool AllowUserToDeleteRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToDeleteRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToDeleteRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToDeleteRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToDeleteRows : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToDeleteRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 <see cref="T:System.Windows.Forms.DataGridView" />에서 행을 삭제할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자가 행을 삭제할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView> 바인딩된 데이터에 해당 사용자가 두 행을 삭제 하려면이 속성 및 <xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=nameWithType> 로 설정 된 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서이 속성을 사용 하는 <xref:System.Windows.Forms.DataGridView> 표시 데 주로 합니다. 이 예제에서는 여러 가지 방법으로 사용자 지정 된 컨트롤의 시각적 모양 및 제한적된으로 상호 작용에 대 한 구성 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToDeleteRowsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToDeleteRowsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToDeleteRowsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToDeleteRowsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToDeleteRowsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToDeleteRowsChanged : EventHandler " Usage="member this.AllowUserToDeleteRowsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#251](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#251)]
 [!code-vb[System.Windows.Forms.EventExamples#251](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#251)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToOrderColumns">
      <MemberSignature Language="C#" Value="public bool AllowUserToOrderColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToOrderColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToOrderColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToOrderColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToOrderColumns : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToOrderColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>수동으로 열의 위치를 조정할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자가 열의 순서를 변경할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 열의 위치를 변경할 경우 사용자를 새 위치로 열 머리글을 끌 수 있습니다. 고정 및 고정 되지 않은 열 양식 두 개의 별도 그룹입니다. 사용자를 그룹 내의 열 위치를 변경할 수 있지만 다른 한 그룹에서 열을 이동할 수 없습니다.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView> 컨트롤 이중 버퍼링을 지원 하지 않습니다. 경우 <xref:System.Windows.Forms.Control.DoubleBuffered%2A> 로 설정 되어 `true` 에서 파생 된 <xref:System.Windows.Forms.DataGridView> 컨트롤에서 열 다시 정렬 하는 경우 또는 행, 열 또는 헤더 크기를 조정할 때 시각적 피드백 받지 않게 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서이 속성을 사용 하는 <xref:System.Windows.Forms.DataGridView> 표시 데 주로 합니다. 이 예제에서는 여러 가지 방법으로 사용자 지정 된 컨트롤의 시각적 모양 및 제한적된으로 상호 작용에 대 한 구성 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToOrderColumnsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToOrderColumnsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToOrderColumnsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToOrderColumnsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToOrderColumnsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToOrderColumnsChanged : EventHandler " Usage="member this.AllowUserToOrderColumnsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#252](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#252)]
 [!code-vb[System.Windows.Forms.EventExamples#252](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#252)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeColumns">
      <MemberSignature Language="C#" Value="public bool AllowUserToResizeColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToResizeColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToResizeColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToResizeColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeColumns : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToResizeColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 열의 크기를 조정할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자가 열의 크기를 조정할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 사용자가 수동으로 열 너비를 변경 하지 못하도록 합니다. 이 예를 들어, 여기서 데이터를 한 번 로드 하 고 열은 해당 시점에 크기를 조정할 표시 전용 열이 있는 유용 합니다.  
  
 사용자가 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView> 컨트롤 이중 버퍼링을 지원 하지 않습니다. 경우 <xref:System.Windows.Forms.Control.DoubleBuffered%2A> 로 설정 되어 `true` 에서 파생 된 <xref:System.Windows.Forms.DataGridView> 컨트롤에서 열 다시 정렬 하는 경우 또는 행, 열 또는 헤더 크기를 조정할 때 시각적 피드백 받지 않게 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서이 속성을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView> 컨트롤 주로 표시를 위한 것입니다. 이 예제에서는 여러 가지 방법으로 사용자 지정 된 컨트롤의 시각적 모양 및 제한적된으로 상호 작용에 대 한 구성 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeColumnsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToResizeColumnsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToResizeColumnsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToResizeColumnsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToResizeColumnsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeColumnsChanged : EventHandler " Usage="member this.AllowUserToResizeColumnsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#253](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#253)]
 [!code-vb[System.Windows.Forms.EventExamples#253](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#253)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeRows">
      <MemberSignature Language="C#" Value="public bool AllowUserToResizeRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToResizeRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToResizeRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToResizeRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeRows : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToResizeRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 행의 크기를 조정할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>모든 행의 크기를 조정할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 사용자가 수동으로 행 높이 변경 하지 못하도록 합니다. 이 예를 들어, 여기서 데이터를 한 번 로드 하 고 해당 시점에 행 크기가 조정 됩니다 표시 전용 컨트롤을 사용 하 여 유용 합니다.  
  
 행 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 사용자가 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView> 컨트롤 이중 버퍼링을 지원 하지 않습니다. 경우 <xref:System.Windows.Forms.Control.DoubleBuffered%2A> 로 설정 되어 `true` 에서 파생 된 <xref:System.Windows.Forms.DataGridView> 컨트롤에서 열 다시 정렬 하는 경우 또는 행, 열 또는 헤더 크기를 조정할 때 시각적 피드백 받지 않게 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서이 속성을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView> 컨트롤 주로 표시를 위한 것입니다. 이 예제에서는 여러 가지 방법으로 사용자 지정 된 컨트롤의 시각적 모양 및 제한적된으로 상호 작용에 대 한 구성 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeRowsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToResizeRowsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToResizeRowsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToResizeRowsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToResizeRowsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeRowsChanged : EventHandler " Usage="member this.AllowUserToResizeRowsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#254](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#254)]
 [!code-vb[System.Windows.Forms.EventExamples#254](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#254)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowsDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle AlternatingRowsDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle AlternatingRowsDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternatingRowsDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ AlternatingRowsDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingRowsDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 홀수 번호 행에 적용되는 기본 셀 스타일을 가져오거나 설정합니다.</summary>
        <value>홀수 번호 행에 적용할 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 셀에 의해 지정 된 스타일을 사용 하 여 셀을 표시 하는 컨트롤 <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> 형식의 다른 속성에서 스타일을 상속 하는 속성인 <xref:System.Windows.Forms.DataGridViewCellStyle>합니다. 홀수 인덱스 번호가 있는 행의 셀 스타일을 통해 지정 합니다 <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A> 속성을 통해 지정 된 스타일을 재정의 합니다 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>, 및 <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>, 를통해지정된스타일에의해재정의됩니다<xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>고 <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType> 속성입니다.  
  
 자세한 내용은 [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
 이 속성을 가져올 때를 <xref:System.Windows.Forms.DataGridViewCellStyle> 기본값은 값이 생성 됩니다 속성이 아직 액세스 하지 않은 경우. 여러 행에 대 한이 속성을 가져올 때 성능에 주는 영향이 발생할 수 있습니다. 가능 하면 단일 사용 <xref:System.Windows.Forms.DataGridViewCellStyle> 여러 행에 대해이 속성을 설정 합니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서 원장 효과를 만들려면이 속성을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AlternatingRowsDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AlternatingRowsDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AlternatingRowsDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AlternatingRowsDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.AlternatingRowsDefaultCellStyleChanged : EventHandler " Usage="member this.AlternatingRowsDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 될 때이 이벤트가 발생의 속성을 <xref:System.Windows.Forms.DataGridViewCellStyle> 반환한를 <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A> 속성을 새 값으로 설정 됩니다 때나를 <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A> 속성이 새 <xref:System.Windows.Forms.DataGridViewCellStyle> 하나 이상의 속성 값이 다른 이전 셀 스타일 개체를 사용 하 여.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#255](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#255)]
 [!code-vb[System.Windows.Forms.EventExamples#255](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#255)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AreAllCellsSelected">
      <MemberSignature Language="C#" Value="public bool AreAllCellsSelected (bool includeInvisibleCells);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AreAllCellsSelected(bool includeInvisibleCells) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AreAllCellsSelected (includeInvisibleCells As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool AreAllCellsSelected(bool includeInvisibleCells);" />
      <MemberSignature Language="F#" Value="member this.AreAllCellsSelected : bool -&gt; bool" Usage="dataGridView.AreAllCellsSelected includeInvisibleCells" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeInvisibleCells" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeInvisibleCells"><see cref="P:System.Windows.Forms.DataGridViewBand.Visible" /> 속성 값이 <see langword="false" />인 행과 열을 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>현재 모든 <see cref="T:System.Windows.Forms.DataGridView" /> 셀이 선택되어 있는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns>모든 셀(또는 표시되는 모든 셀)이 선택되었거나 선택된 셀(또는 표시되는 셀)이 없으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> 큰 선택 항목을 사용 하 여 컬렉션을 효율적으로 수행 하지 않습니다. 결정할 여부를 모든 셀에는 <xref:System.Windows.Forms.DataGridView> 의 내용에 액세스 하기 전에 선택한를 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> 컬렉션의 반환 값을 확인 합니다 <xref:System.Windows.Forms.DataGridView.AreAllCellsSelected%2A> 메서드. 그러나이 메서드는 행의 공유가 해제 발생할 수 있습니다. 에 대 한 자세한 내용은 <xref:System.Windows.Forms.DataGridView> 성능 참조 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 관련 된 계산을 방지 하려면이 메서드를 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> 컬렉션입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Visible" />
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectedCells" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoGenerateColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateColumns : bool with get, set" Usage="System.Windows.Forms.DataGridView.AutoGenerateColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 또는 <see cref="P:System.Windows.Forms.DataGridView.DataMember" /> 속성을 설정할 때 열이 자동으로 생성되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>열이 자동으로 생성되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 열에는이 속성 설정 된 경우 자동으로 생성 됩니다 `true` 하며 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 또는 <xref:System.Windows.Forms.DataGridView.DataMember%2A> 속성은 설정 하거나 변경 합니다. 열이 자동으로 수도 있습니다 때 생성 되는 <xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A> 에서 속성이 변경 될 `false` 에 `true`입니다. 이 속성이 `true` 하며 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 변경 되어 이전 열이 일치 하지 않는 열 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 값, 데이터 일치 하지 않는 열에 삭제 됩니다. 하는 경우이 속성은 무시 합니다 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 또는 <xref:System.Windows.Forms.DataGridView.DataMember%2A> 속성이 설정 되지 않습니다.  
  
 때 <xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A> 로 설정 된 `true`, <xref:System.Windows.Forms.DataGridView> 컨트롤 데이터 소스의 개체의 각 공용 속성에 대 한 열을 생성 합니다. 바인딩된 개체를 구현 하는 경우는 <xref:System.ComponentModel.ICustomTypeDescriptor> 인터페이스를 컨트롤에서 반환 된 각 속성에 대 한 열을 생성 합니다 <xref:System.ComponentModel.ICustomTypeDescriptor.GetProperties%2A> 메서드. 각 열 머리글 열을 나타내는 속성 이름의 값이 포함 됩니다.  
  
 설정 하는 경우는 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성을 설정 <xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A> 에 `false`, 열을 수동으로 추가 해야 합니다. 설정 하 여 데이터 원본에 추가 된 각 열을 바인딩할 수 있습니다는 <xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType> 속성 바인딩된 개체에서 노출 되는 속성의 이름입니다.  
  
> [!NOTE]
>  설정 합니다 <xref:System.Windows.Forms.DataGridView.DataSource%2A> Windows Forms 디자이너에서 자동으로 설정 합니다 <xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A> 속성을 `false` 추가 하 고 데이터 소스의 각 속성에 대 한 열을 바인딩하는 코드를 생성 합니다. 디자인 타임에 생성 되는 코드를 다음 예에서 같이 코드를 수동으로 추가 하는 것과 같습니다. 런타임에 발생 하는 열의 자동 생성 동일 하지 않습니다 경우는 <xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A> 속성이 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 열을 수동으로 추가 하 고 설정 하는 경우 데이터 원본에 바인딩해야 하는 방법을 보여 줍니다 <xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A> 에 `false`입니다. 이 예에서 <xref:System.Windows.Forms.DataGridView> 컨트롤의 목록에 바인딩된 `Task` 비즈니스 개체입니다. 열 추가 되 고 바인딩되는 차례로 `Task` 속성을 통해는 <xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType> 속성입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridViewComboBoxCell 드롭다운 목록의 개체 액세스](~/docs/framework/winforms/controls/access-objects-in-a-wf-datagridviewcomboboxcell-drop-down-list.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/vb/form1.vb#100)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataMember" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.DataPropertyName" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumnsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoGenerateColumnsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoGenerateColumnsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoGenerateColumnsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoGenerateColumnsChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateColumnsChanged : EventHandler " Usage="member this.AutoGenerateColumnsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#256](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#256)]
 [!code-vb[System.Windows.Forms.EventExamples#256](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#256)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeColumn">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 열의 너비를 셀의 내용에 맞게 조정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int -&gt; unit" Usage="dataGridView.AutoResizeColumn columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">크기를 조정할 열의 인덱스입니다.</param>
        <summary>머리글 셀을 비롯한 모든 셀의 내용에 맞게, 지정된 열의 너비를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 열 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 열 너비를 메서드 호출; 당 한 번만 조정 됩니다. 나중에 열의 내용을 변경, 열은 자동으로 조정 합니다. 모든 열 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> 메서드. 내용이 변경 될 때마다 자동으로 조정 하려면 열을 설정 하려면 사용 합니다 <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> 속성이 나 열의 <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> 속성입니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 사용 하 여 새 셀 값에 맞게 충분히 큰 열 너비를 확인 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 행 조작](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 0부터 열 수-1 사이에 속하지 않습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex, System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer, autoSizeColumnMode As DataGridViewAutoSizeColumnMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::DataGridViewAutoSizeColumnMode autoSizeColumnMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.DataGridViewAutoSizeColumnMode -&gt; unit" Usage="dataGridView.AutoResizeColumn (columnIndex, autoSizeColumnMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="autoSizeColumnMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnMode" />
      </Parameters>
      <Docs>
        <param name="columnIndex">크기를 조정할 열의 인덱스입니다.</param>
        <param name="autoSizeColumnMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> 값 중 하나입니다.</param>
        <summary>지정된 크기 모드를 사용하여 지정된 열의 너비를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 열 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 열 너비를 메서드 호출; 당 한 번만 조정 됩니다. 나중에 열의 내용을 변경, 열은 자동으로 조정 합니다. 모든 열 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> 메서드. 내용이 변경 될 때마다 자동으로 조정 하려면 열을 설정 하려면 사용 합니다 <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> 속성이 나 열의 <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> 속성입니다.  
  
 이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 사용 하 여 새 셀 값에 맞게 충분히 큰 열 너비를 확인 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 행 조작](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeColumnMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" />이며 <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" />은 <see langword="false" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeColumnMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />, <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 0부터 열 수-1 사이에 속하지 않습니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeColumnMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> 값이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumn (int columnIndex, System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumn (columnIndex As Integer, autoSizeColumnMode As DataGridViewAutoSizeColumnMode, fixedHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.DataGridViewAutoSizeColumnMode * bool -&gt; unit" Usage="dataGridView.AutoResizeColumn (columnIndex, autoSizeColumnMode, fixedHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="autoSizeColumnMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnMode" />
        <Parameter Name="fixedHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">크기를 조정할 열의 인덱스입니다.</param>
        <param name="autoSizeColumnMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> 값 중 하나입니다.</param>
        <param name="fixedHeight">현재 행 높이를 기준으로 새 너비를 계산하려면 <see langword="true" />이고, 행 높이도 조정될 것이란 가정하에 너비를 계산하려면 <see langword="false" />입니다.</param>
        <summary>지정된 크기 모드를 사용하고 필요한 경우 행 높이가 조정될 것이란 가정하에 너비를 계산하여 지정된 열의 너비를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 열 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 열 너비를 메서드 호출; 당 한 번만 조정 됩니다. 나중에 열의 내용을 변경, 열은 자동으로 조정 합니다. 모든 열 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> 메서드. 내용이 변경 될 때마다 자동으로 조정 하려면 열을 설정 하려면 사용 합니다 <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> 속성이 나 열의 <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> 속성입니다.  
  
 이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 달성할 수 있도록 설계 되었습니다 <xref:System.Windows.Forms.DataGridView> 클래스입니다. 하는 경우 `fixedHeight` 됩니다 `false`, 열 너비를 호출 한다는 예상에 따라 계산 됩니다 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> 또는 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> 메서드 다음.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeColumnMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" />이며 <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" />은 <see langword="false" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeColumnMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />, <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 0부터 열 수-1 사이에 속하지 않습니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeColumnMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" /> 값이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeColumnHeadersHeight">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>머리글 내용에 맞게 열 머리글의 높이를 조정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="public void AutoResizeColumnHeadersHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumnHeadersHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumnHeadersHeight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumnHeadersHeight();" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : unit -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>가장 큰 열 머리글의 내용에 맞게 열 머리글의 높이를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 열 머리글의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 메서드 호출이 고, 각 열 머리글의 높이 한 번만 조정할 열 헤더 변경할 열 헤더는 내용의 자동으로 조정 합니다. 내용이 변경 되었을 때 자동으로 조정 하려면 열 머리글을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> 속성입니다.  
  
 열 머리글은 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 열 머리글의 크기를 조정 하는 방법에 설명 하 고 단추 결과로 행을 클릭 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="public void AutoResizeColumnHeadersHeight (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumnHeadersHeight(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumnHeadersHeight (columnIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumnHeadersHeight(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : int -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">변경된 내용이 있는 머리글이 포함된 열의 인덱스입니다.</param>
        <summary>지정된 열 머리글의 내용에 대한 변경 사항에 따라 열 머리글의 높이를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 바인딩된 데이터 원본에 지정된 된 열 머리글의 내용을 사용자 편집 내용 또는 변경의 결과로 변경 된 열 머리글의 크기 조정 시기를 제어 하려는 경우에 유용 합니다. 열 머리글의 높이 조정 됩니다 한 번만 메서드 호출 별로 콘텐츠 변경 내용을 적용 하려면 열 헤더 변경할 열 헤더는 내용의 자동으로 조정 합니다. 내용이 변경 되었을 때 자동으로 조정 하려면 열 머리글을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> 속성입니다.  
  
 열 머리글은 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 0부터 열 수-1 사이에 속하지 않습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumnHeadersHeight (bool fixedRowHeadersWidth, bool fixedColumnsWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumnHeadersHeight(bool fixedRowHeadersWidth, bool fixedColumnsWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumnHeadersHeight (fixedRowHeadersWidth As Boolean, fixedColumnsWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumnHeadersHeight(bool fixedRowHeadersWidth, bool fixedColumnsWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : bool * bool -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight (fixedRowHeadersWidth, fixedColumnsWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedRowHeadersWidth" Type="System.Boolean" />
        <Parameter Name="fixedColumnsWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fixedRowHeadersWidth">행 머리글의 현재 너비를 기준으로 새 높이를 계산하려면 <see langword="true" />이고, 행 머리글 너비도 조정될 것이란 가정하에 높이를 계산하려면 <see langword="false" />입니다.</param>
        <param name="fixedColumnsWidth">현재 열 너비를 기준으로 새 높이를 계산하려면 <see langword="true" />이고, 열 너비도 조정될 것이란 가정하에 높이를 계산하려면 <see langword="false" />입니다.</param>
        <summary>내용에 맞게(필요한 경우 열 및/또는 행 머리글 너비가 조정될 것이란 가정하에 높이를 계산하여) 열 머리글의 높이를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 열 머리글의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 메서드 호출이 고, 각 열 머리글의 높이 한 번만 조정할 열 헤더 변경할 열 헤더는 내용의 자동으로 조정 합니다. 내용이 변경 되었을 때 자동으로 조정 하려면 열 머리글을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> 속성입니다.  
  
 열 머리글은 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 달성할 수 있도록 설계 되었습니다 <xref:System.Windows.Forms.DataGridView> 클래스입니다. 경우는 `fixedColumnsWidth` 또는 `fixedRowHeadersWidth` 매개 변수는 `false`, 열 머리글의 높이 같은 메서드를 호출 한다는 예상에 따라 계산 됩니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> 고 <xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A> 다음입니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumnHeadersHeight (int columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumnHeadersHeight(int32 columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumnHeadersHeight (columnIndex As Integer, fixedRowHeadersWidth As Boolean, fixedColumnWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumnHeadersHeight(int columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : int * bool * bool -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight (columnIndex, fixedRowHeadersWidth, fixedColumnWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="fixedRowHeadersWidth" Type="System.Boolean" />
        <Parameter Name="fixedColumnWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">새 높이를 결정하는 데 사용될 내용이 들어 있는 열 머리글의 인덱스입니다.</param>
        <param name="fixedRowHeadersWidth">행 머리글의 현재 너비를 기준으로 새 높이를 계산하려면 <see langword="true" />이고, 행 머리글 너비도 조정될 것이란 가정하에 높이를 계산하려면 <see langword="false" />입니다.</param>
        <param name="fixedColumnWidth">지정된 열의 현재 너비를 기준으로 새 높이를 계산하려면 <see langword="true" />이고, 열 너비도 조정될 것이란 가정하에 높이를 계산하려면 <see langword="false" />입니다.</param>
        <summary>지정된 열의 머리글 내용에 대한 변경 사항을 기준으로(필요한 경우 열 및/또는 행 머리글 너비가 조정될 것이란 가정하에 높이를 계산하여) 열 머리글의 높이를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 바인딩된 데이터 원본에 지정된 된 열 머리글의 내용을 사용자 편집 내용 또는 변경의 결과로 변경 된 열 머리글의 크기 조정 시기를 제어 하려는 경우에 유용 합니다. 열 머리글의 높이 조정 됩니다 한 번만 메서드 호출 별로 콘텐츠 변경 내용을 적용 하려면 열 헤더 변경할 열 헤더는 내용의 자동으로 조정 합니다. 내용이 변경 되었을 때 자동으로 조정 하려면 열 머리글을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> 속성입니다.  
  
 열 머리글은 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 달성할 수 있도록 설계 되었습니다 <xref:System.Windows.Forms.DataGridView> 클래스입니다. 경우는 `fixedColumnWidth` 또는 `fixedRowHeadersWidth` 매개 변수는 `false`, 열 머리글의 높이 같은 메서드를 호출 한다는 예상에 따라 계산 됩니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> 고 <xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A> 다음입니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 0부터 열 수-1 사이에 속하지 않습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeColumns">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>셀의 내용에 맞게 모든 열의 너비를 조정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumns" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns();" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : unit -&gt; unit" Usage="dataGridView.AutoResizeColumns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>머리글 셀을 비롯한 모든 셀의 내용에 맞게 모든 열의 너비를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 열 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 열 너비를 조정 하는 한 번만 당 메서드 호출이 고, 나중에 열의 내용을 변경, 열은 자동으로 조정 합니다. 특정 열 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> 메서드. 내용이 변경 될 때마다 자동으로 조정 하려면 열을 설정 하려면 사용 합니다 <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> 속성이 나 열의 <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> 속성입니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 열 및 열 머리글의 내용에 맞게 모든 열의 크기를 조정 합니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 프로그래밍 방식으로 Windows의 내용에 맞게 셀 크기 조정 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#3)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns (System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns (autoSizeColumnsMode As DataGridViewAutoSizeColumnsMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns(System::Windows::Forms::DataGridViewAutoSizeColumnsMode autoSizeColumnsMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.DataGridViewAutoSizeColumnsMode -&gt; unit" Usage="dataGridView.AutoResizeColumns autoSizeColumnsMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeColumnsMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />
      </Parameters>
      <Docs>
        <param name="autoSizeColumnsMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 값 중 하나입니다.</param>
        <summary>지정된 크기 모드를 사용하여 모든 열의 너비를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 열 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 열 너비를 조정 하는 한 번만 당 메서드 호출이 고, 나중에 열의 내용을 변경, 열은 자동으로 조정 합니다. 특정 열 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> 메서드. 내용이 변경 될 때마다 자동으로 조정 하려면 열을 설정 하려면 사용 합니다 <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> 속성이 나 열의 <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> 속성입니다.  
  
 이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 열 및 열 머리글의 내용에 맞게 모든 열의 크기를 조정 합니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 프로그래밍 방식으로 Windows의 내용에 맞게 셀 크기 조정 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#3)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeColumnsMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" />이며 <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" />은 <see langword="false" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeColumnsMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" />입니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeColumnsMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 값이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumns (System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumns (autoSizeColumnsMode As DataGridViewAutoSizeColumnsMode, fixedHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumns(System::Windows::Forms::DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.DataGridViewAutoSizeColumnsMode * bool -&gt; unit" Usage="dataGridView.AutoResizeColumns (autoSizeColumnsMode, fixedHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeColumnsMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />
        <Parameter Name="fixedHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoSizeColumnsMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 값 중 하나입니다.</param>
        <param name="fixedHeight">현재 행 높이를 기준으로 새 너비를 계산하려면 <see langword="true" />이고, 행 높이도 조정될 것이란 가정하에 너비를 계산하려면 <see langword="false" />입니다.</param>
        <summary>지정된 크기 모드를 사용하고 필요한 경우 행 높이가 조정될 것이란 가정하에 너비를 계산하여 모든 열의 너비를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 열 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 열 너비를 조정 하는 한 번만 당 메서드 호출이 고, 나중에 열의 내용을 변경, 열은 자동으로 조정 합니다. 특정 열 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> 메서드. 내용이 변경 될 때마다 자동으로 조정 하려면 열을 설정 하려면 사용 합니다 <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> 속성이 나 열의 <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> 속성입니다.  
  
 이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 달성할 수 있도록 설계 되었습니다 <xref:System.Windows.Forms.DataGridView> 클래스입니다. 경우 `fixedHeight` 됩니다 `false`를 호출 한다는 것 이란 가정 하 고, 열 너비에 계산 됩니다 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> 또는 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> 메서드 다음입니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeColumnsMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" />이며 <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" />은 <see langword="false" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeColumnsMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" />입니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeColumnsMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 값이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeRow">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 행의 높이를 셀의 내용에 맞게 조정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeRow">
      <MemberSignature Language="C#" Value="public void AutoResizeRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRow : int -&gt; unit" Usage="dataGridView.AutoResizeRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">크기를 조정할 행의 인덱스입니다.</param>
        <summary>머리글 셀을 비롯한 모든 셀의 내용에 맞게, 지정된 행의 높이를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 행의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 행 높이가 메서드 호출이 고, 당 한 번만 조정 나중에 행의 내용을 변경, 행은 자동으로 조정 합니다. 모든 행의 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> 메서드. 내용이 변경 될 때마다 자동으로 조정 하는 행을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> 속성입니다.  
  
 행 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서 세 번째 행 크기를 조정 된 <xref:System.Windows.Forms.DataGridView> 열 내용에 맞게 합니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 프로그래밍 방식으로 Windows의 내용에 맞게 셀 크기 조정 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#4)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#4)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRow">
      <MemberSignature Language="C#" Value="public void AutoResizeRow (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRow(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRow (rowIndex As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRow(int rowIndex, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRow : int * System.Windows.Forms.DataGridViewAutoSizeRowMode -&gt; unit" Usage="dataGridView.AutoResizeRow (rowIndex, autoSizeRowMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
      </Parameters>
      <Docs>
        <param name="rowIndex">크기를 조정할 행의 인덱스입니다.</param>
        <param name="autoSizeRowMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 값 중 하나입니다.</param>
        <summary>지정된 크기 모드를 사용하여 지정된 행의 높이를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 행의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 행 높이가 메서드 호출이 고, 당 한 번만 조정 나중에 행의 내용을 변경, 행은 자동으로 조정 합니다. 모든 행의 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> 메서드. 내용이 변경 될 때마다 자동으로 조정 하는 행을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> 속성입니다.  
  
 행 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 높이 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서 세 번째 행 크기를 조정 된 <xref:System.Windows.Forms.DataGridView> 열 내용에 맞게 합니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 프로그래밍 방식으로 Windows의 내용에 맞게 셀 크기 조정 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#4)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#4)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" />이며 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" />은 <see langword="false" />입니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 값이 아닙니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRow">
      <MemberSignature Language="C#" Value="protected void AutoResizeRow (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRow(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRow (rowIndex As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode, fixedWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRow(int rowIndex, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRow : int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; unit" Usage="dataGridView.AutoResizeRow (rowIndex, autoSizeRowMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">크기를 조정할 행의 인덱스입니다.</param>
        <param name="autoSizeRowMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 값 중 하나입니다.</param>
        <param name="fixedWidth">열의 현재 너비를 기준으로 새 높이를 계산하려면 <see langword="true" />이고, 열 너비도 조정될 것이란 가정하에 높이를 계산하려면 <see langword="false" />입니다.</param>
        <summary>지정된 크기 모드를 사용하고 필요한 경우 열 너비가 조정될 것이란 가정하에 높이를 계산하여 지정된 행의 높이를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 행의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 행 높이가 메서드 호출이 고, 당 한 번만 조정 나중에 행의 내용을 변경, 행은 자동으로 조정 합니다. 모든 행의 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> 메서드. 내용이 변경 될 때마다 자동으로 조정 하는 행을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> 속성입니다.  
  
 행 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 높이 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 달성할 수 있도록 설계 되었습니다 <xref:System.Windows.Forms.DataGridView> 클래스입니다. 경우 `fixedWidth` 됩니다 `false`, 행 높이 호출 한다는 예상에 따라 계산 됩니다 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> 또는 <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> 메서드 다음입니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" />이며 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" />은 <see langword="false" />입니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 값이 아닙니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeRowHeadersWidth">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>머리글 내용에 맞게 행 머리글의 너비를 조정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="public void AutoResizeRowHeadersWidth (System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRowHeadersWidth(valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRowHeadersWidth (rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRowHeadersWidth(System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth rowHeadersWidthSizeMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
      </Parameters>
      <Docs>
        <param name="rowHeadersWidthSizeMode"><see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 값 중 하나입니다.</param>
        <summary>지정된 크기 모드를 사용하여 행 머리글의 너비를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 행 머리글의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 행 머리글의 너비, 메서드 호출 마다 한 번만 조정 됩니다. 헤더 나중에 변경, 행 헤더는 행의 내용을 자동으로 조정 합니다. 내용이 변경 되었을 때 자동으로 조정 행 헤더를 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> 속성입니다.  
  
 이 메서드를 사용 하면 표시 된 행만의 등의 헤더의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="rowHeadersWidthSizeMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />입니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="rowHeadersWidthSizeMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 값이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="public void AutoResizeRowHeadersWidth (int rowIndex, System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRowHeadersWidth(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRowHeadersWidth (rowIndex As Integer, rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRowHeadersWidth(int rowIndex, System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : int * System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth (rowIndex, rowHeadersWidthSizeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
      </Parameters>
      <Docs>
        <param name="rowIndex">변경된 내용이 있는 행 머리글의 인덱스입니다.</param>
        <param name="rowHeadersWidthSizeMode"><see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 값 중 하나입니다.</param>
        <summary>지정된 행 머리글의 내용에 대한 변경 사항을 기준으로 지정된 크기 모드를 사용하여 행 머리글의 너비를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 바인딩된 데이터 원본에 지정된 된 행 머리글의 내용을 사용자 편집 내용 또는 변경의 결과로 변경 된 행 머리글의 크기 조정 시기를 제어 하려는 경우에 유용 합니다. 행 머리글의 너비는 조정 한 번만 메서드 호출당 내용 변경이 필요한 경우; 헤더 나중에 변경, 행 헤더는 행의 내용을 자동으로 조정 합니다. 내용이 변경 되었을 때 자동으로 조정 행 헤더를 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> 속성입니다.  
  
 이 메서드를 사용 하면 표시 된 행만의 등의 헤더의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 첫 번째 행 머리글의 내용에 대 한 변경 내용을 기반으로 행 머리글 너비의 크기를 조정 하는 방법을 보여 줍니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 프로그래밍 방식으로 Windows의 내용에 맞게 셀 크기 조정 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#5)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="rowHeadersWidthSizeMode" />의 값이 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />입니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="rowHeadersWidthSizeMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 값이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="protected void AutoResizeRowHeadersWidth (System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRowHeadersWidth(valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRowHeadersWidth (rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode, fixedColumnHeadersHeight As Boolean, fixedRowsHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRowHeadersWidth(System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode * bool * bool -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth (rowHeadersWidthSizeMode, fixedColumnHeadersHeight, fixedRowsHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
        <Parameter Name="fixedColumnHeadersHeight" Type="System.Boolean" />
        <Parameter Name="fixedRowsHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowHeadersWidthSizeMode"><see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 값 중 하나입니다.</param>
        <param name="fixedColumnHeadersHeight">열 머리글의 현재 높이를 기준으로 새 너비를 계산하려면 <see langword="true" />이고, 열 머리글의 높이도 조정될 것이란 가정하에 너비를 계산하려면 <see langword="false" />입니다.</param>
        <param name="fixedRowsHeight">현재 행 높이를 기준으로 새 너비를 계산하려면 <see langword="true" />이고, 행 높이도 조정될 것이란 가정하에 너비를 계산하려면 <see langword="false" />입니다.</param>
        <summary>지정된 크기 모드를 사용하여(필요한 경우 행 및/또는 열 머리글 너비가 조정될 것이란 가정하에 너비를 계산하여) 행 머리글의 너비를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 행 머리글의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 행 머리글의 너비, 메서드 호출 마다 한 번만 조정 됩니다. 헤더 나중에 변경, 행 헤더는 행의 내용을 자동으로 조정 합니다. 내용이 변경 되었을 때 자동으로 조정 행 헤더를 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> 속성입니다.  
  
 이 메서드를 사용 하면 표시 된 행만의 등의 헤더의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 달성할 수 있도록 설계 되었습니다 <xref:System.Windows.Forms.DataGridView> 클래스입니다. 경우는 `fixedColumnHeadersHeight` 또는 `fixedRowsHeight` 매개 변수는 `false`, 행 머리글의 너비와 같은 메서드를 호출 한다는 예상에 따라 계산 됩니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> 고 <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> 다음입니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="rowHeadersWidthSizeMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />입니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="rowHeadersWidthSizeMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 값이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="protected void AutoResizeRowHeadersWidth (int rowIndex, System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRowHeadersWidth(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRowHeadersWidth (rowIndex As Integer, rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode, fixedColumnHeadersHeight As Boolean, fixedRowHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRowHeadersWidth(int rowIndex, System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : int * System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode * bool * bool -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth (rowIndex, rowHeadersWidthSizeMode, fixedColumnHeadersHeight, fixedRowHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
        <Parameter Name="fixedColumnHeadersHeight" Type="System.Boolean" />
        <Parameter Name="fixedRowHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">변경된 내용이 있는 머리글이 포함된 행의 인덱스입니다.</param>
        <param name="rowHeadersWidthSizeMode"><see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 값 중 하나입니다.</param>
        <param name="fixedColumnHeadersHeight">열 머리글의 현재 높이를 기준으로 새 너비를 계산하려면 <see langword="true" />이고, 열 머리글의 높이도 조정될 것이란 가정하에 너비를 계산하려면 <see langword="false" />입니다.</param>
        <param name="fixedRowHeight">지정된 행의 현재 높이를 기준으로 새 너비를 계산하려면 <see langword="true" />이고, 행 높이도 조정될 것이란 가정하에 너비를 계산하려면 <see langword="false" />입니다.</param>
        <summary>지정된 행의 머리글 내용에 대한 변경 사항을 기준으로, 지정된 크기 모드를 사용하여(필요한 경우 행 및/또는 열 머리글 너비가 조정될 것이란 가정하에 너비를 계산하여) 행 머리글의 너비를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 바인딩된 데이터 원본에 지정된 된 행 머리글의 내용을 사용자 편집 내용 또는 변경의 결과로 변경 된 행 머리글의 크기 조정 시기를 제어 하려는 경우에 유용 합니다. 행 머리글의 너비는 조정 한 번만 메서드 호출당 내용 변경이 필요한 경우; 헤더 나중에 변경, 행 헤더는 행의 내용을 자동으로 조정 합니다. 내용이 변경 되었을 때 자동으로 조정 행 헤더를 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> 속성입니다.  
  
 이 메서드를 사용 하면 표시 된 행만의 등의 헤더의 제한 된 집합에서 값을 기반으로 새 너비를 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 달성할 수 있도록 설계 되었습니다 <xref:System.Windows.Forms.DataGridView> 클래스입니다. 경우는 `fixedColumnHeadersHeight` 또는 `fixedRowHeight` 매개 변수는 `false`, 행 머리글의 너비와 같은 메서드를 호출 한다는 예상에 따라 계산 됩니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> 고 <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> 다음입니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="rowHeadersWidthSizeMode" />는 값이 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />입니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="rowHeadersWidthSizeMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 값이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeRows">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>해당 내용에 맞추기 위해 일부 또는 모든 행의 높이를 조정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="public void AutoResizeRows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRows();" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : unit -&gt; unit" Usage="dataGridView.AutoResizeRows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>머리글 셀을 비롯한 모든 셀의 내용에 맞게 모든 행의 높이를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 행의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 행 높이 조정 하는 한 번만 당 메서드 호출이 고, 나중에 행의 내용을 변경, 행은 자동으로 조정 합니다. 특정 행의 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> 메서드. 행의 하위 집합의 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29> 오버 로드 합니다. 내용이 변경 될 때마다 자동으로 조정 하 여 행을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> 속성입니다.  
  
 행 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 비 머리글 셀 내용을 기반으로 하는 모든 행의 크기를 조정 하는 방법에 설명 합니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 프로그래밍 방식으로 Windows의 내용에 맞게 셀 크기 조정 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#7)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="public void AutoResizeRows (System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRows(valuetype System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRows (autoSizeRowsMode As DataGridViewAutoSizeRowsMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRows(System::Windows::Forms::DataGridViewAutoSizeRowsMode autoSizeRowsMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : System.Windows.Forms.DataGridViewAutoSizeRowsMode -&gt; unit" Usage="dataGridView.AutoResizeRows autoSizeRowsMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeRowsMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowsMode" />
      </Parameters>
      <Docs>
        <param name="autoSizeRowsMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 값 중 하나입니다.</param>
        <summary>지정된 크기 모드 값을 사용하여 행의 높이를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 행의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 행 높이 조정 하는 한 번만 당 메서드 호출이 고, 나중에 행의 내용을 변경, 행은 자동으로 조정 합니다. 특정 행의 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> 메서드. 행의 하위 집합의 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29> 오버 로드 합니다. 내용이 변경 될 때마다 자동으로 조정 하 여 행을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> 속성입니다.  
  
 행 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 높이 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 비 머리글 셀 내용을 기반으로 하는 모든 행의 크기를 조정 하는 방법에 설명 합니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 프로그래밍 방식으로 Windows의 내용에 맞게 셀 크기 조정 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#7)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowsMode" />가 값 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />를 가지며 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" />이 <see langword="false" />입니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowsMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 값이 아닙니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeRowsMode" />가 값 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />을 갖습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="protected void AutoResizeRows (System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRows(valuetype System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRows (autoSizeRowsMode As DataGridViewAutoSizeRowsMode, fixedWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRows(System::Windows::Forms::DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : System.Windows.Forms.DataGridViewAutoSizeRowsMode * bool -&gt; unit" Usage="dataGridView.AutoResizeRows (autoSizeRowsMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeRowsMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowsMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoSizeRowsMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 값 중 하나입니다.</param>
        <param name="fixedWidth">현재 열 너비를 기준으로 새 높이를 계산하려면 <see langword="true" />이고, 열 너비도 조정될 것이란 가정하에 높이를 계산하려면 <see langword="false" />입니다.</param>
        <summary>지정된 크기 모드를 사용하고 필요한 경우 열 너비가 조정될 것이란 가정하에 높이를 계산하여 모든 행의 높이를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 행의 크기를 조정 하는 시기를 제어 하려는 경우에 유용 합니다. 행 높이 조정 하는 한 번만 당 메서드 호출이 고, 나중에 행의 내용을 변경, 행은 자동으로 조정 합니다. 특정 행의 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> 메서드. 행의 하위 집합의 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29> 오버 로드 합니다. 내용이 변경 될 때마다 자동으로 조정 하 여 행을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> 속성입니다.  
  
 행 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 높이 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 달성할 수 있도록 설계 되었습니다 <xref:System.Windows.Forms.DataGridView> 클래스입니다. 경우는 `fixedWidth` 매개 변수가 `false`를 호출 한다는 것 이란 가정 하 고, 행 높이도 계산 됩니다 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> 또는 <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> 메서드 다음.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowsMode" />가 값 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />를 가지며 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" />이 <see langword="false" />입니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowsMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 값이 아닙니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeRowsMode" />가 값 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />을 갖습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="protected void AutoResizeRows (int rowIndexStart, int rowsCount, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRows(int32 rowIndexStart, int32 rowsCount, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRows (rowIndexStart As Integer, rowsCount As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode, fixedWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRows(int rowIndexStart, int rowsCount, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : int * int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; unit" Usage="dataGridView.AutoResizeRows (rowIndexStart, rowsCount, autoSizeRowMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndexStart" Type="System.Int32" />
        <Parameter Name="rowsCount" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndexStart">크기를 조정할 첫 번째 행의 인덱스입니다.</param>
        <param name="rowsCount">크기를 조정할 행 수입니다.</param>
        <param name="autoSizeRowMode"><see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 값 중 하나입니다.</param>
        <param name="fixedWidth">현재 열 너비를 기준으로 새 높이를 계산하려면 <see langword="true" />이고, 열 너비도 조정될 것이란 가정하에 높이를 계산하려면 <see langword="false" />입니다.</param>
        <summary>지정된 크기 모드를 사용하고 필요한 경우 열 너비가 조정될 것이란 가정하에 높이를 계산하여 지정된 행의 높이를 조정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 행 크기 조정 하면서 업데이트 된 바인딩된 레코드 범위 내에서 같은 행의 특정 하위 집합만 크기를 조정 하려는 경우를 제어 하려는 경우에 유용 합니다. 지정 된 행에 대 한 행 높이 조정 하는 한 번만 당 메서드 호출이 고, 나중에 행의 내용을 변경, 행은 자동으로 조정 합니다. 특정 행의 크기를 조정 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> 메서드. 모든 행의 크기를 조정 하려면 다른 오버 로드를 사용 하 여는 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> 메서드. 내용이 변경 될 때마다 자동으로 조정 하 여 행을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> 속성입니다.  
  
 행 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 이 오버 로드를 사용 하면 표시 된 행에 있는 셀의 제한 된 집합에서 값을 기반으로 새 높이 계산 하는 크기 조정 모드를 지정할 수 있습니다. 이 컨트롤을 많은 수의 행을 포함 하는 경우 성능이 향상 됩니다.  
  
 이 오버 로드 보호 되 고 파생 된 이상적인 셀 높이 너비 비율을 달성할 수 있도록 설계 되었습니다 <xref:System.Windows.Forms.DataGridView> 클래스입니다. 경우는 `fixedWidth` 매개 변수가 `false`를 호출 한다는 것 이란 가정 하 고, 행 높이도 계산 됩니다 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> 또는 <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> 메서드 다음.  
  
 프로그래밍 방식으로 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowsMode" />가 값 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />를 가지며 <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" />이 <see langword="false" />입니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowsMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 값이 아닙니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeRowsMode" />가 값 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />을 갖습니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndexStart" />가 0보다 작은 경우  
  
또는 
 <paramref name="rowsCount" />가 0보다 작은 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.DataGridView.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성은 이 클래스와 관련이 없습니다.</summary>
        <value>사용하도록 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="AutoSizeColumnModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler AutoSizeColumnModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler AutoSizeColumnModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeColumnModeChanged As DataGridViewAutoSizeColumnModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeColumnModeEventHandler ^ AutoSizeColumnModeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler " Usage="member this.AutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 열 조작](~/docs/framework/winforms/controls/how-to-manipulate-columns-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#180](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#180)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#180](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#180)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#180](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#180)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeColumnsMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeColumnsMode As DataGridViewAutoSizeColumnsMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode { System::Windows::Forms::DataGridViewAutoSizeColumnsMode get(); void set(System::Windows::Forms::DataGridViewAutoSizeColumnsMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeColumnsMode : System.Windows.Forms.DataGridViewAutoSizeColumnsMode with get, set" Usage="System.Windows.Forms.DataGridView.AutoSizeColumnsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeColumnsMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 너비의 결정 방식을 지정하는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 값입니다. 기본값은 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 컨트롤을 입력 하거나 셀 내용에 맞도록 열 너비가 자동으로 조정 됩니다 있도록 컨트롤을 구성할 수 있습니다. 컨트롤의 너비 변경 될 때마다 크기 조정 채우기 모드에 발생 합니다. 콘텐츠 기반 크기 조정 모드에서는 크기 조정 셀 내용이 변경 될 때마다 또는 경우에 발생할 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 행 높이가 변경 될 때마다 사용 됩니다. 일부 콘텐츠 기반 크기 조정 모드 성능을 높이기 위해 크기 조정 하면 현재 표시 된 행을 제한할 수 있습니다.  
  
 개별 열에 대 한 크기 조정 모드를 변경 하려면 설정 해당 <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> 속성입니다. 이 속성의 기본값은 <xref:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet>, 해당 동작을 상속 하는 열을 나타내는 고 <xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A> 컨트롤에서 속성 값입니다.  
  
 채우기 모드에서 열 분할 하 여 지정 된 비율로에서 사용할 수 있는 컨트롤 너비를 해당 <xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A> 속성 값입니다. 채우기 모드에 대 한 사용 가능한 너비는 컨트롤의 클라이언트 영역 너비에서 다른 모든 열의 너비를 뺀 값으로 결정 됩니다. 이 너비는 결합 된 보다 작은 경우 <xref:System.Windows.Forms.DataGridViewColumn.MinimumWidth%2A> 모든 채우기 모드 열 값, 가로 스크롤 막대가 표시 됩니다, 모든 채우기 모드 열의 최소 너비를 사용 하 여 표시 됩니다 및 사용자 열 크기 조정 사용 하지 않도록 설정 합니다. 열 채우기 모드에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 열 채우기 모드](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)합니다.  
  
 열만을 <xref:System.Windows.Forms.DataGridViewColumn.Visible%2A> 속성 값의 `true` 자동으로 크기가 조정 됩니다 열의 표시 유형을 변경 해도 크기 조정이 발생 하지 않습니다. 또한 자동으로 크기를 조정 하려면 열을 설정 하는 경우 사용자는 마우스를 사용 하 여 열 너비를 조정할 수 없습니다.  
  
 열 너비를 프로그래밍 방식으로 조정 하려면 사용 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> 또는 <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> 메서드 또는 열 집합 <xref:System.Windows.Forms.DataGridViewColumn.Width%2A> 속성입니다.  
  
 콘텐츠 기반 자동 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 있는 마스터-세부 시나리오에서이 속성을 사용 하는 방법을 보여 줍니다 <xref:System.Windows.Forms.DataGridView> 컨트롤이 부모/자식 관계에서 두 테이블에서 데이터를 표시 합니다. 이 예제에서 마스터 컨트롤에 대 한 열 크기 조정 모드는 <xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None>, 하 고 열 너비 로드 된 값에 맞게 프로그래밍 방식으로 초기화 됩니다. 세부 컨트롤 (예를 들어 사용자가 변경할 때 부모 테이블의 현재 행) 값이 변경 될 때마다 열이 자동으로 조정 되도록 열 자동 크기 조정 모드로 설정 됩니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: 두 개의 Windows Forms DataGridView 컨트롤을 사용 하 여 마스터/세부 폼 만들기](~/docs/framework/winforms/controls/create-a-master-detail-form-using-two-datagridviews.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMasterDetails#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMasterDetails/CS/masterdetails.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMasterDetails#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMasterDetails/VB/masterdetails.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">이 속성을 설정할 때 지정된 값이 유효한 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" /> 값이 아닙니다.</exception>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 지정된 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" />이고, 열 머리글이 숨겨져 있고, 표시된 하나 이상의 열이 <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /> 속성 값 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />을 갖습니다.  
  
또는 
이 속성을 설정할 때 지정된 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" />이고 <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" /> 속성 값 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />을 갖는 표시된 하나 이상의 열이 고정되어 있습니다.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.FillWeight" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeColumnsModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler AutoSizeColumnsModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler AutoSizeColumnsModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeColumnsModeChanged As DataGridViewAutoSizeColumnsModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeColumnsModeEventHandler ^ AutoSizeColumnsModeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler " Usage="member this.AutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#257](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#257)]
 [!code-vb[System.Windows.Forms.EventExamples#257](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#257)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeRowsMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAutoSizeRowsMode AutoSizeRowsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewAutoSizeRowsMode AutoSizeRowsMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeRowsMode As DataGridViewAutoSizeRowsMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAutoSizeRowsMode AutoSizeRowsMode { System::Windows::Forms::DataGridViewAutoSizeRowsMode get(); void set(System::Windows::Forms::DataGridViewAutoSizeRowsMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeRowsMode : System.Windows.Forms.DataGridViewAutoSizeRowsMode with get, set" Usage="System.Windows.Forms.DataGridView.AutoSizeRowsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeRowsMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행 높이의 결정 방법을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>크기 조정 모드를 나타내는 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 값입니다. 기본값은 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 내용이 변경 될 때마다 해당 내용에 맞게 행 높이가 자동으로 조정 됩니다 있도록 컨트롤을 구성할 수 있습니다. 경우 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 가 사용 하도록 설정, 행 높이도 조정 됩니다 열 너비 변경 될 때마다 합니다. 일부 크기 조정 모드 성능을 높이기 위해 크기 조정 하면 현재 표시 된 행을 제한할 수 있습니다.  
  
 행만 <xref:System.Windows.Forms.DataGridViewRow.Visible%2A> 속성 값 `true` 자동으로 크기가 조정 되는 행의 표시 유형을 변경 해도 크기 조정이 발생 하지 않습니다. 또한 행을 자동으로 조정 되도록 설정 하면 사용자는 마우스를 사용 하 여 행 높이 조정할 수 없습니다.  
  
 <xref:System.Windows.Forms.DataGridViewRow.Height%2A> 레이아웃 사용 되는 글꼴 크기를 고려 하는 동안 자동으로 크기가 지정 된 행의 값이 다시 계산 됩니다. 올바른 가져오려는 <xref:System.Windows.Forms.DataGridViewRow.Height%2A>, 폼의 값을 검색 해야 <xref:System.Windows.Forms.Control.Layout> 폼의 생성자에서 이벤트를 대신 합니다.  
  
 행 높이 프로그래밍 방식으로 조정 하려면 사용 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> 또는 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> 메서드 또는 행 집합 <xref:System.Windows.Forms.DataGridViewRow.Height%2A> 속성입니다.  
  
 행 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 콘텐츠 기반 자동 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 행의 모든 열 및 행 머리글의 내용에 따라 자동으로 크기 조정 설정 하는 방법을 보여 줍니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 자동으로 셀 크기 조정의 Windows에서 콘텐츠가 변경 되 면 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/automatically-resize-cells-when-content-changes-in-the-datagrid.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.AutoSizing#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CPP/autosizing.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataGridView.AutoSizing#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CS/autosizing.cs#9)]
 [!code-vb[System.Windows.Forms.DataGridView.AutoSizing#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/VB/autosizing.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">이 속성을 설정할 때 지정된 값이 유효한 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 값이 아닙니다.</exception>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 지정된 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />이고 행 머리글이 숨겨져 있습니다.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1d68934d-a04c-4b12-9e66-c856c6828131">방법: Windows Forms DataGridView 컨트롤에서 내용이 변경되는 경우 자동으로 셀 크기 조정</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeRowsModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler AutoSizeRowsModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeModeEventHandler AutoSizeRowsModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeRowsModeChanged As DataGridViewAutoSizeModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeModeEventHandler ^ AutoSizeRowsModeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " Usage="member this.AutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: 자동으로 셀 크기 조정의 Windows에서 콘텐츠가 변경 되 면 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/automatically-resize-cells-when-content-changes-in-the-datagrid.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.AutoSizing#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CPP/autosizing.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView.AutoSizing#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CS/autosizing.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.AutoSizing#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/VB/autosizing.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 배경색을 가져오거나 설정합니다.</summary>
        <value>컨트롤의 배경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다. 기본값은 <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> 속성 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은이 컨트롤에 관련이 없습니다. 부분 배경색을 설정 하는 <xref:System.Windows.Forms.DataGridView> 셀에서 차지 하지 않는 컨트롤을 사용 하 여는 <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.BackgroundColor" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackColorChanged : EventHandler " Usage="member this.BackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.BackColor" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridView.BackColorChanged> 이벤트는 <xref:System.Windows.Forms.DataGridView.BackColor%2A> 속성이 변경 되거나 프로그래밍 방식으로 사용자 상호 작용 하 여 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackgroundColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 배경색을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" />의 배경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다. 기본값은 <see cref="P:System.Drawing.SystemColors.AppWorkspace" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A> 영역의 색을 결정 하는 속성을 <xref:System.Windows.Forms.DataGridView> 셀을 사용 하 여 채워지지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A> 속성입니다. 또한이 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> 고 <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> 속성입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`, 다음 호출 합니다 `SetUpDataGridView` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기입니다. 모든 이벤트가 해당 이벤트 처리기와 연결 되도록 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">이 속성을 설정할 때 지정된 값이 <see cref="F:System.Drawing.Color.Empty" />입니다.  
  
또는 
이 속성을 설정할 때 지정된 값이 255보다 작은 <see cref="P:System.Drawing.Color.A" /> 속성 값을 갖습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackgroundColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundColorChanged : EventHandler " Usage="member this.BackgroundColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.BackgroundColor" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.BackgroundColorChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.BackgroundColorChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#259](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#259)]
 [!code-vb[System.Windows.Forms.EventExamples#259](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#259)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.DataGridView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에 표시할 배경 이미지를 가져오거나 설정합니다.</summary>
        <value>컨트롤의 배경에 표시할 이미지를 나타내는 <see cref="T:System.Drawing.Image" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 이 컨트롤과 관련이 없습니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.BackgroundImage" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.DataGridView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ImageLayout" /> 열거형에서 정의된 대로 배경 이미지 레이아웃을 가져오거나 설정합니다.</summary>
        <value>배경 이미지 레이아웃을 지정하는 <see cref="T:System.Windows.Forms.ImageLayout" /> 값입니다. 기본값은 <see cref="F:System.Windows.Forms.ImageLayout.Tile" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 이 컨트롤과 관련이 없습니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.BackgroundImageLayout" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설명 했 듯이,이 이벤트가 발생 하지만 <xref:System.Windows.Forms.DataGridView.BackgroundImageLayout%2A> 속성은이 컨트롤에 대 한 관련이 없습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual bool BeginEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BeginEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (selectAll As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool BeginEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : bool -&gt; bool&#xA;override this.BeginEdit : bool -&gt; bool" Usage="dataGridView.BeginEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">모든 셀의 내용을 선택하려면 <see langword="true" />이고, 아무 내용도 선택하지 않으려면 <see langword="false" />입니다.</param>
        <summary>현재 셀을 편집 모드로 전환합니다.</summary>
        <returns>현재 셀이 이미 편집 모드에 있거나 성공적으로 편집 모드로 전환되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 반환 `false` 셀 실패는 다양 한 이유로 발생할 수 있는 편집 모드로 전환 합니다. 이 메서드가 반환 `false` 현재 셀이 읽기 전용입니다. 반환 한다는 `false` 경우 셀 <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> 속성은 `null` (편집 컨트롤을 호스팅할 수 없습니다 셀 의미) 셀 유형을 구현 하지 않습니다는 <xref:System.Windows.Forms.IDataGridViewEditingCell> 인터페이스입니다.  
  
 셀이 편집을 지 원하는 경우이 메서드는 <xref:System.Windows.Forms.DataGridView.CellBeginEdit> 이벤트는 취소할 수 있으며 반환 `false` 이벤트 처리기가 편집을 취소 하는 경우. 편집 취소 되지 않은 셀 편집 컨트롤을 호스트할 수 있습니다 하 고이 메서드는 컨트롤을 초기화 표시 합니다. 이 메서드가 반환 하는 경우 초기화가 실패 하면, `false`합니다.  
  
 셀에는 성공적으로 편집 모드로 전환 하는 경우는 <xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A> 속성이 반환 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridView.CurrentCell" />이 유효한 셀로 설정되지 않았습니다.  
  
또는 
이 메서드가 <see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" /> 이벤트의 처리기에서 호출되었습니다.</exception>
        <exception cref="T:System.InvalidCastException">셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 나타내는 형식이 <see cref="T:System.Windows.Forms.Control" /> 형식에서 파생되지 않습니다.  
  
또는 
셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 나타내는 형식이 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> 인터페이스를 구현하지 않습니다.</exception>
        <exception cref="T:System.Exception">편집 셀 값을 초기화하지 못했으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기의 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성이 <see langword="true" />로 설정되어 있습니다. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" />
        <altmember cref="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 테두리 스타일을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.BorderStyle" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 외부 테두리를 적용 합니다 <xref:System.Windows.Forms.DataGridView>합니다. 셀 테두리의 스타일을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 간단한 데이터 바인딩된을 초기화 하는 방법을 보여 줍니다 <xref:System.Windows.Forms.DataGridView>합니다. 설정 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView.BorderStyle%2A> 속성입니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">이 속성을 설정할 때 지정된 값이 유효한 <see cref="T:System.Windows.Forms.BorderStyle" /> 값이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.BorderStyleChanged : EventHandler " Usage="member this.BorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.BorderStyle" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.BorderStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.BorderStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#260](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#260)]
 [!code-vb[System.Windows.Forms.EventExamples#260](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#260)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CancelEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; bool" Usage="dataGridView.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 선택된 셀에 대해 편집 모드를 취소하고 변경 내용을 삭제합니다.</summary>
        <returns>취소에 성공했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 메서드의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [Windows Forms DataGridView 컨트롤의 열 채우기 모드](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewFillColumnsDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewFillColumnsDemo/CS/fillcolumns.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewFillColumnsDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewFillColumnsDemo/vb/fillcolumns.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CancelRowEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QuestionEventHandler CancelRowEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QuestionEventHandler CancelRowEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CancelRowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelRowEdit As QuestionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QuestionEventHandler ^ CancelRowEdit;" />
      <MemberSignature Language="F#" Value="member this.CancelRowEdit : System.Windows.Forms.QuestionEventHandler " Usage="member this.CancelRowEdit : System.Windows.Forms.QuestionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QuestionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> 속성이 <see langword="true" />일 때 발생하며 행의 편집 내용을 취소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView> 가 가상 모드에 있는 변경 내용이 커밋되기 셀 수준에서 데이터 캐시에 기본적으로 합니다. <xref:System.Windows.Forms.DataGridView.CancelRowEdit> 행 수준 트랜잭션을 구현할 때에 이벤트를 사용할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 대해이 이벤트를 처리 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView> 가상 모드에 있는 컨트롤입니다. 컨트롤이 편집 모드에 있을 때 합니다 `rowInEdit` 변수가 편집 되는 행의 인덱스 및 `customerInEdit` 변수 행에 해당 하는 Customer 개체에 대 한 참조를 보유 합니다. 사용자 편집 모드를 취소 하는 경우에이 개체를 삭제할 수 있습니다. 사용자 편집 된 행이 새 레코드에 대 한 행을 단, 이전 고객 개체 삭제 하 고 편집한 키를 다시 시작할 수 있도록 새 항목으로 대체 됩니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [연습: Forms DataGridView 컨트롤의 Windows에서 가상 모드 구현](~/docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.VirtualMode#170](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CPP/virtualmode.cpp#170)]
 [!code-csharp[System.Windows.Forms.DataGridView.VirtualMode#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CS/virtualmode.cs#170)]
 [!code-vb[System.Windows.Forms.DataGridView.VirtualMode#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/VB/virtualmode.vb#170)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.DataGridView.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>IME 지원을 사용하도록 <see cref="P:System.Windows.Forms.Control.ImeMode" /> 속성을 활성 값으로 설정할 수 있는지를 나타내는 값을 가져옵니다.</summary>
        <value>편집할 수 있는 셀이 선택되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellBeginEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellCancelEventHandler CellBeginEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellCancelEventHandler CellBeginEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellBeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellBeginEdit As DataGridViewCellCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellCancelEventHandler ^ CellBeginEdit;" />
      <MemberSignature Language="F#" Value="member this.CellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventHandler " Usage="member this.CellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>선택한 셀에 대한 편집 모드가 시작될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 현재 반영 하도록이 이벤트를 처리 하는 방법을 보여 줍니다. <xref:System.Windows.Forms.DataGridViewCell> 있기 때문입니다. 이 예제는 <xref:System.Windows.Forms.Control.Text%2A> 속성을 포함 하는 <xref:System.Windows.Forms.Form> 는 셀이 편집 중인지를 반영 하도록 설정 됩니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`, 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#220)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellBorderStyle CellBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewCellBorderStyle CellBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CellBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CellBorderStyle As DataGridViewCellBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellBorderStyle CellBorderStyle { System::Windows::Forms::DataGridViewCellBorderStyle get(); void set(System::Windows::Forms::DataGridViewCellBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.CellBorderStyle : System.Windows.Forms.DataGridViewCellBorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.CellBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 셀 테두리 스타일을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" />에 포함된 셀의 테두리 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A> 속성이 아닌 다른 값으로 설정 되어 <xref:System.Windows.Forms.DataGridViewCellBorderStyle.Single>, <xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleHorizontal>, 또는 <xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleVertical>의 <xref:System.Windows.Forms.DataGridView.GridColor%2A> 속성 시스템 색 이어야 합니다.  
  
 이 속성 설정할 수 없습니다는 <xref:System.Windows.Forms.DataGridViewCellBorderStyle.Custom> 는 읽기 전용으로 지정 하는 값 셀 테두리 스타일을 사용 하 여 사용자 지정 된 값을 <xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A> 속성입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`, 다음 호출 합니다 `SetUpDataGridView` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기입니다. 모든 이벤트가 해당 이벤트 처리기와 연결 되도록 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">이 속성을 설정할 때 지정된 값이 유효한 <see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" /> 값이 아닙니다.</exception>
        <exception cref="T:System.ArgumentException">이 속성을 설정할 때 지정된 값이 <see cref="F:System.Windows.Forms.DataGridViewCellBorderStyle.Custom" />입니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellBorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CellBorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CellBorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellBorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CellBorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.CellBorderStyleChanged : EventHandler " Usage="member this.CellBorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 테두리 스타일이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellBorderStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellBorderStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#261](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#261)]
 [!code-vb[System.Windows.Forms.EventExamples#261](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#261)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellClick;" />
      <MemberSignature Language="F#" Value="member this.CellClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀에서 임의 부분을 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 안쪽 여백 및 테두리를 포함 하 여 셀의 모든 부분을 클릭 하면 발생 합니다. 또한 사용자를 눌렀다가 단추 셀 또는 확인란 셀에 포커스가 있으면 및 SPACE 키를 누른 채 클릭 하는 경우 이러한 셀 형식에 대 한 두 번 발생 하는 동안 SPACE 키를 놓을 때 발생 합니다.  
  
 셀 내용을 클릭 된 시기를 확인 하려면 처리는 <xref:System.Windows.Forms.DataGridView.CellContentClick> 이벤트입니다.  
  
 이 이벤트는 마우스 위치에 대 한 정보를 수신 하지 않습니다. 이벤트 처리기는 마우스 위치에 대 한 정보가 필요한 경우 사용 된 <xref:System.Windows.Forms.DataGridView.CellMouseClick> 이벤트입니다.  
  
 클릭을 <xref:System.Windows.Forms.DataGridViewCheckBoxCell>확인란 변경 값을 현재 값을 기반으로 예상 값을 계산 하지 않으려는 경우이 이벤트 전의 일반적으로 처리 합니다는 <xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType> 이벤트 대신 합니다. 사용자 지정 값 커밋된 경우에 해당 이벤트가 발생 하기 때문에 일반적으로 발생 하는 포커스가 셀을 벗어나면도 처리 해야 합니다 <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType> 이벤트입니다. 해당 처리기에서 현재 셀의 확인란 셀 인 경우 호출 합니다 <xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType> 메서드와 전달은 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> 값입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.DataGridView.CellClick> Tic-Tac-Toe 게임 구현에서 이미지 열을 사용 하는 이벤트 처리기를 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 이벤트 처리기 2 중 하나에 셀 값을 설정 게임이 아니면 셀이 이미 클릭 <xref:System.Drawing.Bitmap> 변수로 표시 되는 개체 `x` 고 `o`입니다.  
  
 이 코드는에 표시 된 것 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 이미지 열 작업](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContentClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellContentClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellContentClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContentClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContentClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellContentClick;" />
      <MemberSignature Language="F#" Value="member this.CellContentClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellContentClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 내부에 있는 내용을 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 셀 내용을 클릭 하면 발생 합니다. 사용자 단추 셀 스페이스바를 눌렀다 있고 확인란 셀에 포커스가 셀 내용을 스페이스바를 누른 채 클릭 하는 경우 이러한 셀 형식에 대 한 두 번 발생 하는 경우에 발생 합니다.  
  
 이 이벤트를 사용 하 여 단추 클릭을 검색 하는 <xref:System.Windows.Forms.DataGridViewButtonCell> 에 대 한 링크를 클릭 하거나 탭 할는 <xref:System.Windows.Forms.DataGridViewLinkCell>합니다.  
  
 클릭을 <xref:System.Windows.Forms.DataGridViewCheckBoxCell>확인란 변경 값을 현재 값을 기반으로 예상 값을 계산 하지 않으려는 경우이 이벤트 전의 일반적으로 처리 합니다는 <xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType> 이벤트 대신 합니다. 사용자 지정 값 커밋된 경우에 해당 이벤트가 발생 하기 때문에 일반적으로 발생 하는 포커스가 셀을 벗어나면도 처리 해야 합니다 <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType> 이벤트입니다. 해당 처리기에서 현재 셀의 확인란 셀 인 경우 호출 합니다 <xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType> 메서드와 전달은 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> 값입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제는 클릭 한 셀이 링크 셀 이거나 단추 셀 및 결과적으로 해당 하는 작업을 수행 하는지 여부를 결정 하는이 이벤트에 대 한 처리기를 제공 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 클래스 개요 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#60)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#60)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#60)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContentDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellContentDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellContentDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContentDoubleClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellContentDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.CellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 셀의 내용을 두 번 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellContentDoubleClick> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellContentDoubleClick> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#285](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#285)]
 [!code-vb[System.Windows.Forms.EventExamples#285](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#285)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContextMenuStripChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.CellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#286](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#286)]
 [!code-vb[System.Windows.Forms.EventExamples#286](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#286)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler CellContextMenuStripNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler CellContextMenuStripNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContextMenuStripNeeded As DataGridViewCellContextMenuStripNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellContextMenuStripNeededEventHandler ^ CellContextMenuStripNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler " Usage="member this.CellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 바로 가기 메뉴가 필요할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> 이벤트에만 발생 경우를 <xref:System.Windows.Forms.DataGridView> 컨트롤 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성을 설정 또는 해당 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성은 `true`합니다.  
  
 처리 하는 경우는 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> 이벤트 처리기에서 지정 하는 바로 가기 메뉴가 표시 됩니다 사용자 셀을 마우스 오른쪽 단추로 클릭할 때마다 합니다. 현재 상태 또는 셀의 값에 의해 결정 된 바로 가기 메뉴를 표시 하려는 경우에 유용 합니다.  
  
 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> 이벤트는 또한 될 때마다 발생의 값을 <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A?displayProperty=nameWithType> 속성은 검색 하거나 프로그래밍 방식으로 또는 사용자 셀을 마우스 오른쪽 단추로 클릭할 때입니다.  
  
 사용할 수는 <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType> 및 <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A> 속성은 셀의 값을 상태를 확인 하 고이 정보를 사용 하 여 변경 하거나 수정 하는 <xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType> 속성입니다. 이 속성은 셀의 값을 사용 하 여 초기화 <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> 이벤트 값을 재정의 하는 속성입니다.  
  
 처리를 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> 많은 양의 데이터로 작업할 때 이벤트 <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> 여러 셀에 대 한 값입니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 행을 설정 하 여 개별 셀 대신 개별 행에 대 한 바로 가기 메뉴를 지정할 수도 있습니다 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 속성 또는 처리를 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 이벤트입니다. 셀 <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> 속성 설정은 행 재정의 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 속성 설정 및 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> 이벤트 모두를 재정의 합니다 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 이벤트 및 행 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 속성 설정. 지정할 수 있습니다 `null` 덮어쓰기 행 바로 가기 메뉴를 방지 하기 위해 셀 바로 가기 메뉴에 대 한 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 된 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> 셀을 마우스 오른쪽 단추로 클릭할 때 사용 되는 사용자 지정 바로 가기 메뉴를 표시 하려면 이벤트 처리기입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CPP/sharedrows.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CS/sharedrows.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/VB/sharedrows.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellDoubleClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.CellDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 셀에서 임의의 지점을 두 번 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellDoubleClick> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellDoubleClick> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#288](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#288)]
 [!code-vb[System.Windows.Forms.EventExamples#288](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#288)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellEndEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellEndEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellEndEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellEndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellEndEdit As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellEndEdit;" />
      <MemberSignature Language="F#" Value="member this.CellEndEdit : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellEndEdit : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 선택한 셀에 대한 편집 모드가 중지될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 행의 선택을 취소 하려면이 이벤트를 처리 하는 방법을 보여 줍니다 <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType> 하 여 이전에 설정 된 경우에서 속성을 <xref:System.Windows.Forms.DataGridView.CellValidating> 이벤트 처리기입니다. 합니다 <xref:System.Windows.Forms.DataGridView.CellValidating> 새 셀 값 유효성 검사 조건을 충족 하지만 사용자 값으로 되돌리는 이전 셀 ESC 키를 눌러 이벤트 처리기 오류 텍스트를 지울 수는 <xref:System.Windows.Forms.DataGridView.CellValidating> 이벤트가 발생 하지 않습니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [연습: Forms DataGridView 컨트롤을 Windows의 데이터 유효성 검사](~/docs/framework/winforms/controls/walkthrough-validating-data-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/CS/datavalidation.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/VB/datavalidation.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellEnter As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellEnter;" />
      <MemberSignature Language="F#" Value="member this.CellEnter : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellEnter : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에서 변경되거나 이 컨트롤이 입력 포커스를 받을 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤에 입력된 포커스가 없는 경우 클릭 한 셀 없습니다 이전 현재 셀이이 이벤트는 한 번의 클릭에 대 한 두 번 발생할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트를 처리 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A> 현재 셀의 속성입니다. 이 예제에서 선택 영역 배경색 설정 됩니다는 <xref:System.Windows.Forms.DataGridView.CellEnter> 이벤트를 다음으로 다시 설정 <xref:System.Drawing.Color.Empty> 에 <xref:System.Windows.Forms.DataGridView.CellLeave> 이벤트입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1` 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#190)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#190)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellErrorTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellErrorTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellErrorTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellErrorTextChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellErrorTextChanged;" />
      <MemberSignature Language="F#" Value="member this.CellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellErrorTextChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellErrorTextChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#291](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#291)]
 [!code-vb[System.Windows.Forms.EventExamples#291](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#291)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellErrorTextNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler CellErrorTextNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler CellErrorTextNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellErrorTextNeeded As DataGridViewCellErrorTextNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellErrorTextNeededEventHandler ^ CellErrorTextNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler " Usage="member this.CellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 오류 텍스트가 필요할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> 이벤트에만 발생 경우를 <xref:System.Windows.Forms.DataGridView> 컨트롤 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성을 설정 또는 해당 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성은 `true`합니다. 처리는 <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> 이벤트는 해당 값 또는 상태에 따라 셀에 대 한 오류를 확인 하려는 경우에 유용 합니다.  
  
 처리 하는 경우는 <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> 이벤트 오류 텍스트에에서 지정 된 처리기를 오류 문자 모양과 셀에 표시 하지 않는 한는 <xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A> 속성이 `false` 셀이 편집 모드 또는 합니다. 오류 기호 위로 마우스 포인터를 이동할 때 오류 텍스트 도구 설명에 나타납니다.  
  
 <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> 이벤트도 발생 될 때마다 값을 <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A?displayProperty=nameWithType> 속성을 검색 합니다.  
  
 사용할 수는 <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType> 및 <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A> 속성을 상태 또는 셀의 값을 확인 하 고이 정보를 사용 하 여 변경 하거나 수정 하는 <xref:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText%2A?displayProperty=nameWithType> 속성입니다. 이 속성은 셀의 값을 사용 하 여 초기화 <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> 이벤트 값을 재정의 하는 속성입니다.  
  
 처리를 <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> 많은 양의 데이터로 작업할 때 이벤트 <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> 여러 셀에 대 한 값입니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 행을 공유 하지 않도록 모든 공유 셀에 걸쳐 복제 하려면 셀 오류 없이 셀에 대 한 오류 메시지를 만드는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CPP/sharedrows.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CS/sharedrows.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/VB/sharedrows.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowCellErrors" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="CellFormatting">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellFormattingEventHandler CellFormatting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellFormattingEventHandler CellFormatting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellFormatting As DataGridViewCellFormattingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellFormattingEventHandler ^ CellFormatting;" />
      <MemberSignature Language="F#" Value="member this.CellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventHandler " Usage="member this.CellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellFormattingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표시를 위해 셀 내용의 서식을 지정해야 할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 <xref:System.Windows.Forms.DataGridView> 컨트롤은 셀의 값을 표시 하기에 적합 한 형식으로 변환 하려고 합니다. 예를 들어, 숫자 값을 텍스트 상자 셀의 표시를 위해 문자열로 변환 됩니다 것입니다. 설정 하 여 사용할 서식 지정 규칙을 지정할 수 있습니다는 <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A> 의 속성을 <xref:System.Windows.Forms.DataGridViewCellStyle> 와 같은 속성에서 반환는 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 속성.  
  
 표준 서식 충분 하지 않으면 사용자 지정할 수 있습니다 처리 하 여 서식 지정을 <xref:System.Windows.Forms.DataGridView.CellFormatting> 이벤트입니다. 이 이벤트를 사용 하면 정확한 표시 값 뿐 아니라 셀 표시에 사용할 배경 및 전경 색과 같은 셀 스타일을 나타낼 수 있습니다. 즉, 모든 종류의 서식 지정, 자체 셀 값을 서식 지정 해야 하는지 여부에 관계 없이 셀에 대해이 이벤트를 처리할 수 있습니다.  
  
 <xref:System.Windows.Forms.DataGridView.CellFormatting> 각 셀을 그릴 하지 않아야 하므로이 이벤트를 처리 하는 경우 처리 시간이 오래 걸리는 때마다 이벤트가 발생 합니다. 이 이벤트에도 발생 경우 셀 <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> 검색 또는 <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> 메서드가 호출 됩니다.  
  
 처리 하는 경우는 <xref:System.Windows.Forms.DataGridView.CellFormatting> 이벤트는 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> 속성은 셀 값을 사용 하 여 초기화 됩니다. 셀 값을 표시 값으로 변환할 때 사용자 지정을 제공 하는 경우 설정 합니다 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> 속성 셀에 의해 지정 된 형식의 새 값이 있는지 확인 하는 변환 된 값을 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> 속성입니다. 필요한 서식 지정 추가 값이 없는 상태임을 나타내기 위해 설정 된 <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> 속성을 `true`입니다.  
  
 완료 될 때 이벤트 처리기는 경우는 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> 는 `null` 이거나 올바른 형식 또는 <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> 속성은 `false`의 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> 를 사용 하 여 형식이 <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, 및 <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> 에서 반환 된 셀 스타일의 속성을 <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType> 셀을 사용 하 여 초기화 된 속성을 <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> 속성입니다.  
  
 값에 관계 없이 합니다 <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> 속성을 반환 하는 개체의 표시 속성을 <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType> 속성은 셀을 렌더링 하는 데 사용 됩니다.  
  
 사용자 지정 형식 사용에 대 한 자세한 내용은 합니다 <xref:System.Windows.Forms.DataGridView.CellFormatting> 이벤트 참조 [방법: Windows Forms DataGridView 컨트롤에서 데이터 형식 사용자 지정](~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md)합니다.  
  
 이 이벤트를 처리할 때 성능 저하를 방지 하려면 셀에 셀에 직접 액세스 하는 것이 아니라 이벤트 처리기의 매개 변수를 통해 액세스 합니다.  
  
 서식이 지정 된 사용자 지정 값을 실제 셀 값으로 변환 사용자 지정 처리는 <xref:System.Windows.Forms.DataGridView.CellParsing> 이벤트입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView.CellFormatting> 이벤트입니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md">방법: Windows Forms DataGridView 컨트롤에서 데이터 형식 사용자 지정</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellLeave As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellLeave;" />
      <MemberSignature Language="F#" Value="member this.CellLeave : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellLeave : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀이 입력 포커스를 잃어 더 이상 현재 셀이 아닐 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트를 처리 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A> 현재 셀의 속성입니다. 이 예제에서 선택 영역 배경색 설정 됩니다는 <xref:System.Windows.Forms.DataGridView.CellEnter> 이벤트를 다음으로 다시 설정 <xref:System.Drawing.Color.Empty> 에 <xref:System.Windows.Forms.DataGridView.CellLeave> 이벤트입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1` 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#190)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#190)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseClick;" />
      <MemberSignature Language="F#" Value="member this.CellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 마우스로 셀의 임의 지점을 클릭할 때마다 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 마우스 단추를 사용 하 여를 클릭할 때 발생 합니다. 사용 하 여는 <xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType> 속성을 단추를 클릭 했는지 확인 합니다.  
  
 단추 또는 링크로 셀 내에서 같은 스 셀의 내용에는 클릭을 검색 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.CellContentClick> 이벤트입니다.  
  
 이 이벤트 처리기는 마우스 포인터 위치의 행 인덱스 및 열 인덱스를 받습니다.  
  
 클릭을 <xref:System.Windows.Forms.DataGridViewCheckBoxCell>확인란 변경 값을 현재 값을 기반으로 예상 값을 계산 하지 않으려는 경우이 이벤트 전의 일반적으로 처리 합니다는 <xref:System.Windows.Forms.DataGridView.CellValueChanged> 이벤트 대신 합니다. 사용자 지정 값 커밋된 경우에 해당 이벤트가 발생 하기 때문에 일반적으로 발생 하는 포커스가 셀을 벗어나면도 처리 해야 합니다 <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged> 이벤트입니다. 해당 처리기에서 현재 셀의 확인란 셀 인 경우 호출 합니다 <xref:System.Windows.Forms.DataGridView.CommitEdit%2A> 메서드와 전달은 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> 값입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellMouseClick> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellMouseClick> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#295](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#295)]
 [!code-vb[System.Windows.Forms.EventExamples#295](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#295)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseEventHandler" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContentClick" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseDoubleClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.CellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 안의 셀을 두 번 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 사용자가 마우스 단추를 사용 하 여 두 번 클릭할 때 발생 합니다. 사용 하 여는 <xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType> 속성을 단추를 클릭 했는지 확인 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#296](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#296)]
 [!code-vb[System.Windows.Forms.EventExamples#296](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#296)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseDown As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseDown;" />
      <MemberSignature Language="F#" Value="member this.CellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터가 셀의 경계선 내부에 있을 때 마우스 단추를 누르면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 사용자가 마우스 단추를 누를 때 발생 합니다. 사용 하 여는 <xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType> 속성을 단추를 클릭 했는지 확인 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellMouseDown> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellMouseDown> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#297](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#297)]
 [!code-vb[System.Windows.Forms.EventExamples#297](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#297)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellMouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellMouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseEnter As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellMouseEnter;" />
      <MemberSignature Language="F#" Value="member this.CellMouseEnter : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellMouseEnter : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터가 셀 내부로 이동할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.DataGridView.CellMouseEnter> Tic-Tac-Toe 게임 구현에서 이미지 열을 사용 하는 이벤트 처리기를 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 이벤트 처리기 및 표시할 도구 설명을 확인 하려면 셀 값을 사용 합니다.  
  
 이 코드는에 표시 된 것 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 이미지 열 작업](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#15)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellMouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellMouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseLeave As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellMouseLeave;" />
      <MemberSignature Language="F#" Value="member this.CellMouseLeave : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellMouseLeave : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터가 셀을 벗어날 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.DataGridView.CellMouseLeave> Tic-Tac-Toe 게임 구현에서 이미지 열을 사용 하는 이벤트 처리기를 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 커서 및 도구에서 설정 다시 설정 하는 이벤트 처리기는 <xref:System.Windows.Forms.DataGridView.CellMouseEnter> 이벤트 처리기입니다.  
  
 이 코드는에 표시 된 것 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 이미지 열 작업](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#15)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseMove As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseMove;" />
      <MemberSignature Language="F#" Value="member this.CellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터가 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 위로 이동하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellMouseMove> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellMouseMove> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#300)]
 [!code-vb[System.Windows.Forms.EventExamples#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#300)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseUp As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseUp;" />
      <MemberSignature Language="F#" Value="member this.CellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 위에서 마우스 단추를 놓을 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 마우스 단추를 놓을 때 발생 합니다. 사용 하 여는 <xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType> 속성을 단추를 클릭 했는지 확인 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellMouseUp> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellMouseUp> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#301)]
 [!code-vb[System.Windows.Forms.EventExamples#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#301)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellPainting">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellPaintingEventHandler CellPainting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellPaintingEventHandler CellPainting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellPainting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellPainting As DataGridViewCellPaintingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellPaintingEventHandler ^ CellPainting;" />
      <MemberSignature Language="F#" Value="member this.CellPainting : System.Windows.Forms.DataGridViewCellPaintingEventHandler " Usage="member this.CellPainting : System.Windows.Forms.DataGridViewCellPaintingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellPaintingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀을 그려야 할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤에서 셀 모양 사용자 지정 하려면이 이벤트를 처리할 수 있습니다. 전체 셀을 직접 그릴 셀의 특정 부분을 사용 합니다 <xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintBackground%2A?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintContent%2A?displayProperty=nameWithType> 다른 부분을 그리는 방법입니다. 사용할 수도 있습니다는 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 현재 테마를 사용 하 여 표준 컨트롤을 그릴 클래스입니다. 자세한 내용은 [비주얼 스타일을 사용 하 여 컨트롤 렌더링](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)합니다. 사용 중인 경우 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]를 사용 하 여 사용할 수 있는 표준 이미지의 대규모 라이브러리에 액세스할 수도 <xref:System.Windows.Forms.DataGridView> 제어 합니다.  
  
 이 이벤트를 처리할 때 셀에 직접 액세스 하는 대신 이벤트 처리기의 매개 변수를 통해 셀에 액세스 해야 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 특정 열의 모든 셀의 모양을 사용자 지정 하려면이 이벤트를 사용 하는 방법을 보여 줍니다.  
  
 이 코드는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 셀 모양 사용자 지정](~/docs/framework/winforms/controls/customize-the-appearance-of-cells-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCellPainting#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCellPainting/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewCellPainting#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCellPainting/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellPaintingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <related type="Article" href="~/docs/framework/winforms/controls/customize-the-appearance-of-cells-in-the-datagrid.md">방법: Windows Forms DataGridView 컨트롤에서 셀 모양 사용자 지정</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellParsing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellParsingEventHandler CellParsing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellParsingEventHandler CellParsing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellParsing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellParsing As DataGridViewCellParsingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellParsingEventHandler ^ CellParsing;" />
      <MemberSignature Language="F#" Value="member this.CellParsing : System.Windows.Forms.DataGridViewCellParsingEventHandler " Usage="member this.CellParsing : System.Windows.Forms.DataGridViewCellParsingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellParsingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 값이 수정된 경우 셀의 편집 모드를 떠나면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 <xref:System.Windows.Forms.DataGridView> 컨트롤을 셀에 지정 된 형식에서 기본 실제 셀 값을 셀에 표시 되는 사용자 지정 값으로 변환 하려고 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> 속성입니다. 셀에 의해 반환 된 셀 스타일의 서식 속성을 사용 하 여이 변환을 <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> 속성입니다.  
  
 표준 변환 요구 사항을 충족 하지 않으면, 처리 된 <xref:System.Windows.Forms.DataGridView.CellParsing> 필요한 형식으로 변환 하는 사용자 지정 값을 제공 하는 이벤트입니다.  
  
 사용자 지정 된 메서드를 사용 하 여 편집 모드를 입력할 수 있습니다는 <xref:System.Windows.Forms.DataGridView.EditMode%2A> 속성을 두십시오 창의 다른 셀으로 이동 하 여 또는 ENTER 키를 누르거나 셀 변경 내용을 커밋하지 모드를 편집할 수 있습니다. ESC 키를 눌러 되돌아갑니다 값 내용이 커밋되기 전에 및 <xref:System.Windows.Forms.DataGridView.CellParsing> 이벤트가 발생 하지 것입니다. <xref:System.Windows.Forms.DataGridView.CellParsing> 최종 값은 원래 값과 동일 하 게 하는 경우에 이벤트 셀 값이 실제로 수정 된 경우에 발생 합니다. 에 발생 경우를 <xref:System.Windows.Forms.DataGridView.CommitEdit%2A> 메서드가 호출 됩니다.  
  
 처리 하는 경우는 <xref:System.Windows.Forms.DataGridView.CellParsing> 이벤트 값을 직접 변환할 수 있습니다 또는 기본 변환을 사용자 지정할 수 있습니다. 예를 들어, 변환할 수 있습니다 값 셀을 사용 하 여 직접 <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> 원하는 형식 변환기를 사용 하 여 메서드. 또는 기본 형식 변환기 값을 구문 분석 하지만 수정할 수는 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, 및 <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> 반환 하는 개체의 속성을 <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType> 셀을 사용 하 여 초기화 된 속성을 <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> 속성입니다.  
  
 초기의 서식이 지정 된 값을 바꿀 값으로 직접 변환 합니다 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> 속성 셀에 지정 된 형식에서 변환 된 값을 사용 하 여 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> 속성입니다. 더 이상 구문 분석 필요한 상태임을 나타내기 위해 설정 된 <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType> 속성을 `true`입니다.  
  
 완료 될 때 이벤트 처리기는 경우는 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> 는 `null` 이거나 올바른 형식 또는 <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType> 속성은 `false`의 <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> 있는 셀을 사용 하는 구문 분석 되 <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> 기본 형식 변환기를 사용 하 여 메서드. 이 메서드의 기본 구현을 사용 하 여 값을 구문 분석 합니다 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, 및 <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> 셀 스타일의 속성에 전달 합니다. 값 같음 없으면 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, 값을 사용 하 여 구문 분석 되는 <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> 속성 및 형식 변환기에 전달 합니다.  
  
 셀 값을 표시 하기 위해 형식이 지정 된 값으로 변환 사용자 지정 처리는 <xref:System.Windows.Forms.DataGridView.CellFormatting> 이벤트입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView.CellParsing> 이벤트입니다. 또한 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs> 클래스입니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellStateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellStateChangedEventHandler CellStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellStateChangedEventHandler CellStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellStateChanged As DataGridViewCellStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellStateChangedEventHandler ^ CellStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventHandler " Usage="member this.CellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀이 포커스를 잃거나 얻을 때와 같이 셀 상태가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트의 사용을 보여 줍니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#135](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#135)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#135](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#135)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStateChangedEventArgs.StateChanged" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellStyleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellStyleChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.CellStyleChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellStyleChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewCell" />의 <see cref="P:System.Windows.Forms.DataGridViewCell.Style" /> 속성이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 될 때이 이벤트가 발생의 속성을 <xref:System.Windows.Forms.DataGridViewCellStyle> 반환한를 <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType> 속성을 새 값으로 설정 됩니다 때나를 <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType> 속성이 새 <xref:System.Windows.Forms.DataGridViewCellStyle> 하나 이상의 속성 값이 다른 이전 셀 스타일 개체를 사용 하 여.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#305)]
 [!code-vb[System.Windows.Forms.EventExamples#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellStyleContentChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler CellStyleContentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler CellStyleContentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellStyleContentChanged As DataGridViewCellStyleContentChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellStyleContentChangedEventHandler ^ CellStyleContentChanged;" />
      <MemberSignature Language="F#" Value="member this.CellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler " Usage="member this.CellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 스타일의 값 하나가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridView.CellStyleContentChanged> 이벤트가 발생할 때 속성 값을 <xref:System.Windows.Forms.DataGridViewCellStyle> 속성 변경 중 하나에 의해 반환 된 개체:  
  
-   <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
 이러한 속성 중 하나를 다른 설정 되어 <xref:System.Windows.Forms.DataGridViewCellStyle>하지만 해당 *PropertyName* `Changed` 이벤트가 발생 하지만 <xref:System.Windows.Forms.DataGridView.CellStyleContentChanged> 이벤트가 발생 하지 않습니다.  
  
 행, 열 및 셀 속성의 이름에 대 한 합니다 *PropertyName* `Changed` 이벤트 시작 "`Row`","`Column`", 또는 "`Cell`" (예를 들어 <xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged>).  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellStyleContentChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellStyleContentChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#306](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#306)]
 [!code-vb[System.Windows.Forms.EventExamples#306](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#306)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellToolTipTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellToolTipTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellToolTipTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellToolTipTextChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellToolTipTextChanged;" />
      <MemberSignature Language="F#" Value="member this.CellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" /> 속성 값이 <see cref="T:System.Windows.Forms.DataGridView" />의 셀에 대해 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#307](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#307)]
 [!code-vb[System.Windows.Forms.EventExamples#307](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#307)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellToolTipTextNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler CellToolTipTextNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler CellToolTipTextNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellToolTipTextNeeded As DataGridViewCellToolTipTextNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellToolTipTextNeededEventHandler ^ CellToolTipTextNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler " Usage="member this.CellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 도구 설명 텍스트가 필요할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> 이벤트에만 발생 경우를 <xref:System.Windows.Forms.DataGridView> 컨트롤 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성을 설정 또는 해당 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성은 `true`합니다.  
  
 처리 하는 경우는 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> 이벤트 처리기에 지정한 도구 설명 텍스트가 표시 됩니다 때마다 마우스 포인터가 위에 있는 컨트롤 및 셀 <xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A> 속성 값이 `true`합니다. <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> 이벤트는 현재 상태 또는 셀의 값에 의해 결정 되는 도구 설명을 표시 하려는 경우에 유용 합니다.  
  
 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> 이벤트는 또한 될 때마다 발생의 값을 <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A?displayProperty=nameWithType> 검색 하거나 프로그래밍 방식으로 또는 마우스 포인터가 셀에 들어갈 때.  
  
 사용할 수는 <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType> 및 <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A> 속성은 셀의 값을 상태를 확인 하 고이 정보를 사용 하 여 변경 하거나 수정 하는 <xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType> 속성입니다. 이 속성은 셀의 값을 사용 하 여 초기화 <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> 이벤트 값을 재정의 하는 속성입니다.  
  
 처리를 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> 많은 양의 데이터로 작업할 때 이벤트 <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> 여러 셀에 대 한 값입니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 된 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> 정보를 표시 숨겨진된 열에서 데이터 바인딩된 이벤트 처리기 <xref:System.Windows.Forms.DataGridView> 컨트롤입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView_NeededEvents#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/CS/Form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowCellToolTips" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValidated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellValidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValidated As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellValidated;" />
      <MemberSignature Language="F#" Value="member this.CellValidated : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellValidated : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 유효성 검사가 완료된 후 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트를 처리 하는 것은 셀 값의 유효성 검사 후 처리를 위해 유용 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.CellValidated> 이벤트를 지울는 <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> 속성입니다. 이 예제에서는 합니다 <xref:System.Windows.Forms.DataGridView.CellValidating> 이벤트 집합을 <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> 셀에 유효 하지 않은 데이터를 입력할 경우. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.SelectionChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValidating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellValidatingEventHandler CellValidating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellValidatingEventHandler CellValidating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValidating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValidating As DataGridViewCellValidatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellValidatingEventHandler ^ CellValidating;" />
      <MemberSignature Language="F#" Value="member this.CellValidating : System.Windows.Forms.DataGridViewCellValidatingEventHandler " Usage="member this.CellValidating : System.Windows.Forms.DataGridViewCellValidatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellValidatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀이 입력 포커스를 잃어 내용 유효성 검사가 활성화되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트를 취소 하면 현재 셀에 변경 내용을 취소 합니다. 이 이벤트는 데이터 바인딩 모드에서 취소 된 경우 새 값이 기본 데이터 원본에 푸시되 지 않습니다. 이 이벤트는 가상 모드에 취소 될 때를 <xref:System.Windows.Forms.DataGridView.CellValuePushed> 이벤트 발생 하지 것입니다.  
  
 처리는 <xref:System.Windows.Forms.DataGridView.CellValidated> 후 유효성 검사 처리를 수행 하는 이벤트입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리 된 <xref:System.Windows.Forms.DataGridView.CellValidating> 이벤트를 사용자가 양의 정수만 입력 되어 있는지 확인 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 참조 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#40)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidated" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValueChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValueChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellValueChanged;" />
      <MemberSignature Language="F#" Value="member this.CellValueChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellValueChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType> 사용자 지정 값을 커밋할 때 이벤트 발생 포커스가 셀을 벗어나면 일반적으로 발생 하는 합니다.  
  
 그러나 확인란 셀의 경우 일반적으로 하려는 변경을 즉시 처리 합니다. 셀을 클릭할 때 변경 내용을 커밋하려면를 처리 해야 합니다는 <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType> 이벤트입니다. 처리기에서 현재 셀의 확인란 셀 인 경우 호출 합니다 <xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType> 메서드를 전달 합니다 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> 값.  
  
 컨트롤의 행 셀 값이 변경 될 때 자동으로 정렬 되지 않습니다. 사용자가 셀을 수정할 때 컨트롤을 정렬, 호출을 <xref:System.Windows.Forms.DataGridView.Sort%2A> 에서 메서드를 <xref:System.Windows.Forms.DataGridView.CellValueChanged> 이벤트 처리기입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.CellValueChanged> 분산 열의 값을 업데이트 하는 이벤트를 <xref:System.Windows.Forms.DataGridView>입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.SelectionChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValueNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellValueEventHandler CellValueNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellValueEventHandler CellValueNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValueNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValueNeeded As DataGridViewCellValueEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellValueEventHandler ^ CellValueNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventHandler " Usage="member this.CellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellValueEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> 속성이 <see langword="true" />이고, <see cref="T:System.Windows.Forms.DataGridView" />에서 셀을 서식 지정하고 표시하기 위해 셀에 대한 값이 필요할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가상 모드에 있는 행의 공유가 해제 하지 않고도 사용자 지정 데이터 저장소에서 데이터를 사용 하 여 셀을 채우는 데이 이벤트를 사용 합니다. 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다. 가상 모드에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤에서 가상 모드](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)합니다.  
  
 사용자가 지정한 값에 사용자 지정 데이터 저장소를 추가 하려면 처리는 <xref:System.Windows.Forms.DataGridView.CellValuePushed> 이벤트입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리 된 <xref:System.Windows.Forms.DataGridView.CellValueNeeded> 양의 정수를 사용 하 여 셀을 채우는 데는 이벤트입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 참조 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
        <related type="Article" href="~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 가상 모드</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValuePushed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellValueEventHandler CellValuePushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellValueEventHandler CellValuePushed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValuePushed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValuePushed As DataGridViewCellValueEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellValueEventHandler ^ CellValuePushed;" />
      <MemberSignature Language="F#" Value="member this.CellValuePushed : System.Windows.Forms.DataGridViewCellValueEventHandler " Usage="member this.CellValuePushed : System.Windows.Forms.DataGridViewCellValueEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellValueEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> 속성이 <see langword="true" />이고 변경된 셀 값에 내부 데이터 원본의 스토리지가 필요할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가상 모드에서이 이벤트를 사용 하 여 사용자 지정 데이터를 사용 하 여 사용자 지정 데이터 저장소를 업데이트 합니다. 처리는 <xref:System.Windows.Forms.DataGridView.CellValueNeeded> 컨트롤에 표시 하기 위한 데이터 저장소에서 값을 검색 하는 이벤트입니다.  
  
 가상 모드에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤에서 가상 모드](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리 된 <xref:System.Windows.Forms.DataGridView.CellValuePushed> 데이터 저장소 개체에 업데이트 및 새 항목을 저장 하는 이벤트입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 참조 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 가상 모드</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearSelection">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>현재 선택된 셀의 선택을 취소합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="public void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ClearSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearSelection();" />
      <MemberSignature Language="F#" Value="member this.ClearSelection : unit -&gt; unit" Usage="dataGridView.ClearSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>선택된 모든 셀의 선택을 취소하여 현재 선택을 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 호출 될 때, 각 열과 행의 <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> 속성이 `false`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는의 선택이 취소 된 <xref:System.Windows.Forms.DataGridView>합니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1` 와 <xref:System.Windows.Forms.Button> 라는 `clearSelectionButton`, 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#170)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#170)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="protected void ClearSelection (int columnIndexException, int rowIndexException, bool selectExceptionElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearSelection(int32 columnIndexException, int32 rowIndexException, bool selectExceptionElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearSelection (columnIndexException As Integer, rowIndexException As Integer, selectExceptionElement As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearSelection(int columnIndexException, int rowIndexException, bool selectExceptionElement);" />
      <MemberSignature Language="F#" Value="member this.ClearSelection : int * int * bool -&gt; unit" Usage="dataGridView.ClearSelection (columnIndexException, rowIndexException, selectExceptionElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndexException" Type="System.Int32" />
        <Parameter Name="rowIndexException" Type="System.Int32" />
        <Parameter Name="selectExceptionElement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndexException">제외할 열 인덱스입니다.</param>
        <param name="rowIndexException">제외할 행 인덱스입니다.</param>
        <param name="selectExceptionElement">제외된 셀, 행 또는 열을 선택하려면 <see langword="true" />이고, 원래 상태를 유지하려면 <see langword="false" />입니다.</param>
        <summary>지정된 셀을 제외한 모든 셀의 선택을 취소하고 필요한 경우 지정된 셀이 선택되도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A `rowIndexException` 값이-1 열 머리글을 나타내는 및 `columnIndexException` 값-1 행 머리글을 나타냅니다.  
  
 이 메서드는 셀, 행 또는 예외 인덱스에서 나타내는 열의 선택을 취소 하지 않고 현재 선택을 취소 하는 데 유용 합니다.  
  
 경우는 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 속성 값에는 개별 셀을 선택할 수 있습니다,이 메서드를 설정 합니다 <xref:System.Windows.Forms.DataGridViewCell.Selected%2A> 에 있는 각 셀의 속성 `false`, 지정 된 열과 행의 셀을 제외 하 고. 경우는 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 속성 값을 사용 하면 전체 행 또는 열 선택,이 메서드 또한 집합 합니다 <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> 의 각 행 또는 열 속성 `false`, 행 또는 지정 된 셀이 포함 된 열을 제외 하 고 합니다.  
  
 제외 된 셀, 행 또는 열 수도이 메서드가 호출 될 때 선택된 된 상태에서 되지 않을 수 있습니다. 이 메서드는 `selectExceptionElement` 매개 변수 값이 `true`합니다. 선택 모드에 따라 전체 행 또는 열을 선택할 수도 있습니다 결과적으로 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndexException" />이 가장 높은 열 인덱스보다 큰 경우  
  
또는 
 <see cref="P:System.Windows.Forms.DataGridView.SelectionMode" />가 <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect" />일 때 <paramref name="columnIndexException" />이 -1보다 작고, 그 외의 경우에 <paramref name="columnIndexException" />이 0보다 작은 경우  
  
또는 
 <paramref name="rowIndexException" />이 가장 높은 행 인덱스보다 큰 경우  
  
또는 
 <see cref="P:System.Windows.Forms.DataGridView.SelectionMode" />가 <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" />일 때 <paramref name="rowIndexException" />이 -1보다 작고, 그 외의 경우에 <paramref name="rowIndexException" />이 0보다 작은 경우</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectionMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Selected" />
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Selected" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ClipboardCopyMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewClipboardCopyMode ClipboardCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewClipboardCopyMode ClipboardCopyMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipboardCopyMode As DataGridViewClipboardCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewClipboardCopyMode ClipboardCopyMode { System::Windows::Forms::DataGridViewClipboardCopyMode get(); void set(System::Windows::Forms::DataGridViewClipboardCopyMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClipboardCopyMode : System.Windows.Forms.DataGridViewClipboardCopyMode with get, set" Usage="System.Windows.Forms.DataGridView.ClipboardCopyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewClipboardCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 셀 텍스트 값을 <see cref="T:System.Windows.Forms.Clipboard" />에 복사할 수 있는지 여부와 행 및 열 머리글 텍스트가 포함되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithAutoHeaderText" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 컨트롤 선택한 각 셀의 텍스트 표현을 클립보드에 복사 합니다. 이 값은 문자열 또는 이미지 셀의 값을 변환 하는 셀 값을 <xref:System.Windows.Forms.DataGridViewImageCell.Description%2A> 속성입니다.  
  
 값이 클립보드에 복사 됩니다 <xref:System.Windows.Forms.DataFormats.Text>, <xref:System.Windows.Forms.DataFormats.UnicodeText>를 <xref:System.Windows.Forms.DataFormats.Html>, 및 <xref:System.Windows.Forms.DataFormats.CommaSeparatedValue> 형식입니다. 이러한 형식은 Microsoft Excel에서 메모장과 같은 응용 프로그램에 콘텐츠를 붙여 넣을 때 유용 하 고 [!INCLUDE[ofprword](~/includes/ofprword-md.md)]입니다.  
  
 <xref:System.Windows.Forms.DataGridView> 컨트롤 선택한 모든 셀을 포함 하는 가장 작은 사각형에 포함 된 셀을 복사 합니다. 행 및 열 선택된 된 셀을 포함 하지 않는 복사 된 데이터에 표시 되지 않습니다. 나머지 행과 열에서 선택 되지 않은 모든 셀은 빈 자리 표시자로 표시 됩니다. 복사 모드 및 선택 모드에 따라 복사 되는 행 및 열 머리글 값 수 복사할도 합니다.  
  
 사용자가 콘텐츠를 복사 하는 경우는 <xref:System.Windows.Forms.DataGridView> 컨트롤은 추가 <xref:System.Windows.Forms.DataObject> 클립보드로 합니다. 이 데이터 개체에서 검색 되는 <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A> 메서드. 프로그래밍 방식으로 클립보드에 데이터 개체를 추가 하려는 경우이 메서드를 호출할 수 있습니다.  
  
 합니다 <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A> 메서드를 호출 하 여 개별 셀에 대 한 값을 검색 합니다 <xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=nameWithType> 메서드. 추가 데이터 형식을 지원 하기 위해 복사 된 셀의 레이아웃을 사용자 지정 파생된 클래스에서 이러한 메서드 중 하나 또는 모두를 재정의할 수 있습니다.  
  
 클립보드 작업 및 데이터 형식에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.Clipboard> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서 복사를 사용 하도록 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows에서 여러 셀을 클립보드에 복사를 사용 하면 사용자가 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/CS/datagridviewclipboarddemo.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/VB/datagridviewclipboarddemo.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">이 속성을 설정할 때 지정된 값이 유효한 <see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" /> 값이 아닙니다.</exception>
        <altmember cref="T:System.Windows.Forms.Clipboard" />
        <altmember cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />
        <altmember cref="M:System.Windows.Forms.DataGridView.GetClipboardContent" />
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectionMode" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetClipboardContent(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageCell.Description" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnAdded As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnAdded;" />
      <MemberSignature Language="F#" Value="member this.ColumnAdded : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnAdded : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열이 컨트롤에 추가될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnAdded> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnAdded> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#314](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#314)]
 [!code-vb[System.Windows.Forms.EventExamples#314](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#314)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnContextMenuStripChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 <see cref="P:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip" /> 속성이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#315](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#315)]
 [!code-vb[System.Windows.Forms.EventExamples#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#315)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnCount : int with get, set" Usage="System.Windows.Forms.DataGridView.ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에 표시되는 열 수를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" />에 표시되는 열 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 된 <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> 속성을 0에서 모든 열을 제거 합니다는 <xref:System.Windows.Forms.DataGridView>합니다.  
  
 경우 <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> 다시 설정의 현재 값 보다 작은 값으로 열이 끝에서 제거 됩니다는 <xref:System.Windows.Forms.DataGridView.Columns%2A> 컬렉션입니다. 하는 경우 <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> 설정 된 현재 값 보다 큰 값으로 열이 끝에 추가 됩니다는 <xref:System.Windows.Forms.DataGridView.Columns%2A> 컬렉션입니다.  
  
 이 속성을 사용 하 여 사용할 수 있습니다는 <xref:System.Windows.Forms.DataGridView.RowCount%2A> 속성을 간단한 <xref:System.Windows.Forms.DataGridView> 표시 하 고 텍스트를 편집 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, 및 <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> 속성. 또한이 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> 고 <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> 속성입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`, 다음 호출 합니다 `SetUpDataGridView` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기입니다. 모든 이벤트가 해당 이벤트 처리기와 연결 되도록 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">이 속성을 설정할 지정된 값이 0보다 작습니다.</exception>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 속성이 설정되었습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDataPropertyNameChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDataPropertyNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDataPropertyNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDataPropertyNameChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDataPropertyNameChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 <see cref="P:System.Windows.Forms.DataGridViewColumn.DataPropertyName" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#316](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#316)]
 [!code-vb[System.Windows.Forms.EventExamples#316](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#316)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDefaultCellStyleChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 <see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트가 발생할 때의 속성을 <xref:System.Windows.Forms.DataGridViewCellStyle> 반환한를 <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A> 속성 때 또는 열을 새 값으로 설정 됩니다는 <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A> 열에 대 한 속성을 새 <xref:System.Windows.Forms.DataGridViewCellStyle> 다 하나 이상의 속성 값을 사용 하 여는 이전 셀 스타일 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#317](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#317)]
 [!code-vb[System.Windows.Forms.EventExamples#317](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#317)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDisplayIndexChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDisplayIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDisplayIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDisplayIndexChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDisplayIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 <see cref="P:System.Windows.Forms.DataGridViewColumn.DisplayIndex" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#318](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#318)]
 [!code-vb[System.Windows.Forms.EventExamples#318](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#318)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDividerDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler ColumnDividerDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler ColumnDividerDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDividerDoubleClick As DataGridViewColumnDividerDoubleClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnDividerDoubleClickEventHandler ^ ColumnDividerDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler " Usage="member this.ColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>두 열 사이의 구분선을 두 번 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트를 사용 하 여 사용자 열 구분선을 두 번 클릭할 때 발생 하는 자동 크기 조정 동작을 사용자 지정할 수 있습니다. 예를 들어, 많은 수의 행을 사용 하 여 작업 하는 경우 기본 동작을 사용 하 여 성능 저하를 방지 프로그래밍 방식으로 현재 표시 되는 행의 콘텐츠에 따라 열 크기를 조정 하려면이 이벤트를 처리할 수 있습니다.  
  
 열 <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A> 속성은 사용자 수를 두 번 클릭 하는 영역을 확장 하지 않습니다. 구분선의 너비에 확장 된 경우이 속성을 사용 하 여,이 이벤트는 인접 한 열 구분선 사이의 경계를 두 번 클릭할 때 발생 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#319](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#319)]
 [!code-vb[System.Windows.Forms.EventExamples#319](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#319)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDividerWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDividerWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDividerWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDividerWidthChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDividerWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridViewColumn.DividerWidth" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#320](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#320)]
 [!code-vb[System.Windows.Forms.EventExamples#320](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#320)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderCellChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnHeaderCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnHeaderCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeaderCellChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnHeaderCellChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 머리글 셀의 내용이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#323](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#323)]
 [!code-vb[System.Windows.Forms.EventExamples#323](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#323)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeaderMouseClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ ColumnHeaderMouseClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.ColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 머리글을 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 열 머리글을 클릭 하는 경우는 <xref:System.Windows.Forms.DataGridView>, 기본 동작은 클릭 한 열을 기반으로 표 형태 행을 정렬 하거나 표를 아직 클릭 한 열을 기준으로 정렬 하는 경우 정렬 순서를 반대로 합니다. 다음 코드 예제에는 클릭 하면 기본 동작을 에뮬레이션 하는 프로그래밍 방식으로 정렬 하는 데이 이벤트를 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.DataGridViewColumnHeaderCell> 기본 동작을 비활성화 된 경우. 이 예제에서는 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 로 설정 된 <xref:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect>하므로,는 <xref:System.Windows.Forms.DataGridViewColumnHeaderCell> 열의 내용을 선택 합니다. 의도 한 대로 작동 하려면 예제 코드에 대 한 기본 열 머리글에 데이터가 로드 될 때마다 변경 해야 하는 동작을 클릭 합니다 <xref:System.Windows.Forms.DataGridView>합니다. 추가 된 <xref:System.Windows.Forms.DataGridView.DataBindingComplete> 이벤트 처리기를 기본 동작을 변경 하는 코드를 제공 합니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1` 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#160](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#160)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#160](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeaderMouseDoubleClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ ColumnHeaderMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.ColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 머리글을 두 번 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#322](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#322)]
 [!code-vb[System.Windows.Forms.EventExamples#322](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#322)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersBorderStyle As DataGridViewHeaderBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle { System::Windows::Forms::DataGridViewHeaderBorderStyle get(); void set(System::Windows::Forms::DataGridViewHeaderBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersBorderStyle : System.Windows.Forms.DataGridViewHeaderBorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewHeaderBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 머리글에 적용된 테두리 스타일을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A> 속성이 아닌 다른 값으로 설정 되어 <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single>는 <xref:System.Windows.Forms.DataGridView.GridColor%2A> 속성 시스템 색 이어야 합니다.  
  
 이 속성 설정할 수 없습니다는 <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom> 는 읽기 전용으로 지정 하는 값 테두리 스타일을 사용 하 여 사용자 지정 된 값을 <xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A> 속성입니다.  
  
> [!NOTE]
>  통해 응용 프로그램에 대 한 비주얼 스타일을 사용 하는 경우는 <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> 속성이 `true`, 열 머리글은 현재 테마를 사용 하 여 그립니다. 이 예에서 값을 <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A> 를 제외한 모든 열 머리글에 대 한 속성은 무시 됩니다는 <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>, 테마를 적용 하지 되는 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, 및 <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> 속성. 또한이 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> 고 <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> 속성입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는`dataGridView1`, 다음 호출 합니다 `SetUpDataGridView` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기입니다. 모든 이벤트가 해당 이벤트 처리기와 연결 되도록 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">이 속성을 설정할 때 지정된 값이 유효한 <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> 값이 아닙니다.</exception>
        <exception cref="T:System.ArgumentException">이 속성을 설정할 때 지정된 값이 <see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" />입니다.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersBorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersBorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersBorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersBorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersBorderStyleChanged : EventHandler " Usage="member this.ColumnHeadersBorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#262](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#262)]
 [!code-vb[System.Windows.Forms.EventExamples#262](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#262)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle ColumnHeadersDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle ColumnHeadersDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ ColumnHeadersDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>기본 열 머리글 스타일을 가져오거나 설정합니다.</summary>
        <value>기본 열 머리글 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 <xref:System.Windows.Forms.DataGridViewCellStyle> 이 반환한 속성에는 다음 초기 속성 값:  
  
|`DataGridViewCellStyle` 속성|기본값|  
|--------------------------------------|-------------------|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>|<xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=nameWithType> 속성 값|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>|<xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=nameWithType> 속성 값|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>|<xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=nameWithType> 속성 값|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor%2A>|<xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=nameWithType> 속성 값|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>|<xref:System.Windows.Forms.DataGridView.Font%2A> 속성 값|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>|<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft?displayProperty=nameWithType>|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>|<xref:System.Windows.Forms.DataGridViewTriState.True?displayProperty=nameWithType>|  
  
 이러한 값을 통해 설정 된 값을 자동으로 재정의 된 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 속성입니다. 상속 하려면 열 머리글에 적용할를 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 값는 값을 설정 해야 합니다 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A> 기본값으로 개체에 대해 표시를 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스.  
  
 셀 스타일 상속에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
 비주얼 스타일을 사용 하는 경우 및 <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> 로 설정 된 `true`를 제외한 모든 머리글 셀을 <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A> 현재 테마를 사용 하 여 칠해집니다 및 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A> 값은 무시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, 및 <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> 속성. 또한이 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> 고 <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> 속성입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`, 다음 호출 합니다 `SetUpDataGridView` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기입니다. 모든 이벤트가 해당 이벤트 처리기와 연결 되도록 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersDefaultCellStyleChanged : EventHandler " Usage="member this.ColumnHeadersDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 될 때이 이벤트가 발생의 속성을 <xref:System.Windows.Forms.DataGridViewCellStyle> 반환한를 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A> 속성을 새 값으로 설정 됩니다 때나를 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A> 속성이 새 <xref:System.Windows.Forms.DataGridViewCellStyle> 하나 이상의 속성 값이 다른 이전 셀 스타일 개체를 사용 하 여.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#263](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#263)]
 [!code-vb[System.Windows.Forms.EventExamples#263](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#263)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeight">
      <MemberSignature Language="C#" Value="public int ColumnHeadersHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnHeadersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnHeadersHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeight : int with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 머리글 행의 높이(픽셀)를 가져오거나 설정합니다.</summary>
        <value>열 머리글을 포함하는 행의 높이(픽셀)입니다. 기본값은 23입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">이 속성을 설정할 때 지정된 된 값이 최소 높이인 4픽셀보다 작거나 최대 높이인 32768 픽셀보다 큽니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeightChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersHeightChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeightChanged : EventHandler " Usage="member this.ColumnHeadersHeightChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#264](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#264)]
 [!code-vb[System.Windows.Forms.EventExamples#264](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#264)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeightSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersHeightSizeMode As DataGridViewColumnHeadersHeightSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode { System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode get(); void set(System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeightSizeMode : System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 머리글의 높이가 조정 가능한지, 사용자가 이 높이를 조정할 수 있는지, 머리글의 내용에 맞게 높이가 자동으로 조정되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>열 머리글 행의 높이를 조정할 수 있는 모드를 나타내는 <see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" /> 값입니다. 기본값은 <see cref="F:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 설정 된 경우 <xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize>, 사용자가 열 머리글의 높이 조정할 수 없습니다.  
  
 열 머리글의 높이 프로그래밍 방식으로 조정 하려면 사용 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> 메서드 또는 집합을 <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeight%2A> 속성입니다.  
  
 행 머리글에 대 한 크기 조정 모드를 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> 속성입니다.  
  
 열 머리글은 크기를 조정할 때 여러 줄으로 래핑할 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 헤더 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView> 컨트롤 이중 버퍼링을 지원 하지 않습니다. 경우 <xref:System.Windows.Forms.Control.DoubleBuffered%2A> 로 설정 되어 `true` 에서 파생 된 <xref:System.Windows.Forms.DataGridView> 컨트롤에서 열 다시 정렬 하는 경우 또는 행, 열 또는 헤더 크기를 조정할 때 시각적 피드백 받지 않게 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서이 속성을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView> 컨트롤 주로 표시를 위한 것입니다. 이 예제에서는 여러 가지 방법으로 사용자 지정 된 컨트롤의 시각적 모양 및 제한적된으로 상호 작용에 대 한 구성 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">이 속성을 설정할 때 지정된 값이 유효한 <see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" /> 값이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeightSizeModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler ColumnHeadersHeightSizeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeModeEventHandler ColumnHeadersHeightSizeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersHeightSizeModeChanged As DataGridViewAutoSizeModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeModeEventHandler ^ ColumnHeadersHeightSizeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " Usage="member this.ColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#265](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#265)]
 [!code-vb[System.Windows.Forms.EventExamples#265](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#265)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersVisible">
      <MemberSignature Language="C#" Value="public bool ColumnHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColumnHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColumnHeadersVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersVisible : bool with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열 머리글 행의 표시 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>열 머리글이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A> 속성은 `false`, 열입니다 <xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A> 속성이 `true` 여전히 크기 조정할 수 있습니다 (UI) 사용자 인터페이스를 조정할 열의 오른쪽 테두리를 따라 아무 곳 이나 마우스 커서를 놓고 클릭 하 여 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 바인딩되지 않은 채웁니다 <xref:System.Windows.Forms.DataGridView> 컨트롤 집합과 <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A> 속성을 `true` 열 머리글이 표시 되는지 확인 해야 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 지정된 값이 <see langword="false" />이고 하나 이상의 열에 <see cref="P:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode" /> 속성 값이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" />입니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnMinimumWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnMinimumWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnMinimumWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnMinimumWidthChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnMinimumWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 <see cref="P:System.Windows.Forms.DataGridViewColumn.MinimumWidth" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#324](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#324)]
 [!code-vb[System.Windows.Forms.EventExamples#324](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#324)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnNameChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnNameChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnNameChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 <see cref="P:System.Windows.Forms.DataGridViewColumn.Name" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnNameChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnNameChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#325](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#325)]
 [!code-vb[System.Windows.Forms.EventExamples#325](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#325)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnRemoved As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnRemoved;" />
      <MemberSignature Language="F#" Value="member this.ColumnRemoved : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnRemoved : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에서 열을 제거할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnRemoved> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnRemoved> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#326](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#326)]
 [!code-vb[System.Windows.Forms.EventExamples#326](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#326)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As DataGridViewColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumnCollection ^ Columns { System::Windows::Forms::DataGridViewColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Windows.Forms.DataGridViewColumnCollection" Usage="System.Windows.Forms.DataGridView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewColumnCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewColumnCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에 모든 열이 포함되어 있는 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 모든 열을 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Forms.DataGridViewColumnCollection> 이 속성에 의해 반환 열을 추가, 열을 제거 하 고 얻을 수 있습니다에 포함 된 열 개수는 <xref:System.Windows.Forms.DataGridView> 컨트롤입니다. 자세한 내용은 <xref:System.Windows.Forms.DataGridViewColumnCollection>를 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에 바인딩되지 않은 만드는 방법을 보여 줍니다 <xref:System.Windows.Forms.DataGridView>; set를 <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, 및 <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> 속성 및 사용 합니다 <xref:System.Windows.Forms.DataGridView.Rows%2A> 및 <xref:System.Windows.Forms.DataGridView.Columns%2A> 속성입니다. 버전을 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> 및 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> 열 머리글과 행을 적절히 조정 하는 방법입니다. 이 예제를 실행 하려면 다음 코드를 포함 하는 형식으로 붙여넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1` 이라는 단추가 `Button1`를 호출 합니다 `InitializeDataGridView` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기. 모든 이벤트가 해당 이벤트 처리기를 사용 하 여 연결을 확인 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnCollection" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnSortModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnSortModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnSortModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnSortModeChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnSortModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 <see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnSortModeChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnSortModeChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#327](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#327)]
 [!code-vb[System.Windows.Forms.EventExamples#327](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#327)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnStateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnStateChangedEventHandler ColumnStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnStateChangedEventHandler ColumnStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnStateChanged As DataGridViewColumnStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnStateChangedEventHandler ^ ColumnStateChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventHandler " Usage="member this.ColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포커스를 얻거나 잃는 것과 같이 열의 상태가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 다음 열 속성 중 하나의 값에 대 한 변경 될 때 발생 한 <xref:System.Windows.Forms.DataGridViewColumn> 컨트롤에서:  
  
-   <xref:System.Windows.Forms.DataGridViewBand.Displayed%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.ReadOnly%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewBand.Selected%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.Visible%2A>  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnStateChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnStateChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#328](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#328)]
 [!code-vb[System.Windows.Forms.EventExamples#328](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#328)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnToolTipTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnToolTipTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnToolTipTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnToolTipTextChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnToolTipTextChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridViewColumn.ToolTipText" /> 속성 값이 <see cref="T:System.Windows.Forms.DataGridView" />의 열에 대해 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#329](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#329)]
 [!code-vb[System.Windows.Forms.EventExamples#329](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#329)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열의 <see cref="P:System.Windows.Forms.DataGridViewColumn.Width" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#18)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#18)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit (context As DataGridViewDataErrorContexts) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; bool" Usage="dataGridView.CommitEdit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">오류 발생 가능한 컨텍스트를 지정하는 <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 값의 비트 조합입니다.</param>
        <summary>편집 모드를 끝내지 않고 현재 셀의 변경 내용을 데이터 캐시에 커밋합니다.</summary>
        <returns>변경 내용이 커밋되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 기본 셀 데이터 형식으로 서식이 지정 된, 사용자 지정 값을 변환 하려고 합니다. 발생이 작업을 수행 하는 <xref:System.Windows.Forms.DataGridView.CellParsing> 형식 변환에 맞게 처리할 수 있는 이벤트입니다. 그렇지 않은 경우 기본 형식 변환기가 사용 됩니다. 변환 오류가 발생 하는 경우 예외가 발생 수를 <xref:System.Windows.Forms.DataGridView.DataError> 않도록 이벤트가 처리 되지 않은 합니다. 커밋된 데이터에는 값이 성공적으로 변환 하는 경우를 발생 시키는 저장 합니다 <xref:System.Windows.Forms.DataGridView.CellValuePushed> 비 바운드 데이터에 대 한 이벤트를 셀 때를 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성 값이 `true`. 값이 성공적으로 커밋된 경우는 <xref:System.Windows.Forms.DataGridView.CellValueChanged> 이벤트가 발생 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 호출을 <xref:System.Windows.Forms.DataGridView.CommitEdit%2A> 메서드 내에서 <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged> 발생 시키는 이벤트 처리기는 <xref:System.Windows.Forms.DataGridView.CellValueChanged> 이벤트입니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 사용 안 함 단추 단추 열에 Windows Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">셀 값을 커밋할 수 없으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기의 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성이 <see langword="true" />로 설정되어 있습니다.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueChanged" />
        <altmember cref="Overload:System.Windows.Forms.DataGridView.EndEdit" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에 대해 액세스 가능한 개체를 새로 만듭니다.</summary>
        <returns><see cref="T:System.Windows.Forms.DataGridView.DataGridViewAccessibleObject" />에 대한 새 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateColumnsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridViewColumnCollection CreateColumnsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridViewColumnCollection CreateColumnsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateColumnsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateColumnsInstance () As DataGridViewColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridViewColumnCollection ^ CreateColumnsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateColumnsInstance : unit -&gt; System.Windows.Forms.DataGridViewColumnCollection&#xA;override this.CreateColumnsInstance : unit -&gt; System.Windows.Forms.DataGridViewColumnCollection" Usage="dataGridView.CreateColumnsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>새 <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />을 만들어 반환합니다.</summary>
        <returns>빈 <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />입니다.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="dataGridView.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView.DataGridViewControlCollection" /> 형식으로 캐스팅될 수 있는 새 <see cref="T:System.Windows.Forms.Control.ControlCollection" />을 만들어 반환합니다.</summary>
        <returns>빈 <see cref="T:System.Windows.Forms.Control.ControlCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Windows.Forms.Control.Controls%2A> 속성 값을 초기화 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridViewRowCollection CreateRowsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridViewRowCollection CreateRowsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateRowsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRowsInstance () As DataGridViewRowCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridViewRowCollection ^ CreateRowsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateRowsInstance : unit -&gt; System.Windows.Forms.DataGridViewRowCollection&#xA;override this.CreateRowsInstance : unit -&gt; System.Windows.Forms.DataGridViewRowCollection" Usage="dataGridView.CreateRowsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>새 <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />을 만들어 반환합니다.</summary>
        <returns>빈 <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />입니다.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell CurrentCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell CurrentCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CurrentCell" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentCell As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ CurrentCell { System::Windows::Forms::DataGridViewCell ^ get(); void set(System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCell : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.CurrentCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 활성화된 셀을 가져오거나 설정합니다.</summary>
        <value>현재 셀을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewCell" />이거나, 현재 셀이 없는 경우 <see langword="null" />입니다. 기본값은 첫 번째 열의 첫 번째 셀이거나, 컨트롤에 셀이 없는 경우 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 셀으로 셀으로 설정 하면 현재 표시 되지 않으면 뷰로 스크롤됩니다. 현재 셀에는 숨겨진된 행 또는 열 머리글 셀을, 비활성화 된 셀 또는 셀 일 수 없습니다.  
  
 이 속성을 설정할 수 있습니다 `null` 를 일시적으로 포커스 영역을 제거 하지만 때 컨트롤이 포커스를 받을 하 고이 속성의 값이 `null`의 값으로 설정 됩니다는 <xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A> 속성입니다.  
  
 이 속성의 값을 변경 합니다 <xref:System.Windows.Forms.DataGridView.SelectionChanged> 이벤트가 발생 하기 전에 <xref:System.Windows.Forms.DataGridView.CurrentCellChanged> 이벤트. 모든 <xref:System.Windows.Forms.DataGridView.SelectionChanged> 이벤트 처리기에 액세스 하는 <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> 이 이번에는 속성은 이전 값을 가져옵니다.  
  
 바인딩하는 경우는 <xref:System.Windows.Forms.DataGridView> 외부 데이터 원본에이 속성이 해당 기본값으로 다시 설정 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하 여 정렬 한 후 현재 셀에 표시 되는지 확인 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A> 셀에는 속성을 통해 검색할는 <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> 속성입니다. 이 코드는 바인딩되지 않은 에서만 작동 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 사용 하 여는 <xref:System.Windows.Forms.DataGridView> 외부 데이터 원본에 바인딩된 컨트롤을 정렬할 때 현재 셀에 자동으로 유지 되지 않습니다.  
  
 이 예제를 실행 하려면 다음 코드를 포함 하는 형식으로 붙여넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`합니다. C#의 연결도 해야 합니다는 <xref:System.Windows.Forms.DataGridView.Sorted> 이벤트를 이벤트 처리기입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#150)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#150)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 셀에 대한 변경 내용을 커밋하거나 취소할 수 없기 때문에 이 속성의 값을 설정할 수 없습니다.  
  
또는 
이 속성을 설정할 때 지정된 셀이 숨겨진 행 또는 열 내에 있습니다.  
  
재진입 호출은 <see cref="T:System.Windows.Forms.DataGridView" />가 <see cref="P:System.Windows.Forms.DataGridView.DataSource" />에 바인딩될 때만 허용됩니다. 재진입 호출은 기본 데이터의 변경으로 인해 발생합니다.</exception>
        <exception cref="T:System.ArgumentException">이 속성을 설정할 때 지정된 셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 내에 있지 않습니다.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentRow" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SelectionChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridView.FirstDisplayedCell" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/get-and-set-the-current-cell-wf-datagridview-control.md">방법: Windows Forms DataGridView 컨트롤에서 현재 셀 가져오기 및 설정</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellAddress">
      <MemberSignature Language="C#" Value="public System.Drawing.Point CurrentCellAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point CurrentCellAddress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CurrentCellAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentCellAddress As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point CurrentCellAddress { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCellAddress : System.Drawing.Point" Usage="System.Windows.Forms.DataGridView.CurrentCellAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 활성화된 셀의 행 및 열 인덱스를 가져옵니다.</summary>
        <value>현재 활성화된 셀의 행 및 열 인덱스를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 셀에 직접 액세스 하지 않고 현재 셀의 열과 행을 확인 하려면이 속성을 사용 합니다. 이 공유 행을 해제 하지 않으려면 유용 합니다. 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A> 행 그리기 시나리오에서는 속성입니다. 예제에서는이 속성은 사용 하 여 현재 셀의 행 인덱스를 저장 합니다. 사용자의 다른 행으로 현재 셀 바뀌면 행을 강제로 그려집니다.  
  
 이 코드는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#19)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#19)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentCellChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentCellChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentCellChanged : EventHandler " Usage="member this.CurrentCellChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.CurrentCell" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#19)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#19)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellDirtyStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentCellDirtyStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentCellDirtyStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentCellDirtyStateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentCellDirtyStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentCellDirtyStateChanged : EventHandler " Usage="member this.CurrentCellDirtyStateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 내용이 변경되어 셀의 상태가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 셀은 내용이 변경 되었지만 변경 내용이 저장 되지 않은 경우 수정 된 것으로 표시 됩니다.  
  
 이 이벤트는 일반적으로 셀이 편집 하지만 변경 데이터 캐시에 커밋되지 않은 경우 또는 편집 작업 취소 될 때 발생 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged> 이벤트입니다. 이 예제에서는 이벤트 처리기를 호출 합니다 <xref:System.Windows.Forms.DataGridView.CommitEdit%2A> 발생 하는 방법을 <xref:System.Windows.Forms.DataGridView.CellValueChanged> 이벤트의 현재 값을 결정을 <xref:System.Windows.Forms.DataGridViewCheckBoxCell>입니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 사용 안 함 단추 단추 열에 Windows Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentRow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow CurrentRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow CurrentRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CurrentRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentRow As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ CurrentRow { System::Windows::Forms::DataGridViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentRow : System.Windows.Forms.DataGridViewRow" Usage="System.Windows.Forms.DataGridView.CurrentRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 셀이 들어 있는 행을 가져옵니다.</summary>
        <value>현재 셀이 포함된 행을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewRow" />이거나 현재 셀이 없는 경우 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 행을 변경 하려면 설정 해야 합니다는 <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> 원하는 행의 셀에는 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DataBindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewBindingCompleteEventHandler DataBindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewBindingCompleteEventHandler DataBindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataBindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataBindingComplete As DataGridViewBindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewBindingCompleteEventHandler ^ DataBindingComplete;" />
      <MemberSignature Language="F#" Value="member this.DataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventHandler " Usage="member this.DataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewBindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩 작업이 완료된 다음 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 데이터의 내용을 소스 변경 하거나 값을 <xref:System.Windows.Forms.DataGridView.DataSource%2A>, <xref:System.Windows.Forms.DataGridView.DataMember%2A>, 또는 <xref:System.Windows.Forms.Control.BindingContext%2A> 속성 변경 합니다.  
  
 이 이벤트를 처리 유용한 예를 들어 프로그래밍 방식으로 행 및 열을 기준으로 콘텐츠 업데이트 크기를 조정 하려면. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView_NeededEvents#05](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/CS/Form1.cs#05)]
 [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#05](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/VB/Form1.vb#05)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataMember" />
        <altmember cref="P:System.Windows.Forms.Control.BindingContext" />
        <altmember cref="E:System.Windows.Forms.CurrencyManager.ListChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As DataGridViewDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.DataGridViewDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.DataGridViewDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>외부 데이터 구문 분석 또는 유효성 검사 작업에서 예외가 throw되거나 데이터 소스에 데이터를 커밋하려는 시도가 실패한 경우 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.DataError> 이벤트를 사용 하면 데이터 처리 작업 중 컨트롤에 의해 호출 되는 코드에서 throw 된 예외를 처리할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> 하 고 <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A> 의 속성을 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs> 일반적으로이 이벤트와 연결 된 개체 데이터 오류가 발생 한 셀을 나타냅니다. 하지만 외부 데이터 원본에서 오류가 발생, 데이터 원본을 제공할 수 없습니다 오류가 발생 한 열. 이 경우에 <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> 속성 오류 시 일반적으로 현재 셀의 열을 나타냅니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.DataGridView.DataError> 이벤트 처리기입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 클래스 개요 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Windows.Forms.DataGridView.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에 데이터가 표시되는 데이터 소스의 목록 또는 테이블에 대한 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Windows.Forms.DataGridView.DataSource" />에 데이터가 표시되는 <see cref="T:System.Windows.Forms.DataGridView" />의 테이블 또는 목록에 대한 이름입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 여러 목록 또는 테이블을 포함 하는 데이터 소스에 바인딩하는 경우에 유용 합니다. 단일 목록 또는 테이블을 포함 하는 데이터 소스에 바인딩하는 경우이 속성을 설정할 필요가 없습니다. 예를 들어, 바인딩할 수 있습니다는 <xref:System.Windows.Forms.DataGridView> 컨트롤을 <xref:System.Data.DataSet> 이 속성을 설정 하지 않고 단일 테이블을 포함 하는 합니다. 하지만 경우는 <xref:System.Data.DataSet> 여러 테이블을 포함 테이블 중 하나의 이름으로이 속성을 설정 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성에 대 한 일반적인 사용법을 보여 줍니다. 예에서를 <xref:System.Windows.Forms.DataGridView> 라는 컨트롤 `customersDataGridView` 바인딩되는 <xref:System.Data.DataSet> 라는 `customersDataSet`합니다. 이 <xref:System.Data.DataSet> "Customers" 라는 테이블을 포함 합니다. <xref:System.Windows.Forms.DataGridView.DataMember%2A> 속성 테이블의 이름으로 설정 됩니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#020](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#020)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#020](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#020)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">데이터 소스에서 오류가 발생했을 때 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="T:System.Data.DataSet" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DataMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataMemberChanged;" />
      <MemberSignature Language="F#" Value="member this.DataMemberChanged : EventHandler " Usage="member this.DataMemberChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.DataMember" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.DataMemberChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.DataMemberChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#266](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#266)]
 [!code-vb[System.Windows.Forms.EventExamples#266](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#266)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.DataGridView.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에 데이터가 표시되는 데이터 소스를 가져오거나 설정합니다.</summary>
        <value>표시할 <see cref="T:System.Windows.Forms.DataGridView" />에 대한 데이터가 포함된 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 클래스는 표준 Windows Forms 데이터 바인딩 모델을 지원 합니다. 즉, 데이터 소스는 다음 인터페이스 중 하나를 구현 하는 모든 형식일 수 있습니다.  
  
-   <xref:System.Collections.IList> 인터페이스를 1 차원 배열을 포함 합니다.  
  
-   <xref:System.ComponentModel.IListSource> 와 같은 인터페이스를 <xref:System.Data.DataTable> 및 <xref:System.Data.DataSet> 클래스입니다.  
  
-   합니다 <xref:System.ComponentModel.IBindingList> 와 같은 인터페이스를 <xref:System.ComponentModel.BindingList%601> 클래스입니다.  
  
-   합니다 <xref:System.ComponentModel.IBindingListView> 와 같은 인터페이스를 <xref:System.Windows.Forms.BindingSource> 클래스입니다.  
  
 특정 예제를 보려면 예제 부분 및 끝이 섹션의 작업 테이블을 참조 하세요.  
  
 일반적으로 바인딩할를 <xref:System.Windows.Forms.BindingSource> 구성 요소 및 바인딩은 <xref:System.Windows.Forms.BindingSource> 구성 요소를 다른 데이터 원본 또는 비즈니스 개체를 입력 합니다. <xref:System.Windows.Forms.BindingSource> 다양 한 데이터 원본에 바인딩할 수 있습니다 하 고 많은 데이터 바인딩 문제를 자동으로 해결할 수 있기 때문에 구성 요소는 기본 데이터 원본입니다.  
  
 여러 목록 또는 테이블을 포함 하는 데이터 소스에 바인딩할 경우 설정 해야 합니다는 <xref:System.Windows.Forms.DataGridView.DataMember%2A> 목록 또는 바인딩할 테이블을 지정 하는 문자열 속성입니다. 바인딩할 때를 <xref:System.Windows.Forms.BindingSource> 설정할 수 있지만 여러 목록 또는 테이블을 포함 하는 구성 요소를 <xref:System.Windows.Forms.BindingSource.DataMember%2A> 의 속성을 <xref:System.Windows.Forms.BindingSource> 구성 요소 대신.  
  
 개체 컬렉션 대신 데이터베이스의 데이터를 바인딩하는 경우 일반적으로 설정한 합니다 <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> 반환 하는 개체의 속성을 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 속성을 `null` 의 기본값을 사용 하는 대신 <xref:System.DBNull.Value?displayProperty=nameWithType>는 데이터베이스 데이터에 적합 합니다.  
  
 자세한 내용은 [Windows Forms DataGridView 컨트롤에서 데이터 표시](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)합니다. 다음 표에서 관련 된 일반적인 작업에 대 한 직접 링크를 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성입니다.  
  
 [연습: Forms DataGridView 컨트롤을 두 개의 Windows를 사용 하 여 마스터/세부 폼 만들기](~/docs/framework/winforms/controls/creating-a-master-detail-form-using-two-datagridviews.md) 고 [방법: Windows Forms DataGridView 컨트롤에 개체 바인딩](~/docs/framework/winforms/controls/how-to-bind-objects-to-windows-forms-datagridview-controls.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 간단한 데이터 바인딩된을 초기화 하는 방법을 보여 줍니다 <xref:System.Windows.Forms.DataGridView>합니다. 설정 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성입니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">데이터 소스에서 오류가 발생했을 때 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingListView" />
        <altmember cref="T:System.Windows.Forms.BindingSource" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataMember" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤에서 데이터 표시</related>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.DataSourceChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.DataSourceChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#267](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#267)]
 [!code-vb[System.Windows.Forms.EventExamples#267](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#267)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ DefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>다른 셀 스타일 속성이 설정되어 있지 않은 경우 <see cref="T:System.Windows.Forms.DataGridView" />의 셀에 적용될 기본 셀 스타일을 가져오거나 설정합니다.</summary>
        <value>기본 스타일로 적용할 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 셀에 의해 지정 된 스타일을 사용 하 여 셀을 표시 하는 컨트롤 <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> 형식의 다른 속성에서 스타일을 상속 하는 속성인 <xref:System.Windows.Forms.DataGridViewCellStyle>합니다. 통해 지정 된 스타일을 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 속성에 다음 속성을 통해 지정 된 스타일에 의해 재정의 된 경우를 제외한 모든 셀에 영향을 합니다.  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>  
  
 자세한 내용은 [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
 이 속성을 가져올 때를 <xref:System.Windows.Forms.DataGridViewCellStyle> 기본값은 값이 생성 됩니다 속성이 아직 액세스 하지 않은 경우. 여러 행에 대 한이 속성을 가져올 때 성능에 주는 영향이 발생할 수 있습니다. 가능 하면 단일 사용 <xref:System.Windows.Forms.DataGridViewCellStyle> 여러 행에 대해이 속성을 설정 합니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서이 속성을 사용 하는 <xref:System.Windows.Forms.DataGridView> 표시 데 주로 합니다. 이 예제에서는 여러 가지 방법으로 사용자 지정 된 컨트롤의 시각적 모양 및 제한적된으로 상호 작용에 대 한 구성 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyleChanged : EventHandler " Usage="member this.DefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 될 때이 이벤트가 발생의 속성을 <xref:System.Windows.Forms.DataGridViewCellStyle> 반환한를 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 속성이 새 값으로 설정 됩니다 때나를 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 속성이 새 <xref:System.Windows.Forms.DataGridViewCellStyle> 하나 이상의 속성 값이 다른 이전 셀 스타일 개체를 사용 하 여 .  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.DefaultCellStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.DefaultCellStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#268](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#268)]
 [!code-vb[System.Windows.Forms.EventExamples#268](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#268)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.DataGridView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 기본 초기 크기를 가져옵니다.</summary>
        <value>컨트롤의 초기 크기(너비 240픽셀 x 높이 150픽셀)를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValuesNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler DefaultValuesNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler DefaultValuesNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DefaultValuesNeeded As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ DefaultValuesNeeded;" />
      <MemberSignature Language="F#" Value="member this.DefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.DefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>기본값으로 채워질 수 있도록 사용자가 새 레코드에 대한 행을 입력할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트를 사용 하면 사용자가 행을 입력 하는 경우 새 레코드에 대 한 행을 채울 수 있습니다. 행에 대 한 초기 값을 가져오는 <xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A> 의 속성을 <xref:System.Windows.Forms.DataGridViewCell> 각 열에서 반환 된 <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> 속성.  
  
 데이터 바인딩된 모드에서는 모든 셀 바인딩된 열은 외부 데이터 원본에 저장 된 데이터에 대 한 값입니다. 하기 전에 데이터 원본에 새 행을 만들 사용자가 새 레코드에 대 한 행을 입력 합니다 <xref:System.Windows.Forms.DataGridView.DefaultValuesNeeded> 이벤트가 발생 합니다. 채울 경우는 <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row%2A?displayProperty=nameWithType> 속성 값이 이벤트 처리기에서 데이터 원본에 직접 추가 됩니다.  
  
 이 이벤트가 발생 한 후의 가상 모드에는 <xref:System.Windows.Forms.DataGridView.CellValuePushed> 이벤트가 새 행의 각 셀에 대 한 사용자 지정 데이터 저장소의 기본 값을 저장할 수 있습니다. 그런 다음, <xref:System.Windows.Forms.DataGridView.CellValueNeeded> 에 저장 된 값을 검색 하는 새 행의 각 셀에 대 한 이벤트가 발생 합니다 <xref:System.Windows.Forms.DataGridView.CellValuePushed> 다음 표시 되는 이벤트입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트를 처리할 수 있는 방법을 보여 줍니다. 예제에서는 지정 된 열에 대 한 셀은 기본 값으로 채워집니다. 에 대 한는 `CustomerID` 열, 값이 고유한 고객 ID를 생성 하는 별도 메서드 (구현 되지 않음)에서 검색 됩니다  
  
 이 예제를 실행 하려면 열 이름을에서 실제 열 개체의 이름으로 대체 <xref:System.Windows.Forms.DataGridView> 제어 하 고 적절 한 기본값을 제공 합니다. 이름별으로 열을 지정할 때 열 개체와 열 머리글 텍스트가 아니라 개체의 이름을 사용 해야 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#120)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#120)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayedColumnCount">
      <MemberSignature Language="C#" Value="public int DisplayedColumnCount (bool includePartialColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DisplayedColumnCount(bool includePartialColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.DisplayedColumnCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisplayedColumnCount (includePartialColumns As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DisplayedColumnCount(bool includePartialColumns);" />
      <MemberSignature Language="F#" Value="member this.DisplayedColumnCount : bool -&gt; int" Usage="dataGridView.DisplayedColumnCount includePartialColumns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePartialColumns" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePartialColumns">표시된 열 수에 부분 열을 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>사용자에게 표시된 열의 수를 반환합니다.</summary>
        <returns>사용자에게 표시된 열의 수입니다.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayedRowCount">
      <MemberSignature Language="C#" Value="public int DisplayedRowCount (bool includePartialRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DisplayedRowCount(bool includePartialRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.DisplayedRowCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisplayedRowCount (includePartialRow As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DisplayedRowCount(bool includePartialRow);" />
      <MemberSignature Language="F#" Value="member this.DisplayedRowCount : bool -&gt; int" Usage="dataGridView.DisplayedRowCount includePartialRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePartialRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePartialRow">표시된 행 수에 부분 행을 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>사용자에게 표시된 행의 수를 반환합니다.</summary>
        <returns>사용자에게 표시된 행의 수입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRectangle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Rectangle DisplayRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DisplayRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DisplayRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DisplayRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle DisplayRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.DataGridView.DisplayRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 표시 영역을 나타내는 사각형을 가져옵니다.</summary>
        <value>컨트롤의 표시 영역을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.DisplayRectangle%2A> 속성 표시 되는 모든 스크롤 막대의 영역을 포함 하지 않고 컨트롤의 표시 영역의 클라이언트 사각형을 반환 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="P:System.Windows.Forms.DataGridView.DisplayRectangle" /> 기본 클래스를 사용 하는 파생된 클래스에서 속성 <see cref="P:System.Windows.Forms.DataGridView.DisplayRectangle" /> 속성을 기본 구현을 확장 합니다. 또는 전체 구현을 제공 해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dataGridView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary><see cref="T:System.Windows.Forms.Control" />과 해당 자식 컨트롤에서 사용하는 관리되지 않는 리소스를 해제하고, 필요에 따라 관리되는 리소스를 해제할 수도 있습니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EditingControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control EditingControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control EditingControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EditingControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ EditingControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingControl : System.Windows.Forms.Control" Usage="System.Windows.Forms.DataGridView.EditingControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집 컨트롤이 있는 셀이 편집 모드인 경우 현재 셀에 의해 호스팅되는 컨트롤을 가져옵니다.</summary>
        <value>현재 셀에 의해 호스팅되는 <see cref="T:System.Windows.Forms.Control" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 반환 하는 경우 셀이 편집 모드로 또는 셀 형식 편집 컨트롤을 허용 하지 않습니다 `null`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 지정 셀 형식의 재정의 된 메서드에서이 속성을 사용 하는 방법을 보여 줍니다. 예제에서는 편집 컨트롤에 대 한 참조를 검색, 사용자 지정 편집 컨트롤 형식으로 캐스팅 되어 다음 셀의 현재 값으로 채워집니다.  
  
 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: DataGridView 셀에서 Windows Forms 컨트롤 호스팅](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#210](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#210)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#210)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EditingControlShowing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewEditingControlShowingEventHandler EditingControlShowing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewEditingControlShowingEventHandler EditingControlShowing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.EditingControlShowing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingControlShowing As DataGridViewEditingControlShowingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewEditingControlShowingEventHandler ^ EditingControlShowing;" />
      <MemberSignature Language="F#" Value="member this.EditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventHandler " Usage="member this.EditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewEditingControlShowingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 편집을 위한 컨트롤이 표시될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 셀이 편집 모드로 전환 하는 경우 편집 컨트롤의 사용자 지정 초기화를 수행 하려면이 이벤트를 처리할 수 있습니다. 컨트롤의 표시 특성을 사용자 지정 하려면 반환 하는 개체의 속성을 설정 합니다 <xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle%2A?displayProperty=nameWithType> 속성입니다. 다른 초기화를 수행 하려면 값을 캐스팅 합니다 <xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control%2A?displayProperty=nameWithType> 속성을 특정 컨트롤 형식 및 멤버에 직접 액세스 합니다. 예를 들어 처리할 수 있습니다는 <xref:System.Windows.Forms.DataGridView.EditingControlShowing> 편집 컨트롤의 이벤트에 이벤트 처리기를 연결 하는 이벤트입니다.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView> 컨트롤 한 번에 편집 컨트롤을 호스트 하 고 셀 유형을 편집 간에 변경 되지 않으므로 때마다 편집 컨트롤을 다시 사용 합니다. 편집 컨트롤에 이벤트 처리기를 연결할 때 따라서 여러 번 동일한 처리기를 연결 하지 않도록 예방 조치를 수행 해야 합니다. 이 문제를 방지 하려면 이벤트 처리기를 연결 하기 전에 이벤트 처리기를 제거 합니다. 이 처리기가 이미 이벤트에 연결 하는 경우 중복 되지 않습니다 하지만 그렇지 않은 경우 영향을 주지 않습니다. 자세한 내용은 참조의 예제 코드는 <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> 클래스 개요입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트를 처리 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> 현재 셀의 속성입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1` 있는지 확인 합니다 <xref:System.Windows.Forms.DataGridView.EditingControlShowing> 이벤트는 이벤트 처리기를 사용 하 여 연결 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#210](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#210)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#210)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
        <altmember cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EditingPanel">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Panel EditingPanel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Panel EditingPanel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EditingPanel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanel As Panel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Panel ^ EditingPanel { System::Windows::Forms::Panel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingPanel : System.Windows.Forms.Panel" Usage="System.Windows.Forms.DataGridView.EditingPanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Panel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.EditingControl" />이 포함된 패널을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.Panel" />이 포함된 <see cref="P:System.Windows.Forms.DataGridView.EditingControl" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 달리 합니다 <xref:System.Windows.Forms.DataGridView.EditingControl%2A> 속성, 즉 `null` 때 현재 셀이 편집 모드에는 <xref:System.Windows.Forms.DataGridView.EditingPanel%2A> 속성은 항상 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView.EditingPanel%2A> 속성에는 <xref:System.Windows.Forms.DataGridView> 컨트롤을 시각적으로 편집 모드에 있을 때 셀을 구분 합니다. 이 예제는 <xref:System.Windows.Forms.Panel.BorderStyle%2A> 셀의 편집 패널으로 설정 되어 <xref:System.Windows.Forms.BorderStyle.Fixed3D>입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#069](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#069)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#069](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#069)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EditMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewEditMode EditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewEditMode EditMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property EditMode As DataGridViewEditMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewEditMode EditMode { System::Windows::Forms::DataGridViewEditMode get(); void set(System::Windows::Forms::DataGridViewEditMode value); };" />
      <MemberSignature Language="F#" Value="member this.EditMode : System.Windows.Forms.DataGridViewEditMode with get, set" Usage="System.Windows.Forms.DataGridView.EditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewEditMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 편집 시작 방식을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewEditMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 <xref:System.Windows.Forms.DataGridViewEditMode> 값을 제외 하 고 <xref:System.Windows.Forms.DataGridViewEditMode.EditProgrammatically> 허용할 사용자를 편집 하려면 셀을 두 번 클릭 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 간단한 데이터 바인딩된을 초기화 하는 방법을 보여 줍니다 <xref:System.Windows.Forms.DataGridView>합니다. 설정 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView.EditMode%2A> 속성입니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">이 속성을 설정할 때 지정된 값이 유효한 <see cref="T:System.Windows.Forms.DataGridViewEditMode" /> 값이 아닙니다.</exception>
        <exception cref="T:System.Exception">이 속성을 설정할 때 지정한 값에 의해 컨트롤이 편집 모드로 들어가지만 편집 셀 값의 초기화가 실패하고 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EditModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EditModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EditModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.EditModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EditModeChanged;" />
      <MemberSignature Language="F#" Value="member this.EditModeChanged : EventHandler " Usage="member this.EditModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.EditMode" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.EditModeChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.EditModeChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#269](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#269)]
 [!code-vb[System.Windows.Forms.EventExamples#269](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#269)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EnableHeadersVisualStyles">
      <MemberSignature Language="C#" Value="public bool EnableHeadersVisualStyles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHeadersVisualStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHeadersVisualStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHeadersVisualStyles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHeadersVisualStyles : bool with get, set" Usage="System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>비주얼 스타일이 응용 프로그램에 대해 활성화된 경우 행 및 열 머리글이 사용자의 현재 테마에 대한 비주얼 스타일을 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>머리글에 대해 비주얼 스타일이 활성화되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하 여 응용 프로그램에 대 한 비주얼 스타일을 설정할 수 있습니다.는 <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> 메서드를 호출 하기 전에 <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> 메서드. 경우 <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> 로 설정 된 `true`를 제외한 모든 머리글 셀을 <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A> 현재 테마를 사용 하 여 칠해집니다.  
  
   
  
## Examples  
 다음 코드 예제는 비주얼 스타일을 사용 하는 응용 프로그램에서 행 및 열 머리글에 대 한 비주얼 스타일을 사용 하지 않도록 설정 하는 방법에 설명 합니다. 이 예제에서는 비주얼 스타일이 활성화 된 응용 프로그램에 대 한 호출 하 여 합니다 <xref:System.Windows.Forms.Application.EnableVisualStyles%2A> 의 메서드 `Main`합니다. 그러나 비주얼 스타일이 적용 되지 것입니다 행 및 열 머리글에 있으므로 <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> 로 설정 된 `false`합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="Overload:System.Windows.Forms.Application.Run" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndEdit">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>현재 셀에 대한 편집 작업을 커밋한 다음 끝냅니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public bool EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function EndEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; bool" Usage="dataGridView.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 오류 컨텍스트를 사용하여 현재 셀에 대한 편집 작업을 커밋한 다음 끝냅니다.</summary>
        <returns>편집 작업이 커밋되어 종료되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출 합니다 <xref:System.Windows.Forms.DataGridView.EndEdit%2A> 의 조합에 전달 하는 오버 로드 된 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Parsing> 및 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> 값.  
  
 이 메서드는 <xref:System.Windows.Forms.DataGridView.CellEndEdit> 이벤트입니다.  
  
 사용 하 여 오류 처리 되지 않은 경우이 메서드는 예외가 발생할 수 있습니다는 <xref:System.Windows.Forms.DataGridView.DataError> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">셀 값을 커밋할 수 없으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기의 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성이 <see langword="true" />로 설정되어 있습니다.</exception>
        <altmember cref="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public bool EndEdit (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndEdit(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndEdit (context As DataGridViewDataErrorContexts) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndEdit(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="member this.EndEdit : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; bool" Usage="dataGridView.EndEdit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">오류 발생 가능한 컨텍스트를 지정하는 <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 값의 비트 조합입니다.</param>
        <summary>지정된 오류 컨텍스트를 사용하여 현재 셀에 대한 편집 작업을 커밋한 다음 끝냅니다.</summary>
        <returns>편집 작업이 커밋되어 종료되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Windows.Forms.DataGridView.CellEndEdit> 이벤트입니다.  
  
 사용 하 여 오류 처리 되지 않은 경우이 메서드는 예외가 발생할 수 있습니다는 <xref:System.Windows.Forms.DataGridView.DataError> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">셀 값을 커밋할 수 없으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기의 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성이 <see langword="true" />로 설정되어 있습니다.</exception>
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell FirstDisplayedCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell FirstDisplayedCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedCell" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDisplayedCell As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ FirstDisplayedCell { System::Windows::Forms::DataGridViewCell ^ get(); void set(System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedCell : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.FirstDisplayedCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에 현재 표시되는 첫 번째 셀을 가져오거나 설정합니다. 일반적으로 이 셀은 왼쪽 위 모퉁이에 있습니다.</summary>
        <value>컨트롤에 현재 표시되는 첫 번째 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 첫 번째 행과 열 컨트롤에 현재 표시 된 셀을 인지 합니다.이 속성을 사용할 수 있습니다. 일반적으로이 왼쪽된 위 모퉁이에서 이지만 오른쪽에서 왼쪽 언어에 대 한 오른쪽 위 모퉁이에서. 또한이 속성을 표시 된 셀에 컨트롤을 스크롤을 설정할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 정렬 한 후 현재 셀에 표시 되는지 확인 하는 방법을 보여 줍니다. 이 코드는 바인딩되지 않은 에서만 작동 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 사용 하 여는 <xref:System.Windows.Forms.DataGridView> 외부 데이터 원본에 바인딩된 컨트롤을 정렬할 때 현재 셀에 자동으로 유지 되지 않습니다.  
  
 이 예제를 실행 하려면 다음 코드를 포함 하는 형식으로 붙여넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`합니다. C#의 연결도 해야 합니다는 <xref:System.Windows.Forms.DataGridView.Sorted> 이벤트를 이벤트 처리기입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#150)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#150)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">이 속성을 설정할 때 지정된 셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 내에 있지 않습니다.</exception>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 지정된 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /> 또는 <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 속성 값이 -1이며, 이는 머리글 셀 또는 공유 셀임을 나타냅니다.  
  
또는 
이 속성을 설정할 때 지정된 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.Visible" /> 속성 값이 <see langword="false" />입니다.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedScrollingColumnHiddenWidth">
      <MemberSignature Language="C#" Value="public int FirstDisplayedScrollingColumnHiddenWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstDisplayedScrollingColumnHiddenWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstDisplayedScrollingColumnHiddenWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstDisplayedScrollingColumnHiddenWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedScrollingColumnHiddenWidth : int" Usage="System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 스크롤되어 보이지 않는 열의 일부분에 대한 너비를 가져옵니다.</summary>
        <value>스크롤되어 보이지 않는 열의 일부분에 대한 너비입니다.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedScrollingColumnIndex">
      <MemberSignature Language="C#" Value="public int FirstDisplayedScrollingColumnIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstDisplayedScrollingColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDisplayedScrollingColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstDisplayedScrollingColumnIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedScrollingColumnIndex : int with get, set" Usage="System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에 표시된 첫 번째 열의 인덱스를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" />에 표시된 첫 번째 열의 인덱스입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">이 속성을 설정할 때 지정된 값이 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우</exception>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 지정된 값이 <see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" /> 속성 값이 <see langword="false" />인 열을 나타내는 경우  
  
또는 
이 속성을 설정할 때 지정된 값이 <see cref="P:System.Windows.Forms.DataGridViewColumn.Frozen" /> 속성 값이 <see langword="true" />인 열을 나타내는 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedScrollingRowIndex">
      <MemberSignature Language="C#" Value="public int FirstDisplayedScrollingRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstDisplayedScrollingRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDisplayedScrollingRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstDisplayedScrollingRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedScrollingRowIndex : int with get, set" Usage="System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에 표시된 첫 번째 행의 인덱스를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" />에 표시된 첫 번째 행의 인덱스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성이 발생 하는 설정 된 <xref:System.Windows.Forms.DataGridView.Scroll> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">이 속성을 설정할 때 지정된 값이 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</exception>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 지정된 값이 <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> 속성 값이 <see langword="false" />인 행을 나타내는 경우  
  
또는 
이 속성을 설정할 때 지정된 값이 <see cref="P:System.Windows.Forms.DataGridViewRow.Frozen" /> 속성 값이 <see langword="true" />인 열을 나타내는 경우</exception>
        <altmember cref="E:System.Windows.Forms.DataGridView.Scroll" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataGridView.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에서 표시되는 텍스트의 글꼴을 가져오거나 설정합니다.</summary>
        <value>컨트롤에 표시되는 텍스트에 적용되는 <see cref="T:System.Drawing.Font" />입니다. 기본값은 <see cref="P:System.Windows.Forms.Control.DefaultFont" /> 속성 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.Font%2A> 속성이 앰비언트 속성입니다. 그렇지 않은 경우, 앰비언트 속성은 컨트롤 속성 설정, 부모 컨트롤에서 검색 됩니다. 예를 들어, 한 <xref:System.Windows.Forms.Button> 동일 해야 <xref:System.Windows.Forms.Control.BackColor%2A> 부모로 <xref:System.Windows.Forms.Form> 기본적으로 합니다. 앰비언트 속성에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.AmbientProperties> 클래스 또는 <xref:System.Windows.Forms.Control> 클래스 개요입니다.  
  
 때문에 합니다 <xref:System.Drawing.Font> 변경할 수 없는 (조정할 수 없는 해당 속성 의미)에 할당할 수 있습니다 합니다 <xref:System.Windows.Forms.Control.Font%2A> 는 새 <xref:System.Drawing.Font> 개체입니다. 그러나 기존 글꼴에 따라 새 글꼴을 만들 수 있습니다.  
  
 <xref:System.Windows.Forms.DataGridView> 컨트롤의 값을 사용 합니다 <xref:System.Windows.Forms.DataGridView.Font%2A> 속성의 기본값을는 <xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A> 의 속성 <xref:System.Windows.Forms.DataGridViewCellStyle> 에서 반환 된 개체를 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, 및 <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> 속성. 변경 합니다 <xref:System.Windows.Forms.DataGridView.Font%2A> 값을 자동으로 업데이트를 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>를 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, 및 <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> 속성, 값을 상속 하는 모든 셀에 대 한 글꼴을 변경 합니다. 머리글 셀 기본적으로 값을 재정의 하 고 특정 행, 열 및 셀에 대 한 값을 재정의할 수 있습니다. 셀 스타일 상속에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: 바인딩되지 않은 Windows Forms DataGridView 컨트롤 만들기](~/docs/framework/winforms/controls/how-to-create-an-unbound-windows-forms-datagridview-control.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSimpleUnbound#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/CS/simpleunbound.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewSimpleUnbound#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/VB/simpleunbound.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Font" />
        <altmember cref="T:System.Drawing.Font" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberSignature Language="F#" Value="member this.FontChanged : EventHandler " Usage="member this.FontChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.Font" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.FontChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.FontChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#271](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#271)]
 [!code-vb[System.Windows.Forms.EventExamples#271](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#271)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.Font" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 전경색을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Drawing.Color" />의 전경색을 나타내는 <see cref="T:System.Windows.Forms.DataGridView" />입니다. 기본값은 <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> 속성 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ForeColor%2A> 속성이 앰비언트 속성입니다. 그렇지 않은 경우, 앰비언트 속성은 컨트롤 속성 설정, 부모 컨트롤에서 검색 됩니다. 예를 들어, 한 <xref:System.Windows.Forms.Button> 동일 해야 <xref:System.Windows.Forms.Control.BackColor%2A> 부모로 <xref:System.Windows.Forms.Form> 기본적으로 합니다. 앰비언트 속성에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.AmbientProperties> 클래스 또는 <xref:System.Windows.Forms.Control> 클래스 개요입니다.  
  
 때문에 합니다 <xref:System.Drawing.Font> 변경할 수 없는 (조정할 수 없는 해당 속성 의미)에 할당할 수 있습니다 합니다 <xref:System.Windows.Forms.Control.Font%2A> 는 새 <xref:System.Drawing.Font> 개체입니다. 그러나 기존 글꼴에 따라 새 글꼴을 만들 수 있습니다.  
  
 <xref:System.Windows.Forms.DataGridView> 컨트롤의 값을 사용 합니다 <xref:System.Windows.Forms.DataGridView.ForeColor%2A> 속성의 기본값을는 <xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A> 의 속성 <xref:System.Windows.Forms.DataGridViewCellStyle> 반환한는 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 속성. 변경 된 <xref:System.Windows.Forms.DataGridView.ForeColor%2A> 값을 자동으로 업데이트는 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 속성 값 상속 되는 모든 셀에 대 한 전경 텍스트 색을 변경 합니다. 머리글 셀 기본적으로 값을 재정의 하 고 특정 행, 열 및 셀에 대 한 값을 재정의할 수 있습니다. 셀 스타일 상속에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.ForeColor" />
        <altmember cref="T:System.Drawing.Color" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.ForeColor" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ForeColorChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ForeColorChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#270](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#270)]
 [!code-vb[System.Windows.Forms.EventExamples#270](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#270)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityObjectById">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject GetAccessibilityObjectById(int32 objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetAccessibilityObjectById(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAccessibilityObjectById (objectId As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ GetAccessibilityObjectById(int objectId);" />
      <MemberSignature Language="F#" Value="override this.GetAccessibilityObjectById : int -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridView.GetAccessibilityObjectById objectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="objectId">검색할 <see langword="Int32" />를 식별하는 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Forms.AccessibleObject" />를 검색합니다.</summary>
        <returns>지정된 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCellCount">
      <MemberSignature Language="C#" Value="public int GetCellCount (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCellCount(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellCount (includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCellCount(System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetCellCount : System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridView.GetCellCount includeFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">수를 계산할 셀을 지정하는 <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 값의 비트 조합입니다.</param>
        <summary>제공된 필터를 충족하는 셀의 수를 가져옵니다.</summary>
        <returns><paramref name="includeFilter" /> 매개 변수와 일치하는 셀의 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 특정 상태에 있는 셀의 수를 결정 하는 데 유용 합니다. 선택된 된 셀의 수를 검색 하려면 예를 들어이 메서드를 사용 합니다 <xref:System.Windows.Forms.DataGridViewElementStates.Selected?displayProperty=nameWithType> 값입니다. 이 일반적으로 사용 하 여 보다 효율적인는 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서 선택한 모든 셀이 있는지 여부를 확인 하려면이 메서드를 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 이 예제에서는 모든 셀을 선택 하는 경우 해당 값을 검색을 통해 합니다 <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A> 메서드 표시는 <xref:System.Windows.Forms.TextBox> 제어 합니다.  
  
 이 코드는 클립보드 기능의 사용을 보여주는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows에서 여러 셀을 클립보드에 복사를 사용 하면 사용자가 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewClipboardDemo#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/CS/datagridviewclipboarddemo.cs#16)]
 [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/VB/datagridviewclipboarddemo.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="includeFilter" />가 값 <see cref="F:System.Windows.Forms.DataGridViewElementStates.ResizableSet" />을 포함하는 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GetCellDisplayRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetCellDisplayRectangle (int columnIndex, int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetCellDisplayRectangle(int32 columnIndex, int32 rowIndex, bool cutOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellDisplayRectangle (columnIndex As Integer, rowIndex As Integer, cutOverflow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetCellDisplayRectangle(int columnIndex, int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="F#" Value="member this.GetCellDisplayRectangle : int * int * bool -&gt; System.Drawing.Rectangle" Usage="dataGridView.GetCellDisplayRectangle (columnIndex, rowIndex, cutOverflow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cutOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">원하는 셀의 열 인덱스입니다.</param>
        <param name="rowIndex">원하는 셀의 행 인덱스입니다.</param>
        <param name="cutOverflow">셀의 표시된 부분만을 반환하려면 <see langword="true" />이고 전체 셀 범위를 반환하려면 <see langword="false" />입니다.</param>
        <summary>셀의 표시 영역을 나타내는 사각형을 반환합니다.</summary>
        <returns>셀의 표시 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 전체 셀 범위 또는 표시 된 부분만 반환합니다. 셀의 범위를 가져와서 내용을 사용 하 여 셀 <xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 -1보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우  
  
또는 
 <paramref name="rowIndex" />가 -1보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContentBounds" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GetClipboardContent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataObject GetClipboardContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataObject GetClipboardContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetClipboardContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClipboardContent () As DataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataObject ^ GetClipboardContent();" />
      <MemberSignature Language="F#" Value="abstract member GetClipboardContent : unit -&gt; System.Windows.Forms.DataObject&#xA;override this.GetClipboardContent : unit -&gt; System.Windows.Forms.DataObject" Usage="dataGridView.GetClipboardContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.Clipboard" />에 복사할 선택된 셀 내용을 나타내는 서식 있는 값을 검색합니다.</summary>
        <returns>선택한 셀의 내용을 나타내는 <see cref="T:System.Windows.Forms.DataObject" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 선택한 셀에서 정의한 영역을 나타내는 데이터를 검색 합니다. 이 지역은 선택한 셀을 모두 포함 하는 가장 작은 사각형입니다. 이 지역의 선택한 각 셀에 대 한 값이 호출 하 여 검색 되는 <xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=nameWithType> 메서드. 빈 자리 표시자 값이이 지역에서 선택 되지 않은 셀에 사용 됩니다. 이 메서드는 이러한 값에는 <xref:System.Windows.Forms.DataObject> 클립보드에 복사 하기 위한 여러 형식이 포함 됩니다. 지원 되는 클립보드 형식 포함 <xref:System.Windows.Forms.DataFormats.Text?displayProperty=nameWithType>, <xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=nameWithType>를 <xref:System.Windows.Forms.DataFormats.Html?displayProperty=nameWithType>, 및 <xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=nameWithType>합니다.  
  
 자세한 내용은 <xref:System.Windows.Forms.Clipboard> 클래스를 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 선택한 항목을 추가 하는 방법에 설명 <xref:System.Windows.Forms.DataGridView> 내용을 클립보드에 있습니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows에서 여러 셀을 클립보드에 복사를 사용 하면 사용자가 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/CS/datagridviewclipboarddemo.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/VB/datagridviewclipboarddemo.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" />이 <see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.Disable" />로 설정됩니다.</exception>
        <block subset="none" type="overrides"><para>사용자 지정된 클립보드 값을 제공 하려면이 메서드를 재정의 합니다. 이 방법은 유용한 예를 들어, 사용자 지정 셀 형식의 값을 복사할 수입니다.</para></block>
        <altmember cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GetColumnDisplayRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetColumnDisplayRectangle (int columnIndex, bool cutOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetColumnDisplayRectangle(int32 columnIndex, bool cutOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnDisplayRectangle (columnIndex As Integer, cutOverflow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetColumnDisplayRectangle(int columnIndex, bool cutOverflow);" />
      <MemberSignature Language="F#" Value="member this.GetColumnDisplayRectangle : int * bool -&gt; System.Drawing.Rectangle" Usage="dataGridView.GetColumnDisplayRectangle (columnIndex, cutOverflow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="cutOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">원하는 셀의 열 인덱스입니다.</param>
        <param name="cutOverflow"><see cref="T:System.Windows.Forms.DataGridView" /> 범위에서 표시되는 열 사각형을 반환하려면 <see langword="true" />이고, 전체 열 사각형을 반환하려면 <see langword="false" />입니다.</param>
        <summary>열 인덱스에 의해 확인된 대로, 열에 대한 표시 영역을 나타내는 사각형을 반환합니다.</summary>
        <returns>열의 표시 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 0부터 열 수-1 사이에 속하지 않습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GetRowDisplayRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetRowDisplayRectangle (int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetRowDisplayRectangle(int32 rowIndex, bool cutOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowDisplayRectangle (rowIndex As Integer, cutOverflow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetRowDisplayRectangle(int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="F#" Value="member this.GetRowDisplayRectangle : int * bool -&gt; System.Drawing.Rectangle" Usage="dataGridView.GetRowDisplayRectangle (rowIndex, cutOverflow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cutOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">원하는 셀의 행 인덱스입니다.</param>
        <param name="cutOverflow"><see cref="T:System.Windows.Forms.DataGridView" /> 범위에서 표시되는 행 사각형을 반환하려면 <see langword="true" />이고, 전체 행 사각형을 반환하려면 <see langword="false" />입니다.</param>
        <summary>행 인덱스에 의해 확인된 대로, 행에 대한 표시 영역을 나타내는 사각형을 반환합니다.</summary>
        <returns>행의 표시 사각형을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GridColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GridColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color GridColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.GridColor" />
      <MemberSignature Language="VB.NET" Value="Public Property GridColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color GridColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.GridColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.GridColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 셀을 구분하는 모눈선의 색을 가져오거나 설정합니다.</summary>
        <value>모눈선의 색을 나타내는 <see cref="T:System.Drawing.Color" /> 또는 <see cref="T:System.Drawing.SystemColors" />입니다. 기본값은 <see cref="F:System.Drawing.KnownColor.ControlDarkDark" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정할 수 있습니다는 <xref:System.Windows.Forms.DataGridView.GridColor%2A> 때 속성에 색 테두리를 하나 사용할; 운영 체제에서 다른 유형의 테두리 색상이 지정 됩니다. 통해 응용 프로그램에 대 한 비주얼 스타일을 사용 하는 경우는 <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> 메서드는 <xref:System.Windows.Forms.DataGridView.GridColor%2A> 속성이 무시 되 고 현재 테마의 색이 사용 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, 및 <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> 속성. 또한이 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> 고 <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> 속성입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`, 다음 호출 합니다 `SetUpDataGridView` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기입니다. 모든 이벤트가 해당 이벤트 처리기와 연결 되도록 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">이 속성을 설정할 때 지정된 값이 <see cref="F:System.Drawing.Color.Empty" />입니다.  
  
또는 
이 속성을 설정할 때 지정된 값이 255보다 작은 <see cref="P:System.Drawing.Color.A" /> 속성 값을 갖습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GridColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler GridColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GridColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.GridColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GridColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GridColorChanged;" />
      <MemberSignature Language="F#" Value="member this.GridColorChanged : EventHandler " Usage="member this.GridColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.GridColor" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.GridColorChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.GridColorChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#272](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#272)]
 [!code-vb[System.Windows.Forms.EventExamples#272](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#272)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView.HitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGridView/HitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As DataGridView.HitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataGridView::HitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.DataGridView.HitTestInfo" Usage="dataGridView.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView+HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">X 좌표입니다.</param>
        <param name="y">Y 좌표입니다.</param>
        <summary>x 및 y 좌표가 지정된 경우, 행 인덱스 및 열 인덱스 등의 위치 정보를 반환합니다.</summary>
        <returns>위치 정보가 들어 있는 <see cref="T:System.Windows.Forms.DataGridView.HitTestInfo" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 어느 부분을 확인 하려면이 메서드를 사용할 수는 <xref:System.Windows.Forms.DataGridView> 컨트롤 지정된 된 좌표에 위치한 합니다. 예를 들어, 행 및 열 인덱스의 셀을 클릭 한 머리글 셀 또는 스크롤 막대를 클릭 하는 여부를 확인 하려면 마우스 클릭-좌표를 지정 합니다.이 메서드를 호출할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.Columns%2A> 속성 참조 항목입니다.  
  
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView.HitTestInfo" />
        <altmember cref="T:System.Windows.Forms.DataGridViewHitTestType" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBar">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollBar HorizontalScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollBar HorizontalScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.HorizontalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HorizontalScrollBar As ScrollBar" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::ScrollBar ^ HorizontalScrollBar { System::Windows::Forms::ScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBar : System.Windows.Forms.ScrollBar" Usage="System.Windows.Forms.DataGridView.HorizontalScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 가로 스크롤 막대를 가져옵니다.</summary>
        <value>가로 스크롤 막대를 나타내는 <see cref="T:System.Windows.Forms.ScrollBar" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollingOffset">
      <MemberSignature Language="C#" Value="public int HorizontalScrollingOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HorizontalScrollingOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.HorizontalScrollingOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollingOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HorizontalScrollingOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollingOffset : int with get, set" Usage="System.Windows.Forms.DataGridView.HorizontalScrollingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 가로로 스크롤된 픽셀 수를 가져오거나 설정합니다.</summary>
        <value>컨트롤이 가로로 스크롤된 픽셀 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 속성의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">이 속성을 설정할 지정된 값이 0보다 작습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvalidateCell">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 셀을 무효화하여 셀이 다시 칠해지도록 합니다.</summary>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvalidateCell">
      <MemberSignature Language="C#" Value="public void InvalidateCell (System.Windows.Forms.DataGridViewCell dataGridViewCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateCell(class System.Windows.Forms.DataGridViewCell dataGridViewCell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateCell(System::Windows::Forms::DataGridViewCell ^ dataGridViewCell);" />
      <MemberSignature Language="F#" Value="member this.InvalidateCell : System.Windows.Forms.DataGridViewCell -&gt; unit" Usage="dataGridView.InvalidateCell dataGridViewCell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCell" Type="System.Windows.Forms.DataGridViewCell" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCell">무효화할 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</param>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 지정된 셀을 무효화하여 셀이 다시 칠해지도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 다시 그려야 하는 셀을 일반적으로 발생 하지 않습니다 하는 조건에서 셀 그리기를 강제 적용 하는 데 유용 합니다. 예를 들어, 외부 이벤트의 결과로 모양을 변경 하는 사용자 지정 셀 형식을 사용 하 여이 메서드를 사용할 수 있습니다.  
  
 그리기 및 무효화 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Forms.Control.Invalidate%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 지정이 방법을 사용 하는 방법을 보여 줍니다 <xref:System.Windows.Forms.DataGridViewCell> 위에 마우스 포인터를 놓을 때 그리고 사용자 지정 테두리가 있는입니다. 예제에서는 마우스 포인터가 들어가거나 나올 때 해당 셀을 무효화 됩니다.  
  
 이 코드는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: 셀과 사용자 지정 열에는 Windows Forms DataGridView 컨트롤은 동작과 모양을 확장 하 여](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dataGridViewCell" />이 <see cref="T:System.Windows.Forms.DataGridView" />에 속하지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="dataGridViewCell" />가 <see langword="null" />입니다.</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateCell">
      <MemberSignature Language="C#" Value="public void InvalidateCell (int columnIndex, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateCell(int32 columnIndex, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateCell (columnIndex As Integer, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateCell(int columnIndex, int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.InvalidateCell : int * int -&gt; unit" Usage="dataGridView.InvalidateCell (columnIndex, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">무효화할 셀의 열 인덱스입니다.</param>
        <param name="rowIndex">무효화할 셀의 행 인덱스입니다.</param>
        <summary>지정된 행 인덱스 및 열 인덱스를 가진 셀을 무효화하여 셀이 다시 칠해지도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 다시 그려야 하는 셀을 일반적으로 발생 하지 않습니다 하는 조건에서 셀 그리기를 강제 적용 하는 데 유용 합니다. 예를 들어, 외부 이벤트의 결과로 모양을 변경 하는 사용자 지정 셀 형식을 사용 하 여이 메서드를 사용할 수 있습니다.  
  
 그리기 및 무효화 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Forms.Control.Invalidate%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 사용 하 여 사용자 지정 셀 형식의 위로 마우스 포인터를 놓을 때 셀의 모양을 변경 하는 방법을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: 셀과 사용자 지정 열에는 Windows Forms DataGridView 컨트롤은 동작과 모양을 확장 하 여](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 -1보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우  
  
또는 
 <paramref name="rowIndex" />가 -1보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateColumn">
      <MemberSignature Language="C#" Value="public void InvalidateColumn (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateColumn(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateColumn (columnIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateColumn(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.InvalidateColumn : int -&gt; unit" Usage="dataGridView.InvalidateColumn columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">무효화할 열의 인덱스입니다.</param>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 지정된 열을 무효화하여 열이 다시 그려지도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그리기 및 무효화 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Forms.Control.Invalidate%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 0부터 열 수-1 사이에 속하지 않습니다.</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateRow">
      <MemberSignature Language="C#" Value="public void InvalidateRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.InvalidateRow : int -&gt; unit" Usage="dataGridView.InvalidateRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">무효화할 행의 인덱스입니다.</param>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 지정된 행을 무효화하여 행이 다시 그려지도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 행이 다시 그려지도록 강제 합니다. 이 메서드는 처리할 때 소유자 그리기 시나리오에서 유용 합니다 <xref:System.Windows.Forms.DataGridView.RowPrePaint> 또는 <xref:System.Windows.Forms.DataGridView.RowPostPaint> 이벤트입니다.  
  
 그리기 및 무효화 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Forms.Control.Invalidate%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView.InvalidateRow%2A> 행 그리기 시나리오에서 메서드. 예에서 무효화 되어 행이 현재 셀이 변경 되 면 자동으로 다시 칠해집니다 행을 강제 적용 합니다.  
  
 이 코드는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#19)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0부터 행 수까지의 값에서 1을 뺀 값 범위에 있지 않습니다.</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentCellDirty">
      <MemberSignature Language="C#" Value="public bool IsCurrentCellDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentCellDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.IsCurrentCellDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentCellDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentCellDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentCellDirty : bool" Usage="System.Windows.Forms.DataGridView.IsCurrentCellDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 셀에 커밋되지 않은 변경 내용이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>현재 셀에 커밋되지 않은 변경 내용이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView> 바인딩되지 않은 데이터를 셀 편집 커밋된 것으로 간주 창의 다른 셀으로 이동할 때.  
  
 행 머리글이 표시 되 면 연필 문자 모양을 커밋되지 않은 변경 내용이 있는 셀이 포함 된 행 헤더에 제공 됩니다.  
  
 하는 경우 <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> 됩니다 `true` 는 편집 컨트롤을 호스트 하는 현재 셀을 통해 검색할 수 있습니다는 <xref:System.Windows.Forms.DataGridView.EditingControl%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> 셀 값을 커밋하고 발생 여부를 결정 하는 속성을 <xref:System.Windows.Forms.DataGridView.CellValueChanged> 에 대 한 처리기에서 이벤트를 <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged> 이벤트입니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 사용 안 함 단추 단추 열에 Windows Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentCellInEditMode">
      <MemberSignature Language="C#" Value="public bool IsCurrentCellInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentCellInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentCellInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentCellInEditMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentCellInEditMode : bool" Usage="System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 활성 셀이 편집 중인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>현재 셀이 편집 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCheckBoxCell> 포커스가 있는 편집 모드에는 항상 있습니다. 현재 셀의 편집 컨트롤을 호스트 하는 경우 및 <xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A> 됩니다 `true`를 통해 편집 컨트롤을 검색할 수 있습니다를 <xref:System.Windows.Forms.DataGridView.EditingControl%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 참조 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditingControl" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentRowDirty">
      <MemberSignature Language="C#" Value="public bool IsCurrentRowDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentRowDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentRowDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentRowDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentRowDirty : bool" Usage="System.Windows.Forms.DataGridView.IsCurrentRowDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 행에 커밋되지 않은 변경 내용이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>현재 행에 커밋되지 않은 변경 내용이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 반환 `true` 행에 있는 연필 기호가 표시 되는 경우. 기본적으로 <xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A> 속성의 값와 항상 같지 것입니다 합니다 <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> 속성을 하지 않는 한는 <xref:System.Windows.Forms.DataGridView> 된 편집을 지원 또는 가상 모드 구현 되었는지 행 수준 커밋 범위를 사용 하는 데이터 원본에 바인딩된. 이러한 경우에는 <xref:System.Windows.Forms.DataGridView> 행 수준에서이 속성을 평가 합니다.  
  
 사용자가 행에서 컨트롤 모든 행 변경 내용을 커밋합니다. 행을 종료 하지 않고 행 변경 내용을 커밋하기 위해 CTRL + ENTER를 누를 수도 수 있습니다. 프로그래밍 방식으로 행 변경 내용을 커밋하고 호출 양식의 <xref:System.Windows.Forms.ContainerControl.Validate%2A> 메서드. 데이터 소스는 경우는 <xref:System.Windows.Forms.BindingSource>를 호출할 수도 있습니다 <xref:System.Windows.Forms.BindingSource.EndEdit%2A?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="IsInputChar">
      <MemberSignature Language="C#" Value="protected override bool IsInputChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.IsInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputChar(char charCode);" />
      <MemberSignature Language="F#" Value="override this.IsInputChar : char -&gt; bool" Usage="dataGridView.IsInputChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">테스트할 문자입니다.</param>
        <summary>문자가 <see cref="T:System.Windows.Forms.DataGridView" />가 인식하는 입력 문자인지 여부를 확인합니다.</summary>
        <returns>문자가 입력 문자로 인식되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문자는 편집 모드에서 컨트롤 인지 여부 및 현재 편집 컨트롤에 문자를 사용할 수 있는지 여부에 따라 입력 문자로 인식 됩니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</param>
        <summary>지정된 키가 일반 입력 키인지 또는 전처리가 필요한 특수 키인지를 확인합니다.</summary>
        <returns>지정된 키가 일반 입력 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 행 및 열이 교차하는 지점에 있는 셀을 가져오거나 설정하기 위한 인덱서를 제공합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell this[int columnIndex, int rowIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell Item(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer, rowIndex As Integer) As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ default[int, int] { System::Windows::Forms::DataGridViewCell ^ get(int columnIndex, int rowIndex); void set(int columnIndex, int rowIndex, System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * int) : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">셀이 포함된 열의 인덱스입니다.</param>
        <param name="rowIndex">셀이 포함된 행의 인덱스입니다.</param>
        <summary>지정된 인덱스의 행 및 열이 교차하는 지점에 있는 셀을 가져오거나 설정하기 위한 인덱서를 제공합니다.</summary>
        <value>지정된 위치의 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인덱서는 셀을 통해 액세스 하는 대신 합니다 <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> 의 컬렉션을 <xref:System.Windows.Forms.DataGridView.Rows%2A> 컬렉션.  
  
   
  
## Examples  
 다음 코드 예제에서는이 인덱서를 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#230)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 0보다 작거나 컨트롤의 열 수에서 1을 뺀 수보다 큽니다.  
  
또는 
 <paramref name="rowIndex" />가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 수보다 큽니다.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Cells" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowCollection" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell this[string columnName, int rowIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell Item(string, int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Item(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String, rowIndex As Integer) As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ default[System::String ^, int] { System::Windows::Forms::DataGridViewCell ^ get(System::String ^ columnName, int rowIndex); void set(System::String ^ columnName, int rowIndex, System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * int) : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnName">셀이 포함된 열의 이름입니다.</param>
        <param name="rowIndex">셀이 포함된 행의 인덱스입니다.</param>
        <summary>지정된 인덱스의 행과 지정된 이름의 열이 교차하는 지점에 있는 셀을 가져오거나 설정하기 위한 인덱서를 제공합니다.</summary>
        <value>지정된 위치의 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인덱서는 셀을 통해 액세스 하는 대신 합니다 <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> 의 컬렉션을 <xref:System.Windows.Forms.DataGridView.Rows%2A> 컬렉션.  
  
   
  
## Examples  
 다음 코드 예제에서는이 인덱서를 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#230)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#230)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Cells" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowCollection" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public bool MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MultiSelect : bool with get, set" Usage="System.Windows.Forms.DataGridView.MultiSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 <see cref="T:System.Windows.Forms.DataGridView" />의 셀, 행 또는 열을 한 번에 둘 이상 선택할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자가 한 번에 둘 이상의 셀, 행 또는 열을 선택할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> 속성이로 설정 되어 `true`에서 여러 요소 (셀, 행 또는 열)을 선택할 수 있습니다는 <xref:System.Windows.Forms.DataGridView> 컨트롤입니다. 여러 요소를 선택 하려면 사용자 수를 누른 채 CTRL 키 요소 선택를 클릭 합니다. 첫 번째 요소의 선택를 클릭 한 후, 마지막 요소를 선택를 클릭 하 고 SHIFT 키를 누른 채 연속 요소를 선택할 수 있습니다. 선택 범위를 기반으로 합니다 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 속성입니다. 예를 들어 경우 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 로 설정 된 <xref:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect?displayProperty=nameWithType>, 여러 열을 선택할 수 있습니다.  
  
 사용할 수는 <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> 에서 여러 요소를 선택 하는 사용자를 허용 하는 속성을 <xref:System.Windows.Forms.DataGridView> 제어 하 고 선택한 모든 요소에 대 한 작업을 수행 합니다. 예를 들어, 사용자는 여러 셀을 선택 하 고 선택한 셀에 수행할 작업의 집합을 표시 하는 바로 가기 메뉴를 표시 하려면 선택한 셀을 마우스 오른쪽 단추로 클릭 수 없습니다.  
  
 셀, 행 또는 열에서 선택 결정 하는 <xref:System.Windows.Forms.DataGridView> 컨트롤에 액세스할 수 있습니다 합니다 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A>, <xref:System.Windows.Forms.DataGridView.SelectedRows%2A>, 또는 <xref:System.Windows.Forms.DataGridView.SelectedColumns%2A> 속성. 선택된 된 셀의 수를 확인 하려면 호출을 <xref:System.Windows.Forms.DataGridView.GetCellCount%2A> 의 인수 값을 사용 하 여 메서드 <xref:System.Windows.Forms.DataGridViewElementStates.Selected?displayProperty=nameWithType>합니다. 사용 된 <xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A> 선택된 된 행의 수를 검색 하는 방법 및 <xref:System.Windows.Forms.DataGridViewColumnCollection.GetColumnCount%2A> 열 개수를 검색 하는 방법. 이러한 메서드는 많은 양의 데이터를 사용 하 여 작업 하는 경우 컬렉션에 직접 액세스 하는 보다 더 효율적입니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> 속성입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`, 다음 호출 합니다 `SetUpDataGridView` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기입니다. 모든 이벤트가 해당 이벤트 처리기와 연결 되도록 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="MultiSelectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultiSelectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultiSelectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.MultiSelectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultiSelectChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultiSelectChanged;" />
      <MemberSignature Language="F#" Value="member this.MultiSelectChanged : EventHandler " Usage="member this.MultiSelectChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.MultiSelect" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.MultiSelectChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.MultiSelectChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#273](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#273)]
 [!code-vb[System.Windows.Forms.EventExamples#273](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#273)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="NewRowIndex">
      <MemberSignature Language="C#" Value="public int NewRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NewRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.NewRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NewRowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NewRowIndex : int" Usage="System.Windows.Forms.DataGridView.NewRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>새 레코드의 행에 대한 인덱스를 가져옵니다.</summary>
        <value>새 레코드의 행에 대한 인덱스이거나, <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />가 <see langword="false" />인 경우 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우가 아니면 <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A> 는 `false`,이 속성의 값은-1에서에서 행의 수입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="NewRowNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler NewRowNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler NewRowNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.NewRowNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NewRowNeeded As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ NewRowNeeded;" />
      <MemberSignature Language="F#" Value="member this.NewRowNeeded : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.NewRowNeeded : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.VirtualMode" />의 <see cref="T:System.Windows.Forms.DataGridView" /> 속성이 <see langword="true" />이고 사용자가 <see cref="T:System.Windows.Forms.DataGridView" />의 맨 아래에 있는 새 행으로 이동하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView> 이 이벤트를 새 행에 대 한 데이터 저장소에서 만들어질 새 항목을 사용 하면 가상 모드에서 이며 기본 값으로 채워질 행 수도 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Windows.Forms.DataGridView.NewRowNeeded> 새 행을 추가, 따라서 논리 때 추적 하는 이벤트를 <xref:System.Windows.Forms.DataGridView.CellValueNeeded> 이벤트 처리기는 새 행의 셀을 초기 값으로 초기화할 수 있습니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 참조 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="NotifyCurrentCellDirty">
      <MemberSignature Language="C#" Value="public virtual void NotifyCurrentCellDirty (bool dirty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyCurrentCellDirty(bool dirty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NotifyCurrentCellDirty (dirty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NotifyCurrentCellDirty(bool dirty);" />
      <MemberSignature Language="F#" Value="abstract member NotifyCurrentCellDirty : bool -&gt; unit&#xA;override this.NotifyCurrentCellDirty : bool -&gt; unit" Usage="dataGridView.NotifyCurrentCellDirty dirty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dirty">셀에 커밋되지 않은 변경 내용이 있음을 알리려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>현재 셀에 커밋되지 않은 변경 내용이 있음을 <see cref="T:System.Windows.Forms.DataGridView" />에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 셀 형식에 허용 하려면이 메서드를 사용할 수는 <xref:System.Windows.Forms.DataGridView> 경우 커밋되지 않은 변경 내용이 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 지정 셀 시나리오에서이 메서드의 사용을 하는 방법을 보여 줍니다. 예제에서는 <xref:System.Windows.Forms.IDataGridViewEditingControl> 에서 파생 된 구현을 <xref:System.Windows.Forms.DateTimePicker> 재정의 클래스를 <xref:System.Windows.Forms.DateTimePicker.OnValueChanged%2A> 사용 하 여 메서드를 <xref:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty%2A> 나타내도록 변경 메서드를 <xref:System.Windows.Forms.DataGridView> 컨트롤입니다.  
  
 이 예제는에 표시 된 것 보다 큰 예제의 일부 [방법: DataGridView 셀에서 Windows Forms 컨트롤 호스팅](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#310](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#310)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#310](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#310)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToAddRowsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToAddRowsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToAddRowsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToAddRowsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToAddRowsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToAddRowsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToAddRowsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToAddRowsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToDeleteRowsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToDeleteRowsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToDeleteRowsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToDeleteRowsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToDeleteRowsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToDeleteRowsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToDeleteRowsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToDeleteRowsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToOrderColumnsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToOrderColumnsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToOrderColumnsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToOrderColumnsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToOrderColumnsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToOrderColumnsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToOrderColumnsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToOrderColumnsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToResizeColumnsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToResizeColumnsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToResizeColumnsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToResizeColumnsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToResizeColumnsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToResizeColumnsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToResizeColumnsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToResizeColumnsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToResizeRowsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToResizeRowsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToResizeRowsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToResizeRowsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToResizeRowsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToResizeRowsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToResizeRowsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToResizeRowsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAlternatingRowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAlternatingRowsDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAlternatingRowsDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAlternatingRowsDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAlternatingRowsDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAlternatingRowsDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnAlternatingRowsDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAlternatingRowsDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoGenerateColumnsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoGenerateColumnsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoGenerateColumnsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoGenerateColumnsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoGenerateColumnsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoGenerateColumnsChanged : EventArgs -&gt; unit&#xA;override this.OnAutoGenerateColumnsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAutoGenerateColumnsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeColumnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeColumnModeChanged (System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeColumnModeChanged(class System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeColumnModeChanged (e As DataGridViewAutoSizeColumnModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeColumnModeChanged(System::Windows::Forms::DataGridViewAutoSizeColumnModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs -&gt; unit&#xA;override this.OnAutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs -&gt; unit" Usage="dataGridView.OnAutoSizeColumnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs.Column" /> 속성 값이 null인 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeColumnsModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeColumnsModeChanged (System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeColumnsModeChanged(class System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeColumnsModeChanged (e As DataGridViewAutoSizeColumnsModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeColumnsModeChanged(System::Windows::Forms::DataGridViewAutoSizeColumnsModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs -&gt; unit&#xA;override this.OnAutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs -&gt; unit" Usage="dataGridView.OnAutoSizeColumnsModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" /> 속성 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" /> 속성에서 반환한 배열의 엔트리 수가 컨트롤의 열 수와 같지 않은 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeRowsModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeRowsModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeRowsModeChanged(class System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeRowsModeChanged (e As DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeRowsModeChanged(System::Windows::Forms::DataGridViewAutoSizeModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit&#xA;override this.OnAutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit" Usage="dataGridView.OnAutoSizeRowsModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundColorChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundColorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnBackgroundColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.BackgroundColorChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnBackgroundColorChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : EventArgs -&gt; unit" Usage="dataGridView.OnBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnBindingContextChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.BorderStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnBorderStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCancelRowEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelRowEdit (System.Windows.Forms.QuestionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelRowEdit(class System.Windows.Forms.QuestionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelRowEdit (e As QuestionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelRowEdit(System::Windows::Forms::QuestionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelRowEdit : System.Windows.Forms.QuestionEventArgs -&gt; unit&#xA;override this.OnCancelRowEdit : System.Windows.Forms.QuestionEventArgs -&gt; unit" Usage="dataGridView.OnCancelRowEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.QuestionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.QuestionEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CancelRowEdit" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCancelRowEdit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellBeginEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCellBeginEdit (System.Windows.Forms.DataGridViewCellCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellBeginEdit(class System.Windows.Forms.DataGridViewCellCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellBeginEdit (e As DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellBeginEdit(System::Windows::Forms::DataGridViewCellCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit&#xA;override this.OnCellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit" Usage="dataGridView.OnCellBeginEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellBeginEdit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnCellBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCellBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContentClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContentClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContentClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContentClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContentClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContentClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellContentClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellContentClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">내용을 클릭한 셀에 대한 정보가 들어 있는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellContentClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContentDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContentDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContentDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContentDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContentDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellContentDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellContentDoubleClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContextMenuStripChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContextMenuStripChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContextMenuStripChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContextMenuStripChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContextMenuStripNeeded (System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContextMenuStripNeeded(class System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContextMenuStripNeeded (e As DataGridViewCellContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContextMenuStripNeeded(System::Windows::Forms::DataGridViewCellContextMenuStripNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs -&gt; unit&#xA;override this.OnCellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs -&gt; unit" Usage="dataGridView.OnCellContextMenuStripNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellDoubleClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellDoubleClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellEndEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCellEndEdit (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellEndEdit(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellEndEdit (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellEndEdit(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellEndEdit : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellEndEdit : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellEndEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellEndEdit" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellEndEdit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnCellEnter (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellEnter(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellEnter (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellEnter(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellEnter" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellEnter%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellErrorTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellErrorTextChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellErrorTextChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellErrorTextChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellErrorTextChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellErrorTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellErrorTextChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 -1보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 -1보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellErrorTextNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellErrorTextNeeded (System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellErrorTextNeeded(class System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellErrorTextNeeded (e As DataGridViewCellErrorTextNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellErrorTextNeeded(System::Windows::Forms::DataGridViewCellErrorTextNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs -&gt; unit&#xA;override this.OnCellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs -&gt; unit" Usage="dataGridView.OnCellErrorTextNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellFormatting">
      <MemberSignature Language="C#" Value="protected virtual void OnCellFormatting (System.Windows.Forms.DataGridViewCellFormattingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellFormatting(class System.Windows.Forms.DataGridViewCellFormattingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellFormatting (e As DataGridViewCellFormattingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellFormatting(System::Windows::Forms::DataGridViewCellFormattingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventArgs -&gt; unit&#xA;override this.OnCellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventArgs -&gt; unit" Usage="dataGridView.OnCellFormatting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellFormatting" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellFormatting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnCellLeave (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellLeave(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellLeave (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellLeave(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellLeave" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellLeave%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellMouseClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 셀을 두 번 클릭 하면 편집 모드에서 셀을 배치 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseDown(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseDown (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseDown(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseDown" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseEnter (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseEnter(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseEnter (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseEnter(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellMouseEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseEnter" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseLeave (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseLeave(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseLeave (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseLeave(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellMouseLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseLeave" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseMove(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseMove (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseMove(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseMove" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellMouseMove%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseUp(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseUp (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseUp(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellMouseUp" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellPainting">
      <MemberSignature Language="C#" Value="protected internal virtual void OnCellPainting (System.Windows.Forms.DataGridViewCellPaintingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCellPainting(class System.Windows.Forms.DataGridViewCellPaintingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnCellPainting (e As DataGridViewCellPaintingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnCellPainting(System::Windows::Forms::DataGridViewCellPaintingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellPainting : System.Windows.Forms.DataGridViewCellPaintingEventArgs -&gt; unit&#xA;override this.OnCellPainting : System.Windows.Forms.DataGridViewCellPaintingEventArgs -&gt; unit" Usage="dataGridView.OnCellPainting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellPaintingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellPainting" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellPainting%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellParsing">
      <MemberSignature Language="C#" Value="protected virtual void OnCellParsing (System.Windows.Forms.DataGridViewCellParsingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellParsing(class System.Windows.Forms.DataGridViewCellParsingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellParsing (e As DataGridViewCellParsingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellParsing(System::Windows::Forms::DataGridViewCellParsingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellParsing : System.Windows.Forms.DataGridViewCellParsingEventArgs -&gt; unit&#xA;override this.OnCellParsing : System.Windows.Forms.DataGridViewCellParsingEventArgs -&gt; unit" Usage="dataGridView.OnCellParsing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellParsingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellParsing" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellParsing%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellStateChanged (System.Windows.Forms.DataGridViewCellStateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellStateChanged(class System.Windows.Forms.DataGridViewCellStateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellStateChanged (e As DataGridViewCellStateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellStateChanged(System::Windows::Forms::DataGridViewCellStateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventArgs -&gt; unit&#xA;override this.OnCellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventArgs -&gt; unit" Usage="dataGridView.OnCellStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellStateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellStateChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellStateChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellStyleChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellStyleChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellStyleChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellStyleChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellStyleChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellStyleChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellStyleContentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellStyleContentChanged (System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellStyleContentChanged(class System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellStyleContentChanged (e As DataGridViewCellStyleContentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellStyleContentChanged(System::Windows::Forms::DataGridViewCellStyleContentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs -&gt; unit&#xA;override this.OnCellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs -&gt; unit" Usage="dataGridView.OnCellStyleContentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellStyleContentChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellToolTipTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellToolTipTextChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellToolTipTextChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellToolTipTextChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellToolTipTextChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellToolTipTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">셀에 대한 정보가 들어 있는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellToolTipTextNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellToolTipTextNeeded (System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellToolTipTextNeeded(class System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellToolTipTextNeeded (e As DataGridViewCellToolTipTextNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellToolTipTextNeeded(System::Windows::Forms::DataGridViewCellToolTipTextNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs -&gt; unit&#xA;override this.OnCellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs -&gt; unit" Usage="dataGridView.OnCellToolTipTextNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValidated (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValidated(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValidated (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValidated(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellValidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellValidated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellValidated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValidating (System.Windows.Forms.DataGridViewCellValidatingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValidating(class System.Windows.Forms.DataGridViewCellValidatingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValidating (e As DataGridViewCellValidatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValidating(System::Windows::Forms::DataGridViewCellValidatingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValidating : System.Windows.Forms.DataGridViewCellValidatingEventArgs -&gt; unit&#xA;override this.OnCellValidating : System.Windows.Forms.DataGridViewCellValidatingEventArgs -&gt; unit" Usage="dataGridView.OnCellValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellValidating" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellValidating%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValueChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValueChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValueChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValueChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValueChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellValueChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellValueChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellValueChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellValueChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" /> 속성 값이 컨트롤의 열 수에서 1을 뺀 값보다 큽니다.  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" /> 속성 값이 컨트롤의 행 수에서 1을 뺀 값보다 큽니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValueNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValueNeeded (System.Windows.Forms.DataGridViewCellValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValueNeeded(class System.Windows.Forms.DataGridViewCellValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValueNeeded (e As DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValueNeeded(System::Windows::Forms::DataGridViewCellValueEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit&#xA;override this.OnCellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit" Usage="dataGridView.OnCellValueNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellValueNeeded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" /> 속성 값이 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" /> 속성 값이 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValuePushed">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValuePushed (System.Windows.Forms.DataGridViewCellValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValuePushed(class System.Windows.Forms.DataGridViewCellValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValuePushed (e As DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValuePushed(System::Windows::Forms::DataGridViewCellValueEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValuePushed : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit&#xA;override this.OnCellValuePushed : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit" Usage="dataGridView.OnCellValuePushed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CellValuePushed" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCellValuePushed%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" /> 속성 값이 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우  
  
또는 
<paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" /> 속성 값이 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnAdded (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnAdded(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnAdded (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnAdded(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnAdded : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnAdded : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnAdded" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnAdded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 속성이 나타내는 열이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnContextMenuStripChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnContextMenuStripChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnContextMenuStripChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnContextMenuStripChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 속성이 나타내는 열이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDataPropertyNameChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDataPropertyNameChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDataPropertyNameChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDataPropertyNameChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDataPropertyNameChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDataPropertyNameChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 속성이 나타내는 열이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDefaultCellStyleChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDefaultCellStyleChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDefaultCellStyleChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDefaultCellStyleChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 속성이 나타내는 열이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDisplayIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDisplayIndexChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDisplayIndexChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDisplayIndexChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDisplayIndexChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDisplayIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 속성이 나타내는 열이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDividerDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDividerDoubleClick (System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDividerDoubleClick(class System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDividerDoubleClick (e As DataGridViewColumnDividerDoubleClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDividerDoubleClick(System::Windows::Forms::DataGridViewColumnDividerDoubleClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs -&gt; unit&#xA;override this.OnColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs -&gt; unit" Usage="dataGridView.OnColumnDividerDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDividerWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDividerWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDividerWidthChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDividerWidthChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDividerWidthChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDividerWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 속성이 나타내는 열이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderCellChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeaderCellChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeaderCellChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeaderCellChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeaderCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 속성이 나타내는 열이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeaderMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeaderMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeaderMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeaderMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" /> 속성 값이 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeaderMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeaderMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeaderMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeaderMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">셀에 대한 정보와 마우스 포인터의 위치에 대한 정보가 들어 있는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersHeightChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersHeightChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersHeightChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersHeightChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersHeightChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersHeightChanged : EventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersHeightSizeModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersHeightSizeModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersHeightSizeModeChanged(class System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersHeightSizeModeChanged (e As DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersHeightSizeModeChanged(System::Windows::Forms::DataGridViewAutoSizeModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit&#xA;override this.OnColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersHeightSizeModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnMinimumWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnMinimumWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnMinimumWidthChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnMinimumWidthChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnMinimumWidthChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnMinimumWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 속성이 나타내는 열이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnNameChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnNameChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnNameChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnNameChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnNameChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnNameChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnNameChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnNameChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 속성이 나타내는 열이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnRemoved (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnRemoved(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnRemoved (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnRemoved(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnRemoved : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnRemoved : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnRemoved" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnRemoved%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnSortModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnSortModeChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnSortModeChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnSortModeChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnSortModeChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnSortModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnSortModeChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 속성이 나타내는 열이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnStateChanged (System.Windows.Forms.DataGridViewColumnStateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnStateChanged(class System.Windows.Forms.DataGridViewColumnStateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnStateChanged (e As DataGridViewColumnStateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnStateChanged(System::Windows::Forms::DataGridViewColumnStateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventArgs -&gt; unit&#xA;override this.OnColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventArgs -&gt; unit" Usage="dataGridView.OnColumnStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnStateChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnStateChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">열이 읽기 전용에서 읽기/쓰기로 변경되어 현재 셀이 편집 모드로 들어갈 수 있도록 설정되었지만 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.ColumnStateChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnToolTipTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnToolTipTextChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnToolTipTextChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnToolTipTextChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnToolTipTextChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnToolTipTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">열에 대한 정보가 들어 있는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 속성이 나타내는 열이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ColumnWidthChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnColumnWidthChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" /> 속성이 나타내는 열이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentCellChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentCellChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentCellChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentCellChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentCellChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentCellChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCurrentCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCurrentCellChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentCellDirtyStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentCellDirtyStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentCellDirtyStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentCellDirtyStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentCellDirtyStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentCellDirtyStateChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentCellDirtyStateChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCurrentCellDirtyStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCursorChanged">
      <MemberSignature Language="C#" Value="protected override void OnCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCursorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>커서가 사용자 코드에서 수정된 경우 <see cref="E:System.Windows.Forms.Control.CursorChanged" /> 이벤트를 발생시키고 <see cref="P:System.Windows.Forms.DataGridView.UserSetCursor" /> 속성을 업데이트합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridView> 컨트롤이 변경 된 <xref:System.Windows.Forms.Control.Cursor%2A> 마우스 포인터의 위치에 따라 속성 값입니다. <xref:System.Windows.Forms.DataGridView.UserSetCursor%2A> 속성의 일반 값을 저장 합니다 <xref:System.Windows.Forms.Control.Cursor%2A> 속성 컨트롤의 변경 내용을 무시 합니다. 이 메서드를 호출한 경우 합니다 <xref:System.Windows.Forms.Control.CursorChanged> 이벤트가 발생 하 고 업데이트 된 <xref:System.Windows.Forms.DataGridView.UserSetCursor%2A> 속성, 이벤트 처리기를 호출 하는 것 외에도 필요한 경우.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnCursorChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <altmember cref="P:System.Windows.Forms.DataGridView.UserSetCursor" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
        <altmember cref="E:System.Windows.Forms.Control.CursorChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindingComplete (System.Windows.Forms.DataGridViewBindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindingComplete(class System.Windows.Forms.DataGridViewBindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindingComplete (e As DataGridViewBindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindingComplete(System::Windows::Forms::DataGridViewBindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventArgs -&gt; unit&#xA;override this.OnDataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventArgs -&gt; unit" Usage="dataGridView.OnDataBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewBindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.DataBindingComplete" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바인딩 작업이 데이터 변경 시 발생 하는 동안는 <xref:System.Windows.Forms.CurrencyManager> 사용 중입니다. 예를 들어 경우는 <xref:System.Windows.Forms.CurrencyManager.ListChanged> 이벤트가 발생 합니다 <xref:System.Windows.Forms.DataGridView> 보기를 업데이트 하며 발생를 <xref:System.Windows.Forms.DataGridView.DataBindingComplete> 완료 되 면 이벤트.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.DataBindingComplete" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected virtual void OnDataError (bool displayErrorDialogIfNoHandler, System.Windows.Forms.DataGridViewDataErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataError(bool displayErrorDialogIfNoHandler, class System.Windows.Forms.DataGridViewDataErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataError (displayErrorDialogIfNoHandler As Boolean, e As DataGridViewDataErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataError(bool displayErrorDialogIfNoHandler, System::Windows::Forms::DataGridViewDataErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataError : bool * System.Windows.Forms.DataGridViewDataErrorEventArgs -&gt; unit&#xA;override this.OnDataError : bool * System.Windows.Forms.DataGridViewDataErrorEventArgs -&gt; unit" Usage="dataGridView.OnDataError (displayErrorDialogIfNoHandler, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayErrorDialogIfNoHandler" Type="System.Boolean" />
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewDataErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="displayErrorDialogIfNoHandler"><see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없는 경우 오류 대화 상자를 표시하려면 <see langword="true" />입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnDataError%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataMemberChanged : EventArgs -&gt; unit&#xA;override this.OnDataMemberChanged : EventArgs -&gt; unit" Usage="dataGridView.OnDataMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.DataMemberChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnDataMemberChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="dataGridView.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.DataSourceChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnDataSourceChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultValuesNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultValuesNeeded (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultValuesNeeded(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultValuesNeeded (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultValuesNeeded(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnDefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnDefaultValuesNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDoubleClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDoubleClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDoubleClick : EventArgs -&gt; unit" Usage="dataGridView.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.DoubleClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnDoubleClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnEditingControlShowing">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingControlShowing (System.Windows.Forms.DataGridViewEditingControlShowingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingControlShowing(class System.Windows.Forms.DataGridViewEditingControlShowingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingControlShowing (e As DataGridViewEditingControlShowingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingControlShowing(System::Windows::Forms::DataGridViewEditingControlShowingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventArgs -&gt; unit&#xA;override this.OnEditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventArgs -&gt; unit" Usage="dataGridView.OnEditingControlShowing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">편집 컨트롤에 대한 정보가 들어 있는 <see cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.EditingControlShowing" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnEditingControlShowing%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnEditModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditModeChanged : EventArgs -&gt; unit&#xA;override this.OnEditModeChanged : EventArgs -&gt; unit" Usage="dataGridView.OnEditModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.EditModeChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.EditModeChanged> 이벤트가 발생 될 때마다는 <xref:System.Windows.Forms.DataGridView.EditMode%2A> 속성 변경 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnEditModeChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">편집 모드로 전환될 때 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" /> 에서 파생되고 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="dataGridView.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.EnabledChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnter : EventArgs -&gt; unit" Usage="dataGridView.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Enter" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnEnter%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">포커스를 받을 때 편집 모드로 들어가도록 컨트롤이 구성되었지만 포커스를 받을 때 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">포커스를 받을 때 편집 모드로 들어가도록 컨트롤이 구성되었지만 편집 셀 값의 초기화가 실패하고 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="dataGridView.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.FontChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 발생 하는 것 외에도 <xref:System.Windows.Forms.DataGridView.FontChanged> 이벤트에이 메서드는 새 값을 사용 합니다 <xref:System.Windows.Forms.DataGridView.Font%2A> 속성을 업데이트를 <xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A> 의 속성 <xref:System.Windows.Forms.DataGridViewCellStyle> 에서 반환 된 개체를 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, 및 <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> 속성입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnFontChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ForeColorChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 발생 하는 것 외에도 <xref:System.Windows.Forms.DataGridView.FontChanged> 이벤트에이 메서드는 새 값을 사용 합니다 <xref:System.Windows.Forms.DataGridView.ForeColor%2A> 속성을 업데이트를 <xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A> 의 속성 <xref:System.Windows.Forms.DataGridViewCellStyle> 반환한를 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 속성.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnForeColorChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="dataGridView.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.GotFocus" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGridColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnGridColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGridColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGridColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGridColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGridColorChanged : EventArgs -&gt; unit&#xA;override this.OnGridColorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnGridColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.GridColorChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnGridColorChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="dataGridView.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.HandleCreated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnHandleCreated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="dataGridView.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="dataGridView.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.KeyDown" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnKeyDown%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">이 작업을 통해 컨트롤이 편집 모드로 들어가지만 편집 셀 값의 초기화가 실패하고 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="dataGridView.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyPressEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.KeyPress" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnKeyPress%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="dataGridView.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.KeyUp" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnKeyUp%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (e As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="dataGridView.OnLayout e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.LayoutEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Layout" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnLayout%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected override void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLeave : EventArgs -&gt; unit" Usage="dataGridView.OnLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Leave" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnLeave%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="dataGridView.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.LostFocus" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnMouseClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">포커스를 받을 때 편집 모드로 들어가도록 컨트롤이 구성되었지만 편집 셀 값의 초기화가 실패하고 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseDown" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnMouseDown%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">포커스를 받을 때 편집 모드로 들어가도록 컨트롤이 구성되었지만 편집 셀 값의 초기화가 실패하고 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="dataGridView.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="dataGridView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseLeave" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnMouseLeave%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: 셀과 사용자 지정 열에는 Windows Forms DataGridView 컨트롤은 동작과 모양을 확장 하 여](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseMove" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnMouseMove%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseUp" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnMouseUp%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.MouseWheel" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMultiSelectChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultiSelectChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultiSelectChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultiSelectChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultiSelectChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMultiSelectChanged : EventArgs -&gt; unit&#xA;override this.OnMultiSelectChanged : EventArgs -&gt; unit" Usage="dataGridView.OnMultiSelectChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.MultiSelectChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnMultiSelectChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnNewRowNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnNewRowNeeded (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNewRowNeeded(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNewRowNeeded (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNewRowNeeded(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNewRowNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnNewRowNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnNewRowNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.NewRowNeeded" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnNewRowNeeded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 속성이 나타내는 행이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="dataGridView.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Paint" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnPaint%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">다음과 같은 예외를 제외하고 이 메서드 동안 발생한 모든 예외는 무시됩니다. 
-   <see cref="T:System.NullReferenceException" />  
  
-   <see cref="T:System.StackOverflowException" />  
  
-   <see cref="T:System.OutOfMemoryException" />  
  
-   <see cref="T:System.Threading.ThreadAbortException" />  
  
-   <see cref="T:System.ExecutionEngineException" />  
  
-   <see cref="T:System.IndexOutOfRangeException" />  
  
-   <see cref="T:System.AccessViolationException" /></exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="dataGridView.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.ReadOnlyChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnReadOnlyChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">컨트롤이 읽기 전용에서 읽기/쓰기로 변경되어 현재 셀이 편집 모드로 들어갈 수 있도록 설정되었지만 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="dataGridView.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Resize" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnResize%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected override void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowContextMenuStripChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowContextMenuStripChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowContextMenuStripChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowContextMenuStripChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 속성이 나타내는 행이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowContextMenuStripNeeded (System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowContextMenuStripNeeded(class System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowContextMenuStripNeeded (e As DataGridViewRowContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowContextMenuStripNeeded(System::Windows::Forms::DataGridViewRowContextMenuStripNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs -&gt; unit&#xA;override this.OnRowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs -&gt; unit" Usage="dataGridView.OnRowContextMenuStripNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDefaultCellStyleChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDefaultCellStyleChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDefaultCellStyleChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDefaultCellStyleChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 속성이 나타내는 행이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDirtyStateNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDirtyStateNeeded (System.Windows.Forms.QuestionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDirtyStateNeeded(class System.Windows.Forms.QuestionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDirtyStateNeeded (e As QuestionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDirtyStateNeeded(System::Windows::Forms::QuestionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDirtyStateNeeded : System.Windows.Forms.QuestionEventArgs -&gt; unit&#xA;override this.OnRowDirtyStateNeeded : System.Windows.Forms.QuestionEventArgs -&gt; unit" Usage="dataGridView.OnRowDirtyStateNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.QuestionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.QuestionEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDividerDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDividerDoubleClick (System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDividerDoubleClick(class System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDividerDoubleClick (e As DataGridViewRowDividerDoubleClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDividerDoubleClick(System::Windows::Forms::DataGridViewRowDividerDoubleClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs -&gt; unit&#xA;override this.OnRowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs -&gt; unit" Usage="dataGridView.OnRowDividerDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDividerHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDividerHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDividerHeightChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDividerHeightChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDividerHeightChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowDividerHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 속성이 나타내는 행이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnRowEnter (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowEnter(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowEnter (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowEnter(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnRowEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnRowEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowEnter" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowEnter%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowErrorTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowErrorTextChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowErrorTextChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowErrorTextChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowErrorTextChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowErrorTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowErrorTextChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 속성이 나타내는 행이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowErrorTextNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowErrorTextNeeded (System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowErrorTextNeeded(class System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowErrorTextNeeded (e As DataGridViewRowErrorTextNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowErrorTextNeeded(System::Windows::Forms::DataGridViewRowErrorTextNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs -&gt; unit&#xA;override this.OnRowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs -&gt; unit" Usage="dataGridView.OnRowErrorTextNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderCellChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderCellChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderCellChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderCellChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowHeaderCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 속성이 나타내는 행이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnRowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnRowHeaderMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">마우스에 대한 정보와 클릭한 머리글 셀에 대한 정보가 들어 있는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnRowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnRowHeaderMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">마우스에 대한 정보와 두 번 클릭한 머리글 셀에 대한 정보가 들어 있는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersWidthChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersWidthChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersWidthChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersWidthChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersWidthChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersWidthChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersWidthSizeModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersWidthSizeModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersWidthSizeModeChanged(class System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersWidthSizeModeChanged (e As DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersWidthSizeModeChanged(System::Windows::Forms::DataGridViewAutoSizeModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit&#xA;override this.OnRowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersWidthSizeModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeightChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeightChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeightChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeightChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowHeightChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 속성이 나타내는 행이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeightInfoNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeightInfoNeeded (System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeightInfoNeeded(class System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeightInfoNeeded (e As DataGridViewRowHeightInfoNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeightInfoNeeded(System::Windows::Forms::DataGridViewRowHeightInfoNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs -&gt; unit&#xA;override this.OnRowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs -&gt; unit" Usage="dataGridView.OnRowHeightInfoNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeightInfoPushed">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeightInfoPushed (System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeightInfoPushed(class System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeightInfoPushed (e As DataGridViewRowHeightInfoPushedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeightInfoPushed(System::Windows::Forms::DataGridViewRowHeightInfoPushedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs -&gt; unit&#xA;override this.OnRowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs -&gt; unit" Usage="dataGridView.OnRowHeightInfoPushed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnRowLeave (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowLeave(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowLeave (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowLeave(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnRowLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnRowLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowLeave" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowLeave%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowMinimumHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowMinimumHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowMinimumHeightChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowMinimumHeightChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowMinimumHeightChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowMinimumHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 속성이 나타내는 행이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowPostPaint">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRowPostPaint (System.Windows.Forms.DataGridViewRowPostPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRowPostPaint(class System.Windows.Forms.DataGridViewRowPostPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRowPostPaint (e As DataGridViewRowPostPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRowPostPaint(System::Windows::Forms::DataGridViewRowPostPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventArgs -&gt; unit&#xA;override this.OnRowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventArgs -&gt; unit" Usage="dataGridView.OnRowPostPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowPostPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowPostPaintEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowPostPaint" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowPostPaint%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowPrePaint">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRowPrePaint (System.Windows.Forms.DataGridViewRowPrePaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRowPrePaint(class System.Windows.Forms.DataGridViewRowPrePaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRowPrePaint (e As DataGridViewRowPrePaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRowPrePaint(System::Windows::Forms::DataGridViewRowPrePaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventArgs -&gt; unit&#xA;override this.OnRowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventArgs -&gt; unit" Usage="dataGridView.OnRowPrePaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowPrePaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowPrePaintEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowPrePaint" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowPrePaint%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowsAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowsAdded (System.Windows.Forms.DataGridViewRowsAddedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowsAdded(class System.Windows.Forms.DataGridViewRowsAddedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowsAdded (e As DataGridViewRowsAddedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowsAdded(System::Windows::Forms::DataGridViewRowsAddedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventArgs -&gt; unit&#xA;override this.OnRowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventArgs -&gt; unit" Usage="dataGridView.OnRowsAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowsAddedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">추가된 행에 대한 정보가 포함된 <see cref="T:System.Windows.Forms.DataGridViewRowsAddedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowsAdded" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowsAdded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowsDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowsDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowsDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowsDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowsDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnRowsDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowsDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowsRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnRowsRemoved (System.Windows.Forms.DataGridViewRowsRemovedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowsRemoved(class System.Windows.Forms.DataGridViewRowsRemovedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowsRemoved (e As DataGridViewRowsRemovedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowsRemoved(System::Windows::Forms::DataGridViewRowsRemovedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventArgs -&gt; unit&#xA;override this.OnRowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventArgs -&gt; unit" Usage="dataGridView.OnRowsRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowsRemovedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">삭제된 행에 대한 정보가 포함된 <see cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowsRemoved" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowsRemoved%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowStateChanged (int rowIndex, System.Windows.Forms.DataGridViewRowStateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowStateChanged(int32 rowIndex, class System.Windows.Forms.DataGridViewRowStateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowStateChanged (rowIndex As Integer, e As DataGridViewRowStateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowStateChanged(int rowIndex, System::Windows::Forms::DataGridViewRowStateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowStateChanged : int * System.Windows.Forms.DataGridViewRowStateChangedEventArgs -&gt; unit&#xA;override this.OnRowStateChanged : int * System.Windows.Forms.DataGridViewRowStateChangedEventArgs -&gt; unit" Usage="dataGridView.OnRowStateChanged (rowIndex, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowStateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowIndex">상태가 변경되고 있는 행의 인덱스입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowStateChangedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowStateChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowStateChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">행이 읽기 전용에서 읽기/쓰기로 변경되어 현재 셀이 편집 모드로 들어갈 수 있도록 설정되었지만 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUnshared">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUnshared (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUnshared(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUnshared (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUnshared(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUnshared : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowUnshared : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowUnshared e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowUnshared" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowUnshared%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 속성이 나타내는 행이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowValidated (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowValidated(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowValidated (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowValidated(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnRowValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnRowValidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowValidated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowValidated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowValidating (System.Windows.Forms.DataGridViewCellCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowValidating(class System.Windows.Forms.DataGridViewCellCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowValidating (e As DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowValidating(System::Windows::Forms::DataGridViewCellCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowValidating : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit&#xA;override this.OnRowValidating : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit" Usage="dataGridView.OnRowValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.RowValidating" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnRowValidating%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnScroll (System.Windows.Forms.ScrollEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnScroll(class System.Windows.Forms.ScrollEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnScroll (e As ScrollEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnScroll(System::Windows::Forms::ScrollEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnScroll : System.Windows.Forms.ScrollEventArgs -&gt; unit&#xA;override this.OnScroll : System.Windows.Forms.ScrollEventArgs -&gt; unit" Usage="dataGridView.OnScroll e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ScrollEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.ScrollEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.Scroll" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnScroll%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionChanged : EventArgs -&gt; unit" Usage="dataGridView.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 정보가 들어 있는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.SelectionChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnSelectionChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSortCompare">
      <MemberSignature Language="C#" Value="protected virtual void OnSortCompare (System.Windows.Forms.DataGridViewSortCompareEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSortCompare(class System.Windows.Forms.DataGridViewSortCompareEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSortCompare (e As DataGridViewSortCompareEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSortCompare(System::Windows::Forms::DataGridViewSortCompareEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSortCompare : System.Windows.Forms.DataGridViewSortCompareEventArgs -&gt; unit&#xA;override this.OnSortCompare : System.Windows.Forms.DataGridViewSortCompareEventArgs -&gt; unit" Usage="dataGridView.OnSortCompare e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewSortCompareEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.SortCompare" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnSortCompare%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.SortCompare" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSorted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSorted(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSorted : EventArgs -&gt; unit&#xA;override this.OnSorted : EventArgs -&gt; unit" Usage="dataGridView.OnSorted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.Sorted" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnSorted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnUserAddedRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUserAddedRow (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserAddedRow(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUserAddedRow (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUserAddedRow(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUserAddedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnUserAddedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnUserAddedRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.UserAddedRow" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnUserAddedRow%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="e" />의 <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" /> 속성이 나타내는 행이 이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnUserDeletedRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUserDeletedRow (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserDeletedRow(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUserDeletedRow (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUserDeletedRow(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUserDeletedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnUserDeletedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnUserDeletedRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.UserDeletedRow" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnUserDeletedRow%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnUserDeletingRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUserDeletingRow (System.Windows.Forms.DataGridViewRowCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserDeletingRow(class System.Windows.Forms.DataGridViewRowCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUserDeletingRow (e As DataGridViewRowCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUserDeletingRow(System::Windows::Forms::DataGridViewRowCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventArgs -&gt; unit&#xA;override this.OnUserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventArgs -&gt; unit" Usage="dataGridView.OnUserDeletingRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRowCancelEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DataGridView.UserDeletingRow" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnUserDeletingRow%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected override void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="dataGridView.OnValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CancelEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Validating" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 발생 하는 것 외에도 <xref:System.Windows.Forms.Control.Validating> 이벤트,이 메서드는 현재 셀의 편집을 종료 하 고 셀 및 행 값의 유효성을 검사 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DataGridView.OnValidating%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">유효성 검사가 실패하고 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.VisibleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.DataGridView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성은 이 컨트롤과 관련이 없습니다.</summary>
        <value><see cref="T:System.Windows.Forms.Padding" /> 인스턴스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 이 컨트롤과 관련이 없습니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.Padding" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.Padding%2A> 해당 값을 변경 하 고이 이벤트를 처리 하 여 이러한 변경 내용에 응답할 수 있지만 속성은이 컨트롤에 대 한 관련이 없습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.Padding" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="PaintBackground">
      <MemberSignature Language="C#" Value="protected virtual void PaintBackground (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle gridBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PaintBackground(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle gridBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PaintBackground(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle gridBounds);" />
      <MemberSignature Language="F#" Value="abstract member PaintBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle -&gt; unit&#xA;override this.PaintBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle -&gt; unit" Usage="dataGridView.PaintBackground (graphics, clipBounds, gridBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="gridBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">배경을 그릴 때 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="clipBounds">그려야 하는 <see cref="T:System.Drawing.Rectangle" />의 영역을 나타내는 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</param>
        <param name="gridBounds">셀이 그려지는 영역을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 배경을 그립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `clipBounds` 의 영역을 나타내는 매개 변수는 <xref:System.Windows.Forms.DataGridView> 다시 그려져 야 할 합니다. 예를 들어, 사용자 전체를 포함 하는 경우 <xref:System.Windows.Forms.DataGridView> 다른 창을 사용 하 여를 덮 하지만 `clipBounds` 전체를 나타내는 <xref:System.Windows.Forms.DataGridView>합니다. 사용자의 작은 영역을 포함 하는 경우는 <xref:System.Windows.Forms.DataGridView> 덮, 및 `clipBounds` 포함 된 작은 영역을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessAKey">
      <MemberSignature Language="C#" Value="protected bool ProcessAKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessAKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessAKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessAKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessAKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessAKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>A 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 반환 `true` CTRL + A를 누를 때 하며 <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> 속성은 `true`합니다. 기본적으로 컨트롤의 셀을 모두 선택이 됩니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDataGridViewKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessDataGridViewKey (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessDataGridViewKey(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessDataGridViewKey (e As KeyEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessDataGridViewKey(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDataGridViewKey : System.Windows.Forms.KeyEventArgs -&gt; bool&#xA;override this.ProcessDataGridViewKey : System.Windows.Forms.KeyEventArgs -&gt; bool" Usage="dataGridView.ProcessDataGridViewKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">누른 키에 대한 정보가 들어 있습니다.</param>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에서 이동하는 데 사용되는 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 키 처리 메서드를 누른 키에 적합 한 호출 (예를 들어를 <xref:System.Windows.Forms.DataGridView.ProcessF2Key%2A> f2 키를 누르면 메서드) 해당 메서드의 반환 값을 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서 ENTER 키의 동작을 변경 하는 방법에 설명를 <xref:System.Windows.Forms.DataGridView> 서브 클래스를 재정의 하 여 합니다 <xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A> 및 <xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A> 메서드. 예제에서는 ENTER 키에는 오른쪽 화살표 키를 쉽게 사용자 데이터의 단일 행에 여러 셀을 편집 하는 것과 같습니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#70)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">누른 키로 인해 컨트롤이 편집 모드로 들어가지만 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.  
  
또는 
DELETE 키를 누르면 하나 이상의 행이 삭제되지만, 데이터 소스의 오류로 인해 삭제되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트용 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 컨트롤을 반환 해야 <see langword="true" /> 키를 처리 했음을 나타냅니다. 컨트롤에서 처리 되지 않는 키에 대 한이 메서드의 기본 버전의 결과 반환 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDeleteKey">
      <MemberSignature Language="C#" Value="protected bool ProcessDeleteKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessDeleteKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessDeleteKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessDeleteKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessDeleteKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessDeleteKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>Delete 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 반환 `true` 컨트롤의 행을 삭제 하려면 삭제를 누를 때. 하는 경우 사용자가 행을 삭제할 수는 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 속성이 <xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect> 또는 <xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect> 및 <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> 속성이 `true`합니다. 경우는 <xref:System.Windows.Forms.DataGridView> 데이터에 바인딩되는 <xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=nameWithType> 데이터 원본 속성 설정 해야 `true`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">DELETE 키를 누르면 하나 이상의 행이 삭제되지만, 데이터 소스의 오류로 인해 삭제되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트용 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>대화 상자를 제어하는 데 사용되는 Tab, Esc, Enter, 화살표 키 등의 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 호스팅된 편집 컨트롤에서 처리 되지 않은 키보드 입력 처리를 편집 모드에서 호출 됩니다.  
  
 키 누름 되지 않고 입력된 키인지 결정 되 면 처리에 대 한 기본 클래스에 보내집니다.  
  
   
  
## Examples  
 다음 코드 예제에서 ENTER 키의 동작을 변경 하는 방법에 설명를 <xref:System.Windows.Forms.DataGridView> 서브 클래스를 재정의 하 여 합니다 <xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A> 및 <xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A> 메서드. 예제에서는 ENTER 키에는 오른쪽 화살표 키를 쉽게 사용자 데이터의 단일 행에 여러 셀을 편집 하는 것과 같습니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#70)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">누른 키로 인해 컨트롤이 편집 모드로 들어가지만 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">모든 windows 및 TAB 키를 누를 때 사용자 이벤트를 사용 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다. 권한 값:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 컨트롤을 반환 해야 <see langword="true" /> 키를 처리 했음을 나타냅니다. 컨트롤에서 처리 되지 않는 키에 대 한이 메서드의 기본 버전의 결과 반환 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDownKey">
      <MemberSignature Language="C#" Value="protected bool ProcessDownKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessDownKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessDownKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessDownKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessDownKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessDownKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>아래쪽 화살표 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">아래쪽 화살표 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessEndKey">
      <MemberSignature Language="C#" Value="protected bool ProcessEndKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessEndKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessEndKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessEndKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessEndKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessEndKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>End 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">End 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessEnterKey">
      <MemberSignature Language="C#" Value="protected bool ProcessEnterKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessEnterKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessEnterKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessEnterKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessEnterKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessEnterKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>Enter 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Enter 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessEscapeKey">
      <MemberSignature Language="C#" Value="protected bool ProcessEscapeKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessEscapeKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessEscapeKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessEscapeKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessEscapeKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessEscapeKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>Esc 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessF2Key">
      <MemberSignature Language="C#" Value="protected bool ProcessF2Key (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessF2Key(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessF2Key (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessF2Key(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessF2Key : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessF2Key keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>F2 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">F2 키로 인해 컨트롤이 편집 모드로 들어가지만 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">F2 키로 인해 컨트롤이 편집 모드에 들어가지만 데이터 소스의 오류 때문에 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트의 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessF3Key">
      <MemberSignature Language="C#" Value="protected bool ProcessF3Key (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessF3Key(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessF3Key(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessF3Key (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessF3Key(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessF3Key : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessF3Key keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 값의 비트 조합입니다.</param>
        <summary>현재 열을 정렬하여 F3 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessHomeKey">
      <MemberSignature Language="C#" Value="protected bool ProcessHomeKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessHomeKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessHomeKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessHomeKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessHomeKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessHomeKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">눌러진 키입니다.</param>
        <summary>Home 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Home 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessInsertKey">
      <MemberSignature Language="C#" Value="protected bool ProcessInsertKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessInsertKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessInsertKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessInsertKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessInsertKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessInsertKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</param>
        <summary>Insert 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyEventArgs">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyEventArgs(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyEventArgs (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyEventArgs(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyEventArgs :  -&gt; bool" Usage="dataGridView.ProcessKeyEventArgs m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">처리할 창 메시지를 나타내며 참조에 의해 전달되는 <see cref="T:System.Windows.Forms.Message" />입니다.</param>
        <summary>키 메시지를 처리하고 적합한 컨트롤 이벤트를 생성합니다.</summary>
        <returns>메시지가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 참조는 <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A?displayProperty=nameWithType> 기본 클래스에서 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">누른 키로 인해 컨트롤이 편집 모드로 들어가지만 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 컨트롤을 반환 해야 <see langword="true" /> 메시지를 처리 했음을 나타냅니다. 컨트롤에서 처리 되지 않는 메시지의 경우이 메서드의 기본 버전의 결과 반환 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyPreview :  -&gt; bool" Usage="dataGridView.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">처리할 창 메시지를 나타내며 참조에 의해 전달되는 <see cref="T:System.Windows.Forms.Message" />입니다.</param>
        <summary>키보드 메시지를 미리 봅니다.</summary>
        <returns>메시지가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 참조는 <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A?displayProperty=nameWithType> 기본 클래스에서 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">누른 키로 인해 컨트롤이 편집 모드로 들어가지만 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 컨트롤을 반환 해야 <see langword="true" /> 메시지를 처리 했음을 나타냅니다. 컨트롤에서 처리 되지 않는 메시지의 경우이 메서드의 기본 버전의 결과 반환 합니다.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessLeftKey">
      <MemberSignature Language="C#" Value="protected bool ProcessLeftKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessLeftKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessLeftKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessLeftKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessLeftKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessLeftKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>왼쪽 화살표 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">왼쪽 화살표 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessNextKey">
      <MemberSignature Language="C#" Value="protected bool ProcessNextKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessNextKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessNextKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessNextKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessNextKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessNextKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>Page Down 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Page Down 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessPriorKey">
      <MemberSignature Language="C#" Value="protected bool ProcessPriorKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessPriorKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessPriorKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessPriorKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessPriorKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessPriorKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>Page Up 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">PAGE UP 키를 누르면 컨트롤이 편집 모드로 전환되지만 새로운 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성은 <see cref="T:System.Windows.Forms.Control" />에서 파생되고 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않습니다.</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessRightKey">
      <MemberSignature Language="C#" Value="protected bool ProcessRightKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessRightKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessRightKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessRightKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessRightKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessRightKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>오른쪽 화살표 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서 ENTER 키의 동작을 변경 하는 방법에 설명를 <xref:System.Windows.Forms.DataGridView> 서브 클래스를 재정의 하 여 합니다 <xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A> 및 <xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A> 메서드. 예제에서는 ENTER 키에는 오른쪽 화살표 키를 쉽게 사용자 데이터의 단일 행에 여러 셀을 편집 하는 것과 같습니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#70)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">오른쪽 화살표 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessSpaceKey">
      <MemberSignature Language="C#" Value="protected bool ProcessSpaceKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessSpaceKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessSpaceKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessSpaceKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessSpaceKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessSpaceKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</param>
        <summary>스페이스바를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessTabKey">
      <MemberSignature Language="C#" Value="protected bool ProcessTabKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessTabKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessTabKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessTabKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessTabKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessTabKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>Tab 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Tab 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">모든 windows 및 사용자 이벤트를 사용 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessUpKey">
      <MemberSignature Language="C#" Value="protected bool ProcessUpKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessUpKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessUpKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessUpKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessUpKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessUpKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>위쪽 화살표 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">위쪽 화살표 키로 인해 컨트롤이 편집 모드로 들어가지만 새로운 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업을 수행하면 셀 값이 커밋되거나 편집 모드로 전환되지만 데이터 소스의 오류 때문에 해당 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기가 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정했습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessZeroKey">
      <MemberSignature Language="C#" Value="protected bool ProcessZeroKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessZeroKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessZeroKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessZeroKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessZeroKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessZeroKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 하나 이상 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값의 비트 조합입니다.</param>
        <summary>0 키를 처리합니다.</summary>
        <returns>해당 키가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">0 키로 인해 컨트롤이 편집 모드로 들어가지만 현재 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되어 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <exception cref="T:System.Exception">이 작업으로 인해 컨트롤이 편집 모드에 들어가지만 데이터 소스의 오류 때문에 작업이 수행되지 않으며 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트의 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGridView.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 셀을 편집할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자가 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 셀을 편집할 수 없으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 셀이 읽기 전용 경우의 값을 <xref:System.Windows.Forms.DataGridView.ReadOnly%2A> 속성은 `true` 셀, 셀의 행, 셀의 열에 대 한 또는 <xref:System.Windows.Forms.DataGridView>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서이 속성을 사용 하는 <xref:System.Windows.Forms.DataGridView> 표시 데 주로 합니다. 이 예제에서는 여러 가지 방법으로 사용자 지정 된 컨트롤의 시각적 모양 및 제한적된으로 상호 작용에 대 한 구성 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 지정된 값이 <see langword="true" />이고, 현재 셀이 편집 모드이며, 현재 셀에 커밋할 수 없는 변경 내용이 포함된 경우</exception>
        <exception cref="T:System.Exception">이 속성을 설정할 때 지정한 값에 의해 컨트롤이 편집 모드로 들어가지만 편집 셀 값의 초기화가 실패하고 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.ReadOnly" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.ReadOnlyChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.ReadOnlyChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#274](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#274)]
 [!code-vb[System.Windows.Forms.EventExamples#274](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#274)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RefreshEdit">
      <MemberSignature Language="C#" Value="public bool RefreshEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RefreshEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.RefreshEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function RefreshEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RefreshEdit();" />
      <MemberSignature Language="F#" Value="member this.RefreshEdit : unit -&gt; bool" Usage="dataGridView.RefreshEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>셀이 편집 모드일 때 현재 셀 값을 내부 셀 값으로 새로 고치고 이전 값을 삭제합니다.</summary>
        <returns>성공하면 <see langword="true" />이고, <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트가 발생하면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 셀 편집 모드에서 표시 값을 업데이트 하려면이 메서드를 호출 합니다. 외부 프로세스 셀 값을 수정 하 고 결과적으로 손실 되는 사용자 지정 변경 하는 경우에 변경 내용 사용자에 게 하려는 경우에 유용 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ResetText">
      <MemberSignature Language="C#" Value="public override void ResetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ResetText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetText();" />
      <MemberSignature Language="F#" Value="override this.ResetText : unit -&gt; unit" Usage="dataGridView.ResetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.Text" /> 속성을 기본값(<see cref="F:System.String.Empty" />)으로 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는에서 설명한 것 처럼 동작 하지만 <xref:System.Windows.Forms.DataGridView.Text%2A> 속성은이 컨트롤에 대 한 관련이 없습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.Text" />
      </Docs>
    </Member>
    <Member MemberName="RowContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowContextMenuStripChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.RowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#338](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#338)]
 [!code-vb[System.Windows.Forms.EventExamples#338](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#338)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler RowContextMenuStripNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler RowContextMenuStripNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowContextMenuStripNeeded As DataGridViewRowContextMenuStripNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowContextMenuStripNeededEventHandler ^ RowContextMenuStripNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler " Usage="member this.RowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 바로 가기 메뉴가 필요한 경우 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 이벤트에만 발생 경우를 <xref:System.Windows.Forms.DataGridView> 컨트롤 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성을 설정 또는 해당 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성은 `true`합니다. 처리는 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 이벤트는 행의 현재 상태 또는 포함 된 값에 의해 결정 된 바로 가기 메뉴를 표시 하려는 경우에 유용 합니다.  
  
 처리 하는 경우는 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 이벤트 처리기에서 지정 하는 바로 가기 메뉴가 표시 됩니다 하지 않는 한 사용자는 행을 클릭할 때마다는 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> 클릭 된 특정 셀에 대 한 바로 가기 메뉴를 재정의 합니다.  
  
 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 이벤트는 또한 될 때마다 발생의 값을 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=nameWithType> 속성은 검색 하거나 프로그래밍 방식으로 또는 사용자 행을 마우스 오른쪽 단추로 클릭할 때입니다.  
  
 사용할 수는 <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.RowIndex%2A?displayProperty=nameWithType> 속성을 행 또는 포함 된 값의 상태를 확인 하 고이 정보를 사용 하 여 변경 하거나 수정 하는 <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType> 속성입니다. 이 속성은 행의 값을 사용 하 여 초기화 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 이벤트 값을 재정의 하는 속성입니다.  
  
 처리를 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 대량의 행을 설정 하는 성능 저하를 방지 하려면 데이터를 작업할 때 이벤트 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 여러 행에 대 한 값입니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리를 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 제공 하는 이벤트를 <xref:System.Windows.Forms.ContextMenuStrip> 는 직원의 직책이 기반 합니다. 이 예제는 두 가지 바로 가기 메뉴, 관리자 및 다른 모든 직원에 대 한 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView_NeededEvents#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/CS/Form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public int RowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property RowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowCount : int with get, set" Usage="System.Windows.Forms.DataGridView.RowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에 표시된 행의 수를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" />에 표시할 행의 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 <xref:System.Windows.Forms.DataGridView.RowCount%2A> 설정 된 현재 값 보다 작은 값으로 행의 끝에서 제거 됩니다는 <xref:System.Windows.Forms.DataGridView.Rows%2A> 컬렉션입니다. 하는 경우 <xref:System.Windows.Forms.DataGridView.RowCount%2A> 설정 된 현재 값 보다 큰 값으로 행의 끝에 추가 됩니다는 <xref:System.Windows.Forms.DataGridView.Rows%2A> 컬렉션입니다. 추가 행에서 지정 된 행에 기반한는 <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> 속성입니다.  
  
 설정한 경우에 <xref:System.Windows.Forms.DataGridView.RowCount%2A> 속성을 0으로 모든 행에서 제거할는 <xref:System.Windows.Forms.DataGridView>합니다. 이 호출에 해당 하는 <xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=nameWithType> 메서드.  
  
> [!NOTE]
>  경우 <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A> 됩니다 `true`를 설정할 수 없습니다 <xref:System.Windows.Forms.DataGridView.RowCount%2A> 0입니다. 이 경우 호출 된 <xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=nameWithType> 새 레코드의 행을 제외한 모든 행을 제거 하는 방법입니다. 호출 <xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A> 설정으로 결과 동일 <xref:System.Windows.Forms.DataGridView.RowCount%2A> 이 경우 1로 하지만 훨씬 더 빠릅니다.  
  
 <xref:System.Windows.Forms.DataGridView.RowCount%2A> 속성을 사용 하 여 사용할 수 있습니다 합니다 <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> 속성을 간단한 <xref:System.Windows.Forms.DataGridView> 표시 하 고 텍스트 편집에 대 한 합니다. 설정 하는 경우는 <xref:System.Windows.Forms.DataGridView.RowCount%2A> 속성을 0 보다 큰 값을 <xref:System.Windows.Forms.DataGridView> 열을 사용 하지 않고 컨트롤을 <xref:System.Windows.Forms.DataGridViewTextBoxColumn> 자동으로 추가 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridView.RowCount%2A> 속성입니다. 이 예제에서는이 속성에 있는 항목의 수를 추적 하는 데 사용 된 <xref:System.Windows.Forms.DataGridView>합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.SelectionChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">이 속성을 설정할 지정된 값이 0보다 작습니다.  
  
또는 
지정된 값이 1보다 작고 <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />가 <see langword="true" />로 설정된 경우</exception>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 속성이 설정된 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDefaultCellStyleChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 <see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 될 때이 이벤트가 발생의 속성을 <xref:System.Windows.Forms.DataGridViewCellStyle> 반환한를 <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A> 속성 경우 또는 행을 새 값으로 설정 됩니다는 <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A> 행에 대 한 속성을 새 <xref:System.Windows.Forms.DataGridViewCellStyle> 하나 이상의 속성 값이 다른 이전 셀을 사용 하 여 스타일 개체입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#340](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#340)]
 [!code-vb[System.Windows.Forms.EventExamples#340](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#340)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDirtyStateNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QuestionEventHandler RowDirtyStateNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QuestionEventHandler RowDirtyStateNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDirtyStateNeeded As QuestionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QuestionEventHandler ^ RowDirtyStateNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowDirtyStateNeeded : System.Windows.Forms.QuestionEventHandler " Usage="member this.RowDirtyStateNeeded : System.Windows.Forms.QuestionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QuestionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> 컨트롤의 <see cref="T:System.Windows.Forms.DataGridView" /> 속성이 <see langword="true" />이고 <see cref="T:System.Windows.Forms.DataGridView" />가 현재 행에 커밋되지 않은 변경 내용이 있는지 여부를 확인해야 하는 경우 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 이벤트는 다음과 같이 설정 됩니다. 합니다 <xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=nameWithType> 속성을 `true` 현재 행의 모든 셀을 수정한 경우. 이 인해는 <xref:System.Windows.Forms.DataGridView.CancelRowEdit> 사용자 행에 대 한 편집 내용이 되돌릴 때 발생할 이벤트를 합니다. 사용자가 esc 키를 누른 채 셀이 편집 모드에서 또는 한 번 편집 모드 외부 하는 경우에 두 번 편집 하 여 행을 되돌릴 수 있습니다. 이 이벤트를 설정 하 여 가상 모드에 있는 커밋 범위를 사용자 지정할 수는 <xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=nameWithType> 선택한 커밋 범위에 따라 올바른 값으로 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 셀 수준 커밋 범위 사용자만 현재 셀에 대 한 변경 내용으로 되돌릴 수 있도록이 이벤트를 처리 하는 방법에 설명 합니다. 셀 수준 커밋 범위의 행 경우에만 변경 커밋되지 않은 것으로 처리 됩니다 현재 셀에 커밋되지 않은 변경 내용이 행의 모든 셀에 있는 경우 대신 커밋되지 않은 변경 내용이 있습니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [연습: Forms DataGridView 컨트롤의 Windows에서 가상 모드 구현](~/docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.VirtualMode#160](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CPP/virtualmode.cpp#160)]
 [!code-csharp[System.Windows.Forms.DataGridView.VirtualMode#160](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CS/virtualmode.cs#160)]
 [!code-vb[System.Windows.Forms.DataGridView.VirtualMode#160](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/VB/virtualmode.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDividerDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler RowDividerDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler RowDividerDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDividerDoubleClick As DataGridViewRowDividerDoubleClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowDividerDoubleClickEventHandler ^ RowDividerDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.RowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler " Usage="member this.RowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>두 행 사이의 구분선을 두 번 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트를 사용 하 여 사용자 행 구분선을 두 번 클릭할 때 발생 하는 자동 크기 조정 동작을 사용자 지정할 수 있습니다.  
  
 행 <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A> 속성은 사용자 수를 두 번 클릭 하는 영역을 확장 하지 않습니다. 구분선의 높이 확장 된 경우이 속성을 사용 하 여,이 이벤트는 인접 한 열 구분선 사이의 경계를 두 번 클릭할 때 발생 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#342](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#342)]
 [!code-vb[System.Windows.Forms.EventExamples#342](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#342)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDividerHeightChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowDividerHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowDividerHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDividerHeightChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowDividerHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.RowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridViewRow.DividerHeight" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구분선 높이 설정 하 여 수정 된 <xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A> 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowDividerHeightChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowDividerHeightChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#343](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#343)]
 [!code-vb[System.Windows.Forms.EventExamples#343](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#343)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler RowEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler RowEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowEnter As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ RowEnter;" />
      <MemberSignature Language="F#" Value="member this.RowEnter : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.RowEnter : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행이 입력 포커스를 받고 현재 행이 되기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트가 발생할 때를 <xref:System.Windows.Forms.DataGridView> 처음 로드 되 면 사용자가 현재 행 이외의 행을 선택 하는 경우 뿐만 아니라 합니다.  
  
 이 이벤트가 발생 하기 전에 <xref:System.Windows.Forms.DataGridView.CurrentRow%2A> 속성이 업데이트 됩니다. 새로 입력 한 행의 인덱스를 검색 하려면 사용 된 <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType> 이벤트 처리기 내에서 속성입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트를 처리 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> 현재 행에서 셀의 속성입니다. 배경색 설정 되어이 예에서 합니다 <xref:System.Windows.Forms.DataGridView.RowEnter> 이벤트를 다시 설정 합니다 <xref:System.Drawing.Color.Empty> 에 <xref:System.Windows.Forms.DataGridView.RowLeave> 이벤트입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`, 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#200)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowErrorTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowErrorTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowErrorTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowErrorTextChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowErrorTextChanged;" />
      <MemberSignature Language="F#" Value="member this.RowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 <see cref="P:System.Windows.Forms.DataGridViewRow.ErrorText" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowErrorTextChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowErrorTextChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#345](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#345)]
 [!code-vb[System.Windows.Forms.EventExamples#345](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#345)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowErrorTextNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler RowErrorTextNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler RowErrorTextNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowErrorTextNeeded As DataGridViewRowErrorTextNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowErrorTextNeededEventHandler ^ RowErrorTextNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler " Usage="member this.RowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 오류 텍스트가 필요한 경우 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> 이벤트에만 발생 경우를 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 의 속성을 <xref:System.Windows.Forms.DataGridView> 설정 되어 또는 해당 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성이 `true`. 처리는 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> 이벤트는 해당 상태와 포함 된 값에 따라 행 오류 정보에서 확인 하려는 경우에 유용 합니다.  
  
 처리 하는 경우는 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> 이벤트 오류 텍스트에에서 지정 된 처리기를 행 머리글에 오류 문자 모양과 표시 하지 않는 한는 <xref:System.Windows.Forms.DataGridView.ShowRowErrors%2A> 속성이 `false`합니다. 오류 기호 위로 마우스 포인터를 이동할 때 오류 텍스트 도구 설명에 나타납니다.  
  
 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> 이벤트도 발생 될 때마다 값을 <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType> 속성을 검색 합니다.  
  
 사용할 수는 <xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.RowIndex%2A?displayProperty=nameWithType> 속성을 행 또는 포함 된 값의 상태를 확인 하 고이 정보를 사용 하 여 변경 하거나 수정 하는 <xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.ErrorText%2A?displayProperty=nameWithType> 속성입니다. 이 속성은 행의 값을 사용 하 여 초기화 <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> 이벤트 값을 재정의 하는 속성입니다.  
  
 처리를 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> 대량의 행을 설정 하는 성능 저하를 방지 하려면 데이터를 작업할 때 이벤트 <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> 여러 행에 대 한 값입니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#346](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#346)]
 [!code-vb[System.Windows.Forms.EventExamples#346](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#346)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowRowErrors" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.ErrorText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ErrorText" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderCellChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowHeaderCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowHeaderCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderCellChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowHeaderCellChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행 머리글 셀의 내용을 변경할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowHeaderCellChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowHeaderCellChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#349](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#349)]
 [!code-vb[System.Windows.Forms.EventExamples#349](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#349)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderMouseClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ RowHeaderMouseClick;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.RowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행 머리글의 경계선 내부를 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트의 사용을 보여 줍니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#05)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#05)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderMouseDoubleClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ RowHeaderMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.RowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행 머리글을 두 번 클릭할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#348](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#348)]
 [!code-vb[System.Windows.Forms.EventExamples#348](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#348)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewHeaderBorderStyle RowHeadersBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewHeaderBorderStyle RowHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersBorderStyle As DataGridViewHeaderBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewHeaderBorderStyle RowHeadersBorderStyle { System::Windows::Forms::DataGridViewHeaderBorderStyle get(); void set(System::Windows::Forms::DataGridViewHeaderBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersBorderStyle : System.Windows.Forms.DataGridViewHeaderBorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewHeaderBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행 머리글 셀의 테두리 스타일을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A> 속성이 아닌 다른 값으로 설정 되어 <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single>는 <xref:System.Windows.Forms.DataGridView.GridColor%2A> 속성 시스템 색 이어야 합니다.  
  
 이 속성 설정할 수 없습니다는 <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom> 는 읽기 전용으로 지정 하는 값 테두리 스타일을 사용 하 여 사용자 지정 된 값을 <xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A> 속성입니다.  
  
> [!NOTE]
>  통해 응용 프로그램에 대 한 비주얼 스타일을 사용 하는 경우는 <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> 속성이 `true`, 행 머리글은 현재 테마를 사용 하 여 그립니다. 이 경우 값을 <xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A> 제외한 모든 행 머리글에 대 한 속성은 무시 됩니다는 <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>, 테마를 적용 하지 되는 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 사용을 보여 줍니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#030](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#030)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#030](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#030)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">이 속성을 설정할 때 지정된 값이 유효한 <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" /> 값이 아닙니다.</exception>
        <exception cref="T:System.ArgumentException">이 속성을 설정할 때 지정된 값이 <see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" />입니다.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersBorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersBorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersBorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersBorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersBorderStyleChanged : EventHandler " Usage="member this.RowHeadersBorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#275](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#275)]
 [!code-vb[System.Windows.Forms.EventExamples#275](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#275)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle RowHeadersDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle RowHeadersDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ RowHeadersDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행 머리글 셀에 적용된 기본 스타일을 가져오거나 설정합니다.</summary>
        <value>행 머리글 셀에 적용된 기본 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 <xref:System.Windows.Forms.DataGridViewCellStyle> 이 반환한 속성에는 다음 초기 속성 값입니다.  
  
|DataGridViewCellStyle 속성|기본값|  
|------------------------------------|-------------------|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>|<xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=nameWithType> 속성 값|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>|<xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=nameWithType> 속성 값|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>|<xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=nameWithType> 속성 값|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor%2A>|<xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=nameWithType> 속성 값|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>|<xref:System.Windows.Forms.DataGridView.Font%2A> 속성 값|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>|<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft?displayProperty=nameWithType>|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>|<xref:System.Windows.Forms.DataGridViewTriState.True?displayProperty=nameWithType>|  
  
 이러한 값을 통해 설정 된 값을 자동으로 재정의 된 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 속성입니다. 상속 하도록 행 머리글에 적용할 합니다 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 값 값을 설정 해야 합니다는 <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> 기본값으로 개체에 대 한 표시를 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스.  
  
 셀 스타일 상속에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서이 속성을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView> 사용자 지정 색을 사용 하 여 합니다. 참고 하는 방법을 <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A?displayProperty=nameWithType> 속성이 <xref:System.Drawing.Color.Empty?displayProperty=nameWithType> 에서 값이 상속 되도록는 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 개체입니다.  
  
 이 예제는는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersDefaultCellStyleChanged : EventHandler " Usage="member this.RowHeadersDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트가 발생할 때의 속성을 <xref:System.Windows.Forms.DataGridViewCellStyle> 반환한를 <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> 속성을 새 값으로 설정 됩니다 때나를 <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> 속성이 새 <xref:System.Windows.Forms.DataGridViewCellStyle> 하나 이상의 속성 값이 다른 이전 셀 스타일 개체를 사용 하 여 합니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#276](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#276)]
 [!code-vb[System.Windows.Forms.EventExamples#276](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#276)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersVisible">
      <MemberSignature Language="C#" Value="public bool RowHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RowHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RowHeadersVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersVisible : bool with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행 머리글이 포함된 열의 표시 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>행 머리글이 포함된 열이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A> 속성은 `false`, 행 인 <xref:System.Windows.Forms.DataGridViewBand.Resizable%2A> 속성이 `true` 여전히 크기 조정할 수 있습니다 (UI) 사용자 인터페이스를 마우스 커서로 크기를 조정할 행의 아래쪽 테두리를 클릭 하 여 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, 및 <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> 속성. 또한이 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> 고 <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> 속성입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`, 다음 호출 합니다 `SetUpDataGridView` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기입니다. 모든 이벤트가 해당 이벤트 처리기와 연결 되도록 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 지정된 값이 <see langword="false" />이고 <see cref="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode" /> 속성이 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />로 설정된 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidth">
      <MemberSignature Language="C#" Value="public int RowHeadersWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowHeadersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowHeadersWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidth : int with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행 머리글이 포함된 열의 너비(픽셀)를 가져오거나 설정합니다.</summary>
        <value>행 머리글이 포함된 열의 너비(픽셀)입니다. 기본값은 43입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A> 속성을 지정 된 너비는 행 머리글 열의 크기를 조정 하려면 사용할 수 있습니다. 행 머리글 셀의 내용에 맞게이 열의 너비를 조정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A> 행 그리기 시나리오에서는 속성입니다. 예제에서는이 속성의 값이 있는 사용자 지정 배경을 그릴 범위를 계산 하 사용 됩니다.  
  
 이 코드는에서 사용할 수 있는 보다 큰 예제의 일부[방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">이 속성을 설정할 때 지정된 값이 최소 너비인 4픽셀보다 작거나 최대 너비인 32768픽셀보다 큰 경우</exception>
        <altmember cref="Overload:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidthChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersWidthChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidthChanged : EventHandler " Usage="member this.RowHeadersWidthChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidth" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowHeadersWidthChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowHeadersWidthChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#277](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#277)]
 [!code-vb[System.Windows.Forms.EventExamples#277](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#277)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidthSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode { System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode get(); void set(System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidthSizeMode : System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행 머리글의 너비가 조정 가능한지, 사용자가 이 높이를 조정할 수 있는지, 머리글의 내용에 맞게 높이가 자동으로 조정되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>행 머리글의 너비를 조정할 수 있는 모드를 나타내는 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 값입니다. 기본값은 <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 자동 크기 조정 모드, 사용자가 행 머리글의 너비를 조정할 수 없습니다.  
  
 행 머리글의 높이 프로그래밍 방식으로 조정 하려면 사용 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A> 메서드 또는 집합을 <xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A> 속성입니다.  
  
 열 머리글에 대 한 크기 조정 모드를 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> 속성입니다.  
  
 헤더 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridView> 컨트롤 이중 버퍼링을 지원 하지 않습니다. 경우 <xref:System.Windows.Forms.Control.DoubleBuffered%2A> 로 설정 되어 `true` 에서 파생 된 <xref:System.Windows.Forms.DataGridView> 컨트롤에서 열 다시 정렬 하는 경우 또는 행, 열 또는 헤더 크기를 조정할 때 시각적 피드백 받지 않게 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서이 속성을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView> 컨트롤 주로 표시를 위한 것입니다. 이 예제에서는 여러 가지 방법으로 사용자 지정 된 컨트롤의 시각적 모양 및 제한적된으로 상호 작용에 대 한 구성 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">이 속성을 설정할 때 지정된 값이 유효한 <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" /> 값이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidthSizeModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler RowHeadersWidthSizeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeModeEventHandler RowHeadersWidthSizeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersWidthSizeModeChanged As DataGridViewAutoSizeModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeModeEventHandler ^ RowHeadersWidthSizeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " Usage="member this.RowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#278](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#278)]
 [!code-vb[System.Windows.Forms.EventExamples#278](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#278)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeightChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeightChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 <see cref="P:System.Windows.Forms.DataGridViewRow.Height" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#40)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeightInfoNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler RowHeightInfoNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler RowHeightInfoNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeightInfoNeeded As DataGridViewRowHeightInfoNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowHeightInfoNeededEventHandler ^ RowHeightInfoNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler " Usage="member this.RowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행 높이에 대한 정보가 요청될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 정렬 작업이 완료 된 후 사용자 지정 행 높이 유지 하는 데 유용 합니다. 이것이 필요한 정렬 작업 않습니다를 추적 하지 행의 데이터와 컨트롤의 행 간의 관계는 데이터 원본에 일반적으로 처리 되기 때문입니다. 이 이벤트에만 발생 경우를 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성이 설정 되어 때나 합니다 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성은 `true`합니다. 후자의 경우, 사용자의 데이터 저장소 및 정렬 작업을 제공 합니다. 처리는 <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> 사용자가 행 높이 변경할 때 업데이트 된 높이 정보를 저장 하는 이벤트입니다. 사용 하 여 <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> 컨트롤에서 필요한 경우 저장 된 높이 정보를 검색할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#351](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#351)]
 [!code-vb[System.Windows.Forms.EventExamples#351](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#351)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeightInfoPushed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler RowHeightInfoPushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler RowHeightInfoPushed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeightInfoPushed As DataGridViewRowHeightInfoPushedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowHeightInfoPushedEventHandler ^ RowHeightInfoPushed;" />
      <MemberSignature Language="F#" Value="member this.RowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler " Usage="member this.RowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 높이를 변경할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 때를 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성이 `true` 또는 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성 이외의 다른 값으로 설정 됩니다 `null`합니다. 이 이벤트는 추적 및 정렬 작업을 수행한 후 복원할 수 있도록 행 높이 정보 저장에 사용 됩니다. 높이 정보를 복원 하려면 처리는 <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> 이벤트입니다. 이 이벤트는 사용자는 행의 높이 변경 하는 경우에 발생 하는 note 합니다. 행의 높이 프로그래밍 방식으로 변경 하는 경우에 동시에 새 높이 정보를 저장 해야 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#352](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#352)]
 [!code-vb[System.Windows.Forms.EventExamples#352](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#352)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler RowLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler RowLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowLeave As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ RowLeave;" />
      <MemberSignature Language="F#" Value="member this.RowLeave : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.RowLeave : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행이 입력 포커스를 잃어 더 이상 현재 행이 아닐 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트를 처리 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> 현재 행에서 셀의 속성입니다. 배경색 설정 되어이 예에서 합니다 <xref:System.Windows.Forms.DataGridView.RowEnter> 이벤트를 다시 설정 합니다 <xref:System.Drawing.Color.Empty> 에 <xref:System.Windows.Forms.DataGridView.RowLeave> 이벤트입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1` 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#200)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowMinimumHeightChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowMinimumHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowMinimumHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowMinimumHeightChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowMinimumHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.RowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 <see cref="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowMinimumHeightChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowMinimumHeightChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#354](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#354)]
 [!code-vb[System.Windows.Forms.EventExamples#354](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#354)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowPostPaint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowPostPaintEventHandler RowPostPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowPostPaintEventHandler RowPostPaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowPostPaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowPostPaint As DataGridViewRowPostPaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowPostPaintEventHandler ^ RowPostPaint;" />
      <MemberSignature Language="F#" Value="member this.RowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventHandler " Usage="member this.RowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowPostPaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewRow" />가 칠해진 다음 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 단독으로 또는 함께에서이 이벤트를 처리할 수 있습니다는 <xref:System.Windows.Forms.DataGridView.RowPrePaint> 컨트롤에서 행의 모양을 사용자 지정 하는 이벤트입니다. 사용자가 직접 또는 행의 특정 부분 행 전체를 그릴 수 있으며의 다음 메서드를 사용 합니다 <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs> 다른 부분을 그릴 클래스:  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.DrawFocus%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCells%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsBackground%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsContent%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintHeader%2A>  
  
 사용할 수도 있습니다는 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 현재 테마를 사용 하 여 표준 컨트롤을 그릴 클래스입니다. 자세한 내용은 [비주얼 스타일을 사용 하 여 컨트롤 렌더링](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)합니다. 사용 중인 경우 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]를 사용 하 여 사용할 수 있는 표준 이미지의 대규모 라이브러리에 액세스할 수도 <xref:System.Windows.Forms.DataGridView> 제어 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 처리기를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.RowPostPaint> 일반 셀 값 아래에 있는 전체 행에 걸쳐 있는 텍스트 콘텐츠를 그리는 이벤트입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#30)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowPrePaint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowPrePaintEventHandler RowPrePaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowPrePaintEventHandler RowPrePaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowPrePaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowPrePaint As DataGridViewRowPrePaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowPrePaintEventHandler ^ RowPrePaint;" />
      <MemberSignature Language="F#" Value="member this.RowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventHandler " Usage="member this.RowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowPrePaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewRow" />가 칠해지기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 단독으로 또는 함께에서이 이벤트를 처리할 수 있습니다는 <xref:System.Windows.Forms.DataGridView.RowPostPaint> 컨트롤에서 행의 모양을 사용자 지정 하는 이벤트입니다. 사용자가 직접 또는 행의 특정 부분 행 전체를 그릴 수 있으며의 다음 메서드를 사용 합니다 <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs> 다른 부분을 그릴 클래스:  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.DrawFocus%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCells%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCellsBackground%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCellsContent%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintHeader%2A>  
  
 사용할 수도 있습니다는 <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> 현재 테마를 사용 하 여 표준 컨트롤을 그릴 클래스입니다. 자세한 내용은 [비주얼 스타일을 사용 하 여 컨트롤 렌더링](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)합니다. 사용 중인 경우 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]를 사용 하 여 사용할 수 있는 표준 이미지의 대규모 라이브러리에 액세스할 수도 <xref:System.Windows.Forms.DataGridView> 제어 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 처리기를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.RowPrePaint> 이벤트 그라데이션 행 배경을 행을 선택한 경우. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As DataGridViewRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRowCollection ^ Rows { System::Windows::Forms::DataGridViewRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Windows.Forms.DataGridViewRowCollection" Usage="System.Windows.Forms.DataGridView.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 모든 행을 포함하는 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewRowCollection" />의 모든 행을 포함하는 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Windows.Forms.DataGridView.Rows%2A> 수동으로 채울 컬렉션입니다는 <xref:System.Windows.Forms.DataGridView> 컨트롤 데이터 소스에 바인딩하는 대신 합니다. 다음 예제에서는 수동으로 추가 하 고 행을 삽입 하는 방법을 보여 줍니다. 이 예에서는 4 개를 추가 했다고 가정 <xref:System.Windows.Forms.DataGridViewTextBoxColumn> 컨트롤의 인스턴스 <xref:System.Windows.Forms.DataGridView.Columns%2A> 컬렉션입니다.  
  
```vb  
Me.dataGridView1.Rows.Add("five", "six", "seven", "eight")  
Me.dataGridView1.Rows.Insert(0, "one", "two", "three", "four")  
```  
  
```csharp  
this.dataGridView1.Rows.Add("five", "six", "seven", "eight");this.dataGridView1.Rows.Insert(0, "one", "two", "three", "four");  
```  
  
 자세한 예제를 프로그래밍 방식으로 바인딩되지 않은 채우는 <xref:System.Windows.Forms.DataGridView> 제어 예제 섹션을 참조 하세요.  
  
 행에는 셀 값 외에도 스타일 정보가 포함 됩니다. 이러한 이유로 추가 하거나 이미 스타일이 지정 하는 기존 행을 기준으로 행을 삽입 하는 것이 좋습니다. 사용 하 여 수행할 수 있습니다 합니다 <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopy%2A>, <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopies%2A>를 <xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopy%2A>, 및 <xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopies%2A> 메서드.  
  
 사용할 수도 있습니다는 <xref:System.Windows.Forms.DataGridView.Rows%2A> 컨트롤에서 값을 수정 하거나 행을 제거할 컬렉션입니다. 값을 수정 하거나 컨트롤 외부 데이터 원본에 바인딩되어 있는지 여부에 관계 없이 행을 제거할 수 있습니다. 데이터 원본에 있으면 변경 데이터 원본에 직접 적용 합니다. 그러나 원격 데이터베이스에 데이터 소스 업데이트를 푸시 하려면 계속 해야 합니다. 자세한 내용은 [방법: 바인딩 데이터는 Windows Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/how-to-bind-data-to-the-windows-forms-datagridview-control.md)합니다.  
  
 다음 예제에서는 프로그래밍 방식으로 셀 값을 수정 하는 방법을 보여 줍니다.  
  
```vb  
' Modify the value in the first cell of the second row.  
Me.dataGridView1.Rows[1].Cells[0].Value = "new value"  
  
' The previous line is equivalent to the following line.  
Me.dataGridView1[0, 1].Value = "new value"  
```  
  
```csharp  
// Modify the value in the first cell of the second row.  
this.dataGridView1.Rows[1].Cells[0].Value = "new value";  
  
// The previous line is equivalent to the following line.  
this.dataGridView1[0, 1].Value = "new value";  
```  
  
 표준 컬렉션 기능 외에도 사용할 수는 <xref:System.Windows.Forms.DataGridView.Rows%2A> 행에 대 한 정보를 검색할 컬렉션. 사용 된 <xref:System.Windows.Forms.DataGridViewRowCollection.GetRowState%2A> 특정 행의 상태를 확인 하는 방법입니다. 사용 된 <xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A> 및 <xref:System.Windows.Forms.DataGridViewRowCollection.GetRowsHeight%2A> 행 개수 또는 특정 상태에서 행의 전체 높이 결정 하는 방법입니다. 특정 상태에 있는 행의 인덱스를 검색 하려면 사용 합니다 <xref:System.Windows.Forms.DataGridViewRowCollection.GetFirstRow%2A>, <xref:System.Windows.Forms.DataGridViewRowCollection.GetLastRow%2A>를 <xref:System.Windows.Forms.DataGridViewRowCollection.GetNextRow%2A>, 및 <xref:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow%2A> 메서드.  
  
 다음 예제에서는 첫 번째 선택한 행의 인덱스를 검색 하 고를 사용 하 여 프로그래밍 방식으로 행을 삭제 하는 방법을 보여 줍니다.  
  
```vb  
Dim rowToDelete As Int32 = Me.dataGridView1.Rows.GetFirstRow( _  
    DataGridViewElementStates.Selected)  
If rowToDelete > -1 Then  
    Me.dataGridView1.Rows.RemoveAt(rowToDelete)  
End If  
```  
  
```csharp  
Int32 rowToDelete = this.dataGridView1.Rows.GetFirstRow(  
    DataGridViewElementStates.Selected);  
if (rowToDelete > -1)  
{  
    this.dataGridView1.Rows.RemoveAt(rowToDelete);  
}  
```  
  
 성능 향상을 위해 합니다 <xref:System.Windows.Forms.DataGridViewRowCollection> 반환한는 <xref:System.Windows.Forms.DataGridView.Rows%2A> 속성 공유 일정과 비공유 행을 포함할 수 있습니다. 큰 레코드 집합의 비용을 줄이기 위해 메모리를 공유 하는 공유 행입니다. 레코드 집합 매우 큰 경우 각별한 주의가 액세스할 때 행이 공유를 최대한 유지 하는 <xref:System.Windows.Forms.DataGridView.Rows%2A> 속성입니다.  
  
 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 바인딩되지 않은 만드는 방법을 보여 줍니다 <xref:System.Windows.Forms.DataGridView>; set를 <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, 및 <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> 속성 및 사용 합니다 <xref:System.Windows.Forms.DataGridView.Rows%2A> 및 <xref:System.Windows.Forms.DataGridView.Columns%2A> 속성입니다. 버전을 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> 및 <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> 열 머리글과 행을 적절히 조정 하는 방법입니다. 이 예제를 실행 하려면 다음 코드를 포함 하는 형식으로 붙여넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1` 이라는 단추가 `Button1`를 호출 합니다 `InitializeDataGridView` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기. 모든 이벤트가 해당 이벤트 처리기를 사용 하 여 연결을 확인 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowsAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowsAddedEventHandler RowsAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowsAddedEventHandler RowsAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowsAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowsAdded As DataGridViewRowsAddedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowsAddedEventHandler ^ RowsAdded;" />
      <MemberSignature Language="F#" Value="member this.RowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventHandler " Usage="member this.RowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowsAddedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에 새 행이 추가된 다음 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤의 행은 새 행을 추가할 때 자동으로 정렬 되지 않습니다. 를 올바른 위치에 새 행을 정렬 하려면 호출을 <xref:System.Windows.Forms.DataGridView.Sort%2A> 의 메서드를 <xref:System.Windows.Forms.DataGridView.RowsAdded> 이벤트 처리기입니다.  
  
 사용자가 새 레코드에 대 한 행을 사용 하 여 새 행을 추가 합니다 <xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A?displayProperty=nameWithType> 처리기에 방금 추가한 행 보다 큰 하나는이 이벤트는 새 레코드의 행을 새 위치의 인덱스 같음에 대 한 값입니다. 그러나 행을 추가할 때 프로그래밍 방식으로는 <xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A> 값은 추가 된 첫 번째 행의 인덱스입니다.  
  
 가상 모드에서이 이벤트 전에 발생 합니다 <xref:System.Windows.Forms.DataGridView.CellValuePushed> 이벤트에 채울 수 있는 데이터 저장소에서 새 레코드를 만드는 데 사용할 수 있습니다 및는 <xref:System.Windows.Forms.DataGridView.CellValuePushed> 이벤트 처리기입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리 합니다 <xref:System.Windows.Forms.DataGridView.RowsAdded> 가상의 행 수를 늘리려면 이벤트 <xref:System.Windows.Forms.DataGridView>합니다. 행 개수는는 <xref:System.Windows.Forms.DataGridView.CellValueNeeded> 처리기 및 초기화 된 셀에 새 행에 대 한 빈 셀을 표시 하는 시기를 알 수 있도록 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 참조 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsAddedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsAddedEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowsDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle RowsDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle RowsDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RowsDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ RowsDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowsDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 행 셀에 적용된 기본 스타일을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewCellStyle" />의 행 셀에 적용할 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 셀에 의해 지정 된 스타일을 사용 하 여 셀을 표시 하는 컨트롤 <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> 형식의 다른 속성에서 스타일을 상속 하는 속성인 <xref:System.Windows.Forms.DataGridViewCellStyle>합니다. 모든 행의 셀에 대 한 머리글 셀을 제외한를 통해 지정 된 스타일을 <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A> 속성을 통해 지정 된 스타일을 재정의 합니다 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> 및 <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> 속성 를통해지정된스타일에의해재정의됩니다<xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>하십시오 <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>, 및 <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType> 속성입니다.  
  
 자세한 내용은 [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
 이 속성을 가져올 때를 <xref:System.Windows.Forms.DataGridViewCellStyle> 기본값은 값이 생성 됩니다 속성이 아직 액세스 하지 않은 경우. 여러 행에 대 한이 속성을 가져올 때 성능에 주는 영향이 발생할 수 있습니다. 가능 하면 단일 사용 <xref:System.Windows.Forms.DataGridViewCellStyle> 여러 행에 대해이 속성을 설정 합니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서 원장 효과를 만들려면이 속성을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="RowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowsDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowsDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowsDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowsDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowsDefaultCellStyleChanged : EventHandler " Usage="member this.RowsDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트가 발생할 때의 속성을 <xref:System.Windows.Forms.DataGridViewCellStyle> 반환한를 <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A> 속성을 새 값으로 설정 됩니다 때나를 <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A> 속성이 새 <xref:System.Windows.Forms.DataGridViewCellStyle> 하나 이상의 속성 값이 다른 이전 셀 스타일 개체를 사용 하 여 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#279](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#279)]
 [!code-vb[System.Windows.Forms.EventExamples#279](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#279)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
      </Docs>
    </Member>
    <Member MemberName="RowsRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowsRemovedEventHandler RowsRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowsRemovedEventHandler RowsRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowsRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowsRemoved As DataGridViewRowsRemovedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowsRemovedEventHandler ^ RowsRemoved;" />
      <MemberSignature Language="F#" Value="member this.RowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventHandler " Usage="member this.RowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowsRemovedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에서 행이 삭제되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 행을 삭제 하는 경우는 <xref:System.Windows.Forms.DataGridView> 후속 행의 인덱스 번호를 컨트롤은 낮아집니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 분산 열의 값을 업데이트 하려면이 이벤트를 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.DataGridView>합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.SelectionChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowStateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowStateChangedEventHandler RowStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowStateChangedEventHandler RowStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowStateChanged As DataGridViewRowStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowStateChangedEventHandler ^ RowStateChanged;" />
      <MemberSignature Language="F#" Value="member this.RowStateChanged : System.Windows.Forms.DataGridViewRowStateChangedEventHandler " Usage="member this.RowStateChanged : System.Windows.Forms.DataGridViewRowStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>입력 포커스를 잃거나 얻는 것과 같이 행의 상태가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowStateChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowStateChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#359](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#359)]
 [!code-vb[System.Windows.Forms.EventExamples#359](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#359)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow RowTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow RowTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property RowTemplate As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ RowTemplate { System::Windows::Forms::DataGridViewRow ^ get(); void set(System::Windows::Forms::DataGridViewRow ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowTemplate : System.Windows.Forms.DataGridViewRow with get, set" Usage="System.Windows.Forms.DataGridView.RowTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에 있는 모든 행의 템플릿을 나타내는 행을 가져오거나 설정합니다.</summary>
        <value>행 템플릿을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewRow" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모양 보다 더 세밀히 제어 하려는 경우에 따라 <xref:System.Windows.Forms.DataGridView> 다양 한에서 제공 하는 것 보다 행 <xref:System.Windows.Forms.DataGridView> 셀 스타일 속성입니다. 합니다 <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> 하면 속성 만들기 및 초기화를 <xref:System.Windows.Forms.DataGridViewRow> 경우 모든 행에 대 한 템플릿으로 사용에 대 한 행을 새 레코드를 포함 <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A> 는 `true`합니다.  
  
 행 높이 같은 속성에 대 한 기본값을 설정 하는 경우에 유용 합니다. 예를 들어, 다음 여러 열에 걸쳐 있는 콘텐츠를 표시 하는 것에 대 한 일반 셀 내용 아래에 추가 공간을 제공 하기 위해 기본 행 높이 향상 하는 것이 좋습니다.  
  
 행 템플릿을 설정은 필요한 외부 데이터에서 파생 된 사용자 지정 형식을 사용 하 여 표시 되 면를 <xref:System.Windows.Forms.DataGridViewRow> 클래스입니다. 바인딩되지 않은 <xref:System.Windows.Forms.DataGridView> 컨트롤을 프로그래밍 방식으로 채울 수는 <xref:System.Windows.Forms.DataGridView.Rows%2A> 사용자 지정 행 형식의 인스턴스를 사용 하 여 컬렉션입니다. 그러나 외부 데이터를 표시할 때 행은 자동으로 생성 되지만 해당 템플릿을 기반으로 행을 사용자 지정 행 형식의 인스턴스로 설정할 수 있습니다.  
  
 이 속성이 해당 값을 검색 하면 처음으로 설정 하지 않은 경우 새 <xref:System.Windows.Forms.DataGridViewRow> 가 만들어져 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 행 템플릿을 사용 하 여 초기 행 높이 및 최소 행 높이 지정 하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.RowTemplate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowTemplate/CPP/datagridviewrowtemplate.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridView.RowTemplate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowTemplate/CS/datagridviewrowtemplate.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridView.RowTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowTemplate/VB/datagridviewrowtemplate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 지정된 행이 해당 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 속성 집합을 가지는 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowUnshared">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowUnshared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowUnshared" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowUnshared" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUnshared As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowUnshared;" />
      <MemberSignature Language="F#" Value="member this.RowUnshared : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowUnshared : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>공유에서 비공유로 행의 상태가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개발 및 테스트 하는 동안 행이 공유의 공유 되지 않은 상태로 변경 발생 하는 코드를 식별 하는 데이 이벤트를 사용할 수 있습니다. 많은 양의 데이터를 표시할 컨트롤 크기를 조정 하는 경우에 유용 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.RowUnshared> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.RowUnshared> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#360](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#360)]
 [!code-vb[System.Windows.Forms.EventExamples#360](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#360)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowValidated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler RowValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler RowValidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowValidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowValidated As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ RowValidated;" />
      <MemberSignature Language="F#" Value="member this.RowValidated : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.RowValidated : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 유효성 검사가 완료된 후 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 비슷합니다는 <xref:System.Windows.Forms.Control.Validated> 이벤트입니다. 이 이벤트를 사용 하 여 값의 행에 후 처리를 수행할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 샘플이이 이벤트를 사용 하 여 행을 확인 한 후 남아 수 있는 오류 주석을 지웁니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.RowOperations#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/CS/rowoperations.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.RowOperations#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/VB/rowoperations.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowValidating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellCancelEventHandler RowValidating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellCancelEventHandler RowValidating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowValidating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowValidating As DataGridViewCellCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellCancelEventHandler ^ RowValidating;" />
      <MemberSignature Language="F#" Value="member this.RowValidating : System.Windows.Forms.DataGridViewCellCancelEventHandler " Usage="member this.RowValidating : System.Windows.Forms.DataGridViewCellCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 유효성을 검사하는 도중에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 비슷합니다는 <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType> 이벤트입니다. 이 이벤트를 사용 하 여 행의 모든 값에 대해 유효성 검사를 수행 합니다. 행 유효성 검사를 통과 하지 못하는 경우 설정 합니다 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=nameWithType> 속성을 `true`입니다. 방지이 이벤트를 취소 합니다 <xref:System.Windows.Forms.DataGridView.RowValidated>, <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>, 및 <xref:System.Windows.Forms.Control.Validated?displayProperty=nameWithType> 이벤트 발생을 사용자에서 잘못 된 행 나갈 수 없도록 방지 및 행을 데이터 바인딩된 모드에서 외부 데이터 원본에 저장 되지 않도록 방지 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridView.RowValidating> 올바른 추적 및 릴리스 날짜를 입력 하는 경우를 확인 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.RowOperations#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/CS/rowoperations.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.RowOperations#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/VB/rowoperations.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Scroll">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ScrollEventHandler Scroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ScrollEventHandler Scroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.Scroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Scroll As ScrollEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ScrollEventHandler ^ Scroll;" />
      <MemberSignature Language="F#" Value="member this.Scroll : System.Windows.Forms.ScrollEventHandler " Usage="member this.Scroll : System.Windows.Forms.ScrollEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 컨트롤 내용을 스크롤하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.Scroll> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.Scroll> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#363](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#363)]
 [!code-vb[System.Windows.Forms.EventExamples#363](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#363)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBars As ScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ScrollBars ScrollBars { System::Windows::Forms::ScrollBars get(); void set(System::Windows::Forms::ScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Windows.Forms.ScrollBars with get, set" Usage="System.Windows.Forms.DataGridView.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 표시할 스크롤 막대의 형식을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.ScrollBars" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.ScrollBars.Both" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 값에 관계 없이 필요할 때에 스크롤 막대가 표시 됩니다. 스크롤 막대가 나타나지 않도록 하려면이 속성을 사용 합니다. 예를 들어, 스크롤에 대 한 대체 사용자 인터페이스 (UI)를 제공 하려는 경우 유용 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">이 속성을 설정할 때 지정된 값이 유효한 <see cref="T:System.Windows.Forms.ScrollBars" /> 값이 아닙니다.</exception>
        <exception cref="T:System.InvalidOperationException">커밋 또는 취소할 수 없는 셀 변경으로 인해 <see cref="T:System.Windows.Forms.DataGridView" />가 스크롤할 수 없기 때문에 이 속성의 값을 설정할 수 없습니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="dataGridView.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 모든 셀을 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView> 는 열 선택 모드 및이 메서드가 호출 되 면 각 열의 <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> 속성이로 설정 되어 `true`, 및 각 행의 <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> 속성이 `false`.  
  
 반대로 경우는 <xref:System.Windows.Forms.DataGridView> 는 행 선택 모드 및이 메서드가 호출 되 면 각 행의 <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> 속성이로 설정 되어 `true`, 및 각 열 <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> 속성이 `false`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridView.SelectAll%2A> 메서드. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1` 와 <xref:System.Windows.Forms.Button> 라는 `selectAllButton`, 모든 이벤트가 해당 이벤트 처리기와 연결 되어 있는지 확인 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#180](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#180)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#180](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#180)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedCells">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectedCellCollection SelectedCells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewSelectedCellCollection SelectedCells" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectedCells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedCells As DataGridViewSelectedCellCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectedCellCollection ^ SelectedCells { System::Windows::Forms::DataGridViewSelectedCellCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedCells : System.Windows.Forms.DataGridViewSelectedCellCollection" Usage="System.Windows.Forms.DataGridView.SelectedCells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectedCellCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 선택한 셀의 컬렉션을 가져옵니다.</summary>
        <value>사용자가 선택한 셀을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewSelectedCellCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> 속성에 관계 없이 항상 채워집니다는 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 속성 값입니다.  
  
 이 속성에는 선택 항목은 참조 될 때에는 읽기 전용 스냅숏을 포함 합니다. 이 컬렉션의 복사본을 보유 하는 경우 달라질 수 있습니다 실제에서 후속 <xref:System.Windows.Forms.DataGridView> 상태는 사용자 변경한 선택 합니다. 따라서 컬렉션의 복사본에 대해 있습니다 해야 작동 하는 것은 없습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> 선택 영역에 있는 값의 합계를 검색할 컬렉션. 예에서를 통해이 컬렉션을 반복 하 고 유효한 값을 레이블에 표시 되는 합계에 추가 됩니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.SelectionChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedColumns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectedColumnCollection SelectedColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewSelectedColumnCollection SelectedColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectedColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedColumns As DataGridViewSelectedColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectedColumnCollection ^ SelectedColumns { System::Windows::Forms::DataGridViewSelectedColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedColumns : System.Windows.Forms.DataGridViewSelectedColumnCollection" Usage="System.Windows.Forms.DataGridView.SelectedColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectedColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 선택한 열의 컬렉션을 가져옵니다.</summary>
        <value>사용자가 선택한 열을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewSelectedColumnCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 속성 설정 해야 합니다 <xref:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect?displayProperty=nameWithType> 에 대 한는 <xref:System.Windows.Forms.DataGridView.SelectedColumns%2A> 속성을 채울 열을 선택 합니다.  
  
 이 속성에는 선택 항목은 참조 될 때에는 읽기 전용 스냅숏을 포함 합니다. 이 컬렉션의 복사본을 보유 하는 경우 달라질 수 있습니다 실제에서 후속 <xref:System.Windows.Forms.DataGridView> 상태는 사용자 변경한 선택 합니다. 따라서 컬렉션의 복사본에 대해 있습니다 해야 작동 하는 것은 없습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.SelectedColumns%2A> 프로그래밍 방식으로 정렬에서 선택된 된 열을 가져올 속성입니다. 이 예제에서는이 속성은에 사용 된 <xref:System.Windows.Forms.DataGridView.Sort%2A> 정렬 방향을 결정 하는 방법.  
  
 [!code-csharp[System.Windows.Forms.DatagridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DatagridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedRows">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectedRowCollection SelectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewSelectedRowCollection SelectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedRows As DataGridViewSelectedRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectedRowCollection ^ SelectedRows { System::Windows::Forms::DataGridViewSelectedRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedRows : System.Windows.Forms.DataGridViewSelectedRowCollection" Usage="System.Windows.Forms.DataGridView.SelectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectedRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 선택한 행의 컬렉션을 가져옵니다.</summary>
        <value>사용자가 선택한 행이 들어 있는 <see cref="T:System.Windows.Forms.DataGridViewSelectedRowCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 속성으로 설정 되어 있어야 <xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect> 또는 <xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect> 에 대 한는 <xref:System.Windows.Forms.DataGridView.SelectedRows%2A> 속성을 사용 하 여 입력 행을 선택 합니다.  
  
 이 속성에는 선택 항목은 참조 될 때에는 읽기 전용 스냅숏을 포함 합니다. 이 컬렉션의 복사본을 보유 하는 경우 달라질 수 있습니다 실제에서 후속 <xref:System.Windows.Forms.DataGridView> 상태는 사용자 변경한 선택 합니다. 따라서 컬렉션의 복사본에서 작동 해야 하지 않습니다.  
  
 프로그래밍 방식으로 행을 선택 하려면 해당 <xref:System.Windows.Forms.DataGridViewRow.Selected%2A> 속성을 `true`입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.SelectedRows%2A> 속성에는 <xref:System.Windows.Forms.DataGridView.UserDeletingRow> 이벤트입니다. 이 예제에서는 첫 번째 행에 포함 된 경우에 <xref:System.Windows.Forms.DataGridView.SelectedRows%2A> 컬렉션을 삭제 취소 됩니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.SelectionChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Selected" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 선택이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 셀이 선택 되거나 프로그래밍 방식으로 또는 사용자 작업에 의해 선택이 취소 될 때마다 발생 합니다. 예를 들어이 이벤트는 현재 선택된 된 셀의 합계를 표시 하려는 경우 유용 합니다.  
  
 값을 변경 하는 경우는 <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> 속성인을 <xref:System.Windows.Forms.DataGridView.SelectionChanged> 이벤트가 발생 하기 전에 <xref:System.Windows.Forms.DataGridView.CurrentCellChanged> 이벤트. 모든 <xref:System.Windows.Forms.DataGridView.SelectionChanged> 이벤트 처리기에 액세스 하는 <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> 이 이번에는 속성은 이전 값을 가져옵니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 이벤트를 사용 하는 방법을 보여 줍니다. 예제에서는 폼을 선택한 셀에 값의 합계를 표시 하 고 선택을 변경 하면 합계를 업데이트 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#00](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#00)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#00)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SelectionChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As DataGridViewSelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectionMode SelectionMode { System::Windows::Forms::DataGridViewSelectionMode get(); void set(System::Windows::Forms::DataGridViewSelectionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionMode : System.Windows.Forms.DataGridViewSelectionMode with get, set" Usage="System.Windows.Forms.DataGridView.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />의 셀 선택 방법을 지정하는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 변경 합니다 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 속성에는 현재 선택을 취소 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, 및 <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> 속성. 또한이 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> 고 <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> 속성입니다. 이 예제를 실행 하려면 코드를 포함 하는 폼에 붙여 넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`, 다음 호출 합니다 `SetUpDataGridView` 폼의 생성자에서 메서드 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기입니다. 모든 이벤트가 해당 이벤트 처리기와 연결 되도록 합니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">이 속성을 설정할 때 지정된 값이 유효한 <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" /> 값이 아닙니다.</exception>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 지정된 값이 <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" /> 또는 <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect" />이고 하나 이상의 열에 대한 <see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" /> 속성이 <see cref="F:System.Windows.Forms.DataGridViewColumnSortMode.Automatic" />으로 설정된 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="dataGridView.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Left" /> 속성 값입니다.</param>
        <param name="y">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Top" /> 속성 값입니다.</param>
        <param name="width">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Width" /> 속성 값입니다.</param>
        <param name="height">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Height" /> 속성 값입니다.</param>
        <param name="specified"><see cref="T:System.Windows.Forms.BoundsSpecified" /> 값의 비트 조합입니다.</param>
        <summary>이 멤버는 <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />를 재정의합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">너비와 높이 값 중 하나 이상이 최대값인 8,388,607을 초과한 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentCellAddressCore">
      <MemberSignature Language="C#" Value="protected virtual bool SetCurrentCellAddressCore (int columnIndex, int rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SetCurrentCellAddressCore(int32 columnIndex, int32 rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetCurrentCellAddressCore (columnIndex As Integer, rowIndex As Integer, setAnchorCellAddress As Boolean, validateCurrentCell As Boolean, throughMouseClick As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool SetCurrentCellAddressCore(int columnIndex, int rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="abstract member SetCurrentCellAddressCore : int * int * bool * bool * bool -&gt; bool&#xA;override this.SetCurrentCellAddressCore : int * int * bool * bool * bool -&gt; bool" Usage="dataGridView.SetCurrentCellAddressCore (columnIndex, rowIndex, setAnchorCellAddress, validateCurrentCell, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="setAnchorCellAddress" Type="System.Boolean" />
        <Parameter Name="validateCurrentCell" Type="System.Boolean" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">셀이 포함된 열의 인덱스입니다.</param>
        <param name="rowIndex">셀이 포함된 행의 인덱스입니다.</param>
        <param name="setAnchorCellAddress">Shift 키를 사용하여 새로운 현재 셀을 후속 다중 셀 선택에 대한 앵커 셀로 만들려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="validateCurrentCell">이전 현재 셀의 값에 대한 유효성을 검사하여 검사가 실패하는 경우 변경을 취소하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="throughMouseClick">마우스 클릭으로 현재 셀이 설정되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>현재 활성 셀을 설정합니다.</summary>
        <returns>현재 셀이 성공적으로 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 컨트롤에서 현재 셀이 변경 될 때마다이 메서드를 사용 합니다. 이 메서드는 선택 항목을 변경 하지 않고 필요에 따라 선택 영역 앵커 셀을 변경 하거나 이전 셀을 유효성을 검사할 현재 셀을 변경 합니다. 앵커 셀은 사용자가 SHIFT 키를 누른 다음 블록의 마지막 셀을 클릭 하 여 선택할 수 있는 여러 셀 블록의 첫 번째 셀입니다.  
  
 경우 `rowIndex` 하 고 `columnIndex` 은 모두-1을 <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> 속성에서 반환 `null`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 크고 <paramref name="rowIndex" />가 -1이 아닌 경우  
  
또는 
 <paramref name="rowIndex" />가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 크고 <paramref name="columnIndex" />가 -1이 아닌 경우</exception>
        <exception cref="T:System.InvalidOperationException">지정된 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.Visible" /> 속성 값이 <see langword="false" />인 경우  
  
또는 
이 메서드가 재설정 중인 내부 데이터 소스 외의 다른 이유로 호출되었으며, 다른 스레드가 이 메서드를 현재 실행 중인 경우</exception>
        <exception cref="T:System.InvalidCastException">새로운 현재 셀이 편집 모드로 전환되려고 할 때 셀의 <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> 속성이 <see cref="T:System.Windows.Forms.Control" />에서 파생되고 <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />을 구현하는 클래스를 나타내지 않는 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedCellCore">
      <MemberSignature Language="C#" Value="protected virtual void SetSelectedCellCore (int columnIndex, int rowIndex, bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetSelectedCellCore(int32 columnIndex, int32 rowIndex, bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetSelectedCellCore (columnIndex As Integer, rowIndex As Integer, selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetSelectedCellCore(int columnIndex, int rowIndex, bool selected);" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedCellCore : int * int * bool -&gt; unit&#xA;override this.SetSelectedCellCore : int * int * bool -&gt; unit" Usage="dataGridView.SetSelectedCellCore (columnIndex, rowIndex, selected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">셀이 포함된 열의 인덱스입니다.</param>
        <param name="rowIndex">셀이 포함된 행의 인덱스입니다.</param>
        <param name="selected">셀을 선택하려면 <see langword="true" />이고, 셀의 선택을 취소하려면 <see langword="false" />입니다.</param>
        <summary>지정된 행 및 열 인덱스를 사용하여 셀의 선택 상태를 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 컨트롤을 셀의 선택 상태가 변경 될 때마다이 메서드를 사용 합니다. 현재 관계 없이 선택 상태 변경을 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 속성 값을 변경 하지 않고는 <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> 속성 값입니다. 사용자 고유의 선택 모드를 구현 하려는 경우에 유용 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 0보다 작거나 컨트롤의 열 수에서 1을 뺀 수보다 큽니다.  
  
또는 
 <paramref name="rowIndex" />가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 수보다 큽니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedColumnCore">
      <MemberSignature Language="C#" Value="protected virtual void SetSelectedColumnCore (int columnIndex, bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetSelectedColumnCore(int32 columnIndex, bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetSelectedColumnCore (columnIndex As Integer, selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetSelectedColumnCore(int columnIndex, bool selected);" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedColumnCore : int * bool -&gt; unit&#xA;override this.SetSelectedColumnCore : int * bool -&gt; unit" Usage="dataGridView.SetSelectedColumnCore (columnIndex, selected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">열의 인덱스입니다.</param>
        <param name="selected">열을 선택하려면 <see langword="true" />이고, 열의 선택을 취소하려면 <see langword="false" />입니다.</param>
        <summary>지정된 인덱스를 사용하여 열의 선택 상태를 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 컨트롤의 열 선택 상태가 변경 될 때마다이 메서드를 사용 합니다. 현재 관계 없이 선택 상태 변경을 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 속성 값을 변경 하지 않고는 <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> 속성 값입니다. 사용자 고유의 선택 모드를 구현 하려는 경우에 유용 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 0보다 작거나 컨트롤의 열 수에서 1을 뺀 수보다 큽니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedRowCore">
      <MemberSignature Language="C#" Value="protected virtual void SetSelectedRowCore (int rowIndex, bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetSelectedRowCore(int32 rowIndex, bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetSelectedRowCore (rowIndex As Integer, selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetSelectedRowCore(int rowIndex, bool selected);" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedRowCore : int * bool -&gt; unit&#xA;override this.SetSelectedRowCore : int * bool -&gt; unit" Usage="dataGridView.SetSelectedRowCore (rowIndex, selected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">행의 인덱스입니다.</param>
        <param name="selected">행을 선택하려면 <see langword="true" />이고, 행의 선택을 취소하려면 <see langword="false" />입니다.</param>
        <summary>지정된 인덱스를 사용하여 행의 선택 상태를 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 컨트롤 행의 선택 상태가 변경 될 때마다이 메서드를 사용 합니다. 현재 관계 없이 선택 상태 변경을 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> 속성 값을 변경 하지 않고는 <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> 속성 값입니다. 사용자 고유의 선택 모드를 구현 하려는 경우에 유용 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 수보다 큽니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowCellErrors">
      <MemberSignature Language="C#" Value="public bool ShowCellErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCellErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowCellErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCellErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCellErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCellErrors : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowCellErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 오류 표시 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>유효성 검사를 실패한 셀에 빨간색 문자 모양을 표시하려면 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowCellToolTips">
      <MemberSignature Language="C#" Value="public bool ShowCellToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCellToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowCellToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCellToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCellToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCellToolTips : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowCellToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터가 셀 위에 잠시 멈춰 있을 때 도구 설명을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>도구 모음이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 값이 `true` 마우스 포인터가 셀 위에 있는 셀 때 다음 조건 중 하나가 충족 되는 도구 설명이 표시 됩니다.  
  
-   값을 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성이 아닙니다 `null` 값입니다는 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성은 `true`, 및에 대 한 처리기를 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> 이벤트 집합을 <xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType> 속성 이외의 값을 <xref:System.String.Empty?displayProperty=nameWithType>.  
  
-   합니다 <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> 셀의 속성에 값 이외의 <xref:System.String.Empty?displayProperty=nameWithType>합니다. 많은 경우이 속성을 설정 해도 효과가 없습니다를 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> 이벤트 처리기 속성의 값을 자동으로 가져오기 때문에 이벤트를 발생 하 고 도구 설명 텍스트를 지정한 이벤트 처리기를 반환 합니다.  
  
-   셀 표시에서 셀 값이 잘립니다. 때 셀의 값 <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> 속성 값이 <xref:System.String.Empty?displayProperty=nameWithType>, 잘린된 셀 값의 전체 값의 도구 설명에 표시 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowEditingIcon">
      <MemberSignature Language="C#" Value="public bool ShowEditingIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowEditingIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowEditingIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowEditingIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowEditingIcon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowEditingIcon : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowEditingIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집 중인 셀의 행 머리글에 편집 문자 모양을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>편집 문자 모양이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 행 머리글에는 현재 셀이 편집 모드에 사용자가 셀 변경 내용을 적용 한 경우 연필 처럼 보이는 편집 문자 모양이 표시 됩니다. 편집 문자 모양이 사용 하 여 색이 지정 되는 <xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A> 행 머리글 셀의 속성입니다. 완전히 표시 하도록 충분 한 공간이 없는 경우에 문자 모양을 렌더링 되지 않습니다. 예를 들어, 행 머리글 셀에 있는 경우 해당 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> 텍스트와 문자 모양에 대 한 충분 한 공간이 없는 경우 속성 집합에는 문자 모양 제거 됩니다.  
  
 편집 문자 모양이 표시 값에 의해 제어 됩니다는 <xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A> 가상 모드에 있는 속성입니다. 에 의해 제어 됩니다이 고, 그렇지는 <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> 속성입니다.  
  
 표준 문자 모양은 공개적으로 노출 되지 않습니다. 문자 모양에 맞게 사용자 지정을 만들 수 있습니다 <xref:System.Windows.Forms.DataGridViewRowHeaderCell> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowRowErrors">
      <MemberSignature Language="C#" Value="public bool ShowRowErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRowErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowRowErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRowErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRowErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRowErrors : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowRowErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 입력 오류가 있는 각 행에 대해 행 머리글에 오류 문자 모양을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewRow" />에서 오류가 있음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> 속성 행의 셀 중 하나에 오류가 있는지를 나타냅니다. 하는 경우 <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> 이외의 값으로 설정 됩니다 <xref:System.String.Empty>에 오류 문자 모양과 다음 (![ErrorProvider 아이콘](~/add/media/vberrorprovidericon.gif "ErrorProvider 아이콘")) 행 머리글에 표시 됩니다.  
  
 행 머리글의 기본 너비를 문자 모양이 표시 되는 여부 오류 문자 모양을 표시 하려면 충분 한 공간을 포함 합니다. 기호를 완전히 표시에 충분 한 공간이 있도록 행 헤더 크기를 조정 하는 경우에 문자 모양을 렌더링 되지 않습니다.  
  
 행 머리글 텍스트 및 문자 모두를 표시할 수 있으므로 헤더 내용은 우선 순위에 따라 다음과 같이 표시 됩니다.  
  
1.  행 머리글 셀에 표시할 텍스트입니다.  
  
2.  편집 문자 모양이 됩니다.  
  
3.  오류 문자 모양입니다.  
  
 예를 들어, 행 너비를 줄이면 표준 기호 다음에 다음 텍스트 오류 문자 먼저 사라집니다.  
  
 메시지를 보내는 사용자 지정을 개발 하 여 고급 사용자의 오류 문자 모양을 사용자 지정할 수 있습니다 <xref:System.Windows.Forms.DataGridViewRowHeaderCell> 또는 <xref:System.Windows.Forms.DataGridViewCell> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 내용을 정렬합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Collections.IComparer -&gt; unit&#xA;override this.Sort : System.Collections.IComparer -&gt; unit" Usage="dataGridView.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">사용자 지정 정렬 작업을 수행하는 <see cref="T:System.Collections.IComparer" />의 구현입니다.</param>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 인터페이스의 구현을 사용하여 <see cref="T:System.Collections.IComparer" /> 컨트롤의 내용을 정렬합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하면 고급 사용자 지정의 정렬 기능을 <xref:System.Windows.Forms.DataGridView> 클래스입니다. 고도로 사용자 지정 된 정렬 작업을 구현 하기 위해 이벤트 처리기를 작성할 수 있습니다 합니다 <xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick> 이벤트를 구현 하는 클래스의 인스턴스를 사용 하 여이 메서드를 호출 하 고는 <xref:System.Collections.IComparer?displayProperty=nameWithType> 인터페이스를 매개 변수로 합니다. 이 경우에 일반적으로 설정한 합니다 <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A?displayProperty=nameWithType> 속성을 <xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType> 자동 정렬을 사용 하지 않도록 설정 하는 정렬 문자 확보 합니다. 프로그래밍 방식 정렬 모드로 설정 하는 열을 기준으로 정렬 하는 경우 직접 표시 해야 정렬 문자 모양을 설정 하 여는 <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType> 속성입니다.  
  
 경우에만 사용할 수 있는이 방법의 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성이 설정 되지 않았습니다. 바인딩하는 경우는 <xref:System.Windows.Forms.DataGridView> 컨트롤 외부 데이터 원본에 해당 데이터 원본에서 제공 하는 정렬 작업을 사용 해야 합니다. 가상 모드 구현 하 여 사용자 지정 데이터 소스를 제공 하는 경우 처리 해야 합니다도 정렬 작업을 직접.  
  
 집합이이 메서드를 자동으로 호출 합니다 <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> 속성을 `null`입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.Sort%2A> 여러 열 정렬 시나리오에서 메서드 오버 로드 합니다. 이 예제에서는 합니다 <xref:System.Collections.IComparer> 인터페이스에서 구현 되는 `RowComparer` 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewIComparerSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewIComparerSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewIComparerSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewIComparerSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="comparer" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridView.VirtualMode" />이 <see langword="true" />로 설정됩니다.  
  
또는 
 <see cref="P:System.Windows.Forms.DataGridView.DataSource" />이 <see langword="null" />가 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Windows.Forms.DataGridViewColumn dataGridViewColumn, System.ComponentModel.ListSortDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Windows.Forms.DataGridViewColumn dataGridViewColumn, valuetype System.ComponentModel.ListSortDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Windows::Forms::DataGridViewColumn ^ dataGridViewColumn, System::ComponentModel::ListSortDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Windows.Forms.DataGridViewColumn * System.ComponentModel.ListSortDirection -&gt; unit&#xA;override this.Sort : System.Windows.Forms.DataGridViewColumn * System.ComponentModel.ListSortDirection -&gt; unit" Usage="dataGridView.Sort (dataGridViewColumn, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewColumn" Type="System.Windows.Forms.DataGridViewColumn" />
        <Parameter Name="direction" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="dataGridViewColumn"><see cref="T:System.Windows.Forms.DataGridView" />의 내용을 정렬할 기준이 되는 열입니다.</param>
        <param name="direction"><see cref="T:System.ComponentModel.ListSortDirection" /> 값 중 하나입니다.</param>
        <summary>지정된 열의 내용을 기준으로 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 내용을 오름차순이나 내림차순으로 정렬합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는의 내용을 정렬 된 <xref:System.Windows.Forms.DataGridView> 지정 된 열의 값을 비교 하 여 합니다. 정렬 작업은 기본적으로 사용 합니다 <xref:System.Collections.Comparer.Compare%2A> 메서드를 사용 하 여 열에 있는 셀의 쌍 비교를 <xref:System.Windows.Forms.DataGridViewCell.Value%2A?displayProperty=nameWithType> 속성.  
  
 열에 대 한 합니다 <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> 속성이로 설정 <xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic?displayProperty=nameWithType>의 <xref:System.Windows.Forms.DataGridView.SortedColumn%2A> 및 <xref:System.Windows.Forms.DataGridView.SortOrder%2A> 속성은 자동으로 설정 하 고 적절 한 정렬 문자 모양이 표시 됩니다. 열에 대 한 합니다 <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> 속성이로 설정 <xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType>를 통해 직접 정렬 문자를 표시 해야 하는 <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType> 속성.  
  
 정렬 작업을 처리 하 여이 메서드에 의해 사용 되는 사용자 지정할 수 있습니다는 <xref:System.Windows.Forms.DataGridView.SortCompare> 이벤트입니다. 이 이벤트에만 발생 경우를 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성이 설정 되지 않았습니다.  
  
 경우는 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성이 설정 되어,이 방법은 데이터 바인딩된 열에 대해서만 작동 합니다. 데이터 바인딩된 열에는 해당 <xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType> 속성 집합입니다. 이 인해 합니다 <xref:System.Windows.Forms.DataGridViewColumn.IsDataBound%2A?displayProperty=nameWithType> 반환할 속성 `true`합니다.  
  
 경우에 <xref:System.Windows.Forms.DataGridView> 바인딩된 및 바인딩되지 않은 열을 포함 하는 컨트롤, 컨트롤은 바인딩된 열을 정렬할 때 바인딩되지 않은 열 값을 유지 하려면 가상 모드 구현 해야 합니다. 설정 하 여이 수행할 수 있습니다 합니다 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성을 `true` 하 고 처리를 <xref:System.Windows.Forms.DataGridView.CellValueNeeded> 이벤트입니다. 열 편집 가능한 경우 처리 해야 합니다 <xref:System.Windows.Forms.DataGridView.CellValuePushed> 이벤트입니다. 가상 모드에 대 한 자세한 내용은 참조 하세요. [방법: Windows에서 가상 모드 구현 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)합니다. 컨트롤에 데이터 바인딩된 경우 바인딩되지 않은 열을 기준으로 정렬 하는 것은 지원 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.Sort%2A> 프로그래밍 방식으로 정렬 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">지정된 열이 이 <see cref="T:System.Windows.Forms.DataGridView" />의 일부가 아닌 경우  
  
또는 
<see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 속성이 설정되었고 지정된 열의 <see cref="P:System.Windows.Forms.DataGridViewColumn.IsDataBound" /> 속성이 <see langword="false" />를 반환하는 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="dataGridViewColumn" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> 속성이 <see langword="true" />로 설정되고 지정된 열의 <see cref="P:System.Windows.Forms.DataGridViewColumn.IsDataBound" /> 속성이 <see langword="false" />를 반환하는 경우  
  
또는 
<see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 속성에 의해 지정된 개체가 <see cref="T:System.ComponentModel.IBindingList" /> 인터페이스를 구현하지 않는 경우  
  
또는 
<see cref="P:System.Windows.Forms.DataGridView.DataSource" /> 속성에 의해 지정된 개체에서 <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" /> 속성 값이 <see langword="false" />인 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SortCompare">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewSortCompareEventHandler SortCompare;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewSortCompareEventHandler SortCompare" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.SortCompare" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SortCompare As DataGridViewSortCompareEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewSortCompareEventHandler ^ SortCompare;" />
      <MemberSignature Language="F#" Value="member this.SortCompare : System.Windows.Forms.DataGridViewSortCompareEventHandler " Usage="member this.SortCompare : System.Windows.Forms.DataGridViewSortCompareEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSortCompareEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />가 정렬 작업을 수행하기 위해 두 셀 값을 비교할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트에만 발생 경우 합니다 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성이 설정 되지 않은 및 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성 값이 `false`합니다.  
  
 이 이벤트는 정렬 되는 열에서 셀의 쌍을 비교 합니다. 발생만 클릭할 때 사용 하 여 열 헤더를 <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> 속성 값 <xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic>를 호출 하는 경우 또는 <xref:System.Windows.Forms.DataGridView.Sort%28System.Windows.Forms.DataGridViewColumn%2CSystem.ComponentModel.ListSortDirection%29> 오버 로드. 인 열에 대해이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> 속성 값 <xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic>를 통해 직접 정렬 문자를 표시 해야 하는 <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType> 속성입니다.  
  
 열이 하나 또는 여러 열에 셀 값을 사용 하 여 행을 정렬 하려면이 이벤트를 사용할 수 있습니다. 사용 합니다 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1%2A> 및 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2%2A> 속성에 지정 된 열에서 셀 값을 비교 하는 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column%2A> 속성입니다. 사용 하 여를 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1%2A> 하 고 <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2%2A> 속성을 통해 다른 열의 값에에서 액세스를 <xref:System.Windows.Forms.DataGridView.Rows%2A> 컬렉션입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.SortCompare> 여러 열 정렬에서 합니다. 이 예제는 [방법: Windows Forms DataGridView 컨트롤에서 정렬 사용자 지정](~/docs/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewSortCompareEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/92fb5c14-afab-4cf5-a97e-924fd9cb99f5">방법: Windows Forms DataGridView 컨트롤에서 정렬 사용자 지정</related>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Sorted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Sorted;" />
      <MemberSignature Language="F#" Value="member this.Sorted : EventHandler " Usage="member this.Sorted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤이 정렬 작업을 완료하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트가 발생 하지 않습니다 경우는 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성이 `true` 컨트롤 바인딩되지 않은 열으로 정렬 됩니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 정렬 한 후 현재 셀에 표시 되는지 확인 하는 방법을 보여 줍니다. 이 코드는 바인딩되지 않은 에서만 작동 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 사용 하 여는 <xref:System.Windows.Forms.DataGridView> 외부 데이터 원본에 바인딩된 컨트롤을 정렬할 때 현재 셀에 자동으로 유지 되지 않습니다.  
  
 이 예제를 실행 하려면 다음 코드를 포함 하는 형식으로 붙여넣습니다를 <xref:System.Windows.Forms.DataGridView> 라는 `dataGridView1`합니다. C#의 연결도 해야 합니다는 <xref:System.Windows.Forms.DataGridView.Sorted> 이벤트를 이벤트 처리기입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#150)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#150)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SortedColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn SortedColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumn SortedColumn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SortedColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortedColumn As DataGridViewColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumn ^ SortedColumn { System::Windows::Forms::DataGridViewColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortedColumn : System.Windows.Forms.DataGridViewColumn" Usage="System.Windows.Forms.DataGridView.SortedColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 내용의 현재 정렬 기준이 되는 열을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewColumn" /> 내용의 현재 정렬 기준이 되는 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridView> 정렬 되지 않으면이 속성은 반환 `null`합니다.  
  
 열이이 속성에 나타난 경우에 <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> 속성 값이 <xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic?displayProperty=nameWithType>의 값을 기준으로 정렬 문자 모양을 표시 됩니다는 <xref:System.Windows.Forms.DataGridView.SortOrder%2A> 속성.  
  
 인 열의 경우는 <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> 속성 값 <xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType>를 통해 직접 정렬 문자를 표시 해야 하는 <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType> 속성입니다.  
  
> [!NOTE]
>  사용자 지정 정렬을 사용 하 여 컨트롤을 정렬 하는 경우에이 속성의 값은 의미가 없습니다. 사용자 지정 정렬 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.DataGridView.Sort%28System.Collections.IComparer%29> 메서드 및 <xref:System.Windows.Forms.DataGridView.SortCompare> 이벤트입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.SortedColumn%2A> 속성에 프로그래밍 방식으로 정렬 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SortOrder">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SortOrder SortOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SortOrder SortOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SortOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortOrder As SortOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SortOrder SortOrder { System::Windows::Forms::SortOrder get(); };" />
      <MemberSignature Language="F#" Value="member this.SortOrder : System.Windows.Forms.SortOrder" Usage="System.Windows.Forms.DataGridView.SortOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 있는 항목이 오름차순 또는 내림차순으로 정렬되었는지 여부나, 정렬되지 않았는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.SortOrder" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정렬 문자 모양이 표시 하 여 지정 된 열 때를 확인 하려면이 속성은 사용 합니다 <xref:System.Windows.Forms.DataGridView.SortedColumn%2A> 속성에는 <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> 속성 값 <xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic>합니다. 인 열의 경우를 <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> 속성 값 <xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic>를 표시 하며,를 통해 직접 정렬 문자를 숨기는 <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A> 속성. 열에 있는 경우는 <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewColumnSortMode.NotSortable>, 정렬 문자를 표시할 수 있지만 열 크기가 자동으로 조정 하는 경우에 대 한 공간이 예약 되지 않습니다.  
  
> [!NOTE]
>  사용자 지정 정렬을 사용 하 여 컨트롤을 정렬 하는 경우에이 속성의 값은 의미가 없습니다. 사용자 지정 정렬 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.DataGridView.Sort%2A> 메서드 및 <xref:System.Windows.Forms.DataGridView.SortCompare> 이벤트입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.SortOrder%2A> 속성에 프로그래밍 방식으로 정렬 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="StandardTab">
      <MemberSignature Language="C#" Value="public bool StandardTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StandardTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.StandardTab" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StandardTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StandardTab : bool with get, set" Usage="System.Windows.Forms.DataGridView.StandardTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tab 키를 누를 때 포커스가 컨트롤의 다음 셀로 이동하는 대신, 탭 순서의 다음 컨트롤로 이동하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>Tab 키를 누를 때 포커스가 탭 순서의 다음 컨트롤로 이동하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 `false` 표 셀을 통해 포커스를 이동 하려면 TAB 키를 허용 합니다. 다음 표에서 지정 된 탭 키 조합을 누르면 셀 포커스가 변경 하는 방법을 설명 합니다.  
  
|키 조합|결과|  
|---------------------|------------|  
|Tab|경우는 <xref:System.Windows.Forms.DataGridView.StandardTab%2A> 속성은 `false`, 포커스가 행의 다음 셀으로 이동 합니다. 행의 마지막 셀에 포커스가 있으면 포커스가 다음 행에서 첫 번째 셀으로 이동 합니다. 마지막 셀에 포커스가 있으면는 <xref:System.Windows.Forms.DataGridView>, 탭 순서의 다음 컨트롤로 포커스가 이동 합니다.|  
|Shift+Tab|하는 경우 <xref:System.Windows.Forms.DataGridView.StandardTab%2A> 는 `false`, 포커스가 행의 이전 셀으로 이동 합니다. 행의 첫 번째 셀에 포커스가 있으면 포커스가 이동 마지막 이전 행의 셀입니다. 첫 번째 셀에 포커스가 있으면는 <xref:System.Windows.Forms.DataGridView>, 탭 순서에서 이전 컨트롤로 포커스가 이동 합니다.|  
|Ctrl+Tab|포커스가 탭 순서의 다음 컨트롤로 이동 합니다.|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="StyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.StyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StyleChanged;" />
      <MemberSignature Language="F#" Value="member this.StyleChanged : EventHandler " Usage="member this.StyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 스타일이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는이 컨트롤과 관련이 없습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />를 참조하십시오.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, 사용할 수 있습니다 경우에만 합니다 <xref:System.Windows.Forms.DataGridView> 캐스팅 된는 <xref:System.ComponentModel.ISupportInitialize> 인스턴스.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 컨트롤에 대해 이 메서드가 이미 호출되었습니다.</exception>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />를 참조하십시오.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, 사용할 수 있습니다 경우에만 합니다 <xref:System.Windows.Forms.DataGridView> 캐스팅 된는 <xref:System.ComponentModel.ISupportInitialize> 인스턴스.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.DataGridView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤과 관련된 텍스트를 가져오거나 설정합니다.</summary>
        <value>컨트롤에 연결된 텍스트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 이 컨트롤에 의미가 없습니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridView.Text" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하지만 <xref:System.Windows.Forms.DataGridView.Text%2A> 속성이이 컨트롤에 의미가, 해당 값을 변경할 수,이 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="TopLeftHeaderCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewHeaderCell TopLeftHeaderCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewHeaderCell TopLeftHeaderCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLeftHeaderCell As DataGridViewHeaderCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewHeaderCell ^ TopLeftHeaderCell { System::Windows::Forms::DataGridViewHeaderCell ^ get(); void set(System::Windows::Forms::DataGridViewHeaderCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TopLeftHeaderCell : System.Windows.Forms.DataGridViewHeaderCell with get, set" Usage="System.Windows.Forms.DataGridView.TopLeftHeaderCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewHeaderCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 왼쪽 맨 위에 있는 머리글 셀을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewHeaderCell" />의 왼쪽 맨 위에 있는 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 하면 셀 값을 설정, 바로 가기 메뉴를 연결 하거나에서 수행할 수 있는 다른 작업을 수행할 수 있습니다는 <xref:System.Windows.Forms.DataGridViewHeaderCell>합니다.  
  
 오른쪽에서 왼쪽 언어를 사용 하 여 사용 하도록 설계 된 응용 프로그램에서이 속성을 나타내는 셀이 오른쪽 상단 모서리 일반적으로 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성을 사용 하 여의 왼쪽 위 모서리에 있는 값을 표시 하는 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 이 값의 자식 테이블 마스터/세부 시나리오에 레이블을 지정 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 클래스 개요 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#80)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#80)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#80)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCellErrorText">
      <MemberSignature Language="C#" Value="public void UpdateCellErrorText (int columnIndex, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCellErrorText(int32 columnIndex, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCellErrorText (columnIndex As Integer, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCellErrorText(int columnIndex, int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.UpdateCellErrorText : int * int -&gt; unit" Usage="dataGridView.UpdateCellErrorText (columnIndex, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">업데이트할 셀의 열 인덱스이며, 행 머리글 셀을 나타내는 경우에는 -1입니다.</param>
        <param name="rowIndex">업데이트할 셀의 행 인덱스이며, 열 머리글 셀을 나타내는 경우에는 -1입니다.</param>
        <summary>지정된 위치에 있는 셀에서 해당 오류 텍스트가 업데이트되도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 유지 하는 경우 셀 오류 텍스트 직접 처리 하 여는 <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> 이벤트입니다. 지정된 된 셀에 대 한 저장 된 오류 텍스트를 변경 하면이 메서드를 호출 합니다. 셀을 무효화 되어 강제 적용 합니다 <xref:System.Windows.Forms.DataGridView> 컨트롤을 통해 업데이트 된 오류 텍스트를 검색할를 <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> 이벤트 처리기입니다.  
  
 이 메서드를 사용 하 여 머리글 셀에 대 한 오류를 업데이트할 수 있습니다, 있지만 열 머리글 셀에 오류 문자 모양을 표시 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 -1보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우  
  
또는 
 <paramref name="rowIndex" />가 -1보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCellValue">
      <MemberSignature Language="C#" Value="public void UpdateCellValue (int columnIndex, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCellValue(int32 columnIndex, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCellValue (columnIndex As Integer, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCellValue(int columnIndex, int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.UpdateCellValue : int * int -&gt; unit" Usage="dataGridView.UpdateCellValue (columnIndex, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">새 값을 포함하는 셀의 열 인덱스(0부터 시작)입니다.</param>
        <param name="rowIndex">새 값을 포함하는 셀의 행 인덱스(0부터 시작)입니다.</param>
        <summary>현재 유효한 자동 크기 조정 모드를 적용하여 컨트롤이 새 값을 기준으로 지정된 위치에 있는 셀의 표시를 업데이트하도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가상 모드에 있는 셀 값을 유지 하 고 외부의 사용자 지정 데이터 캐시에서 값을 업데이트 하는 경우이 메서드를 사용 하 여는 <xref:System.Windows.Forms.DataGridView.CellValuePushed> 이벤트 처리기입니다.  
  
 이 메서드는 컨트롤을 통해 새 값을 검색 하는 셀을 무효화 합니다 <xref:System.Windows.Forms.DataGridView.CellValueNeeded> 이벤트 처리기 및 적용 되는 모든 자동 크기 조정 모드를 적용 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" />가 0보다 작거나 컨트롤의 열 수에서 1을 뺀 값보다 큰 경우  
  
또는 
 <paramref name="rowIndex" />가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateRowErrorText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>하나 이상의 행에서 해당 오류 텍스트가 업데이트되도록 합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateRowErrorText">
      <MemberSignature Language="C#" Value="public void UpdateRowErrorText (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateRowErrorText(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateRowErrorText (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateRowErrorText(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.UpdateRowErrorText : int -&gt; unit" Usage="dataGridView.UpdateRowErrorText rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">업데이트할 행의 인덱스(0부터 시작)입니다.</param>
        <summary>지정된 행 인덱스에 있는 행에서 해당 오류 텍스트가 업데이트되도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 유지 하는 경우 행 오류 텍스트 직접 처리 하 여 유용 합니다 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> 이벤트입니다. 지정된 된 행에 대 한 저장 된 오류 텍스트를 변경 하면이 메서드를 호출 합니다. 이렇게 하면 합니다 <xref:System.Windows.Forms.DataGridView> 컨트롤을 통해 업데이트 된 텍스트를 검색 하는 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> 이벤트 처리기입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 유효 범위인 0에서 컨트롤의 행 수 - 1 사이에 있지 않은 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateRowErrorText">
      <MemberSignature Language="C#" Value="public void UpdateRowErrorText (int rowIndexStart, int rowIndexEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateRowErrorText(int32 rowIndexStart, int32 rowIndexEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateRowErrorText (rowIndexStart As Integer, rowIndexEnd As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateRowErrorText(int rowIndexStart, int rowIndexEnd);" />
      <MemberSignature Language="F#" Value="member this.UpdateRowErrorText : int * int -&gt; unit" Usage="dataGridView.UpdateRowErrorText (rowIndexStart, rowIndexEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndexStart" Type="System.Int32" />
        <Parameter Name="rowIndexEnd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndexStart">업데이트할 행 집합에서 첫 번째 행의 인덱스(0부터 시작)입니다.</param>
        <param name="rowIndexEnd">업데이트할 행 집합에서 마지막 행의 인덱스(0부터 시작)입니다.</param>
        <summary>지정된 범위의 행에서 해당 오류 텍스트가 업데이트되도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 유지 하는 경우 행 오류 텍스트 직접 처리 하 여 유용 합니다 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> 이벤트입니다. 지정 된 행에 대 한 저장 된 오류 텍스트를 변경 하면이 메서드를 호출 합니다. 이렇게 하면 합니다 <xref:System.Windows.Forms.DataGridView> 컨트롤을 통해 업데이트 된 텍스트를 검색 하는 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> 이벤트 처리기입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndexStart" />가 유효 범위인 0에서 컨트롤의 행 수 - 1 사이에 있지 않은 경우  
  
또는 
 <paramref name="rowIndexEnd" />가 유효 범위인 0에서 컨트롤의 행 수 - 1 사이에 있지 않은 경우  
  
또는 
 <paramref name="rowIndexEnd" />가 <paramref name="rowIndexStart" />보다 작은 경우</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateRowHeightInfo">
      <MemberSignature Language="C#" Value="public void UpdateRowHeightInfo (int rowIndex, bool updateToEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateRowHeightInfo(int32 rowIndex, bool updateToEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateRowHeightInfo (rowIndex As Integer, updateToEnd As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateRowHeightInfo(int rowIndex, bool updateToEnd);" />
      <MemberSignature Language="F#" Value="member this.UpdateRowHeightInfo : int * bool -&gt; unit" Usage="dataGridView.UpdateRowHeightInfo (rowIndex, updateToEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="updateToEnd" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">업데이트할 첫 번째 행의 인덱스(0부터 시작)입니다.</param>
        <param name="updateToEnd">지정된 행 및 모든 후속 행을 업데이트하려면 <see langword="true" />입니다.</param>
        <summary>지정된 행에서 해당 높이 정보가 업데이트되도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 행 높이 대 한 처리기를 사용 하 여 직접 유지 하는 경우에 유용 합니다 <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> 고 <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> 이벤트입니다. 외부에 저장 된 행 높이 변경할 때마다이 메서드를 호출을 <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> 이벤트 처리기입니다. 이렇게 하면 합니다 <xref:System.Windows.Forms.DataGridView> 컨트롤을 통해 업데이트 된 높이 정보를 검색 하는 <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> 이벤트 처리기입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0보다 작고 <paramref name="updateToEnd" />가 <see langword="true" />인 경우  
  
또는 
 <paramref name="rowIndex" />가 -1보다 작고 <paramref name="updateToEnd" />가 <see langword="false" />입니다.  
  
또는 
 <paramref name="rowIndex" />가 <see cref="P:System.Windows.Forms.DataGridView.Rows" /> 컬렉션의 가장 높은 행 인덱스보다 큰 경우</exception>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UserAddedRow">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler UserAddedRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler UserAddedRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.UserAddedRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UserAddedRow As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ UserAddedRow;" />
      <MemberSignature Language="F#" Value="member this.UserAddedRow : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.UserAddedRow : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 행을 추가하는 작업을 마치면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.UserAddedRow> 에 있는 항목의 총 수를 표시 하는 레이블을 업데이트 하는 이벤트를 <xref:System.Windows.Forms.DataGridView>입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.SelectionChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UserDeletedRow">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler UserDeletedRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler UserDeletedRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.UserDeletedRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UserDeletedRow As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ UserDeletedRow;" />
      <MemberSignature Language="F#" Value="member this.UserDeletedRow : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.UserDeletedRow : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에서 행을 삭제하는 작업을 마치면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DataGridView.UserDeletedRow> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DataGridView> 라는 `DataGridView1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DataGridView.UserDeletedRow> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#368](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#368)]
 [!code-vb[System.Windows.Forms.EventExamples#368](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#368)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UserDeletingRow">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowCancelEventHandler UserDeletingRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowCancelEventHandler UserDeletingRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.UserDeletingRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UserDeletingRow As DataGridViewRowCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowCancelEventHandler ^ UserDeletingRow;" />
      <MemberSignature Language="F#" Value="member this.UserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventHandler " Usage="member this.UserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에서 행을 삭제하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 완료 되는 행 삭제를 방지 하기 위해이 이벤트를 취소할 수 있습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridView.UserDeletingRow> 에서 행의 삭제를 취소 하려면 이벤트를 <xref:System.Windows.Forms.DataGridView> 균형을 시작할 행 선택 영역에 포함 되어 있으면 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.SelectionChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UserSetCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor UserSetCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor UserSetCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.UserSetCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserSetCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ UserSetCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserSetCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.DataGridView.UserSetCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.Control.Cursor" /> 속성의 기본값 또는 사용자 지정 값을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.Cursor" /> 속성의 일반 값을 나타내는 <see cref="P:System.Windows.Forms.Control.Cursor" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 설정할 수 있지만 <xref:System.Windows.Forms.Control.Cursor%2A> 속성인 마우스 포인터의 위치에 따라 해당 값을 변경할 수 있습니다. 이 속성의 값을 검색을 사용 합니다 <xref:System.Windows.Forms.Control.Cursor%2A> 속성 일반 상태로 기본값인 또는 코드에서 지정 된 값 중 하나입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBar">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollBar VerticalScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollBar VerticalScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.VerticalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VerticalScrollBar As ScrollBar" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::ScrollBar ^ VerticalScrollBar { System::Windows::Forms::ScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBar : System.Windows.Forms.ScrollBar" Usage="System.Windows.Forms.DataGridView.VerticalScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 세로 스크롤 막대를 가져옵니다.</summary>
        <value>세로 스크롤 막대를 나타내는 <see cref="T:System.Windows.Forms.ScrollBar" />입니다</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollingOffset">
      <MemberSignature Language="C#" Value="public int VerticalScrollingOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VerticalScrollingOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.VerticalScrollingOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalScrollingOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VerticalScrollingOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollingOffset : int" Usage="System.Windows.Forms.DataGridView.VerticalScrollingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 세로로 스크롤된 픽셀 수를 가져옵니다.</summary>
        <value>컨트롤이 세로로 스크롤된 픽셀 수입니다.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="VirtualMode">
      <MemberSignature Language="C#" Value="public bool VirtualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VirtualMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.VirtualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VirtualMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualMode : bool with get, set" Usage="System.Windows.Forms.DataGridView.VirtualMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 직접 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 대한 데이터 관리 작업을 제공했는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridView" />에서 사용자 지정 데이터 관리 작업을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가상 모드는 매우 큰 데이터 저장소를 사용 하 여 사용 하도록 설계 되었습니다. 경우는 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성은 `true`, 만든를 <xref:System.Windows.Forms.DataGridView> 개수의 행 및 열과 다음 핸들을 사용 하 여를 <xref:System.Windows.Forms.DataGridView.CellValueNeeded> 셀을 채우는 데는 이벤트입니다. 가상 모드 채우기, 편집 및 삭제를 처리 하는 기본 데이터 캐시의 구현이 필요 <xref:System.Windows.Forms.DataGridView> 사용자의 동작을 기준으로 하는 셀입니다. 가상 모드 구현에 대 한 자세한 내용은 참조 하세요. [방법: Windows에서 가상 모드 구현 Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)합니다.  
  
 바인딩되지 않은 열 값을 유지 하기 위해 가상 모드를 사용 해야 경우는 <xref:System.Windows.Forms.DataGridView> 컨트롤이 바인딩된 모드 인지 합니다. 바인딩된 모드로 바인딩되지 않은 열을 기준으로 정렬 하는 것은 지원 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제 코드는 양의 정수 테이블을 만들려면 가상 모드를 사용 합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#0)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#0)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="dataGridView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">처리할 창 메시지를 나타내며 참조에 의해 전달되는 <see cref="T:System.Windows.Forms.Message" />입니다.</param>
        <summary>창 메시지를 처리합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 참조는 <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType> 기본 클래스에서 메서드.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView 컨트롤(Windows Forms)</related>
      </Docs>
    </Member>
  </Members>
</Type>