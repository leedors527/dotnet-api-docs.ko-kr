<Type Name="DataGridViewCell" FullName="System.Windows.Forms.DataGridViewCell">
  <Metadata><Meta Name="ms.openlocfilehash" Value="52b32a5a2dd19d1ae2007bf447c192abbb3a9537" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59016970" /></Metadata><TypeSignature Language="C#" Value="public abstract class DataGridViewCell : System.Windows.Forms.DataGridViewElement, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataGridViewCell extends System.Windows.Forms.DataGridViewElement implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataGridViewCell&#xA;Inherits DataGridViewElement&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCell abstract : System::Windows::Forms::DataGridViewElement, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type DataGridViewCell = class&#xA;    inherit DataGridViewElement&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridViewCellConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 개별 셀을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridViewCell> 클래스의 개별 셀을 나타내는 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 셀을 통해 검색할 수 있습니다 합니다 <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> 의 컬렉션을 <xref:System.Windows.Forms.DataGridViewRow>입니다.  
  
 행과 열에는 <xref:System.Windows.Forms.DataGridViewCell> 에서 셀의 위치를 식별 합니다 <xref:System.Windows.Forms.DataGridView>합니다. 일반적인 셀 행 및 열이 포함 되는 특정 데이터를 포함 합니다. 셀 속성을 설정 하 고 연결 된 이벤트를 처리 하 여 다양 한 방법으로 사용자 지정할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 형식의 사용을 보여 줍니다. 이 예제에 대 한 자세한 내용은 참조 하세요. [방법: Forms DataGridView 컨트롤을 Windows에서 개별 셀에 도구 설명 추가](~/docs/framework/winforms/controls/add-tooltips-to-individual-cells-in-a-wf-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/cpp/datagridviewcell.tooltiptext.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/CS/datagridviewcell.tooltiptext.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/VB/datagridviewcell.tooltiptext.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>파생 하는 경우 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 파생된 클래스에 새 속성 추가 재정의 해야 합니다 <see cref="M:System.Windows.Forms.DataGridViewCell.Clone" /> 복제 작업 중 새 속성을 복사 하는 방법입니다. 또한 기본 클래스를 호출 해야 <see cref="M:System.Windows.Forms.DataGridViewCell.Clone" /> 메서드는 기본 클래스의 속성이 새로운 셀에 복사 되도록 합니다.</para></block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.ICloneable" />
    <altmember cref="T:System.IDisposable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataGridViewCell ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataGridViewCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.DataGridViewCell.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject" />에 할당된 <see cref="T:System.Windows.Forms.DataGridViewCell" />를 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject" />에 할당된 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드에서 반환 되는 인스턴스를 제어 하려면 재정의 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 메서드.  
  
 현재 컨트롤에 할당된 <xref:System.Windows.Forms.AccessibleObject> 클래스가 없으면 이 클래스의 새 인스턴스가 만들어집니다.  
  
> [!NOTE]
>  가져오거나 설정 합니다 <xref:System.Windows.Forms.Control.AccessibilityObject%2A> 속성에 대 한 참조를 추가 해야 합니다는 `Accessibility` 어셈블리와 함께 설치는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다.  
  
 액세스 가능 개체에 대 한 자세한 내용은 MSDN Library의 "Active Accessibility" 섹션을 참조 하세요 [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="AdjustCellBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustCellBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustCellBorderStyle(class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AdjustCellBorderStyle (dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, dataGridViewAdvancedBorderStylePlaceholder As DataGridViewAdvancedBorderStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedColumn As Boolean, isFirstDisplayedRow As Boolean) As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustCellBorderStyle(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStyleInput, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="F#" Value="abstract member AdjustCellBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle&#xA;override this.AdjustCellBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="dataGridViewCell.AdjustCellBorderStyle (dataGridViewAdvancedBorderStyleInput, dataGridViewAdvancedBorderStylePlaceholder, singleVerticalBorderAdded, singleHorizontalBorderAdded, isFirstDisplayedColumn, isFirstDisplayedRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewAdvancedBorderStyleInput" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="dataGridViewAdvancedBorderStylePlaceholder" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataGridViewAdvancedBorderStyleInput">수정할 셀 테두리 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</param>
        <param name="dataGridViewAdvancedBorderStylePlaceholder">셀 테두리 스타일에 대한 중간 변경 사항을 저장하는 데 사용되는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</param>
        <param name="singleVerticalBorderAdded">셀에 세로 테두리를 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="singleHorizontalBorderAdded">셀에 가로 테두리를 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="isFirstDisplayedColumn">호스팅 셀이 처음 표시되는 열에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="isFirstDisplayedRow">호스팅 셀이 처음 표시되는 행에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 조건에 따라 입력 셀 테두리 스타일을 수정합니다.</summary>
        <returns>수정된 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridView> 컨트롤을 내부적으로 호출 된 <xref:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle%2A> 셀 테두리의 모양을 결정 하는 방법. <xref:System.Windows.Forms.DataGridView> 컨트롤의 값을 일반적으로 사용 합니다 <xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A> 속성에 대 한는 `dataGridViewAdvancedBorderStyleInput` 매개 변수입니다.  
  
 <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.OutsetPartial?displayProperty=nameWithType> 값 셀에 대 한 입력된 스타일으로 지원 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle%2A> 셀의 테두리를 사용자 지정 하는 방법입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#20)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>셀 테두리의 모양을 사용자 지정 하려는 경우이 메서드를 재정의 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.HasStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
      </Docs>
    </Member>
    <Member MemberName="BorderWidths">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle BorderWidths (System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle BorderWidths(class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.BorderWidths(System.Windows.Forms.DataGridViewAdvancedBorderStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BorderWidths (advancedBorderStyle As DataGridViewAdvancedBorderStyle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle BorderWidths(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle);" />
      <MemberSignature Language="F#" Value="abstract member BorderWidths : System.Windows.Forms.DataGridViewAdvancedBorderStyle -&gt; System.Drawing.Rectangle&#xA;override this.BorderWidths : System.Windows.Forms.DataGridViewAdvancedBorderStyle -&gt; System.Drawing.Rectangle" Usage="dataGridViewCell.BorderWidths advancedBorderStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
      </Parameters>
      <Docs>
        <param name="advancedBorderStyle">여백을 계산할 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</param>
        <summary>모든 셀 여백의 너비를 나타내는 <see cref="T:System.Drawing.Rectangle" />을 반환합니다.</summary>
        <returns>모든 셀 여백의 너비를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 셀 테두리의 기본 너비는 픽 합니다. 다음 사용 하 여 <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle> 테두리의 너비를 수정 하려면:  
  
-   <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.None> 값은 0 픽셀 너비를 나타냅니다.  
  
-   합니다 <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.OutsetDouble> 또는 <xref:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle.InsetDouble> 값으로 1 픽셀씩 기본 너비를 늘립니다.  
  
 또한 경우 합니다 <xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A> 셀의 행을 소유 하는 것에 대 한 속성을 설정 하면 사각형의 높이의 값 만큼 늘리는 <xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A>합니다. 경우는 <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A> 셀의 열을 소유 하는 것에 대 한 속성을 설정 하면 사각형의 너비 값을 기준으로 증가 <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewCell.BorderWidths%2A> 메서드의 <xref:System.Windows.Forms.DataGridViewCell> 셀에 사용할 수 있는 그리기 영역을 확인 하는 클래스입니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 사용 안 함 단추 단추 열에 Windows Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedCellBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="ClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool ClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool&#xA;override this.ClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool" Usage="dataGridViewCell.ClickUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> 메서드에 전달되는 데이터를 포함하는 <see cref="M:System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)" />입니다.</param>
        <summary>셀을 클릭하는 경우 셀의 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.ClickUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnClick%2A> 메서드. 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnClick%2A> 셀의 행을 공유 하지 않도록 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="dataGridViewCell.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 셀과 정확하게 일치하는 복사본을 만듭니다.</summary>
        <returns>복제된 <see cref="T:System.Windows.Forms.DataGridViewCell" />을 나타내는 <see cref="T:System.Object" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 된 <xref:System.Windows.Forms.DataGridViewCell.Clone%2A> 에서 파생 될 때마다 메서드는 <xref:System.Windows.Forms.DataGridViewCell> 클래스 및 파생된 클래스에 새 속성을 추가 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Windows.Forms.DataGridViewCell.Clone" /> 파생된 클래스에서 메서드 호출 기본 클래스의 <see cref="M:System.Windows.Forms.DataGridViewCell.Clone" /> 메서드를 기본 클래스의 속성이 새로운 셀을에 복사 되 고 파생된 클래스에 추가 된 속성의 값도 복사 해야 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnIndex : int" Usage="System.Windows.Forms.DataGridViewCell.ColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 셀의 열 인덱스를 가져옵니다.</summary>
        <value>셀을 포함하는 열의 인덱스이거나, 셀이 열에 포함되어 있지 않으면 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 행 머리글이 포함 된 행에 대 한 열 인덱스가-1 값이 있습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewCell.ColumnIndex%2A> 정수 값을 확인 하는 열을 결정 하는 속성입니다. 이 예제에서는 셀을 `Description` 선택한 셀의 내용을 합을 계산 하는 경우 열은 무시 됩니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="ContentBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ContentBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ContentBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ContentBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ContentBounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentBounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DataGridViewCell.ContentBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 내용 영역을 둘러싸는 경계 사각형을 가져옵니다.</summary>
        <value>셀 내용의 경계를 지정하는 <see cref="T:System.Drawing.Rectangle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트 좌표 (픽셀)를 보고 하는 사각형을 반환된 합니다.  
  
 이 속성을 호출 합니다 <xref:System.Windows.Forms.DataGridViewCell.GetContentBounds%2A> 값을 가져오도록 하는 방법입니다. 기본에 대 한 <xref:System.Windows.Forms.DataGridViewCell> 형식의 경우이 값은 <xref:System.Drawing.Rectangle.Empty>합니다.  
  
 셀 내용 보다는 셀의 경계 사각형을 사용 합니다 <xref:System.Windows.Forms.DataGridView.GetCellDisplayRectangle%2A?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">셀을 포함하는 행이 공유 행인 경우  
  
또는 
셀이 열 머리글 셀인 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 속성의 값이 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Size" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.PreferredSize" />
        <altmember cref="F:System.Drawing.Rectangle.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ContentClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool ContentClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ContentClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ContentClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ContentClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ContentClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool&#xA;override this.ContentClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool" Usage="dataGridViewCell.ContentClickUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> 메서드에 전달되는 데이터를 포함하는 <see cref="M:System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />입니다.</param>
        <summary>셀의 내용을 클릭하는 경우 셀의 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.ContentClickUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnContentClick%2A> 메서드. 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnContentClick%2A> 셀의 행을 공유 하지 않도록 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="ContentDoubleClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool ContentDoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ContentDoubleClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ContentDoubleClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ContentDoubleClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ContentDoubleClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool&#xA;override this.ContentDoubleClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool" Usage="dataGridViewCell.ContentDoubleClickUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> 메서드에 전달되는 데이터를 포함하는 <see cref="M:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />입니다.</param>
        <summary>셀의 내용을 두 번 클릭하는 경우 셀의 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.ContentDoubleClickUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick%2A> 메서드. 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick%2A> 셀의 행을 공유 하지 않도록 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀과 연결된 바로 가기 메뉴를 가져오거나 설정합니다.</summary>
        <value>셀과 연결된 <see cref="T:System.Windows.Forms.ContextMenuStrip" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 셀을 마우스 오른쪽 단추로 클릭할 때 일반적으로 표시 되는 바로 가기 메뉴를 나타냅니다.  
  
 경우는 <xref:System.Windows.Forms.DataGridView> 컨트롤 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성을 설정 또는 해당 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성은 `true`의 값을 가져올를 <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> 속성 발생을 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> 컨트롤의 이벤트의 값을 반환 합니다를 <xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType> 속성으로는 이벤트 처리기를 지정 합니다. 이벤트 처리기가 없는 경우의 가치를 창출 합니다 <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> 속성의 기본값 또는 이전에 지정 된 값을 반환 `null`합니다.  
  
 처리를 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> 이벤트는 다량의 셀을 설정할 때 성능 저하를 방지 하려면 데이터를 사용 하 여 작업할 때 주로 유용 <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> 여러 셀에 대 한 값입니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 발생이 속성을 변경 합니다 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged> 소유 하 고 있는 이벤트 <xref:System.Windows.Forms.DataGridView>있는 경우.  
  
 행을 설정 하 여 개별 셀 대신 개별 행에 대 한 바로 가기 메뉴를 지정할 수도 있습니다 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 속성 또는 처리 합니다 <xref:System.Windows.Forms.DataGridView> 컨트롤의 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 이벤트입니다. 셀 <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> 속성 설정은 행 재정의 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 속성 설정 및 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> 이벤트 모두를 재정의 합니다 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 이벤트 및 행 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 속성 설정. 지정할 수 있습니다 `null` 셀 바로 가기 메뉴에서 있지만 대 한 행의 바로 가기 메뉴가 재정의 하지 못하도록 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridViewCell.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewCell" />에 대해 액세스 가능한 개체를 새로 만듭니다.</summary>
        <returns><see cref="T:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject" />에 대한 새 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.CreateAccessibilityInstance%2A> 메서드를 명시적으로 호출하지 않으면 <xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A> 속성을 참조할 때 이 메서드가 호출됩니다.  
  
> [!NOTE]
>  가져오거나 설정할 <xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A>에 대 한 참조를 추가 해야 합니다는 `Accessibility` 어셈블리와 함께 설치는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell.DataGridViewCellAccessibleObject" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.AccessibilityObject" />
        <altmember cref="N:Accessibility" />
      </Docs>
    </Member>
    <Member MemberName="DefaultNewRowValue">
      <MemberSignature Language="C#" Value="public virtual object DefaultNewRowValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultNewRowValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultNewRowValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DefaultNewRowValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultNewRowValue : obj" Usage="System.Windows.Forms.DataGridViewCell.DefaultNewRowValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>새 레코드에 대한 행의 셀 기본값을 가져옵니다.</summary>
        <value>기본값을 나타내는 <see cref="T:System.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A> 기본 클래스 속성에에서 <xref:System.Windows.Forms.DataGridViewCell> 항상 반환 `null`합니다. 그러나이 속성은 다른 기본값을 반환 하려면 셀을 파생된 클래스에서 재정의할 수 있습니다.  
  
 이 속성에 의해 반환 되는 값은 새 레코드에 대 한 행의 셀이 있으면 표시 됩니다. 에 대 한 처리기에서이 값을 재정의할 수는 <xref:System.Windows.Forms.DataGridView.DefaultValuesNeeded?displayProperty=nameWithType> 포커스가 새 레코드에 대 한 행을 입력할 때 이벤트입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A> 의 속성을 `CalendarCell` 에서 파생 된 클래스 <xref:System.Windows.Forms.DataGridViewTextBoxCell>합니다. 이 예제에서 제공 하는 더 큰 코드 예제의의 일부인 [방법: DataGridView 셀에서 Windows Forms 컨트롤 호스팅](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#200)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
      </Docs>
    </Member>
    <Member MemberName="DetachEditingControl">
      <MemberSignature Language="C#" Value="public virtual void DetachEditingControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetachEditingControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.DetachEditingControl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DetachEditingControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DetachEditingControl();" />
      <MemberSignature Language="F#" Value="abstract member DetachEditingControl : unit -&gt; unit&#xA;override this.DetachEditingControl : unit -&gt; unit" Usage="dataGridViewCell.DetachEditingControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridView" />에서 셀의 편집 컨트롤을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 현재 셀에서 편집 컨트롤을 편집 모드 종료를 호스팅하는 경우이 메서드를 호출 합니다. 이 메서드로 제거 되는 <xref:System.Windows.Forms.DataGridView.EditingControl%2A> 에서 <xref:System.Windows.Forms.DataGridView.EditingPanel%2A>을 제거 합니다를 <xref:System.Windows.Forms.DataGridView.EditingPanel%2A> 에서 <xref:System.Windows.Forms.Control.Controls%2A> 컬렉션을 <xref:System.Windows.Forms.DataGridView>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 셀이 <see cref="T:System.Windows.Forms.DataGridView" />와 연결되지 않은 경우  
  
또는 
연결된 <see cref="P:System.Windows.Forms.DataGridView.EditingControl" />의 <see cref="T:System.Windows.Forms.DataGridView" /> 속성 값이 <see langword="null" />인 경우. 예를 들어, 컨트롤이 편집 모드에 있지 않은 경우가 여기에 해당합니다.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditingControl" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditingPanel" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
      </Docs>
    </Member>
    <Member MemberName="Displayed">
      <MemberSignature Language="C#" Value="public virtual bool Displayed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Displayed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Displayed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Displayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Displayed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Displayed : bool" Usage="System.Windows.Forms.DataGridViewCell.Displayed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀이 현재 화면에 표시되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>셀 전체나 일부가 화면에 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 특정 셀이 화면을 벗어나거나 스크롤 되었는지 여부를 확인 하려면이 속성을 사용 합니다.  
  
 경우 셀 <xref:System.Windows.Forms.DataGridViewCell.Visible%2A> 속성 값이 `false`,이 속성은 반환 `false` 도 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Visible" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewCell" />에서 사용하는 리소스를 해제합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dataGridViewCell.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewCell" />에서 사용하는 모든 리소스를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> 사용을 마치면 <xref:System.Windows.Forms.DataGridViewCell>를 호출합니다. <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> 메서드를 사용하면 <xref:System.Windows.Forms.DataGridViewCell>를 사용할 수 없게 됩니다. 호출한 후 <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Windows.Forms.DataGridViewCell> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Windows.Forms.DataGridViewCell> 차지한 합니다. 자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Windows.Forms.DataGridViewCell>를 호출하십시오. 이렇게 하지 않으면 가비지 수집기가 <xref:System.Windows.Forms.DataGridViewCell> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dataGridViewCell.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary><see cref="T:System.Windows.Forms.DataGridViewCell" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 공용 `Dispose` 메서드 및 <xref:System.Object.Finalize%2A> 메서드. `Dispose` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.  
  
 `disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Windows.Forms.DataGridViewCell>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다. 이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DoubleClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool DoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DoubleClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DoubleClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool DoubleClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member DoubleClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool&#xA;override this.DoubleClickUnsharesRow : System.Windows.Forms.DataGridViewCellEventArgs -&gt; bool" Usage="dataGridViewCell.DoubleClickUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" /> 메서드에 전달되는 데이터를 포함하는 <see cref="M:System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />입니다.</param>
        <summary>셀을 두 번 클릭하는 경우 셀의 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.DoubleClickUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnDoubleClick%2A> 메서드. 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnDoubleClick%2A> 셀의 행을 공유 하지 않도록 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="EditedFormattedValue">
      <MemberSignature Language="C#" Value="public object EditedFormattedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditedFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.EditedFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditedFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditedFormattedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditedFormattedValue : obj" Usage="System.Windows.Forms.DataGridViewCell.EditedFormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀이 편집 모드에 있고 값이 커밋되지 않았는지 여부와 관계없이 셀의 형식이 지정된 현재 값을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewCell" />의 형식이 지정된 현재 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 셀의 현재 값을 반환 하거나 편집 컨트롤에서 셀이 편집 모드입니다. 그렇지 않은 경우이 속성의 값을 가져올 셀 값으로 변환 합니다 해당 표시 값으로 지정 된 형식의 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> 속성입니다. 제기 된 <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> 값 변환에 맞게 처리할 수 있는 이벤트입니다.  
  
 정상적이 지 않습니다 서식 지정 하는 경우는 <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType> 이벤트가 발생 합니다. 이 이벤트 또는 처리기 집합에 대 한 처리기가 하는 경우는 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> 속성을 `true`, 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewCell.EditedFormattedValue%2A> 속성입니다. 이 예제는 <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> 속성을 확인 하는 경우 현재 셀의 내용을 편집 하 고 커밋되지 않은 편집된 된 값은 사용 되는 셀이 수정 된 경우 사용 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">셀을 포함하는 행이 공유 행인 경우  
  
또는 
셀이 열 머리글 셀인 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />가 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <exception cref="T:System.Exception">형식 지정이 실패하고 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 컨트롤의 <see cref="T:System.Windows.Forms.DataGridView" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditType">
      <MemberSignature Language="C#" Value="public virtual Type EditType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EditType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.EditType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ EditType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditType : Type" Usage="System.Windows.Forms.DataGridViewCell.EditType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 호스팅된 편집 컨트롤의 형식을 가져옵니다.</summary>
        <value><see cref="T:System.Type" /> 형식을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생된 셀 형식을 해당 호스팅된 편집 컨트롤의 형식을 반환 하도록이 속성을 재정의 합니다. 셀 편집 컨트롤이 없는 경우와 마찬가지로 <xref:System.Windows.Forms.DataGridViewButtonCell>서 <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> 속성이 반환 `null`.  
  
   
  
## Examples  
 다음 코드 예제에는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> 의 속성을 `CalendarCell` 에서 파생 된 클래스 <xref:System.Windows.Forms.DataGridViewTextBoxCell>합니다. 이 예제에서 제공 하는 더 큰 코드 예제의의 일부인 [방법: DataGridView 셀에서 Windows Forms 컨트롤 호스팅](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#200)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
        <altmember cref="T:System.Windows.Forms.DataGridViewButtonCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
      </Docs>
    </Member>
    <Member MemberName="EnterUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool EnterUnsharesRow (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnterUnsharesRow(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.EnterUnsharesRow(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EnterUnsharesRow (rowIndex As Integer, throughMouseClick As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool EnterUnsharesRow(int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="abstract member EnterUnsharesRow : int * bool -&gt; bool&#xA;override this.EnterUnsharesRow : int * bool -&gt; bool" Usage="dataGridViewCell.EnterUnsharesRow (rowIndex, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <param name="throughMouseClick">사용자 작업을 통해 포커스가 셀로 이동했으면 <see langword="true" />이고, 프로그래밍 작업을 통해 포커스가 셀로 이동했으면 <see langword="false" />입니다.</param>
        <summary>포커스가 셀로 이동하는 경우 부모 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.EnterUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnEnter%2A> 메서드. 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnEnter%2A> 셀이 포함 된 행을 공유 해제 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="ErrorIconBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ErrorIconBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ErrorIconBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ErrorIconBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorIconBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ErrorIconBounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorIconBounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DataGridViewCell.ErrorIconBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀에 대한 오류 아이콘의 범위를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.Drawing.Rectangle" />에 대한 오류 아이콘의 범위를 나타내는 <see cref="T:System.Windows.Forms.DataGridViewCell" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트 좌표 (픽셀)를 보고 하는 사각형을 반환된 합니다.  
  
 경우는 <xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A?displayProperty=nameWithType> 속성은 `false`,이 속성의 값은 <xref:System.Drawing.Rectangle.Empty>합니다.  
  
 이 속성을 호출 합니다 <xref:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds%2A> 값을 가져오도록 하는 방법입니다. 기본에 대 한 <xref:System.Windows.Forms.DataGridViewCell> 형식에이 값은 항상 <xref:System.Drawing.Rectangle.Empty>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우  
  
또는 
 <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />가 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">셀을 포함하는 행이 공유 행인 경우  
  
또는 
셀이 열 머리글 셀인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string with get, set" Usage="System.Windows.Forms.DataGridViewCell.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀과 연결된 오류 조건을 설명하는 텍스트를 가져오거나 설정합니다.</summary>
        <value>셀과 연결된 오류 조건을 설명하는 텍스트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> 속성은 처리 하는 경우 사용 합니다 <xref:System.Windows.Forms.DataGridView.CellValidating> 의 이벤트를 <xref:System.Windows.Forms.DataGridView>합니다. 실패 하면 일부 유효성 검사 조건 셀의 값을 설정 합니다 <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> 속성을 설정 하 여 커밋 작업을 취소를 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 의 속성을 <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs> 에 `true`합니다. 지정한 텍스트에 의해 표시 됩니다는 <xref:System.Windows.Forms.DataGridView>, 사용자는 셀의 데이터에서 오류를 수정 하 라는 메시지가 표시 됩니다.  
  
 때를 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 의 속성을 <xref:System.Windows.Forms.DataGridView> 은 `true`, 행 및 사용 하 여 셀에 대 한 오류 텍스트를 제공할 수 있습니다를 <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> 및 <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> 이벤트.  
  
 할당 하는 경우 다른 <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> 셀에 문자열을 <xref:System.Windows.Forms.DataGridView.CellErrorTextChanged> 이벤트를는 <xref:System.Windows.Forms.DataGridView> 컨트롤 발생 합니다.  
  
 App.config 파일에 다음 항목이 포함 되어 있으면 시스템 DPI 설정에 의해.NET Framework 4.5.2부터을 결정 됩니다 오류 아이콘의 크기를 조정 합니다.  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
```  
  
   
  
## Examples  
 다음 코드 예제에는 바인딩되지 않은에서 오류 조건을 처리 하는 경우이 속성을 사용 하는 방법을 보여 줍니다. <xref:System.Windows.Forms.DataGridView>합니다. 합니다 `AnnotateCell` 메서드는 오류 메시지 문자열을 설정 합니다 <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> 속성입니다.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DataGridViewCell ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DataGridViewCell ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="dataGridViewCell.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>가비지 수집에 의해 <see cref="T:System.Windows.Forms.DataGridViewCell" />가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출 합니다 <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> 메서드를 `false` 매개 변수로 합니다.  
  
 이 메서드는 <xref:System.Object.Finalize%2A>를 재정의합니다. 애플리케이션 코드는이 메서드를 호출 하지 개체의 `Finalize` 메서드를 호출 하 여 가비지 수집기에 의해 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지를 수집 하는 동안 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A> 메서드.  
  
 자세한 내용은 [Finalize 메서드 및 소멸자](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))를 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md), 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="FormattedValue">
      <MemberSignature Language="C#" Value="public object FormattedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormattedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormattedValue : obj" Usage="System.Windows.Forms.DataGridViewCell.FormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표시를 위해 형식이 지정된 셀 값을 가져옵니다.</summary>
        <value>형식이 지정된 셀 값이거나, 셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않으면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> 속성은 셀을 포함 하는 실제 데이터 개체 이지만 <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> 이 개체의 형식이 지정 된 표현입니다. 합니다 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> 및 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> 속성 데이터 형식의 이러한 값은 각각에 해당 합니다.  
  
 이 속성의 값을 가져올 호출을 <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> 셀 값에서 지정 된 형식의 해당 표시 값으로 변환 하는 메서드는 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> 속성입니다. 제기 된 <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> 값 변환에 맞게 처리할 수 있는 이벤트입니다.  
  
 정상적이 지 않습니다 서식 지정 하는 경우는 <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType> 이벤트가 발생 합니다. 이 이벤트 또는 처리기 집합에 대 한 처리기가 하는 경우는 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> 속성을 `true`, 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> 속성입니다. 이 예제에서는 합니다 <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> 속성은 사용 하 여 현재 셀의 내용을 편집 하 고 커밋되지 않은 하는 경우 및 셀이 수정 된 경우를 확인할 수는 <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> 사용 됩니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />가 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">셀을 포함하는 행이 공유 행인 경우  
  
또는 
셀이 열 머리글 셀인 경우</exception>
        <exception cref="T:System.Exception">형식 지정이 실패하고 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 컨트롤의 <see cref="T:System.Windows.Forms.DataGridView" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
      </Docs>
    </Member>
    <Member MemberName="FormattedValueType">
      <MemberSignature Language="C#" Value="public virtual Type FormattedValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FormattedValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FormattedValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ FormattedValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormattedValueType : Type" Usage="System.Windows.Forms.DataGridViewCell.FormattedValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀과 연결된 형식이 지정된 값의 형식을 가져옵니다.</summary>
        <value>셀의 형식이 지정된 값에 대한 형식을 나타내는 <see cref="T:System.Type" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> 속성은 셀을 포함 하는 실제 데이터 개체 이지만 <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> 속성 데이터의 서식이 지정 된 표현입니다. 합니다 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> 및 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> 속성 데이터 형식의 이러한 값은 각각에 해당 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> 셀 내용의 형식을 확인 하는 속성입니다. 이 예제는 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> 속성 셀에 포함 되어 있는지 확인 하는 데 사용 됩니다는 <xref:System.String> 값으로 변환 하기 전에 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
      </Docs>
    </Member>
    <Member MemberName="Frozen">
      <MemberSignature Language="C#" Value="public virtual bool Frozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Frozen" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Frozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Frozen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Frozen : bool" Usage="System.Windows.Forms.DataGridViewCell.Frozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀이 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>셀이 고정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Windows.Forms.DataGridViewCell.Frozen%2A> 속성 셀의 부모 행과 열의 상태에 따라 달라 집니다. 경우는 `Frozen` 행 또는 열 속성 `true`, 셀의 <xref:System.Windows.Forms.DataGridViewCell.Frozen%2A> 속성 수도 `true`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Frozen" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.Frozen" />
      </Docs>
    </Member>
    <Member MemberName="GetClipboardContent">
      <MemberSignature Language="C#" Value="protected virtual object GetClipboardContent (int rowIndex, bool firstCell, bool lastCell, bool inFirstRow, bool inLastRow, string format);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetClipboardContent(int32 rowIndex, bool firstCell, bool lastCell, bool inFirstRow, bool inLastRow, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetClipboardContent(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetClipboardContent (rowIndex As Integer, firstCell As Boolean, lastCell As Boolean, inFirstRow As Boolean, inLastRow As Boolean, format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetClipboardContent(int rowIndex, bool firstCell, bool lastCell, bool inFirstRow, bool inLastRow, System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetClipboardContent : int * bool * bool * bool * bool * string -&gt; obj&#xA;override this.GetClipboardContent : int * bool * bool * bool * bool * string -&gt; obj" Usage="dataGridViewCell.GetClipboardContent (rowIndex, firstCell, lastCell, inFirstRow, inLastRow, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="firstCell" Type="System.Boolean" />
        <Parameter Name="lastCell" Type="System.Boolean" />
        <Parameter Name="inFirstRow" Type="System.Boolean" />
        <Parameter Name="inLastRow" Type="System.Boolean" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rowIndex">해당 셀을 포함하는 행의 0부터 시작하는 인덱스입니다.</param>
        <param name="firstCell">셀이 선택한 셀에서 정의한 영역의 첫 번째 열에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="lastCell">셀이 선택한 셀에서 정의한 영역의 마지막 열에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="inFirstRow">셀이 선택한 셀에서 정의한 영역의 첫 번째 행에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="inLastRow">선택한 셀에 정의된 영역의 마지막 행에 해당 셀이 있음을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="format">셀의 현재 형식 문자열입니다.</param>
        <summary>서식이 지정된 셀 값을 검색하여 <see cref="T:System.Windows.Forms.Clipboard" />에 복사합니다.</summary>
        <returns><see cref="T:System.Object" />에 복사할 셀의 값을 나타내는 <see cref="T:System.Windows.Forms.Clipboard" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A?displayProperty=nameWithType> 셀 값을 나타내는 클립보드 형식의 값을 검색 하는 방법입니다.  
  
 셀 값이 먼저 표시 형식에서 검색 된 <xref:System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue%2A> 메서드. 발생 시킬 수는 <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> 값의 형식을 지정 하는 이벤트 및 <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType> 형식이 지정 되는 이벤트입니다.  
  
 이 메서드의 위치에 관련 된 매개 변수에서 선택한 셀에서 정의한 영역을 나타내는 데이터의 테이블에서이 셀의 위치를 나타내는 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 셀의 위치에 따라 추가 서식 지정 정보 표시 형식의 셀 값과 함께이 메서드에서 반환 될 수 있습니다. 예를 들어 행의 첫 번째 열에 셀에 대 한 HTML 형식으로 행의 시작 부분을 나타내는 태그가 포함 됩니다.  
  
 지원 되는 클립보드 형식 포함 <xref:System.Windows.Forms.DataFormats.Text?displayProperty=nameWithType>, <xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=nameWithType>를 <xref:System.Windows.Forms.DataFormats.Html?displayProperty=nameWithType>, 및 <xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=nameWithType>합니다.  
  
 자세한 내용은 <xref:System.Windows.Forms.Clipboard> 클래스를 참조하세요.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0보다 작거나 컨트롤의 행 수보다 크거나 같은 경우</exception>
        <exception cref="T:System.InvalidOperationException">셀의 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 속성 값이 <see langword="null" />인 경우  
  
또는 
 <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />가 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <exception cref="T:System.Exception">형식 지정이 실패하고 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 컨트롤의 <see cref="T:System.Windows.Forms.DataGridView" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <block subset="none" type="overrides"><para>사용자 지정된 클립보드 값을 제공 하려면이 메서드를 재정의 합니다. 예를 들어, 사용자 지정 셀 형식의 값을 복사를 지원 하려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContentBounds">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>셀의 내용 영역을 둘러싸는 경계 사각형을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetContentBounds (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetContentBounds(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContentBounds (rowIndex As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetContentBounds(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.GetContentBounds : int -&gt; System.Drawing.Rectangle" Usage="dataGridViewCell.GetContentBounds rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>현재 셀에 적용되는 셀 스타일과 기본 <see cref="T:System.Drawing.Graphics" />를 사용하여 셀의 내용 영역을 둘러싸는 경계 사각형을 반환합니다.</summary>
        <returns>셀 내용의 경계를 지정하는 <see cref="T:System.Drawing.Rectangle" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 호출 될 때 셀의 내용의 크기를 동적으로 계산 됩니다. 기본 클래스 구현에서는 항상 반환 <xref:System.Drawing.Rectangle.Empty?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 <paramref name="rowIndex" />가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />가 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle GetContentBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle GetContentBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle GetContentBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetContentBounds : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int -&gt; System.Drawing.Rectangle&#xA;override this.GetContentBounds : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int -&gt; System.Drawing.Rectangle" Usage="dataGridViewCell.GetContentBounds (graphics, cellStyle, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">셀에 대한 그래픽 컨텍스트입니다.</param>
        <param name="cellStyle">셀에 적용할 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</param>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Graphics" />와 셀 스타일을 사용하여 계산된 셀의 내용 영역을 둘러싸는 경계 사각형을 반환합니다.</summary>
        <returns>셀 내용의 경계를 지정하는 <see cref="T:System.Drawing.Rectangle" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 호출 될 때 셀의 내용의 크기를 동적으로 계산 됩니다. 기본 클래스 구현에서는 항상 반환 <xref:System.Drawing.Rectangle.Empty?displayProperty=nameWithType>합니다.  
  
 이 메서드는 경우 호출 하는 내부적으로 <xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A> 속성이 읽기.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContentBounds" />
      </Docs>
    </Member>
    <Member MemberName="GetEditedFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditedFormattedValue (int rowIndex, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetEditedFormattedValue(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetEditedFormattedValue(System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditedFormattedValue (rowIndex As Integer, context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditedFormattedValue(int rowIndex, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="member this.GetEditedFormattedValue : int * System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="dataGridViewCell.GetEditedFormattedValue (rowIndex, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 행 인덱스입니다.</param>
        <param name="context">데이터 오류 컨텍스트를 지정하는 <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 값의 비트 조합입니다.</param>
        <summary>셀이 편집 모드에 있고 값이 커밋되지 않았는지 여부와 관계없이 셀의 형식이 지정된 현재 값을 반환합니다.</summary>
        <returns><see cref="T:System.Windows.Forms.DataGridViewCell" />의 형식이 지정된 현재 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 편집 셀의 현재 값을 반환 하거나 편집 컨트롤에서 셀이 편집 모드입니다. 이 메서드는 셀 값 하 여 지정 된 형식의 해당 하는 표시 값으로 변환 하는 고, 그렇지는 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> 속성입니다. 제기 된 <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> 값 변환에 맞게 처리할 수 있는 이벤트입니다.  
  
 정상적이 지 않습니다 서식 지정 하는 경우는 <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType> 이벤트가 발생 합니다. 이 이벤트 또는 처리기 집합에 대 한 처리기가 하는 경우는 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> 속성을 `true`, 예외가 throw 됩니다.  
  
 하는 경우이 메서드를 재정의 하는 파생된 클래스에서 셀 값의 문자열 표현을 일반적으로 반환 됩니다 합니다 `context` 인수에는 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.ClipboardContent> 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 <paramref name="rowIndex" />가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />가 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <exception cref="T:System.Exception">형식 지정이 실패하고 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 컨트롤의 <see cref="T:System.Windows.Forms.DataGridView" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorIconBounds">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle GetErrorIconBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle GetErrorIconBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle GetErrorIconBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorIconBounds : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int -&gt; System.Drawing.Rectangle&#xA;override this.GetErrorIconBounds : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int -&gt; System.Drawing.Rectangle" Usage="dataGridViewCell.GetErrorIconBounds (graphics, cellStyle, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">셀에 대한 그래픽 컨텍스트입니다.</param>
        <param name="cellStyle">셀에 적용할 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</param>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>셀의 오류 아이콘이 표시되면 이 아이콘을 둘러싸는 경계 사각형을 반환합니다.</summary>
        <returns>셀의 오류 아이콘이 표시되면 이 아이콘을 바인딩하는 <see cref="T:System.Drawing.Rectangle" />이고, 표시되지 않으면 <see cref="F:System.Drawing.Rectangle.Empty" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 호출 될 때 셀의 오류 아이콘 영역의 크기를 동적으로 계산 됩니다. 기본 클래스 구현에서는 항상 반환 <xref:System.Drawing.Rectangle.Empty?displayProperty=nameWithType>합니다.  
  
 이 메서드는 경우 호출 하는 내부적으로 <xref:System.Windows.Forms.DataGridViewCell.ErrorIconBounds%2A> 속성이 읽기.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ErrorIconBounds" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorText">
      <MemberSignature Language="C#" Value="protected internal virtual string GetErrorText (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetErrorText(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetErrorText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetErrorText (rowIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetErrorText(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetErrorText : int -&gt; string&#xA;override this.GetErrorText : int -&gt; string" Usage="dataGridViewCell.GetErrorText rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 행 인덱스입니다.</param>
        <summary>셀의 오류를 나타내는 문자열을 반환합니다.</summary>
        <returns>현재 <see cref="T:System.Windows.Forms.DataGridViewCell" />의 오류를 설명하는 문자열입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetFormattedValue">
      <MemberSignature Language="C#" Value="protected virtual object GetFormattedValue (object value, int rowIndex, ref System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter valueTypeConverter, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetFormattedValue(object value, int32 rowIndex, class System.Windows.Forms.DataGridViewCellStyle&amp; cellStyle, class System.ComponentModel.TypeConverter valueTypeConverter, class System.ComponentModel.TypeConverter formattedValueTypeConverter, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetFormattedValue (value As Object, rowIndex As Integer, ByRef cellStyle As DataGridViewCellStyle, valueTypeConverter As TypeConverter, formattedValueTypeConverter As TypeConverter, context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetFormattedValue(System::Object ^ value, int rowIndex, System::Windows::Forms::DataGridViewCellStyle ^ % cellStyle, System::ComponentModel::TypeConverter ^ valueTypeConverter, System::ComponentModel::TypeConverter ^ formattedValueTypeConverter, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetFormattedValue : obj * int *  * System.ComponentModel.TypeConverter * System.ComponentModel.TypeConverter * System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj&#xA;override this.GetFormattedValue : obj * int *  * System.ComponentModel.TypeConverter * System.ComponentModel.TypeConverter * System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="dataGridViewCell.GetFormattedValue (value, rowIndex, cellStyle, valueTypeConverter, formattedValueTypeConverter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" RefType="ref" />
        <Parameter Name="valueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="formattedValueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="value">서식이 지정될 값입니다.</param>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <param name="cellStyle">셀에 적용되는 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</param>
        <param name="valueTypeConverter">서 지정된 값 형식으로의 사용자 지정 변환을 제공하는 값 형식과 연결된 <see cref="T:System.ComponentModel.TypeConverter" />이며, 그러한 사용자 지정 변환이 필요 없는 경우에는 <see langword="null" />입니다.</param>
        <param name="formattedValueTypeConverter">값 형식으로부터의 사용자 지정 변환을 제공하는 서식 지정된 값 형식과 연결된 <see cref="T:System.ComponentModel.TypeConverter" />이며, 그러한 사용자 지정 변환이 필요 없는 경우에는 <see langword="null" />입니다.</param>
        <param name="context">서식 지정된 값이 필요한 컨텍스트를 설명하는 <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 값의 비트 조합입니다.</param>
        <summary>표시를 위해 형식이 지정된 셀 값을 가져옵니다.</summary>
        <returns>형식이 지정된 셀 값이거나, 셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridView> 셀 값으로 지정 된 형식의 해당 하는 표시 값으로 변환 하려면이 메서드를 호출 하는 컨트롤을 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> 속성입니다. 컨트롤에서이 메서드는 셀 값을 전달 합니다 `value` 매개 변수입니다.  
  
 이 메서드는 <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> 이벤트입니다. 이 이벤트에 대 한 처리기를 모두 수정할 수 있습니다 합니다 `value` 고 `cellStyle` 매개 변수입니다. 그러나 처리기를 설정 하지 않는 경우는 <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> 속성을 `true`,이 메서드 형식 `value` 의 서식 속성을 사용 하 여는 `cellStyle` 개체입니다.  
  
> [!NOTE]
>  이 메서드는 변환 되지 않습니다 `value` 에 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A?displayProperty=nameWithType> 값 같음에 대 한 속성 값을 <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A?displayProperty=nameWithType> 속성 값 <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> 이외의 값으로 설정 되어 <xref:System.DBNull.Value?displayProperty=nameWithType> 또는 `null`. 이 경우 처리할 수 있습니다 합니다 <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> 표시할 이벤트를 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> 속성 값입니다. 자세한 내용은 <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>의 코드 예제를 참조하세요.  
  
 정상적이 지 않습니다 서식 지정 하는 경우는 <xref:System.Windows.Forms.DataGridView.DataError> 이벤트가 발생 합니다. 이 이벤트 또는 처리기 집합에 대 한 처리기가 하는 경우는 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> 속성을 `true`, 예외가 throw 됩니다.  
  
 하는 경우이 메서드를 재정의 하는 파생된 클래스에서 셀 값의 문자열 표현을 일반적으로 반환 됩니다 합니다 `context` 인수에는 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.ClipboardContent> 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">형식 지정이 실패하고 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 컨트롤의 <see cref="T:System.Windows.Forms.DataGridView" /> 이벤트에 대한 처리기가 없거나 처리기에서 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> 속성을 <see langword="true" />로 설정한 경우. 예외 개체는 일반적으로 <see cref="T:System.FormatException" /> 형식으로 캐스팅할 수 있습니다.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip GetInheritedContextMenuStrip (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ContextMenuStrip GetInheritedContextMenuStrip(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInheritedContextMenuStrip (rowIndex As Integer) As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ContextMenuStrip ^ GetInheritedContextMenuStrip(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetInheritedContextMenuStrip : int -&gt; System.Windows.Forms.ContextMenuStrip&#xA;override this.GetInheritedContextMenuStrip : int -&gt; System.Windows.Forms.ContextMenuStrip" Usage="dataGridViewCell.GetInheritedContextMenuStrip rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">현재 셀의 행 인덱스입니다.</param>
        <summary>현재 셀의 상속된 바로 가기 메뉴를 가져옵니다.</summary>
        <returns>부모 <see cref="T:System.Windows.Forms.ContextMenuStrip" />, <see cref="T:System.Windows.Forms.DataGridView" /> 또는 <see cref="T:System.Windows.Forms.DataGridViewRow" />에 <see cref="T:System.Windows.Forms.DataGridViewColumn" />이 할당되어 있으면 <see cref="T:System.Windows.Forms.ContextMenuStrip" />이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 셀에는 관련 없는 경우 <xref:System.Windows.Forms.ContextMenuStrip>, 다음과 같은 우선 순위를 사용 하 여 부모에서 상속 합니다.  
  
1.  이 셀 <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A>  
  
2.  소유 하는 행 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=nameWithType>  
  
3.  소유 하는 열의 <xref:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip%2A?displayProperty=nameWithType>  
  
4.  부모 테이블의 <xref:System.Windows.Forms.ContextMenuStrip?displayProperty=nameWithType>  
  
 바로 가기 메뉴는 수명이 일반적으로 지정 하는 Microsoft Windows 네이티브 리소스를 <xref:System.Windows.Forms.DataGridViewCell.Dispose%2A> 메서드 또는 소멸자입니다.  
  
 전달 된 <xref:System.Windows.Forms.DataGridViewCell.GetInheritedContextMenuStrip%2A> 메서드를 검색 하는 데 행 인덱스를 <xref:System.Windows.Forms.DataGridViewCell>입니다. 사용 하지 않는 합니다 <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> 속성에 대 한는 `rowIndex` 매개 변수입니다. 행이 공유 하는 경우 <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> 은-1로, 잘못 된 값에 대 한 `rowIndex`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">셀의 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 속성 값이 <see langword="null" />이 아니고 지정된 <paramref name="rowIndex" />가 0보다 작거나 열의 행 수 - 1보다 큰 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />가 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedState">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewElementStates GetInheritedState (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DataGridViewElementStates GetInheritedState(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetInheritedState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInheritedState (rowIndex As Integer) As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewElementStates GetInheritedState(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetInheritedState : int -&gt; System.Windows.Forms.DataGridViewElementStates&#xA;override this.GetInheritedState : int -&gt; System.Windows.Forms.DataGridViewElementStates" Usage="dataGridViewCell.GetInheritedState rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀이 포함된 행의 인덱스입니다.</param>
        <summary>해당 행과 열의 상태에서 상속된 셀의 현재 상태를 나타내는 값을 반환합니다.</summary>
        <returns>셀의 현재 상태를 나타내는 <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 값의 비트 조합입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 공유 행에 있는 셀의 상태를 확인 하는 데 유용 합니다. 공유 행 <xref:System.Windows.Forms.DataGridViewBand.Index%2A> 값은-1 사용 하는 것을 방지 하는 <xref:System.Windows.Forms.DataGridViewCell.InheritedState%2A> 공유 행의 셀을 사용 하 여 속성입니다. 이 메서드를 사용 하려면이 셀이 포함 된 행의 실제 인덱스를 전달 합니다. 호출 하 여 공유 행의 실제 인덱스를 검색할 수 있습니다는 <xref:System.Windows.Forms.DataGridViewRowCollection.IndexOf%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 포함되어 있지 않거나 <paramref name="rowIndex" />가 -1이 아닌 경우  
  
또는 
 <paramref name="rowIndex" />가 이 셀을 포함하는 행의 인덱스가 아닌 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 포함되어 있고 <paramref name="rowIndex" />가 유효 범위인 0부터 컨트롤의 행 수에서 1을 뺀 값 사이에 있지 않은 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewCellStyle GetInheritedStyle (System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle, int rowIndex, bool includeColors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewCellStyle GetInheritedStyle(class System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle, int32 rowIndex, bool includeColors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInheritedStyle (inheritedCellStyle As DataGridViewCellStyle, rowIndex As Integer, includeColors As Boolean) As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewCellStyle ^ GetInheritedStyle(System::Windows::Forms::DataGridViewCellStyle ^ inheritedCellStyle, int rowIndex, bool includeColors);" />
      <MemberSignature Language="F#" Value="abstract member GetInheritedStyle : System.Windows.Forms.DataGridViewCellStyle * int * bool -&gt; System.Windows.Forms.DataGridViewCellStyle&#xA;override this.GetInheritedStyle : System.Windows.Forms.DataGridViewCellStyle * int * bool -&gt; System.Windows.Forms.DataGridViewCellStyle" Usage="dataGridViewCell.GetInheritedStyle (inheritedCellStyle, rowIndex, includeColors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inheritedCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="includeColors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inheritedCellStyle">상속된 셀 스타일로 채울 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</param>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <param name="includeColors">반환되는 셀 스타일에 상속된 색을 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>셀에 적용된 스타일을 가져옵니다.</summary>
        <returns>셀의 부모 행, 열 및 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />에서 상속된 셀의 스타일 설정을 포함하는 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 반환 된 <xref:System.Windows.Forms.DataGridViewCellStyle> 에서 설정을 상속 하는 <xref:System.Windows.Forms.DataGridViewCellStyle> 셀의 부모 개체 행, 열 및 <xref:System.Windows.Forms.DataGridView>. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">셀과 연결된 <see cref="T:System.Windows.Forms.DataGridView" />가 없는 경우  
  
또는 
 <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />가 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0보다 작거나 부모 <see cref="T:System.Windows.Forms.DataGridView" />의 행 수보다 크거나 같은 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.HasStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size GetPreferredSize (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex, System.Drawing.Size constraintSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size GetPreferredSize(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex, valuetype System.Drawing.Size constraintSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size GetPreferredSize(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex, System::Drawing::Size constraintSize);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredSize : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int * System.Drawing.Size -&gt; System.Drawing.Size&#xA;override this.GetPreferredSize : System.Drawing.Graphics * System.Windows.Forms.DataGridViewCellStyle * int * System.Drawing.Size -&gt; System.Drawing.Size" Usage="dataGridViewCell.GetPreferredSize (graphics, cellStyle, rowIndex, constraintSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="constraintSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="graphics">셀을 그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="cellStyle">셀의 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</param>
        <param name="rowIndex">셀의 행 0부터 시작하는 인덱스입니다.</param>
        <param name="constraintSize">셀에 허용되는 최대 크기입니다.</param>
        <summary>셀의 기본 크기를 픽셀 단위로 계산합니다.</summary>
        <returns>셀의 기본 크기를 픽셀 단위로 나타내는 <see cref="T:System.Drawing.Size" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.GetPreferredSize%2A> 기본 클래스의 메서드 <xref:System.Windows.Forms.DataGridViewCell> 항상 반환을 <xref:System.Drawing.Size> 너비와 높이가-1입니다. 그러나이 메서드는 적절 한 값을 반환 하려면 셀을 파생된 클래스에서 재정의 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size GetSize (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size GetSize(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetSize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSize (rowIndex As Integer) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size GetSize(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetSize : int -&gt; System.Drawing.Size&#xA;override this.GetSize : int -&gt; System.Drawing.Size" Usage="dataGridViewCell.GetSize rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>셀의 크기를 가져옵니다.</summary>
        <returns>셀의 크기를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 공유 행에 있는 셀을 사용 하 여 사용할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="rowIndex" />가 -1입니다.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (rowIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : int -&gt; obj&#xA;override this.GetValue : int -&gt; obj" Usage="dataGridViewCell.GetValue rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>셀의 값을 가져옵니다.</summary>
        <returns><see cref="T:System.Windows.Forms.DataGridViewCell" />에 포함된 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전달 된 <xref:System.Windows.Forms.DataGridViewCell.GetValue%2A> 메서드를 검색 하는 데 행 인덱스를 <xref:System.Windows.Forms.DataGridViewCell>입니다. 사용 하지 않는 합니다 <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> 속성에 대 한는 `rowIndex` 매개 변수입니다. 행이 공유 하는 경우 <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> 은-1로, 잘못 된 값에 대 한 `rowIndex`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">셀의 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 속성 값이 <see langword="null" />이 아니고 <paramref name="rowIndex" />가 0보다 작거나 부모 <see cref="T:System.Windows.Forms.DataGridView" />의 행 수보다 크거나 같습니다.</exception>
        <exception cref="T:System.InvalidOperationException">셀의 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 속성 값이 <see langword="null" />이 아니고 <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" /> 속성 값이 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="HasStyle">
      <MemberSignature Language="C#" Value="public bool HasStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.HasStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasStyle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasStyle : bool" Usage="System.Windows.Forms.DataGridViewCell.HasStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DataGridViewCell.Style" /> 속성이 설정되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="P:System.Windows.Forms.DataGridViewCell.Style" /> 속성이 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가치를 창출 합니다 <xref:System.Windows.Forms.DataGridViewCell.Style%2A> 속성은 자동으로 새를 인스턴스화합니다 <xref:System.Windows.Forms.DataGridViewCellStyle> 속성이 이전에 액세스 하지 않은 경우. 따라서 사용 해야 합니다는 <xref:System.Windows.Forms.DataGridViewCell.HasStyle%2A> 속성을 여부를 <xref:System.Windows.Forms.DataGridViewCell.Style%2A> 현재 속성을 <xref:System.Windows.Forms.DataGridViewCellStyle> 인스턴스. 반환 된 개체의 속성을 확인 하는 데 유용 합니다 <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> 속성에 대해 설정 된 셀 스타일을 나타냅니다.  
  
 셀 스타일 상속에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
      </Docs>
    </Member>
    <Member MemberName="InheritedState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewElementStates InheritedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewElementStates InheritedState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.InheritedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InheritedState As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewElementStates InheritedState { System::Windows::Forms::DataGridViewElementStates get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritedState : System.Windows.Forms.DataGridViewElementStates" Usage="System.Windows.Forms.DataGridViewCell.InheritedState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 행과 열의 상태에서 상속된 셀의 현재 상태를 가져옵니다.</summary>
        <value>셀의 현재 상태를 나타내는 <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 값의 비트 조합입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 포함되어 있지 않거나 <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /> 속성의 값이 -1이 아닌 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 포함되어 있거나 <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" /> 속성의 값이 -1인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="InheritedStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle InheritedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle InheritedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InheritedStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ InheritedStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritedStyle : System.Windows.Forms.DataGridViewCellStyle" Usage="System.Windows.Forms.DataGridViewCell.InheritedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀에 현재 적용된 스타일을 가져옵니다.</summary>
        <value>셀에 현재 적용된 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 셀에 의해 지정 된 스타일을 사용 하 여 셀을 표시 하는 컨트롤 <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> 형식의 다른 속성에서 스타일을 상속 하는 속성인 <xref:System.Windows.Forms.DataGridViewCellStyle>합니다. 통해 지정 된 스타일을 <xref:System.Windows.Forms.DataGridViewCell.Style%2A> 속성 다른 셀 스타일 속성을 통해 지정 된 스타일을 재정의 하지만 반드시 셀의 모양에 영향을 주는 모든 스타일을 나타내지 않습니다.  
  
 자세한 내용은 [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하지 않은 경우  
  
또는 
 <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />가 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">셀을 포함하는 행이 공유 행인 경우  
  
또는 
셀이 열 머리글 셀인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetInheritedStyle(System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.HasStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="InitializeEditingControl">
      <MemberSignature Language="C#" Value="public virtual void InitializeEditingControl (int rowIndex, object initialFormattedValue, System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeEditingControl(int32 rowIndex, object initialFormattedValue, class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeEditingControl(int rowIndex, System::Object ^ initialFormattedValue, System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberSignature Language="F#" Value="abstract member InitializeEditingControl : int * obj * System.Windows.Forms.DataGridViewCellStyle -&gt; unit&#xA;override this.InitializeEditingControl : int * obj * System.Windows.Forms.DataGridViewCellStyle -&gt; unit" Usage="dataGridViewCell.InitializeEditingControl (rowIndex, initialFormattedValue, dataGridViewCellStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="initialFormattedValue" Type="System.Object" />
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀 위치의 행 인덱스(0부터 시작)입니다.</param>
        <param name="initialFormattedValue">편집이 시작될 때 셀에 표시되는 값을 나타내는 <see cref="T:System.Object" />입니다.</param>
        <param name="dataGridViewCellStyle">셀의 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</param>
        <summary>셀을 편집하는 데 사용되는 컨트롤을 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 최적화 기술로 일반적으로 셀이 모두 동일한 형식 및 동일한 <xref:System.Windows.Forms.DataGridView> 공유 단일 호스팅된 편집 컨트롤입니다. 그러나 컨트롤을 셀에서 사용 하기 전에 필요한 여 초기화 되는 <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> 메서드. 호출 되는 처음으로이 메서드는 부모의 편집 컨트롤의 목록에는 컨트롤을 추가 <xref:System.Windows.Forms.DataGridView>합니다. 셀의 시각적 속성 중 일부를 초기화합니다. 예를 들어 <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> 제공 된 셀 스타일 매개 변수가 일치 하도록 편집 영역의 배경색을 설정 합니다. 에 대 한 후속 호출 <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> 아무 작업도 수행 합니다.  
  
 파생된 클래스의 인스턴스를 호스트 하려면이 메서드를 사용 합니다 <xref:System.Windows.Forms.Control> 해당 형식에 해당 하는 클래스입니다. 하나 이상의 포함 된 테이블 예를 들어 <xref:System.Windows.Forms.DataGridViewTextBoxCell> 단일을 추가 하려면이 메서드를 호출 하는 개체 <xref:System.Windows.Forms.TextBox> 컨트롤을 소유 하 고 있는 편집 <xref:System.Windows.Forms.DataGridView>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewTextBoxCell.InitializeEditingControl%2A> 에서 파생 되는 간단한 클래스의 메서드는 <xref:System.Windows.Forms.DataGridViewTextBoxCell> 클래스. 이 예제에서 제공 하는 더 큰 코드 예제의의 일부인 [방법: DataGridView 셀에서 Windows Forms 컨트롤 호스팅](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#200)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">연결된 <see cref="T:System.Windows.Forms.DataGridView" />가 없는 경우나 있더라도 연결된 편집 컨트롤이 없는 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.DetachEditingControl" />
      </Docs>
    </Member>
    <Member MemberName="IsInEditMode">
      <MemberSignature Language="C#" Value="public bool IsInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.IsInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInEditMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInEditMode : bool" Usage="System.Windows.Forms.DataGridViewCell.IsInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 셀을 현재 편집하고 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>셀이 편집 모드에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 셀 인스턴스와 직접 작업 하는 경우에 유용 합니다. 또는 <xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A?displayProperty=nameWithType> 속성을 사용할 수 있습니다. 처리할 수도 있습니다는 <xref:System.Windows.Forms.DataGridView.CellBeginEdit?displayProperty=nameWithType> 사용자 편집 모드로 전환 하는 경우를 결정 하는 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">셀을 포함하는 행이 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool KeyDownUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyDownUnsharesRow(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyDownUnsharesRow (e As KeyEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyDownUnsharesRow(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member KeyDownUnsharesRow : System.Windows.Forms.KeyEventArgs * int -&gt; bool&#xA;override this.KeyDownUnsharesRow : System.Windows.Forms.KeyEventArgs * int -&gt; bool" Usage="dataGridViewCell.KeyDownUnsharesRow (e, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</param>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>포커스가 셀에 있는 동안 키를 누르는 경우 부모 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.KeyDownUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnKeyDown%2A> 메서드. 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnKeyDown%2A> 같은 <xref:System.Windows.Forms.KeyEventArgs> 인수가 셀이 포함 된 행을 공유 하지 않도록 합니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="KeyEntersEditMode">
      <MemberSignature Language="C#" Value="public virtual bool KeyEntersEditMode (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool KeyEntersEditMode(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.KeyEntersEditMode(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function KeyEntersEditMode (e As KeyEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool KeyEntersEditMode(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member KeyEntersEditMode : System.Windows.Forms.KeyEventArgs -&gt; bool&#xA;override this.KeyEntersEditMode : System.Windows.Forms.KeyEventArgs -&gt; bool" Usage="dataGridViewCell.KeyEntersEditMode e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">누른 키를 나타내는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</param>
        <summary>지정된 키에 따라 편집 모드를 시작할지 여부를 결정합니다.</summary>
        <returns>편집 모드를 시작해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 편집할 수 있는 사용자 지정 셀을 만들어서이 메서드를 재정의 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="KeyPressUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool KeyPressUnsharesRow (System.Windows.Forms.KeyPressEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyPressUnsharesRow(class System.Windows.Forms.KeyPressEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyPressUnsharesRow (e As KeyPressEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyPressUnsharesRow(System::Windows::Forms::KeyPressEventArgs ^ e, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member KeyPressUnsharesRow : System.Windows.Forms.KeyPressEventArgs * int -&gt; bool&#xA;override this.KeyPressUnsharesRow : System.Windows.Forms.KeyPressEventArgs * int -&gt; bool" Usage="dataGridViewCell.KeyPressUnsharesRow (e, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyPressEventArgs" />입니다.</param>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>포커스가 행의 셀에 있는 동안 키를 누르는 경우 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnKeyPress%2A> 메서드. 파생된 클래스에서 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnKeyPress%2A> 셀이 포함 된 행을 공유 해제 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="KeyUpUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool KeyUpUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyUpUnsharesRow(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyUpUnsharesRow (e As KeyEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyUpUnsharesRow(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member KeyUpUnsharesRow : System.Windows.Forms.KeyEventArgs * int -&gt; bool&#xA;override this.KeyUpUnsharesRow : System.Windows.Forms.KeyEventArgs * int -&gt; bool" Usage="dataGridViewCell.KeyUpUnsharesRow (e, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</param>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>포커스가 셀에 있는 동안 키를 놓는 경우 부모 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.KeyUpUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnKeyUp%2A> 메서드. 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnKeyUp%2A> 같은 <xref:System.Windows.Forms.KeyEventArgs> 인수가 셀이 포함 된 행을 공유 하지 않도록 합니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="LeaveUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool LeaveUnsharesRow (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LeaveUnsharesRow(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LeaveUnsharesRow (rowIndex As Integer, throughMouseClick As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LeaveUnsharesRow(int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="abstract member LeaveUnsharesRow : int * bool -&gt; bool&#xA;override this.LeaveUnsharesRow : int * bool -&gt; bool" Usage="dataGridViewCell.LeaveUnsharesRow (rowIndex, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <param name="throughMouseClick">사용자 작업을 통해 포커스가 셀로 이동했으면 <see langword="true" />이고, 프로그래밍 작업을 통해 포커스가 셀로 이동했으면 <see langword="false" />입니다.</param>
        <summary>포커스가 행의 셀을 벗어난 경우 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.LeaveUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnLeave%2A> 메서드. 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnLeave%2A> 셀이 포함 된 행을 공유 해제 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureTextHeight">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 텍스트의 높이(픽셀)를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureTextHeight">
      <MemberSignature Language="C#" Value="public static int MeasureTextHeight (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxWidth, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MeasureTextHeight(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, int32 maxWidth, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MeasureTextHeight(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, int maxWidth, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureTextHeight : System.Drawing.Graphics * string * System.Drawing.Font * int * System.Windows.Forms.TextFormatFlags -&gt; int" Usage="System.Windows.Forms.DataGridViewCell.MeasureTextHeight (graphics, text, font, maxWidth, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="maxWidth" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="graphics">텍스트를 렌더링하는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="text">측정할 텍스트입니다.</param>
        <param name="font">텍스트에 적용된 <see cref="T:System.Drawing.Font" />입니다.</param>
        <param name="maxWidth">텍스트의 최대 너비입니다.</param>
        <param name="flags">텍스트에 적용할 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 값의 비트 조합입니다.</param>
        <summary>지정된 특성이 주어진 경우 지정된 텍스트의 높이(픽셀)를 가져옵니다.</summary>
        <returns>텍스트의 높이(픽셀)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여러 줄은 필요 하 고을 지정 된 형식에서 허용 하는 경우 반환 되는 높이 모든 줄의 결합 된 높이입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="graphics" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="font" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxWidth" />가 1보다 작습니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="flags" />가 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 값의 유효한 비트 조합이 아닌 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MeasureTextHeight">
      <MemberSignature Language="C#" Value="public static int MeasureTextHeight (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxWidth, System.Windows.Forms.TextFormatFlags flags, out bool widthTruncated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MeasureTextHeight(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, int32 maxWidth, valuetype System.Windows.Forms.TextFormatFlags flags, [out] bool&amp; widthTruncated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextHeight(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags,System.Boolean@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MeasureTextHeight(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, int maxWidth, System::Windows::Forms::TextFormatFlags flags, [Runtime::InteropServices::Out] bool % widthTruncated);" />
      <MemberSignature Language="F#" Value="static member MeasureTextHeight : System.Drawing.Graphics * string * System.Drawing.Font * int * System.Windows.Forms.TextFormatFlags *  -&gt; int" Usage="System.Windows.Forms.DataGridViewCell.MeasureTextHeight (graphics, text, font, maxWidth, flags, widthTruncated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="maxWidth" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="widthTruncated" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="graphics">텍스트를 렌더링하는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="text">측정할 텍스트입니다.</param>
        <param name="font">텍스트에 적용된 <see cref="T:System.Drawing.Font" />입니다.</param>
        <param name="maxWidth">텍스트의 최대 너비입니다.</param>
        <param name="flags">텍스트에 적용할 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 값의 비트 조합입니다.</param>
        <param name="widthTruncated">텍스트의 요청된 너비가 <paramref name="maxWidth" />보다 크면 <see langword="true" />로 설정합니다.</param>
        <summary>지정된 특성이 주어진 경우 지정된 텍스트의 높이(픽셀)를 가져옵니다. 필요한 너비가 지정된 최대 너비보다 큰지 여부도 나타냅니다.</summary>
        <returns>텍스트의 높이(픽셀)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여러 줄은 필요 하 고을 지정 된 형식에서 허용 하는 경우 반환 되는 높이 모든 줄의 결합 된 높이입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="graphics" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="font" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxWidth" />가 1보다 작습니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="flags" />가 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 값의 유효한 비트 조합이 아닌 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MeasureTextPreferredSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureTextPreferredSize (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, float maxRatio, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureTextPreferredSize(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, float32 maxRatio, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Single,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureTextPreferredSize(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, float maxRatio, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureTextPreferredSize : System.Drawing.Graphics * string * System.Drawing.Font * single * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.DataGridViewCell.MeasureTextPreferredSize (graphics, text, font, maxRatio, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="maxRatio" Type="System.Single" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="graphics">텍스트를 렌더링하는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="text">측정할 텍스트입니다.</param>
        <param name="font">텍스트에 적용된 <see cref="T:System.Drawing.Font" />입니다.</param>
        <param name="maxRatio">텍스트 블록의 최대 너비/높이 비율입니다.</param>
        <param name="flags">텍스트에 적용할 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 값의 비트 조합입니다.</param>
        <summary>지정된 특성이 주어진 경우 지정된 텍스트의 이상적인 높이와 너비를 가져옵니다.</summary>
        <returns>텍스트의 기본 높이와 너비를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여러 줄은 필요 하 고을 지정 된 형식에서 허용 하는 경우 반환 되는 크기에 모든 줄의 전체 높이 포함 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="graphics" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="font" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxRatio" />가 0보다 작거나 같은 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="flags" />가 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 값의 유효한 비트 조합이 아닌 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MeasureTextSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureTextSize (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureTextSize(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureTextSize(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureTextSize : System.Drawing.Graphics * string * System.Drawing.Font * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.DataGridViewCell.MeasureTextSize (graphics, text, font, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="graphics">텍스트를 렌더링하는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="text">측정할 텍스트입니다.</param>
        <param name="font">텍스트에 적용된 <see cref="T:System.Drawing.Font" />입니다.</param>
        <param name="flags">텍스트에 적용할 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 값의 비트 조합입니다.</param>
        <summary>지정된 특성이 주어진 경우 지정된 텍스트의 높이와 너비를 가져옵니다.</summary>
        <returns>텍스트의 높이와 너비를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여러 줄은 필요 하 고을 지정 된 형식에서 허용 하는 경우 반환 되는 크기에 모든 줄의 전체 높이 포함 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="graphics" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="font" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="flags" />가 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 값의 유효한 비트 조합이 아닌 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MeasureTextWidth">
      <MemberSignature Language="C#" Value="public static int MeasureTextWidth (System.Drawing.Graphics graphics, string text, System.Drawing.Font font, int maxHeight, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MeasureTextWidth(class System.Drawing.Graphics graphics, string text, class System.Drawing.Font font, int32 maxHeight, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MeasureTextWidth(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Int32,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MeasureTextWidth(System::Drawing::Graphics ^ graphics, System::String ^ text, System::Drawing::Font ^ font, int maxHeight, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureTextWidth : System.Drawing.Graphics * string * System.Drawing.Font * int * System.Windows.Forms.TextFormatFlags -&gt; int" Usage="System.Windows.Forms.DataGridViewCell.MeasureTextWidth (graphics, text, font, maxHeight, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="maxHeight" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="graphics">텍스트를 렌더링하는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="text">측정할 텍스트입니다.</param>
        <param name="font">텍스트에 적용된 <see cref="T:System.Drawing.Font" />입니다.</param>
        <param name="maxHeight">텍스트의 최대 높이입니다.</param>
        <param name="flags">텍스트에 적용할 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 값의 비트 조합입니다.</param>
        <summary>지정된 특성이 주어진 경우 지정된 텍스트의 너비(픽셀)를 가져옵니다.</summary>
        <returns>텍스트의 너비(픽셀)입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="graphics" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="font" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxHeight" />가 1보다 작습니다.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="flags" />가 <see cref="T:System.Windows.Forms.TextFormatFlags" /> 값의 유효한 비트 조합이 아닌 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MouseClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseClickUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseClickUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseClickUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseClickUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member MouseClickUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool&#xA;override this.MouseClickUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool" Usage="dataGridViewCell.MouseClickUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary>포인터가 행의 셀에 있는 동안 마우스 단추를 클릭하는 경우 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnMouseClick%2A> 메서드. 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnMouseClick%2A> 셀이 포함 된 행을 공유 해제 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseDoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseDoubleClickUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseDoubleClickUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseDoubleClickUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member MouseDoubleClickUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool&#xA;override this.MouseDoubleClickUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool" Usage="dataGridViewCell.MouseDoubleClickUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary>행의 셀을 두 번 클릭하는 경우 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick%2A> 메서드. 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick%2A> 셀이 포함 된 행을 공유 해제 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="MouseDownUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseDownUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseDownUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseDownUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseDownUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member MouseDownUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool&#xA;override this.MouseDownUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool" Usage="dataGridViewCell.MouseDownUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary>포인터가 행의 셀에 있는 동안 마우스 단추를 누르고 있는 경우 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnMouseDown%2A> 메서드. 파생된 클래스에서 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnMouseDown%2A> 셀이 포함 된 행을 공유 해제 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseEnterUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseEnterUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseEnterUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseEnterUnsharesRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member MouseEnterUnsharesRow : int -&gt; bool&#xA;override this.MouseEnterUnsharesRow : int -&gt; bool" Usage="dataGridViewCell.MouseEnterUnsharesRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>마우스 포인터가 행의 셀 위로 이동할 경우 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A> 메서드. 파생된 클래스에서 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A> 셀이 포함 된 행을 공유 해제 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseLeaveUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseLeaveUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseLeaveUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseLeaveUnsharesRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member MouseLeaveUnsharesRow : int -&gt; bool&#xA;override this.MouseLeaveUnsharesRow : int -&gt; bool" Usage="dataGridViewCell.MouseLeaveUnsharesRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>마우스 포인터가 행을 벗어난 경우 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnMouseLeave%2A> 메서드. 파생된 클래스에서 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnMouseLeave%2A> 셀이 포함 된 행을 공유 해제 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="MouseMoveUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseMoveUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseMoveUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseMoveUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseMoveUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member MouseMoveUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool&#xA;override this.MouseMoveUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool" Usage="dataGridViewCell.MouseMoveUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary>마우스 포인터가 행의 셀 위로 이동할 경우 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnMouseMove%2A> 메서드. 파생된 클래스에서 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnMouseMove%2A> 셀이 포함 된 행을 공유 해제 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="MouseUpUnsharesRow">
      <MemberSignature Language="C#" Value="protected virtual bool MouseUpUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MouseUpUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MouseUpUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool MouseUpUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member MouseUpUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool&#xA;override this.MouseUpUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool" Usage="dataGridViewCell.MouseUpUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary>포인터가 행의 셀에 있는 동안 마우스 단추를 놓는 경우 행을 공유하지 않을 것인지 여부를 나타냅니다.</summary>
        <returns>행을 공유하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 <see cref="T:System.Windows.Forms.DataGridViewCell" /> 클래스는 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow%2A> 메서드는 바로 앞의 <xref:System.Windows.Forms.DataGridViewCell.OnMouseUp%2A> 메서드. 파생된 클래스에서 반환 해야 합니다 `true` 경우에 대 한 호출 <xref:System.Windows.Forms.DataGridViewCell.OnMouseUp%2A> 셀이 포함 된 행을 공유 해제 하는 효과가 있습니다. 그렇지 않으면 반환 해야 `false`합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridViewCell.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary>셀을 클릭하면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellClick%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellClick" />
      </Docs>
    </Member>
    <Member MemberName="OnContentClick">
      <MemberSignature Language="C#" Value="protected virtual void OnContentClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnContentClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridViewCell.OnContentClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary>셀의 내용을 클릭하면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellContentClick?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContentClick" />
      </Docs>
    </Member>
    <Member MemberName="OnContentDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnContentDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnContentDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridViewCell.OnContentDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary>셀의 내용을 두 번 클릭하면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellContentDoubleClick%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellContentDoubleClick?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="OnDataGridViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataGridViewChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataGridViewChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnDataGridViewChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataGridViewChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataGridViewChanged();" />
      <MemberSignature Language="F#" Value="override this.OnDataGridViewChanged : unit -&gt; unit" Usage="dataGridViewCell.OnDataGridViewChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>셀의 <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> 속성이 변경되면 호출됩니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridViewCell.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />입니다.</param>
        <summary>셀을 두 번 클릭하면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellDoubleClick%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellDoubleClick?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnEnter (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnter(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnter (rowIndex As Integer, throughMouseClick As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnter(int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="abstract member OnEnter : int * bool -&gt; unit&#xA;override this.OnEnter : int * bool -&gt; unit" Usage="dataGridViewCell.OnEnter (rowIndex, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <param name="throughMouseClick">사용자 작업을 통해 포커스가 셀로 이동했으면 <see langword="true" />이고, 프로그래밍 작업을 통해 포커스가 셀로 이동했으면 <see langword="false" />입니다.</param>
        <summary>포커스가 셀로 이동하면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellEnter%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellEnter?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Forms.KeyEventArgs * int -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Forms.KeyEventArgs * int -&gt; unit" Usage="dataGridViewCell.OnKeyDown (e, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</param>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>셀에 포커스가 있는 동안 문자 키를 누르면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.Control.OnKeyDown%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.Control.KeyDown> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyPress (e As KeyPressEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyPress : System.Windows.Forms.KeyPressEventArgs * int -&gt; unit&#xA;override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs * int -&gt; unit" Usage="dataGridViewCell.OnKeyPress (e, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyPressEventArgs" />입니다.</param>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>포커스가 셀에 있는 동안 키를 누르면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.Control.OnKeyPress%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.Control.KeyPress> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Forms.KeyEventArgs * int -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Forms.KeyEventArgs * int -&gt; unit" Usage="dataGridViewCell.OnKeyUp (e, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.KeyEventArgs" />입니다.</param>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>포커스가 셀에 있는 동안 문자 키를 놓으면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.Control.OnKeyUp%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.Control.KeyUp> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnKeyPress(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.KeyPressUnsharesRow(System.Windows.Forms.KeyPressEventArgs,System.Int32)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnLeave (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLeave(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnLeave(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLeave (rowIndex As Integer, throughMouseClick As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLeave(int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="abstract member OnLeave : int * bool -&gt; unit&#xA;override this.OnLeave : int * bool -&gt; unit" Usage="dataGridViewCell.OnLeave (rowIndex, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <param name="throughMouseClick">사용자 작업을 통해 포커스가 셀에서 이동했으면 <see langword="true" />이고, 프로그래밍 작업을 통해 포커스가 셀에서 이동했으면 <see langword="false" />입니다.</param>
        <summary>포커스가 셀에서 이동하면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellLeave%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellLeave?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnEnter(System.Int32,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewCell.OnMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary>포인터가 셀에 있는 동안 마우스 단추를 클릭하면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellMouseClick%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellMouseClick?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드를 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewCell.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary>포인터가 셀에 있는 동안 마우스 단추를 두 번 클릭하면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewCell.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary>포인터가 셀에 있는 동안 마우스 단추를 누르고 있으면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellMouseDown?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseDown" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : int -&gt; unit&#xA;override this.OnMouseEnter : int -&gt; unit" Usage="dataGridViewCell.OnMouseEnter rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>마우스 포인터가 셀 위로 이동하면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellMouseEnter?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: 셀과 사용자 지정 열에는 Windows Forms DataGridView 컨트롤은 동작과 모양을 확장 하 여](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseEnter" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : int -&gt; unit&#xA;override this.OnMouseLeave : int -&gt; unit" Usage="dataGridViewCell.OnMouseLeave rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <summary>마우스 포인터가 셀을 벗어나면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellMouseLeave?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 메서드의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: 셀과 사용자 지정 열에는 Windows Forms DataGridView 컨트롤은 동작과 모양을 확장 하 여](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseLeave" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewCell.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary>마우스 포인터가 셀 안에서 이동하면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellMouseMove%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellMouseMove?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseMove" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseMoveUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewCell.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />입니다.</param>
        <summary>포인터가 셀에 있는 동안 마우스 단추를 놓으면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비슷합니다는 <xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A?displayProperty=nameWithType> 메서드. 동일한 상황에서 호출 되는 <xref:System.Windows.Forms.DataGridView.CellMouseUp?displayProperty=nameWithType> 이벤트가 발생 하지만 실제로 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseUp" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseLeave(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OwningColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn OwningColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumn OwningColumn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.OwningColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwningColumn As DataGridViewColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumn ^ OwningColumn { System::Windows::Forms::DataGridViewColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwningColumn : System.Windows.Forms.DataGridViewColumn" Usage="System.Windows.Forms.DataGridViewCell.OwningColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 셀을 포함하는 열을 가져옵니다.</summary>
        <value>셀을 포함하는 <see cref="T:System.Windows.Forms.DataGridViewColumn" />이거나, 셀이 열에 없으면 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />
      </Docs>
    </Member>
    <Member MemberName="OwningRow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow OwningRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow OwningRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.OwningRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwningRow As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ OwningRow { System::Windows::Forms::DataGridViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwningRow : System.Windows.Forms.DataGridViewRow" Usage="System.Windows.Forms.DataGridViewCell.OwningRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 셀을 포함하는 행을 가져옵니다.</summary>
        <value>셀을 포함하는 <see cref="T:System.Windows.Forms.DataGridViewRow" />이거나, 셀이 행에 없으면 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.OwningColumn" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected virtual void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates cellState, object value, object formattedValue, string errorText, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle cellBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates cellState, object value, object formattedValue, string errorText, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle cellBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates cellState, System::Object ^ value, System::Object ^ formattedValue, System::String ^ errorText, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="abstract member Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * obj * obj * string * System.Windows.Forms.DataGridViewCellStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewPaintParts -&gt; unit&#xA;override this.Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * obj * obj * string * System.Windows.Forms.DataGridViewCellStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewCell.Paint (graphics, clipBounds, cellBounds, rowIndex, cellState, value, formattedValue, errorText, cellStyle, advancedBorderStyle, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cellState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Windows.Forms.DataGridViewCell" />을 그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="clipBounds">다시 그려야 하는 <see cref="T:System.Windows.Forms.DataGridView" />의 영역을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="cellBounds">그리고 있는 <see cref="T:System.Windows.Forms.DataGridViewCell" />의 범위를 포함하는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="rowIndex">그리고 있는 셀의 행 인덱스입니다.</param>
        <param name="cellState">셀의 상태를 지정하는 <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 값의 비트 조합입니다.</param>
        <param name="value">그리고 있는 <see cref="T:System.Windows.Forms.DataGridViewCell" />의 데이터입니다.</param>
        <param name="formattedValue">그리고 있는 <see cref="T:System.Windows.Forms.DataGridViewCell" />의 형식이 지정된 데이터입니다.</param>
        <param name="errorText">셀과 연결된 오류 메시지입니다.</param>
        <param name="cellStyle">셀에 대한 형식 및 스타일 정보를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</param>
        <param name="advancedBorderStyle">그릴 셀의 테두리 스타일을 포함하는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</param>
        <param name="paintParts">그려야 하는 셀 부분을 지정하는 <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> 값의 비트 조합입니다.</param>
        <summary>현재 <see cref="T:System.Windows.Forms.DataGridViewCell" />을 그립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewCell.Paint%2A> 메서드는 <xref:System.Windows.Forms.DataGridViewButtonCell>합니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 사용 안 함 단추 단추 열에 Windows Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="PaintBorder">
      <MemberSignature Language="C#" Value="protected virtual void PaintBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle bounds, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PaintBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PaintBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle bounds, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle);" />
      <MemberSignature Language="F#" Value="abstract member PaintBorder : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle -&gt; unit&#xA;override this.PaintBorder : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle -&gt; unit" Usage="dataGridViewCell.PaintBorder (graphics, clipBounds, bounds, cellStyle, advancedBorderStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">테두리를 그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="clipBounds">다시 그려야 하는 <see cref="T:System.Windows.Forms.DataGridView" />의 영역을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="bounds">그리고 있는 테두리의 영역을 포함하는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="cellStyle">현재 셀에 대한 형식 및 스타일 정보를 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</param>
        <param name="advancedBorderStyle">그리고 있는 테두리의 테두리 스타일을 포함하는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</param>
        <summary>현재 <see cref="T:System.Windows.Forms.DataGridViewCell" />의 테두리를 그립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 메서드의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: 사용 안 함 단추 단추 열에 Windows Forms DataGridView 컨트롤](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="PaintErrorIcon">
      <MemberSignature Language="C#" Value="protected virtual void PaintErrorIcon (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellValueBounds, string errorText);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PaintErrorIcon(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle cellValueBounds, string errorText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.PaintErrorIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PaintErrorIcon(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle cellValueBounds, System::String ^ errorText);" />
      <MemberSignature Language="F#" Value="abstract member PaintErrorIcon : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * string -&gt; unit&#xA;override this.PaintErrorIcon : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * string -&gt; unit" Usage="dataGridViewCell.PaintErrorIcon (graphics, clipBounds, cellValueBounds, errorText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellValueBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="errorText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="graphics">테두리를 그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="clipBounds">다시 그려야 하는 <see cref="T:System.Windows.Forms.DataGridView" />의 영역을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="cellValueBounds">셀의 내용 영역을 둘러싸는 경계 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="errorText">셀과 연결된 오류 메시지입니다.</param>
        <summary>현재 <see cref="T:System.Windows.Forms.DataGridViewCell" />의 오류 아이콘을 그립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `errorText` 매개 변수는 오류가 있음을 알립니다. 경우 `errorText` 됩니다 `null` 또는 <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Windows.Forms.DataGridViewCell.PaintErrorIcon%2A> 메서드는 아무 작업도 수행 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle)" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="ParseFormattedValue">
      <MemberSignature Language="C#" Value="public virtual object ParseFormattedValue (object formattedValue, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.ComponentModel.TypeConverter valueTypeConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseFormattedValue(object formattedValue, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.ComponentModel.TypeConverter formattedValueTypeConverter, class System.ComponentModel.TypeConverter valueTypeConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ParseFormattedValue (formattedValue As Object, cellStyle As DataGridViewCellStyle, formattedValueTypeConverter As TypeConverter, valueTypeConverter As TypeConverter) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ParseFormattedValue(System::Object ^ formattedValue, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::ComponentModel::TypeConverter ^ formattedValueTypeConverter, System::ComponentModel::TypeConverter ^ valueTypeConverter);" />
      <MemberSignature Language="F#" Value="abstract member ParseFormattedValue : obj * System.Windows.Forms.DataGridViewCellStyle * System.ComponentModel.TypeConverter * System.ComponentModel.TypeConverter -&gt; obj&#xA;override this.ParseFormattedValue : obj * System.Windows.Forms.DataGridViewCellStyle * System.ComponentModel.TypeConverter * System.ComponentModel.TypeConverter -&gt; obj" Usage="dataGridViewCell.ParseFormattedValue (formattedValue, cellStyle, formattedValueTypeConverter, valueTypeConverter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="formattedValueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="valueTypeConverter" Type="System.ComponentModel.TypeConverter" />
      </Parameters>
      <Docs>
        <param name="formattedValue">셀의 표시 값입니다.</param>
        <param name="cellStyle">셀에 적용되는 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</param>
        <param name="formattedValueTypeConverter">표시 값 형식에 대한 <see cref="T:System.ComponentModel.TypeConverter" />이거나 기본 변환기를 사용할 경우 <see langword="null" />입니다.</param>
        <param name="valueTypeConverter">셀 값 형식에 대한 <see cref="T:System.ComponentModel.TypeConverter" />이거나 기본 변환기를 사용할 경우 <see langword="null" />입니다.</param>
        <summary>형식이 지정된 표시 값을 실제 셀 값으로 변환합니다.</summary>
        <returns>셀 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자가 셀 값을 편집 하 고 변경 내용을 커밋합니다를 <xref:System.Windows.Forms.DataGridView> 컨트롤에서 표시 된 값으로 변환 하려면이 메서드를 호출 합니다 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> 에 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>합니다. 컨트롤 다음 변환된 된 값에 기본 셀 값 또는 데이터 원본 값을 설정합니다.  
  
 이 메서드의 기본 구현 구문 분석 합니다 `formattedValue` 매개 변수를 사용 하 여는 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, 및 <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> 셀 스타일의 속성에 나타난는 `cellStyle` 매개 변수입니다.  
  
 경우 `formattedValue` 값과 같음 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>의 값을 반환 하는이 메서드는 <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> 속성 또는 `null` 경우 <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> 됩니다 <xref:System.DBNull.Value?displayProperty=nameWithType> 및 셀 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> 참조 형식인 합니다.  
  
 경우 `formattedValue` 같지 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>,이 메서드를 구문 분석 `formattedValue` 사용 하 여는 <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> 속성과 지정 된 또는 기본 변환기입니다.  
  
 경우 셀 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> 는 null을 허용이 메서드 반환 값을 래핑하는 <xref:System.Nullable%601> 형식입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cellStyle" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException"><see cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" /> 속성 값이 <see langword="null" />일 경우  
  
또는 
<see cref="P:System.Windows.Forms.DataGridViewCell.ValueType" /> 속성 값이 <see langword="null" />일 경우  
  
또는 
 <paramref name="formattedValue" />를 변환할 수 없는 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="formattedValue" />가 <see langword="null" />입니다.  
  
또는 
<paramref name="formattedValue" /> 형식이 <see cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" /> 속성이 나타내는 형식과 일치하지 않는 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="T:System.Nullable`1" />
        <related type="Article" href="https://msdn.microsoft.com/library/e473cb01-28ca-42be-9cea-f717055d72c6">nullable 형식(C# 프로그래밍 가이드)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9ac3b602-6f96-4e6d-96f7-cd4e81c468a6">정의 된 값이 설치 되지 않은 값 형식</related>
      </Docs>
    </Member>
    <Member MemberName="PositionEditingControl">
      <MemberSignature Language="C#" Value="public virtual void PositionEditingControl (bool setLocation, bool setSize, System.Drawing.Rectangle cellBounds, System.Drawing.Rectangle cellClip, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PositionEditingControl(bool setLocation, bool setSize, valuetype System.Drawing.Rectangle cellBounds, valuetype System.Drawing.Rectangle cellClip, class System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.PositionEditingControl(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PositionEditingControl (setLocation As Boolean, setSize As Boolean, cellBounds As Rectangle, cellClip As Rectangle, cellStyle As DataGridViewCellStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedColumn As Boolean, isFirstDisplayedRow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PositionEditingControl(bool setLocation, bool setSize, System::Drawing::Rectangle cellBounds, System::Drawing::Rectangle cellClip, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="F#" Value="abstract member PositionEditingControl : bool * bool * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * bool * bool * bool * bool -&gt; unit&#xA;override this.PositionEditingControl : bool * bool * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * bool * bool * bool * bool -&gt; unit" Usage="dataGridViewCell.PositionEditingControl (setLocation, setSize, cellBounds, cellClip, cellStyle, singleVerticalBorderAdded, singleHorizontalBorderAdded, isFirstDisplayedColumn, isFirstDisplayedRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setLocation" Type="System.Boolean" />
        <Parameter Name="setSize" Type="System.Boolean" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellClip" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="setLocation">다른 인수에 지정된 대로 컨트롤을 배치하려면 <see langword="true" />이고, 컨트롤을 자동으로 배치하려면 <see langword="false" />입니다.</param>
        <param name="setSize">크기를 지정하려면 <see langword="true" />이고, 컨트롤의 크기를 자동으로 조정하려면 <see langword="false" />입니다.</param>
        <param name="cellBounds">셀 범위를 정의하는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="cellClip">편집 컨트롤을 그리는 데 사용할 영역입니다.</param>
        <param name="cellStyle">편집하고 있는 셀의 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</param>
        <param name="singleVerticalBorderAdded">셀에 세로 테두리를 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="singleHorizontalBorderAdded">셀에 가로 테두리를 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="isFirstDisplayedColumn">호스팅 셀이 처음 표시되는 열에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="isFirstDisplayedRow">호스팅 셀이 처음 표시되는 행에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 셀에서 호스팅하는 편집 컨트롤의 위치와 크기를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 클래스에서 파생 되는 <xref:System.Windows.Forms.DataGridViewCell> 클래스와 같이 <xref:System.Windows.Forms.DataGridViewComboBoxCell>, 선택한 셀에서 컨트롤을 호스트 합니다. <xref:System.Windows.Forms.DataGridViewCell.PositionEditingControl%2A> 메서드 호스트 셀 내부 편집 컨트롤을 배치 합니다. 편집 컨트롤은 단일 셀 보다 더 많은 공간을 걸릴 수 있습니다, 되므로 외부 그리지 않는 되므로 표시 되는 첫 번째 열 또는 표시 되는 첫 번째 행의 셀을 편집할 때 다르게 배치 해야 할 수도 있습니다는 <xref:System.Windows.Forms.DataGridView>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 포함되어 있지 않은 경우</exception>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.AdjustCellBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="PositionEditingPanel">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle PositionEditingPanel (System.Drawing.Rectangle cellBounds, System.Drawing.Rectangle cellClip, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Rectangle PositionEditingPanel(valuetype System.Drawing.Rectangle cellBounds, valuetype System.Drawing.Rectangle cellClip, class System.Windows.Forms.DataGridViewCellStyle cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.PositionEditingPanel(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DataGridViewCellStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PositionEditingPanel (cellBounds As Rectangle, cellClip As Rectangle, cellStyle As DataGridViewCellStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedColumn As Boolean, isFirstDisplayedRow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Rectangle PositionEditingPanel(System::Drawing::Rectangle cellBounds, System::Drawing::Rectangle cellClip, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedColumn, bool isFirstDisplayedRow);" />
      <MemberSignature Language="F#" Value="abstract member PositionEditingPanel : System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * bool * bool * bool * bool -&gt; System.Drawing.Rectangle&#xA;override this.PositionEditingPanel : System.Drawing.Rectangle * System.Drawing.Rectangle * System.Windows.Forms.DataGridViewCellStyle * bool * bool * bool * bool -&gt; System.Drawing.Rectangle" Usage="dataGridViewCell.PositionEditingPanel (cellBounds, cellClip, cellStyle, singleVerticalBorderAdded, singleHorizontalBorderAdded, isFirstDisplayedColumn, isFirstDisplayedRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellClip" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cellBounds">셀 범위를 정의하는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="cellClip">편집 패널을 그리는 데 사용할 영역입니다.</param>
        <param name="cellStyle">편집하고 있는 셀의 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</param>
        <param name="singleVerticalBorderAdded">셀에 세로 테두리를 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="singleHorizontalBorderAdded">셀에 가로 테두리를 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="isFirstDisplayedColumn">셀이 컨트롤에서 현재 표시되는 첫째 열에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="isFirstDisplayedRow">셀이 컨트롤에서 현재 표시되는 첫째 행에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>셀에서 호스팅하는 편집 패널의 위치와 크기를 설정하고 편집 패널에 있는 편집 컨트롤의 일반 범위를 반환합니다.</summary>
        <returns>편집 패널에 있는 편집 컨트롤의 일반 범위를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">셀이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 추가되지 않은 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="PreferredSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size PreferredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size PreferredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.PreferredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size PreferredSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredSize : System.Drawing.Size" Usage="System.Windows.Forms.DataGridViewCell.PreferredSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀이 들어갈 수 있는 사각형 영역의 크기(픽셀)를 가져옵니다.</summary>
        <value>너비와 높이가 포함된 <see cref="T:System.Drawing.Size" />(픽셀)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.PreferredSize%2A> 속성 셀에서 계산 셀의 기본 크기의 행 및 열 소유 반환 합니다. <xref:System.Windows.Forms.DataGridViewCell.PreferredSize%2A> 반환을 <xref:System.Drawing.Size> 너비와 높이 표에 셀이 포함 되지 않은 경우-1입니다.  
  
 셀이 있는 경우는 <xref:System.Windows.Forms.DataGridViewColumn> 있는 해당 <xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A> 속성으로 설정 `false`, 너비에 대 한-1이 반환 됩니다.  
  
 이 메서드는 사용 된 <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />가 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">셀을 포함하는 행이 공유 행인 경우  
  
또는 
셀이 열 머리글 셀인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Size" />
        <altmember cref="T:System.Drawing.Size" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGridViewCell.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 데이터를 편집할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>셀의 데이터를 편집할 수 없으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A> 속성 셀에 표시 되는 데이터를 편집할 수 있는지 여부를 나타냅니다. 설정할 수 있습니다 <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A> 개별 셀 또는 사용자 수 확인는 전체 행 또는 셀의 열을 읽기 전용으로 설정 하 여 합니다 <xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.DataGridViewColumn.ReadOnly%2A?displayProperty=nameWithType> 속성입니다. 기본적으로 읽기 전용 셀의 부모 행 또는 열으로 설정 된 경우 자식 셀은 같은 값을 갖습니다. 설정 하 여이 기본 동작을 재정의할 수 있습니다 <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A> 개별 셀에 대 한 합니다.  
  
 읽기 전용 셀을 이동할 수 있습니다 및 읽기 전용으로 현재 셀에 셀을 설정할 수 있습니다.  
  
 <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A> 셀을 편집할 수 있습니다; 인지만 영향을 줍니다. 사용자는 행을 삭제할 수 있는지 여부를 영향을 주지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 소유하는 행이 없는 경우  
  
또는 
이 속성을 설정할 때 소유하는 행이 공유되는 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ReadOnly" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Resizable">
      <MemberSignature Language="C#" Value="public virtual bool Resizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Resizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Resizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Resizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Resizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Resizable : bool" Usage="System.Windows.Forms.DataGridViewCell.Resizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 크기를 조정할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>셀의 크기를 조정할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Windows.Forms.DataGridViewCell.Resizable%2A> 셀의 부모 행 또는 열에서 속성을 설정 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RowIndex : int" Usage="System.Windows.Forms.DataGridViewCell.RowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 부모 행의 인덱스를 가져옵니다.</summary>
        <value>셀을 포함하는 행의 인덱스이거나, 소유하는 행이 없으면 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridViewCell.RowIndex%2A> -1을 반환 하는 속성, 셀이 두 열 머리글 또는 셀의 행이 공유 합니다.  
  
 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 사용을 보여 줍니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#080](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#080)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#080](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#080)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public virtual bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Windows.Forms.DataGridViewCell.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀이 선택되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>셀이 선택되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 연결된 <see cref="T:System.Windows.Forms.DataGridView" />가 없는 경우  
  
또는 
이 속성을 설정할 때 소유하는 행이 공유되는 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="protected virtual bool SetValue (int rowIndex, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SetValue(int32 rowIndex, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetValue (rowIndex As Integer, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool SetValue(int rowIndex, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : int * obj -&gt; bool&#xA;override this.SetValue : int * obj -&gt; bool" Usage="dataGridViewCell.SetValue (rowIndex, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="rowIndex">셀의 부모 행의 인덱스입니다.</param>
        <param name="value">설정할 셀 값입니다.</param>
        <summary>셀의 값을 설정합니다.</summary>
        <returns>값이 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0보다 작거나 부모 <see cref="T:System.Windows.Forms.DataGridView" />의 행 수보다 크거나 같은 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />가 0보다 작은 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetValue(System.Int32)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size" Usage="System.Windows.Forms.DataGridViewCell.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 크기를 가져옵니다.</summary>
        <value>소유하는 행의 높이와 소유하는 열의 너비로 설정된 <see cref="T:System.Drawing.Size" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 셀와 연결 되지 않은 경우는 <xref:System.Windows.Forms.DataGridView> 컨트롤을 <xref:System.Windows.Forms.DataGridViewCell.Size%2A> 속성에서 반환을 <xref:System.Drawing.Size> -1의 높이와 너비.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">셀을 포함하는 행이 공유 행인 경우  
  
또는 
셀이 열 머리글 셀인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.PreferredSize" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ Style { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewCell.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀의 스타일을 가져오거나 설정합니다.</summary>
        <value>셀과 연결된 스타일입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 셀에 의해 지정 된 스타일을 사용 하 여 셀을 표시 하는 컨트롤 <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> 형식의 다른 속성에서 스타일을 상속 하는 속성인 <xref:System.Windows.Forms.DataGridViewCellStyle>합니다. 통해 지정 된 스타일을 <xref:System.Windows.Forms.DataGridViewCell.Style%2A> 속성 다른 셀 스타일 속성을 통해 지정 된 스타일을 재정의 하지만 반드시 셀의 모양에 영향을 주는 모든 스타일을 나타내지 않습니다.  
  
 자세한 내용은 [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewCell.Style%2A> 셀의 배경색을 가져올 속성입니다. 이 예제는 일부에 대해 제공 된 더 큰 코드 예제는 <xref:System.Windows.Forms.DataGridViewColumn> 클래스입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#120)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#120)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#120)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellStyleChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.DataGridViewCell.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀에 대한 추가 데이터를 포함하는 개체를 가져오거나 설정합니다.</summary>
        <value>셀에 대한 데이터를 포함하는 <see cref="T:System.Object" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 된 형식은 <xref:System.Object> 클래스는이 속성에 할당할 수 있습니다. <xref:System.Windows.Forms.DataGridViewCell.Tag%2A> 속성은 일반적으로 셀에 표시 되는 값에 밀접 하 게 연결 된 데이터를 저장 하는 데 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Windows.Forms.Control.Tag" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.DataGridViewCell.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 셀과 연결된 도구 설명 텍스트를 가져오거나 설정합니다.</summary>
        <value>셀과 연결된 도구 설명 텍스트입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 마우스 포인터가 셀 위에 있는 고 속성 값이 없는 경우이 속성의 값 셀 도구 설명으로 표시 됩니다 <xref:System.String.Empty>합니다. 이 속성의 값이 <xref:System.String.Empty>셀 값이 고 그렇지 않으면 셀 표시에서 잘린 경우 셀의 값이 포함 된 도구 설명이 표시 됩니다, 셀 도구 설명을 표시 되지 것입니다. 도구 설명의 표시를 설정 하 여 방지할 수도 있습니다는 <xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A?displayProperty=nameWithType> 속성을 `false`입니다.  
  
 경우는 <xref:System.Windows.Forms.DataGridView> 컨트롤 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성을 설정 또는 해당 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성은 `true`의 값을 가져올를 <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> 속성 발생을 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> 컨트롤의 이벤트의 값을 반환 합니다를 <xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType> 속성으로는 이벤트 처리기를 지정 합니다. 이벤트 처리기가 없는 경우의 가치를 창출 합니다 <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> 속성의 기본값 또는 이전에 지정 된 값을 반환 <xref:System.String.Empty>합니다.  
  
 처리를 <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> 이벤트는 다량의 셀을 설정할 때 성능 저하를 방지 하려면 데이터를 사용 하 여 작업할 때 주로 유용 <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> 여러 셀에 대 한 값입니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 발생이 속성을 변경 합니다 <xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged> 소유 하 고 있는 이벤트 <xref:System.Windows.Forms.DataGridView>있는 경우.  
  
   
  
## Examples  
 다음 코드 예제를 설정 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> 에 대 한 이벤트 처리기 내에서 속성을 <xref:System.Windows.Forms.DataGridView.CellFormatting> 이벤트입니다. 이 예제에서 제공 하는 더 큰 코드 예제의의 일부인 [방법: Forms DataGridView 컨트롤을 Windows에서 개별 셀에 도구 설명 추가](~/docs/framework/winforms/controls/add-tooltips-to-individual-cells-in-a-wf-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/cpp/datagridviewcell.tooltiptext.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/CS/datagridviewcell.tooltiptext.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridViewCell.ToolTipText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCell.ToolTipText/VB/datagridviewcell.tooltiptext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowCellToolTips" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCell.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataGridViewCell.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 개체를 설명하는 문자열을 반환합니다.</summary>
        <returns>현재 개체를 나타내는 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다른 언급이 없는 경우는 <xref:System.Windows.Forms.DataGridViewCell.ToString%2A> 다양 한 모든 셀 형식에 대 한 메서드는 다음 코드 예제에 표시 된 형식의 문자열을 반환 합니다.  
  
 `Classname {RowIndex = #, ColumnIndex = #}`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Forms.DataGridViewCell.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 셀과 연결된 값을 가져오거나 설정합니다.</summary>
        <value>셀에 표시할 데이터를 가져오거나 설정합니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 셀에 다른 값을 할당 하는 경우는 <xref:System.Windows.Forms.DataGridView.CellValueChanged> 의 이벤트는 <xref:System.Windows.Forms.DataGridView> 컨트롤 발생 합니다.  
  
 합니다 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> 속성은 셀을 포함 하는 실제 데이터 개체 이지만 <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> 속성 데이터의 서식이 지정 된 표현입니다. 합니다 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> 및 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> 속성 데이터 형식의 이러한 값은 각각에 해당 합니다.  
  
 설정 하는 경우는 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> 속성에 지정 된 값이 자동으로 내부 셀 값에 값을 표시 하 여 형식이 지정 된에서 변환 합니다. 예를 들어 합니다 <xref:System.Windows.Forms.DataGridViewCellStyle> 셀은 무시를 따라서 설정 적용 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> 에 <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A?displayProperty=nameWithType> 의 속성 값을 얻지 <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하 여 셀의 내용을 업데이트 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> 속성입니다. 이 예제에서 제공 하는 더 큰 코드 예제의의 일부인 [방법: Windows Forms DataGridView 컨트롤에서 행 조작](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />가 유효 범위인 0부터 컨트롤의 행 수에서 1을 뺀 값 사이에 있지 않은 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />가 0보다 작아 셀이 행 머리글 셀임을 나타내는 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Tag" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public virtual Type ValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type with get, set" Usage="System.Windows.Forms.DataGridViewCell.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 값의 데이터 형식을 가져오거나 설정합니다.</summary>
        <value>셀에 있는 값의 데이터 형식을 나타내는 <see cref="T:System.Type" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> 속성 셀에 대해 설정 되어 있지는 <xref:System.Windows.Forms.DataGridViewColumn.ValueType%2A?displayProperty=nameWithType> 존재 하는 경우, 소유 열에 대 한 속성을 사용 합니다.  
  
 합니다 <xref:System.Windows.Forms.DataGridViewCell.Value%2A> 속성은 셀을 포함 하는 실제 데이터 개체 이지만 <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> 속성 데이터의 서식이 지정 된 표현입니다. 합니다 <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> 및 <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> 속성 데이터 형식의 이러한 값은 각각에 해당 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCell.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool" Usage="System.Windows.Forms.DataGridViewCell.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀이 숨겨진 행이나 열에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>셀이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 셀이 행 또는 열에 있는지 여부를 나타냅니다 해당 <xref:System.Windows.Forms.DataGridViewBand.Visible%2A> 속성이 설정 `false`합니다. 셀이 화면 밖으로 스크롤 되었는지 여부를 나타내지 않습니다. 셀 컨트롤의 표시 영역 내에서 표시 되는지 여부를 확인 하려면 사용 된 <xref:System.Windows.Forms.DataGridViewCell.Displayed%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.Visible" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Visible" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Displayed" />
      </Docs>
    </Member>
  </Members>
</Type>