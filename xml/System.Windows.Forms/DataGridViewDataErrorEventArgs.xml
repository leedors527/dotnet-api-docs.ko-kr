<Type Name="DataGridViewDataErrorEventArgs" FullName="System.Windows.Forms.DataGridViewDataErrorEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aa141054a7f73674a4db30b725687c0d21331a95" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39736072" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewDataErrorEventArgs : System.Windows.Forms.DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewDataErrorEventArgs extends System.Windows.Forms.DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewDataErrorEventArgs&#xA;Inherits DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewDataErrorEventArgs : System::Windows::Forms::DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="F#" Value="type DataGridViewDataErrorEventArgs = class&#xA;    inherit DataGridViewCellCancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewCellCancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Windows.Forms.DataGridView.DataError" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 처리는 <xref:System.Windows.Forms.DataGridView.DataError> 이벤트 (예를 들어, 외부 데이터 원본)에서 컨트롤 외부 코드에서 throw 된 예외를 처리할 수 있습니다. 사용 된 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A> 속성의 상태를 확인 하는 <xref:System.Windows.Forms.DataGridView> 예외 시. 사용 된 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> 예외 데이터를 검색할 속성입니다. 추가 이벤트 처리기로 예외를 처리 하려는 경우 설정 합니다 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> 속성을 `true`입니다.  
  
 합니다 <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> 고 <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A> 속성은 일반적으로 데이터 오류가 발생 한 셀을 나타냅니다. 하지만 외부 데이터 원본에서 오류가 발생, 데이터 원본을 제공할 수 없습니다 오류가 발생 한 열. 이 경우에 <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> 속성 오류 시 일반적으로 현재 셀의 열을 나타냅니다.  
  
   
  
## Examples  
 다음 코드 예제에서 제공 하는 정보에 응답 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs> 클래스입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 클래스 개요 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewDataErrorEventArgs (Exception exception, int columnIndex, int rowIndex, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, int32 columnIndex, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewDataErrorEventArgs.#ctor(System.Exception,System.Int32,System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewDataErrorEventArgs(Exception ^ exception, int columnIndex, int rowIndex, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewDataErrorEventArgs : Exception * int * int * System.Windows.Forms.DataGridViewDataErrorContexts -&gt; System.Windows.Forms.DataGridViewDataErrorEventArgs" Usage="new System.Windows.Forms.DataGridViewDataErrorEventArgs (exception, columnIndex, rowIndex, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="exception">발생한 예외입니다.</param>
        <param name="columnIndex"><see cref="E:System.Windows.Forms.DataGridView.DataError" />를 발생시킨 셀의 열 인덱스입니다.</param>
        <param name="rowIndex"><see cref="E:System.Windows.Forms.DataGridView.DataError" />를 발생시킨 셀의 행 인덱스입니다.</param>
        <param name="context">오류가 발생한 컨텍스트를 나타내는 <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 값의 비트 조합입니다.</param>
        <summary><see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewDataErrorContexts Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewDataErrorContexts Context" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As DataGridViewDataErrorContexts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewDataErrorContexts Context { System::Windows::Forms::DataGridViewDataErrorContexts get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Windows.Forms.DataGridViewDataErrorContexts" Usage="System.Windows.Forms.DataGridViewDataErrorEventArgs.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewDataErrorContexts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>오류가 발생했을 때의 <see cref="T:System.Windows.Forms.DataGridView" /> 상태에 대한 세부 내용을 가져옵니다.</summary>
        <value>오류가 발생한 컨텍스트를 지정하는 <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 값의 비트 조합입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 멤버는 <xref:System.Windows.Forms.DataGridViewDataErrorContexts> 비트를 사용 하 여 열거형을 결합할 수 있습니다 `OR` 연산자는 데이터 바인딩된의 상태를 나타내는 <xref:System.Windows.Forms.DataGridView> 데이터 오류가 발생 합니다. 예를 들어, 사용자가 잘못 된 셀 값 (예: 날짜를 해야 하는 셀의 이름 입력)를 입력 하는 경우 다음 다른 셀을 선택 하 고는 <xref:System.Windows.Forms.DataGridView> 잘못 된 셀 값을 커밋하려고 시도 합니다. 커밋에 실패 하면 합니다 <xref:System.Windows.Forms.DataGridView> 시킵니다를 <xref:System.Windows.Forms.DataGridView.DataError> 이벤트입니다 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A> 속성의 값이 포함 됩니다 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> 및 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.CurrentCellChange>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 오류 컨텍스트를 조사 하는 방법에 설명 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 클래스 개요 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>오류를 나타내는 예외를 가져옵니다.</summary>
        <value>오류를 나타내는 <see cref="T:System.Exception" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 둘 이상의 예외를 처리 하 <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler>를 설정 하 여 처리기의 끝에서 다시 예외를 throw 합니다 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> 속성을 `true`입니다.  
  
   
  
## Examples  
 다음 코드 예제를 확인 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> 속성입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 클래스 개요 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="public bool ThrowException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowException" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThrowException { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThrowException : bool with get, set" Usage="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewDataErrorEventHandler" /> 대리자에서 처리한 예외를 throw할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>예외를 throw해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 `false` 경우는 <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler> 하 여 표시 되는 예외 처리에 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> 속성인 하를 다른 예외를 전파 하지 않으려는 <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler> 처리할 수 있는 <xref:System.Windows.Forms.DataGridView.DataError> 이벤트입니다.  
  
 디버깅 목적으로 예외를 전파 하 고 오류의 컨텍스트에 대 한 정보에 대 한 스택 추적을 검사 하는 데 유용 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> 예외를 throw 되어서는 안을 나타내는 속성을 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 클래스 개요 항목입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">이 속성을 <see langword="true" />로 설정할 때 <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" /> 속성 값이 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
  </Members>
</Type>