<Type Name="DataGridViewRow" FullName="System.Windows.Forms.DataGridViewRow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c351a31248e87a27874d000714a8cfdbb481cf05" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59017306" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewRow : System.Windows.Forms.DataGridViewBand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewRow extends System.Windows.Forms.DataGridViewBand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewRow&#xA;Inherits DataGridViewBand" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewRow : System::Windows::Forms::DataGridViewBand" />
  <TypeSignature Language="F#" Value="type DataGridViewRow = class&#xA;    inherit DataGridViewBand" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewBand</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridViewRowConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 행을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridViewRow> 클래스의 행을 나타냅니다는 <xref:System.Windows.Forms.DataGridView> 제어 합니다. 통해 행을 검색할 수 있습니다 합니다 <xref:System.Windows.Forms.DataGridView.Rows%2A> 고 <xref:System.Windows.Forms.DataGridView.SelectedRows%2A> 컨트롤의 컬렉션입니다.  
  
 와 달리를 <xref:System.Windows.Forms.DataGridViewColumn>, <xref:System.Windows.Forms.DataGridViewRow> 물리적으로 모든 행의 셀 컬렉션을 포함 합니다. 이 컬렉션에 액세스할 수 있습니다는 <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> 속성입니다.  
  
 <xref:System.Windows.Forms.DataGridViewRow> 클래스 높이 셀 스타일 등 모양 및 동작 행 사용자 인터페이스 (UI)를 조정 하는 것에 대 한 개별 셀 요소에도 액세스 하는 데 사용 됩니다. 일반적으로 컨트롤 같은 특징을 공유에 있는 대부분의 행 또는 행을 사용 합니다. 컨트롤의 모든 행의 셀 스타일을 설정 하려면 반환 하는 개체의 속성을 설정 합니다 <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType> 속성입니다. 행을 교대로 반복 되는 스타일을 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType> 속성입니다. 셀 스타일에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다. 사용할 수도 있습니다는 <xref:System.Windows.Forms.DataGridView.RowTemplate%2A?displayProperty=nameWithType> 속성을 컨트롤에 추가 하는 모든 행에 대 한 기준으로 사용할 수 있는 행을 정의 합니다.  
  
 합니다 <xref:System.Windows.Forms.DataGridView> 제어는 공유 <xref:System.Windows.Forms.DataGridViewRow> 성능 저하를 방지 하려면 가능한 여러 데이터 행에서 개체입니다. 많은 양의 데이터 및 성능 문제가 발생 작업할 경우가 아니면 행 공유 일반적으로 무시할 수 있습니다. 공유 행으로 표시 됩니다는 <xref:System.Windows.Forms.DataGridViewBand.Index%2A> 속성 값이-1입니다. 일부 멤버는 <xref:System.Windows.Forms.DataGridViewRow> 공유 행이 있는 클래스를 사용할 수 없지만 통해 액세스 하 여 행을 공유 해제할 수 있습니다는 <xref:System.Windows.Forms.DataGridViewRowCollection.Item%2A?displayProperty=nameWithType> 속성입니다. 행도 다른 방법으로 해제할 수 있습니다. 해제 하지 않고 행에 액세스 하려면 사용 된 <xref:System.Windows.Forms.DataGridViewRowCollection.SharedRow%2A?displayProperty=nameWithType> 메서드. 많은 양의 데이터를 사용할 때에 행은 공유 하 고 성능 저하를 방지 하려면 공유 해제 하는 방법을 인식 해야 합니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 형식의 사용을 보여 줍니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부 [방법: Windows Forms DataGridView 컨트롤에서 행 조작](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#209)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#209)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#209)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>파생 하는 경우 <see cref="T:System.Windows.Forms.DataGridViewRow" /> 파생된 클래스에 새 속성 추가 재정의 해야 합니다 <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> 복제 작업 중 새 속성을 복사 하는 방법입니다. 또한 기본 클래스를 호출 해야 <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> 메서드는 기본 클래스의 속성이 새로운 셀에 복사 되도록 합니다.</para></block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
    <altmember cref="M:System.Windows.Forms.DataGridViewRow.Clone" />
    <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
    <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewRow();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>템플릿을 사용하지 않고 <see cref="T:System.Windows.Forms.DataGridViewRow" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 빈 상태에서 행을 초기화합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.DataGridViewRow.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" />에 할당된 <see cref="T:System.Windows.Forms.DataGridViewRow" />를 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" />에 할당된 <see cref="T:System.Windows.Forms.DataGridViewRow" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드에서 반환 되는 인스턴스를 제어 하려면 재정의 <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> 메서드.  
  
 현재 컨트롤에 할당된 <xref:System.Windows.Forms.AccessibleObject> 클래스가 없으면 이 클래스의 새 인스턴스가 만들어집니다.  
  
> [!NOTE]
>  가져오거나 설정 합니다 <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A> 속성에 대 한 참조를 추가 해야 합니다는 `Accessibility` 어셈블리와 함께 설치는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다.  
  
 액세스 가능 개체에 대 한 자세한 내용은 MSDN Library의 "Active Accessibility" 섹션을 참조 하세요 [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" />
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AdjustRowHeaderBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustRowHeaderBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustRowHeaderBorderStyle(class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AdjustRowHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, dataGridViewAdvancedBorderStylePlaceholder As DataGridViewAdvancedBorderStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedRow As Boolean, isLastVisibleRow As Boolean) As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustRowHeaderBorderStyle(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStyleInput, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="F#" Value="abstract member AdjustRowHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle&#xA;override this.AdjustRowHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="dataGridViewRow.AdjustRowHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput, dataGridViewAdvancedBorderStylePlaceholder, singleVerticalBorderAdded, singleHorizontalBorderAdded, isFirstDisplayedRow, isLastVisibleRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewAdvancedBorderStyleInput" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="dataGridViewAdvancedBorderStylePlaceholder" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataGridViewAdvancedBorderStyleInput">수정할 행 머리글의 테두리 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</param>
        <param name="dataGridViewAdvancedBorderStylePlaceholder">행 머리글의 테두리 스타일에 대한 중간 변경 사항을 저장하는 데 사용되는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</param>
        <param name="singleVerticalBorderAdded">결과에 세로 테두리를 하나 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="singleHorizontalBorderAdded">결과에 가로 테두리를 하나 추가하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="isFirstDisplayedRow">행이 <see cref="T:System.Windows.Forms.DataGridView" />에 표시되는 첫 번째 행이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="isLastVisibleRow">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 속성이 <see langword="true" />로 설정된 <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" />의 마지막 행이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 조건에 따라 입력 행 머리글의 테두리 스타일을 수정합니다.</summary>
        <returns>사용된 새 테두리 스타일을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridView> 컨트롤을 내부적으로 호출 된 <xref:System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle%2A> 행 머리글 셀에 대 한 테두리의 모양을 결정 하는 방법. <xref:System.Windows.Forms.DataGridView> 컨트롤의 값을 일반적으로 사용 합니다 <xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A> 속성에 대 한는 `dataGridViewAdvancedBorderStyleInput` 매개 변수입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle%2A> 행 머리글 셀의 테두리를 사용자 지정 하는 방법입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#30)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>행 머리글 셀의 테두리의 모양을 사용자 지정 하려는 경우이 메서드를 재정의 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellCollection Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellCollection Cells" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As DataGridViewCellCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellCollection ^ Cells { System::Windows::Forms::DataGridViewCellCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cells : System.Windows.Forms.DataGridViewCellCollection" Usage="System.Windows.Forms.DataGridViewRow.Cells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행을 채우는 셀의 컬렉션을 가져옵니다.</summary>
        <value>행의 셀을 모두 포함하는 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 액세스할 때 행 모든 셀이 포함 되지 않은 경우 비어 있는 새 <xref:System.Windows.Forms.DataGridViewCellCollection> 를 호출 하 여 만들어집니다는 <xref:System.Windows.Forms.DataGridViewRow.CreateCellsInstance%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> 행의 셀의 값을 설정 하는 속성입니다. 이 코드 예제에서 제공 하는 더 큰 코드 예제의의 일부인 [방법: Windows Forms DataGridView 컨트롤에서 행 조작](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.CreateCellsInstance" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="dataGridViewRow.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 행과 정확하게 일치하는 복사본을 만듭니다.</summary>
        <returns>복제된 <see cref="T:System.Windows.Forms.DataGridViewRow" />을 나타내는 <see cref="T:System.Object" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewRow.Clone%2A> 행을 복사 하는 메서드 및 해당 속성 값을 행에 포함 된 셀 값을 복사 하지 않습니다. 행을 복제 하는 경우 셀 값을 복사 하는 방법에 대 한 내용은 예제 섹션을 참조 합니다.  
  
 재정의 된 <xref:System.Windows.Forms.DataGridViewRow.Clone%2A> 에서 파생 될 때마다 메서드 <xref:System.Windows.Forms.DataGridViewRow> 파생된 클래스에 새 속성을 추가 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewRow.Clone%2A> 행을 복사 하 고 다음 원래 행의 셀 값을 사용 하 여 복사본을 채우는 방법입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#60](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#60)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#60](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#60)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> 파생된 클래스에서 기본 클래스의 호출 <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> 메서드를 기본 클래스의 속성을 새 행에 복사 되 고 파생된 클래스에 추가 된 속성의 값도 복사 해야 합니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 바로 가기 메뉴를 가져오거나 설정합니다.</summary>
        <value>현재 <see cref="T:System.Windows.Forms.ContextMenuStrip" />와 연결된 <see cref="T:System.Windows.Forms.DataGridViewRow" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 사용자 하지 않는 한 행을 마우스 오른쪽 단추로 클릭할 때 표시 되는 바로 가기 메뉴를 나타냅니다 합니다 <xref:System.Windows.Forms.DataGridView> 제어 <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> 이벤트 또는 행 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 속성 클릭 된 특정 셀에 대 한 바로 가기 메뉴를 재정의 합니다.  
  
 경우는 <xref:System.Windows.Forms.DataGridView> 컨트롤 <xref:System.Windows.Forms.DataGridView.DataSource%2A> 속성을 설정 또는 해당 <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> 속성은 `true`의 값을 가져올를 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 속성 발생을 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 컨트롤의 이벤트의 값을 반환 합니다를 <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType> 속성으로는 이벤트 처리기를 지정 합니다. 이벤트 처리기가 없는 경우의 가치를 창출 합니다 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 속성의 기본값 또는 이전에 지정 된 값을 반환 `null`합니다.  
  
 처리를 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> 이벤트는 대량의 행을 설정 하는 경우 성능 저하를 방지 하려면 데이터를 사용 하 여 작업할 때 주로 유용 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 여러 행에 대 한 값입니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 발생이 속성을 변경 합니다 <xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged> 소유 하 고 있는 이벤트 <xref:System.Windows.Forms.DataGridView>있는 경우.  
  
 사용 하 여 현재 행을 공유 하는 경우는 <xref:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip%2A> 이 속성의 값을 가져오는 대신 합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip%2A?displayProperty=nameWithType> 속성은 거의 동일 합니다 <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> 의 속성은 <xref:System.Windows.Forms.DataGridViewRow> 클래스. 이 코드 예제는 더 큰 코드 예제에 제공 된의 일부는 <xref:System.Windows.Forms.DataGridViewColumn> 클래스입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#130](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#130)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#130](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#130)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#130](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#130)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성의 값을 가져올 때 행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridViewRow.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DataGridViewRow" />에 대해 액세스 가능한 개체를 새로 만듭니다.</summary>
        <returns><see cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" />에 대한 새 <see cref="T:System.Windows.Forms.DataGridViewRow" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance%2A> 메서드를 명시적으로 호출하지 않으면 <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A> 속성을 참조할 때 이 메서드가 호출됩니다.  
  
> [!NOTE]
>  가져오거나 설정할 <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A>에 대 한 참조를 추가 해야 합니다는 `Accessibility` 어셈블리와 함께 설치는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCells">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>행의 셀을 다시 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCells">
      <MemberSignature Language="C#" Value="public void CreateCells (System.Windows.Forms.DataGridView dataGridView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateCells(class System.Windows.Forms.DataGridView dataGridView) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateCells(System::Windows::Forms::DataGridView ^ dataGridView);" />
      <MemberSignature Language="F#" Value="member this.CreateCells : System.Windows.Forms.DataGridView -&gt; unit" Usage="dataGridViewRow.CreateCells dataGridView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridView" Type="System.Windows.Forms.DataGridView" />
      </Parameters>
      <Docs>
        <param name="dataGridView">셀 스타일의 템플릿 역할을 하는 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</param>
        <summary>기존 셀을 지우고 제공된 <see cref="T:System.Windows.Forms.DataGridView" /> 템플릿에 따라 셀의 템플릿을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 행의 지웁니다 <xref:System.Windows.Forms.DataGridViewCellCollection> 다시 초기화 하 고는 <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> 각 열의 속성을 `dataGridView` 매개 변수. 행은 모양 및 동작에서 행을 채택 하는 결과적으로 `dataGridView` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dataGridView" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Forms.DataGridView" />에 이미 속한 행이 추가된 경우  
  
또는 
셀 템플릿이 없는 열이 추가된 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCellCollection.Clear" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.CellTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateCells">
      <MemberSignature Language="C#" Value="public void CreateCells (System.Windows.Forms.DataGridView dataGridView, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateCells(class System.Windows.Forms.DataGridView dataGridView, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateCells(System::Windows::Forms::DataGridView ^ dataGridView, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.CreateCells : System.Windows.Forms.DataGridView * obj[] -&gt; unit" Usage="dataGridViewRow.CreateCells (dataGridView, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridView" Type="System.Windows.Forms.DataGridView" />
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dataGridView">셀 스타일의 템플릿 역할을 하는 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</param>
        <param name="values">다시 설정된 셀을 초기화하는 개체의 배열입니다.</param>
        <summary>기존 셀을 지우고 셀 템플릿과 값을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 행의 지웁니다 <xref:System.Windows.Forms.DataGridViewCellCollection> 다시 초기화 하 고는 <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> 각 열의 속성을 `dataGridView` 매개 변수. 행은 모양 및 동작에서 행을 채택 하는 결과적으로 `dataGridView` 매개 변수입니다.  
  
 더 많은 요소가 있는 경우는 `values` 배열을 초기화할 셀 보다 추가 요소는 무시 됩니다. 필요한 것 보다 적은 요소가 있으면 나머지 일치 하지 않는 셀을 초기 기본값으로 유지 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">매개 변수 중 하나가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Forms.DataGridView" />에 이미 속한 행이 추가된 경우  
  
또는 
셀 템플릿이 없는 열이 추가된 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.SetValues(System.Object[])" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.CellTemplate" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateCellsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridViewCellCollection CreateCellsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridViewCellCollection CreateCellsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateCellsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateCellsInstance () As DataGridViewCellCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridViewCellCollection ^ CreateCellsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateCellsInstance : unit -&gt; System.Windows.Forms.DataGridViewCellCollection&#xA;override this.CreateCellsInstance : unit -&gt; System.Windows.Forms.DataGridViewCellCollection" Usage="dataGridViewRow.CreateCellsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 행을 기반으로 셀의 새 컬렉션을 만듭니다.</summary>
        <returns>새로 만든 <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 빈 만듭니다 <xref:System.Windows.Forms.DataGridViewCellCollection> 사용 하 여는 <xref:System.Windows.Forms.BaseCollection.Count%2A> 속성이 0으로 설정 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생된 클래스의 자체 버전을 구현 해야 일반적으로 <see cref="M:System.Windows.Forms.DataGridViewRow.CreateCellsInstance" /> 메서드와 기본 클래스 버전을 호출 하지 않습니다.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
      </Docs>
    </Member>
    <Member MemberName="DataBoundItem">
      <MemberSignature Language="C#" Value="public object DataBoundItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataBoundItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.DataBoundItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBoundItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataBoundItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBoundItem : obj" Usage="System.Windows.Forms.DataGridViewRow.DataBoundItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행을 채운 데이터 바인딩된 개체를 가져옵니다.</summary>
        <value>데이터 바인딩된 <see cref="T:System.Object" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 행 개체를 통해 직접 데이터 바인딩된 개체에 액세스 하는 개체가 포함 된 데이터 원본에 직접 액세스할 수 없는 경우에 유용 합니다. 이벤트 처리기에 인수로 전달 되는 행 또는 선택한 행에 바인딩된 개체를 조작 하려는 경우에 유용 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewRow.DataBoundItem%2A> 비즈니스 개체에 액세스 하려면 속성 행에 바인딩됩니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: 개체에 액세스 바인딩된 Windows Forms DataGridView 행](~/docs/framework/winforms/controls/how-to-access-objects-bound-to-windows-forms-datagridview-rows.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewObjectBinding#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/CS/datagridviewobjectbinding.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewObjectBinding#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/VB/datagridviewobjectbinding.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewCellStyle ^ DefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스타일이 재정의되지 않는 경우 행의 셀을 렌더링하는 데 사용되는 행의 기본 스타일을 가져오거나 설정합니다.</summary>
        <value>기본 스타일로 적용할 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 셀에 의해 지정 된 스타일을 사용 하 여 셀을 표시 하는 컨트롤 <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> 형식의 다른 속성에서 스타일을 상속 하는 속성인 <xref:System.Windows.Forms.DataGridViewCellStyle>합니다. 이 행의 셀 스타일을 통해 지정 합니다 <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A> 속성을 통해 지정 된 스타일을 재정의 <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType>, 및 <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType> 속성 되지만 통해 지정 된 스타일에 의해 재정의 됩니다는 <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType> 속성입니다.  
  
 자세한 내용은 [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
 이 속성을 가져올 때를 <xref:System.Windows.Forms.DataGridViewCellStyle> 기본값은 값이 생성 됩니다 속성이 아직 액세스 하지 않은 경우. 여러 행에 대 한이 속성을 가져올 때 성능에 주는 영향이 발생할 수 있습니다. 가능 하면 단일 사용 <xref:System.Windows.Forms.DataGridViewCellStyle> 여러 행에 대해이 속성을 설정 합니다. 자세한 내용은 [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서이 속성을 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.DataGridView> 컨트롤 주로 표시를 위한 것입니다. 이 예제에서는 여러 가지 방법으로 사용자 지정 된 컨트롤의 시각적 모양 및 제한적된으로 상호 작용에 대 한 구성 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewCellStyle> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="Displayed">
      <MemberSignature Language="C#" Value="public override bool Displayed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Displayed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Displayed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Displayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Displayed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Displayed : bool" Usage="System.Windows.Forms.DataGridViewRow.Displayed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 행이 화면에 표시되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>행이 화면에 현재 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="DividerHeight">
      <MemberSignature Language="C#" Value="public int DividerHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DividerHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.DividerHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property DividerHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DividerHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DividerHeight : int with get, set" Usage="System.Windows.Forms.DataGridViewRow.DividerHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행 구분선의 높이(픽셀)를 가져오거나 설정합니다.</summary>
        <value>구분선(행의 아래쪽 여백)의 높이(픽셀)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 고정 된 행과 스크롤할 수 있는 행 간의 visual 경계를 제공 하는 데 유용 합니다. 연결 된 전경색 걸립니다 있지만 추가 가장자리는 현재 행의 일부가 <xref:System.Windows.Forms.DataGridView>합니다. 추가 가장자리는 사용자가 자동으로 조정 하는 행을 두 번 클릭 하는 영역을 확장 되지 않습니다. 행의 크기를 조정 하려면 사용자 구분선과 인접 한 행 간 경계에서 두 번 클릭 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 강조 하기 위해 행 구분선의 높이 수정 합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#210](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#210)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#210](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#210)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#210)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="DrawFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void DrawFocus (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle bounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool cellsPaintSelectionBackground);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void DrawFocus(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle bounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, class System.Windows.Forms.DataGridViewCellStyle cellStyle, bool cellsPaintSelectionBackground) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.DrawFocus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewCellStyle,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void DrawFocus(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle bounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, bool cellsPaintSelectionBackground);" />
      <MemberSignature Language="F#" Value="abstract member DrawFocus : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * System.Windows.Forms.DataGridViewCellStyle * bool -&gt; unit&#xA;override this.DrawFocus : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * System.Windows.Forms.DataGridViewCellStyle * bool -&gt; unit" Usage="dataGridViewRow.DrawFocus (graphics, clipBounds, bounds, rowIndex, rowState, cellStyle, cellsPaintSelectionBackground)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="cellsPaintSelectionBackground" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Windows.Forms.DataGridViewRow" />을 그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="clipBounds">그려야 하는 <see cref="T:System.Drawing.Rectangle" />의 영역을 나타내는 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</param>
        <param name="bounds">그리고 있는 <see cref="T:System.Windows.Forms.DataGridViewRow" />의 범위를 포함하는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="rowIndex">그리고 있는 셀의 행 인덱스입니다.</param>
        <param name="rowState">행의 상태를 지정하는 <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 값의 비트 조합입니다.</param>
        <param name="cellStyle">포커스 영역을 그리는 데 사용되는 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</param>
        <param name="cellsPaintSelectionBackground"><paramref name="cellStyle" />의 <see cref="P:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor" /> 속성을 포커스 영역의 색으로 사용하려면 <see langword="true" />이고, <paramref name="cellStyle" />의 <see cref="P:System.Windows.Forms.DataGridViewCellStyle.BackColor" /> 속성을 포커스 영역의 색으로 사용하려면 <see langword="false" />입니다.</param>
        <summary>지정된 범위 주위에 포커스 영역을 그립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `rowIndex` 매개 변수는 기본 클래스 구현에서 사용 하지는 <xref:System.Windows.Forms.DataGridViewRow.DrawFocus%2A> 메서드를 파생된 클래스에서이 메서드를 재정의 하는 경우 사용할 수 있지만.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 추가되지 않은 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="graphics" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="cellStyle" />가 <see langword="null" />입니다.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string with get, set" Usage="System.Windows.Forms.DataGridViewRow.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행 수준 오류에 대한 오류 메시지 텍스트를 가져오거나 설정합니다.</summary>
        <value>오류 메시지를 포함하는 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 행 수준 오류에 대 한 오류 메시지를 제공 합니다. 지정된 된 메시지는 사용자 행 머리글에 표시 된 오류 아이콘 위에 마우스 포인터를 움직이면 도구 설명에 표시 됩니다.  
  
 .NET Framework 4.5.2부터 오류 아이콘이 크기가 시스템 DPI 설정에 따라 app.config 파일에 다음 항목이 포함 된 경우:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 이 행와 연결 된 경우는 <xref:System.Windows.Forms.DataGridView> 이 속성을 설정 하는 컨트롤에서 발생 합니다 <xref:System.Windows.Forms.DataGridView.RowErrorTextChanged> 이벤트입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> 속성에는 <xref:System.Windows.Forms.DataGridView.DataError> 이벤트 처리기입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 클래스 개요입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성의 값을 가져올 때 행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤의 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" />
        <altmember cref="T:System.Windows.Forms.ErrorProvider" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="Frozen">
      <MemberSignature Language="C#" Value="public override bool Frozen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Frozen" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Frozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Frozen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Frozen : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.Frozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행이 고정되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>행이 고정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하면 사용자가 스크롤할 때 위치에 하나 또는 여러 행의 중요 한 정보를 유지 하는 <xref:System.Windows.Forms.DataGridView>합니다. 또한 고정된 된 행 위에 모든 행은 고정 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.DataGridViewBand.Frozen%2A?displayProperty=nameWithType> 속성은 거의 동일 합니다 <xref:System.Windows.Forms.DataGridViewRow.Frozen%2A> 의 속성은 <xref:System.Windows.Forms.DataGridViewRow> 클래스. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewBand> 클래스입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewBandDemo.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewBandDemo.cs#7)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewbanddemo.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="GetContextMenuStrip">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContextMenuStrip GetContextMenuStrip (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ContextMenuStrip GetContextMenuStrip(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextMenuStrip (rowIndex As Integer) As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ContextMenuStrip ^ GetContextMenuStrip(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.GetContextMenuStrip : int -&gt; System.Windows.Forms.ContextMenuStrip" Usage="dataGridViewRow.GetContextMenuStrip rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">현재 행의 인덱스입니다.</param>
        <summary>행의 바로 가기 메뉴를 가져옵니다.</summary>
        <returns>지정된 인덱스의 <see cref="T:System.Windows.Forms.ContextMenuStrip" />에 속한 <see cref="T:System.Windows.Forms.DataGridViewRow" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전달 된 <xref:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip%2A> 메서드를 검색 하는 데는 인덱서를 <xref:System.Windows.Forms.DataGridViewRow>입니다. 사용 하지 않는 합니다 <xref:System.Windows.Forms.DataGridViewBand.Index%2A> 속성에 대 한는 `rowIndex` 매개 변수입니다. 행이 공유 하는 경우 <xref:System.Windows.Forms.DataGridViewBand.Index%2A> 은-1로, 잘못 된 값에 대 한 `rowIndex`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="rowIndex" />가 -1입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 크거나 같은 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="GetErrorText">
      <MemberSignature Language="C#" Value="public string GetErrorText (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetErrorText(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetErrorText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorText (rowIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetErrorText(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.GetErrorText : int -&gt; string" Usage="dataGridViewRow.GetErrorText rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">오류를 포함하는 행의 인덱스입니다.</param>
        <summary>지정된 인덱스의 행에 대한 오류 텍스트를 가져옵니다.</summary>
        <returns>지정된 인덱스의 행에 대한 오류를 설명하는 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전달 된 <xref:System.Windows.Forms.DataGridViewRow.GetErrorText%2A> 메서드를 검색 하는 데 인덱스를 <xref:System.Windows.Forms.DataGridViewRow>입니다. 사용 하지 않는 합니다 <xref:System.Windows.Forms.DataGridViewBand.Index%2A> 속성에 대 한는 `rowIndex` 매개 변수입니다. 행이 공유 하는 경우 <xref:System.Windows.Forms.DataGridViewBand.Index%2A> 은-1로, 잘못 된 값에 대 한 `rowIndex`합니다. 행 공유에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하고 공유 행인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 속하고 <paramref name="rowIndex" />가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredHeight">
      <MemberSignature Language="C#" Value="public virtual int GetPreferredHeight (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPreferredHeight(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetPreferredHeight(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredHeight (rowIndex As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode, fixedWidth As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPreferredHeight(int rowIndex, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredHeight : int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; int&#xA;override this.GetPreferredHeight : int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; int" Usage="dataGridViewRow.GetPreferredHeight (rowIndex, autoSizeRowMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">기본 설정 높이가 계산되는 행의 인덱스입니다.</param>
        <param name="autoSizeRowMode">자동 크기 조정 모드를 지정하는 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" />입니다.</param>
        <param name="fixedWidth">고정 셀 너비의 기본 설정 높이를 계산하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 조건에 따라 지정된 행의 이상적인 높이를 계산합니다.</summary>
        <returns>행의 이상적인 높이(픽셀)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘텐츠 기반 자동 크기 조정 기능을 통해이 속성은 사용 된 <xref:System.Windows.Forms.DataGridView> 행의 이상적인 높이 결정 하는 컨트롤입니다. `rowIndex` 값을 사용 하면 공유 행의 실제 행 인덱스를 지정할 수 있습니다. (공유 행 <xref:System.Windows.Forms.DataGridViewBand.Index%2A> 속성 값은-1입니다.)  
  
 A `fixedWidth` 매개 변수 값 `false` 이상적인 셀 높이 너비 비율을 달성 하는 계산된 열 너비에 따라 행 높이 계산 합니다.  
  
 여러 줄 셀 내용에 대 한 셀에 적용 된 셀 스타일 있어야를 <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> 속성 값의 <xref:System.Windows.Forms.DataGridViewTriState.True>합니다.  
  
 자동 크기 조정에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정 옵션](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridViewRow.GetPreferredHeight%2A> 크기가 조정 된 행에 대 한 새 안쪽 여백 결정 방법입니다. 이 코드 예제에 제공 된 큰 예제의 일부는 [방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)합니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowMode" />는 유효한 <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> 값이 아닙니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" />가 유효 범위인 0부터 컨트롤의 행 수에서 1을 뺀 값 사이에 있지 않은 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.WrapMode" />
        <altmember cref="M:System.Windows.Forms.DataGridViewColumn.GetPreferredWidth(System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/d40b53d2-7e7c-48c5-8570-6e79d15c3bbb">방법: Windows Forms DataGridView 컨트롤에서 행 모양 사용자 지정</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a5620a9c-0d06-41e3-8934-c25ddb16c9e6">Windows Forms DataGridView 컨트롤의 크기 조정 옵션</related>
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="GetState">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewElementStates GetState (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DataGridViewElementStates GetState(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetState (rowIndex As Integer) As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewElementStates GetState(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetState : int -&gt; System.Windows.Forms.DataGridViewElementStates&#xA;override this.GetState : int -&gt; System.Windows.Forms.DataGridViewElementStates" Usage="dataGridViewRow.GetState rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">행의 인덱스입니다.</param>
        <summary>행의 현재 상태를 나타내는 값을 반환합니다.</summary>
        <returns>행 상태를 나타내는 <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 값의 비트 조합입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 공유 행의 상태를 확인 하는 데 유용 합니다. 공유 행 <xref:System.Windows.Forms.DataGridViewBand.Index%2A> 값은-1 사용 하는 것을 방지 하는 <xref:System.Windows.Forms.DataGridViewRow.State%2A> 공유 행이 있는 속성입니다. 이 메서드를 사용 하려면 실제 행 인덱스를 전달 합니다. 호출 하 여 공유 행의 실제 인덱스를 검색할 수 있습니다는 <xref:System.Windows.Forms.DataGridViewRowCollection.IndexOf%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 추가되었지만 <paramref name="rowIndex" /> 값이 유효 범위인 0부터 컨트롤의 행 수에서 1을 뺀 값 사이에 있지 않은 경우</exception>
        <exception cref="T:System.ArgumentException">행이 공유 행이 아니지만 <paramref name="rowIndex" /> 값이 행의 <see cref="P:System.Windows.Forms.DataGridViewBand.Index" /> 속성 값과 일치하지 않는 경우  
  
또는 
행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 추가되지 않았지만 <paramref name="rowIndex" /> 값이 행의 <see cref="P:System.Windows.Forms.DataGridViewBand.Index" /> 속성 값과 일치하지 않는 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Index" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.State" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRowCollection.IndexOf(System.Windows.Forms.DataGridViewRow)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRowHeaderCell HeaderCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRowHeaderCell HeaderCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.HeaderCell" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderCell As DataGridViewRowHeaderCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRowHeaderCell ^ HeaderCell { System::Windows::Forms::DataGridViewRowHeaderCell ^ get(); void set(System::Windows::Forms::DataGridViewRowHeaderCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderCell : System.Windows.Forms.DataGridViewRowHeaderCell with get, set" Usage="System.Windows.Forms.DataGridViewRow.HeaderCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeaderCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 머리글 셀을 가져오거나 설정합니다.</summary>
        <value>행의 머리글 셀을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 행의 머리글 셀을 행 레이블을 표시 하려면 일반적으로 사용 됩니다. 사용자 수 경우 행을 선택 하려면 행 머리글을 클릭할 수도 합니다 <xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=nameWithType> 속성이 <xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridViewRow.HeaderCell%2A> 레이블 행 머리글에는 속성입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#209)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#209)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#209)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectionMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Forms.DataGridViewRow.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 현재 높이를 가져오거나 설정합니다.</summary>
        <value>행의 높이(픽셀)입니다. 기본값은 기본 글꼴의 높이에 9픽셀을 더한 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 행의 최소 높이 설정 하려면 사용 된 <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridViewRow.Height%2A> 속성을 첫 번째 행의 높이 설정 합니다. 이 코드 예제에서 제공 하는 더 큰 코드 예제의의 일부인 [방법: Windows Forms DataGridView 컨트롤에서 행 조작](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#208](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#208)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#208](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#208)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#208](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#208)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="InheritedStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle InheritedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle InheritedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.InheritedStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InheritedStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewCellStyle ^ InheritedStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritedStyle : System.Windows.Forms.DataGridViewCellStyle" Usage="System.Windows.Forms.DataGridViewRow.InheritedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행에 적용되는 셀 스타일을 가져옵니다.</summary>
        <value>행의 셀에 대한 서식 및 스타일 정보를 지정하는 <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 셀에 적용 되는 열 스타일에 관계 없이 행의 모든 셀에 적용 되는 셀 스타일을 결정 하는 데 유용 합니다. 행 <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> 속성은 다음 속성에서 값을 상속 합니다.  
  
-   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType> (예: 홀수 인덱스 번호를 사용 하 여 행)  
  
-   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
 셀 스타일 상속에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 셀 스타일](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 셀 스타일</related>
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="IsNewRow">
      <MemberSignature Language="C#" Value="public bool IsNewRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.IsNewRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewRow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewRow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNewRow : bool" Usage="System.Windows.Forms.DataGridViewRow.IsNewRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행이 새 레코드에 대한 행인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>행이 새 데이터 행의 엔트리에 사용되는 <see cref="T:System.Windows.Forms.DataGridView" />의 마지막 행이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 레코드에 대 한 행이 있으므로 합니다 <xref:System.Windows.Forms.DataGridView.Rows%2A> 수집, 사용을 <xref:System.Windows.Forms.DataGridViewRow.IsNewRow%2A> 행은 새 레코드에 대 한 행 또는 채워진된 행이 있는지 여부를 결정 하는 속성입니다.  
  
 행은 데이터 입력 행에 시작 되 면 새 행 되 고 중지 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridViewRow.IsNewRow%2A> 를 방지 하려면 속성을 새 레코드에 대 한 행의 레이블을 설정 하려고 합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#209)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#209)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#209)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="https://msdn.microsoft.com/library/6110f1ea-9794-442c-a98a-f104a1feeaf4">Windows Forms DataGridView 컨트롤에서 새 레코드에 대한 행 사용</related>
      </Docs>
    </Member>
    <Member MemberName="MinimumHeight">
      <MemberSignature Language="C#" Value="public int MinimumHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumHeight : int with get, set" Usage="System.Windows.Forms.DataGridViewRow.MinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 최소 높이를 가져오거나 설정합니다.</summary>
        <value>2부터 <see cref="F:System.Int32.MaxValue" />까지의 최소 행 높이(픽셀)입니다. 기본값은 3입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> 속성은 사용자 인터페이스 (UI)를 통해 행의 높이 조정할 수 얼마나 제한을 설정 하 여 행의 표시를 유지 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> 속성을 두 번째 행의 최소 높이 설정 합니다. 이 코드 예제에서 제공 하는 더 큰 코드 예제의의 일부인 [방법: Windows Forms DataGridView 컨트롤에서 행 조작](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)합니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#207](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#207)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#207](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#207)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#207](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#207)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성을 설정할 때 행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">이 속성을 설정할 때 지정된 값이 2보다 작은 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Height" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal virtual void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="F#" Value="abstract member Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool -&gt; unit&#xA;override this.Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool -&gt; unit" Usage="dataGridViewRow.Paint (graphics, clipBounds, rowBounds, rowIndex, rowState, isFirstDisplayedRow, isLastVisibleRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Windows.Forms.DataGridViewRow" />을 그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="clipBounds">그려야 하는 <see cref="T:System.Drawing.Rectangle" />의 영역을 나타내는 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</param>
        <param name="rowBounds">그리고 있는 <see cref="T:System.Windows.Forms.DataGridViewRow" />의 범위를 포함하는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="rowIndex">그리고 있는 셀의 행 인덱스입니다.</param>
        <param name="rowState">행의 상태를 지정하는 <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 값의 비트 조합입니다.</param>
        <param name="isFirstDisplayedRow">현재 행이 <see cref="T:System.Windows.Forms.DataGridView" />에 표시되는 첫 번째 행임을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="isLastVisibleRow">현재 행이 <see cref="T:System.Windows.Forms.DataGridView" /> 속성이 <see langword="true" />로 설정된 <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" />의 마지막 행임을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>현재 행을 그립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 컨트롤 행을 그리기 위해이 메서드를 호출 합니다.  
  
 이 메서드를 호출 합니다 <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> 이벤트입니다. 이벤트 처리기를 설정 하지 않는 경우는 <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> 속성을 `true`, 또한이 메서드 호출을 <xref:System.Windows.Forms.DataGridViewRow.PaintHeader%2A> 및 <xref:System.Windows.Forms.DataGridViewRow.PaintCells%2A> 메서드 및 발생을 <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> 이벤트.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 추가되지 않은 경우  
  
또는 
행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 <paramref name="rowIndex" />가 0보다 작거나 컨트롤의 행 수에서 1을 뺀 값보다 큰 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPostPaint" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.PaintCells(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="PaintCells">
      <MemberSignature Language="C#" Value="protected internal virtual void PaintCells (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PaintCells(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.PaintCells(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PaintCells(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="abstract member PaintCells : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit&#xA;override this.PaintCells : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewRow.PaintCells (graphics, clipBounds, rowBounds, rowIndex, rowState, isFirstDisplayedRow, isLastVisibleRow, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Windows.Forms.DataGridViewRow" />을 그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="clipBounds">그려야 하는 <see cref="T:System.Drawing.Rectangle" />의 영역을 나타내는 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</param>
        <param name="rowBounds">그리고 있는 <see cref="T:System.Windows.Forms.DataGridViewRow" />의 범위를 포함하는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="rowIndex">그리고 있는 셀의 행 인덱스입니다.</param>
        <param name="rowState">행의 상태를 지정하는 <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 값의 비트 조합입니다.</param>
        <param name="isFirstDisplayedRow">현재 행이 <see cref="T:System.Windows.Forms.DataGridView" />에 표시되는 첫 번째 행임을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="isLastVisibleRow">현재 행이 <see cref="T:System.Windows.Forms.DataGridView" /> 속성이 <see langword="true" />로 설정된 <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" />의 마지막 행임을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="paintParts">그릴 셀의 부분을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> 값의 비트 조합입니다.</param>
        <summary>현재 행의 셀을 그립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 경우에 대 한 처리기를 제외한 행의 셀을 그리는 데이 메서드를 호출 하는 컨트롤을 <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> 이벤트 집합을 <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> 속성을 `true`합니다. 자세한 내용은 <xref:System.Windows.Forms.DataGridViewRow.Paint%2A>를 참조하십시오.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 추가되지 않은 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="paintParts" />가 <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> 값의 유효한 비트 조합이 아닌 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />
        <altmember cref="P:System.ComponentModel.HandledEventArgs.Handled" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PaintHeader">
      <MemberSignature Language="C#" Value="protected internal virtual void PaintHeader (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PaintHeader(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PaintHeader(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="abstract member PaintHeader : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit&#xA;override this.PaintHeader : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewRow.PaintHeader (graphics, clipBounds, rowBounds, rowIndex, rowState, isFirstDisplayedRow, isLastVisibleRow, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics"><see cref="T:System.Windows.Forms.DataGridViewRow" />을 그리는 데 사용되는 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="clipBounds">그려야 하는 <see cref="T:System.Drawing.Rectangle" />의 영역을 나타내는 <see cref="T:System.Windows.Forms.DataGridView" />입니다.</param>
        <param name="rowBounds">그리고 있는 <see cref="T:System.Windows.Forms.DataGridViewRow" />의 범위를 포함하는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <param name="rowIndex">그리고 있는 셀의 행 인덱스입니다.</param>
        <param name="rowState">행의 상태를 지정하는 <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 값의 비트 조합입니다.</param>
        <param name="isFirstDisplayedRow">현재 행이 <see cref="T:System.Windows.Forms.DataGridView" />에 표시되는 첫 번째 행임을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="isLastVisibleRow">현재 행이 <see cref="T:System.Windows.Forms.DataGridView" /> 속성이 <see langword="true" />로 설정된 <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" />의 마지막 행임을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="paintParts">그릴 셀의 부분을 나타내는 <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> 값의 비트 조합입니다.</param>
        <summary>현재 행의 머리글 셀을 그립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> 경우에 대 한 처리기를 제외한 행 머리글을 그리기 위해이 메서드를 호출 하는 컨트롤을 <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> 이벤트 집합을 <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> 속성을 `true`입니다. 자세한 내용은 <xref:System.Windows.Forms.DataGridViewRow.Paint%2A>를 참조하십시오.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤에 추가되지 않은 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="paintParts" />가 <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> 값의 유효한 비트 조합이 아닌 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />
        <altmember cref="P:System.ComponentModel.HandledEventArgs.Handled" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public override bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행이 읽기 전용인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>행이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A> 속성에 영향을 줍니다는 <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A?displayProperty=nameWithType> 행의 각 셀의 속성입니다.  
  
 경우이 속성을 설정 해도 효과가 없습니다의 값을 <xref:System.Windows.Forms.DataGridView.ReadOnly%2A?displayProperty=nameWithType> 속성은 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.DataGridViewBand.ReadOnly%2A?displayProperty=nameWithType> 속성은 거의 동일 합니다 <xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A> 의 속성은 <xref:System.Windows.Forms.DataGridViewRow> 클래스. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewBand> 클래스입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewBandDemo.cpp#11)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewBandDemo.cs#11)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewbanddemo.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ReadOnly" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="Resizable">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewTriState Resizable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewTriState Resizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Resizable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Resizable As DataGridViewTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewTriState Resizable { System::Windows::Forms::DataGridViewTriState get(); void set(System::Windows::Forms::DataGridViewTriState value); };" />
      <MemberSignature Language="F#" Value="member this.Resizable : System.Windows.Forms.DataGridViewTriState with get, set" Usage="System.Windows.Forms.DataGridViewRow.Resizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 행의 크기를 조정할 수 있는지 여부를 나타내거나 크기 조정 동작이 <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" /> 속성에서 상속됨을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>행의 크기를 조정할 수 있는지 여부나 <see cref="T:System.Windows.Forms.DataGridViewTriState" /> 속성이 <see langword="true" />로 설정된 경우에만 행의 크기를 조정할 수 있는지 여부를 나타내는 <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 공유 행 인를 사용 하 여이 속성을 사용할 수 없습니다. 공유 행에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
 경우는 <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> 속성은 <xref:System.Windows.Forms.DataGridViewTriState.False>, 사용자가 수동으로 행 높이 조정할 수 없습니다.  
  
 기본적으로 <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> 속성 값은 기반으로 합니다 <xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows%2A?displayProperty=nameWithType> 속성 값입니다. 하지만 명시적으로 설정 하면 <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> 하 <xref:System.Windows.Forms.DataGridViewTriState.True> 또는 <xref:System.Windows.Forms.DataGridViewTriState.False>, 컨트롤 값이 무시 됩니다. 설정할 <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> 를 <xref:System.Windows.Forms.DataGridViewTriState.NotSet> 값 상속 동작을 복원 합니다.  
  
 때문에 <xref:System.Windows.Forms.DataGridViewTriState.NotSet> 값 상속을 복원 합니다 <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> 속성을 반환 하지 것입니다는 <xref:System.Windows.Forms.DataGridViewTriState.NotSet> 에 행이 추가 되지 않는 값을 <xref:System.Windows.Forms.DataGridView> 컨트롤. 결정 해야 하는 경우 여부는 <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> 행의 속성 값 상속 또는 명시적으로 지정 된 확인 해당 <xref:System.Windows.Forms.DataGridViewElement.State%2A> 속성. 경우는 <xref:System.Windows.Forms.DataGridViewElement.State%2A> 값에 포함 됩니다 합니다 <xref:System.Windows.Forms.DataGridViewElementStates.ResizableSet> 플래그를는 <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> 속성 값 상속 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 사용을 보여 줍니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.MouseBasedResizing/CPP/mousesizing.cpp#15)]
 [!code-csharp[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.MouseBasedResizing/CS/mousesizing.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.MouseBasedResizing/VB/mousesizing.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public override bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행이 선택되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>해당 행이 선택되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 공유 행 인를 사용 하 여이 속성을 사용할 수 없습니다. 공유 행에 대 한 자세한 내용은 참조 하세요. [Windows Forms DataGridView 컨트롤의 크기 조정에 대 한 모범 사례](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 속성의 사용을 보여 줍니다.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#05)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#05)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="SetValues">
      <MemberSignature Language="C#" Value="public bool SetValues (params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.SetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetValues (ParamArray values As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetValues(... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.SetValues : obj[] -&gt; bool" Usage="dataGridViewRow.SetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">행의 셀 값을 나타내는 하나 이상의 개체입니다.  
  
또는 
<see cref="T:System.Array" /> 값의 <see cref="T:System.Object" />입니다.</param>
        <summary>행의 셀 값을 설정합니다.</summary>
        <returns>값이 모두 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `values` 매개 변수 행의 셀 값을 채우는 데 사용 되는 인수의 변수 숫자를 나타냅니다. 여러 개의 개별 인수로 또는 단일 멤버로이 메서드에 이러한 값을 전달할 수 있습니다 <xref:System.Array>합니다. 값 형식의 인스턴스가 해야 하므로 <xref:System.Object>하지만 값 형식 값의 배열에 전달 하는 경우 (같은 <xref:System.Int32> 값),이 메서드는 배열을 단일 개체로 처리 하 고 단일 셀에 할당 합니다. 이 동작을 방지 하려면 하는 값 형식 배열 캐스팅 해야 합니다는 <xref:System.Object> 배열 또는 여러 값을 여러 인수로 전달 합니다.  
  
 더 많은 값이 없으면 합니다 `values` 목록이이 메서드는 추가 값을 무시 하 고 반환 초기화할 셀 보다 `false`합니다. 또한이 메서드 반환 `false` 지정된 된 값 중 하나를 설정할 수 없는 경우.  
  
 셀 보다 적은 값의 경우 나머지 일치 하지 않는 셀의 현재 값을 유지 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="values" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.InvalidOperationException">연결된 <see cref="T:System.Windows.Forms.DataGridView" />가 가상 모드로 작동하는 상태에서 이 메서드를 호출한 경우  
  
또는 
이 행이 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewElementStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewElementStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewElementStates State { System::Windows::Forms::DataGridViewElementStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.DataGridViewElementStates" Usage="System.Windows.Forms.DataGridViewRow.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행의 현재 상태를 가져옵니다.</summary>
        <value>행 상태를 나타내는 <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> 값의 비트 조합입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 공유 행 로컬로 상태를 저장 하지 않으므로 공유 행을 사용 하 여이 속성을 사용할 수 없습니다. 공유 행의 상태를 가져오려면는 <xref:System.Windows.Forms.DataGridViewRow.GetState%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.GetState(System.Int32)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataGridViewRow.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>행을 설명하는, 사람이 인식할 수 있는 문자열을 가져옵니다.</summary>
        <returns>이 행을 설명하는 <see cref="T:System.String" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 재정의 된 버전의를 <xref:System.Windows.Forms.DataGridViewRow.ToString%2A> 메서드는 클래스 이름을 제공 하며 <xref:System.Windows.Forms.DataGridViewBand.Index%2A> 의이 인스턴스에 대 한 정보는 <xref:System.Windows.Forms.DataGridViewRow> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Index" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>행이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>행이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 행을 유지 하는 동안 뷰에서 행을 숨기려면이 속성을 사용 합니다 <xref:System.Windows.Forms.DataGridView>합니다. 행을 완전히 제거 하려면 사용 된 <xref:System.Windows.Forms.DataGridViewRowCollection.Remove%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.DataGridViewBand.Visible%2A?displayProperty=nameWithType> 속성은 거의 동일 합니다 <xref:System.Windows.Forms.DataGridViewRow.Visible%2A> 의 속성은 <xref:System.Windows.Forms.DataGridViewRow> 클래스. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.DataGridViewBand> 클래스입니다.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewBandDemo.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewBandDemo.cs#9)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewbanddemo.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">행이 <see cref="T:System.Windows.Forms.DataGridView" /> 컨트롤 안에 있고 공유 행인 경우</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRowCollection.Remove(System.Windows.Forms.DataGridViewRow)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Windows Forms DataGridView 컨트롤의 크기 조정에 대한 모범 사례</related>
      </Docs>
    </Member>
  </Members>
</Type>