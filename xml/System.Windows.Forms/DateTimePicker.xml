<Type Name="DateTimePicker" FullName="System.Windows.Forms.DateTimePicker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9ca80f990f50c7bfbf9dc36653b036cf70729ed" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59015592" /></Metadata><TypeSignature Language="C#" Value="public class DateTimePicker : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DateTimePicker extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DateTimePicker" />
  <TypeSignature Language="VB.NET" Value="Public Class DateTimePicker&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimePicker : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type DateTimePicker = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ValueChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Value")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DateTimePickerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DateTimePickerDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DateTimePickerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사용자가 날짜와 시간을 선택하고, 해당 날짜와 시간을 지정된 서식으로 표시할 수 있도록 하는 Windows 컨트롤을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker> 컨트롤은 사용자가 날짜와 시간을 선택 합니다. 해당 날짜를 표시 하 고 지정 된 형식으로 시간을 허용 하는 데 사용 합니다. <xref:System.Windows.Forms.DateTimePicker> 제어 쉽게 날짜를 사용 하 여 작업 및 많은 데이터 유효성 검사를 자동으로 처리 되기 때문에 시간입니다.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.DateTimePicker> 컨트롤 그레고리오 력 달력 지원 합니다.  
  
 날짜를 나타내는 데 사용 하는 경우는 <xref:System.Windows.Forms.DateTimePicker> 컨트롤이 두 부분으로 표시 됩니다: 텍스트 및 목록 옆의 아래쪽 화살표를 클릭할 때 표시 되는 달력에 표시 된 날짜를 사용 하 여 드롭다운 목록입니다. 달력 같습니다는 <xref:System.Windows.Forms.MonthCalendar> 여러 날짜를 선택할 때 사용할 수 있는 컨트롤입니다. 에 대 한 자세한 내용은 합니다 <xref:System.Windows.Forms.MonthCalendar> 제어를 참조 하십시오 [MonthCalendar 컨트롤 개요](~/docs/framework/winforms/controls/monthcalendar-control-overview-windows-forms.md)합니다.  
  
 일정 부분 컨트롤의 모양을 설정 하 여 변경할 수 있습니다 합니다 <xref:System.Windows.Forms.DateTimePicker.CalendarForeColor%2A>, <xref:System.Windows.Forms.DateTimePicker.CalendarFont%2A>, <xref:System.Windows.Forms.DateTimePicker.CalendarTitleBackColor%2A>, <xref:System.Windows.Forms.DateTimePicker.CalendarTitleForeColor%2A>를 <xref:System.Windows.Forms.DateTimePicker.CalendarTrailingForeColor%2A>, 및 <xref:System.Windows.Forms.DateTimePicker.CalendarMonthBackground%2A> 속성입니다.  
  
 스핀 단추 컨트롤 (up-down 컨트롤이 라고도 함)를 사용 하 여 날짜/시간 값을 조정 하려면, 설정 된 <xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A> 속성을 `true`입니다. 달력 떨어지지 않습니다 컨트롤을 선택 합니다. 날짜 및 시간 값을 변경 하려면 화살표와 아래쪽 개별적으로 각 요소를 선택 하 고 사용 하 여 조정할 수 있습니다.  
  
 <xref:System.Windows.Forms.DateTimePicker.Value%2A> 현재 날짜 및 시간에 설정 되어 속성에 포함 되어 있습니다. 사용할 수는 <xref:System.Windows.Forms.DateTimePicker.Text%2A> 속성 또는 적절 한 멤버의 <xref:System.Windows.Forms.DateTimePicker.Value%2A> 날짜 및 시간 값을 가져옵니다. 자세한 내용은 [방법: 설정 및 Forms DateTimePicker 컨트롤을 Windows 사용 하 여 날짜를 반환](~/docs/framework/winforms/controls/how-to-set-and-return-dates-with-the-windows-forms-datetimepicker-control.md)합니다. 날짜를 제한할 수 있습니다 및 설정 하 여 선택할 수 있는 시간을 <xref:System.Windows.Forms.DateTimePicker.MinDate%2A> 및 <xref:System.Windows.Forms.DateTimePicker.MaxDate%2A> 속성입니다.  
  
 값으로 설정 되는 네 가지 형식으로 표시할 수 있습니다 합니다 <xref:System.Windows.Forms.DateTimePicker.Format%2A> 속성: <xref:System.Windows.Forms.DateTimePickerFormat.Long>를 <xref:System.Windows.Forms.DateTimePickerFormat.Short>를 <xref:System.Windows.Forms.DateTimePickerFormat.Time>, 또는 <xref:System.Windows.Forms.DateTimePickerFormat.Custom>합니다. 기본 날짜 <xref:System.Windows.Forms.DateTimePicker.Format%2A> 는 <xref:System.Windows.Forms.DateTimePickerFormat.Long?displayProperty=nameWithType>합니다.  
  
 하려는 경우는 <xref:System.Windows.Forms.DateTimePicker> 을 선택 하거나 시간 날짜 대신 편집에 대 한 컨트롤로 표시할 설정 합니다 <xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A> 속성을 `true` 및 <xref:System.Windows.Forms.DateTimePicker.Format%2A> 속성을 <xref:System.Windows.Forms.DateTimePickerFormat.Time>입니다. 자세한 내용은 [방법: DateTimePicker 컨트롤을 사용 하 여 시간 표시](~/docs/framework/winforms/controls/how-to-display-time-with-the-datetimepicker-control.md)합니다.  
  
 경우는 <xref:System.Windows.Forms.DateTimePicker.Format%2A> 속성이 <xref:System.Windows.Forms.DateTimePickerFormat.Custom?displayProperty=nameWithType>를 설정 하 여 사용자 고유의 형식 스타일을 만들 수 있습니다는 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성과 사용자 지정 형식 문자열을 작성할 합니다. 사용자 지정 형식 문자열에는 사용자 지정 필드 문자 및 리터럴 문자 조합 수 있습니다. 예를 들어 "년 6 월 01, 2012-금요일"로 설정 하 여 표시할 수 있습니다는 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> "MMMM dd, yyyy-dddd" 속성입니다. 자세한 내용은 [방법: Windows Forms DateTimePicker 컨트롤을 사용 하는 사용자 지정 형식에 날짜를 표시할](~/docs/framework/winforms/controls/display-a-date-in-a-custom-format-with-wf-datetimepicker-control.md) 하 고 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
> [!CAUTION]
>  경우는 <xref:System.Windows.Forms.DateTimePicker> 데이터 바인딩 및 지원 되 값으로 변경 됩니다 `null`, 값을 <xref:System.Windows.Forms.DateTimePicker> 업데이트 되지 것입니다 하 고 이전 값은 그대로 유지 됩니다. 경우 여기서이 동작이 필요 없는 (예를 들어 때 데이터 바인딩된 컨트롤 집합을 사용 하 여 레코드 집합을 페이징할 수)에 사용 합니다 <xref:System.Windows.Forms.Binding.Format> 의 이벤트를 <xref:System.Windows.Forms.Binding> 설정 하는 클래스는 <xref:System.Windows.Forms.DateTimePicker> 으로 인식할 수 있는 값으로를 `null`.  
  
   
  
## Examples  
 다음 코드 예제에서는의 새 인스턴스를 만듭니다를 <xref:System.Windows.Forms.DateTimePicker> 제어 하 고이 초기화 합니다. 컨트롤의 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성을 설정 합니다. 또한 합니다 <xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A> 속성을 설정 하 여 컨트롤에 표시 됩니다는 <xref:System.Windows.Forms.CheckBox>, 및 <xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A> 속성을 설정 하는 컨트롤이 스핀 단추 컨트롤이로 표시 됩니다. 이 예제를 실행 하려면 호출을 폼에 다음 코드를 붙여 넣습니다 합니다 `CreateMyDateTimePicker` 예제에서는 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.  
  
 [!code-cpp[Classic DateTimePicker Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MonthCalendar" />
    <related type="Article" href="~/docs/framework/winforms/controls/how-to-set-and-return-dates-with-the-windows-forms-datetimepicker-control.md">방법: Windows Forms DateTimePicker 컨트롤을 사용하여 날짜 설정 및 반환</related>
    <related type="Article" href="~/docs/framework/winforms/controls/how-to-display-time-with-the-datetimepicker-control.md">방법: DateTimePicker 컨트롤을 사용하여 시간 표시</related>
    <related type="Article" href="~/docs/framework/winforms/controls/display-a-date-in-a-custom-format-with-wf-datetimepicker-control.md">방법: Windows Forms DateTimePicker 컨트롤을 사용하여 날짜를 사용자 지정 형식으로 표시</related>
    <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimePicker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimePicker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는의 새 인스턴스를 만듭니다를 <xref:System.Windows.Forms.DateTimePicker> 제어 하 고이 초기화 합니다. 컨트롤의 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성을 설정 합니다. 또한 합니다 <xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A> 속성을 설정 하 여 컨트롤에 표시 됩니다는 <xref:System.Windows.Forms.CheckBox>, 및 <xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A> 속성을 설정 하는 컨트롤이 스핀 단추 컨트롤 (up-down 컨트롤이 라고도 함)로 표시 됩니다.  
  
 [!code-cpp[Classic DateTimePicker Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DateTimePicker.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤의 배경색(&lt;see cref="T:System.Drawing.Color" /&gt;) 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DateTimePicker" />의 <see cref="T:System.Drawing.Color" /> 배경입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker.BackColor%2A>를 설정해도 <xref:System.Windows.Forms.DateTimePicker>에 적용되지 않습니다. <xref:System.Windows.Forms.DateTimePicker>의 드롭다운 달력에 대한 배경색(<see cref="T:System.Drawing.Color" />)을 설정하는 참조는 <xref:System.Windows.Forms.DateTimePicker.CalendarMonthBackground%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DateTimePicker.CalendarMonthBackground" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.CalendarTitleBackColor" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.CalendarForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackColorChanged : EventHandler " Usage="member this.BackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DateTimePicker.BackColor" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.DateTimePicker.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 배경 이미지를 가져오거나 설정합니다.</summary>
        <value>컨트롤의 배경 이미지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성/메서드/이벤트는이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DateTimePicker.BackgroundImage" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.DateTimePicker.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤의 배경 이미지 레이아웃을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.ImageLayout" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 된 <xref:System.Windows.Forms.ProgressBar.BackgroundImageLayout%2A> 속성의 모양에 영향을 주지는 <xref:System.Windows.Forms.DateTimePicker> 컨트롤입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DateTimePicker.BackgroundImageLayout" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font CalendarFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font CalendarFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CalendarFont" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ CalendarFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DateTimePicker.CalendarFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>달력에 적용된 글꼴 스타일을 가져오거나 설정합니다.</summary>
        <value>달력에 적용된 글꼴 스타일을 나타내는 <see cref="T:System.Drawing.Font" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 테마에 따라 Windows Vista와 부터는이 속성을 설정할 변경할 수 없습니다 모양의 달력. 예를 들어 Windows Aero 테마를 사용 하도록 설정 되어,이 속성을 설정할 효과가 없습니다. 즉, 런타임에 현재 운영 체제 테마에서 파생 되는 모양을 사용 하 여 달력의 업데이트 된 렌더링 됩니다. 이 속성을 사용 하 고 달력의 이전 버전을 사용 하도록 설정 하려는 경우에 응용 프로그램에 대 한 비주얼 스타일을 비활성화할 수 있습니다. 비주얼 스타일을 사용 하지 않도록 설정 하면 응용 프로그램에서 다른 컨트롤의 동작과 모양을 달라질 수 있습니다. Visual Basic에서 비주얼 스타일을 사용 하지 않으려면 프로젝트 디자이너를 열고 선택 취소 합니다 **XP 비주얼 스타일 사용** 확인란 합니다. C#에서 비주얼 스타일을 사용 하지 않으려면 Program.cs를 열고 주석 `Application.EnableVisualStyles();`합니다.  
  
   
  
## Examples  
 다음 코드 예제를 초기화 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DateTimePicker.CalendarFont%2A> 속성입니다. 이 예제에서는 새 <xref:System.Windows.Forms.DateTimePicker> 컨트롤을 추가 합니다 <xref:System.Windows.Forms.Control.Controls%2A> 의 컬렉션을 <xref:System.Windows.Forms.Form>를 초기화를 <xref:System.Windows.Forms.DateTimePicker.CalendarFont%2A> 속성을 동적으로 정의 된 <xref:System.Drawing.Font>합니다.  
  
 [!code-cpp[DateTimePicker.CalendarFont#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DateTimePicker.CalendarFont/CPP/calendarfont.cpp#1)]
 [!code-csharp[DateTimePicker.CalendarFont#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DateTimePicker.CalendarFont/CS/calendarfont.cs#1)]
 [!code-vb[DateTimePicker.CalendarFont#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DateTimePicker.CalendarFont/VB/calendarfont.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CalendarForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CalendarForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CalendarForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CalendarForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DateTimePicker.CalendarForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>달력의 전경색을 가져오거나 설정합니다.</summary>
        <value>달력의 전경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DateTimePicker> 는 만들어지면이 처음 속성은 같음는 <xref:System.Windows.Forms.Control.ForeColor%2A> 속성 값입니다.  
  
 테마에 따라 Windows Vista와 부터는이 속성을 설정할 변경할 수 없습니다 모양의 달력. 예를 들어 Windows Aero 테마를 사용 하도록 설정 되어,이 속성을 설정할 효과가 없습니다. 즉, 런타임에 현재 운영 체제 테마에서 파생 되는 모양을 사용 하 여 달력의 업데이트 된 렌더링 됩니다. 이 속성을 사용 하 고 달력의 이전 버전을 사용 하도록 설정 하려는 경우에 응용 프로그램에 대 한 비주얼 스타일을 비활성화할 수 있습니다. 비주얼 스타일을 사용 하지 않도록 설정 하면 응용 프로그램에서 다른 컨트롤의 동작과 모양을 달라질 수 있습니다. Visual Basic에서 비주얼 스타일을 사용 하지 않으려면 프로젝트 디자이너를 열고 선택 취소 합니다 **XP 비주얼 스타일 사용** 확인란 합니다. C#에서 비주얼 스타일을 사용 하지 않으려면 Program.cs를 열고 주석 `Application.EnableVisualStyles();`합니다.  
  
   
  
## Examples  
 다음 코드 예제를 초기화 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DateTimePicker.CalendarForeColor%2A> 속성입니다. 이 예제에서는 새 <xref:System.Windows.Forms.DateTimePicker>에 추가 합니다 <xref:System.Windows.Forms.Control.Controls%2A> 컬렉션 및 초기화 해당 <xref:System.Windows.Forms.DateTimePicker.CalendarForeColor%2A> 속성을는 <xref:System.Drawing.Color.Aqua%2A> 상수입니다.  
  
 [!code-cpp[DateTimePicker.CalendarForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DateTimePicker.CalendarForeColor/CPP/calendarforecolor.cpp#1)]
 [!code-csharp[DateTimePicker.CalendarForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DateTimePicker.CalendarForeColor/CS/calendarforecolor.cs#1)]
 [!code-vb[DateTimePicker.CalendarForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DateTimePicker.CalendarForeColor/VB/calendarforecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">할당된 값이 <see langword="null" />인 경우</exception>
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="CalendarMonthBackground">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CalendarMonthBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CalendarMonthBackground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CalendarMonthBackground" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarMonthBackground As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CalendarMonthBackground { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarMonthBackground : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DateTimePicker.CalendarMonthBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>달력 월의 배경색을 가져오거나 설정합니다.</summary>
        <value>달력 월의 배경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DateTimePicker> 가 만들어지면이 처음 속성은 같음는 <xref:System.Windows.Forms.DateTimePicker.DefaultMonthBackColor> 필드 값.  
  
 테마에 따라 Windows Vista와 부터는이 속성을 설정할 변경할 수 없습니다 모양의 달력. 예를 들어 Windows Aero 테마를 사용 하도록 설정 되어,이 속성을 설정할 효과가 없습니다. 즉, 런타임에 현재 운영 체제 테마에서 파생 되는 모양을 사용 하 여 달력의 업데이트 된 렌더링 됩니다. 이 속성을 사용 하 고 달력의 이전 버전을 사용 하도록 설정 하려는 경우에 응용 프로그램에 대 한 비주얼 스타일을 비활성화할 수 있습니다. 비주얼 스타일을 사용 하지 않도록 설정 하면 응용 프로그램에서 다른 컨트롤의 동작과 모양을 달라질 수 있습니다. Visual Basic에서 비주얼 스타일을 사용 하지 않으려면 프로젝트 디자이너를 열고 선택 취소 합니다 **XP 비주얼 스타일 사용** 확인란 합니다. C#에서 비주얼 스타일을 사용 하지 않으려면 Program.cs를 열고 주석 `Application.EnableVisualStyles();`합니다.  
  
   
  
## Examples  
 다음 코드 예제를 초기화 하는 방법에 설명 합니다 <xref:System.Windows.Forms.DateTimePicker.CalendarMonthBackground%2A> 속성입니다. 만든 후를 <xref:System.Windows.Forms.DateTimePicker> 에 추가 하는 <xref:System.Windows.Forms.Form>, 예제를 초기화 합니다 <xref:System.Windows.Forms.DateTimePicker.CalendarMonthBackground%2A> 속성을를 <xref:System.Drawing.Color> 상수.  
  
 [!code-cpp[DateTimePicker.CalendarMonthBackground#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DateTimePicker.CalendarMonthBackground/CPP/calendarmonthbackground.cpp#1)]
 [!code-csharp[DateTimePicker.CalendarMonthBackground#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DateTimePicker.CalendarMonthBackground/CS/calendarmonthbackground.cs#1)]
 [!code-vb[DateTimePicker.CalendarMonthBackground#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DateTimePicker.CalendarMonthBackground/VB/calendarmonthbackground.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">할당된 값이 <see langword="null" />인 경우</exception>
        <altmember cref="F:System.Windows.Forms.DateTimePicker.DefaultMonthBackColor" />
      </Docs>
    </Member>
    <Member MemberName="CalendarTitleBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CalendarTitleBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CalendarTitleBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CalendarTitleBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarTitleBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CalendarTitleBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarTitleBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DateTimePicker.CalendarTitleBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>달력 제목의 배경색을 가져오거나 설정합니다.</summary>
        <value>달력 제목의 배경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DateTimePicker> 가 만들어지면이 처음 속성은 같음는 <xref:System.Windows.Forms.DateTimePicker.DefaultTitleBackColor> 필드 값.  
  
 테마에 따라 Windows Vista와 부터는이 속성을 설정할 변경할 수 없습니다 모양의 달력. 예를 들어 Windows Aero 테마를 사용 하도록 설정 되어,이 속성을 설정할 효과가 없습니다. 즉, 런타임에 현재 운영 체제 테마에서 파생 되는 모양을 사용 하 여 달력의 업데이트 된 렌더링 됩니다. 이 속성을 사용 하 고 달력의 이전 버전을 사용 하도록 설정 하려는 경우에 응용 프로그램에 대 한 비주얼 스타일을 비활성화할 수 있습니다. 비주얼 스타일을 사용 하지 않도록 설정 하면 응용 프로그램에서 다른 컨트롤의 동작과 모양을 달라질 수 있습니다. Visual Basic에서 비주얼 스타일을 사용 하지 않으려면 프로젝트 디자이너를 열고 선택 취소 합니다 **XP 비주얼 스타일 사용** 확인란 합니다. C#에서 비주얼 스타일을 사용 하지 않으려면 Program.cs를 열고 주석 `Application.EnableVisualStyles();`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">할당된 값이 <see langword="null" />인 경우</exception>
        <altmember cref="F:System.Windows.Forms.DateTimePicker.DefaultTitleBackColor" />
      </Docs>
    </Member>
    <Member MemberName="CalendarTitleForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CalendarTitleForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CalendarTitleForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CalendarTitleForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarTitleForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CalendarTitleForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarTitleForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DateTimePicker.CalendarTitleForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>달력 제목의 전경색을 가져오거나 설정합니다.</summary>
        <value>달력 제목의 전경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DateTimePicker> 가 만들어지면이 처음 속성은 같음는 <xref:System.Windows.Forms.DateTimePicker.DefaultTitleForeColor> 필드 값.  
  
 테마에 따라 Windows Vista와 부터는이 속성을 설정할 변경할 수 없습니다 모양의 달력. 예를 들어 Windows Aero 테마를 사용 하도록 설정 되어,이 속성을 설정할 효과가 없습니다. 즉, 런타임에 현재 운영 체제 테마에서 파생 되는 모양을 사용 하 여 달력의 업데이트 된 렌더링 됩니다. 이 속성을 사용 하 고 달력의 이전 버전을 사용 하도록 설정 하려는 경우에 응용 프로그램에 대 한 비주얼 스타일을 비활성화할 수 있습니다. 비주얼 스타일을 사용 하지 않도록 설정 하면 응용 프로그램에서 다른 컨트롤의 동작과 모양을 달라질 수 있습니다. Visual Basic에서 비주얼 스타일을 사용 하지 않으려면 프로젝트 디자이너를 열고 선택 취소 합니다 **XP 비주얼 스타일 사용** 확인란 합니다. C#에서 비주얼 스타일을 사용 하지 않으려면 Program.cs를 열고 주석 `Application.EnableVisualStyles();`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">할당된 값이 <see langword="null" />인 경우</exception>
        <altmember cref="F:System.Windows.Forms.DateTimePicker.DefaultTitleForeColor" />
      </Docs>
    </Member>
    <Member MemberName="CalendarTrailingForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CalendarTrailingForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CalendarTrailingForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CalendarTrailingForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarTrailingForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CalendarTrailingForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarTrailingForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DateTimePicker.CalendarTrailingForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>달력에서 연속되는 날짜의 전경색을 가져오거나 설정합니다.</summary>
        <value>달력에서 연속되는 날짜의 전경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DateTimePicker> 가 만들어지면이 처음 속성은 같음는 <xref:System.Windows.Forms.DateTimePicker.DefaultTrailingForeColor> 필드 값.  
  
 후행 날짜는 이전 달의 종료 날짜 또는 일정을 채우는 데 다음 달의 시작 날짜입니다.  
  
 테마에 따라 Windows Vista와 부터는이 속성을 설정할 변경할 수 없습니다 모양의 달력. 예를 들어 Windows Aero 테마를 사용 하도록 설정 되어,이 속성을 설정할 효과가 없습니다. 즉, 런타임에 현재 운영 체제 테마에서 파생 되는 모양을 사용 하 여 달력의 업데이트 된 렌더링 됩니다. 이 속성을 사용 하 고 달력의 이전 버전을 사용 하도록 설정 하려는 경우에 응용 프로그램에 대 한 비주얼 스타일을 비활성화할 수 있습니다. 비주얼 스타일을 사용 하지 않도록 설정 하면 응용 프로그램에서 다른 컨트롤의 동작과 모양을 달라질 수 있습니다. Visual Basic에서 비주얼 스타일을 사용 하지 않으려면 프로젝트 디자이너를 열고 선택 취소 합니다 **XP 비주얼 스타일 사용** 확인란 합니다. C#에서 비주얼 스타일을 사용 하지 않으려면 Program.cs를 열고 주석 `Application.EnableVisualStyles();`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">할당된 값이 <see langword="null" />인 경우</exception>
        <altmember cref="F:System.Windows.Forms.DateTimePicker.DefaultTrailingForeColor" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.DateTimePicker.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DateTimePicker.Value" /> 속성이 유효한 날짜 및 시간 값으로 설정되었고 표시된 값을 업데이트할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Windows.Forms.DateTimePicker.Value" /> 속성이 유효한 <see cref="T:System.DateTime" /> 값으로 설정되었고 표시된 값을 업데이트할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 경우에 표시 되는 확인란의 상태를 가져오는 데는 <xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A> 속성 값이 `true`합니다. 경우는 <xref:System.Windows.Forms.DateTimePicker.Checked%2A> 속성 값이 `true`의 <xref:System.Windows.Forms.DateTimePicker> 컨트롤을 올바르게 형식이 지정 된 표시 <xref:System.Windows.Forms.DateTimePicker.Value%2A> ; 속성 값 컨트롤에 할당 된 마지막으로 유효한 날짜/시간 값을 표시 하는 고, 그렇지는 <xref:System.Windows.Forms.DateTimePicker.Value%2A> 속성 또는 현재 날짜 및 시간 (<xref:System.DateTime.Now%2A?displayProperty=nameWithType>) 적이 할당 한 값이 없으면입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DateTimePicker.Value" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.ShowCheckBox" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤을 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseUp">
      <MemberSignature Language="C#" Value="public event EventHandler CloseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CloseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.CloseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CloseUp As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CloseUp;" />
      <MemberSignature Language="F#" Value="member this.CloseUp : EventHandler " Usage="member this.CloseUp : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>드롭다운 달력을 해제하면 발생했다가 다시 사라집니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DateTimePicker.CloseUp> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DateTimePicker> 라는 `DateTimePicker1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DateTimePicker.CloseUp> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#376](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#376)]
 [!code-vb[System.Windows.Forms.EventExamples#376](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#376)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DateTimePicker.OnCloseUp(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dateTimePicker.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤의 액세스 가능성 개체를 새로 만듭니다.</summary>
        <returns>컨트롤의 새로운 <see cref="T:System.Windows.Forms.DateTimePicker.DateTimePickerAccessibleObject" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker.CreateAccessibilityInstance%2A> 메서드를 명시적으로 호출하지 않으면 <xref:System.Windows.Forms.Control.AccessibilityObject%2A> 속성을 참조할 때 이 메서드가 호출됩니다.  
  
> [!NOTE]
>  가져오거나 설정 합니다 <xref:System.Windows.Forms.Control.AccessibilityObject%2A> 속성에 대 한 참조를 추가 해야 합니다는 `Accessibility` .NET Framework를 사용 하 여 설치 된 어셈블리입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DateTimePicker.CreateAccessibilityInstance" /> 파생된 클래스에서 호출 하지 않아야 기본 클래스의 <see cref="M:System.Windows.Forms.DateTimePicker.CreateAccessibilityInstance" /> 메서드.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="dateTimePicker.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>실제 창 핸들을 만듭니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.DateTimePicker.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 핸들이 만들어지는 경우 필요한 작성 매개 변수를 가져옵니다.</summary>
        <value>컨트롤 핸들을 만들 때 필요한 작성 매개 변수가 포함된 <see cref="T:System.Windows.Forms.CreateParams" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="CustomFormat">
      <MemberSignature Language="C#" Value="public string CustomFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.CustomFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomFormat : string with get, set" Usage="System.Windows.Forms.DateTimePicker.CustomFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 지정한 날짜 및 시간 서식 문자열을 가져오거나 설정합니다.</summary>
        <value>사용자가 지정한 날짜 및 시간 서식을 나타내는 문자열입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 날짜 및 시간 구분 기호를 포함 하는 문자열 리터럴을 표시 또는 형식 문자열을 부분 문자열의 이스케이프 문자를 사용 해야 합니다. 예를 들어, "6 월 15 일 오후 12시"으로 날짜를 표시 하려면 설정의 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성을 '"에 at' 같이 MMMM dd"입니다. "At" 부분 문자열 이스케이프 문자로 묶여 있지 않은, 경우 결과 "6 월 15 일 aP 12:00 PM" "t" 문자는 한 문자 오전/오후도 읽어 들이기 때문입니다. 형식 문자열 (아래 형식의 문자열 표 참조).  
  
 날짜 및 시간 형식을 지정 하는 형식 문자열을 결합할 수 있습니다. 예를 들어, 06/15/2001로 날짜 및 시간을 표시할 오후 12 시이 속성에 설정할 "MM '/' dd '/' yyyy hh': ' mm tt"입니다. 자세한 내용은 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Windows.Forms.DateTimePicker.Format%2A> 속성으로 설정 되어 있어야 <xref:System.Windows.Forms.DateTimePickerFormat.Custom?displayProperty=nameWithType> 표시 되는 날짜 및 시간의 서식을 적용할이 속성에 대 한 합니다.  
  
 다음 표에서 모든 유효한 형식 문자열 및 해당 설명을 나열합니다.  
  
|형식 문자열|설명|  
|-------------------|-----------------|  
|일|하나 또는 두 일입니다.|  
|dd|두 일입니다. 자리 날짜 값을 0 올 수 있습니다.|  
|ddd|3 자로-요일 약어입니다.|  
|dddd|전체--요일 이름입니다.|  
|h|12 시간 형식으로 하나 또는 두 자리 시간입니다.|  
|hh|12 시간 형식으로 두 자리 시간입니다. 단일 숫자 값을 0 올 수 있습니다.|  
|H|24 시간 형식에서 하나 또는 두 자리 시간입니다.|  
|HH|24 시간 형식으로 두 자리 시간입니다. 단일 숫자 값을 0 올 수 있습니다.|  
|분|하나 또는이 분입니다.|  
|mm|이 분입니다. 단일 숫자 값을 0 올 수 있습니다.|  
|M|하나 또는 두 자리 월 수입니다.|  
|MM|두 자리 월 수입니다. 단일 숫자 값을 0 올 수 있습니다.|  
|M|세 자리 월 약어입니다.|  
|MMMM|전체 월 이름입니다.|  
|초|하나 또는 두 자리 초입니다.|  
|ss|두 자리 초입니다. 단일 숫자 값을 0 올 수 있습니다.|  
|t|한 문자 오전/오후 (오전 약어 으로 표시 됨 "A").|  
|tt|두 자로 오전/오후 합니다. (오전 약어 표시 됩니다 "AM").|  
|y|한 자리 연도 (2001 "1"로 표시 됨).|  
|yy|(2001 "01"으로 표시 됨) 연도의 마지막 두 자리 숫자입니다.|  
|yyyy|전체 연도 (2001 "2001"으로 표시 됨).|  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성 있도록는 <xref:System.Windows.Forms.DateTimePicker> "년 6 월 1, 2001-금요일"로 날짜를 표시 됩니다. 가정이 코드의 인스턴스를 <xref:System.Windows.Forms.DateTimePicker> 컨트롤에 생성 된를 <xref:System.Windows.Forms.Form>입니다.  
  
 [!code-cpp[Classic DateTimePicker.CustomFormat Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker.CustomFormat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker.CustomFormat Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker.CustomFormat Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker.CustomFormat Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker.CustomFormat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DateTimePickerFormat" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.Format" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMonthBackColor">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Color DefaultMonthBackColor;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Color DefaultMonthBackColor" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DateTimePicker.DefaultMonthBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly DefaultMonthBackColor As Color " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Color DefaultMonthBackColor;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultMonthBackColor : System.Drawing.Color" Usage="System.Windows.Forms.DateTimePicker.DefaultMonthBackColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤의 월 기본 배경색을 지정합니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.DateTimePicker.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 기본 크기를 가져옵니다.</summary>
        <value>컨트롤의 기본 <see cref="T:System.Drawing.Size" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTitleBackColor">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Color DefaultTitleBackColor;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Color DefaultTitleBackColor" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DateTimePicker.DefaultTitleBackColor" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly DefaultTitleBackColor As Color " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Color DefaultTitleBackColor;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultTitleBackColor : System.Drawing.Color" Usage="System.Windows.Forms.DateTimePicker.DefaultTitleBackColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤 제목의 기본 배경색을 지정합니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTitleForeColor">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Color DefaultTitleForeColor;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Color DefaultTitleForeColor" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DateTimePicker.DefaultTitleForeColor" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly DefaultTitleForeColor As Color " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Color DefaultTitleForeColor;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultTitleForeColor : System.Drawing.Color" Usage="System.Windows.Forms.DateTimePicker.DefaultTitleForeColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤의 기본 전경색을 지정합니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTrailingForeColor">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Color DefaultTrailingForeColor;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Color DefaultTrailingForeColor" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DateTimePicker.DefaultTrailingForeColor" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly DefaultTrailingForeColor As Color " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Color DefaultTrailingForeColor;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultTrailingForeColor : System.Drawing.Color" Usage="System.Windows.Forms.DateTimePicker.DefaultTrailingForeColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤의 연속되는 기본 전경색을 지정합니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DestroyHandle">
      <MemberSignature Language="C#" Value="protected override void DestroyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DestroyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.DestroyHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DestroyHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DestroyHandle();" />
      <MemberSignature Language="F#" Value="override this.DestroyHandle : unit -&gt; unit" Usage="dateTimePicker.DestroyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>실제 창 핸들을 소멸시킵니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dateTimePicker.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary>컨트롤과 해당하는 자식 컨트롤에서 사용된 관리되지 않는 리소스를 해제하고, 필요에 따라 관리되는 리소스를 해제할 수도 있습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.DateTimePicker.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에서 보조 버퍼를 사용하여 화면을 다시 그릴 것인지를 나타내는 값을 가져오거나 설정합니다. 이 속성을 설정해도 <see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤에는 아무런 영향을 주지 않습니다.</summary>
        <value>컨트롤이 보조 버퍼를 사용하여 해당 화면을 다시 그리면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 된 <xref:System.Windows.Forms.DateTimePicker.DoubleBuffered%2A> 속성이 적용 되지 않습니다는 <xref:System.Windows.Forms.DateTimePicker> 컨트롤입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤을 두 번 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가이 클래스에 대 한 관련 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDown">
      <MemberSignature Language="C#" Value="public event EventHandler DropDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.DropDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDown;" />
      <MemberSignature Language="F#" Value="member this.DropDown : EventHandler " Usage="member this.DropDown : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>드롭다운 달력이 표시될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리를 <xref:System.Windows.Forms.DateTimePicker.DropDown> 의 이벤트를 <xref:System.Windows.Forms.DateTimePicker> 하 고 사용 하는 <xref:System.Windows.Forms.DateTimePicker.MinDateTime> 및 <xref:System.Windows.Forms.DateTimePicker.MaxDateTime> 필드. 포함 된 폼에서이 예제에서는 다음 코드를 붙여넣습니다를 실행 하는 <xref:System.Windows.Forms.DateTimePicker> 라는 `DateTimePicker1`합니다.  
  
 [!code-cpp[System.Windows.Forms.DateTimePicker#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.DateTimePicker#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DateTimePicker#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DateTimePicker.OnDropDown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DropDownAlign">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LeftRightAlignment DropDownAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.LeftRightAlignment DropDownAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.DropDownAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownAlign As LeftRightAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LeftRightAlignment DropDownAlign { System::Windows::Forms::LeftRightAlignment get(); void set(System::Windows::Forms::LeftRightAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.DropDownAlign : System.Windows.Forms.LeftRightAlignment with get, set" Usage="System.Windows.Forms.DateTimePicker.DropDownAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LeftRightAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤에서 드롭다운 달력의 맞춤을 가져오거나 설정합니다.</summary>
        <value>컨트롤에 있는 드롭다운 달력의 맞춤입니다. 기본값은 <see cref="F:System.Windows.Forms.LeftRightAlignment.Left" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤의 오른쪽 또는 왼쪽 드롭다운 달력을 정렬할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 초기화를 <xref:System.Windows.Forms.DateTimePicker> 설정 하 여는 <xref:System.Windows.Forms.DateTimePicker.DropDownAlign%2A>, <xref:System.Windows.Forms.DateTimePicker.Value%2A>, <xref:System.Windows.Forms.DateTimePicker.Format%2A>, 및 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성. 이 예제를 실행 하려면 호출을 폼에 다음 코드를 붙여 넣습니다 `InitializeDateTimePicker` 폼의 생성자에서 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.  
  
 [!code-cpp[System.Windows.Forms.DateTimePicker#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.DateTimePicker#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.DateTimePicker#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">할당된 값이 <see cref="T:System.Windows.Forms.LeftRightAlignment" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Windows.Forms.LeftRightAlignment" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DateTimePicker.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤의 전경색을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Drawing.Color" />의 전경 <see cref="T:System.Windows.Forms.DateTimePicker" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 된 <xref:System.Windows.Forms.DateTimePicker.ForeColor%2A> 속성의 모양에 영향을 주지는 <xref:System.Windows.Forms.DateTimePicker> 컨트롤입니다.  
  
 드롭다운 달력의 전경색을 설정 하는 <xref:System.Windows.Forms.DateTimePicker>, 참조는 <xref:System.Windows.Forms.DateTimePicker.CalendarForeColor%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DateTimePicker.CalendarMonthBackground" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.CalendarTitleBackColor" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.CalendarForeColor" />
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DateTimePicker.ForeColor" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 <xref:System.Windows.Forms.DateTimePicker.ForeColor%2A> 속성을 프로그래밍 방식으로 수정 하거나 상호 작용을 통해 변경 됩니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DateTimePickerFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DateTimePickerFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As DateTimePickerFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DateTimePickerFormat Format { System::Windows::Forms::DateTimePickerFormat get(); void set(System::Windows::Forms::DateTimePickerFormat value); };" />
      <MemberSignature Language="F#" Value="member this.Format : System.Windows.Forms.DateTimePickerFormat with get, set" Usage="System.Windows.Forms.DateTimePicker.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DateTimePickerFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에 표시되는 날짜 및 시간의 서식을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DateTimePickerFormat" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.DateTimePickerFormat.Long" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 날짜가 표시 하는 날짜/시간 형식을 결정 합니다. 날짜/시간 형식은 해당 운영 체제의 국가별 설정 사용자를 기반으로 합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Windows.Forms.DateTimePicker.Format%2A> 속성으로 설정 되어 있어야 <xref:System.Windows.Forms.DateTimePickerFormat.Custom?displayProperty=nameWithType> 에 대 한는 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성 표시 되는 날짜 및 시간의 서식과 영향을 합니다.  
  
 에 시간을 표시 하는 <xref:System.Windows.Forms.DateTimePicker>로 설정 합니다 <xref:System.Windows.Forms.DateTimePicker.Format%2A> 를 <xref:System.Windows.Forms.DateTimePickerFormat.Time>, 및 <xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A> 속성을 `true`.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성 있도록는 <xref:System.Windows.Forms.DateTimePicker> "년 6 월 1, 2001-금요일"로 날짜를 표시 됩니다. 가정이 코드의 인스턴스를 <xref:System.Windows.Forms.DateTimePicker> 컨트롤에 생성 된를 <xref:System.Windows.Forms.Form>입니다.  
  
 [!code-cpp[Classic DateTimePicker.CustomFormat Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker.CustomFormat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker.CustomFormat Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker.CustomFormat Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker.CustomFormat Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker.CustomFormat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">할당된 값이 <see cref="T:System.Windows.Forms.DateTimePickerFormat" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Windows.Forms.DateTimePickerFormat" />
      </Docs>
    </Member>
    <Member MemberName="FormatChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FormatChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FormatChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.FormatChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormatChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FormatChanged;" />
      <MemberSignature Language="F#" Value="member this.FormatChanged : EventHandler " Usage="member this.FormatChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DateTimePicker.Format" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DateTimePicker.FormatChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DateTimePicker> 라는 `DateTimePicker1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DateTimePicker.FormatChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#374](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#374)]
 [!code-vb[System.Windows.Forms.EventExamples#374](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#374)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DateTimePicker.Format" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="dateTimePicker.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</param>
        <summary>지정된 키가 일반 입력 키인지 또는 전처리가 필요한 특수 키인지를 확인합니다.</summary>
        <returns>지정된 키가 일반 입력 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 창 메시지를 컨트롤에 직접 전송 되어야 하는 일반 입력된 키인지 또는 특수 키 (예: PAGE UP 및 PAGE DOWN) 해야 하는 전처리 된 지정한 키가 있는지 여부를 확인 하기 위해 전처리 하는 동안이 메서드를 호출 합니다. 후자의 경우에서 전처리 단계에서 사용 하지 않은 경우에 키를 컨트롤에 보냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Keys" />
      </Docs>
    </Member>
    <Member MemberName="MaxDate">
      <MemberSignature Language="C#" Value="public DateTime MaxDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.MaxDate" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime MaxDate { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDate : DateTime with get, set" Usage="System.Windows.Forms.DateTimePicker.MaxDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에서 선택할 수 있는 날짜 및 시간의 최대값을 가져오거나 설정합니다.</summary>
        <value>컨트롤에서 선택할 수 있는 날짜 및 시간의 최대값이며, 기본값은 CurrentCulture 달력의 최소값으로 결정의 <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" /> 속성 및 12 월 31 일, 오전 9998 12 시.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는의 새 인스턴스를 만듭니다를 <xref:System.Windows.Forms.DateTimePicker> 제어 하 고이 초기화 합니다. 컨트롤의 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성을 설정 합니다. 또한 합니다 <xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A> 속성을 설정 하 여 컨트롤에 표시 됩니다는 <xref:System.Windows.Forms.CheckBox>, 및 <xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A> 속성을 설정 하는 컨트롤이 스핀 단추 컨트롤 (up-down 컨트롤이 라고도 함)로 표시 됩니다.  
  
 [!code-cpp[Classic DateTimePicker Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">할당된 값이 <see cref="P:System.Windows.Forms.DateTimePicker.MinDate" /> 값보다 작은 경우</exception>
        <exception cref="T:System.SystemException">할당된 값이 <see cref="F:System.Windows.Forms.DateTimePicker.MaxDateTime" /> 값보다 큰 경우</exception>
        <altmember cref="F:System.Windows.Forms.DateTimePicker.MaxDateTime" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.MinDate" />
      </Docs>
    </Member>
    <Member MemberName="MaxDateTime">
      <MemberSignature Language="C#" Value="public static readonly DateTime MaxDateTime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MaxDateTime" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DateTimePicker.MaxDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxDateTime As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MaxDateTime;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxDateTime : DateTime" Usage="System.Windows.Forms.DateTimePicker.MaxDateTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤의 최대 날짜 값을 지정합니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 최대 날짜를 12/31/9998 23시 59분: 59로 설정 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 처리를 <xref:System.Windows.Forms.DateTimePicker.DropDown> 의 이벤트를 <xref:System.Windows.Forms.DateTimePicker> 하 고 사용 하는 <xref:System.Windows.Forms.DateTimePicker.MinDateTime> 및 <xref:System.Windows.Forms.DateTimePicker.MaxDateTime> 필드. 이 예제를 실행 하려면 다음 코드를 포함 하는 형식으로 붙여넣습니다를 <xref:System.Windows.Forms.DateTimePicker> 라는 `DateTimePicker1`합니다.  
  
 [!code-cpp[System.Windows.Forms.DateTimePicker#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.DateTimePicker#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.DateTimePicker#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DateTimePicker/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DateTimePicker.MaxDate" />
        <altmember cref="F:System.Windows.Forms.DateTimePicker.MinDateTime" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.MinDate" />
      </Docs>
    </Member>
    <Member MemberName="MaximumDateTime">
      <MemberSignature Language="C#" Value="public static DateTime MaximumDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime MaximumDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.MaximumDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaximumDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime MaximumDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumDateTime : DateTime" Usage="System.Windows.Forms.DateTimePicker.MaximumDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤에 사용할 수 있는 최대 날짜 값을 가져옵니다.</summary>
        <value><see cref="T:System.DateTime" /> 컨트롤의 최대 날짜 값을 나타내는 <see cref="P:System.Windows.Forms.DateTimePicker.MaximumDateTime" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 최대 날짜 9998 년 12 월 31 일에 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinDate">
      <MemberSignature Language="C#" Value="public DateTime MinDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.MinDate" />
      <MemberSignature Language="VB.NET" Value="Public Property MinDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime MinDate { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.MinDate : DateTime with get, set" Usage="System.Windows.Forms.DateTimePicker.MinDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에서 선택할 수 있는 날짜 및 시간의 최소값을 가져오거나 설정합니다.</summary>
        <value>컨트롤에서 선택할 수 있는 날짜 및 시간의 최소값이며, 기본값은 1/1/1753 00:00:00입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는의 새 인스턴스를 만듭니다를 <xref:System.Windows.Forms.DateTimePicker> 제어 하 고이 초기화 합니다. 컨트롤의 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성을 설정 합니다. 또한 합니다 <xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A> 속성을 설정 하 여 컨트롤에 표시 됩니다는 <xref:System.Windows.Forms.CheckBox>, 및 <xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A> 속성을 설정 하는 컨트롤이 스핀 단추 컨트롤 (up-down 컨트롤이 라고도 함)로 표시 됩니다.  
  
 [!code-cpp[Classic DateTimePicker Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">할당된 값이 <see cref="P:System.Windows.Forms.DateTimePicker.MaxDate" /> 값보다 작지 않은 경우</exception>
        <exception cref="T:System.SystemException">할당된 값이 <see cref="F:System.Windows.Forms.DateTimePicker.MinDateTime" /> 값보다 작은 경우</exception>
        <altmember cref="F:System.Windows.Forms.DateTimePicker.MinDateTime" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.MaxDate" />
      </Docs>
    </Member>
    <Member MemberName="MinDateTime">
      <MemberSignature Language="C#" Value="public static readonly DateTime MinDateTime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MinDateTime" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.DateTimePicker.MinDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinDateTime As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MinDateTime;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinDateTime : DateTime" Usage="System.Windows.Forms.DateTimePicker.MinDateTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤의 최대 날짜 값을 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 최소 날짜를 1/1/1753로 00시: 00입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumDateTime">
      <MemberSignature Language="C#" Value="public static DateTime MinimumDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime MinimumDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.MinimumDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinimumDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime MinimumDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumDateTime : DateTime" Usage="System.Windows.Forms.DateTimePicker.MinimumDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤에 사용할 수 있는 최소 날짜 값을 가져옵니다.</summary>
        <value><see cref="T:System.DateTime" /> 컨트롤의 최소 날짜 값을 나타내는 <see cref="P:System.Windows.Forms.DateTimePicker.MaximumDateTime" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 최소 날짜는 1753 년 1 월 1로 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스로 컨트롤을 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가이 클래스에 대 한 관련 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스로 컨트롤을 두 번 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가이 클래스에 대 한 관련 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCloseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnCloseUp (EventArgs eventargs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCloseUp(class System.EventArgs eventargs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnCloseUp(System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCloseUp(EventArgs ^ eventargs);" />
      <MemberSignature Language="F#" Value="abstract member OnCloseUp : EventArgs -&gt; unit&#xA;override this.OnCloseUp : EventArgs -&gt; unit" Usage="dateTimePicker.OnCloseUp eventargs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventargs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="eventargs">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DateTimePicker.CloseUp" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker.CloseUp> 드롭다운 달력 해제 되 고 사라질 때 이벤트가 발생 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DateTimePicker.OnCloseUp%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DateTimePicker.OnCloseUp(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DateTimePicker.OnCloseUp(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DateTimePicker.CloseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnDropDown">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDown (EventArgs eventargs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDown(class System.EventArgs eventargs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnDropDown(System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDown(EventArgs ^ eventargs);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDown : EventArgs -&gt; unit&#xA;override this.OnDropDown : EventArgs -&gt; unit" Usage="dateTimePicker.OnDropDown eventargs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventargs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="eventargs">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DateTimePicker.DropDown" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker.DropDown> 드롭다운 달력이 표시 될 때 이벤트가 발생 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DateTimePicker.OnDropDown%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DateTimePicker.OnDropDown(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DateTimePicker.OnDropDown(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DateTimePicker.DropDown" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="dateTimePicker.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.FontChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DateTimePicker.OnFontChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DateTimePicker.OnFontChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DateTimePicker.OnFontChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFormatChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormatChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnFormatChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormatChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormatChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormatChanged : EventArgs -&gt; unit&#xA;override this.OnFormatChanged : EventArgs -&gt; unit" Usage="dateTimePicker.OnFormatChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DateTimePicker.FormatChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DateTimePicker.FormatChanged> 이벤트가 발생할 때를 <xref:System.Windows.Forms.DateTimePicker.Format%2A> 속성 값이 변경 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DateTimePicker.OnFormatChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DateTimePicker.OnFormatChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DateTimePicker.OnFormatChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DateTimePicker.FormatChanged" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.Format" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="dateTimePicker.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.HandleCreated" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DateTimePicker.OnHandleCreated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DateTimePicker.OnHandleCreated(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DateTimePicker.OnHandleCreated(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="dateTimePicker.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DateTimePicker.OnHandleDestroyed%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DateTimePicker.OnHandleDestroyed(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DateTimePicker.OnHandleDestroyed(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="dateTimePicker.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="P:System.Windows.Forms.DateTimePicker.RightToLeftLayout" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DateTimePicker.OnRightToLeftLayoutChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DateTimePicker.OnRightToLeftLayoutChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DateTimePicker.OnRightToLeftLayoutChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="dateTimePicker.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> 메서드를 재정의합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (EventArgs eventargs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(class System.EventArgs eventargs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.OnValueChanged(System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(EventArgs ^ eventargs);" />
      <MemberSignature Language="F#" Value="abstract member OnValueChanged : EventArgs -&gt; unit&#xA;override this.OnValueChanged : EventArgs -&gt; unit" Usage="dateTimePicker.OnValueChanged eventargs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventargs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="eventargs">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.DateTimePicker.ValueChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker.ValueChanged> 이벤트를 컨트롤에 대 한 값을 변경할 때 발생 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.DateTimePicker.OnValueChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.DateTimePicker.OnValueChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.DateTimePicker.OnValueChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.DateTimePicker.ValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.DateTimePicker.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤의 내용과 해당 가장자리 사이의 간격을 가져오거나 설정합니다.</summary>
        <value>모든 경우에 <see cref="F:System.Windows.Forms.Padding.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 된 <xref:System.Windows.Forms.DateTimePicker.Padding%2A> 속성이 적용 되지 않습니다는 <xref:System.Windows.Forms.DateTimePicker> 컨트롤입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DateTimePicker.Padding" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가이 클래스에 대 한 관련 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤을 다시 그리면 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredHeight : int" Usage="System.Windows.Forms.DateTimePicker.PreferredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤의 기본 설정 높이를 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤의 기본 설정 높이(픽셀)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 설정된 높이 할당된 된 표시 텍스트를 수용 하는 데 필요한 최소 높이 <xref:System.Drawing.Font> 적용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.DateTimePicker.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.DateTimePicker" />의 내용을 오른쪽에서 왼쪽으로 배치할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DateTimePicker" /> 내용의 레이아웃이 오른쪽에서 왼쪽 방향이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false." />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DateTimePicker.RightToLeftLayout%2A> 속성에서 오른쪽에서 왼쪽으로 히브리어 또는 아랍어 같은 언어를 쓸 국가별 응용 프로그램에 사용 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DateTimePicker.RightToLeftLayout" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DateTimePicker.RightToLeftLayoutChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DateTimePicker> 라는 `DateTimePicker1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DateTimePicker.RightToLeftLayoutChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#377](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#377)]
 [!code-vb[System.Windows.Forms.EventExamples#377](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#377)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="dateTimePicker.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="y" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="width" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="height" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" Index="4" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="x">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Left" /> 속성 값입니다.</param>
        <param name="y">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Top" /> 속성 값입니다.</param>
        <param name="width">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Width" /> 속성 값입니다.</param>
        <param name="height">컨트롤의 새 <see cref="P:System.Windows.Forms.Control.Height" /> 속성 값입니다.</param>
        <param name="specified">열거형 값의 비트 조합입니다.</param>
        <summary>이 컨트롤의 지정된 범위를 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBox">
      <MemberSignature Language="C#" Value="public bool ShowCheckBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCheckBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.ShowCheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCheckBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBox : bool with get, set" Usage="System.Windows.Forms.DateTimePicker.ShowCheckBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>확인란이 선택된 날짜 왼쪽에 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>확인란이 선택된 날짜 왼쪽에 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A> 속성이 `true`, 확인란 컨트롤에서 날짜의 왼쪽에 표시 됩니다. 확인란을 선택 하면 날짜/시간 값을 업데이트할 수 있습니다. 확인란을 선택 취소 하면 날짜/시간 값을 변경할 수 아닙니다.  
  
   
  
## Examples  
 다음 코드 예제에서는의 새 인스턴스를 만듭니다를 <xref:System.Windows.Forms.DateTimePicker> 제어 하 고이 초기화 합니다. 컨트롤의 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성을 설정 합니다. 또한 합니다 <xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A> 속성을 설정 하 여 컨트롤에 표시 됩니다는 <xref:System.Windows.Forms.CheckBox>, 및 <xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A> 속성을 설정 하는 컨트롤이 스핀 단추 컨트롤 (up-down 컨트롤이 라고도 함)로 표시 됩니다.  
  
 [!code-cpp[Classic DateTimePicker Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowUpDown">
      <MemberSignature Language="C#" Value="public bool ShowUpDown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowUpDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.ShowUpDown" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowUpDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowUpDown { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowUpDown : bool with get, set" Usage="System.Windows.Forms.DateTimePicker.ShowUpDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스핀 단추 컨트롤(up-down 컨트롤이라고도 함)이 날짜 및 시간 값을 조정하는 데 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>스핀 단추 컨트롤이 날짜 및 시간 값을 조정하는 데 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A> 속성이 `true`, 스핀 단추 컨트롤 (라고도 위로 / 아래로 컨트롤을)를 드롭다운 달력, 대신 시간 값을 조정 하려면 사용 합니다. 날짜 및 시간 값을 변경 하려면 화살표와 아래쪽 개별적으로 각 요소를 선택 하 고 사용 하 여 조정할 수 있습니다.  
  
 에 시간을 표시 하는 <xref:System.Windows.Forms.DateTimePicker>로 설정 합니다 <xref:System.Windows.Forms.DateTimePicker.Format%2A> 속성을 <xref:System.Windows.Forms.DateTimePickerFormat.Time>, 및 <xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A> 속성을 `true`.  
  
   
  
## Examples  
 다음 코드 예제에서는의 새 인스턴스를 만듭니다를 <xref:System.Windows.Forms.DateTimePicker> 제어 하 고이 초기화 합니다. 컨트롤의 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성을 설정 합니다. 또한 합니다 <xref:System.Windows.Forms.DateTimePicker.ShowCheckBox%2A> 속성을 설정 하 여 컨트롤에 표시 됩니다는 <xref:System.Windows.Forms.CheckBox>, 및 <xref:System.Windows.Forms.DateTimePicker.ShowUpDown%2A> 속성을 설정 하는 컨트롤이 스핀 단추 컨트롤이로 표시 됩니다.  
  
 [!code-cpp[Classic DateTimePicker Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DateTimePicker Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimePicker Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DateTimePicker Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimePicker Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DateTimePicker Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UpDownBase" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.DateTimePicker.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 컨트롤과 관련된 텍스트를 가져오거나 설정합니다.</summary>
        <value>이 컨트롤과 관련된 텍스트를 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 의해 반환 된 문자열은 해당 하는 <xref:System.Windows.Forms.DateTimePicker.Value%2A> 적절 한 형식 지정 또는 사용자 지정 서식이 적용 된 속성입니다. 예를 들어 경우는 <xref:System.Windows.Forms.DateTimePicker.Value%2A> 2001-06-01 속성 오전 12시: 00 하는 동안는 <xref:System.Windows.Forms.DateTimePicker.CustomFormat%2A> 속성은 "dddd, MMMM dd, yyyy"로 설정는 <xref:System.Windows.Forms.DateTimePicker.Text%2A> 속성 값이 "Friday, 2001년 6월 년"입니다.  
  
 문자열의 인스턴스로 변환할 수 있어야이 속성을 설정할 때를 <xref:System.DateTime> 클래스입니다. 유효한 변환할 수 없는 문자열에서 발생 하는 사용자 지정 형식을 정의 하는 것이 불가능 <xref:System.DateTime> 값입니다. 이 인해에서 반환 된 문자열을 <xref:System.Windows.Forms.DateTimePicker.Text%2A> 속성으로 전달 되는 경우 오류를 유발할 수는 <xref:System.Windows.Forms.DateTimePicker.Text%2A> 속성. 문자열을 날짜/시간 값으로 변환할 수 없는 경우는 <xref:System.DateTime> throw 클래스는 <xref:System.FormatException>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Windows.Forms.DateTimePicker.Value" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DateTimePicker.Text" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dateTimePicker.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Windows.Forms.DateTimePicker" /> 컨트롤을 나타내는 문자열을 반환합니다.</summary>
        <returns>현재 <see cref="T:System.Windows.Forms.DateTimePicker" />을(를) 나타내는 문자열입니다. 문자열에는 컨트롤의 형식과 <see cref="P:System.Windows.Forms.DateTimePicker.Value" /> 속성이 포함됩니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public DateTime Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DateTimePicker.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Value { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Value : DateTime with get, set" Usage="System.Windows.Forms.DateTimePicker.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에 할당된 날짜 및 시간 값을 가져오거나 설정합니다.</summary>
        <value>컨트롤에 할당된 <see cref="T:System.DateTime" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.DateTimePicker.Value%2A> 속성 또는 사용자 코드에서 변경 되지 않은, 현재 날짜 및 시간으로 설정 됩니다 (<xref:System.DateTime.Now%2A?displayProperty=nameWithType>).  
  
   
  
## Examples  
 다음 코드 예제에서는 사용법을 <xref:System.Windows.Forms.DateTimePicker.Value%2A> 현재 날짜 값을 검색 하는 속성입니다. 첫째,이 예제에서는 표시 된 <xref:System.Windows.Forms.DateTimePicker.Value%2A> 속성입니다. 예제에서는 다음 증가 <xref:System.Windows.Forms.DateTimePicker.Value%2A> 하루 속성 값을 다시 표시 하는 속성입니다.  
  
 [!code-cpp[DateTimePicker.Value#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DateTimePicker.Value/CPP/value.cpp#1)]
 [!code-csharp[DateTimePicker.Value#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DateTimePicker.Value/CS/value.cs#1)]
 [!code-vb[DateTimePicker.Value#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DateTimePicker.Value/VB/value.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">설정 값이 <see cref="P:System.Windows.Forms.DateTimePicker.MinDate" />보다 작거나 <see cref="P:System.Windows.Forms.DateTimePicker.MaxDate" />보다 큰 경우</exception>
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="ValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DateTimePicker.ValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValueChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ValueChanged;" />
      <MemberSignature Language="F#" Value="member this.ValueChanged : EventHandler " Usage="member this.ValueChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.DateTimePicker.Value" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 입력에는이 이벤트가 발생 하기 전에 유효성이 검사 됩니다. 입력 한 날짜 이전인 경우에이 이벤트가 발생 하지 않습니다 <xref:System.Windows.Forms.DateTimePicker.MinDateTime> 보다 이후 이거나 <xref:System.Windows.Forms.DateTimePicker.MaxDateTime>합니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.DateTimePicker.ValueChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.DateTimePicker> 라는 `DateTimePicker1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.DateTimePicker.ValueChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#378](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#378)]
 [!code-vb[System.Windows.Forms.EventExamples#378](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#378)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DateTimePicker.OnValueChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DateTimePicker.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="dateTimePicker.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">처리할 Windows <see cref="T:System.Windows.Forms.Message" />입니다.</param>
        <summary>Windows 메시지를 처리합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>