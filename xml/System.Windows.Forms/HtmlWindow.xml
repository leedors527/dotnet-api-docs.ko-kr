<Type Name="HtmlWindow" FullName="System.Windows.Forms.HtmlWindow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1746151ab628bd6391f9e63bbb6e6a97f6c3a63" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/17/2019" /><Meta Name="ms.locfileid" Value="59676561" /></Metadata><TypeSignature Language="C#" Value="public sealed class HtmlWindow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlWindow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.HtmlWindow" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlWindow" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlWindow sealed" />
  <TypeSignature Language="F#" Value="type HtmlWindow = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>하나 이상의 <see cref="T:System.Windows.Forms.HtmlDocument" /> 인스턴스를 포함하는 논리 창을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindow> 창 Windows Forms 또는 Windows API에 대 한 개념을 혼동 해서는 안 됩니다. 방법이 없는 `HWND` 또는 인스턴스의에 직접 해당 하는 유사한 Windows 리소스 <xref:System.Windows.Forms.HtmlWindow>합니다. 대신, <xref:System.Windows.Forms.HtmlWindow> 대략적인 설명은 문서 위치에서 사용자의 화면에 표시 되는 메시지 및 대화 상자를 통해 사용자 상호 작용 하기 위한 메서드를 제공 합니다. <xref:System.Windows.Forms.HtmlWindow> 웹 페이지의 문서 및 해당 메타 데이터를 문서 위치 등 웹 브라우저의 기능에 대 한 논리적 컨테이너로 작동합니다.  
  
 또는 웹 페이지는 단일 문서 이루어져 `FRAMESET` 하나 이상 포함 된 `FRAME` 자신의 문서를 호스팅하는 각 요소입니다. 웹 개발자 프레임셋을 사용 하 여 논리적으로 관련 된 페이지 나란히 (예: 탐색 페이지 옆에 있는 콘텐츠 페이지)를 보여 줍니다. 단일 문서의 페이지 구성를 통해 액세스할 수 있습니다는 <xref:System.Windows.Forms.HtmlWindow.Document%2A> 속성을 <xref:System.Windows.Forms.HtmlWindow>페이지를 사용 하는 경우 프레임을 통해 해당 문서에 액세스할 수 있습니다 합니다 <xref:System.Windows.Forms.HtmlWindow.Frames%2A> 하나 이상의 구성 된 컬렉션 <xref:System.Windows.Forms.HtmlWindow> 개체.  
  
 때 호스트는 <xref:System.Windows.Forms.WebBrowser> 컨트롤 Windows Forms 응용 프로그램에서 같은 표준 Windows Forms 클래스를 사용 하 여 사용자와 상호 작용 하도록 선택할 수 있습니다 <xref:System.Windows.Forms.Form> 또는 <xref:System.Windows.Forms.MessageBox>에서 메서드를 사용할 수 있습니다 또는 <xref:System.Windows.Forms.HtmlWindow> 이 목적을 위해 정의 합니다. 합니다 <xref:System.Windows.Forms.HtmlWindow.Alert%2A> 사용자 지정 텍스트를 사용 하 여 간단한 대화 상자를 표시 하는 메서드 및 **확인** 단추; <xref:System.Windows.Forms.HtmlWindow.Prompt%2A> 사용자에 게 사용자 지정 텍스트 줄 텍스트 입력된 필드를 표시 하 고 <xref:System.Windows.Forms.HtmlWindow.Confirm%2A> 사용자 지정 텍스트 줄을 사용 하 여 대화 상자를 표시 하 고 **확인** 및 **취소** 단추.  
  
 사용할 수 있습니다 <xref:System.Windows.Forms.HtmlWindow> 새 문서가 포함 된 새 창을 열 수 있습니다. <xref:System.Windows.Forms.HtmlWindow.Open%2A> 명명 된 창에 지정된 된 URL을 로드 하는 동안 아직 없는 경우 새로 만드는, <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> 항상 새로 만든된 창에서 해당 URL을 엽니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 두 가지 메서드가 포함 되어 있습니다. 첫 번째 라는 창에 URL을 엽니다 `displayWindow`를 표시 하는 상태 표시줄을 사용 하 여 만드는 것입니다. 두 번째 동일한 창에서 다른 URL 열지만 위치 막대만 표시 되어야 함을 지정 합니다. 창 및 표시 되는 컨트롤의 크기를 URL은 처음 열리는 따라 결정을 확인 합니다. 코드 예제에서는 폼에는 <xref:System.Windows.Forms.WebBrowser> 라는 컨트롤 `WebBrowser1`합니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#13)]
 [!code-vb[System.Windows.Forms.HtmlWindow#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#13)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms535873.aspx">창 개체</related>
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa741505.aspx">IHTMLWindow2 Interface</related>
  </Docs>
  <Members>
    <Member MemberName="Alert">
      <MemberSignature Language="C#" Value="public void Alert (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Alert(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Alert(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Alert (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Alert(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Alert : string -&gt; unit" Usage="htmlWindow.Alert message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">메시지 상자에 표시할 <see cref="T:System.String" />입니다.</param>
        <summary>메시지 상자를 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.MessageBox?displayProperty=nameWithType> 클래스의 보다 강력한 버전을 제공 합니다 <xref:System.Windows.Forms.HtmlWindow.Alert%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms535933.aspx">alert 메서드</related>
      </Docs>
    </Member>
    <Member MemberName="AttachEventHandler">
      <MemberSignature Language="C#" Value="public void AttachEventHandler (string eventName, EventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachEventHandler(string eventName, class System.EventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.AttachEventHandler(System.String,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachEventHandler(System::String ^ eventName, EventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="member this.AttachEventHandler : string * EventHandler -&gt; unit" Usage="htmlWindow.AttachEventHandler (eventName, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="eventName">처리할 이벤트의 이름입니다.</param>
        <param name="eventHandler">이벤트를 처리하는 관리 코드에 대한 참조입니다.</param>
        <summary>명명된 HTML DOM 이벤트에 대한 이벤트 처리기를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문서 로드 완료 될 때까지 HTML 문서 개체 중 하나에 이벤트를 연결 하지 해야 합니다. 있는 가장 빠른이 메서드를 호출 해야 합니다 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 의 이벤트는 <xref:System.Windows.Forms.WebBrowser> 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListenerx">EventTarget.addEventListener()</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="htmlWindow.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>창을 닫습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Forms.HtmlWindow.IsClosed%2A> 창 이미 닫혀 있는지 확인 하는 속성입니다. 창 이미 닫혀 있는 경우이 메서드는 아무런 효과가 없습니다.  
  
 사용 하 여 새 창을 만들 때 <xref:System.Windows.Forms.HtmlWindow.Open%2A> 나 <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>, <xref:System.Windows.Forms.HtmlWindow.Close%2A> 하면 Internet Explorer의 새 인스턴스를 열려면 HTML 문서 개체 모델입니다. 호출 하지 않으면 <xref:System.Windows.Forms.HtmlWindow.Close%2A> 모든 사용자가 만든 windows에서 Internet Explorer의이 인스턴스 계속 실행 됩니다 응용 프로그램을 닫은 후에 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 창 열리고 지난 5 분 동안에서이 사용자가 사용 되지 않는 경우 닫습니다. 폼에 가정 하에 작성 된 코드 예제는 <xref:System.Windows.Forms.WebBrowser> 라는 컨트롤 `WebBrowser1`, <xref:System.Windows.Forms.Button> 라는 `Button1`, 및 <xref:System.Windows.Forms.Timer> 라는 클래스 `Timer1`합니다. 이 예제를 성공적으로 실행 하려면 첫 번째 인수에 제공 된 변경 <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> 유효한 url입니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.HtmlWindow#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536367.aspx">Close 메서드</related>
      </Docs>
    </Member>
    <Member MemberName="Confirm">
      <MemberSignature Language="C#" Value="public bool Confirm (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Confirm(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Confirm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Confirm (message As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Confirm(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Confirm : string -&gt; bool" Usage="htmlWindow.Confirm message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">사용자에게 표시할 텍스트입니다.</param>
        <summary>예/아니요 응답을 받도록 메시지와 단추가 있는 대화 상자를 표시합니다.</summary>
        <returns>사용자가 **예**를 클릭하면 <see langword="true" />이고, 사용자가 **아니오**를 클릭하거나 대화 상자를 닫으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindow.Confirm%2A> 모달 대화 상자를 표시합니다. 사용자는 첫 번째이 대화 상자를 닫지 않고 기본 HTML 페이지에 액세스할 수 없습니다.  
  
## Examples  

다음 HTML을 복사 하 고 orderForm.htm 라는 형태로를 저장 합니다.  

```html
<HTML>
<BODY>
<FORM name="NewOrderForm">
Select Part Type:
<SELECT name="PartType">
  <OPTION>AZ-3700
  <OPTION>AZ-3701
  <OPTION>AZ-3702  
</SELECT><br/>
Quantity: <INPUT type="text" name="PartQty" size="2" maxsize="2" /><br/>
Building/Desk:
<INPUT type="text" name="PartBuilding" size="2" maxsize="2"/> /  
<INPUT type="text" name="PartDesk" size="2" maxsize="2"/><p/>
<INPUT type="submit" value="Transmit Order"/>
</FORM>
</BODY>
</HTML>
```

다음 예제에서는 표시를 <xref:System.Windows.Forms.HtmlWindow.Confirm%2A> 대화 상자 사용자가 전송 `NewOrderForm`합니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#10)]
 [!code-vb[System.Windows.Forms.HtmlWindow#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536376.aspx">메서드를 확인 합니다.</related>
      </Docs>
    </Member>
    <Member MemberName="DetachEventHandler">
      <MemberSignature Language="C#" Value="public void DetachEventHandler (string eventName, EventHandler eventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DetachEventHandler(string eventName, class System.EventHandler eventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.DetachEventHandler(System.String,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DetachEventHandler(System::String ^ eventName, EventHandler ^ eventHandler);" />
      <MemberSignature Language="F#" Value="member this.DetachEventHandler : string * EventHandler -&gt; unit" Usage="htmlWindow.DetachEventHandler (eventName, eventHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventHandler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="eventName">처리할 이벤트의 이름입니다.</param>
        <param name="eventHandler">이벤트를 처리하는 관리 코드에 대한 참조입니다.</param>
        <summary>명명된 이벤트 처리기를 제거합니다.</summary>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536411.aspx">detachEvent 메서드</related>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlDocument Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As HtmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlDocument ^ Document { System::Windows::Forms::HtmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Document : System.Windows.Forms.HtmlDocument" Usage="System.Windows.Forms.HtmlWindow.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>창에 포함된 HTML 문서를 가져옵니다.</summary>
        <value>문서가 로드된 경우 <see cref="T:System.Windows.Forms.HtmlDocument" />의 올바른 인스턴스입니다. 이 창에 포함 하는 경우는 <c>프레임셋</c>, 또는 로드 된 문서가 반환 <see langword="null" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 액세스 하는 일반적으로 <xref:System.Windows.Forms.HtmlWindow.Document%2A> 를 통해를 <xref:System.Windows.Forms.WebBrowser.Document%2A> 의 속성을 <xref:System.Windows.Forms.WebBrowser> 컨트롤. 내 문서에 액세스 해야 하는 경우이 속성을 사용 하 여는 `FRAME` 를 사용 하 여는 <xref:System.Windows.Forms.HtmlWindow.Frames%2A> 컬렉션입니다.  
  
   
  
## Examples  
 다음 코드 예제는 프레임을 포함 하는 페이지 내의 각 문서를 검사 하 고 향후 조사에 대 한 각 페이지에서 모든 나가는 하이퍼링크의 테이블을 만듭니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DomWindow">
      <MemberSignature Language="C#" Value="public object DomWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DomWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.DomWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomWindow As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DomWindow { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DomWindow : obj" Usage="System.Windows.Forms.HtmlWindow.DomWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 클래스에서 래핑하는 관리되지 않는 인터페이스를 가져옵니다.</summary>
        <value>캐스팅할 수 있는 개체를 <see langword="IHTMLWindow2" />, <see langword="IHTMLWindow3" />, 또는 <see langword="IHTMLWindow4" /> 포인터입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문서 개체 모델 (DOM)을 기본 관리 되지 않는 인터페이스 포인터에서 노출 되지 않는 메서드를 실행 하는 데 <xref:System.Windows.Forms.HtmlWindow>합니다.  
  
 에 추가 해야 참조 된 관리 되지 않는 MSHTML.dll 사용 하려면 <xref:System.Windows.Forms.HtmlWindow.DomWindow%2A>합니다. 자세한 내용은 [어셈블리로 형식 라이브러리 가져오기](~/docs/framework/interop/importing-a-type-library-as-an-assembly.md)합니다.  
  
   
  
## Examples  
 다음 코드 예에서는 `IHTMLWindow2` 문서에서 포인터의 창 및 모달 창에 새 문서를 표시 합니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.HtmlWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa741505.aspx">IHTMLWindow2 Interface</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa741356.aspx">IHTMLWindow3 인터페이스</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa741344.aspx">IHTMLWindow4 인터페이스</related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="htmlWindow.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">테스트할 개체입니다.</param>
        <summary>현재 개체와 해당 개체가 같은지를 테스트합니다.</summary>
        <returns>개체가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementErrorEventHandler Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementErrorEventHandler Error" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.Error" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Error As HtmlElementErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementErrorEventHandler ^ Error;" />
      <MemberSignature Language="F#" Value="member this.Error : System.Windows.Forms.HtmlElementErrorEventHandler " Usage="member this.Error : System.Windows.Forms.HtmlElementErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>창 내부에서 실행 중인 스크립트에 런타임 오류가 발생하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML 페이지에는 JScript 또는 VBScript 페이지가 로드 될 때 실행 되는 일반적으로 작성 된 스크립트 코드를 포함할 수 있습니다. <xref:System.Windows.Forms.HtmlWindow.Error> 스크립트에서 런타임 오류가 발생할 때마다 발생 합니다. 스크립트 코드는 런타임에 바인딩된 이기 때문에 개체에 대 한 호출이 잘못 되었습니다. 즉 해결 실행 시간까지 정의 되지 않은 속성 또는 메서드를 호출 하는 null 개체 참조에 이르는 오류가 포함 될 수 있습니다.  
  
 설정할 수 있습니다 합니다 <xref:System.Windows.Forms.HtmlElementErrorEventArgs.Handled%2A> 속성의 <xref:System.Windows.Forms.HtmlElementErrorEventArgs> Internet Explorer에서 네이티브 오류 대화 상자를 표시 하지 않도록 하기 위해 true입니다.
  
   
  
## Examples  
 다음 코드 예제는 경우 HTML 페이지에 스크립트의 결과 문서에 정의 되지 않은 개체에 액세스 하려고 하는 오류를 포착 합니다. 해당 페이지가 완전히 로드 되기 전에 있어야 합니다 <xref:System.Windows.Forms.HtmlWindow.Error> 이벤트 처리기가 연결 되어, 그렇지 않으면이 예제에서는 작동 하지 것입니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#16)]
 [!code-vb[System.Windows.Forms.HtmlWindow#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#16)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/cc197053.aspx">onerror 이벤트</related>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberSignature Language="F#" Value="member this.Focus : unit -&gt; unit" Usage="htmlWindow.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 창에 포커스를 둡니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다른 창에는 이전의 포커스가 유지 면 <xref:System.Windows.Forms.HtmlWindow.Focus%2A> 된 호출을 해당 창의 포커스를 잃게 됩니다.  
  
 창의까지 창 내에서 요소에 포커스를 호출 하지 마십시오 <xref:System.Windows.Forms.HtmlWindow.Load> 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536425.aspx">포커스 메서드</related>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindowCollection Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlWindowCollection Frames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As HtmlWindowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlWindowCollection ^ Frames { System::Windows::Forms::HtmlWindowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Frames : System.Windows.Forms.HtmlWindowCollection" Usage="System.Windows.Forms.HtmlWindow.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>웹 페이지 내에 정의된 각 <c>FRAME</c> 요소에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.HtmlWindowCollection" /> 문서의 <c>프레임</c> 하 고 <c>IFRAME</c> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A `FRAME` 는 windows 내에 정의 된 집합을 `FRAMESET`입니다. `FRAME`단일 문서에서 여러 문서를 호스팅할 수 있도록 합니다. 각 `FRAME` 특정 행 및 열 너비를 소유으로 정의 되 고 페이지의 다른 위치 `FRAME`내에 정의 된 합니다 `FRAMESET`;의 위치는 `FRAME` 해결 되 면 사용자는 마우스를 사용할 경우에 따라 수 있지만 확장 하거나 축소할 수 있는 커서를 `FRAME`입니다. `IFRAME` 프레임을 비슷합니다 고정된 된 위치에 고정할 필요 합니다.  
  
 프레임의 인스턴스를 하나 포함 됩니다 <xref:System.Windows.Forms.HtmlWindow> 마다 `FRAME` 또는 `IFRAME` 웹 페이지 내에서 정의 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 프레임을 포함 하는 페이지 내의 각 문서를 검사 하 고 향후 조사에 대 한 각 페이지에서 모든 나가는 하이퍼링크의 테이블을 만듭니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.HtmlWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms537459.aspx">프레임 컬렉션</related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="htmlWindow.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>특정 형식에 대한 해시 함수 역할을 합니다.</summary>
        <returns>현재 <see cref="T:System.Windows.Forms.HtmlWindow" />의 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.GotFocus : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 창에서 사용자 입력 포커스를 받으면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindow.GotFocus> 에 발생 합니다.  
  
-   첫 번째 창에는 `FRAMESET` 때는 `FRAMESET` 처음 로드 합니다.  
  
-   `FRAME` 는 마지막 했습니다 포커스 포함 하는 창은 <xref:System.Windows.Forms.WebBrowser> 컨트롤 전경으로 이동 합니다.  
  
-   `FRAME` 사용자가 클릭 한 경우에 사용자가 클릭 창 내에서 요소에 포커스를 두지 않습니다.  
  
 에 대 한 기본 작업을 취소할 수 없습니다는 <xref:System.Windows.Forms.HtmlWindow.GotFocus> 이벤트 버블링 하지 못하게 합니다.
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.HtmlWindow.GotFocus> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.HtmlWindow> 라는 `HtmlWindow1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.HtmlWindow.GotFocus> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#452](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#452)]
 [!code-vb[System.Windows.Forms.EventExamples#452](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#452)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536934.aspx">onfocus 이벤트</related>
      </Docs>
    </Member>
    <Member MemberName="History">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlHistory History { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlHistory History" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.History" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property History As HtmlHistory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlHistory ^ History { System::Windows::Forms::HtmlHistory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.History : System.Windows.Forms.HtmlHistory" Usage="System.Windows.Forms.HtmlWindow.History" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlHistory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 가장 최근에 열어 본 URL을 포함하는 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.HtmlHistory" /> 현재 창에 대 한 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindow.History%2A> 라고 하는 현재 창 내의 탐색 하는 모든 Url을 포함 합니다 *탐색 스택에서*, 이러한 문서를 다시 탐색 하기 위한 메서드를 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Windows.Forms.HtmlWindow.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 창이 열려 있는지 또는 닫혀 있는지를 나타내는 값을 가져옵니다.</summary>
        <value>창이 화면에 열려 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.HtmlWindow> 사용자 또는 호출을 통해 닫힌는 <xref:System.Windows.Forms.HtmlWindow.Close%2A> 메서드를 새 URL로 이동 하거나 창의 문서에 액세스 하는 동안 오류가 발생 합니다. 현재 창 개체에 속성 및 메서드를 호출 해도 되는지 확인 하려면이 속성을 사용 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 창 열리고 지난 5 분 동안에서이 사용자가 사용 되지 않는 경우 닫습니다. 코드 예제에서는 폼에는 <xref:System.Windows.Forms.WebBrowser> 라는 컨트롤 `WebBrowser1`, <xref:System.Windows.Forms.Button> 라는 `Button1`, 및 <xref:System.Windows.Forms.Timer> 라는 클래스 `Timer1`합니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.HtmlWindow#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms537459.aspx">닫힌된 속성</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Load" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.Load" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Load As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Load;" />
      <MemberSignature Language="F#" Value="member this.Load : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Load : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>창의 문서와 모든 해당 요소의 초기화가 완료되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindow.Load> 이벤트 유사 하 게 작동 합니다 <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> 이벤트에는 <xref:System.Windows.Forms.WebBrowser> 컨트롤: 문서 내에서 액세스 HTML 요소에 안전 하 게 있다는 신호를 보냅니다.  
  
 에 대 한 기본 작업을 취소할 수 없습니다는 <xref:System.Windows.Forms.HtmlWindow.Load> 이벤트입니다.
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.HtmlWindow.Load> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.HtmlWindow> 라는 `HtmlWindow1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.HtmlWindow.Load> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#453](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#453)]
 [!code-vb[System.Windows.Forms.EventExamples#453](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#453)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/cc197055.aspx">onload 이벤트</related>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.LostFocus : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 입력 포커스가 창을 벗어난 경우 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.HtmlWindow.LostFocus> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.HtmlWindow> 라는 `HtmlWindow1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.HtmlWindow.LostFocus> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#454](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#454)]
 [!code-vb[System.Windows.Forms.EventExamples#454](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#454)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveTo">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>화면의 지정된 좌표로 창을 이동합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.MoveTo(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : System.Drawing.Point -&gt; unit" Usage="htmlWindow.MoveTo point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">창의 왼쪽 위 모퉁이에 대한 X, Y 좌표입니다.</param>
        <summary>화면의 지정된 좌표로 창을 이동합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 없습니다 <xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> 를 화면의 표시 가장자리에서 창을 이동 하 고 또한이 메서드는 웹 페이지에 스크립트를 통해 사용할 수 있는 신뢰할 수 없는 스크립트가 windows 보이지 않는 렌더링할 안전 하지 않습니다.  
  
 <xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> 시킵니다는 <xref:System.UnauthorizedAccessException> 여러 최상위 도메인 경우 이동 하려는 창 및 해당 부모 창에 있어야 합니다. 예를 들어, 호스트 하는 경우는 <xref:System.Windows.Forms.WebBrowser> a.adatum.com 가리키는 제어를 사용 하 여 새 창을 만듭니다 <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> b.adatum.com 표시 합니다. 이 경우 windows는 동일한 최상위 도메인의 일부가 되도록 것으로 간주 됩니다 및 예외가 throw 되지 않습니다. 그러나 호출 하는 경우 <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> www,microsoft.com 표시할 두 개의 windows 이제 서로 다른 최상위 도메인 및 <xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> 작업으로 인해 예외를 throw 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">이 작업을 실행하려는 코드에 이 창을 조작할 수 있는 권한이 없는 경우.</exception>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536626.aspx">moveTo 메서드</related>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.MoveTo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : int * int -&gt; unit" Usage="htmlWindow.MoveTo (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">창의 왼쪽 위 모퉁이에 대한 X 좌표입니다.</param>
        <param name="y">창의 왼쪽 위 모퉁이에 대한 Y 좌표입니다.</param>
        <summary>화면의 지정된 좌표로 창을 이동합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 없습니다 <xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> 를 화면의 표시 가장자리에서 창을 이동 하 고 또한이 메서드는 웹 페이지에 스크립트를 통해 사용할 수 있는 신뢰할 수 없는 스크립트가 windows 보이지 않는 렌더링할 안전 하지 않습니다.  
  
 <xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> 시킵니다는 <xref:System.UnauthorizedAccessException> 여러 최상위 도메인 경우 이동 하려는 창 및 해당 부모 창에 있어야 합니다. 예를 들어, 호스트 하는 경우는 <xref:System.Windows.Forms.WebBrowser> 사용 하 여 새 창을 만들 제어 하며 a.adatum.com를 가리키는 <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> b.adatum.com 표시할 합니다. 이 경우 windows는 동일한 최상위 도메인의 일부가 되도록 것으로 간주 됩니다 및 예외가 throw 되지 않습니다. 그러나 호출 하는 경우 <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> www,microsoft.com 표시할 두 개의 windows 이제 서로 다른 최상위 도메인 및 <xref:System.Windows.Forms.HtmlWindow.MoveTo%2A> 작업으로 인해 예외를 throw 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">이 작업을 실행하려는 코드에 이 창을 조작할 수 있는 권한이 없는 경우.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.HtmlWindow.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>창의 이름을 가져오거나 설정합니다.</summary>
        <value>이름을 나타내는 <see cref="T:System.String" />입니다.</value>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534187.aspx">name 속성</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 URL에 있는 새 콘텐츠를 표시하거나 다운로드합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Navigate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string -&gt; unit" Usage="htmlWindow.Navigate urlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">URL(Uniform Resource Locator)이 설명하는 표시할 리소스입니다.</param>
        <summary>지정된 URL에 있는 새 콘텐츠를 표시하거나 다운로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `url` 에 응용 프로그램에는 이전 페이지에서 관리 되는 DOM 개체에 대 한 참조가 올바르지 않을; 창에서 현재 표시 되는 페이지는 제거 되 고 새 페이지를 사용 하 여 대체 매개 변수를 HTML 페이지를 가리킵니다. 경우 `url` Internet Explorer에서 표시 되지 않는 리소스를 가리키는 다운로드 작업을 취소 하거나 디스크에 저장 된 응용 프로그램 외부의 리소스를 열 것인지 묻는 대화 상자를 사용 하 여 사용자 표시 됩니다.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536638.aspx">메서드를 이동 합니다.</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; unit" Usage="htmlWindow.Navigate url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="url">현재 창에 표시할 문서 또는 개체의 <see cref="T:System.Uri" />로 지정된 위치입니다.</param>
        <summary>현재 창에 새 문서를 표시합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.HtmlWindow left, System.Windows.Forms.HtmlWindow right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Forms.HtmlWindow left, class System.Windows.Forms.HtmlWindow right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.op_Equality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As HtmlWindow, right As HtmlWindow) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::HtmlWindow ^ left, System::Windows::Forms::HtmlWindow ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Forms.HtmlWindow * System.Windows.Forms.HtmlWindow -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.HtmlWindow" />
        <Parameter Name="right" Type="System.Windows.Forms.HtmlWindow" />
      </Parameters>
      <Docs>
        <param name="left">첫 번째 <see cref="T:System.Windows.Forms.HtmlWindow" /> 개체입니다.</param>
        <param name="right">두 번째 <see cref="T:System.Windows.Forms.HtmlWindow" /> 개체입니다.</param>
        <summary>두 <see cref="T:System.Windows.Forms.HtmlWindow" /> 개체가 같은지 테스트합니다.</summary>
        <returns>두 매개 변수가 모두 <see langword="true" />이거나 두 요소 모두에 같은 내부 COM 인터페이스가 있으면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 같음 연산자 테스트를 `IUnknown` 제공 된 래핑한 기본 COM 개체의 포인터 <xref:System.Windows.Forms.HtmlWindow> 클래스입니다.  
  
 이 연산자에 대 한 해당 메서드는 <xref:System.Windows.Forms.HtmlWindow.Equals%28System.Object%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.HtmlWindow left, System.Windows.Forms.HtmlWindow right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Forms.HtmlWindow left, class System.Windows.Forms.HtmlWindow right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.op_Inequality(System.Windows.Forms.HtmlWindow,System.Windows.Forms.HtmlWindow)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As HtmlWindow, right As HtmlWindow) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::HtmlWindow ^ left, System::Windows::Forms::HtmlWindow ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Forms.HtmlWindow * System.Windows.Forms.HtmlWindow -&gt; bool" Usage="System.Windows.Forms.HtmlWindow.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Forms.HtmlWindow" />
        <Parameter Name="right" Type="System.Windows.Forms.HtmlWindow" />
      </Parameters>
      <Docs>
        <param name="left">첫 번째 <see cref="T:System.Windows.Forms.HtmlWindow" /> 개체입니다.</param>
        <param name="right">두 번째 <see cref="T:System.Windows.Forms.HtmlWindow" /> 개체입니다.</param>
        <summary>두 <see langword="HtmlWindow" /> 개체가 다른지 비교합니다.</summary>
        <returns>두 개체 중 한 개체만 <see langword="true" />이거나 내부 COM 포인터가 일치하지 않으면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>명명된 창에 파일을 표시합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow Open (string urlString, string target, string windowOptions, bool replaceEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlWindow Open(string urlString, string target, string windowOptions, bool replaceEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (urlString As String, target As String, windowOptions As String, replaceEntry As Boolean) As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlWindow ^ Open(System::String ^ urlString, System::String ^ target, System::String ^ windowOptions, bool replaceEntry);" />
      <MemberSignature Language="F#" Value="member this.Open : string * string * string * bool -&gt; System.Windows.Forms.HtmlWindow" Usage="htmlWindow.Open (urlString, target, windowOptions, replaceEntry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="windowOptions" Type="System.String" />
        <Parameter Name="replaceEntry" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="urlString">로드할 파일의 위치를 설명하는 URL(Uniform Resource Locator)입니다.</param>
        <param name="target">리소스를 열 창의 이름입니다. 개발자가 지정하는 이름이거나 다음과 같은 특수 값 중 하나일 수 있습니다. 
 <c>_blank</c>: 새 창에서 <paramref name="urlString" />을 엽니다. <see cref="M:System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)" />에 대한 호출과 동일하게 작동합니다.  
  
 <c>_media</c>: 미디어 표시줄에서 <paramref name="urlString" />을 엽니다.  
  
 <c>_parent</c>: 현재 창을 만든 창에서 <paramref name="urlString" />을 엽니다.  
  
 <c>_search</c>: 검색 창에서 <paramref name="urlString" />을 엽니다.  
  
 <c>_self</c>: 현재 창에서 <paramref name="urlString" />을 엽니다.  
  
 <c>_top</c>: <c>FRAME</c> 요소에 속한 창에 대해 호출된 경우 해당하는 <c>FRAMESET</c>을 호스팅하는 창에서 <paramref name="urlString" />을 엽니다. 그렇지 않으면 <c>_self</c>와 동일하게 동작합니다.</param>
        <param name="windowOptions"><c>name=value</c> 형식으로 된 0개 이상의 다음 옵션으로 이루어진 쉼표로 구분된 문자열입니다. 임의의 정수를 사용하는 <c>왼쪽</c>, <c>위쪽</c>, <c>높이</c> 및 <c>너비</c> 옵션을 제외하고 모든 옵션은 <c>예</c> 또는 <see langword="1" />, <c>아니요</c> 또는 <see langword="0" />을 유효한 값으로 허용합니다.  
  
 <c>channelmode</c>: Internet Explorer 4.0의 사용되지 않는 채널 기술과 함께 사용됩니다. 기본값은 <c>아니요</c>입니다.  
  
 <c>directories</c>: 창에서 디렉터리 탐색 단추를 표시해야 하는지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>height</c>: 창의 클라이언트 영역 높이(픽셀)입니다. 최소값은 100입니다. 이 값보다 작은 창을 열면 Internet Explorer의 기본값에 따라 창이 열립니다.  
  
 <c>left</c>: 사용자 화면의 왼쪽 위 모퉁이를 기준으로 한 창의 왼쪽(X 좌표) 위치(픽셀)입니다. 양의 정수여야 합니다.  
  
 <c>location</c>: 사용자가 창에서 새 URL을 탐색할 수 있도록 주소 표시줄을 표시할지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>menubar</c>: 새 창에 메뉴를 표시할지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>resizable</c>: 사용자가 창의 크기를 조정할 수 있는지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>scrollbars</c>: 창에 가로 및 세로 스크롤 막대가 있는지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>status</c>: 창의 아래쪽에 상태 표시줄이 있는지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>titlebar</c>: 현재 페이지의 제목이 표시되는지 여부입니다. 관리되는 애플리케이션에서는 이 옵션을 <c>아니요</c>로 설정해도 아무런 효과가 없습니다. 제목 표시줄이 항상 나타납니다.  
  
 <c>toolbar</c>: **뒤로**, **앞으로** 및 **중지**와 같은 도구 모음 단추가 표시되는지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>top</c>: 사용자 화면의 왼쪽 위 모퉁이를 기준으로 한 창의 위쪽(Y 좌표) 위치(픽셀)입니다. 양의 정수여야 합니다.  
  
 <c>width</c>: 창의 클라이언트 영역 너비(픽셀)입니다. 최소값은 100입니다. 이 값보다 작은 창을 열면 Internet Explorer의 기본값에 따라 창이 열립니다.</param>
        <param name="replaceEntry">탐색 기록에서 현재 창의 URL을 <paramref name="urlString" />로 바꿀지 여부입니다. 이 값은 <see cref="T:System.Windows.Forms.HtmlHistory" /> 클래스의 메서드 작업에 적용됩니다.</param>
        <summary>명명된 창에 파일을 표시합니다.</summary>
        <returns>새 창을 나타내는 <see cref="T:System.Windows.Forms.HtmlWindow" />이거나 <paramref name="target" /> 매개 변수에 의해 명명된 이전에 만든 창입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `target` 매개 변수 창에 대 한 이전 호출의 결과로 생성 된 이름을 지정할 수 <xref:System.Windows.Forms.HtmlWindow.Open%2A>입니다. 하이퍼링크를 클릭 하 여 연 창에 매개 변수를 가리킬 수도 있습니다 (`A` 요소) 또는 `FORM` 사용 하는 요소는 `TARGET` 특성을 새 창에서 해당 URL을 엽니다. 다음 HTML 코드 라는 새 창이 열립니다 `orderWindow` 클릭할 때 해당:  
  
 `<A HREF="/startOrder.aspx" TARGET="orderWindow">Click to Start Order</a>`  
  
 에 대 한 옵션을 제공 하는 경우는 `windowOptions` 매개 변수를 포함 되지 않은 모든 옵션을 자동으로 비활성화 됩니다. 즉,의 방식으로 지정 하는 경우 `windowOptions` 는 상태 표시줄을 사용자가 명시적으로 해당의 방식으로 사용 하지 않으면 메뉴 모음, 도구 모음, 제목, 스크롤 막대 및에 표시 되지 것입니다 `windowOptions`합니다.  
  
 파일에서 참조 하는 경우 `url` HTML 파일, 텍스트 파일 또는 Internet Explorer 내에서 호스팅될 수 있는 다른 파일 형식에는 명명된 된 창에 표시 됩니다. Internet Explorer 내에서 파일을 표시할 수 없습니다 및 대상에서 명명 된 창 없는 경우 창이 열려 서만 충분 한 시간 동안 리소스를 다운로드 하려면 Internet Explorer 즉시 닫힙니다 나중입니다.  
  
 사용 하 여 새 창을 만들 때 <xref:System.Windows.Forms.HtmlWindow.Open%2A> 또는 <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>, Internet Explorer의 새 인스턴스를 열려면 HTML 문서 개체 모델 발생 합니다. 호출 하지 않으면 <xref:System.Windows.Forms.HtmlWindow.Close%2A> 모든 사용자가 만든 windows에서 Internet Explorer의이 인스턴스 계속 실행 됩니다 응용 프로그램이 종료 된 후에 합니다.  
  
 사용 하는 경우 <xref:System.Windows.Forms.HtmlWindow.Open%2A> 기존 창에서 URL을 로드할 `windowOptions` 무시할지; 창 크기, 모양 및 처음 호출 하 여 화면 위치에 유지 됩니다 <xref:System.Windows.Forms.HtmlWindow.Open%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow Open (Uri url, string target, string windowOptions, bool replaceEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlWindow Open(class System.Uri url, string target, string windowOptions, bool replaceEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Open(System.Uri,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (url As Uri, target As String, windowOptions As String, replaceEntry As Boolean) As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlWindow ^ Open(Uri ^ url, System::String ^ target, System::String ^ windowOptions, bool replaceEntry);" />
      <MemberSignature Language="F#" Value="member this.Open : Uri * string * string * bool -&gt; System.Windows.Forms.HtmlWindow" Usage="htmlWindow.Open (url, target, windowOptions, replaceEntry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="windowOptions" Type="System.String" />
        <Parameter Name="replaceEntry" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url">로드할 파일의 위치를 설명하는 URL(Uniform Resource Locator)입니다.</param>
        <param name="target">리소스를 열 창의 이름입니다. 개발자가 지정하는 이름이거나 다음과 같은 특수 값 중 하나일 수 있습니다. 
 <c>_blank</c>: 새 창에서 <paramref name="url" />을 엽니다. <see cref="M:System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)" />에 대한 호출과 동일하게 작동합니다.  
  
 <c>_media</c>: 미디어 표시줄에서 <paramref name="url" />을 엽니다.  
  
 <c>_parent</c>: 현재 창을 만든 창에서 <paramref name="url" />을 엽니다.  
  
 <c>_search</c>: 검색 창에서 <paramref name="url" />을 엽니다.  
  
 <c>_self</c>: 현재 창에서 <paramref name="url" />을 엽니다.  
  
 <c>_top</c>: <c>FRAME</c> 요소에 속한 창에 대해 호출된 경우 해당하는 <c>FRAMESET</c>을 호스팅하는 창에서 <paramref name="url" />을 엽니다. 그렇지 않으면 <c>_self</c>와 동일하게 동작합니다.</param>
        <param name="windowOptions"><c>name=value</c> 형식으로 된 0개 이상의 다음 옵션으로 이루어진 쉼표로 구분된 문자열입니다. 임의의 정수를 사용하는 <c>왼쪽</c>, <c>위쪽</c>, <c>높이</c> 및 <c>너비</c> 옵션을 제외하고 모든 옵션은 <c>예</c> 또는 <see langword="1" />, <c>아니요</c> 또는 <see langword="0" />을 유효한 값으로 허용합니다.  
  
 <c>channelmode</c>: Internet Explorer 4.0의 사용되지 않는 채널 기술과 함께 사용됩니다. 기본값은 <c>아니요</c>입니다.  
  
 <c>directories</c>: 창에서 디렉터리 탐색 단추를 표시해야 하는지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>height</c>: 창의 클라이언트 영역 높이(픽셀)입니다. 최소값은 100입니다. 이 값보다 작은 창을 열면 Internet Explorer의 기본값에 따라 창이 열립니다.  
  
 <c>left</c>: 사용자 화면의 왼쪽 위 모퉁이를 기준으로 한 창의 왼쪽(X 좌표) 위치(픽셀)입니다. 양의 정수여야 합니다.  
  
 <c>location</c>: 사용자가 창에서 새 URL을 탐색할 수 있도록 주소 표시줄을 표시할지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>menubar</c>: 새 창에 메뉴를 표시할지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>resizable</c>: 사용자가 창의 크기를 조정할 수 있는지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>scrollbars</c>: 창에 가로 및 세로 스크롤 막대가 있는지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>status</c>: 창의 아래쪽에 상태 표시줄이 있는지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>titlebar</c>: 현재 페이지의 제목이 표시되는지 여부입니다. 관리되는 애플리케이션에서는 이 옵션을 <c>아니요</c>로 설정해도 아무런 효과가 없습니다. 제목 표시줄이 항상 나타납니다.  
  
 <c>toolbar</c>: **뒤로**, **앞으로** 및 **중지**와 같은 도구 모음 단추가 표시되는지 여부입니다. 기본값은 <c>예</c>입니다.  
  
 <c>top</c>: 사용자 화면의 왼쪽 위 모퉁이를 기준으로 한 창의 위쪽(Y 좌표) 위치(픽셀)입니다. 양의 정수여야 합니다.  
  
 <c>width</c>: 창의 클라이언트 영역 너비(픽셀)입니다. 최소값은 100입니다. 이 값보다 작은 창을 열면 Internet Explorer의 기본값에 따라 창이 열립니다.</param>
        <param name="replaceEntry">탐색 기록에서 현재 창의 URL을 <paramref name="url" />로 바꿀지 여부입니다. 이 값은 <see cref="T:System.Windows.Forms.HtmlHistory" /> 클래스의 메서드 작업에 적용됩니다.</param>
        <summary>명명된 창에 파일을 표시합니다.</summary>
        <returns>새 창을 나타내는 <see cref="T:System.Windows.Forms.HtmlWindow" />이거나 <paramref name="target" /> 매개 변수에 의해 명명된 이전에 만든 창입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `target` 매개 변수 창에 대 한 이전 호출의 결과로 생성 된 이름을 지정할 수 <xref:System.Windows.Forms.HtmlWindow.Open%2A>입니다. 하이퍼링크를 클릭 하 여 연 창에 매개 변수를 가리킬 수도 있습니다 (`A` 요소) 또는 `FORM` 사용 하는 요소는 `TARGET` 특성을 새 창에서 해당 URL을 엽니다. 다음 HTML 코드 라는 새 창이 열립니다 `orderWindow` 클릭할 때 해당:  
  
 `<A HREF="/startOrder.aspx" TARGET="orderWindow">Click to Start Order</a>`  
  
 에 대 한 옵션을 제공 하는 경우는 `windowOptions` 매개 변수를 포함 되지 않은 모든 옵션을 자동으로 비활성화 됩니다. 즉,의 방식으로 지정 하는 경우 `windowOptions` 는 상태 표시줄을 사용자가 명시적으로 해당의 방식으로 사용 하지 않으면 메뉴 모음, 도구 모음, 제목, 스크롤 막대 및에 표시 되지 것입니다 `windowOptions`합니다.  
  
 파일에서 참조 하는 경우 `url` HTML 파일, 텍스트 파일 또는 Internet Explorer 내에서 호스팅될 수 있는 다른 파일 형식에는 명명된 된 창에 표시 됩니다. Internet Explorer 내에서 파일을 표시할 수 없습니다 및 대상에서 명명 된 창 없는 경우 창이 열려 서만 충분 한 시간 동안 리소스를 다운로드 하려면 Internet Explorer 즉시 닫힙니다 나중입니다.  
  
 사용 하 여 새 창을 만들 때 <xref:System.Windows.Forms.HtmlWindow.Open%2A> 또는 <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>, Internet Explorer의 새 인스턴스를 열려면 HTML 문서 개체 모델 발생 합니다. 호출 하지 않으면 <xref:System.Windows.Forms.HtmlWindow.Close%2A> 모든 사용자가 만든 windows에서 Internet Explorer의이 인스턴스 계속 실행 됩니다 응용 프로그램이 종료 된 후에 합니다.  
  
 사용 하는 경우 <xref:System.Windows.Forms.HtmlWindow.Open%2A> 기존 창에서 URL을 로드할 `windowOptions` 무시할지; 창 크기, 모양 및 처음 호출 하 여 화면 위치에 유지 됩니다 <xref:System.Windows.Forms.HtmlWindow.Open%2A> 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 두 가지 메서드가 포함 되어 있습니다.  
  
-   첫 번째 라는 창에 URL을 엽니다 `displayWindow`를 표시 하는 상태 표시줄을 사용 하 여 만드는 것입니다.  
  
-   두 번째 동일한 창에서 다른 URL 열지만 위치 막대만 표시 되어야 함을 지정 합니다.  
  
 창 및 표시 되는 컨트롤의 크기를 URL은 처음 열리는 따라 결정을 확인 합니다. 코드 예제에서는 폼에는 <xref:System.Windows.Forms.WebBrowser> 라는 컨트롤 `WebBrowser1`합니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#13)]
 [!code-vb[System.Windows.Forms.HtmlWindow#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536651.aspx">Open 메서드</related>
      </Docs>
    </Member>
    <Member MemberName="Opener">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow Opener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlWindow Opener" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Opener" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Opener As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlWindow ^ Opener { System::Windows::Forms::HtmlWindow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Opener : System.Windows.Forms.HtmlWindow" Usage="System.Windows.Forms.HtmlWindow.Opener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 창을 연 창에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.HtmlWindow" /> 또는 <see cref="M:System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)" /> 메서드 호출로 만들어진 <see cref="M:System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)" />입니다. 창이 이러한 메서드 중 하나를 사용하여 만들어지지 않은 경우 이 속성은 <see langword="null" />을 반환합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenNew">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>새 창에 파일을 표시합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenNew">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow OpenNew (string urlString, string windowOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlWindow OpenNew(string urlString, string windowOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.OpenNew(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenNew (urlString As String, windowOptions As String) As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlWindow ^ OpenNew(System::String ^ urlString, System::String ^ windowOptions);" />
      <MemberSignature Language="F#" Value="member this.OpenNew : string * string -&gt; System.Windows.Forms.HtmlWindow" Usage="htmlWindow.OpenNew (urlString, windowOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="windowOptions" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">로드할 파일의 위치를 설명하는 URL(Uniform Resource Locator)입니다.</param>
        <param name="windowOptions"><c>name=value</c> 형식으로 된 0개 이상의 다음 옵션으로 이루어진 쉼표로 구분된 문자열입니다. 유효한 옵션에 대한 자세한 설명은 <see cref="M:System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)" />을 참조하십시오.</param>
        <summary>새 창에 파일을 표시합니다.</summary>
        <returns>새 창을 나타내는 <see cref="T:System.Windows.Forms.HtmlWindow" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파일에서 참조 하는 경우 `url` HTML 파일, 텍스트 파일 또는 Internet Explorer 내에서 호스팅될 수 있는 다른 파일 형식에는 새 창에 표시 됩니다. Internet Explorer 내에서 파일을 표시할 수 없습니다 경우 창이 열려 서만 충분 한 시간 동안 리소스를 다운로드 하려면 Internet Explorer 즉시 닫힙니다 나중입니다.  
  
 사용 하 여 새 창을 만들 때 <xref:System.Windows.Forms.HtmlWindow.Open%2A> 또는 <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>, Internet Explorer의 새 인스턴스를 열려면 HTML 문서 개체 모델 발생 합니다. 호출 하지 않으면 <xref:System.Windows.Forms.HtmlWindow.Close%2A> 모든 사용자가 만든 windows에서 Internet Explorer의이 인스턴스 계속 실행 됩니다 응용 프로그램이 종료 된 후에 합니다.  
  
 이전에 연된 창에 문서를 로드 하려는 경우 참조는 <xref:System.Windows.Forms.HtmlWindow.Open%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenNew">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow OpenNew (Uri url, string windowOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.HtmlWindow OpenNew(class System.Uri url, string windowOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.OpenNew(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenNew (url As Uri, windowOptions As String) As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::HtmlWindow ^ OpenNew(Uri ^ url, System::String ^ windowOptions);" />
      <MemberSignature Language="F#" Value="member this.OpenNew : Uri * string -&gt; System.Windows.Forms.HtmlWindow" Usage="htmlWindow.OpenNew (url, windowOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="windowOptions" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">로드할 파일의 위치를 설명하는 URL(Uniform Resource Locator)입니다.</param>
        <param name="windowOptions"><c>name=value</c> 형식으로 된 0개 이상의 다음 옵션으로 이루어진 쉼표로 구분된 문자열입니다. 유효한 옵션에 대한 자세한 설명은 <see cref="M:System.Windows.Forms.HtmlWindow.Open(System.String,System.String,System.String,System.Boolean)" />을 참조하십시오.</param>
        <summary>새 창에 파일을 표시합니다.</summary>
        <returns>새 창을 나타내는 <see cref="T:System.Windows.Forms.HtmlWindow" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파일에서 참조 하는 경우 `url` HTML 파일, 텍스트 파일 또는 Internet Explorer 내에서 호스팅될 수 있는 다른 파일 형식에는 새 창에 표시 됩니다. Internet Explorer 내에서 파일을 표시할 수 없습니다 경우 창이 열려 서만 충분 한 시간 동안 리소스를 다운로드 하려면 Internet Explorer 즉시 닫힙니다 나중입니다.  
  
 사용 하 여 새 창을 만들 때 <xref:System.Windows.Forms.HtmlWindow.Open%2A> 또는 <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A>, Internet Explorer의 새 인스턴스를 열려면 HTML 문서 개체 모델 발생 합니다. 호출 하지 않으면 <xref:System.Windows.Forms.HtmlWindow.Close%2A> 모든 사용자가 만든 windows에서 Internet Explorer의이 인스턴스 계속 실행 됩니다 응용 프로그램이 종료 된 후에 합니다.  
  
 이전에 연된 창에 문서를 로드 하려는 경우 참조는 <xref:System.Windows.Forms.HtmlWindow.Open%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536651.aspx">Open 메서드</related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlWindow Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlWindow Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As HtmlWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlWindow ^ Parent { System::Windows::Forms::HtmlWindow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.HtmlWindow" Usage="System.Windows.Forms.HtmlWindow.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프레임을 포함하는 페이지에서 현재 창 위에 있는 창을 가져옵니다.</summary>
        <value>현재 창을 소유하는 <see cref="T:System.Windows.Forms.HtmlWindow" />입니다. 현재 창에는 없는 경우는 <c>프레임</c>, 내에 포함 되어 있지 않으면를 <c>프레임</c>를 반환 합니다 <see langword="null" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 프레임을 포함 하는 문서의 각 `FRAME` 내는 `FRAMESET` 페이지에서 별도 자식 창으로 작동 합니다. 각 부모 `FRAME` 은 `FRAMESET` 포함 하는 `FRAME`합니다.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534326.aspx">부모 속성</related>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Position" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Position As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Position { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.Position : System.Drawing.Point" Usage="System.Windows.Forms.HtmlWindow.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>화면에서 창의 클라이언트 영역 위치를 가져옵니다.</summary>
        <value>화면의 왼쪽 위 모퉁이에 대한 X, Y 좌표를 설명하는 <see cref="T:System.Drawing.Point" />(픽셀)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.Location%2A> 의 속성을 <xref:System.Windows.Forms.WebBrowser> 컨트롤은 폼의 왼쪽 위 모퉁이 기준으로 컨트롤의 위치를 반환 합니다. 반면, <xref:System.Windows.Forms.HtmlWindow.Position%2A> 는 사용자의 모니터의 왼쪽 위 모퉁이 기준으로 문서 표시 영역의 위치를 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 통해 직접 새 창이 열립니다는 <xref:System.Windows.Forms.WebBrowser> 폼에서 컨트롤입니다. 코드 예제에서는 폼의 인스턴스를 포함 해야 합니다 <xref:System.Windows.Forms.WebBrowser> 라는 컨트롤 `WebBrowser1`합니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.HtmlWindow#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc06e61f-43b6-4408-a676-2542dcfcd96e">Windows Forms 좌표</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534389.aspx">screenLeft 속성</related>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534390.aspx">screenTop 속성</related>
      </Docs>
    </Member>
    <Member MemberName="Prompt">
      <MemberSignature Language="C#" Value="public string Prompt (string message, string defaultInputValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Prompt(string message, string defaultInputValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.Prompt(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prompt (message As String, defaultInputValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Prompt(System::String ^ message, System::String ^ defaultInputValue);" />
      <MemberSignature Language="F#" Value="member this.Prompt : string * string -&gt; string" Usage="htmlWindow.Prompt (message, defaultInputValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="defaultInputValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">사용자에게 표시할 메시지입니다.</param>
        <param name="defaultInputValue">텍스트 상자에 표시할 기본값입니다.</param>
        <summary>사용자에게 메시지와 텍스트 상자를 표시하는 대화 상자를 보여 줍니다.</summary>
        <returns>사용자가 입력한 텍스트를 나타내는 <see cref="T:System.String" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindow.Prompt%2A> 간단한 텍스트 입력 사용자 로부터 얻는 빠르고 쉬운 방법을 제공 합니다.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536673.aspx">프롬프트 메서드</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveFocus">
      <MemberSignature Language="C#" Value="public void RemoveFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.RemoveFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFocus();" />
      <MemberSignature Language="F#" Value="member this.RemoveFocus : unit -&gt; unit" Usage="htmlWindow.RemoveFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 창에서 포커스를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 될 때를 `FRAME` 창에는 `FRAMESET`, <xref:System.Windows.Forms.HtmlWindow.RemoveFocus%2A> 해당 창의 포커스를 손실 하면 되지만 다른 창에 포커스 자동으로 설정 되지 것입니다.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536347.aspx">메서드를 흐리게 표시</related>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Resize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Resize" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.Resize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Resize As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Resize;" />
      <MemberSignature Language="F#" Value="member this.Resize : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Resize : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 마우스를 사용하여 창의 크기를 변경할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.HtmlWindow.Resize> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.HtmlWindow> 라는 `HtmlWindow1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.HtmlWindow.Resize> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#455](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#455)]
 [!code-vb[System.Windows.Forms.EventExamples#455](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#455)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536959.aspx">onresize 이벤트</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResizeTo">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>창의 크기를 지정된 크기로 변경합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResizeTo">
      <MemberSignature Language="C#" Value="public void ResizeTo (System.Drawing.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResizeTo(valuetype System.Drawing.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.ResizeTo(System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResizeTo(System::Drawing::Size size);" />
      <MemberSignature Language="F#" Value="member this.ResizeTo : System.Drawing.Size -&gt; unit" Usage="htmlWindow.ResizeTo size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="size">원하는 창 너비 및 높이를 설명하는 <see cref="T:System.Drawing.Size" />(픽셀)입니다. 두 크기 모두 100픽셀 이상이어야 합니다.</param>
        <summary>창의 크기를 지정된 크기로 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 새 창 열리고을 사용할 수 있는 화면 영역을 채우도록 크기를 조정 합니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#15)]
 [!code-vb[System.Windows.Forms.HtmlWindow#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">크기 조정하려는 창이 부모 창과 다른 도메인에 있는 경우. 이 제한은 프레임 간 스크립팅 보안의 일부입니다. 자세한 내용은 [프레임 간 스크립팅 및 보안 정보](https://msdn.microsoft.com/library/ms533028.aspx)를 참조하세요.</exception>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536723.aspx">resizeTo 메서드</related>
      </Docs>
    </Member>
    <Member MemberName="ResizeTo">
      <MemberSignature Language="C#" Value="public void ResizeTo (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResizeTo(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.ResizeTo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResizeTo (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResizeTo(int width, int height);" />
      <MemberSignature Language="F#" Value="member this.ResizeTo : int * int -&gt; unit" Usage="htmlWindow.ResizeTo (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">원하는 창 너비(픽셀)를 설명합니다. 100픽셀 이상이어야 합니다.</param>
        <param name="height">원하는 창 높이(픽셀)를 설명합니다. 100픽셀 이상이어야 합니다.</param>
        <summary>창의 크기를 지정된 크기로 변경합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UnauthorizedAccessException">크기 조정하려는 창이 부모 창과 다른 도메인에 있는 경우. 이 제한은 프레임 간 스크립팅 보안의 일부입니다. 자세한 내용은 [프레임 간 스크립팅 및 보안 정보](https://msdn.microsoft.com/library/ms533028.aspx)를 참조하세요.</exception>
      </Docs>
    </Member>
    <Member MemberName="Scroll">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Scroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Scroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.Scroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Scroll As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Scroll;" />
      <MemberSignature Language="F#" Value="member this.Scroll : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Scroll : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 화면 밖의 텍스트를 보기 위해 창을 스크롤하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.HtmlWindow.Scroll> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.HtmlWindow> 라는 `HtmlWindow1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.HtmlWindow.Scroll> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#456](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#456)]
 [!code-vb[System.Windows.Forms.EventExamples#456](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#456)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536966.aspx">onscroll 이벤트</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScrollTo">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>창을 지정된 위치로 스크롤합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScrollTo">
      <MemberSignature Language="C#" Value="public void ScrollTo (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollTo(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.ScrollTo(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollTo(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.ScrollTo : System.Drawing.Point -&gt; unit" Usage="htmlWindow.ScrollTo point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">현재 창의 왼쪽 위 모퉁이를 기준으로 페이지를 스크롤할 X, Y 좌표입니다.</param>
        <summary>지정된 좌표로 창을 이동합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A> 문서 창의 왼쪽 위 모퉁이에 있는 문서에 지정된 된 좌표 이동 하는 문서를 발생 합니다. 문서가 없는 경우 길거나 발생이 넓게 <xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A> 지정된 된 방향으로 최대한 문서를 통해 스크롤됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자가 클릭 좌표 위치에 문서를 스크롤합니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#15)]
 [!code-vb[System.Windows.Forms.HtmlWindow#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536731.aspx">scrollTo 메서드</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollTo">
      <MemberSignature Language="C#" Value="public void ScrollTo (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollTo(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.HtmlWindow.ScrollTo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollTo (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollTo(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.ScrollTo : int * int -&gt; unit" Usage="htmlWindow.ScrollTo (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">현재 창의 왼쪽 위 모퉁이를 기준으로 페이지를 스크롤할 X 좌표입니다.</param>
        <param name="y">현재 창의 왼쪽 위 모퉁이를 기준으로 페이지를 스크롤할 Y 좌표입니다.</param>
        <summary>창을 지정된 위치로 스크롤합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A> 문서 창의 왼쪽 위 모퉁이에 있는 문서에 지정된 된 좌표 이동 하는 문서를 발생 합니다. 문서가 없는 경우 길거나 발생이 넓게 <xref:System.Windows.Forms.HtmlWindow.ScrollTo%2A> 지정된 된 방향으로 최대한 문서를 통해 스크롤됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.HtmlWindow.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 창의 크기를 가져오거나 설정합니다.</summary>
        <value>창 크기를 설명하는 <see cref="T:System.Drawing.Size" />(픽셀)입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBarText">
      <MemberSignature Language="C#" Value="public string StatusBarText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusBarText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.StatusBarText" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusBarText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StatusBarText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StatusBarText : string with get, set" Usage="System.Windows.Forms.HtmlWindow.StatusBarText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>창의 상태 표시줄에 표시되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>현재 상태 텍스트를 포함하는 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.WebBrowser> 컨트롤이 상태 표시줄을 표시 하지 않습니다. 그러나 모든 새 창으로 열리는 합니다 <xref:System.Windows.Forms.HtmlWindow.Open%2A> 또는 <xref:System.Windows.Forms.HtmlWindow.OpenNew%2A> 메서드는 상태 표시줄을 기본적으로 표시 합니다.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms534648.aspx">상태 속성</related>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HtmlElementEventHandler Unload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HtmlElementEventHandler Unload" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.HtmlWindow.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unload As HtmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HtmlElementEventHandler ^ Unload;" />
      <MemberSignature Language="F#" Value="member this.Unload : System.Windows.Forms.HtmlElementEventHandler " Usage="member this.Unload : System.Windows.Forms.HtmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 페이지를 언로드하고 있고 새 페이지를 표시하기 직전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.HtmlWindow.Unload> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.HtmlWindow> 라는 `HtmlWindow1`합니다. 연결 된 이벤트 처리기는 확인 된 <xref:System.Windows.Forms.HtmlWindow.Unload> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#457](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#457)]
 [!code-vb[System.Windows.Forms.EventExamples#457](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#457)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms536973.aspx">onunload 이벤트</related>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Windows.Forms.HtmlWindow.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>창에 표시된 현재 항목에 해당하는 URL을 가져옵니다.</summary>
        <value>URL을 설명하는 <see cref="T:System.Uri" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 읽기 전용입니다. 새 문서 창으로 이동 하려면 사용 된 <xref:System.Windows.Forms.HtmlWindow.Navigate%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowFrameElement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlElement WindowFrameElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlElement WindowFrameElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.HtmlWindow.WindowFrameElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowFrameElement As HtmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlElement ^ WindowFrameElement { System::Windows::Forms::HtmlElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowFrameElement : System.Windows.Forms.HtmlElement" Usage="System.Windows.Forms.HtmlWindow.WindowFrameElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 창에 해당하는 프레임 요소를 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.HtmlElement" /> 이 창에 해당 <c>프레임</c> 요소입니다. 이 창이 프레임이 아니면 <see langword="null" />을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 검색 하는 경우는 `FRAME` 요소를 <xref:System.Windows.Forms.HtmlWindow.Frames%2A> 반환 컬렉션은 <xref:System.Windows.Forms.HtmlWindow>합니다. 호출 <xref:System.Windows.Forms.HtmlWindow.WindowFrameElement%2A> 기본 특성에 액세스 해야 할 경우이 개체에 대해 `FRAME` 요소와 같은 `SRC` 특성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 비교 합니다 `SRC` 의 프레임 특성을 `FRAMESET` 현재 위치입니다. 다른 프레임을 원래 Url로 다시 설정 됩니다.  
  
 [!code-csharp[System.Windows.Forms.HtmlWindow#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.HtmlWindow#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlWindow/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.UnauthorizedAccessException">액세스할 수 없습니다는 <c>프레임</c> 요소 또는 <c>프레임</c>의 경우 문서를 <c>프레임</c> 보다 다른 영역에는 <c>프레임셋</c> 포함 하는 있습니다. 대 한 전체 설명은 [에 대 한 프레임 간 스크립팅 및 보안](https://msdn.microsoft.com/library/ms533028.aspx)합니다.</permission>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms533771.aspx">frameElement 속성</related>
      </Docs>
    </Member>
  </Members>
</Type>