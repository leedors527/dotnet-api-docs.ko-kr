<Type Name="IButtonControl" FullName="System.Windows.Forms.IButtonControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bcdc76fe16649dc02f64b2f4eba85f64e9fc7d3d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37511166" /></Metadata><TypeSignature Language="C#" Value="public interface IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IButtonControl" />
  <TypeSignature Language="F#" Value="type IButtonControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>컨트롤이 폼에서 단추처럼 동작할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스를 구현할 수 있습니다의 예에는 기본 및 취소 단추 처리입니다. 기본 단추에는 대화 상자를 닫은 것 처럼 폼에 대 한 처리 되지 않은 ENTER 키 입력 되 면 알림이 표시 됩니다. 마찬가지로, 취소 단추는 처리 되지 않은 ESC 키를 입력 폼에서 훨씬 대화 상자 해제와 같은 때마다 알림이 표시 됩니다.  
  
   
  
## Examples  
 다음 예제에서 상속 되는 <xref:System.Windows.Forms.ButtonBase> 클래스 및 구현을 <xref:System.Windows.Forms.IButtonControl> 인터페이스입니다. 구현에 추가 되는 <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> 속성 및 <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> 고 <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> 메서드.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>단추 컨트롤로 작동 하는 클래스에서이 인터페이스를 구현 합니다. 이 인터페이스의 멤버에서 제공 하는 등의 기본 단추 기능을 제공 하는 것을 <see cref="T:System.Windows.Forms.DialogResult" /> 부모 폼에 수행 하는 기능을 <see cref="E:System.Windows.Forms.Control.Click" /> 이벤트 또는 폼의 기본 단추로 작동 합니다.</para></block>
    <altmember cref="T:System.Windows.Forms.Button" />
    <altmember cref="T:System.Windows.Forms.Form" />
  </Docs>
  <Members>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : System.Windows.Forms.DialogResult with get, set" Usage="System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>단추를 클릭할 때 부모 폼에 반환되는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DialogResult" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 대화 상자는 폼이 표시 하는 경우는 <xref:System.Windows.Forms.Form.ShowDialog%2A> 메서드와 해당 단추 중 하나를 클릭 하면 단추의 <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> 양식의 값이 할당 <xref:System.Windows.Forms.Form.DialogResult%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서 상속 되는 <xref:System.Windows.Forms.ButtonBase> 클래스 및 구현을 <xref:System.Windows.Forms.IButtonControl> 인터페이스입니다. 구현에 추가 되는 <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> 속성 및 <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> 고 <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> 메서드.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
        <altmember cref="P:System.Windows.Forms.Form.CancelButton" />
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="NotifyDefault">
      <MemberSignature Language="C#" Value="public void NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyDefault (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyDefault(bool value);" />
      <MemberSignature Language="F#" Value="abstract member NotifyDefault : bool -&gt; unit" Usage="iButtonControl.NotifyDefault value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">컨트롤이 기본 단추로 동작해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>해당 모양과 동작이 적절하게 조정되도록 이 단추가 기본 단추임을 컨트롤에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 컨트롤을 만들려면 기본 단추 부모 폼에서 호출 됩니다. 기본 단추를 추가 굵은 테두리로 설정 됩니다.  
  
   
  
## Examples  
 다음 예제에서 상속 되는 <xref:System.Windows.Forms.ButtonBase> 클래스 및 구현을 <xref:System.Windows.Forms.IButtonControl> 인터페이스입니다. 구현에 추가 되는 <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> 속성 및 <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> 고 <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> 메서드.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IButtonControl.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberSignature Language="F#" Value="abstract member PerformClick : unit -&gt; unit" Usage="iButtonControl.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤에 대해 <see cref="E:System.Windows.Forms.Control.Click" /> 이벤트를 생성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 기본 단추 또는 포커스가 있는 단추에 대 한 (단추가 없는 포커스를 가진) 하는 경우 사용자가 ENTER 키를 누를 때. 이 메서드는 사용자가 단추를 취소 단추로 설정 된 경우 ESC 키를 누를 때에 호출 됩니다.  
  
   
  
## Examples  
 다음 예제에서 상속 되는 <xref:System.Windows.Forms.ButtonBase> 클래스 및 구현을 <xref:System.Windows.Forms.IButtonControl> 인터페이스입니다. 구현에 추가 되는 <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> 속성 및 <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> 고 <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> 메서드.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
  </Members>
</Type>