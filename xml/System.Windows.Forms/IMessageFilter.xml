<Type Name="IMessageFilter" FullName="System.Windows.Forms.IMessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="950814523017bf4bad1813ba90130de55d5c3a49" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39979117" /></Metadata><TypeSignature Language="C#" Value="public interface IMessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMessageFilter" />
  <TypeSignature Language="F#" Value="type IMessageFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>메시지 필터 인터페이스를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스는 메시지를 캡처하는 컨트롤 또는 폼에 디스패치 되기 전에 애플리케이션을 허용 합니다.  
  
 구현 하는 클래스는 <xref:System.Windows.Forms.IMessageFilter> 인터페이스 메시지를 필터링 하거나 폼 또는 컨트롤에 메시지가 디스패치 되기 전에 다른 작업을 수행 하는 애플리케이션의 메시지 펌프에 추가할 수 있습니다. 애플리케이션의 메시지 펌프에 메시지 필터를 추가 하려면 사용 합니다 <xref:System.Windows.Forms.Application.AddMessageFilter%2A> 에서 메서드를 <xref:System.Windows.Forms.Application> 클래스.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.IMessageFilter" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" />
  </Docs>
  <Members>
    <Member MemberName="PreFilterMessage">
      <MemberSignature Language="C#" Value="public bool PreFilterMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PreFilterMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreFilterMessage (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool PreFilterMessage(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterMessage :  -&gt; bool" Usage="iMessageFilter.PreFilterMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">디스패치될 메시지입니다. 이 메시지는 수정할 수 없습니다.</param>
        <summary>메시지가 디스패치되기 전에 필터링합니다.</summary>
        <returns>메시지를 필터링하고 디스패치되지 않게 하려면 <see langword="true" />이고 다음 필터 또는 컨트롤에 계속 사용하려면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> 컨트롤 또는 폼에 디스패치 되기 전에 메시지를 필터링 합니다. 예를 들어, 중지 하려면를 <xref:System.Windows.Forms.Control.Click> 의 이벤트를 <xref:System.Windows.Forms.Button> 컨트롤 구현 하는 컨트롤에 디스패치되 지 않게를 <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> 메서드와 반환을 `true` 경우이 값는 <xref:System.Windows.Forms.Control.Click> 메시지가 발생 합니다. 또한 메시지가 디스패치 되기 전에 수행 해야 할 수 있는 코드 작업을 수행 하려면이 메서드를 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">필요한 <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> 링크 타임에는 권한입니다.</permission>
      </Docs>
    </Member>
  </Members>
</Type>