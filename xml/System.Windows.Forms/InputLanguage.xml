<Type Name="InputLanguage" FullName="System.Windows.Forms.InputLanguage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f9d31b88cb48a1da698f32be9db2275150e5945" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="40000121" /></Metadata><TypeSignature Language="C#" Value="public sealed class InputLanguage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InputLanguage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.InputLanguage" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InputLanguage" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputLanguage sealed" />
  <TypeSignature Language="F#" Value="type InputLanguage = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>입력 언어를 관리하기 위한 메서드와 필드를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 입력된 언어는 어떻게 키보드의 물리적 키에 매핑되거나 언어의 문자를 결정 하는 문화권/키보드 레이아웃 쌍입니다. 입력된 언어는 Platform SDK 함수에서 반환 하는 것과 같은 Windows 입력된 로캘 식별자를 기반으로 `GetKeyboardLayout`입니다. 입력된 로캘 식별자는 키보드 레이아웃 (HKL) 값에 대 한 핸들을 라고도 합니다.  
  
 사용 된 `static` 시스템 및 스레드 또는 프로세스에 대 한 입력된 언어를 변경 하려면 설치 된 모든 찾기 매핑을 제공 하는 메서드. 호출 <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> 가져올 현재 입력 언어입니다. 호출 <xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A> 기본 입력된 언어에 대 한 합니다. 호출 <xref:System.Windows.Forms.InputLanguage.InstalledInputLanguages%2A> 이 시스템에 설치 된 모든 언어를 가져오려고 합니다. 사용 하 여 설치 된 모든 언어 목록을 만들면 <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> 현재 변경 하려면 다른 언어로 언어를 입력 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 설치 된 언어의 목록을 가져옵니다. 예제에는 필요 `textBox1` 인스턴스화된 올바르고 `textBox1.MultiLine` 로 설정 된 `true`합니다.  
  
 [!code-cpp[Classic InputLanguage Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic InputLanguage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic InputLanguage Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic InputLanguage Example/CS/source.cs#1)]
 [!code-vb[Classic InputLanguage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic InputLanguage Example/VB/source.vb#1)]  
  
 다음 예제에서는 현재 입력된 언어와 기본 입력된 언어를 설정합니다. 예제에는 필요 `textBox1` 인스턴스화된 올바르고 `textBox1.MultiLine` 로 설정 된 `true`합니다.  
  
 [!code-cpp[Classic InputLanguage Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic InputLanguage Example/CPP/source.cpp#2)]
 [!code-csharp[Classic InputLanguage Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic InputLanguage Example/CS/source.cs#2)]
 [!code-vb[Classic InputLanguage Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic InputLanguage Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguage.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.Windows.Forms.InputLanguage.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 입력 언어의 culture를 가져옵니다.</summary>
        <value>현재 입력 언어의 culture를 나타내는 <see cref="T:System.Globalization.CultureInfo" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.InputLanguage> 현재 입력된 언어에 대 한 합니다. 이 입력란 표시 언어 및 입력된 언어의 이름을 입력 합니다.  
  
 이 코드는 가정 `textBox1` 을 인스턴스화해야 합니다.  
  
 [!code-cpp[Classic InputLanguage.Culture Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic InputLanguage.Culture Example/CPP/source.cpp#1)]
 [!code-csharp[Classic InputLanguage.Culture Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic InputLanguage.Culture Example/CS/source.cs#1)]
 [!code-vb[Classic InputLanguage.Culture Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic InputLanguage.Culture Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Windows.Forms.InputLanguage.InstalledInputLanguages" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInputLanguage">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.InputLanguage CurrentInputLanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.InputLanguage CurrentInputLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguage.CurrentInputLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentInputLanguage As InputLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::InputLanguage ^ CurrentInputLanguage { System::Windows::Forms::InputLanguage ^ get(); void set(System::Windows::Forms::InputLanguage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInputLanguage : System.Windows.Forms.InputLanguage with get, set" Usage="System.Windows.Forms.InputLanguage.CurrentInputLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 스레드의 입력 언어를 가져오거나 설정합니다.</summary>
        <value>현재 스레드의 입력 언어를 나타내는 <see cref="T:System.Windows.Forms.InputLanguage" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 가져오고 현재 입력된 언어의 이름을 표시 합니다. 이 코드는 가정 `textBox1` 을 인스턴스화해야 합니다.  
  
 [!code-cpp[Classic InputLanguage.CurrentInputLanguage Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic InputLanguage.CurrentInputLanguage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic InputLanguage.CurrentInputLanguage Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic InputLanguage.CurrentInputLanguage Example/CS/source.cs#1)]
 [!code-vb[Classic InputLanguage.CurrentInputLanguage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic InputLanguage.CurrentInputLanguage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">입력 언어는 시스템에서 인식되지 않습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드에 액세스 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="P:System.Windows.Forms.InputLanguage.DefaultInputLanguage" />
      </Docs>
    </Member>
    <Member MemberName="DefaultInputLanguage">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.InputLanguage DefaultInputLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.InputLanguage DefaultInputLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguage.DefaultInputLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultInputLanguage As InputLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::InputLanguage ^ DefaultInputLanguage { System::Windows::Forms::InputLanguage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInputLanguage : System.Windows.Forms.InputLanguage" Usage="System.Windows.Forms.InputLanguage.DefaultInputLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시스템의 기본 입력 언어를 가져옵니다.</summary>
        <value>시스템의 기본 입력 언어를 나타내는 <see cref="T:System.Windows.Forms.InputLanguage" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 기본 입력된 언어를 가져오고 텍스트 상자에 해당 이름을 출력 합니다. 이 코드는 가정 `textBox1` 을 인스턴스화해야 합니다.  
  
 [!code-cpp[Classic InputLanguage.DefaultInputLanguage Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic InputLanguage.DefaultInputLanguage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic InputLanguage.DefaultInputLanguage Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic InputLanguage.DefaultInputLanguage Example/CS/source.cs#1)]
 [!code-vb[Classic InputLanguage.DefaultInputLanguage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic InputLanguage.DefaultInputLanguage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.InputLanguage.CurrentInputLanguage" />
        <altmember cref="M:System.Windows.Forms.InputLanguage.Equals(System.Object)" />
        <altmember cref="P:System.Windows.Forms.InputLanguage.LayoutName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguage.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="inputLanguage.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">일치하는지 테스트할 언어입니다.</param>
        <summary>두 입력 언어가 동일한지 여부를 지정합니다.</summary>
        <returns>두 언어가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCulture">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.InputLanguage FromCulture (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.InputLanguage FromCulture(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguage.FromCulture(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromCulture (culture As CultureInfo) As InputLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::InputLanguage ^ FromCulture(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member FromCulture : System.Globalization.CultureInfo -&gt; System.Windows.Forms.InputLanguage" Usage="System.Windows.Forms.InputLanguage.FromCulture culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">변환할 culture를 지정하는 <see cref="T:System.Globalization.CultureInfo" />입니다.</param>
        <summary>지정한 culture와 연관된 입력 언어를 반환합니다.</summary>
        <returns>이전에 선택된 입력 언어를 나타내는 <see cref="T:System.Windows.Forms.InputLanguage" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.InputLanguage.FromCulture%2A> 메서드 설치 키보드 중에서 선택 합니다. 특히,이 메서드는 다음 작업을 수행합니다.  
  
1.  연결 된 LCID 가져옵니다 `culture`합니다.  
  
2.  사용 가능한 입력된 언어 식별자 (Hkl)의 전체 목록을 가져옵니다는 `GetKeyboardLayoutList` 함수입니다.  
  
3.  LCID에 해당 하는 HKL 찾습니다 `culture`없는 경우.  
  
4.  연결 된 해당 HKL 설치 키보드를 반환 합니다.  
  
5.  키보드가 있으면 반환 `null`합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Windows.Forms.InputLanguage.FromCulture%2A> 메서드를 로드 하거나 하나 설치 되지 않은 경우 이미 되었는지에 대 한 추가 키보드 설치 시도 하지 `culture`합니다. Platform SDK 함수를 사용 하 여 `LoadKeyboardLayout`추가 키보드를 설치 하려면.  
  
   
  
## Examples  
 다음 코드 예제에서는 현재 입력된 언어와 기본 입력된 언어를 설정합니다.  
  
 첫째, <xref:System.Windows.Forms.InputLanguage.DefaultInputLanguage%2A> 시스템 기본 언어를 가져오기 위해 호출 됩니다. 그런 다음 <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> 현재 입력된 언어를 가져오기 위해 호출 됩니다. 결과 텍스트 상자에 출력 됩니다. 그런 다음 호출 <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> 기본 입력된 언어 기본값으로 현재 입력된 언어를 변경 합니다. 새로운 현재 입력된 언어를 텍스트 상자에 표시 됩니다.  
  
 이 코드는 가정 `textBox1` 을 인스턴스화해야 합니다.  
  
 [!code-cpp[Classic InputLanguage.FromCulture Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic InputLanguage.FromCulture Example/CPP/source.cpp#1)]
 [!code-csharp[Classic InputLanguage.FromCulture Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic InputLanguage.FromCulture Example/CS/source.cs#1)]
 [!code-vb[Classic InputLanguage.FromCulture Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic InputLanguage.FromCulture Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.InputLanguage.DefaultInputLanguage" />
        <altmember cref="P:System.Windows.Forms.InputLanguage.CurrentInputLanguage" />
        <altmember cref="M:System.Windows.Forms.InputLanguage.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguage.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="inputLanguage.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>해당 입력 언어의 해시 코드를 반환합니다.</summary>
        <returns>이 입력 언어의 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguage.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.InputLanguage.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>입력 언어에 대한 핸들을 가져옵니다.</summary>
        <value>이 입력 언어의 핸들을 나타내는 <see cref="T:System.IntPtr" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 현재 입력된 언어를 가져옵니다. 호출 후 <xref:System.Windows.Forms.InputLanguage.Handle%2A> 텍스트 상자에 핸들 및 출력 결과 가져올 수 있습니다. 이 예제에서는 `textBox1` 을 인스턴스화해야 합니다.  
  
 [!code-cpp[Classic InputLanguage.Handle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic InputLanguage.Handle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic InputLanguage.Handle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic InputLanguage.Handle Example/CS/source.cs#1)]
 [!code-vb[Classic InputLanguage.Handle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic InputLanguage.Handle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.InputLanguage.CurrentInputLanguage" />
      </Docs>
    </Member>
    <Member MemberName="InstalledInputLanguages">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.InputLanguageCollection InstalledInputLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.InputLanguageCollection InstalledInputLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguage.InstalledInputLanguages" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InstalledInputLanguages As InputLanguageCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::InputLanguageCollection ^ InstalledInputLanguages { System::Windows::Forms::InputLanguageCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstalledInputLanguages : System.Windows.Forms.InputLanguageCollection" Usage="System.Windows.Forms.InputLanguage.InstalledInputLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>설치된 모든 입력 언어의 목록을 가져옵니다.</summary>
        <value>컴퓨터에 설치된 입력 언어를 나타내는 <see cref="T:System.Windows.Forms.InputLanguage" /> 개체의 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 컴퓨터에 설치 된 모든 입력된 언어를 검색 하 고 해당 이름을 표시 합니다. 코드를 호출 하 여 <xref:System.Windows.Forms.InputLanguage.InstalledInputLanguages%2A> 설치 된 언어를 가져오려고 합니다. 텍스트 상자에는 언어 이름 목록을 표시합니다.  
  
 이 있다고 가정 `textBox1` 인스턴스화된 올바르고 `textBox1.MultiLine` 로 설정 된 `true`합니다.  
  
 [!code-cpp[Classic InputLanguage.InstalledInputLanguages Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic InputLanguage.InstalledInputLanguages Example/CPP/source.cpp#1)]
 [!code-csharp[Classic InputLanguage.InstalledInputLanguages Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic InputLanguage.InstalledInputLanguages Example/CS/source.cs#1)]
 [!code-vb[Classic InputLanguage.InstalledInputLanguages Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic InputLanguage.InstalledInputLanguages Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.InputLanguage.LayoutName" />
      </Docs>
    </Member>
    <Member MemberName="LayoutName">
      <MemberSignature Language="C#" Value="public string LayoutName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LayoutName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguage.LayoutName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LayoutName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LayoutName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LayoutName : string" Usage="System.Windows.Forms.InputLanguage.LayoutName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컴퓨터에 설치된 운영 체제의 국가별 설정에 나타나는 대로 현재 키보드 레이아웃의 이름을 가져옵니다.</summary>
        <value>레이아웃의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 현재 입력된 언어를 사용 하 여 연결 된 문화권 가져오고 문화권 이름을 표시 합니다.  
  
 첫째, <xref:System.Windows.Forms.InputLanguage.CurrentInputLanguage%2A> 현재 입력된 언어를 가져오기 위해 호출 됩니다. 그런 다음 <xref:System.Windows.Forms.InputLanguage.Culture%2A> 이 입력 언어에 대 한 문화권 정보를 가져오기 위해 호출 됩니다. 마지막으로, <xref:System.Globalization.CultureInfo.EnglishName%2A> 를 검색 하 고 텍스트 상자에 표시 합니다.  
  
 [!code-cpp[Classic InputLanguage.LayoutName Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic InputLanguage.LayoutName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic InputLanguage.LayoutName Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic InputLanguage.LayoutName Example/CS/source.cs#1)]
 [!code-vb[Classic InputLanguage.LayoutName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic InputLanguage.LayoutName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.InputLanguage.CurrentInputLanguage" />
      </Docs>
    </Member>
  </Members>
</Type>