<Type Name="LinkLabel+LinkCollection" FullName="System.Windows.Forms.LinkLabel+LinkCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97fb3a121a2398a3fb129efb6458f6dcff4ff703" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57925450" /></Metadata><TypeSignature Language="C#" Value="public class LinkLabel.LinkCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit LinkLabel/LinkCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkLabel.LinkCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkLabel.LinkCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class LinkLabel::LinkCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type LinkLabel.LinkCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.Windows.Forms.LinkLabel" /> 컨트롤 안에 있는 링크의 컬렉션을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 클래스에 표시 된 링크를 저장 합니다 <xref:System.Windows.Forms.LinkLabel> 컨트롤입니다. 컬렉션의 각 항목은의 인스턴스는 <xref:System.Windows.Forms.LinkLabel.Link> 링크의 정보를 정의 하는 클래스입니다.  
  
 합니다 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> 메서드는 단일을 추가 하는 기능을 제공 <xref:System.Windows.Forms.LinkLabel.Link> 컬렉션에 있습니다. 링크를 제거 하려면 사용할 수 있습니다 합니다 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> 메서드 또는 <xref:System.Windows.Forms.LinkLabel.LinkCollection.RemoveAt%2A> 메서드 컬렉션 내에 링크 되는 것이 알고 있는 경우. 합니다 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Clear%2A> 메서드를 사용 하면 모든 링크를 사용 하는 대신 컬렉션에서 제거 하려면를 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> 메서드를 한 번에 하나의 링크를 제거 합니다.  
  
 메서드 및 속성을 추가 하 고 항목을 제거 하는 것 외에도 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 도 컬렉션 내에서 링크를 찾는 메서드를 제공 합니다. <xref:System.Windows.Forms.LinkLabel.LinkCollection.Contains%2A> 메서드를 사용 하면 확인할 수 있습니다 여부는 <xref:System.Windows.Forms.LinkLabel.Link> 컬렉션의 멤버인 합니다. 연결이 컬렉션에 위치를 알고 사용할 수는 <xref:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf%2A> 링크의 컬렉션 내 위치를 확인 하는 방법입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkCollection (System.Windows.Forms.LinkLabel owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.LinkLabel owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.#ctor(System.Windows.Forms.LinkLabel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As LinkLabel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkCollection(System::Windows::Forms::LinkLabel ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LinkLabel.LinkCollection : System.Windows.Forms.LinkLabel -&gt; System.Windows.Forms.LinkLabel.LinkCollection" Usage="new System.Windows.Forms.LinkLabel.LinkCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.LinkLabel" />
      </Parameters>
      <Docs>
        <param name="owner">컬렉션을 소유하는 <see cref="T:System.Windows.Forms.LinkLabel" /> 컨트롤입니다.</param>
        <summary><see cref="T:System.Windows.Forms.LinkLabel.LinkCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스의 인스턴스를 사용 하 여 연결 하지 않고 만들 수 없습니다는 <xref:System.Windows.Forms.LinkLabel> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컬렉션에 링크를 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.LinkLabel.Link value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.LinkLabel/Link value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.Add(System.Windows.Forms.LinkLabel.Link)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As LinkLabel.Link) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::LinkLabel::Link ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.LinkLabel.Link -&gt; int" Usage="linkCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.LinkLabel+Link" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value">추가할 링크를 나타내는 <see cref="T:System.Windows.Forms.LinkLabel.Link" />입니다.</param>
        <summary>지정된 값을 가진 링크를 컬렉션에 추가합니다.</summary>
        <returns><paramref name="value" /> 매개 변수에 지정된 링크의 위치를 나타내는 컬렉션 내의 인덱스(0부터 시작)입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkLabel.Link Add (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.LinkLabel/Link Add(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.Add(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (start As Integer, length As Integer) As LinkLabel.Link" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::LinkLabel::Link ^ Add(int start, int length);" />
      <MemberSignature Language="F#" Value="member this.Add : int * int -&gt; System.Windows.Forms.LinkLabel.Link" Usage="linkCollection.Add (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+Link</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">링크가 만들어진 레이블의 텍스트에 있는 시작 문자입니다.</param>
        <param name="length">링크 텍스트에 포함할 시작 문자 다음의 문자 수입니다.</param>
        <summary>컬렉션에 링크를 추가합니다.</summary>
        <returns>만든 후 컬렉션에 추가한 링크를 나타내는 <see cref="T:System.Windows.Forms.LinkLabel.Link" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.LinkLabel> 컨트롤에서 컨트롤의 텍스트 내에서 여러 개의 링크를 표시할 수 있습니다. <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> 메서드 내에서 텍스트 변환 하면를 <xref:System.Windows.Forms.LinkLabel> 유사한 작업을 수행 하는 사용자가 클릭할 수 있는 링크에는 컨트롤을 <xref:System.Windows.Forms.Button> 컨트롤입니다. 이 메서드를 추가 하기 위해 만들어지는 링크는 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 에 대 한는 <xref:System.Windows.Forms.LinkLabel>합니다. 예를 들어, 레이블 텍스트를 "The quick brown fox", "빠른" 라는 단어를 설정 하려는 경우이 메서드를 호출 하면이 `start` 매개 변수 값으로 설정 4 (4) 및 `length` 매개 변수를 5 (5). 단어 "빠른"으로 변경 하는 링크 및 링크는 컬렉션에 추가 됩니다. 표시 하거나 링크를 클릭할 때 열려는 파일 URL과 같은 링크를 사용 하 여 정보를 연결 하려는 경우 다른 버전의 사용을 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> 메서드.  
  
> [!NOTE]
>  두 링크는 동일한 텍스트를 공유할 수 없습니다. 다른 링크에서 이미 사용 되는 텍스트를 사용 하는 링크를 만드는 경우 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 설정 합니다 <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> 사용 하 여 속성을 <xref:System.Windows.Forms.LinkBehavior> 열거형입니다. 설정 하는 방법도 보여 줍니다 합니다 <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.Text%2A> 및 <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A> 속성과에 항목을 추가 <xref:System.Windows.Forms.LinkLabel.LinkCollection>합니다. 이 예제를 실행 하려면 호출을 빈 폼에 붙여 `InitializeLinkLabel` 폼의 생성자에서 또는 `Load` 메서드.  
  
 [!code-cpp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkLabel.Link Add (int start, int length, object linkData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.LinkLabel/Link Add(int32 start, int32 length, object linkData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.Add(System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (start As Integer, length As Integer, linkData As Object) As LinkLabel.Link" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::LinkLabel::Link ^ Add(int start, int length, System::Object ^ linkData);" />
      <MemberSignature Language="F#" Value="member this.Add : int * int * obj -&gt; System.Windows.Forms.LinkLabel.Link" Usage="linkCollection.Add (start, length, linkData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+Link</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="linkData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="start">링크가 만들어진 레이블의 텍스트에 있는 시작 문자입니다.</param>
        <param name="length">링크 텍스트에 포함할 시작 문자 다음의 문자 수입니다.</param>
        <param name="linkData">링크와 연결할 정보가 들어 있는 개체입니다.</param>
        <summary>링크와 링크에 연결할 정보를 컬렉션에 추가합니다.</summary>
        <returns>만든 후 컬렉션에 추가한 링크를 나타내는 <see cref="T:System.Windows.Forms.LinkLabel.Link" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.LinkLabel> 컨트롤에서 컨트롤의 텍스트 내에서 여러 개의 링크를 표시할 수 있습니다. <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> 메서드 내에서 텍스트 변환 하면를 <xref:System.Windows.Forms.LinkLabel> 유사한 작업을 수행 하는 사용자가 클릭할 수 있는 링크에는 컨트롤을 <xref:System.Windows.Forms.Button> 컨트롤입니다. 이 메서드를 추가 하기 위해 만들어지는 링크는 <xref:System.Windows.Forms.LinkLabel.LinkCollection> 에 대 한는 <xref:System.Windows.Forms.LinkLabel>합니다. 예를 들어, 레이블 텍스트를 "The quick brown fox", "빠른" 라는 단어를 설정 하려는 경우이 메서드를 호출 하면이 `start` 매개 변수 값으로 설정 4 (4) 및 `length` 매개 변수를 5 (5). 단어 "빠른"으로 변경 하는 링크 및 링크는 컬렉션에 추가 됩니다. 이 버전의 추가 메서드를 사용 하면 통해 링크와 연결 될 수 있는 추가 정보를 제공 하는 `linkData` 매개 변수입니다. 예를 들어, 전달할 수 있습니다는 <xref:System.String> 에 `linkData` 링크를 클릭할 때 표시에 대 한 URL을 포함 하는 매개 변수입니다. 이 정보에 대 한 처리기에서 사용할 수 있습니다는 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 의 이벤트는 <xref:System.Windows.Forms.LinkLabel> Microsoft Internet Explorer의 URL을 표시 하는 컨트롤입니다.  
  
> [!NOTE]
>  두 링크는 동일한 텍스트를 공유할 수 없습니다. 다른 링크에서 이미 사용 되는 텍스트를 사용 하는 링크를 만드는 경우 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.LinkLabel> 링크를 표시 하 고 컨트롤의 텍스트에 정의 된 링크를 클릭 하면 기본 브라우저에서 Microsoft 웹 사이트를 표시 하는 컨트롤입니다. 초기화 하는 메서드를 정의 하는 예제는 <xref:System.Windows.Forms.LinkLabel> 처리 하는 메서드 및 제어를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 컨트롤의 이벤트입니다. 이벤트 처리기를 <xref:System.Windows.Forms.LinkLabel.LinkClicked> 이벤트를 사용 하 여는 <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> 의 속성은 <xref:System.Windows.Forms.LinkLabel.Link> 기본 브라우저에서 표시할 URL을 확인 하려면 클래스. 이 예제에서는 내에 있는 것을 <xref:System.Windows.Forms.Form> 클래스입니다.  
  
 [!code-cpp[LinkLabel Overview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LinkLabel Overview/CPP/linklabelex.cpp#1)]
 [!code-csharp[LinkLabel Overview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LinkLabel Overview/CS/linklabelex.cs#1)]
 [!code-vb[LinkLabel Overview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LinkLabel Overview/VB/linklabelex.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="linkCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컬렉션에서 링크를 모두 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컬렉션에서 링크를 제거 하면 제거 링크에 대 한 모든 정보가 삭제 됩니다. 단일 링크를 제거 하는 <xref:System.Windows.Forms.LinkLabel>를 사용 하 여는 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> 또는 <xref:System.Windows.Forms.LinkLabel.LinkCollection.RemoveAt%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.Remove(System.Windows.Forms.LinkLabel.Link)" />
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.LinkLabel.Link link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.LinkLabel/Link link) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.Contains(System.Windows.Forms.LinkLabel.Link)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::LinkLabel::Link ^ link);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.LinkLabel.Link -&gt; bool" Usage="linkCollection.Contains link" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="System.Windows.Forms.LinkLabel+Link" />
      </Parameters>
      <Docs>
        <param name="link">컬렉션에서 검색할 링크를 나타내는 <see cref="T:System.Windows.Forms.LinkLabel.Link" />입니다.</param>
        <summary>지정된 링크가 컬렉션에 있는지 여부를 확인합니다.</summary>
        <returns>지정된 링크가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Contains%2A> 메서드를 사용 하면 확인할 수 있습니다 여부는 <xref:System.Windows.Forms.LinkLabel.Link> 컬렉션의 멤버인 합니다. 연결이 컬렉션에 위치를 알고 사용할 수는 <xref:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf%2A> 링크의 컬렉션 내 위치를 확인 하는 방법입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf(System.Windows.Forms.LinkLabel.Link)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="linkCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">컬렉션에서 검색할 링크입니다.</param>
        <summary>컬렉션에 지정된 키를 가진 링크가 있는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns>지정된 키를 가진 항목이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.LinkLabel.Link.Name%2A> 키에 해당 하는 속성을 <xref:System.Windows.Forms.LinkLabel.Link> 에 <xref:System.Windows.Forms.LinkLabel.LinkCollection>합니다. 키 비교는 대/소문자 구분 하지 않습니다. 경우는 `key` 매개 변수가 `null` 이거나 빈 문자열인 경우 <xref:System.Windows.Forms.LinkLabel.LinkCollection.ContainsKey%2A> 반환 `false`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.LinkLabel.LinkCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션의 링크 수를 가져옵니다.</summary>
        <value>컬렉션의 링크 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하면 링크의 수를 확인 하는 <xref:System.Windows.Forms.LinkLabel> 제어 합니다. 그런 다음 컬렉션의 값을 반복 하 고 루프를 수행 하는 반복 횟수를 제공 해야 하는 경우이 값을 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="linkCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>열거자를 반환하여 링크 컬렉션을 반복하는 데 사용합니다.</summary>
        <returns>링크 컬렉션을 나타내는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.LinkLabel.Link link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.LinkLabel/Link link) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf(System.Windows.Forms.LinkLabel.Link)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::LinkLabel::Link ^ link);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.LinkLabel.Link -&gt; int" Usage="linkCollection.IndexOf link" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="System.Windows.Forms.LinkLabel+Link" />
      </Parameters>
      <Docs>
        <param name="link">컬렉션에서 검색할 링크를 나타내는 <see cref="T:System.Windows.Forms.LinkLabel.Link" />입니다.</param>
        <summary>컬렉션 안에 있는 지정된 링크의 인덱스를 반환합니다.</summary>
        <returns>컬렉션에 들어 있는 링크에 해당하는 인덱스(0부터 시작)이거나, -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf%2A> 메서드를 사용 하면 링크의 컬렉션 내 위치를 확인할 수 있습니다. 링크는이 메서드를 호출 하기 전에 컬렉션에 들어 있는 경우를 확인 하려면 사용 된 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Contains%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 합니다 <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> 사용 하 여 속성을 <xref:System.Windows.Forms.LinkBehavior> 열거형. 설정 하는 방법도 보여 줍니다 합니다 <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.Text%2A> 및 <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A> 속성 추가 및 링크에 액세스 하는 <xref:System.Windows.Forms.LinkLabel.LinkCollection>합니다. 이 예제를 실행 하려면 호출을 빈 폼에 붙여 `InitializeLinkLabel` 폼의 생성자에서 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기입니다.  
  
 [!code-cpp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="linkCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">컬렉션에서 검색할 키입니다.</param>
        <summary>컬렉션 전체에서 지정된 키가 처음 발견되는 인덱스(0부터 시작)를 검색합니다.</summary>
        <returns>전체 컬렉션에서 값이 처음 나타나는 인덱스(0부터 시작)이고, 컬렉션에 값이 없으면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 <xref:System.Windows.Forms.LinkLabel.LinkCollection.IndexOfKey%2A> 마지막 연속적으로 호출 반환 인덱스 키 일치에 먼저 확인 하 고 컬렉션의 시작 부분에서 일치 하는 경우 검색을 시작 합니다.  
  
 <xref:System.Windows.Forms.LinkLabel.Link.Name%2A> 키에 해당 하는 속성을 <xref:System.Windows.Forms.LinkLabel.Link> 에 <xref:System.Windows.Forms.LinkLabel.LinkCollection>합니다. 키 비교는 대/소문자 구분 하지 않습니다. 경우는 `key` 매개 변수가 `null` 이거나 빈 문자열인 경우 <xref:System.Windows.Forms.LinkLabel.LinkCollection.IndexOfKey%2A> -1을 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.LinkLabel.LinkCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 컬렉션이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컬렉션이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 항상 `false` 이 컬렉션에 대 한 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컬렉션에서 항목을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.LinkLabel.Link this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.LinkLabel/Link Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As LinkLabel.Link" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::LinkLabel::Link ^ default[int] { System::Windows::Forms::LinkLabel::Link ^ get(int index); void set(int index, System::Windows::Forms::LinkLabel::Link ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.LinkLabel.Link with get, set" Usage="System.Windows.Forms.LinkLabel.LinkCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+Link</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">가져올 컬렉션에 있는 링크의 인덱스입니다.</param>
        <summary>컬렉션 내의 지정된 인덱스에서 링크를 가져오거나 설정합니다.</summary>
        <value>컬렉션의 지정된 인덱스에 해당하는 링크를 나타내는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컬렉션 내의 특정 위치에 저장 된 링크를 가져오려면이 메서드를 사용할 수 있습니다. 컬렉션 내의 특정 항목의 인덱스를 확인 하려면 사용 된 <xref:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />의 값이 음수이거나 컬렉션의 항목 수보다 큰 경우</exception>
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf(System.Windows.Forms.LinkLabel.Link)" />
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.Contains(System.Windows.Forms.LinkLabel.Link)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.LinkLabel.Link this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.LinkLabel/Link Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As LinkLabel.Link" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::LinkLabel::Link ^ default[System::String ^] { System::Windows::Forms::LinkLabel::Link ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.LinkLabel.Link" Usage="System.Windows.Forms.LinkLabel.LinkCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+Link</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">컬렉션에서 검색할 링크의 이름입니다.</param>
        <summary>컬렉션에서 지정된 키를 가진 링크를 가져옵니다.</summary>
        <value>컬렉션에서 지정된 키를 가진 <see cref="T:System.Windows.Forms.LinkLabel.Link" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 키 비교는 대/소문자 구분 하지 않습니다. 경우는 `key` 매개 변수가 `null` 이거나 빈 문자열인 경우 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Item%2A> 반환 `null.`  
  
 <xref:System.Windows.Forms.LinkLabel.Link.Name%2A> 키에 해당 하는 속성을 <xref:System.Windows.Forms.LinkLabel.Link> 에 <xref:System.Windows.Forms.LinkLabel.LinkCollection>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinksAdded">
      <MemberSignature Language="C#" Value="public bool LinksAdded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LinksAdded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.LinksAdded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinksAdded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LinksAdded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.LinksAdded : bool" Usage="System.Windows.Forms.LinkLabel.LinkCollection.LinksAdded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />에 링크가 추가되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />에 링크가 추가되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.LinkLabel.Link value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.LinkLabel/Link value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.Remove(System.Windows.Forms.LinkLabel.Link)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As LinkLabel.Link)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::LinkLabel::Link ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.LinkLabel.Link -&gt; unit" Usage="linkCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.LinkLabel+Link" />
      </Parameters>
      <Docs>
        <param name="value">컬렉션에서 제거할 링크를 나타내는 <see cref="T:System.Windows.Forms.LinkLabel.Link" />입니다.</param>
        <summary>컬렉션에서 지정된 링크를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컬렉션에서 링크를 제거 하면 컬렉션의 후속 항목 인덱스 변경 됩니다. 제거 된 항목에 대 한 모든 정보가 삭제 됩니다. 컬렉션에서 제거할 실제 항목을 지정 하 여 컬렉션에서 특정 링크를 제거 하려면이 메서드를 사용할 수 있습니다. 대신 자체 링크를 제거 하기 위한 링크의 인덱스를 지정 하려면 사용 된 <xref:System.Windows.Forms.LinkLabel.LinkCollection.RemoveAt%2A> 메서드. 컬렉션에서 모든 링크를 제거 하려면 사용 된 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Clear%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="linkCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">컬렉션에서 제거할 항목의 인덱스(0부터 시작)입니다.</param>
        <summary>컬렉션의 지정된 위치에 있는 링크를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컬렉션에서 링크를 제거 하면 컬렉션의 후속 항목 인덱스 변경 됩니다. 삭제 된 링크에 대 한 모든 정보가 손실 됩니다. 컬렉션에서 제거할 링크의 인덱스를 지정 하 여 컬렉션에서 특정 링크를 제거 하려면이 메서드를 사용할 수 있습니다. 대신 인덱스 링크를 제거 하기 위한 링크를 지정 하려면 사용 된 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> 메서드. 컬렉션에서 모든 링크를 제거 하려면 사용 된 <xref:System.Windows.Forms.LinkLabel.LinkCollection.Clear%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />의 값이 음수이거나 컬렉션의 항목 수보다 큰 경우</exception>
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.Remove(System.Windows.Forms.LinkLabel.Link)" />
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="linkCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">제거할 링크의 키입니다.</param>
        <summary>지정된 키를 가진 링크를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.LinkLabel.Link.Name%2A> 키에 해당 하는 속성을 <xref:System.Windows.Forms.LinkLabel.Link> 에 <xref:System.Windows.Forms.LinkLabel.LinkCollection>합니다. 키 비교는 대/소문자 구분 하지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest"><see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.ICollection" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
        <param name="index"><paramref name="dest" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />를 참조하십시오.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.LinkLabel.LinkCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.IsSynchronized" />를 참조하세요.</summary>
        <value><see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Collections.ICollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.LinkLabel.LinkCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.SyncRoot" />를 참조하세요.</summary>
        <value><see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.LinkLabel.LinkCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Object" />에 추가할 <see cref="T:System.Collections.IList" />입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Add(System.Object)" />를 참조하세요.</summary>
        <returns>새 요소가 삽입된 위치입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.LinkLabel.LinkCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object link);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object link) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (link As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ link) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="link"><see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.IList" />입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Contains(System.Object)" />를 참조하세요.</summary>
        <returns><see cref="T:System.Object" />가 <see cref="T:System.Collections.IList" />에 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.LinkLabel.LinkCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object link);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object link) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (link As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ link) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="link"><see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.IList" />입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />를 참조하십시오.</summary>
        <returns>링크가 있으면 <paramref name="link" /> 매개 변수의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.LinkLabel.LinkCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><paramref name="value" />을 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
        <param name="value"><see cref="T:System.Collections.IList" />에 삽입할 <see cref="T:System.Object" />입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />를 참조하세요.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.LinkLabel.LinkCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.IsFixedSize" />를 참조하세요.</summary>
        <value><see langword="true" />의 크기가 고정되어 있으면 <see cref="T:System.Collections.IList" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.LinkLabel.LinkCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.Item(System.Int32)" />를 참조하세요.</summary>
        <value>지정한 인덱스의 요소입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.LinkLabel.LinkCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Object" />에서 제거할 <see cref="T:System.Collections.IList" />입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Collections.IList.Remove(System.Object)" />를 참조하세요.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.LinkLabel.LinkCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>