<Type Name="ListBox+ObjectCollection" FullName="System.Windows.Forms.ListBox+ObjectCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a02f0d5f86361908ced8dee8036b26661b73b6fe" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58460203" /></Metadata><TypeSignature Language="C#" Value="public class ListBox.ObjectCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/ObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.ObjectCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::ObjectCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListBox.ObjectCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Forms.ListBox" />에 포함된 항목의 컬렉션을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.ListBox.ObjectCollection> 클래스에 표시 된 항목을 저장 합니다 <xref:System.Windows.Forms.ListBox>합니다. 내에 정의 된 다른 두 컬렉션을 가지는 <xref:System.Windows.Forms.ListBox> 이 컬렉션 내에서 선택 된 항목을 결정할 수 있도록 하는 클래스입니다. <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> 클래스 내에서 선택 된 항목을 확인 하기 위한 메서드와 속성을 제공 합니다 <xref:System.Windows.Forms.ListBox.ObjectCollection>, 하는 동안는 <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> 클래스 내에서 인덱스를 확인할 수 있습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 선택 됩니다.  
  
 컬렉션에 항목을 추가 하는 방법의 여러 가지가 있습니다. <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 메서드는 컬렉션에 단일 개체를 추가 하는 기능을 제공 합니다. 많은 개체를 컬렉션에 추가할 항목의 배열을 만들고 할당 하 여 <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> 메서드. 컬렉션 내의 특정 위치에 있는 개체를 삽입 하려는 경우 사용할 수 있습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> 메서드. 항목을 제거 하려면 사용할 수 있습니다 합니다 <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 메서드 또는 <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> 메서드 컬렉션 내의 항목 위치를 아는 경우. <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> 메서드를 사용 하는 대신 컬렉션에서 모든 항목을 제거 하면를 <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 메서드를 한 번에 단일 항목을 제거 합니다.  
  
 항목을 조작할 수도 있습니다는 <xref:System.Windows.Forms.ListBox> 를 사용 하 여는 <xref:System.Windows.Forms.ListControl.DataSource%2A> 속성입니다. 사용 하는 경우는 <xref:System.Windows.Forms.ListControl.DataSource%2A> 항목을 추가 하는 속성을 <xref:System.Windows.Forms.ListBox>에서 항목을 볼 수 있습니다는 <xref:System.Windows.Forms.ListBox> 를 사용 하 여를 <xref:System.Windows.Forms.ListBox.Items%2A> 속성이 있지만 더하거나의 메서드를 사용 하 여 목록에서 항목을 제거할 수 없습니다는 <xref:System.Windows.Forms.ListBox.ObjectCollection>.  
  
 메서드 및 속성을 추가 하 고 항목을 제거 하는 것 외에도 <xref:System.Windows.Forms.ListBox.ObjectCollection> 컬렉션 내의 항목을 찾으려면 메서드도 제공 합니다. <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> 메서드를 사용 하면 개체가 컬렉션의 멤버 인지 확인할 수 있습니다. 항목이 컬렉션에 있는지 알고 있다면 사용할 수는 <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> 항목의 컬렉션 내 위치를 확인 하는 방법입니다.  
  
   
  
## Examples  
 소유자가 그린 다음 코드 예제에서는 <xref:System.Windows.Forms.ListBox> 설정 하 여는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 속성을 합니다 `OwnerDrawVariable` 값 및 처리 합니다 <xref:System.Windows.Forms.ListBox.DrawItem> 및 <xref:System.Windows.Forms.ListBox.MeasureItem> 이벤트입니다. 설정 하는 방법도 보여 줍니다 합니다 <xref:System.Windows.Forms.ListBox.BorderStyle%2A> 하 고 <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> 속성 및 사용 하 여는 <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> 메서드.  
  
 이 예제를 실행 하려면 가져오는 빈 폼에 붙여넣습니다 합니다 <xref:System.Drawing> 네임 스페이스 및 <xref:System.Windows.Forms> 네임 스페이스입니다. 호출 `InitializeOwnerDrawnListBox` 폼의 생성자에서 또는 `Load` 메서드.  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListBox.SelectedObjectCollection" />
    <altmember cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner">컬렉션을 소유하는 <see cref="T:System.Windows.Forms.ListBox" />입니다.</param>
        <summary><see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 연결 되어 있지 않으면이 클래스의 인스턴스를 만들 수는 <xref:System.Windows.Forms.ListBox> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner, object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner, object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox, value As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner, cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox * obj[] -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection (owner, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="value" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="owner">컬렉션을 소유하는 <see cref="T:System.Windows.Forms.ListBox" />입니다.</param>
        <param name="value">컬렉션에 추가할 개체의 배열</param>
        <summary>개체의 배열을 포함하는 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 연결 되어 있지 않으면이 클래스의 인스턴스를 만들 수는 <xref:System.Windows.Forms.ListBox> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner, System.Windows.Forms.ListBox.ObjectCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner, class System.Windows.Forms.ListBox/ObjectCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox,System.Windows.Forms.ListBox.ObjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox, value As ListBox.ObjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner, System::Windows::Forms::ListBox::ObjectCollection ^ value);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox * System.Windows.Forms.ListBox.ObjectCollection -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection (owner, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+ObjectCollection" />
      </Parameters>
      <Docs>
        <param name="owner">컬렉션을 소유하는 <see cref="T:System.Windows.Forms.ListBox" />입니다.</param>
        <param name="value">이 컬렉션에 내용이 복사된 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /></param>
        <summary>다른 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />을 따르는 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 연결 되어 있지 않으면이 클래스의 인스턴스를 만들 수는 <xref:System.Windows.Forms.ListBox> 제어 합니다. 이 버전의 생성자를 사용 하면 기존 인스턴스의 지정 된 항목을 사용 하는 <xref:System.Windows.Forms.ListBox.ObjectCollection> 클래스를 만들 때 컬렉션에 항목을 추가 합니다. 이 생성자를 사용 하 여 다른 지정 된 항목을 사용 하려면 <xref:System.Windows.Forms.ListBox> 이 컬렉션을 사용 하 여 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : obj -&gt; int" Usage="objectCollection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">컬렉션에 추가할 항목을 나타내는 개체입니다.</param>
        <summary><see cref="T:System.Windows.Forms.ListBox" />의 항목 목록에 항목을 추가합니다.</summary>
        <returns>컬렉션에서 항목의 인덱스(0부터 시작)이며 <see cref="M:System.Windows.Forms.ListBox.BeginUpdate" />가 호출되면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.ListBox.Sorted%2A> 의 속성을 <xref:System.Windows.Forms.ListBox> 로 설정 된 `true`, 항목이 사전순으로 목록에 삽입 됩니다. 그렇지 않으면 항목 목록의 끝에 삽입 됩니다. 사용 하 여 특정 위치에 있는 목록 상자에 항목을 삽입는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> 메서드. 항목 집합을 단일 작업에서 목록 상자에 추가 하려면 사용 된 <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> 메서드. 사용 하려는 경우는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 메서드를 사용 하 여, 많은 수의 항목 목록에 추가 합니다 <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> 및 <xref:System.Windows.Forms.ListBox.EndUpdate%2A> 방지 하는 방법을 <xref:System.Windows.Forms.ListBox> 될 때마다 다시 칠하지 항목은 목록에 추가할 모든 항목 목록에 추가 될 때까지. 항목을 추가 하는 경우는 <xref:System.Windows.Forms.ListBox>, 것이 항목을 먼저 정렬 한 다음 새 항목을 추가 하는 것이 효율적입니다.  
  
 개체를 컬렉션에 추가 되 면를 <xref:System.Windows.Forms.ListBox> 첫 번째 확인 하는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 의 속성을 <xref:System.Windows.Forms.ListControl> 클래스에 있는 항목 텍스트를 가져올 때 참조로 지정 된 개체의 멤버 이름이. 경우는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성에 지정 된 멤버를 없는 <xref:System.Windows.Forms.ListBox> 호출을 <xref:System.Object.ToString%2A> 목록에 표시할 텍스트를 가져오는 데 개체의 메서드.  
  
   
  
## Examples  
 다음 코드 예제에는 만드는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ListBox> 컨트롤 열에 여러 항목을 표시 하는 컨트롤의 목록에서 선택한 항목이 둘 이상 있을 수 있습니다. 50 개의 항목을 추가 하는 예제 코드를 <xref:System.Windows.Forms.ListBox> 를 사용 하 여는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> 메서드를 <xref:System.Windows.Forms.ListBox.ObjectCollection> 클래스 및 선택 하 여 목록에서 항목 3는 <xref:System.Windows.Forms.ListBox.SetSelected%2A> 메서드. 코드를 다음 값을 표시 합니다 <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> 컬렉션 (통해를 <xref:System.Windows.Forms.ListBox.SelectedItems%2A> 속성) 및 <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (통해를 <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> 속성). 이 예제 코드에서 호출에 하는 <xref:System.Windows.Forms.Form>합니다.  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">공간이 부족하여 목록에 새 항목을 추가할 수 없는 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="item" />가 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ListBox" />의 항목 목록에 항목 그룹을 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (object[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(object[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.AddRange(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Object ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : obj[] -&gt; unit" Usage="objectCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="items">목록에 추가할 개체 배열입니다.</param>
        <summary><see cref="T:System.Windows.Forms.ListBox" />의 항목 목록에 항목 배열을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.ListBox.Sorted%2A> 의 속성을 <xref:System.Windows.Forms.ListBox> 로 설정 된 `true`, 항목은 사전순으로 목록에 삽입 됩니다. 그렇지 않으면 항목 배열 내에서 발생 하는 순서에 삽입 됩니다. 이 메서드는 일반적으로 배열을 전달 <xref:System.String> 개체가 아니라 모든 형식의 개체 배열을이 메서드에 전달할 수 있습니다. 개체를 컬렉션에 추가 되 면를 <xref:System.Windows.Forms.ListBox> 첫 번째 확인 하는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 의 속성을 <xref:System.Windows.Forms.ListControl> 클래스에 있는 항목 텍스트를 가져올 때 참조로 지정 된 개체의 멤버 이름이. 경우는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성에 지정 된 멤버를 없는 <xref:System.Windows.Forms.ListBox> 호출을 <xref:System.Object.ToString%2A> 목록에 표시할 텍스트를 가져오는 데 개체의 메서드. 이 메서드를 사용 하 여 항목을 추가 하는 <xref:System.Windows.Forms.ListBox>를 호출할 필요가 없습니다 합니다 <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> 및 <xref:System.Windows.Forms.ListBox.EndUpdate%2A> 성능을 최적화 하는 방법. 항목을 추가 하는 경우는 <xref:System.Windows.Forms.ListBox>, 것이 항목을 먼저 정렬 한 다음 새 항목을 추가 하는 것이 효율적입니다. 목록에 항목 그룹을 추가 하거나 다른 저장 된 항목을 다시 사용이 메서드를 사용할 수 있습니다 <xref:System.Windows.Forms.ListBox>합니다.  
  
   
  
## Examples  
 소유자가 그린 다음 코드 예제에서는 <xref:System.Windows.Forms.ListBox> 설정 하 여는 <xref:System.Windows.Forms.ListBox.DrawMode%2A> 속성을 합니다 `OwnerDrawVariable` 값 및 처리 합니다 <xref:System.Windows.Forms.ListBox.DrawItem> 및 <xref:System.Windows.Forms.ListBox.MeasureItem> 이벤트입니다. 설정 하는 방법도 보여 줍니다 합니다 <xref:System.Windows.Forms.ListBox.BorderStyle%2A> 하 고 <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> 속성 및 사용 하 여는 <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> 메서드.  
  
 이 예제를 실행 하려면 가져오는 빈 폼에 붙여넣습니다 합니다 <xref:System.Drawing> 네임 스페이스 및 <xref:System.Windows.Forms> 네임 스페이스입니다. 호출 `InitializeOwnerDrawnListBox` 폼의 생성자에서 또는 `Load` 메서드.  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.ObjectCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/ObjectCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.AddRange(System.Windows.Forms.ListBox.ObjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.ObjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::ObjectCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListBox.ObjectCollection -&gt; unit" Usage="objectCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+ObjectCollection" />
      </Parameters>
      <Docs>
        <param name="value">이 컬렉션으로 로드할 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /></param>
        <summary><see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />의 항목 목록에 기존 <see cref="T:System.Windows.Forms.ListBox" /> 항목을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.ListBox.Sorted%2A> 의 속성을 <xref:System.Windows.Forms.ListBox> 로 설정 된 `true`, 항목은 사전순으로 목록에 삽입 됩니다. 그렇지 않으면 항목 배열 내에서 발생 하는 순서에 삽입 됩니다. 이 메서드는 일반적으로 배열을 전달 <xref:System.String> 개체가 아니라 모든 형식의 개체 배열을이 메서드에 전달할 수 있습니다. 개체를 컬렉션에 추가 되 면를 <xref:System.Windows.Forms.ListBox> 첫 번째 확인 하는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 의 속성을 <xref:System.Windows.Forms.ListControl> 클래스에 있는 항목 텍스트를 가져올 때 참조로 지정 된 개체의 멤버 이름이. 경우는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성에 지정 된 멤버를 없는 <xref:System.Windows.Forms.ListBox> 호출을 <xref:System.Object.ToString%2A> 목록에 표시할 텍스트를 가져오는 데 개체의 메서드.  
  
 이 메서드를 사용 하 여 항목을 추가 하는 <xref:System.Windows.Forms.ListBox>를 호출할 필요가 없습니다 합니다 <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> 및 <xref:System.Windows.Forms.ListBox.EndUpdate%2A> 성능을 최적화 하는 방법. 항목을 추가 하는 경우는 <xref:System.Windows.Forms.ListBox>, 것이 항목을 먼저 정렬 한 다음 새 항목을 추가 하는 것이 효율적입니다. 이 메서드를 사용 하 여 다른 저장 된 항목을 다시 사용 <xref:System.Windows.Forms.ListBox>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="objectCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컬렉션에서 모든 항목을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 목록에서 항목을 제거 하면 삭제 된 항목에 대 한 모든 정보가 손실 됩니다. 단일 항목을 제거 하는 <xref:System.Windows.Forms.ListBox>를 사용 하 여는 <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 또는 <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="objectCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">컬렉션에서 찾을 항목을 나타내는 개체입니다.</param>
        <summary>지정된 항목이 컬렉션에 위치하는지 여부를 확인합니다.</summary>
        <returns>항목이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> 메서드를 사용 하면 개체가 컬렉션의 멤버 인지 확인할 수 있습니다. 항목이 컬렉션에 있는지 알고 있다면 사용할 수는 <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> 항목의 컬렉션 내 위치를 확인 하는 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />가 <see langword="null" />입니다.</exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.ListBox.FindString(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.FindStringExact(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (object[] dest, int arrayIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] dest, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Object(), arrayIndex As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ dest, int arrayIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.CopyTo : obj[] * int -&gt; unit" Usage="objectCollection.CopyTo (dest, arrayIndex)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void CopyTo (object[] destination, int arrayIndex);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] destination, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Object(), arrayIndex As Integer)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ destination, int arrayIndex);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.CopyTo : obj[] * int -&gt; unit" Usage="objectCollection.CopyTo (destination, arrayIndex)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" FrameworkAlternate="netframework-1.1;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Object[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dest" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination">컬렉션의 항목을 복사할 개체 배열입니다.</param>
        <param name="dest">컬렉션의 항목을 복사할 개체 배열입니다.</param>
        <param name="arrayIndex">컬렉션에서 항목을 복사할 대상 배열 내의 위치입니다.</param>
        <summary>배열 내의 지정된 위치에 있는 개체의 기존 배열로 전체 컬렉션을 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 단일 배열로 여러 컬렉션에서 항목을 결합 하려면이 메서드를 사용할 수 있습니다. 이 배열을 다른 형식의 콘텐츠를 채우는 데 사용할 수 있습니다 <xref:System.Windows.Forms.ListBox> 사용 하 여 제어 합니다 <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> 메서드를 <xref:System.Windows.Forms.ListBox.ObjectCollection> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListBox.ObjectCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션의 항목 수를 가져옵니다.</summary>
        <value>컬렉션의 항목 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 있는 항목의 수를 확인할 수 있습니다는 <xref:System.Windows.Forms.ListBox>합니다. 그런 다음 컬렉션의 값을 반복 하 고 루프를 수행 하는 반복 횟수를 제공 하는 경우이 값을 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="objectCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>항목 컬렉션을 반복하는 데 사용할 열거자를 반환합니다.</summary>
        <returns>항목 컬렉션을 나타내는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="objectCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">컬렉션에서 찾을 항목을 나타내는 개체입니다.</param>
        <summary>지정된 항목의 컬렉션 내에 있는 인덱스를 반환합니다.</summary>
        <returns>항목이 컬렉션에 들어 있는 0부터 시작하는 인덱스, 그렇지 않으면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> 메서드를 사용 하면 항목의 컬렉션 내 위치를 확인할 수 있습니다. 이 메서드를 호출 하기 전에 컬렉션에 들어 있는 항목 인지 여부를 확인 하려면 사용 된 <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 매개 변수가 null인 경우</exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="objectCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">항목이 삽입되는 0부터 시작하는 인덱스 위치입니다.</param>
        <param name="item">삽입할 항목을 나타내는 개체입니다.</param>
        <summary>목록 상자 내의 지정된 인덱스에 항목을 삽입합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하면 특정 위치에 항목을 삽입 하는 <xref:System.Windows.Forms.ListBox>합니다. 경우는 <xref:System.Windows.Forms.ListBox.Sorted%2A> 의 속성을 <xref:System.Windows.Forms.ListBox> 로 설정 된 true 이면 항목의 올바른 위치에 지정 된 값에 관계 없이 정렬된 된 목록에 추가 됩니다는 `index` 매개 변수. 개체를 컬렉션에 추가 되 면를 <xref:System.Windows.Forms.ListBox> 첫 번째 확인 하는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 의 속성을 <xref:System.Windows.Forms.ListControl> 클래스에 있는 항목 텍스트를 가져올 때 참조로 지정 된 개체의 멤버 이름이. 경우는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 속성에 지정 된 멤버를 없는 <xref:System.Windows.Forms.ListBox> 호출을 <xref:System.Object.ToString%2A> 목록에 표시할 텍스트를 가져오는 데 개체의 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 매개 변수가 0보다 작거나 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> 클래스의 <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> 속성 값보다 큰 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="item" />가 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListBox.ObjectCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
        <value>이 컬렉션이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 항상 `false` 이 컬렉션에 대 한 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.ListBox.ObjectCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">컬렉션에서 가져오거나 설정할 항목의 인덱스입니다.</param>
        <summary>컬렉션 내의 지정된 인덱스에 있는 항목을 가져오거나 설정합니다.</summary>
        <value>컬렉션 내의 지정된 인덱스에 있는 항목을 나타내는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 가져오려고 합니다 <xref:System.Windows.Forms.ListBox> 컬렉션 내의 특정 위치에 저장 된 항목입니다. 컬렉션 내의 특정 항목의 인덱스를 확인 하려면 사용 된 <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 매개 변수가 0보다 작거나 <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> 클래스의 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> 속성 값보다 크거나 같은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="objectCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">컬렉션에서 제거할 항목을 나타내는 개체입니다.</param>
        <summary>컬렉션에서 지정된 개체를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 목록에서 항목을 제거 하면 후속 항목 목록에는 인덱스가 변경 됩니다. 제거 된 항목에 대 한 모든 정보가 삭제 됩니다. 목록에서 제거할 실제 항목을 지정 하 여 목록에서 특정 항목을 제거 하려면이 메서드를 사용할 수 있습니다. 항목 자체가 아니라 제거할 항목의 인덱스를 지정 하려면 사용 된 <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> 메서드. 목록에서 모든 항목을 제거 하려면 사용 된 <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="objectCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">제거할 항목의 인덱스(0부터 시작)입니다.</param>
        <summary>컬렉션의 지정된 인덱스에서 항목을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 목록에서 항목을 제거 하면 후속 항목 목록에는 인덱스가 변경 됩니다. 제거 된 항목에 대 한 모든 정보가 삭제 됩니다. 목록에서 제거할 항목의 인덱스를 지정 하 여 목록에서 특정 항목을 제거 하려면이 메서드를 사용할 수 있습니다. 항목 인덱스 대신 제거 하려면이 항목을 지정 하려면 사용 된 <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> 메서드. 목록에서 모든 항목을 제거 하려면 사용 된 <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> 속성을를 <xref:System.Windows.Forms.ListBox.TopIndex%2A> 속성의 표시 영역에 있는 항목의 목록 맨 위에 현재 선택된 된 항목을 이동할는 <xref:System.Windows.Forms.ListBox>. 또한 다음 예제에서는 사용 하 여 항목을 제거 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> 메서드의 <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> 클래스 및 사용 하 여 모든 항목 선택 영역을 지우는 방법은 <xref:System.Windows.Forms.ListBox.ClearSelected%2A> 메서드. 코드 현재 선택한 항목을 먼저 이동 된 <xref:System.Windows.Forms.ListBox> 목록의 맨 위로 이동 합니다. 현재 선택한 항목 앞의 모든 항목을 제거 및에서 모든 선택을 취소 한 다음 코드는 <xref:System.Windows.Forms.ListBox>합니다. 이 예제에서는 <xref:System.Windows.Forms.ListBox> 항목이 포함 된 폼 추가 되 고에서 선택한 항목은 현재는 <xref:System.Windows.Forms.ListBox>합니다.  
  
 [!code-cpp[ListBox.SelectedIndex#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndex/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndex/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndex/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 매개 변수가 0보다 작거나 <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" /> 클래스의 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> 속성 값보다 크거나 같은 경우</exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array destination, int index);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array destination, int32 index) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (destination As Array, index As Integer) Implements ICollection.CopyTo" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ destination, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" FrameworkAlternate="netframework-1.1;netcore-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dest" Type="System.Array" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="index" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination"><see cref="T:System.Collections.ICollection" />에서 복사한 요소의 대상인 1차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
        <param name="dest"><see cref="T:System.Collections.ICollection" />에서 복사한 요소의 대상인 1차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
        <param name="index">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</param>
        <summary>특정 배열 인덱스부터 시작하여 컬렉션의 요소를 배열에 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.ListBox.ObjectCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArrayTypeMismatchException">배열 형식이 <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />의 항목과 호환되지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.IsSynchronized" />를 참조하십시오.</summary>
        <value>모든 경우에 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.ListBox.ObjectCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.SyncRoot" />를 참조하세요.</summary>
        <value><see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.ListBox.ObjectCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">개체가 <see cref="T:System.Windows.Forms.ListBox" />에 추가됩니다.</param>
        <summary><see cref="T:System.Windows.Forms.ListBox" /> 클래스에 개체를 추가합니다.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.ListBox.ObjectCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArgumentNullException"><paramref name="item" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException">현재 <see cref="T:System.Windows.Forms.ListBox" />에 데이터 소스가 있는 경우</exception>
        <exception cref="T:System.SystemException">새 항목을 저장하기 위한 공간이 부족합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.IList.IsFixedSize" />를 참조하십시오.</summary>
        <value>모든 경우에 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Forms.ListBox.ObjectCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>