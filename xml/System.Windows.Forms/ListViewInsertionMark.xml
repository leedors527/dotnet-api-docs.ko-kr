<Type Name="ListViewInsertionMark" FullName="System.Windows.Forms.ListViewInsertionMark">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9d7a78ab3406bfe09096c39fcb1f6e49f002e27" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39905439" /></Metadata><TypeSignature Language="C#" Value="public sealed class ListViewInsertionMark" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ListViewInsertionMark extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewInsertionMark" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ListViewInsertionMark" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewInsertionMark sealed" />
  <TypeSignature Language="F#" Value="type ListViewInsertionMark = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>항목을 <see cref="T:System.Windows.Forms.ListView" /> 컨트롤 내의 새 위치로 끌어서 놓을 때 예상되는 위치를 나타내는 데 사용됩니다. 이 기능은 Windows XP 이상에서만 사용할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 검색할 수 있습니다는 <xref:System.Windows.Forms.ListViewInsertionMark> 에서 <xref:System.Windows.Forms.ListView.InsertionMark%2A> 의 속성을 <xref:System.Windows.Forms.ListView> 제어 하 고 항목을 새 위치로 끌 때 끌어서 놓기 작업에서 예상 되는 놓을 위치를 시각적으로 나타내는 데 사용 합니다.  
  
 이 기능은 경우에만 작동 합니다 <xref:System.Windows.Forms.ListView.AutoArrange%2A?displayProperty=nameWithType> 속성이로 설정 되어 `true` 및 시기를 <xref:System.Windows.Forms.ListView> 컨트롤 항목을 자동으로 정렬 되지 않습니다. 자동 정렬 방지 하기 위해 합니다 <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> 속성으로 설정 되어 있어야 <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> 및 <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> 속성 설정 해야 합니다 <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType>, <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType>, 또는 <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>합니다. 삽입 표시 기능은 함께 사용할 수 없습니다 또한는 <xref:System.Windows.Forms.ListView> 그룹화 기능은 그룹 멤버 자격을 기준으로 항목을 정렬 하기 때문에 기능을 그룹화 합니다.  
  
 <xref:System.Windows.Forms.ListViewInsertionMark> 클래스에 대 한 처리기에서 일반적으로 사용 됩니다 합니다 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> 이벤트 항목을 끄는 대로 삽입 표시의 위치를 업데이트 합니다. 에 대 한 처리기에서 사용 되는 합니다 <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> 끌어 온된 항목을 올바른 위치에 삽입 하는 이벤트입니다.  
  
 삽입 표시의 위치를 업데이트 하려면 다음이 단계를 수행 합니다.  
  
1.  대 한 처리기를 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> 이벤트를 사용 하 여는 <xref:System.Windows.Forms.ListView.InsertionMark%2A?displayProperty=nameWithType> 속성에 액세스를 <xref:System.Windows.Forms.ListViewInsertionMark> 연관 된 개체는 <xref:System.Windows.Forms.ListView> 컨트롤.  
  
2.  사용 된 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 마우스 포인터에 대 한 가장 가까운 항목의 인덱스를 검색 하는 방법입니다.  
  
3.  인덱스 값을 전달 합니다 <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=nameWithType> 항목의 경계 사각형을 검색 하는 방법입니다.  
  
4.  마우스 포인터의 경계 사각형의 중간점 왼쪽에 있는 경우, 설정 된 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 속성을 `false`이 고, 그렇지 않으면로 설정 `true`합니다.  
  
5.  설정 된 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 속성에서 검색 된 인덱스 값을는 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 메서드. 삽입 표시가 나타나지 왼쪽 또는 오른쪽에 따라 지정된 된 인덱스를 사용 하 여 항목 옆에 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 속성 값입니다. 자체를 통해 항목을 끌어 인덱스가-1 이며 삽입 표시가 나타나지 않습니다.  
  
 끌어 온된 항목에 올바른 위치에 삽입 하려면 다음이 단계를 수행 합니다.  
  
1.  에 대 한 처리기에는 <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> 또는 <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> 이벤트를 사용 하 여는 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 삽입 표시의 현재 위치를 결정 하는 속성입니다. 삽입 인덱스와 나중에 사용 하도록이 값을 저장 합니다.  
  
2.  경우는 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 속성이 `true`, 저장된 삽입 인덱스 값이 증가 합니다.  
  
3.  사용 하 여는 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A?displayProperty=nameWithType> 으로 끌어 온된 항목의 복제본을 삽입 하는 방법은 <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> 저장된 삽입 인덱스의 컬렉션입니다.  
  
4.  사용 된 <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A?displayProperty=nameWithType> 끌어 온된 항목의 원래 복사본을 제거 하는 방법입니다.  
  
 원래 복사본에는 인덱스 값 하므로 제거 되기 전까지 끌어 온된 항목의 복제본을 삽입 해야 합니다는 <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> 삽입 하기 전에 컬렉션은 변경 되지 않습니다.  
  
 설정 항목을 인덱스 값과 동일한 순서로 표시 되는지 확인을 해야 합니다는 <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A?displayProperty=nameWithType> 속성의 구현에는 <xref:System.Collections.IComparer> 항목을 인덱스 값으로 정렬 하는 인터페이스입니다. 자세한 내용은 예제 섹션을 참조 하세요.  
  
 사용 하 여 삽입 표시의 색을 수정할 수는 <xref:System.Windows.Forms.ListViewInsertionMark.Color%2A> 속성입니다. 크기 또는 삽입 표시의 위치를 해야 하는 경우 해당 경계 사각형을 통해 가져올 수 있습니다는 <xref:System.Windows.Forms.ListViewInsertionMark.Bounds%2A> 속성입니다.  
  
> [!NOTE]
>  삽입 표시 기능은 Windows XP 및 Windows Server 2003 제품군 에서만 사용할 수 있는 애플리케이션 호출을 <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> 메서드. 이전 운영 체제에서는 삽입 표시와 관련 된 모든 코드가 무시 되 고 삽입 표시가 나타나지 않습니다. 결과적으로, 삽입 표시 기능에 종속 된 모든 코드가 제대로 작동 하지 않을 수 있습니다. 삽입 표시 기능을 사용할 수 있는지 여부를 확인 하는 테스트를 포함 하 고 사용할 수 없을 때 대체 기능을 제공할 수 있습니다. 예를 들어 다음 삽입 표시를 지원 하지 않는 운영 체제에서 실행 하는 경우 위치를 변경 하는 끌어서 놓기 항목을 구현 하는 모든 코드를 무시 하는 것이 좋습니다.  
>   
>  삽입 표시 기능은 운영 체제 테마 기능을 제공 하는 라이브러리에서 제공 됩니다. 이 라이브러리의 가용성을 확인 하려면 호출을 <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> 메서드 오버 로드 하 고 전달 합니다 <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> 값입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ListView> 삽입 표시 기능 및 구현 항목 끌어서 놓기 재정렬 표준을 사용 하 여 끌기 이벤트입니다. 삽입 표시의 위치에 대 한 처리기에서 업데이트 되는 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 이벤트입니다. 이 처리기에서 가장 가까운 항목의 중간점 마우스 포인터의 위치를 비교 하 고 결과 삽입 표시가 항목의 오른쪽 또는 왼쪽에 표시 되는지 여부를 확인 하려면 사용 됩니다.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
  </Docs>
  <Members>
    <Member MemberName="AppearsAfterItem">
      <MemberSignature Language="C#" Value="public bool AppearsAfterItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppearsAfterItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem" />
      <MemberSignature Language="VB.NET" Value="Public Property AppearsAfterItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppearsAfterItem { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AppearsAfterItem : bool with get, set" Usage="System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입 표시가 <see cref="P:System.Windows.Forms.ListViewInsertionMark.Index" /> 속성으로 지정된 인덱스에 있는 항목의 오른쪽에 나타나는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>삽입 표시가 <see cref="P:System.Windows.Forms.ListViewInsertionMark.Index" /> 속성으로 지정된 인덱스에 있는 항목의 오른쪽에 나타나면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 메서드를 사용 하면 마우스 포인터를 가장 가까운 항목을 찾을 수 있지만이 항목 앞 또는 뒤에 삽입 표시가 표시 되어야 하는지를 결정 하기 위해 사용자 고유의 계산을 수행 해야 합니다.  
  
 에 필요한 값을 계산 하는 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 속성을 다음이 단계를 수행 합니다.  
  
1.  사용 된 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 마우스 포인터에 대 한 가장 가까운 항목의 인덱스를 검색 하는 방법입니다.  
  
2.  인덱스 값을 전달 합니다 <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=nameWithType> 항목의 경계 사각형을 검색 하는 방법입니다.  
  
3.  마우스 포인터의 경계 사각형의 중간점 왼쪽에 있는 경우, 설정 된 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 속성을 `false`이 고, 그렇지 않으면로 설정 `true`합니다.  
  
 자세한 내용은 참조는 <xref:System.Windows.Forms.ListViewInsertionMark> 개요 항목을 참조 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ListView> 삽입 표시 기능 및 구현 항목 끌어서 놓기 재정렬 표준을 사용 하 여 끌기 이벤트입니다. 삽입 표시의 위치에 대 한 처리기에서 업데이트 되는 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 이벤트입니다. 이 처리기에서 가장 가까운 항목의 중간점 마우스 포인터의 위치를 비교 하 고 결과 삽입 표시가 항목의 오른쪽 또는 왼쪽에 표시 되는지 여부를 확인 하려면 사용 됩니다.  
  
 전체 예제를 참조 하세요.를 <xref:System.Windows.Forms.ListViewInsertionMark> 개요 항목을 참조 합니다.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.ListViewInsertionMark.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입 표시의 경계 사각형을 가져옵니다.</summary>
        <value>삽입 표시의 위치와 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 왼쪽 위 모퉁이 기준으로 삽입 표시가 경계 사각형의 좌표는는 <xref:System.Windows.Forms.ListView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color Color { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListViewInsertionMark.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입 표시의 색을 가져오거나 설정합니다.</summary>
        <value>삽입 표시의 색을 나타내는 <see cref="T:System.Drawing.Color" /> 값입니다. 기본값은 <see cref="P:System.Windows.Forms.ListView.ForeColor" /> 속성의 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전경색이 아닌 값으로 삽입 표시 색을 설정 하려면이 속성을 사용 합니다 <xref:System.Windows.Forms.ListView> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ListView> 삽입 표시 기능 및 구현 항목 끌어서 놓기 재정렬 표준을 사용 하 여 끌기 이벤트입니다. 삽입 표시의 위치에 대 한 처리기에서 업데이트 되는 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 이벤트입니다. 이 처리기에서 가장 가까운 항목의 중간점 마우스 포인터의 위치를 비교 하 고 결과 삽입 표시가 항목의 오른쪽 또는 왼쪽에 표시 되는지 여부를 확인 하려면 사용 됩니다.  
  
 전체 예제를 참조 하세요.를 <xref:System.Windows.Forms.ListViewInsertionMark> 개요 항목을 참조 합니다.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Index : int with get, set" Usage="System.Windows.Forms.ListViewInsertionMark.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삽입 표시 옆에 나타나는 항목의 인덱스를 가져오거나 설정합니다.</summary>
        <value>삽입 표시 옆에 나타나는 항목의 인덱스이거나 삽입 표시가 나타나지 않는 경우 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 지정된 된 인덱스를 사용 하 여 항목의 왼쪽에 표시 되는 삽입 표시는 <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> 속성이 `false`고, 그렇지 않으면 항목의 오른쪽에 표시 됩니다. 끌어 온된 항목에 삽입 될 때 자동으로 삽입 표시가 사라집니다는 <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> 컬렉션입니다. 제거 하려면 삽입 표시가 수동으로 예를 들어, 항목 컨트롤의 바깥쪽 끌거나 자체를 끌 때 설정의 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 값-1입니다.  
  
 사용 된 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 끌어서 놓기 작업에서 항목 위치를 지정할 때 마우스 포인터의 위치와 같은 지정된 된 위치에 가장 가까운 항목의 인덱스를 검색 하는 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ListView> 삽입 표시 기능 및 구현 항목 끌어서 놓기 재정렬 표준을 사용 하 여 끌기 이벤트입니다. 삽입 표시의 위치에 대 한 처리기에서 업데이트 되는 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 이벤트입니다. 이 처리기에서 가장 가까운 항목의 중간점 마우스 포인터의 위치를 비교 하 고 결과 삽입 표시가 항목의 오른쪽 또는 왼쪽에 표시 되는지 여부를 확인 하려면 사용 됩니다.  
  
 전체 예제를 참조 하세요.를 <xref:System.Windows.Forms.ListViewInsertionMark> 개요 항목을 참조 합니다.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="NearestIndex">
      <MemberSignature Language="C#" Value="public int NearestIndex (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NearestIndex(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function NearestIndex (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NearestIndex(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="member this.NearestIndex : System.Drawing.Point -&gt; int" Usage="listViewInsertionMark.NearestIndex pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">가장 가까운 항목을 찾을 위치를 나타내는 <see cref="T:System.Drawing.Point" />입니다.</param>
        <summary>지정된 위치에 가장 가까운 항목의 인덱스를 검색합니다.</summary>
        <returns>지정된 위치에 가장 가까운 항목의 인덱스이거나 현재 끌고 있는 항목이 가장 가까운 항목인 경우 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하면 끌어서 놓기 작업을 수행 하는 경우 마우스 포인터에 대 한 가장 가까운 항목을 찾을 수 있습니다. 설정할 인덱스 값을 반환 하는 사용 된 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 속성입니다. 마우스 포인터에 대 한 가장 가까운 항목 끌고 있는 항목이 되 면이 메서드의 반환 값은-1입니다. 이 경우에 설정 된 <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> 속성이 값이 삽입 표시를 숨깁니다.  
  
 이 메서드는 마우스 포인터가 위치한 하는 동안에 관계 없이 가장 가까운 항목을 찾습니다 합니다 <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=nameWithType> 지정된 된 위치에만 있는 항목을 반환 하는 메서드 또는 `null` 해당 위치에 항목이 없는 경우. 합니다 <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=nameWithType> 메서드가 반환 되는 `null`, 마우스 포인터 두 항목 사이 있는 경우 예를 들어, 합니다. 이러한 이유로 항상 사용 해야 합니다 <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> 메서드 항목 위치로 끌어서 놓기 작업을 사용 하는 경우.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ListView> 삽입 표시 기능 및 구현 항목 끌어서 놓기 재정렬 표준을 사용 하 여 끌기 이벤트입니다. 삽입 표시의 위치에 대 한 처리기에서 업데이트 되는 <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> 이벤트입니다. 이 처리기에서 가장 가까운 항목의 중간점 마우스 포인터의 위치를 비교 하 고 결과 삽입 표시가 항목의 오른쪽 또는 왼쪽에 표시 되는지 여부를 확인 하려면 사용 됩니다.  
  
 전체 예제를 참조 하세요.를 <xref:System.Windows.Forms.ListViewInsertionMark> 개요 항목을 참조 합니다.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
  </Members>
</Type>