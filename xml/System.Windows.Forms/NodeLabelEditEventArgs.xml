<Type Name="NodeLabelEditEventArgs" FullName="System.Windows.Forms.NodeLabelEditEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec1972d01d8198e7e5f0b6895a06d1b49a11860a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39752149" /></Metadata><TypeSignature Language="C#" Value="public class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeLabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NodeLabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeLabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type NodeLabelEditEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> 및 <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeView.AfterLabelEdit> 이벤트는 사용자가 트리 노드에 대 한 텍스트를 편집을 마치면 발생 합니다. <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> 이벤트는 사용자가 트리 노드에 대 한 텍스트를 편집을 시작할 때 발생 합니다. <xref:System.Windows.Forms.NodeLabelEditEventArgs> 편집 작업이 취소 되었는지 여부 및 개체를 편집 하려면 레이블이 포함 된 트리 노드 트리 노드와 연결할 새 텍스트를 지정 합니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 예제에서는 사용자가 루트가 아닌 트리 노드를 사용 하 여 편집할 수는 <xref:System.Windows.Forms.ContextMenu>합니다. 마우스를 마우스 오른쪽 단추로 클릭할 때 합니다 <xref:System.Windows.Forms.TreeNode> 이때 위치가 결정 하 고 라는 변수에 저장 `mySelectedNode`합니다. 루트가 아닌 트리 노드를 선택 하는 경우 설정 됩니다는 편집 가능한 상태로 노드 레이블을 편집할 수 있도록 허용 합니다. 사용자가 트리 노드 레이블의 편집을 중지 한 후 새 레이블 텍스트를 계산 되어 저장 됩니다. 예를 들어 여러 문자 레이블 텍스트에 유효한 간주 됩니다. 레이블 문자열에 잘못 된 문자 중 하나 또는 문자열이 비어 사용자 오류 알림이 전송 되 고 이전 텍스트에 레이블을 반환 됩니다.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.NodeLabelEditEventHandler" />
    <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs node" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">편집할 텍스트가 포함된 트리 노드입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Forms.TreeNode" />에 대한 <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> 속성에 할당 되는 `node` 매개 변수 값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node, System::String ^ label);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode * string -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs (node, label)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">편집할 텍스트가 포함된 트리 노드입니다.</param>
        <param name="label">트리 노드와 연결할 새 텍스트입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />와 트리 노드 레이블을 업데이트하는 데 사용할 지정된 텍스트에 대한 <see cref="T:System.Windows.Forms.TreeNode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> 속성에 할당 되는 `node` 매개 변수 값 및 <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> 속성에 할당 되는 `label` 매개 변수 값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : bool with get, set" Usage="System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집이 취소되었는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>편집이 취소되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용자가 루트가 아닌 트리 노드를 사용 하 여 편집할 수는 <xref:System.Windows.Forms.ContextMenu>합니다. 마우스를 마우스 오른쪽 단추로 클릭할 때 합니다 <xref:System.Windows.Forms.TreeNode> 이때 위치가 결정 하 고 라는 변수에 저장 `mySelectedNode`합니다. 루트가 아닌 트리 노드를 선택 하는 경우 설정 됩니다는 편집 가능한 상태로 노드 레이블을 편집할 수 있도록 허용 합니다. 사용자가 트리 노드 레이블의 편집을 중지 한 후 새 레이블 텍스트를 계산 되어 저장 됩니다. 예를 들어 여러 문자 레이블 텍스트에 유효한 간주 됩니다. 레이블 문자열에 잘못 된 문자 중 하나 또는 문자열이 비어 사용자 오류 알림이 전송 되 고 이전 텍스트에 레이블을 반환 됩니다.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드와 연결할 새 텍스트를 가져옵니다.</summary>
        <value>새 <see cref="T:System.Windows.Forms.TreeNode" /> 레이블 또는 <see langword="null" />(사용자가 편집을 취소한 경우)을 나타내는 문자열 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 값은 `null` 편집을 취소 하려면 ESC 키를 누르거나 레이블 텍스트를 수정 하지 않고 ENTER 키를 누를 경우. 사용자가 레이블 텍스트를 편집 하는 경우이 속성의 값을 새 레이블 텍스트입니다. 편집 된 레이블 텍스트의 최종 값은 원래 값과 동일 하는 경우에 마찬가지입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자가 루트가 아닌 트리 노드를 사용 하 여 편집할 수는 <xref:System.Windows.Forms.ContextMenu>합니다. 마우스를 마우스 오른쪽 단추로 클릭할 때 합니다 <xref:System.Windows.Forms.TreeNode> 이때 위치가 결정 하 고 라는 변수에 저장 `mySelectedNode`합니다. 루트가 아닌 트리 노드를 선택 하는 경우 설정 됩니다는 편집 가능한 상태로 노드 레이블을 편집할 수 있도록 허용 합니다. 사용자가 트리 노드 레이블의 편집을 중지 한 후 새 레이블 텍스트를 계산 되어 저장 됩니다. 예를 들어 여러 문자 레이블 텍스트에 유효한 간주 됩니다. 레이블 문자열에 잘못 된 문자 중 하나 또는 문자열이 비어 사용자 오류 알림이 전송 되 고 이전 텍스트에 레이블을 반환 됩니다.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Node : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집할 텍스트가 포함된 트리 노드를 가져옵니다.</summary>
        <value>편집할 텍스트가 포함된 트리 노드를 나타내는 <see cref="T:System.Windows.Forms.TreeNode" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용자가 루트가 아닌 트리 노드를 사용 하 여 편집할 수는 <xref:System.Windows.Forms.ContextMenu>합니다. 마우스를 마우스 오른쪽 단추로 클릭할 때 합니다 <xref:System.Windows.Forms.TreeNode> 이때 위치가 결정 하 고 라는 변수에 저장 `mySelectedNode`합니다. 루트가 아닌 트리 노드를 선택 하는 경우 설정 됩니다는 편집 가능한 상태로 노드 레이블을 편집할 수 있도록 허용 합니다. 사용자가 트리 노드 레이블의 편집을 중지 한 후 새 레이블 텍스트를 계산 되어 저장 됩니다. 예를 들어 여러 문자 레이블 텍스트에 유효한 간주 됩니다. 레이블 문자열에 잘못 된 문자 중 하나 또는 문자열이 비어 사용자 오류 알림이 전송 되 고 이전 텍스트에 레이블을 반환 됩니다.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
  </Members>
</Type>