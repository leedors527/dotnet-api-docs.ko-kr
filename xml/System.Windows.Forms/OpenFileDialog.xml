<Type Name="OpenFileDialog" FullName="System.Windows.Forms.OpenFileDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d6be3b2635af8040d66e8f7dddaad2a6a38b7ec" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56355471" /></Metadata><TypeSignature Language="C#" Value="public sealed class OpenFileDialog : System.Windows.Forms.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenFileDialog extends System.Windows.Forms.FileDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpenFileDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenFileDialog&#xA;Inherits FileDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialog sealed : System::Windows::Forms::FileDialog" />
  <TypeSignature Language="F#" Value="type OpenFileDialog = class&#xA;    inherit FileDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.OpenFileDialogDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사용자가 파일을 열도록 요청하는 표준 대화 상자를 표시합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스를 사용 하 여 파일이 있는지 확인 하 고 열 수 있습니다. <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> 속성 대화 상자에서 확인란을 읽기 전용으로 표시할지 여부를 결정 합니다. <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> 속성은 읽기 전용 확인란이 선택 되어 있는지 여부를 나타냅니다.  
  
 대부분의 핵심 기능에 대 한이 클래스는를 <xref:System.Windows.Forms.FileDialog> 클래스입니다.  

오른쪽에서 왼쪽에는 운영 체제를 포함 하는 폼의 설정 <xref:System.Windows.Forms.Control.RightToLeft> 속성을 <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> 대화 상자의 보여지는 **파일 이름**에 **열기**, 및 **취소** 단추입니다. 속성 설정 하지 않으면 <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, 영어 텍스트 대신 사용 됩니다.  

 사용자에 게 파일이 아니라 폴더를 선택, 사용 하 여 기능을 제공 하려는 경우 <xref:System.Windows.Forms.FolderBrowserDialog> 대신 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.OpenFileDialog>, 파일 확장명 필터 및 대화 상자 동작을 정의 하도록 여러 가지 속성을 설정 하 고 사용 하 여 대화 상자를 표시 합니다 <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> 메서드. 예제에 사용 하 여 폼이 필요를 <xref:System.Windows.Forms.Button> 하 고에 대 한 참조에 배치 합니다 <xref:System.IO> 네임 스페이스에 추가 합니다.  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FileDialog" />
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md">방법: 파일의 텍스트 읽기</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.OpenFileDialog" /> 클래스의 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 기본적으로에 대 한 컴파일러에서 제공 하는 생성자를 <xref:System.Windows.Forms.OpenFileDialog> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public override bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckFileExists : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>존재하지 않는 파일 이름을 지정할 때 대화 상자에 경고가 표시되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>존재하지 않는 파일 이름을 지정할 때 대화 상자에 경고가 표시되면 <see langword="true" />이고, 표시되지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="Multiselect">
      <MemberSignature Language="C#" Value="public bool Multiselect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiselect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiselect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiselect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiselect : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대화 상자에서 여러 파일을 선택할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>대화 상자에서 동시에 여러 파일을 선택할 수 있으면 <see langword="true" />이고, 선택할 수 없으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Forms.FileDialog.FileNames%2A> 속성의 전체 목록에 액세스 하려면 파일 이름을 선택 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 다양 한 이미지를 선택 하 고 표시를 사용 하면 <xref:System.Windows.Forms.PictureBox> 양식의 컨트롤입니다. 초기화를 보여 줍니다는 <xref:System.Windows.Forms.OpenFileDialog>설정 합니다 <xref:System.Windows.Forms.FileDialog.Title%2A> 및 <xref:System.Windows.Forms.FileDialog.Filter%2A> 속성 및 설정 하 여 여러 파일을 선택할 수 있도록를 <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> 속성을 true로 합니다. 이 코드 예제에서는 양식에 이미 있다고 가정를 <xref:System.Windows.Forms.OpenFileDialog> 컨트롤인 `openFileDialog1`, <xref:System.Windows.Forms.Button> 라는 `SelectFileButton`, 및 <xref:System.Windows.Forms.FlowLayoutPanel> 라는 `flowLayoutPanel1`.  
  
 [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileNames" />
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenFile();" />
      <MemberSignature Language="F#" Value="member this.OpenFile : unit -&gt; System.IO.Stream" Usage="openFileDialog.OpenFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>사용자가 선택한 파일을 읽기 전용 권한을 사용하여 엽니다. 이 파일은 <see cref="P:System.Windows.Forms.FileDialog.FileName" /> 속성을 사용하여 지정됩니다.</summary>
        <returns>사용자가 선택한 읽기 전용 파일을 지정하는 <see cref="T:System.IO.Stream" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 메서드는 대화 상자에서 파일을 신속 하 게 기능을 제공 하는 데 사용 됩니다. 파일 보안을 위해 읽기 전용 모드로 열려 있습니다. 파일 읽기/쓰기 모드에서를 열려면 다른 메서드를 같은 사용 해야 <xref:System.IO.FileStream>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">파일 이름이 <see langword="null" />인 경우</exception>
        <permission cref="T:System.Security.Permissions.FileDialogPermission">파일을 열려고 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" /></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChecked">
      <MemberSignature Language="C#" Value="public bool ReadOnlyChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyChecked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChecked : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>읽기 전용 확인란이 선택되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>읽기 전용 확인란이 선택되어 있으면 <see langword="true" />이고, 선택되지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> 상태 읽기/쓰기 모드에 영향을 주지 않습니다는 <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> 대화 상자에서 선택한 파일을 사용 합니다. <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 읽기 전용 모드에서 파일을 엽니다 항상 됩니다.  
  
 <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> 속성 하기 전에 대화 상자에 표시 하려면 읽기 전용 확인란에 대 한 순서 대로 설정 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> 속성입니다. 이 예제에서는 표시를 <xref:System.Windows.Forms.OpenFileDialog> 사용 하 여 상자는 <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> 속성이로 설정 `true`합니다. 읽기 전용 모드로 파일 열기 옵션을 클릭 하면 합니다 <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> 속성 값이 `true`, 및 <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 메서드를 사용 하 여 파일을 엽니다. 그렇지 않은 경우는 <xref:System.IO.FileStream> 클래스로 읽기/쓰기 모드에서 파일을 엽니다.  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="openFileDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>모든 속성을 기본값으로 다시 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileName">
      <MemberSignature Language="C#" Value="public string SafeFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SafeFileName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SafeFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileName : string" Usage="System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대화 상자에서 선택한 파일의 파일 이름과 확장명을 가져옵니다. 파일 이름에 경로는 포함되지 않습니다.</summary>
        <value>대화 상자에서 선택한 파일의 파일 이름과 확장명입니다. 파일 이름에 경로는 포함되지 않습니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 안전한 파일 이름 (파일 이름 및 경로 없이 확장만 함)에서 경로 정보를 노출 하지 않으므로 애플리케이션에 대 한 보안을 개선 하기 위해 사용할 수 있습니다. 이 속성은 제한 된 신뢰 수준으로 실행 하는 코드에 액세스할 수 있어야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileNames">
      <MemberSignature Language="C#" Value="public string[] SafeFileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SafeFileNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ SafeFileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileNames : string[]" Usage="System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대화 상자에서 선택한 모든 파일의 파일 이름과 확장명의 배열을 가져옵니다. 파일 이름에 경로는 포함되지 않습니다.</summary>
        <value>대화 상자에서 선택한 모든 파일의 파일 이름과 확장명의 배열입니다. 파일 이름에 경로는 포함되지 않습니다. 파일을 선택하지 않는 경우 빈 배열이 반환됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 안전한 파일 이름 (파일 이름 및 경로 없이 확장만 함)에서 경로 정보를 노출 하지 않으므로 애플리케이션에 대 한 보안을 개선 하기 위해 사용할 수 있습니다. 이 속성은 제한 된 신뢰 수준으로 실행 하는 코드에 액세스할 수 있어야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReadOnly">
      <MemberSignature Language="C#" Value="public bool ShowReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowReadOnly : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대화 상자에 읽기 전용 확인란이 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>대화 상자에 읽기 전용 확인란이 있으면 <see langword="true" />이고, 없으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> 속성입니다. 이 예제에서는 표시를 <xref:System.Windows.Forms.OpenFileDialog> 사용 하 여 상자는 <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> 속성이로 설정 `true`합니다. 읽기 전용 모드로 파일 열기 옵션을 클릭 하면는 <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 메서드를 사용 하 여 파일을 엽니다. 그렇지 않은 경우는 <xref:System.IO.FileStream> 클래스로 읽기/쓰기 모드에서 파일을 엽니다.  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
  </Members>
</Type>