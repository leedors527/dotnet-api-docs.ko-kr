<Type Name="RightToLeft" FullName="System.Windows.Forms.RightToLeft">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73325158877205206b3da706af9bd553d3809f3e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37565616" /></Metadata><TypeSignature Language="C#" Value="public enum RightToLeft" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RightToLeft extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.RightToLeft" />
  <TypeSignature Language="VB.NET" Value="Public Enum RightToLeft" />
  <TypeSignature Language="C++ CLI" Value="public enum class RightToLeft" />
  <TypeSignature Language="F#" Value="type RightToLeft = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>히브리어 또는 아랍어 글꼴을 사용하는 경우와 같이 텍스트를 오른쪽에서 왼쪽으로 표시할지 여부를 나타내는 값을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 열거형을 사용 하 여 <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ProgressBar>, <xref:System.Text.RegularExpressions.Regex> 고 <xref:System.Windows.Forms.Control>입니다.  
  
 값을 검색 하는 `RightToLeft` 속성을 <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, 및 <xref:System.Windows.Forms.ProgressBar> 의 값을 얻게 됩니다 <xref:System.Windows.Forms.RightToLeft> 할당 합니다. 고유한 클래스를 파생 하는 경우 반대로 <xref:System.Windows.Forms.Control>의 값을 할당 하 고 `Inherit` 에 <xref:System.Windows.Forms.Control.RightToLeft%2A> 속성을 반환 하는 값 설정 됩니다는 <xref:System.Windows.Forms.Control.RightToLeft%2A> 부모 컨트롤의 속성입니다. 부모 컨트롤이 없는 경우 값이 반환 됩니다 `No`합니다. 그렇지 않은 경우는 반환 값 `Yes` 나 `No`에 할당 된 값에 따라는 <xref:System.Windows.Forms.Control.RightToLeft%2A> 파생된 클래스의 속성입니다.  
  
> [!NOTE]
>  오른쪽에서 왼쪽 맞춤을 사용 하도록 설정 하면 Windows Forms 컨트롤에 미치는 영향에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.Control.RightToLeft%2A?displayProperty=nameWithType> 속성입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Inherit">
      <MemberSignature Language="C#" Value="Inherit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.RightToLeft Inherit = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.RightToLeft.Inherit" />
      <MemberSignature Language="VB.NET" Value="Inherit" />
      <MemberSignature Language="C++ CLI" Value="Inherit" />
      <MemberSignature Language="F#" Value="Inherit = 2" Usage="System.Windows.Forms.RightToLeft.Inherit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>텍스트를 읽는 방향은 부모 컨트롤에서 상속됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="No" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.RightToLeft No = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.RightToLeft.No" />
      <MemberSignature Language="VB.NET" Value="No" />
      <MemberSignature Language="C++ CLI" Value="No" />
      <MemberSignature Language="F#" Value="No = 0" Usage="System.Windows.Forms.RightToLeft.No" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>왼쪽에서 오른쪽으로 읽는 텍스트입니다. 이 값이 기본값입니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="Yes" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.RightToLeft Yes = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.RightToLeft.Yes" />
      <MemberSignature Language="VB.NET" Value="Yes" />
      <MemberSignature Language="C++ CLI" Value="Yes" />
      <MemberSignature Language="F#" Value="Yes = 1" Usage="System.Windows.Forms.RightToLeft.Yes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>오른쪽에서 왼쪽으로 읽는 텍스트입니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>