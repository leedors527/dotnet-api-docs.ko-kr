<Type Name="ToolStripItem" FullName="System.Windows.Forms.ToolStripItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ab89a230174e552d4a11e519ee37e91d0bf98dd" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56359137" /></Metadata><TypeSignature Language="C#" Value="public abstract class ToolStripItem : System.ComponentModel.Component, IDisposable, System.Windows.Forms.IDropTarget" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ToolStripItem extends System.ComponentModel.Component implements class System.ComponentModel.IComponent, class System.IDisposable, class System.Windows.Forms.IDropTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripItem" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ToolStripItem&#xA;Inherits Component&#xA;Implements IDisposable, IDropTarget" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripItem abstract : System::ComponentModel::Component, IDisposable, System::Windows::Forms::IDropTarget" />
  <TypeSignature Language="F#" Value="type ToolStripItem = class&#xA;    inherit Component&#xA;    interface IDropTarget&#xA;    interface IComponent&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDropTarget</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolStripItemDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ToolStripItemDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Forms.ToolStrip" /> 또는 <see cref="T:System.Windows.Forms.ToolStripDropDown" />에 포함될 수 있는 모든 요소의 이벤트와 레이아웃을 관리하는 추상 기본 클래스를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem> 단추나와 같은, 콤보 상자, 텍스트 상자에 포함 될 수 있는 레이블 요소를 <xref:System.Windows.Forms.ToolStrip> 컨트롤 또는 <xref:System.Windows.Forms.ToolStripDropDown> 컨트롤 Windows 바로 가기 메뉴와 비슷합니다. 합니다 <xref:System.Windows.Forms.ToolStrip> 그리기 및 키보드 및 마우스 끌어서 놓기 이러한 요소에 대 한 입력을 포함 하 여 입력을 관리 하는 클래스 및 <xref:System.Windows.Forms.ToolStripItem> 클래스는 이벤트와 레이아웃 요소 자체 내에서 관리 합니다.  
  
 <xref:System.Windows.Forms.ToolStripItem> 클래스에서 직접 상속 되거나 <xref:System.Windows.Forms.ToolStripItem>를 간접적으로 상속 됩니다에서 또는 <xref:System.Windows.Forms.ToolStripItem> 를 통해 <xref:System.Windows.Forms.ToolStripControlHost> 또는 <xref:System.Windows.Forms.ToolStripDropDownItem>합니다.  
  
 <xref:System.Windows.Forms.ToolStripItem> 컨트롤에 포함 되어야 합니다는 <xref:System.Windows.Forms.ToolStrip>, <xref:System.Windows.Forms.MenuStrip>를 <xref:System.Windows.Forms.StatusStrip>, 또는 <xref:System.Windows.Forms.ContextMenuStrip> 폼에 직접 추가할 수 없습니다. 다양 한 컨테이너 클래스의 적절 한 하위 집합을 포함 하도록 만들어진 <xref:System.Windows.Forms.ToolStripItem> 컨트롤입니다.  
  
 **참고** 지정 된 <xref:System.Windows.Forms.ToolStripItem> 둘 이상의 부모를 가질 수 없습니다. <xref:System.Windows.Forms.ToolStrip>합니다. 복사 해야 합니다 <xref:System.Windows.Forms.ToolStripItem> 하 고 다른 추가 <xref:System.Windows.Forms.ToolStrip> 컨트롤입니다.  
  
 다음 테이블에서 파생 되는 요소를 보여 줍니다.는 <xref:System.Windows.Forms.ToolStripItem> 클래스 및 호스팅될 수에 <xref:System.Windows.Forms.ToolStrip> 또는 <xref:System.Windows.Forms.ToolStripDropDown>합니다.  
  
|요소|설명|  
|-------------|-----------------|  
|<xref:System.Windows.Forms.ToolStripButton>|도구 모음 단추 이미지와 텍스트 지원입니다.|  
|<xref:System.Windows.Forms.ToolStripLabel>|일반적으로 사용 되는 상태 표시줄에 텍스트 레이블 또는 <xref:System.Windows.Forms.ToolStrip> 주석 또는 제목입니다.|  
|<xref:System.Windows.Forms.ToolStripSeparator>|선택할 수 있는 비 공간 또는 시각적 요소를 그룹화 하는 세로 막대를 사용 하 여 공간입니다.|  
|<xref:System.Windows.Forms.ToolStripControlHost>|<xref:System.Windows.Forms.ToolStripItem> 호스팅하는 <xref:System.Windows.Forms.ToolStripComboBox>를 <xref:System.Windows.Forms.ToolStripTextBox>, <xref:System.Windows.Forms.ToolStripProgressBar>, 기타 Windows Forms 컨트롤 또는 사용자 지정 컨트롤입니다.<br /><br /> <xref:System.Windows.Forms.ToolStripComboBox> 사용자 사용자 텍스트 입력란에 맞게 선택할 수 있는 목록과 함께 텍스트를 입력할 수 있는 텍스트 상자입니다.<br /><br /> <xref:System.Windows.Forms.ToolStripTextBox> 사용자가 텍스트를 입력할 수 있도록 합니다.<br /><br /> A <xref:System.Windows.Forms.ToolStripProgressBar> 에 포함 된 Windows 진행률 표시줄 컨트롤을 나타내는 <xref:System.Windows.Forms.StatusStrip>합니다.|  
|<xref:System.Windows.Forms.ToolStripDropDownItem>|A <xref:System.Windows.Forms.ToolStripItem> 호스팅하는 <xref:System.Windows.Forms.ToolStripMenuItem>, <xref:System.Windows.Forms.ToolStripSplitButton>, 및 <xref:System.Windows.Forms.ToolStripDropDownButton>.<br /><br /> <xref:System.Windows.Forms.ToolStripMenuItem> 메뉴 또는 상황에 맞는 메뉴에 표시 된 선택 가능한 옵션입니다.<br /><br /> <xref:System.Windows.Forms.ToolStripSplitButton> 일반 단추와 드롭다운 단추가 결합 한 것입니다.<br /><br /> <xref:System.Windows.Forms.ToolStripDropDownButton> 드롭다운 기능을 지 원하는 단추입니다.|  
|<xref:System.Windows.Forms.ToolStripStatusLabel>|패널을 <xref:System.Windows.Forms.StatusStrip> 제어 합니다.|  
  
   
  
## Examples  
 다음 코드 예제에는 사용자 지정을 구현 하는 방법을 보여 줍니다. <xref:System.Windows.Forms.ToolStripItem> 제어 합니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolStrip" />
    <altmember cref="T:System.Windows.Forms.ToolStripButton" />
    <altmember cref="T:System.Windows.Forms.ToolStripLabel" />
    <altmember cref="T:System.Windows.Forms.ToolStripSeparator" />
    <altmember cref="T:System.Windows.Forms.ToolStripControlHost" />
    <altmember cref="T:System.Windows.Forms.ToolStripComboBox" />
    <altmember cref="T:System.Windows.Forms.ToolStripTextBox" />
    <altmember cref="T:System.Windows.Forms.ToolStripDropDownItem" />
    <altmember cref="T:System.Windows.Forms.ToolStripMenuItem" />
    <altmember cref="T:System.Windows.Forms.ToolStripSplitButton" />
    <altmember cref="T:System.Windows.Forms.ToolStripDropDownButton" />
    <related type="Article" href="https://msdn.microsoft.com/library/e5ef455a-e049-429c-8005-30c93132fb79">ToolStrip 컨트롤(Windows Forms)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolStripItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolStripItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolStripItem (string text, System.Drawing.Image image, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string text, class System.Drawing.Image image, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.#ctor(System.String,System.Drawing.Image,System.EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolStripItem(System::String ^ text, System::Drawing::Image ^ image, EventHandler ^ onClick);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripItem : string * System.Drawing.Image * EventHandler -&gt; System.Windows.Forms.ToolStripItem" Usage="new System.Windows.Forms.ToolStripItem (text, image, onClick)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.String" /> 이름을 나타내는 <see cref="T:System.Windows.Forms.ToolStripItem" />입니다.</param>
        <param name="image"><see cref="T:System.Windows.Forms.ToolStripItem" />에 표시할 <see cref="T:System.Drawing.Image" />입니다.</param>
        <param name="onClick">사용자가 <see cref="E:System.Windows.Forms.ToolStripItem.Click" />을 클릭하면 <see cref="T:System.Windows.Forms.ToolStripItem" /> 이벤트를 발생시킵니다.</param>
        <summary>지정된 이름, 이미지 및 이벤트 처리기를 사용하여 <see cref="T:System.Windows.Forms.ToolStripItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolStripItem (string text, System.Drawing.Image image, EventHandler onClick, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string text, class System.Drawing.Image image, class System.EventHandler onClick, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.#ctor(System.String,System.Drawing.Image,System.EventHandler,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolStripItem(System::String ^ text, System::Drawing::Image ^ image, EventHandler ^ onClick, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ToolStripItem : string * System.Drawing.Image * EventHandler * string -&gt; System.Windows.Forms.ToolStripItem" Usage="new System.Windows.Forms.ToolStripItem (text, image, onClick, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="onClick" Type="System.EventHandler" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.Windows.Forms.ToolStripItem" />에 표시할 텍스트입니다.</param>
        <param name="image"><see cref="T:System.Windows.Forms.ToolStripItem" />에 표시할 이미지입니다.</param>
        <param name="onClick"><see cref="E:System.Windows.Forms.ToolStripItem.Click" /> 이벤트에 대한 이벤트 처리기입니다.</param>
        <param name="name"><see cref="T:System.Windows.Forms.ToolStripItem" />의 이름입니다.</param>
        <summary>지정된 표시 텍스트, 이미지, 이벤트 처리기 및 이름을 사용하여 <see cref="T:System.Windows.Forms.ToolStripItem" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.ToolStripItem.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에 할당된 <see cref="T:System.Windows.Forms.AccessibleObject" />를 가져옵니다.</summary>
        <value>컨트롤에 지정된 <see cref="T:System.Windows.Forms.AccessibleObject" />입니다. 컨트롤에 <see cref="T:System.Windows.Forms.AccessibleObject" />가 현재 지정되어 있지 않으면 이 속성에 처음 액세스할 때 새 인스턴스가 만들어집니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.AccessibilityObject%2A> 속성을 가져오거나 설정하려면 .NET Framework와 함께 설치된 액세스 가능성 어셈블리에 대한 참조를 추가해야 합니다.  
  
 액세스 가능 개체에 대 한 자세한 내용은 참조는 [Active Accessibility](/windows/desktop/winauto/microsoft-active-accessibility) 설명서의 섹션입니다.
  
 샘플에 대 한 참조를 <xref:System.Windows.Forms.AccessibleObject> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
        <altmember cref="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleRole" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleDefaultActionDescription">
      <MemberSignature Language="C#" Value="public string AccessibleDefaultActionDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleDefaultActionDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleDefaultActionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleDefaultActionDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleDefaultActionDescription : string with get, set" Usage="System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내게 필요한 옵션 지원 클라이언트 애플리케이션에서 사용되는 컨트롤의 기본 작업 설명을 가져오거나 설정합니다.</summary>
        <value>내게 필요한 옵션 지원 클라이언트 애플리케이션에서 사용할 컨트롤의 기본 동작 설명입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체의 <xref:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription%2A> 개체의 기본 메서드를 사용자의 관점에서 조작 하는 속성에 설명 합니다. 이 속성은 동사 또는 짧은 동사 구 여야 합니다.  
  
> [!NOTE]
>  일부 개체에는 기본적으로 작업 하 고 일부 개체는 관련 기본 작업을 해야 할 수는 <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType> 다음 예제와 같이 속성:  
  
-   선택한 확인란을 선택 "취소" 기본 작업을 있고 값이 "선택"을 선택 합니다.  
  
-   확인란 선택이 취소 "확인" 기본 작업을 있고 값이 "선택 취소 합니다."  
  
-   레이블이 붙은 단추 **인쇄** 값이 없는 "Press,"의 기본 작업이 있습니다.  
  
-   레이블 또는 표시 하는 텍스트 상자 컨트롤 **프린터** 에 기본 작업이 없는 값이 "Printer"로 지정 합니다.  
  
 액세스 가능 개체의 속성에 대 한 자세한 내용은 참조 하세요. [설명이 포함 된 속성의 콘텐츠](/windows/desktop/winauto/content-of-descriptive-properties)합니다.  
  
 샘플에 대 한 참조를 <xref:System.Windows.Forms.AccessibleObject> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
        <altmember cref="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleRole" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleDescription">
      <MemberSignature Language="C#" Value="public string AccessibleDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AccessibleDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleDescription : string with get, set" Usage="System.Windows.Forms.ToolStripItem.AccessibleDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내게 필요한 옵션 지원 클라이언트 애플리케이션에 보고할 설명을 가져오거나 설정합니다.</summary>
        <value>내게 필요한 옵션 지원 클라이언트 애플리케이션에서 사용하는 컨트롤의 설명입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체의 <xref:System.Windows.Forms.ToolStripItem.AccessibleDescription%2A> 속성은 개체의 시각적 모양에 대 한 텍스트 설명을 제공 합니다. 설명을 이해를 돕기 위해 시각 장애인을 위해 주로 있지만 컨텍스트 검색 이나 다른 애플리케이션에 사용할 수도 있습니다.  
  
 합니다 <xref:System.Windows.Forms.ToolStripItem.AccessibleDescription%2A> 속성에 대 한 설명, 없는 경우 필요한 또는 중복 될 경우 개체의 기반 <xref:System.Windows.Forms.ToolStripItem.AccessibleName%2A>를 <xref:System.Windows.Forms.ToolStripItem.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, 및 <xref:System.Windows.Forms.AccessibleObject.Value%2A> 속성입니다. 예를 들어, 레이블이 붙은 단추 **확인** 없습니다 필요한 추가 정보는 않지만 선인장 그림이 표시 된 단추입니다. <xref:System.Windows.Forms.ToolStripItem.AccessibleName%2A> 하 고 <xref:System.Windows.Forms.ToolStripItem.AccessibleRole%2A> 와 <xref:System.Windows.Forms.AccessibleObject.Help%2A?displayProperty=nameWithType> 선인장 단추에 대 한 속성의 용도, 설명 하지만 <xref:System.Windows.Forms.ToolStripItem.AccessibleDescription%2A> 속성 "선인장 그림이 표시 된 단추입니다."와 같은 명백 하지 않은 정보를 전달 합니다  
  
 액세스 가능 개체의 속성에 대 한 자세한 내용은 참조 하세요. [설명이 포함 된 속성의 콘텐츠](/windows/desktop/winauto/content-of-descriptive-properties)합니다.  
  
 샘플에 대 한 참조를 <xref:System.Windows.Forms.AccessibleObject> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
        <altmember cref="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibilityObject" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleRole" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleName">
      <MemberSignature Language="C#" Value="public string AccessibleName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AccessibleName" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleName : string with get, set" Usage="System.Windows.Forms.ToolStripItem.AccessibleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내게 필요한 옵션 지원 클라이언트 애플리케이션에서 사용할 컨트롤의 이름을 가져오거나 설정합니다.</summary>
        <value>내게 필요한 옵션 지원 클라이언트 애플리케이션에서 사용할 컨트롤의 이름입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.AccessibleName%2A> 속성은 간단 하 게 설명 하 고 텍스트와 같이 해당 컨테이너 내에서 개체를 식별 하는 레이블을 <xref:System.Windows.Forms.ToolStripButton>, 이름를 <xref:System.Windows.Forms.ToolStripMenuItem>, 또는 레이블 옆에 표시를 <xref:System.Windows.Forms.ToolStripTextBox> 컨트롤입니다.  
  
 액세스 가능 개체의 속성에 대 한 자세한 내용은 참조 하세요. [설명이 포함 된 속성의 콘텐츠](/windows/desktop/winauto/content-of-descriptive-properties)합니다.  
  
 샘플에 대 한 참조를 <xref:System.Windows.Forms.AccessibleObject> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
        <altmember cref="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibilityObject" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleRole" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleRole">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleRole AccessibleRole { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole AccessibleRole" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AccessibleRole" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleRole As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleRole AccessibleRole { System::Windows::Forms::AccessibleRole get(); void set(System::Windows::Forms::AccessibleRole value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleRole : System.Windows.Forms.AccessibleRole with get, set" Usage="System.Windows.Forms.ToolStripItem.AccessibleRole" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 사용자 인터페이스 요소 형식을 지정하는 내게 필요한 옵션 지원 역할을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.AccessibleRole" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.AccessibleRole.PushButton" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.AccessibleRole%2A> 속성은 개체가 어떤 사용자 인터페이스 요소 종류인지 설명합니다. 컨트롤의 역할을 확인할 수 없으면 <xref:System.Windows.Forms.ToolStripItem.AccessibleRole%2A> 속성은 <xref:System.Windows.Forms.AccessibleRole.PushButton?displayProperty=nameWithType>로 설정됩니다.  
  
 액세스 가능 개체의 속성에 대 한 자세한 내용은 참조 하세요. [설명이 포함 된 속성의 콘텐츠](/windows/desktop/winauto/content-of-descriptive-properties)합니다.  
  
 샘플에 대 한 참조를 <xref:System.Windows.Forms.AccessibleObject> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">할당된 값이 <see cref="T:System.Windows.Forms.AccessibleRole" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
        <altmember cref="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.AccessibilityObject" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As ToolStripItemAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemAlignment Alignment { System::Windows::Forms::ToolStripItemAlignment get(); void set(System::Windows::Forms::ToolStripItemAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Windows.Forms.ToolStripItemAlignment with get, set" Usage="System.Windows.Forms.ToolStripItem.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목이 <see cref="T:System.Windows.Forms.ToolStrip" />의 시작 부분 방향으로 맞춰지는지 아니면 끝 부분 방향으로 맞춰지는지 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripItemAlignment" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.ToolStripItemAlignment.Left" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스택 오버플로 레이아웃을 사용 하 여를 <xref:System.Windows.Forms.ToolStripItem.Alignment%2A> 와 함께 속성을 <xref:System.Windows.Forms.ToolStripItem.RightToLeft%2A?displayProperty=nameWithType> 항목 정렬 되는 끝을 제어 하는 속성을 <xref:System.Windows.Forms.ToolStrip>, 또는는 이미 확실히 연계 되도록 끝을 확인 하.  
  
 경우는 <xref:System.Windows.Forms.ToolStripItem.RightToLeft%2A?displayProperty=nameWithType> 속성은 <xref:System.Windows.Forms.RightToLeft.No>로 표시 된 항목 <xref:System.Windows.Forms.ToolStripItemAlignment.Left> 의 왼쪽에 맞춰집니다 합니다 <xref:System.Windows.Forms.ToolStrip> 및 표시 된 항목 <xref:System.Windows.Forms.ToolStripItemAlignment.Right> 오른쪽에 맞춰집니다.  
  
 경우는 <xref:System.Windows.Forms.ToolStripItem.RightToLeft%2A?displayProperty=nameWithType> 속성은 <xref:System.Windows.Forms.RightToLeft.Yes>로 표시 된 항목 <xref:System.Windows.Forms.ToolStripItemAlignment.Left> 의 오른쪽에 맞춰집니다 합니다 <xref:System.Windows.Forms.ToolStrip> 및 표시 된 항목 <xref:System.Windows.Forms.ToolStripItemAlignment.Right> 왼쪽에 맞춰집니다.  
  
> [!NOTE]
>  흐름 및 테이블 레이아웃에는 <xref:System.Windows.Forms.ToolStripItem.Alignment%2A> 속성은 무시 됩니다. 흐름 또는 테이블 레이아웃을 사용 합니다 <xref:System.Windows.Forms.ToolStripItem.Dock%2A> 또는 <xref:System.Windows.Forms.ToolStripItem.Anchor%2A> 행 또는 테이블 셀 내 항목 정렬 하는 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Alignment%2A> 속성입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">할당된 값이 <see cref="T:System.Windows.Forms.ToolStripItemAlignment" /> 값 중 하나가 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public virtual bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 구현한 이벤트를 통해 끌어서 놓기 및 항목 다시 정렬을 처리할지 여부를 나타내는 값 가져오거나 설정합니다.</summary>
        <value>컨트롤에서 끌어서 놓기 작업을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 합니다 <xref:System.Windows.Forms.ToolStripItem.AllowDrop%2A> 속성을 `true` 설정는 <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> 속성을 `false` 에서 정의한 끌어서 놓기 동작에 응답 하는 <xref:System.Windows.Forms.ToolStripItem.DragEnter?displayProperty=nameWithType>, <xref:System.Windows.Forms.ToolStripItem.DragLeave?displayProperty=nameWithType>, 및 <xref:System.Windows.Forms.ToolStripItem.DragDrop?displayProperty=nameWithType> 이벤트.  
  
 설정 합니다 <xref:System.Windows.Forms.ToolStripItem.AllowDrop%2A> 속성을 `false` 설정 합니다 <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> 속성을 `true` 시킬는 <xref:System.Windows.Forms.ToolStripItem> 끌어서 놓기 및 개인적으로 다시 정렬 하는 항목을 처리 하는 클래스.  
  
 모두 설정 합니다 <xref:System.Windows.Forms.ToolStripItem.AllowDrop%2A> 하며 <xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A> 속성을 `true` 예외를 throw 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.AllowDrop%2A> 속성입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Forms.ToolStripItem.AllowDrop" />과 <see cref="P:System.Windows.Forms.ToolStrip.AllowItemReorder" />가 둘 다 <see langword="true" />로 설정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Anchor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AnchorStyles Anchor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AnchorStyles Anchor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Anchor" />
      <MemberSignature Language="VB.NET" Value="Public Property Anchor As AnchorStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AnchorStyles Anchor { System::Windows::Forms::AnchorStyles get(); void set(System::Windows::Forms::AnchorStyles value); };" />
      <MemberSignature Language="F#" Value="member this.Anchor : System.Windows.Forms.AnchorStyles with get, set" Usage="System.Windows.Forms.ToolStripItem.Anchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AnchorStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />이 바인딩되는 컨테이너의 가장자리를 가져오거나 설정하고 해당 부모를 기초로 <see cref="T:System.Windows.Forms.ToolStripItem" /> 크기를 조정하는 방법을 결정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.AnchorStyles" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Forms.ToolStripItem.Anchor%2A> 속성을 정의 하는 방법을 <xref:System.Windows.Forms.ToolStripItem> 부모 컨트롤의 크기를 조정할 때 자동으로 크기가 조정 됩니다. 부모 컨트롤에 컨트롤을 고정 하면 고정된 된 가장자리 부모 컨트롤의 가장자리를 기준으로 동일한 위치에 있는 부모 컨트롤의 크기를 조정할 때 유지 합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Windows.Forms.ToolStripItem.Anchor%2A> 고 <xref:System.Windows.Forms.ToolStripItem.Dock%2A> 속성은 함께 사용할 수 없습니다. 한 번에 하나만 설정할 수 있습니다 하 고 우선적으로 마지막으로 설정 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">값이 <see cref="T:System.Windows.Forms.AnchorStyles" /> 값 중 하나가 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 크기가 자동으로 조정되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripItem" />의 크기를 자동으로 조정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 합니다 <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> 속성을 `true` 시킬를 <xref:System.Windows.Forms.ToolStripItem> 높이 또는 너비의 방향에 따라 조정 하는 <xref:System.Windows.Forms.ToolStrip>을 보장 하기를 <xref:System.Windows.Forms.ToolStripItem> 필요한 만큼의 공간을 사용 하 여 합니다.  
  
 A <xref:System.Windows.Forms.ToolStripItem> 의 경우 크기는 최소 합니다 <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> 속성은 `true`합니다. 설정 합니다 <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> 속성을 `false` 하려는 경우를 <xref:System.Windows.Forms.ToolStripItem> 시스템에 정의 된 최소 크기 보다 더 작게 할 또는 <xref:System.Windows.Forms.ToolStripItem> 크기를 0입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Text%2A>, <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A>, <xref:System.Windows.Forms.ToolStripItem.Overflow%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.TextDirection%2A> 속성 및 핸들은 <xref:System.Windows.Forms.ToolStripItem.Click> 이벤트. 이 예제를 실행 하려면 다음 코드를 포함 하는 형식으로 붙여넣습니다를 <xref:System.Windows.Forms.ToolStrip> 라는 `movingToolStrip` 호출 `InitializeMovingToolStrip` 폼의 생성자에서 또는 `Load` 이벤트 처리기입니다.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoToolTip">
      <MemberSignature Language="C#" Value="public bool AutoToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.AutoToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoToolTip As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoToolTip { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoToolTip : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.AutoToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStripItem.ToolTipText" /> 도구 설명에 <see cref="P:System.Windows.Forms.ToolStripItem.Text" /> 속성 또는 <see cref="T:System.Windows.Forms.ToolStripItem" /> 속성을 사용할지 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>도구 설명에 <see cref="P:System.Windows.Forms.ToolStripItem.Text" /> 속성을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem> 사용 하는 <xref:System.Windows.Forms.ToolStripItem.Text%2A> 속성에 대 한 기본 원본으로는 <xref:System.Windows.Forms.ToolTip> 콘텐츠입니다. 설정 <xref:System.Windows.Forms.ToolStripItem.AutoToolTip%2A> 하 `false` 사용 하려면 <xref:System.Windows.Forms.ToolStripItem.ToolTipText%2A> 원본으로 <xref:System.Windows.Forms.ToolTip> 콘텐츠입니다.  
  
 이 속성을 사용 하려면 설정 해야 <xref:System.Windows.Forms.ToolStrip.ShowItemToolTips%2A> 에 `true`입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.ImageTransparentColor%2A> 에 대 한는 <xref:System.Windows.Forms.ToolStripItem>합니다. 또한 설정 항목을 사용자 지정 도구 설명을 표시 하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#20)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public bool Available { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Available" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Available" />
      <MemberSignature Language="VB.NET" Value="Public Property Available As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Available { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Available : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />에 <see cref="T:System.Windows.Forms.ToolStrip" />을 배치해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripItem" />에 <see cref="T:System.Windows.Forms.ToolStrip" />을 배치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.Available%2A> 속성은 다른를 <xref:System.Windows.Forms.ToolStripItem.Visible%2A> 속성에 <xref:System.Windows.Forms.ToolStripItem.Available%2A> 나타냅니다 여부를 <xref:System.Windows.Forms.ToolStripItem> 는 표시 하는 동안 <xref:System.Windows.Forms.ToolStripItem.Visible%2A> 나타냅니다 여부를 <xref:System.Windows.Forms.ToolStripItem> 부모 표시 됩니다. 설정 <xref:System.Windows.Forms.ToolStripItem.Available%2A> 또는 <xref:System.Windows.Forms.ToolStripItem.Visible%2A> 하 `true` 하거나 `false` 다른 속성을 설정 `true` 또는 `false`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AvailableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AvailableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.AvailableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AvailableChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AvailableChanged;" />
      <MemberSignature Language="F#" Value="member this.AvailableChanged : EventHandler " Usage="member this.AvailableChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStripItem.Available" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.AvailableChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.AvailableChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#98](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#98)]
 [!code-vb[System.Windows.Forms.EventExamples#98](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#98)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStripItem.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 배경색을 가져오거나 설정합니다.</summary>
        <value>항목의 배경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다. 기본값은 <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> 속성 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.BackColor%2A> 속성이 투명 한 색 지원 하지 않는 한는 `SupportsTransparentBackColor` 의 값 <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> 로 설정 되어 `true`합니다.  
  
 <xref:System.Windows.Forms.ToolStripItem.BackColor%2A> 속성이 앰비언트 속성입니다. 그렇지 않은 경우, 앰비언트 속성은 컨트롤 속성 설정, 부모 컨트롤에서 검색 됩니다. 예를 들어, 한 <xref:System.Windows.Forms.Button> 동일 <xref:System.Windows.Forms.ToolStripItem.BackColor%2A> 부모로 <xref:System.Windows.Forms.Form> 기본적으로 합니다. 앰비언트 속성에 대 한 자세한 내용은 참조는 <xref:System.Windows.Forms.AmbientProperties> 클래스 또는 <xref:System.Windows.Forms.Control> 클래스 개요입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.BackColor%2A> 속성 사용자 지정 렌더링 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#21)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="P:System.Windows.Forms.ToolStripItem.BackColor" /> 기본 클래스를 사용 하는 파생된 클래스에서 속성 <see cref="P:System.Windows.Forms.ToolStripItem.BackColor" /> 속성을 기본 구현을 확장 합니다. 그렇지 않으면 전체 구현을 제공 해야 합니다. 모두 재정의할 필요가 없습니다를 <see langword="get" /> 및 <see langword="set" /> 접근자를 <see cref="P:System.Windows.Forms.ToolStripItem.BackColor" /> 속성에 필요한 경우 하나만 재정의할 수 있습니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackColorChanged : EventHandler " Usage="member this.BackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStripItem.BackColor" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.ToolStripItem.BackColor%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.  
  
> [!NOTE]
>  변경 합니다 <xref:System.Windows.Forms.Control.Enabled%2A> 의 속성을 <xref:System.Windows.Forms.ToolStrip> 발생 하지 않습니다는 <xref:System.Windows.Forms.ToolStripItem.BackColorChanged> 이벤트입니다. 특정 속성 설정 사용 하 여이 이벤트를 발생 시킵니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.BackColorChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.BackColorChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#99](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#99)]
 [!code-vb[System.Windows.Forms.EventExamples#99](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ToolStripItem.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목에 표시할 배경 이미지를 가져오거나 설정합니다.</summary>
        <value>항목의 배경에 표시할 이미지를 나타내는 <see cref="T:System.Drawing.Image" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Forms.ToolStripItem.BackgroundImage%2A> 항목에 그래픽 이미지를 배치 하는 속성입니다.  
  
> [!NOTE]
>  배경 이미지로 이미지를 불투명 또는 투명 한 색을 사용 하 여 Windows Forms 컨트롤에서 지원 되지 않습니다.  
>   
>  이 속성은 자식 컨트롤 <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> 속성은 `true`합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>모두 재정의할 필요가 없습니다를 <see langword="get" /> 및 <see langword="set" /> 접근자를 <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> 속성에 필요한 경우 하나만 재정의할 수 있습니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.ToolStripItem.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />에 사용되는 배경 이미지 레이아웃을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.ImageLayout" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.ImageLayout.Tile" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.BackgroundImageLayout%2A> 속성입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.ToolStripItem.Bounds" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.Layout.IArrangedElement.Bounds</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 크기와 위치를 가져옵니다.</summary>
        <value><see cref="T:System.Drawing.Rectangle" />의 크기와 위치를 나타내는 <see cref="T:System.Windows.Forms.ToolStripItem" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Forms.ToolStripItem.Bounds%2A> 속성의 크기와 위치를 확인 하는 <xref:System.Windows.Forms.ToolStripItem>합니다.  
  
 다른 컨트롤과 달리를 <xref:System.Windows.Forms.ToolStripItem> 의 왼쪽 위 모퉁이 설정할 수 있는 속성이 <xref:System.Windows.Forms.ToolStripItem> 의 왼쪽 위 모퉁이 기준으로 <xref:System.Windows.Forms.ToolStrip>합니다. 절대 위치를 설정 하는 경우는 <xref:System.Windows.Forms.ToolStripItem>를 재정의 해야 합니다는 <xref:System.Windows.Forms.ToolStrip> 의 사용자 지정 구현을 정의 하 고는 <xref:System.Windows.Forms.ToolStrip.SetItemLocation%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Height" />
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Width" />
        <altmember cref="M:System.Windows.Forms.ToolStripItem.OnBoundsChanged" />
      </Docs>
    </Member>
    <Member MemberName="CanSelect">
      <MemberSignature Language="C#" Value="public virtual bool CanSelect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.CanSelect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSelect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSelect : bool" Usage="System.Windows.Forms.ToolStripItem.CanSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목을 선택할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" /> 경우는 <see cref="T:System.Windows.Forms.ToolStripItem" /> 수이 고, 그렇지 않으면 선택한 <see langword="false" />합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />을 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.ToolStripItem.Click> 이벤트를 전달는 <xref:System.EventArgs> 해당 이벤트 처리기에 따라서 것만 클릭 되었음을 나타냅니다. 보다 구체적인 마우스 정보 (단추 클릭 횟수, 휠이 회전 또는 위치)에 필요한 경우 사용 합니다 <xref:System.Windows.Forms.ToolStripItem.MouseDown> 및 <xref:System.Windows.Forms.ToolStripItem.MouseUp> 전달 하는 이벤트를 <xref:System.Windows.Forms.MouseEventArgs> 이벤트 처리기에 합니다.  
  
 두 번 클릭은 운영 체제의 마우스 설정에 따라 결정 됩니다. 천천히 두 번 클릭하는 것이 아닌 두 번 클릭(double-click)으로 간주될 수 있도록 마우스 단추 클릭 간격을 설정할 수 있습니다. <xref:System.Windows.Forms.ToolStripItem.Click> 컨트롤을 두 번 클릭할 때마다 이벤트가 발생 합니다. 예를 들어, 두 명의 이벤트 처리기에 대 한 경우는 <xref:System.Windows.Forms.ToolStripItem.Click> 및 <xref:System.Windows.Forms.ToolStripItem.DoubleClick> 이벤트를 <xref:System.Windows.Forms.Form>의 <xref:System.Windows.Forms.ToolStripItem.Click> 및 <xref:System.Windows.Forms.ToolStripItem.DoubleClick> 이벤트가 폼을 두 번 클릭 하 고 두 메서드 모두 호출 됩니다. 항목을 두 번 클릭 하는 경우를 지원 하지 않는 합니다 <xref:System.Windows.Forms.ToolStripItem.DoubleClick> 이벤트는 <xref:System.Windows.Forms.ToolStripItem.Click> 이벤트가 두 번 발생할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Text%2A>, <xref:System.Windows.Forms.ToolStripItem.Overflow%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.TextDirection%2A> 속성 및 처리를 <xref:System.Windows.Forms.ToolStripItem.Click> 이벤트. 이 예제를 실행 하려면 다음 코드를 포함 하는 형식으로 붙여넣습니다를 <xref:System.Windows.Forms.ToolStrip> 라는 `movingToolStrip` 호출 `InitializeMovingToolStrip` 폼의 생성자에서 또는 `Load` 이벤트 처리기입니다.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ContentRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ContentRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ContentRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ContentRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.ToolStripItem.ContentRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>배경 테두리를 덮어쓰기 않고 <see cref="T:System.Windows.Forms.ToolStripItem" /> 안에 텍스트와 아이콘 같은 내용을 배치할 수 있는 영역을 가져옵니다.</summary>
        <value>테두리를 제외하고 <see cref="T:System.Drawing.Rectangle" /> 내용의 위치와 크기를 나타내는 정수 네 개가 포함된 <see cref="T:System.Windows.Forms.ToolStripItem" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Forms.ToolStripItem.ContentRectangle%2A> 의 사용자 지정 그리기를 수행 하는 속성을 <xref:System.Windows.Forms.ToolStripItem>.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.ContentRectangle%2A> 속성 사용자 지정 렌더링 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#13)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="toolStripItem.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />에 대해 접근성 개체를 새로 만듭니다.</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" />에 대한 새 <see cref="T:System.Windows.Forms.ToolStripItem" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAutoToolTip">
      <MemberSignature Language="C#" Value="protected virtual bool DefaultAutoToolTip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultAutoToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DefaultAutoToolTip" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultAutoToolTip As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DefaultAutoToolTip { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAutoToolTip : bool" Usage="System.Windows.Forms.ToolStripItem.DefaultAutoToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>기본값으로 정의된 <see cref="T:System.Windows.Forms.ToolTip" />을 표시할지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>모든 경우에 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDisplayStyle">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.ToolStripItemDisplayStyle DefaultDisplayStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemDisplayStyle DefaultDisplayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DefaultDisplayStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultDisplayStyle As ToolStripItemDisplayStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ToolStripItemDisplayStyle DefaultDisplayStyle { System::Windows::Forms::ToolStripItemDisplayStyle get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultDisplayStyle : System.Windows.Forms.ToolStripItemDisplayStyle" Usage="System.Windows.Forms.ToolStripItem.DefaultDisplayStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemDisplayStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />에 표시되는 대상을 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripItemDisplayStyle" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.ToolStripItemDisplayStyle.ImageAndText" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMargin">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Forms.Padding DefaultMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DefaultMargin" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property DefaultMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Forms::Padding DefaultMargin { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMargin : System.Windows.Forms.Padding" Usage="System.Windows.Forms.ToolStripItem.DefaultMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 기본 여백을 가져옵니다.</summary>
        <value>여백을 나타내는 <see cref="T:System.Windows.Forms.Padding" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 된 <xref:System.Windows.Forms.ToolStripItem.DefaultMargin%2A> 속성의 기본 여백을 구성 하는 <xref:System.Windows.Forms.ToolStripItem>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPadding">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Padding DefaultPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultPadding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DefaultPadding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultPadding As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultPadding { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPadding : System.Windows.Forms.Padding" Usage="System.Windows.Forms.ToolStripItem.DefaultPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 내부 간격 특징을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.Padding" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의할 수 있습니다 합니다 <xref:System.Windows.Forms.ToolStripItem.DefaultPadding%2A> 속성의 기본 크기를 구성 하는 <xref:System.Windows.Forms.ToolStripItem>합니다. 생성자에서 크기를 설정 하는 보다 더 효율적입니다는 <xref:System.Windows.Forms.ToolStripItem>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ToolStripItem.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 기본 크기를 가져옵니다.</summary>
        <value><see cref="T:System.Drawing.Size" />의 기본 <see cref="T:System.Windows.Forms.ToolStripItem" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip.DefaultSize%2A> 속성이 나타내는 합니다 <xref:System.Drawing.Size> 의 <xref:System.Windows.Forms.ToolStripItem> 처음 만들어질 때. 경우는 <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> 속성은 `true`의 <xref:System.Windows.Forms.ToolStripItem> 에 따라 자동으로 크기가 <xref:System.Windows.Forms.ToolStrip> 방향입니다. 크기를 수동으로 조정할 수 있습니다 합니다 <xref:System.Windows.Forms.ToolStripItem> 설정 하 여 해당 <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> 속성 값을 `false`입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="P:System.Windows.Forms.ToolStrip.DefaultSize" /> 파생된 클래스에서 속성을는 것이 좋습니다 반환할는 <see cref="T:System.Drawing.Size" /> 전체 구현을 재정의 하는 것이 아니라 원하는 크기를 사용 하 여 개체입니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="DismissWhenClicked">
      <MemberSignature Language="C#" Value="protected internal virtual bool DismissWhenClicked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DismissWhenClicked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DismissWhenClicked" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property DismissWhenClicked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool DismissWhenClicked { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DismissWhenClicked : bool" Usage="System.Windows.Forms.ToolStripItem.DismissWhenClicked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripDropDown" />에 있는 항목을 클릭할 경우 해당 항목을 숨길지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>클릭한 항목을 숨기면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolStripItemDisplayStyle DisplayStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemDisplayStyle DisplayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DisplayStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayStyle As ToolStripItemDisplayStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolStripItemDisplayStyle DisplayStyle { System::Windows::Forms::ToolStripItemDisplayStyle get(); void set(System::Windows::Forms::ToolStripItemDisplayStyle value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayStyle : System.Windows.Forms.ToolStripItemDisplayStyle with get, set" Usage="System.Windows.Forms.ToolStripItem.DisplayStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemDisplayStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />에 텍스트 및 이미지를 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripItemDisplayStyle" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.ToolStripItemDisplayStyle.ImageAndText" /> 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 <xref:System.Windows.Forms.ToolStripItem.DisplayStyle%2A> 원하는 부분만 표시 하는 동안 항목의 텍스트 및 이미지 속성의 값을 설정 합니다. 이 각기 다른 컨텍스트에서 동일한 항목을 표시할 때만 표시 스타일을 변경 하려면 일반적으로 사용 됩니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.DisplayStyle%2A> , 및 <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A> 에 대 한 속성을 <xref:System.Windows.Forms.ToolStripButton>. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripButton> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/cs/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DisplayStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplayStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.DisplayStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DisplayStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayStyleChanged : EventHandler " Usage="member this.DisplayStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStripItem.DisplayStyle" />가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  변경 합니다 <xref:System.Windows.Forms.Control.Enabled%2A> 의 속성을 <xref:System.Windows.Forms.ToolStrip> 발생 하지 않습니다는 <xref:System.Windows.Forms.ToolStripItem.DisplayStyleChanged> 이벤트입니다. 특정 속성 설정 사용 하 여이 이벤트를 발생 시킵니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.DisplayStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.DisplayStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#101](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#101)]
 [!code-vb[System.Windows.Forms.EventExamples#101](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="toolStripItem.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 공용 `Dispose` 메서드 및 <xref:System.Object.Finalize%2A> 메서드. `Dispose` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.  
  
 `disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Windows.Forms.ToolStripItem>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다. 이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. <see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Dock">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DockStyle Dock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DockStyle Dock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Dock" />
      <MemberSignature Language="VB.NET" Value="Public Property Dock As DockStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DockStyle Dock { System::Windows::Forms::DockStyle get(); void set(System::Windows::Forms::DockStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Dock : System.Windows.Forms.DockStyle with get, set" Usage="System.Windows.Forms.ToolStripItem.Dock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DockStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>부모 컨트롤에 도킹된 <see cref="T:System.Windows.Forms.ToolStripItem" /> 테두리를 가져오거나 설정하고 <see cref="T:System.Windows.Forms.ToolStripItem" />이 부모와 함께 크기 조정되는 방법을 확인합니다.</summary>
        <value><see cref="T:System.Windows.Forms.DockStyle" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.DockStyle.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 선형 레이아웃에만이 속성이 적용 됩니다.  
  
 사용 하 여는 <xref:System.Windows.Forms.ToolStripItem.Dock%2A> 속성을 정의 하는 방법을 <xref:System.Windows.Forms.ToolStripItem> 부모 컨트롤의 크기를 조정할 때 자동으로 크기가 조정 됩니다. 예를 들어, 설정 <xref:System.Windows.Forms.ToolStripItem.Dock%2A> 하 <xref:System.Windows.Forms.DockStyle.Left> 하면는 <xref:System.Windows.Forms.ToolStripItem> 부모 컨트롤의 왼쪽된 가장자리에 맞춰지고 및 부모 컨트롤의 크기 조정으로 크기를 조정 하려면. 폼의 z 축 (깊이)에 따라 폼에서 컨트롤의 시각적 계층에는 Z 순서에 컨트롤 도킹 됩니다.  
  
 해당 부모 컨테이너의 한쪽 가장자리에 도킹 될 수 있습니다 또는 모든 가장자리에 도킹 될 수 있습니다 컨트롤과 부모 컨테이너를 입력 합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Windows.Forms.ToolStripItem.Anchor%2A> 고 <xref:System.Windows.Forms.ToolStripItem.Dock%2A> 속성은 함께 사용할 수 없습니다. 한 번에 하나만 설정할 수 있습니다 하 고 우선적으로 마지막으로 설정 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">할당된 값이 <see cref="T:System.Windows.Forms.DockStyle" /> 값 중 하나가 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="DoDragDrop">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects DoDragDrop (object data, System.Windows.Forms.DragDropEffects allowedEffects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DragDropEffects DoDragDrop(object data, valuetype System.Windows.Forms.DragDropEffects allowedEffects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoDragDrop (data As Object, allowedEffects As DragDropEffects) As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DragDropEffects DoDragDrop(System::Object ^ data, System::Windows::Forms::DragDropEffects allowedEffects);" />
      <MemberSignature Language="F#" Value="member this.DoDragDrop : obj * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragDropEffects" Usage="toolStripItem.DoDragDrop (data, allowedEffects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="allowedEffects" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data">끌 개체입니다.</param>
        <param name="allowedEffects">발생할 수 있는 끌기 작업입니다.</param>
        <summary>끌어서 놓기 작업을 시작합니다.</summary>
        <returns><see cref="T:System.Windows.Forms.DragDropEffects" /> 값 중 하나입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 끌기 작업을 다른 프로세스에서 애플리케이션과 상호 작용 해야 하는 경우는 `data` 매개 변수는 관리 되는 기본 클래스 여야 합니다 (같은 <xref:System.String?displayProperty=nameWithType>를 <xref:System.Drawing.Bitmap?displayProperty=nameWithType>, 또는 <xref:System.Drawing.Imaging.Metafile?displayProperty=nameWithType>)를 구현 하는 개체 <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, 또는 개체 구현 하는 <xref:System.Windows.Forms.IDataObject>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목을 마우스로 두 번 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 번 클릭은 운영 체제의 마우스 설정에 따라 결정 됩니다. 천천히 두 번 클릭하는 것이 아닌 두 번 클릭(double-click)으로 간주될 수 있도록 마우스 단추 클릭 간격을 설정할 수 있습니다. <xref:System.Windows.Forms.ToolStripItem.Click> 컨트롤을 두 번 클릭할 때마다 이벤트가 발생 합니다. 예를 들어, 두 명의 이벤트 처리기에 대 한 경우는 <xref:System.Windows.Forms.ToolStripItem.Click> 및 <xref:System.Windows.Forms.ToolStripItem.DoubleClick> 이벤트를 <xref:System.Windows.Forms.Form>의 <xref:System.Windows.Forms.ToolStripItem.Click> 및 <xref:System.Windows.Forms.ToolStripItem.DoubleClick> 이벤트가 폼을 두 번 클릭 하 고 두 메서드 모두 호출 됩니다. 항목을 두 번 클릭 하는 경우를 지원 하지 않는 합니다 <xref:System.Windows.Forms.ToolStripItem.DoubleClick> 이벤트는 <xref:System.Windows.Forms.ToolStripItem.Click> 이벤트가 두 번 발생할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.DoubleClick> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.DoubleClick> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#102](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#102)]
 [!code-vb[System.Windows.Forms.EventExamples#102](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClickEnabled">
      <MemberSignature Language="C#" Value="public bool DoubleClickEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleClickEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.DoubleClickEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DoubleClickEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoubleClickEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleClickEnabled : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.DoubleClickEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스를 두 번 클릭하여 <see cref="T:System.Windows.Forms.ToolStripItem" />을 활성화할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>마우스를 두 번 클릭하여 <see cref="T:System.Windows.Forms.ToolStripItem" />을 활성화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.DragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragDrop;" />
      <MemberSignature Language="F#" Value="member this.DragDrop : System.Windows.Forms.DragEventHandler " Usage="member this.DragDrop : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 항목을 끌어 이 항목에 해당 항목을 놓도록 마우스를 놓을 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.DragEventArgs.X%2A> 및 <xref:System.Windows.Forms.DragEventArgs.Y%2A> 의 속성을 <xref:System.Windows.Forms.DragEventArgs> 클라이언트 좌표가 아닌 화면 좌표에 합니다. 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는 변환 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.DragEventArgs.X%2A> 하 고 <xref:System.Windows.Forms.DragEventArgs.Y%2A> 속성을 클라이언트 <xref:System.Drawing.Point>합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripRenderer> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.GridStrip#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.GridStrip/CS/GridStrip.cs#3)]
 [!code-vb[System.Windows.Forms.ToolStrip.GridStrip#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.GridStrip/VB/GridStrip.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.Forms.DragEventHandler " Usage="member this.DragEnter : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 이 항목의 클라이언트 영역으로 항목을 끌 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.DragEnter> 처음으로 가져왔을 마우스 커서를 항목 위에 끌어서 놓기 작업 중 때 이벤트가 발생 합니다.  
  
 다음 설명 부분을 끌어서 놓기 작업과 관련 된 이벤트가 발생 하는 방법 및 시기를 설명 합니다.  
  
 <xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A> 메서드는 현재 커서 위치에서 항목을 확인 합니다. 유효한 놓기 대상 항목 인지 확인 한 다음 확인 합니다.  
  
 항목이 올바른 놓기 대상인 경우는 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 지정 끌어서 놓기 효과 사용 하 여 이벤트가 발생 합니다. 끌어서 놓기 작업 결과 목록에 대한 자세한 내용은 <xref:System.Windows.Forms.DragDropEffects> 열거형을 참조하십시오.  
  
 마우스 커서 위치, 키보드 상태 및 마우스 단추 상태의 변경 내용은 다음과 같은 방식으로 추적 됩니다.  
  
-   사용자가 창의 외부로 이동하면 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 이벤트가 발생합니다.  
  
-   마우스를 가져가면 다른 항목은 <xref:System.Windows.Forms.ToolStripItem.DragEnter> 발생 하는 해당 컨트롤에 대 한 합니다.  
  
-   마우스가 이동 하지만 동일한 항목을 내에서 유지 하는 경우는 <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트가 발생 합니다.  
  
 키보드 또는 마우스 단추 상태가 변경 될 경우는 <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> 의 값을 기준으로 작업을 취소 하려면 또는 이벤트가 발생 하 고 데이터를 놓을지 끌기를 계속할지 여부를 결정 합니다 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 이벤트의 속성 <xref:System.Windows.Forms.QueryContinueDragEventArgs>합니다.  
  
 경우 값 <xref:System.Windows.Forms.DragAction> 됩니다 <xref:System.Windows.Forms.DragAction.Continue>, <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트는 작업을 계속 하려면 및 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 적절 한 시각적 피드백이 설정 될 수 있도록 새로운 효과 사용 하 여 이벤트가 발생 합니다. 유효한 끌어서 놓기 작업 결과 목록에 대한 자세한 내용은 <xref:System.Windows.Forms.DragDropEffects> 열거형을 참조하십시오.  
  
 합니다 <xref:System.Windows.Forms.ToolStripItem.DragOver> 고 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 이벤트는 쌍을 이루고 있어서 마우스가 놓기 대상을 사용자에 제공 됩니다 대 한 최신 피드백이 마우스 위치를 다음과 같이 합니다.  
  
-   경우 값 <xref:System.Windows.Forms.DragAction> 는 <xref:System.Windows.Forms.DragAction.Drop>놓기 결과 값이 소스로 반환은, 원본 애플리케이션은 원본 데이터에 대해 적절 한 작업을 수행할 수 있도록 예의 경우 데이터 잘라내기 작업이 이동 합니다.  
  
-   경우 값 <xref:System.Windows.Forms.DragAction> 됩니다 <xref:System.Windows.Forms.DragAction.Cancel>는 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 이벤트가 발생 합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Windows.Forms.DragEventArgs.X%2A> 및 <xref:System.Windows.Forms.DragEventArgs.Y%2A> 의 속성을 <xref:System.Windows.Forms.DragEventArgs> 클라이언트 좌표가 아닌 화면 좌표에 합니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는 변환 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.DragEventArgs.X%2A> 하 고 <xref:System.Windows.Forms.DragEventArgs.Y%2A> 속성을 클라이언트 <xref:System.Drawing.Point>합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripRenderer> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.GridStrip#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.GridStrip/CS/GridStrip.cs#3)]
 [!code-vb[System.Windows.Forms.ToolStrip.GridStrip#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.GridStrip/VB/GridStrip.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event EventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : EventHandler " Usage="member this.DragLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 항목을 끌어 마우스 포인터가 이 항목의 클라이언트 영역에서 벗어날 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 현재의 끌어서 놓기 작업을 취소 하는 사용자 또는 사용자가 컨트롤에서 커서를 끌 때 이벤트가 발생 합니다.  
  
 다음 설명 부분을 끌어서 놓기 작업과 관련 된 이벤트가 발생 하는 방법 및 시기를 설명 합니다.  
  
 <xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A> 메서드는 현재 커서 위치에서 항목을 확인 합니다. 유효한 놓기 대상 항목 인지 확인 한 다음 확인 합니다.  
  
 항목이 올바른 놓기 대상인 경우는 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 지정 끌어서 놓기 효과 사용 하 여 이벤트가 발생 합니다. 끌어서 놓기 작업 결과 목록에 대한 자세한 내용은 <xref:System.Windows.Forms.DragDropEffects> 열거형을 참조하십시오.  
  
 마우스 커서 위치, 키보드 상태 및 마우스 단추 상태의 변경 내용은 다음과 같은 방식으로 추적 됩니다.  
  
-   사용자가 창의 외부로 이동하면 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 이벤트가 발생합니다.  
  
-   마우스를 가져가면 다른 항목은 <xref:System.Windows.Forms.ToolStripItem.DragEnter> 발생 하는 해당 컨트롤에 대 한 합니다.  
  
-   마우스가 이동 하지만 동일한 항목을 내에서 유지 하는 경우는 <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트가 발생 합니다.  
  
 키보드 또는 마우스 단추 상태가 변경 될 경우는 <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> 의 값을 기준으로 작업을 취소 하려면 또는 이벤트가 발생 하 고 데이터를 놓을지 끌기를 계속할지 여부를 결정 합니다 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 이벤트의 속성 <xref:System.Windows.Forms.QueryContinueDragEventArgs>합니다.  
  
 경우 값 <xref:System.Windows.Forms.DragAction> 됩니다 <xref:System.Windows.Forms.DragAction.Continue>, <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트는 작업을 계속 하려면 및 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 적절 한 시각적 피드백이 설정 될 수 있도록 새로운 효과 사용 하 여 이벤트가 발생 합니다. 유효한 끌어서 놓기 작업 결과 목록에 대한 자세한 내용은 <xref:System.Windows.Forms.DragDropEffects> 열거형을 참조하십시오.  
  
 합니다 <xref:System.Windows.Forms.ToolStripItem.DragOver> 고 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 이벤트는 쌍을 이루고 있어서 마우스가 놓기 대상을 사용자에 제공 됩니다 대 한 최신 피드백이 마우스 위치를 다음과 같이 합니다.  
  
-   경우 값 <xref:System.Windows.Forms.DragAction> 는 <xref:System.Windows.Forms.DragAction.Drop>놓기 결과 값이 소스로 반환은, 원본 애플리케이션은 원본 데이터에 대해 적절 한 작업을 수행할 수 있도록 예의 경우 데이터 잘라내기 작업이 이동 합니다.  
  
-   경우 값 <xref:System.Windows.Forms.DragAction> 됩니다 <xref:System.Windows.Forms.DragAction.Cancel>는 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 이벤트가 발생 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#106](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#106)]
 [!code-vb[System.Windows.Forms.EventExamples#106](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.Forms.DragEventHandler " Usage="member this.DragOver : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 이 항목의 클라이언트 영역 위로 항목을 끌 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트는 끌어서 놓기 작업 중 컨트롤의 범위 내에서 마우스 커서를 이동 하면 발생 합니다.  
  
 다음 설명 부분을 끌어서 놓기 작업과 관련 된 이벤트가 발생 하는 방법 및 시기를 설명 합니다.  
  
 <xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A> 메서드는 현재 커서 위치에서 항목을 확인 합니다. 유효한 놓기 대상 항목 인지 확인 한 다음 확인 합니다.  
  
 항목이 올바른 놓기 대상인 경우는 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 지정 끌어서 놓기 효과 사용 하 여 이벤트가 발생 합니다. 끌어서 놓기 작업 결과 목록에 대한 자세한 내용은 <xref:System.Windows.Forms.DragDropEffects> 열거형을 참조하십시오.  
  
 마우스 커서 위치, 키보드 상태 및 마우스 단추 상태의 변경 내용은 다음과 같은 방식으로 추적 됩니다.  
  
-   사용자가 창의 외부로 이동하면 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 이벤트가 발생합니다.  
  
-   마우스를 가져가면 다른 항목은 <xref:System.Windows.Forms.ToolStripItem.DragEnter> 발생 하는 해당 컨트롤에 대 한 합니다.  
  
-   마우스가 이동 하지만 동일한 항목을 내에서 유지 하는 경우는 <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트가 발생 합니다.  
  
 키보드 또는 마우스 단추 상태가 변경 될 경우는 <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> 의 값을 기준으로 작업을 취소 하려면 또는 이벤트가 발생 하 고 데이터를 놓을지 끌기를 계속할지 여부를 결정 합니다 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 이벤트의 속성 <xref:System.Windows.Forms.QueryContinueDragEventArgs>합니다.  
  
 경우 값 <xref:System.Windows.Forms.DragAction> 됩니다 <xref:System.Windows.Forms.DragAction.Continue>, <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트는 작업을 계속 하려면 및 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 적절 한 시각적 피드백이 설정 될 수 있도록 새로운 효과 사용 하 여 이벤트가 발생 합니다. 유효한 끌어서 놓기 작업 결과 목록에 대한 자세한 내용은 <xref:System.Windows.Forms.DragDropEffects> 열거형을 참조하십시오.  
  
 합니다 <xref:System.Windows.Forms.ToolStripItem.DragOver> 고 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 이벤트는 쌍을 이루고 있어서 마우스가 놓기 대상을 사용자에 제공 됩니다 대 한 최신 피드백이 마우스 위치를 다음과 같이 합니다.  
  
-   경우 값 <xref:System.Windows.Forms.DragAction> 는 <xref:System.Windows.Forms.DragAction.Drop>놓기 결과 값이 소스로 반환은, 원본 애플리케이션은 원본 데이터에 대해 적절 한 작업을 수행할 수 있도록 예의 경우 데이터 잘라내기 작업이 이동 합니다.  
  
-   경우 값 <xref:System.Windows.Forms.DragAction> 됩니다 <xref:System.Windows.Forms.DragAction.Cancel>는 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 이벤트가 발생 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#105](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#105)]
 [!code-vb[System.Windows.Forms.EventExamples#105](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />의 부모 컨트롤을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripItem" />의 부모 컨트롤을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnabledChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.EnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EnabledChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.EnabledChanged : EventHandler " Usage="member this.EnabledChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStripItem.Enabled" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.ToolStripItem.Enabled%2A> 속성을 프로그래밍 방식으로 수정 하거나 사용자 상호 작용 하 여 변경 됩니다.  
  
> [!NOTE]
>  변경 합니다 <xref:System.Windows.Forms.Control.Enabled%2A> 의 속성을 <xref:System.Windows.Forms.ToolStrip> 발생 하지 않습니다는 <xref:System.Windows.Forms.ToolStripItem.EnabledChanged> 이벤트입니다. 특정 속성 설정 사용 하 여이 이벤트를 발생 시킵니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.EnabledChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.EnabledChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#107](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#107)]
 [!code-vb[System.Windows.Forms.EventExamples#107](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.ToolStripItem.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목에 표시되는 텍스트 글꼴을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Drawing.Font" />에 표시되는 텍스트에 적용되는 <see cref="T:System.Windows.Forms.ToolStripItem" />입니다. 기본값은 <see cref="P:System.Windows.Forms.Control.DefaultFont" /> 속성 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Forms.ToolStripItem.Font%2A> 속성을 가져오거나 하는 글꼴을 설정 하는 기본적으로 그리기 및 텍스트에 대 한는 <xref:System.Windows.Forms.ToolStripItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStripItem.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 전경색을 가져오거나 설정합니다.</summary>
        <value>항목의 전경 <see cref="T:System.Drawing.Color" />입니다. 기본값은 <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> 속성 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.ForeColor%2A> 속성 사용자 지정 렌더링 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStripItem.ForeColor" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 <xref:System.Windows.Forms.ToolStripItem.ForeColor%2A> 속성 중 하나를 프로그래밍 방식으로 수정 하거나 상호 작용을 통해 변경 됩니다.  
  
> [!NOTE]
>  변경 합니다 <xref:System.Windows.Forms.Control.Enabled%2A> 의 속성을 <xref:System.Windows.Forms.ToolStrip> 발생 하지 않습니다는 <xref:System.Windows.Forms.ToolStripItem.ForeColorChanged> 이벤트입니다. 특정 속성 설정 사용 하 여이 이벤트를 발생 시킵니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.ForeColorChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.ForeColorChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#108](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#108)]
 [!code-vb[System.Windows.Forms.EventExamples#108](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentParent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStrip GetCurrentParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ToolStrip GetCurrentParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.GetCurrentParent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentParent () As ToolStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ToolStrip ^ GetCurrentParent();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentParent : unit -&gt; System.Windows.Forms.ToolStrip" Usage="toolStripItem.GetCurrentParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStrip</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Windows.Forms.ToolStrip" />의 컨테이너인 <see cref="T:System.Windows.Forms.ToolStripItem" />을 검색합니다.</summary>
        <returns>현재 <see cref="T:System.Windows.Forms.ToolStrip" />의 컨테이너인 <see cref="T:System.Windows.Forms.ToolStripItem" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.GetCurrentParent%2A> 에 대 한 읽기 전용 접근자는 <xref:System.Windows.Forms.ToolStripItem.Parent%2A> 속성입니다. 부모와 달리 소유자에서 부모 나타냅니다는 반환 된 현재 <xref:System.Windows.Forms.ToolStrip> 항목이 표시 되는는 오버플로 영역에 있을 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size GetPreferredSize (System.Drawing.Size constrainingSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size constrainingSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredSize (constrainingSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Size GetPreferredSize(System::Drawing::Size constrainingSize);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size&#xA;override this.GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size" Usage="toolStripItem.GetPreferredSize constrainingSize" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.Layout.IArrangedElement.GetPreferredSize(System.Drawing.Size)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constrainingSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="constrainingSize">컨트롤의 사용자 지정 크기 영역입니다.</param>
        <summary>컨트롤을 맞출 사각형 영역의 크기를 가져옵니다.</summary>
        <returns>영역의 너비와 높이를 나타내는 정렬된 <see cref="T:System.Drawing.Size" /> 쌍입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>끌기 작업을 수행하는 동안 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.GiveFeedback> 는 끌어서 놓기 작업이 시작 될 때 이벤트가 발생 합니다. <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트를 사용 하면 끌어서 놓기 작업 중 사용자의 시각적 피드백을 제공 하기 위해 마우스 포인터의 모양을 수정 하는 끌기 이벤트의 소스입니다.  
  
 다음 설명 부분을 끌어서 놓기 작업과 관련 된 이벤트가 발생 하는 방법 및 시기를 설명 합니다.  
  
 <xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A> 메서드는 현재 커서 위치에서 항목을 확인 합니다. 유효한 놓기 대상 항목 인지 확인 한 다음 확인 합니다.  
  
 항목이 올바른 놓기 대상인 경우는 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 지정 끌어서 놓기 효과 사용 하 여 이벤트가 발생 합니다. 끌어서 놓기 작업 결과 목록에 대한 자세한 내용은 <xref:System.Windows.Forms.DragDropEffects> 열거형을 참조하십시오.  
  
 마우스 커서 위치, 키보드 상태 및 마우스 단추 상태의 변경 내용은 다음과 같은 방식으로 추적 됩니다.  
  
-   사용자가 창의 외부로 이동하면 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 이벤트가 발생합니다.  
  
-   마우스를 가져가면 다른 항목은 <xref:System.Windows.Forms.ToolStripItem.DragEnter> 발생 하는 해당 컨트롤에 대 한 합니다.  
  
-   마우스가 이동 하지만 동일한 항목을 내에서 유지 하는 경우는 <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트가 발생 합니다.  
  
 키보드 또는 마우스 단추 상태가 변경 될 경우는 <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> 의 값을 기준으로 작업을 취소 하려면 또는 이벤트가 발생 하 고 데이터를 놓을지 끌기를 계속할지 여부를 결정 합니다 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 이벤트의 속성 <xref:System.Windows.Forms.QueryContinueDragEventArgs>합니다.  
  
 경우 값 <xref:System.Windows.Forms.DragAction> 됩니다 <xref:System.Windows.Forms.DragAction.Continue>, <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트는 작업을 계속 하려면 및 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 적절 한 시각적 피드백이 설정 될 수 있도록 새로운 효과 사용 하 여 이벤트가 발생 합니다. 유효한 끌어서 놓기 작업 결과 목록에 대한 자세한 내용은 <xref:System.Windows.Forms.DragDropEffects> 열거형을 참조하십시오.  
  
 합니다 <xref:System.Windows.Forms.ToolStripItem.DragOver> 고 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 이벤트는 쌍을 이루고 있어서 마우스가 놓기 대상을 사용자에 제공 됩니다 대 한 최신 피드백이 마우스 위치를 다음과 같이 합니다.  
  
-   경우 값 <xref:System.Windows.Forms.DragAction> 는 <xref:System.Windows.Forms.DragAction.Drop>놓기 결과 값이 소스로 반환은, 원본 애플리케이션은 원본 데이터에 대해 적절 한 작업을 수행할 수 있도록 예의 경우 데이터 잘라내기 작업이 이동 합니다.  
  
-   경우 값 <xref:System.Windows.Forms.DragAction> 됩니다 <xref:System.Windows.Forms.DragAction.Cancel>는 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 이벤트가 발생 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#109](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#109)]
 [!code-vb[System.Windows.Forms.EventExamples#109](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#109)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Forms.ToolStripItem.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />의 높이(픽셀)를 가져오거나 설정합니다.</summary>
        <value>높이(픽셀)를 나타내는 <see cref="T:System.Int32" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image Image { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Image" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Image : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ToolStripItem.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />에 표시되는 이미지를 가져오거나 설정합니다.</summary>
        <value>표시할 <see cref="T:System.Drawing.Image" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>를 <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> 다양 한 이미지 처리와 관련 된 속성입니다. 이미지를 사용 하 여 <xref:System.Windows.Forms.ToolStrip> 컨트롤을 직접 이러한 속성을 설정 하 여 또는 실행 한 번만 설정 하 여 <xref:System.Windows.Forms.ToolStrip.ImageList%2A> 속성입니다.  
  
 둘 다에서 속성의 상호 작용에 의해 결정 됩니다 이미지 크기 조정 <xref:System.Windows.Forms.ToolStrip> 및 <xref:System.Windows.Forms.ToolStripItem>다음과 같이 합니다.  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> 이미지의 조합으로 결정 된 최종 이미지의 소수 자릿수 <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> 설정 및 컨테이너의 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 설정 합니다.  
  
    -   경우 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 됩니다 `true` (기본값) 및 <xref:System.Windows.Forms.ToolStripItemImageScaling> 됩니다 <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, 이미지 크기는 조정 되지 않습니다 및 <xref:System.Windows.Forms.ToolStrip> 크기는 가장 큰 항목 또는 지정 된 최소 크기의 합니다.  
  
    -   경우 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 됩니다 `false` 및 <xref:System.Windows.Forms.ToolStripItemImageScaling> 은 <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, 모두 이미지도 <xref:System.Windows.Forms.ToolStrip> 발생 크기 조정 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.DisplayStyle%2A> , 및 <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A> 에 대 한 속성을 <xref:System.Windows.Forms.ToolStripButton>. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripButton> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/cs/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment ImageAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment ImageAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ImageAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment ImageAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.ImageAlign : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.ToolStripItem.ImageAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />의 이미지 맞춤을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Drawing.ContentAlignment" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Drawing.ContentAlignment.MiddleLeft" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A> 가져오거나 이미지 맞춤을 설정 하는 속성을 <xref:System.Windows.Forms.ToolStripItem>입니다. 사용 합니다 <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A> 가져오거나 텍스트 맞춤을 설정 하는 속성을 <xref:System.Windows.Forms.ToolStripItem>입니다.  
  
 합니다 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>를 <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> 다양 한 이미지 처리와 관련 된 속성입니다. 이미지를 사용 하 여 <xref:System.Windows.Forms.ToolStrip> 컨트롤을 직접 이러한 속성을 설정 하 여 또는 실행 한 번만 설정 하 여 <xref:System.Windows.Forms.ToolStrip.ImageList%2A> 속성입니다.  
  
 둘 다에서 속성의 상호 작용에 의해 결정 됩니다 이미지 크기 조정 <xref:System.Windows.Forms.ToolStrip> 및 <xref:System.Windows.Forms.ToolStripItem>다음과 같이 합니다.  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> 이미지의 조합으로 결정 된 최종 이미지의 소수 자릿수 <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> 설정 및 컨테이너의 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 설정 합니다.  
  
    -   경우 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 됩니다 `true` (기본값) 및 <xref:System.Windows.Forms.ToolStripItemImageScaling> 됩니다 <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, 이미지 크기는 조정 되지 않습니다 및 <xref:System.Windows.Forms.ToolStrip> 크기는 가장 큰 항목 또는 지정 된 최소 크기의 합니다.  
  
    -   경우 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 됩니다 `false` 및 <xref:System.Windows.Forms.ToolStripItemImageScaling> 은 <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, 모두 이미지도 <xref:System.Windows.Forms.ToolStrip> 발생 크기 조정 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.DisplayStyle%2A> , 및 <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A> 에 대 한 속성을 <xref:System.Windows.Forms.ToolStripButton>. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripButton> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/cs/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">할당된 값이 <see cref="T:System.Drawing.ContentAlignment" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.TextAlign" />
        <altmember cref="T:System.Windows.Forms.ToolStripLabel" />
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.ToolStripItem.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ToolStripImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("Owner.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ToolStripImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목에 표시되는 이미지의 인덱스 값을 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Windows.Forms.ToolStrip.ImageList" />에서 항목에 표시되는 이미지의 인덱스(0부터 시작)입니다. 기본값은 빈 이미지 목록을 나타내는 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A> 속성 이미지 목록의 이미지의 위치를 지정 합니다. <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A> 속성 자체 이미지를 지정 합니다.  
  
 합니다 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>를 <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> 다양 한 이미지 처리와 관련 된 속성입니다. 이미지를 사용 하 여 <xref:System.Windows.Forms.ToolStrip> 컨트롤을 직접 이러한 속성을 설정 하 여 또는 실행 한 번만 설정 하 여 <xref:System.Windows.Forms.ToolStrip.ImageList%2A> 속성입니다.  
  
 둘 다에서 속성의 상호 작용에 의해 결정 됩니다 이미지 크기 조정 <xref:System.Windows.Forms.ToolStrip> 및 <xref:System.Windows.Forms.ToolStripItem>다음과 같이 합니다.  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> 이미지의 조합으로 결정 된 최종 이미지의 소수 자릿수 <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> 설정 및 컨테이너의 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 설정 합니다.  
  
    -   경우 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 됩니다 `true` (기본값) 및 <xref:System.Windows.Forms.ToolStripItemImageScaling> 됩니다 <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, 이미지 크기는 조정 되지 않습니다 및 <xref:System.Windows.Forms.ToolStrip> 크기는 가장 큰 항목 또는 지정 된 최소 크기의 합니다.  
  
    -   경우 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 됩니다 `false` 및 <xref:System.Windows.Forms.ToolStripItemImageScaling> 은 <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, 모두 이미지도 <xref:System.Windows.Forms.ToolStrip> 발생 크기 조정 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">지정된 값이 -1보다 작습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.ToolStripItem.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ToolStripImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("Owner.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ToolStripImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStrip.ImageList" />에 표시되는 <see cref="T:System.Windows.Forms.ToolStripItem" />에서 이미지의 키 접근자를 가져오거나 설정합니다.</summary>
        <value>해당 이미지의 키를 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A> 속성 이미지 목록의 이미지의 위치를 지정 합니다. <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A> 속성 자체 이미지를 지정 합니다.  
  
 합니다 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>를 <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> 다양 한 이미지 처리와 관련 된 속성입니다. 이미지를 사용 하 여 <xref:System.Windows.Forms.ToolStrip> 컨트롤을 직접 이러한 속성을 설정 하 여 또는 실행 한 번만 설정 하 여 <xref:System.Windows.Forms.ToolStrip.ImageList%2A> 속성입니다.  
  
 둘 다에서 속성의 상호 작용에 의해 결정 됩니다 이미지 크기 조정 <xref:System.Windows.Forms.ToolStrip> 및 <xref:System.Windows.Forms.ToolStripItem>다음과 같이 합니다.  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> 이미지의 조합으로 결정 된 최종 이미지의 소수 자릿수 <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> 설정 및 컨테이너의 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 설정 합니다.  
  
    -   경우 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 됩니다 `true` (기본값) 및 <xref:System.Windows.Forms.ToolStripItemImageScaling> 됩니다 <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, 이미지 크기는 조정 되지 않습니다 및 <xref:System.Windows.Forms.ToolStrip> 크기는 가장 큰 항목 또는 지정 된 최소 크기의 합니다.  
  
    -   경우 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 됩니다 `false` 및 <xref:System.Windows.Forms.ToolStripItemImageScaling> 은 <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, 모두 이미지도 <xref:System.Windows.Forms.ToolStrip> 발생 크기 조정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A> 속성입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageScaling">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemImageScaling ImageScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemImageScaling ImageScaling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ImageScaling" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageScaling As ToolStripItemImageScaling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemImageScaling ImageScaling { System::Windows::Forms::ToolStripItemImageScaling get(); void set(System::Windows::Forms::ToolStripItemImageScaling value); };" />
      <MemberSignature Language="F#" Value="member this.ImageScaling : System.Windows.Forms.ToolStripItemImageScaling with get, set" Usage="System.Windows.Forms.ToolStripItem.ImageScaling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemImageScaling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />에 있는 이미지의 크기가 컨테이너에 맞게 자동으로 조정되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripItemImageScaling" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>를 <xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageKey%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> 다양 한 이미지 처리와 관련 된 속성입니다. 이미지를 사용 하 여 <xref:System.Windows.Forms.ToolStrip> 컨트롤을 직접 이러한 속성을 설정 하 여 또는 실행 한 번만 설정 하 여 <xref:System.Windows.Forms.ToolStrip.ImageList%2A> 속성입니다.  
  
 둘 다에서 속성의 상호 작용에 의해 결정 됩니다 이미지 크기 조정 <xref:System.Windows.Forms.ToolStrip> 및 <xref:System.Windows.Forms.ToolStripItem>다음과 같이 합니다.  
  
-   <xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A> 이미지의 조합으로 결정 된 최종 이미지의 소수 자릿수 <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A> 설정 및 컨테이너의 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 설정 합니다.  
  
    -   경우 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 됩니다 `true` (기본값) 및 <xref:System.Windows.Forms.ToolStripItemImageScaling> 됩니다 <xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit>, 이미지 크기는 조정 되지 않습니다 및 <xref:System.Windows.Forms.ToolStrip> 크기는 가장 큰 항목 또는 지정 된 최소 크기의 합니다.  
  
    -   경우 <xref:System.Windows.Forms.ToolStrip.AutoSize%2A> 됩니다 `false` 및 <xref:System.Windows.Forms.ToolStripItemImageScaling> 은 <xref:System.Windows.Forms.ToolStripItemImageScaling.None>, 모두 이미지도 <xref:System.Windows.Forms.ToolStrip> 발생 크기 조정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.ImageTransparentColor%2A> 에 대 한는 <xref:System.Windows.Forms.ToolStripItem>합니다. 또한 설정 항목을 사용자 지정 도구 설명을 표시 하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#20)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ImageTransparentColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ToolStripItem.ImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" /> 이미지에서 투명하게 처리할 색을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Drawing.Color" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.ImageTransparentColor%2A> 에 대 한는 <xref:System.Windows.Forms.ToolStripItem>합니다. 또한 설정 항목을 사용자 지정 도구 설명을 표시 하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#20)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />의 일부 또는 전체 화면을 무효화하고 다시 그립니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="toolStripItem.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />의 전체 화면을 무효화하고 다시 그립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Invalidate%2A> 사용자 지정 렌더링 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#15)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (r As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle r);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="toolStripItem.Invalidate r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="r">무효화할 영역을 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</param>
        <summary>다음 그리기 작업에서 다시 그릴 영역인 <see cref="T:System.Windows.Forms.ToolStripItem" />의 업데이트 영역에 <see cref="T:System.Windows.Forms.ToolStripItem" />의 지정된 영역을 추가하여 무효화하고 <see cref="T:System.Windows.Forms.ToolStripItem" />에 그리기 메시지를 보냅니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.Forms.ToolStripItem.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체가 삭제되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤이 삭제되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputChar">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsInputChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool IsInputChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.IsInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function IsInputChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool IsInputChar(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member IsInputChar : char -&gt; bool&#xA;override this.IsInputChar : char -&gt; bool" Usage="toolStripItem.IsInputChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">테스트할 문자입니다.</param>
        <summary>문자가 항목에서 인식하는 입력 문자인지 여부를 확인합니다.</summary>
        <returns>문자를 전처리하지 않고 항목에 직접 보내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 입력된 문자를 전처리 또는 직접 전송 여부를 결정 하기 위해 창 메시지 전처리 중에이 메서드는 <xref:System.Windows.Forms.ToolStripItem>합니다. 경우는 <xref:System.Windows.Forms.Control.IsInputChar%2A> 메서드가 반환 `true`, 지정된 된 문자에 직접 전송 되는 <xref:System.Windows.Forms.ToolStripItem>. 그러나 메서드가 반환 하는 경우 `false`, 문자를 전처리 되 고 전송만 <xref:System.Windows.Forms.ToolStripItem> 전처리 단계에서 사용 하지 않은 경우. 문자의 전처리 다른 컨트롤의 니모닉 문자 인지 확인이 포함 됩니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">이 메서드를 호출 하는 클래스 상속을 위한 모든 창입니다. 연관 된 열거형:는 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> 값 <see cref="T:System.Security.Permissions.UIPermissionWindow" /></permission>
        <altmember cref="M:System.Windows.Forms.ToolStripItem.IsInputKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member IsInputKey : System.Windows.Forms.Keys -&gt; bool&#xA;override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="toolStripItem.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</param>
        <summary>지정된 키가 일반 입력 키인지 또는 전처리를 필요로 하는 특수 키인지 여부를 확인합니다.</summary>
        <returns>지정된 키가 일반 입력 키이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출을 <xref:System.Windows.Forms.Control.IsInputChar%2A> 지정된 된 키에 직접 전송 되어야 하는 일반 입력된 키인지 되는지 확인 하려면 창 메시지를 전처리 하는 동안 메서드는 <xref:System.Windows.Forms.ToolStripItem> 또는 특수 키 (예: PAGE UP, PAGE DOWN, ENTER, ESC, 탭 또는 화살표 키)는 전처리 될 해야 합니다. 후자의 경우에 키가 전송 된 <xref:System.Windows.Forms.ToolStripItem> 전처리 단계에서 사용 하지 않은 경우에 합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">이 메서드를 호출 하는 클래스 상속을 위한 모든 창입니다. 연관 된 열거형:는 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> 값 <see cref="T:System.Security.Permissions.UIPermissionWindow" /></permission>
        <altmember cref="T:System.Windows.Forms.Keys" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnDropDown">
      <MemberSignature Language="C#" Value="public bool IsOnDropDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnDropDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.IsOnDropDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOnDropDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOnDropDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOnDropDown : bool" Usage="System.Windows.Forms.ToolStripItem.IsOnDropDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Windows.Forms.Control" />의 컨테이너가 <see cref="T:System.Windows.Forms.ToolStripDropDown" />인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>현재 <see cref="T:System.Windows.Forms.Control" />의 컨테이너가 <see cref="T:System.Windows.Forms.ToolStripDropDown" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.IsOnDropDown%2A> 속성입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOnOverflow">
      <MemberSignature Language="C#" Value="public bool IsOnOverflow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnOverflow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.IsOnOverflow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOnOverflow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOnOverflow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOnOverflow : bool" Usage="System.Windows.Forms.ToolStripItem.IsOnOverflow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStripItem.Placement" /> 속성이 <see cref="F:System.Windows.Forms.ToolStripItemPlacement.Overflow" />로 설정되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="P:System.Windows.Forms.ToolStripItem.Placement" /> 속성이 <see cref="F:System.Windows.Forms.ToolStripItemPlacement.Overflow" />로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />의 위치가 업데이트되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트가 발생 하는 경우는 <xref:System.Windows.Forms.ToolStripItem> 프로그래밍 방식으로 수정 하거나 상호 작용을 통해 업데이트 됩니다.  
  
> [!NOTE]
>  변경 합니다 <xref:System.Windows.Forms.Control.Enabled%2A> 의 속성을 <xref:System.Windows.Forms.ToolStrip> 발생 하지 않습니다는 <xref:System.Windows.Forms.ToolStripItem.LocationChanged> 이벤트입니다. 특정 속성 설정 사용 하 여이 이벤트를 발생 시킵니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.LocationChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.LocationChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#110](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#110)]
 [!code-vb[System.Windows.Forms.EventExamples#110](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Margin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ToolStripItem.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목과 인접 항목 사이의 간격을 가져오거나 설정합니다.</summary>
        <value>항목과 인접 항목 사이의 간격을 나타내는 <see cref="T:System.Windows.Forms.Padding" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeAction">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MergeAction MergeAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MergeAction MergeAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.MergeAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeAction As MergeAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MergeAction MergeAction { System::Windows::Forms::MergeAction get(); void set(System::Windows::Forms::MergeAction value); };" />
      <MemberSignature Language="F#" Value="member this.MergeAction : System.Windows.Forms.MergeAction with get, set" Usage="System.Windows.Forms.ToolStripItem.MergeAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MergeAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>자식 메뉴가 부모 메뉴에 병합되는 방법을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.MergeAction" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.MergeAction.MatchOnly" />입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">할당된 값이 <see cref="T:System.Windows.Forms.MergeAction" /> 값 중 하나가 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="MergeIndex">
      <MemberSignature Language="C#" Value="public int MergeIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MergeIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.MergeIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MergeIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MergeIndex : int with get, set" Usage="System.Windows.Forms.ToolStripItem.MergeIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Windows.Forms.ToolStrip" /> 안에 병합된 항목의 위치를 가져오거나 설정합니다.</summary>
        <value>일치하는 값이 있으면 병합된 항목의 인덱스를 나타내는 정수이고, 그렇지 않으면 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Forms.ToolStripItem.MergeIndex%2A> 속성을 get 또는 set의 인덱스를 <xref:System.Windows.Forms.ToolStripMenuItem> 메뉴 병합 작업에 액세스할 수 있도록 합니다.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Windows.Forms.ToolStripItem.MergeIndex%2A> 병합 된 삽입할 속성 <xref:System.Windows.Forms.ToolStripMenuItem> 특정 위치에 있습니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripManager> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.ContextMenuStripMerge#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.ContextMenuStripMerge#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDown : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터가 항목 위에 있을 때 마우스 단추를 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 마우스 이벤트는 다음 순서대로 발생합니다.  
  
1.  <xref:System.Windows.Forms.ToolStripItem.MouseEnter>  
  
2.  <xref:System.Windows.Forms.ToolStripItem.MouseMove>  
  
3.  <xref:System.Windows.Forms.ToolStripItem.MouseHover> 또는 <xref:System.Windows.Forms.ToolStripItem.MouseDown>  
  
4.  <xref:System.Windows.Forms.ToolStripItem.MouseUp>  
  
5.  <xref:System.Windows.Forms.ToolStripItem.MouseLeave>  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.MouseDown> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.MouseDown> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#111](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#111)]
 [!code-vb[System.Windows.Forms.EventExamples#111](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#111)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseMove" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseHover" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseUp" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event EventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : EventHandler " Usage="member this.MouseEnter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터가 항목에 진입하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 마우스 이벤트는 다음 순서대로 발생합니다.  
  
1.  <xref:System.Windows.Forms.ToolStripItem.MouseEnter>  
  
2.  <xref:System.Windows.Forms.ToolStripItem.MouseMove>  
  
3.  <xref:System.Windows.Forms.ToolStripItem.MouseHover> 또는 <xref:System.Windows.Forms.ToolStripItem.MouseDown>  
  
4.  <xref:System.Windows.Forms.ToolStripItem.MouseUp>  
  
5.  <xref:System.Windows.Forms.ToolStripItem.MouseLeave>  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.MouseEnter> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.MouseEnter> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#112](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#112)]
 [!code-vb[System.Windows.Forms.EventExamples#112](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#112)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseMove" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseHover" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseDown" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseUp" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseHover">
      <MemberSignature Language="C#" Value="public event EventHandler MouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.MouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseHover As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseHover;" />
      <MemberSignature Language="F#" Value="member this.MouseHover : EventHandler " Usage="member this.MouseHover : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터로 항목을 가리키면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 마우스 이벤트는 다음 순서대로 발생합니다.  
  
1.  <xref:System.Windows.Forms.ToolStripItem.MouseEnter>  
  
2.  <xref:System.Windows.Forms.ToolStripItem.MouseMove>  
  
3.  <xref:System.Windows.Forms.ToolStripItem.MouseHover> 또는 <xref:System.Windows.Forms.ToolStripItem.MouseDown>  
  
4.  <xref:System.Windows.Forms.ToolStripItem.MouseUp>  
  
5.  <xref:System.Windows.Forms.ToolStripItem.MouseLeave>  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.MouseHover> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.MouseHover> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#114](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#114)]
 [!code-vb[System.Windows.Forms.EventExamples#114](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#114)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseMove" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseDown" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseUp" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event EventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : EventHandler " Usage="member this.MouseLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터가 항목을 벗어나면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 마우스 이벤트는 다음 순서대로 발생합니다.  
  
1.  <xref:System.Windows.Forms.ToolStripItem.MouseEnter>  
  
2.  <xref:System.Windows.Forms.ToolStripItem.MouseMove>  
  
3.  <xref:System.Windows.Forms.ToolStripItem.MouseHover> 또는 <xref:System.Windows.Forms.ToolStripItem.MouseDown>  
  
4.  <xref:System.Windows.Forms.ToolStripItem.MouseUp>  
  
5.  <xref:System.Windows.Forms.ToolStripItem.MouseLeave>  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.MouseLeave> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.MouseLeave> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#113](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#113)]
 [!code-vb[System.Windows.Forms.EventExamples#113](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#113)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseMove" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseHover" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseDown" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseUp" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터를 항목 위로 이동하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 마우스 이벤트는 다음 순서대로 발생합니다.  
  
1.  <xref:System.Windows.Forms.ToolStripItem.MouseEnter>  
  
2.  <xref:System.Windows.Forms.ToolStripItem.MouseMove>  
  
3.  <xref:System.Windows.Forms.ToolStripItem.MouseHover> 또는 <xref:System.Windows.Forms.ToolStripItem.MouseDown>  
  
4.  <xref:System.Windows.Forms.ToolStripItem.MouseUp>  
  
5.  <xref:System.Windows.Forms.ToolStripItem.MouseLeave>  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.MouseMove> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.MouseMove> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#115](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#115)]
 [!code-vb[System.Windows.Forms.EventExamples#115](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#115)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseHover" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseDown" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseUp" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseUp : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터가 항목 위에 있을 때 마우스 단추를 놓으면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 마우스 이벤트는 다음 순서대로 발생합니다.  
  
1.  <xref:System.Windows.Forms.ToolStripItem.MouseEnter>  
  
2.  <xref:System.Windows.Forms.ToolStripItem.MouseMove>  
  
3.  <xref:System.Windows.Forms.ToolStripItem.MouseHover> 또는 <xref:System.Windows.Forms.ToolStripItem.MouseDown>  
  
4.  <xref:System.Windows.Forms.ToolStripItem.MouseUp>  
  
5.  <xref:System.Windows.Forms.ToolStripItem.MouseLeave>  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.MouseUp> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.MouseUp> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#116](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#116)]
 [!code-vb[System.Windows.Forms.EventExamples#116](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#116)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseMove" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseHover" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseDown" />
        <altmember cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.ToolStripItem.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 이름을 가져오거나 설정합니다.</summary>
        <value>이름을 나타내는 문자열입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Forms.ToolStripItem.Name%2A> 속성을 키로 사용할 수 있습니다는 <xref:System.Windows.Forms.ToolStripItemCollection>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAvailableChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAvailableChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAvailableChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnAvailableChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAvailableChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAvailableChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAvailableChanged : EventArgs -&gt; unit&#xA;override this.OnAvailableChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnAvailableChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>AvailableChanged 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnAvailableChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripItem.OnAvailableChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.ToolStripItem.OnAvailableChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.BackColorChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnBackColorChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnBackColorChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnBackColorChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBoundsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBoundsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBoundsChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnBoundsChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBoundsChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBoundsChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnBoundsChanged : unit -&gt; unit&#xA;override this.OnBoundsChanged : unit -&gt; unit" Usage="toolStripItem.OnBoundsChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStripItem.Bounds" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnBoundsChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnBoundsChanged" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnBoundsChanged" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="toolStripItem.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.Click" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.OnClick%2A> 메서드. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnClick(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnClick(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnDisplayStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayStyleChanged : EventArgs -&gt; unit&#xA;override this.OnDisplayStyleChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnDisplayStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.DisplayStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnDisplayStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnDisplayStyleChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnDisplayStyleChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoubleClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoubleClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoubleClick : EventArgs -&gt; unit&#xA;override this.OnDoubleClick : EventArgs -&gt; unit" Usage="toolStripItem.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.DoubleClick" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnDoubleClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.OnDoubleClick%2A> 메서드. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#14)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnDoubleClick(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnDoubleClick(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs dragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs dragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (dragEvent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Windows::Forms::DragEventArgs ^ dragEvent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="toolStripItem.OnDragDrop dragEvent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEvent">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.DragDrop" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnDragDrop%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripItem.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.ToolStripItem.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs dragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs dragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (dragEvent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::Forms::DragEventArgs ^ dragEvent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="toolStripItem.OnDragEnter dragEvent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEvent">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.DragEnter" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnDragEnter%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnDragEnter(System.Windows.Forms.DragEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : EventArgs -&gt; unit&#xA;override this.OnDragLeave : EventArgs -&gt; unit" Usage="toolStripItem.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragLeave(System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.DragLeave" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnDragLeave%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnDragLeave(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnDragLeave(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs dragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs dragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (dragEvent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::Forms::DragEventArgs ^ dragEvent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="toolStripItem.OnDragOver dragEvent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEvent">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.DragOver" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnDragOver%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnDragOver(System.Windows.Forms.DragEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnDragOver(System.Windows.Forms.DragEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.EnabledChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnEnabledChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnEnabledChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnEnabledChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFontChanged : EventArgs -&gt; unit&#xA;override this.OnFontChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.FontChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnFontChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnFontChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnFontChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.ForeColorChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnForeColorChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnForeColorChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnForeColorChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs giveFeedbackEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs giveFeedbackEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (giveFeedbackEvent As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ giveFeedbackEvent);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="toolStripItem.OnGiveFeedback giveFeedbackEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="giveFeedbackEvent" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="giveFeedbackEvent">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.GiveFeedback" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnGiveFeedback%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLayout (System.Windows.Forms.LayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLayout (e As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLayout(System::Windows::Forms::LayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit&#xA;override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="toolStripItem.OnLayout e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.LayoutEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Layout" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnLayout%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripItem.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.ToolStripItem.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.LocationChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnLocationChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnLocationChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnLocationChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="toolStripItem.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.MouseDown" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnMouseDown%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : EventArgs -&gt; unit&#xA;override this.OnMouseEnter : EventArgs -&gt; unit" Usage="toolStripItem.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.MouseEnter" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnMouseEnter%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.OnMouseEnter%2A> 메서드. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#15)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseEnter(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseEnter(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : EventArgs -&gt; unit&#xA;override this.OnMouseHover : EventArgs -&gt; unit" Usage="toolStripItem.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.MouseHover" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnMouseHover%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseHover(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseHover(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : EventArgs -&gt; unit&#xA;override this.OnMouseLeave : EventArgs -&gt; unit" Usage="toolStripItem.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.MouseLeave" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnMouseLeave%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.OnMouseLeave%2A> 메서드. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#16)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseLeave(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseLeave(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs mea);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs mea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (mea As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ mea);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="toolStripItem.OnMouseMove mea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mea" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mea">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.MouseMove" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnMouseMove%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="toolStripItem.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.MouseEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.MouseUp" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnMouseUp%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnOwnerChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnOwnerChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOwnerChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnOwnerChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOwnerChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOwnerChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOwnerChanged : EventArgs -&gt; unit&#xA;override this.OnOwnerChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnOwnerChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.OwnerChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnOwnerChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripItem.OnOwnerChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.ToolStripItem.OnOwnerChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnOwnerFontChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnOwnerFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnOwnerFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnOwnerFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnOwnerFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnOwnerFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOwnerFontChanged : EventArgs -&gt; unit&#xA;override this.OnOwnerFontChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnOwnerFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.FontChanged" />의 부모에서 <see cref="P:System.Windows.Forms.ToolStripItem.Font" /> 속성이 변경되면 <see cref="T:System.Windows.Forms.ToolStripItem" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Windows.Forms.ToolStripItem.OnOwnerFontChanged%2A> 상속자에 알리기 위해 메서드를 <xref:System.Windows.Forms.ToolStripItem.Font%2A> 글꼴 변경 된 속성입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnOwnerFontChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripItem.OnOwnerFontChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.ToolStripItem.OnOwnerFontChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="toolStripItem.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.PaintEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.Paint" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnPaint%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.OnPaint%2A> 사용자 지정 렌더링 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnPaint(System.Windows.Forms.PaintEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnPaint(System.Windows.Forms.PaintEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnParentBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnParentBackColorChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnParentBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.BackColorChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnParentBackColorChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnParentBackColorChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnParentBackColorChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentChanged (System.Windows.Forms.ToolStrip oldParent, System.Windows.Forms.ToolStrip newParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentChanged(class System.Windows.Forms.ToolStrip oldParent, class System.Windows.Forms.ToolStrip newParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentChanged (oldParent As ToolStrip, newParent As ToolStrip)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentChanged(System::Windows::Forms::ToolStrip ^ oldParent, System::Windows::Forms::ToolStrip ^ newParent);" />
      <MemberSignature Language="F#" Value="abstract member OnParentChanged : System.Windows.Forms.ToolStrip * System.Windows.Forms.ToolStrip -&gt; unit&#xA;override this.OnParentChanged : System.Windows.Forms.ToolStrip * System.Windows.Forms.ToolStrip -&gt; unit" Usage="toolStripItem.OnParentChanged (oldParent, newParent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="newParent" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="oldParent">항목의 원래 부모입니다.</param>
        <param name="newParent">항목의 새 부모입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.ParentChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnParentChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentEnabledChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnParentEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnParentEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnParentEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnParentEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnParentEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnParentEnabledChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnParentEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>항목 컨테이너의 <see cref="E:System.Windows.Forms.ToolStripItem.EnabledChanged" /> 속성 값이 변경되면 <see cref="P:System.Windows.Forms.ToolStripItem.Enabled" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnParentEnabledChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnParentEnabledChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnParentEnabledChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnParentForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnParentForeColorChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnParentForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.ForeColorChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnParentForeColorChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnParentForeColorChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnParentForeColorChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnParentRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnParentRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnParentRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnParentRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnParentRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnParentRightToLeftChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnParentRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.RightToLeftChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnParentRightToLeftChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnParentRightToLeftChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnParentRightToLeftChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs queryContinueDragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs queryContinueDragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (queryContinueDragEvent As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::QueryContinueDragEventArgs ^ queryContinueDragEvent);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="toolStripItem.OnQueryContinueDrag queryContinueDragEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryContinueDragEvent" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="queryContinueDragEvent">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.QueryContinueDrag" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnQueryContinueDrag%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.RightToLeftChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnRightToLeftChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnRightToLeftChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnRightToLeftChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : EventArgs -&gt; unit&#xA;override this.OnTextChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.TextChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnTextChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnTextChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnTextChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="toolStripItem.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.VisibleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.OnVisibleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripItem.OnVisibleChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripItem.OnVisibleChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Overflow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemOverflow Overflow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemOverflow Overflow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Overflow" />
      <MemberSignature Language="VB.NET" Value="Public Property Overflow As ToolStripItemOverflow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemOverflow Overflow { System::Windows::Forms::ToolStripItemOverflow get(); void set(System::Windows::Forms::ToolStripItemOverflow value); };" />
      <MemberSignature Language="F#" Value="member this.Overflow : System.Windows.Forms.ToolStripItemOverflow with get, set" Usage="System.Windows.Forms.ToolStripItem.Overflow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemOverflow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목이 <see cref="T:System.Windows.Forms.ToolStrip" />이나 <see cref="T:System.Windows.Forms.ToolStripOverflowButton" />에 연결되었는지 아니면 둘 사이에 부동 상태로 있을 수 있는지 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripItemOverflow" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.ToolStripItemOverflow.AsNeeded" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Forms.ToolStripItem.Overflow%2A> 스택 레이아웃의 속성입니다. 흐름 및 테이블 레이아웃에는 <xref:System.Windows.Forms.ToolStrip> 오버플로 단추가 렌더링 되지 않습니다 및는 <xref:System.Windows.Forms.ToolStripItem.Overflow%2A> 속성은 무시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Text%2A>, <xref:System.Windows.Forms.ToolStripItem.Overflow%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.TextDirection%2A> 속성 및 처리를 <xref:System.Windows.Forms.ToolStripItem.Click> 이벤트. 이 예제를 실행 하려면 다음 코드를 포함 하는 형식으로 붙여넣습니다를 <xref:System.Windows.Forms.ToolStrip> 라는 `movingToolStrip` 호출 `InitializeMovingToolStrip` 폼의 생성자에서 또는 `Load` 이벤트 처리기입니다.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">할당된 값이 <see cref="T:System.Windows.Forms.ToolStripItemOverflow" /> 값 중 하나가 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStrip Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStrip Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As ToolStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStrip ^ Owner { System::Windows::Forms::ToolStrip ^ get(); void set(System::Windows::Forms::ToolStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Forms.ToolStrip with get, set" Usage="System.Windows.Forms.ToolStripItem.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 항목의 소유자를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStrip" />을 소유하거나 소유할 <see cref="T:System.Windows.Forms.ToolStripItem" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.Owner%2A> 반환 된 <xref:System.Windows.Forms.ToolStrip> 해당 항목 컬렉션에 현재 포함 되어 <xref:System.Windows.Forms.ToolStripItem>. 이 참조 하는 가장 좋은 방법은 <xref:System.Windows.Forms.ToolStrip.ImageList%2A> 또는 기타 속성 최상위 <xref:System.Windows.Forms.ToolStrip> 오버플로 처리 하는 특수 코드를 작성 하지 않고도 합니다.  
  
 합니다 <xref:System.Windows.Forms.ToolStripItem.Owner%2A> 항목에 해당 하는 경우에 동일 하 게 유지 합니다 <xref:System.Windows.Forms.ToolStripOverflow>합니다. <xref:System.Windows.Forms.ToolStripItem.Owner%2A> 될 수 있습니다 `null` 에 있는 요소에 대 한 특정 합니다 <xref:System.Windows.Forms.ToolStrip.DisplayedItems%2A> 컬렉션 되지 않습니다는 <xref:System.Windows.Forms.ToolStrip.Items%2A> 컬렉션입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Owner%2A> 속성 사용자 지정 렌더링 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#12)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerChanged">
      <MemberSignature Language="C#" Value="public event EventHandler OwnerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OwnerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.OwnerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OwnerChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OwnerChanged;" />
      <MemberSignature Language="F#" Value="member this.OwnerChanged : EventHandler " Usage="member this.OwnerChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStripItem.Owner" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
> [!NOTE]
>  변경 합니다 <xref:System.Windows.Forms.Control.Enabled%2A> 의 속성을 <xref:System.Windows.Forms.ToolStrip> 발생 하지 않습니다는 <xref:System.Windows.Forms.ToolStripItem.OwnerChanged> 이벤트입니다. 특정 속성 설정 사용 하 여이 이벤트를 발생 시킵니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.OwnerChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.OwnerChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#117](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#117)]
 [!code-vb[System.Windows.Forms.EventExamples#117](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#117)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItem OwnerItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStripItem OwnerItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.OwnerItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerItem As ToolStripItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItem ^ OwnerItem { System::Windows::Forms::ToolStripItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerItem : System.Windows.Forms.ToolStripItem" Usage="System.Windows.Forms.ToolStripItem.OwnerItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Forms.ToolStripItem" />의 부모 <see cref="T:System.Windows.Forms.ToolStripItem" />를 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripItem" />의 부모 <see cref="T:System.Windows.Forms.ToolStripItem" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예를 들어 합니다 <xref:System.Windows.Forms.ToolStripItem.OwnerItem%2A> 의 **열기** <xref:System.Windows.Forms.ToolStripMenuItem> 일반적으로 **파일**<xref:System.Windows.Forms.ToolStripMenuItem>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ToolStripItem.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 내용과 가장자리 사이의 내부 간격(픽셀)을 가져오거나 설정합니다.</summary>
        <value>항목의 내부 간격(픽셀)을 나타내는 <see cref="T:System.Windows.Forms.Padding" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목을 다시 그리면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.Paint> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.Paint> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#118](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#118)]
 [!code-vb[System.Windows.Forms.EventExamples#118](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Forms.ToolStrip Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolStrip Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property Parent As ToolStrip" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Forms::ToolStrip ^ Parent { System::Windows::Forms::ToolStrip ^ get(); void set(System::Windows::Forms::ToolStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.ToolStrip with get, set" Usage="System.Windows.Forms.ToolStripItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />의 부모 컨테이너를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStrip" />의 부모 컨테이너인 <see cref="T:System.Windows.Forms.ToolStripItem" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.GetCurrentParent%2A> 에 대 한 읽기 전용 접근자는 <xref:System.Windows.Forms.ToolStripItem.Parent%2A> 속성입니다. 부모와 달리 소유자에서 부모 나타냅니다는 반환 된 현재 <xref:System.Windows.Forms.ToolStrip> 항목이 표시 되는는 오버플로 영역에 있을 수 있습니다.  
  
 부모 <xref:System.Windows.Forms.ToolStrip> 발생 그리기 이벤트 등의 소유자 하는 동안 <xref:System.Windows.Forms.ToolStrip> 이미지 목록과 같은 공유 데이터를 포함 합니다. 일반적으로 <xref:System.Windows.Forms.ToolStripItem.Parent%2A> 속성이 레이아웃 관리자에는 <xref:System.Windows.Forms.ToolStrip>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberSignature Language="F#" Value="member this.PerformClick : unit -&gt; unit" Usage="toolStripItem.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see langword="ToolStripItem" />에 대한 <see langword="Click" /> 이벤트를 생성합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemPlacement Placement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemPlacement Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Placement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Placement As ToolStripItemPlacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemPlacement Placement { System::Windows::Forms::ToolStripItemPlacement get(); };" />
      <MemberSignature Language="F#" Value="member this.Placement : System.Windows.Forms.ToolStripItemPlacement" Usage="System.Windows.Forms.ToolStripItem.Placement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 현재 레이아웃을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripItemPlacement" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 검사는 <xref:System.Windows.Forms.ToolStripItem.Placement%2A> 에서 속성을 <xref:System.Windows.Forms.ToolStrip.LayoutCompleted> 주 항목 배치 되었는지 여부를 결정 하는 이벤트 <xref:System.Windows.Forms.ToolStrip>, 오버플로 <xref:System.Windows.Forms.ToolStrip>, 전혀 표시 되지 않는 경우 또는 합니다. 항목이 표시 되지 않습니다 하는 일반적인 이유는 주 항목에는 적합 하지 않은 <xref:System.Windows.Forms.ToolStrip> 및 해당 <xref:System.Windows.Forms.ToolStripItem.Overflow%2A> 속성이 <xref:System.Windows.Forms.ToolStripItemOverflow.Never>합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Placement%2A> 속성 사용자 지정 렌더링 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#22)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pressed">
      <MemberSignature Language="C#" Value="public virtual bool Pressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Pressed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Pressed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Pressed : bool" Usage="System.Windows.Forms.ToolStripItem.Pressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목이 누름 상태인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>항목이 누름 상태이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="toolStripItem.ProcessCmdKey (m, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m">처리할 창 메시지를 나타내며 참조에 의해 전달되는 <see cref="T:System.Windows.Forms.Message" />입니다.</param>
        <param name="keyData">처리할 키를 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</param>
        <summary>명령 키를 처리합니다.</summary>
        <returns>모든 경우에 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 명령 키를 처리 하기 위해 메시지를 전처리 하는 동안 호출 됩니다. 명령 키가 일반 입력된 키 보다 항상 우선 하는 키입니다. 명령 키의 예로 가속기 및 바로 가기 메뉴를 들 수 있습니다. 메서드를 반환 해야 합니다 `true` 명령 키를 처리 했음을 나타내기 위해 또는 `false` 키 명령 키 임을 나타냅니다.  
  
 기본 클래스 구현을 <xref:System.Windows.Forms.ToolStripItem.ProcessCmdKey%2A> 메서드가 반환 되는 `false` 경우도 있습니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">직접 실행 호출자 및 클래스를 상속 합니다.이 메서드를 호출 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Windows.Forms.ToolStripItem.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> 파생된 클래스에서 메서드를 메서드 재정의 반환할지 <see langword="true" /> 키를 처리 했음을 나타냅니다. 파생된 클래스를 거의 경우 어느 해야이 메서드를 재정의 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="toolStripItem.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">처리할 키를 나타내는 <see cref="T:System.Windows.Forms.Keys" /> 값 중 하나입니다.</param>
        <summary>대화 상자 키를 처리합니다.</summary>
        <returns>항목이 키를 처리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 발생 시키기 위해 스페이스바 및 ENTER 키를 처리 하기 위해 메시지 전처리 중에이 메서드는 <xref:System.Windows.Forms.ToolStripItem.Click> 이벤트입니다. 경우에이 메서드는 호출 된 <xref:System.Windows.Forms.Control.IsInputKey%2A> 메서드 항목 키를 처리 하지 않는다는 것을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">이 메서드를 호출 하는 클래스 상속을 위한 모든 창입니다. 연관 된 열거형: <see langword="AllWindows" /> 의 값 <see cref="T:System.Security.Permissions.UIPermissionWindow" />합니다.</permission>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Windows.Forms.ToolStripItem.ProcessDialogKey(System.Windows.Forms.Keys)" /> 파생된 클래스에서 메서드를 재정의 구현을 반환할 <see langword="true" /> 키를 처리 했음을 나타냅니다. 파생된 클래스를 거의 경우 어느 해야이 메서드를 재정의 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMnemonic : char -&gt; bool&#xA;override this.ProcessMnemonic : char -&gt; bool" Usage="toolStripItem.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">처리할 문자입니다.</param>
        <summary>니모닉 문자를 처리합니다.</summary>
        <returns>모든 경우에 <see langword="true" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 항목을 니모닉 문자를 처리할 수 있도록 합니다. 메서드를 결정 해야와 항목은 니모닉 처리 하는 상태에 있는지 여부를 지정 된 문자를 니모닉을 나타내는지 여부를 합니다. 따라서 메서드 해야 작업을 수행할 연결 된 니모닉 및 반환 `true`합니다. 그렇지 않은 메서드를 반환 하면 `false`합니다.  
  
 이 기본 클래스 구현은 호스트에 의존 <xref:System.Windows.Forms.ToolStrip> 를 호출 하는 컨트롤을 <xref:System.Windows.Forms.Control.IsMnemonic%2A> 지정 된 문자를 니모닉 항목의 텍스트에 일치 하는지 여부를 결정 하는 방법입니다. 이 경우 메서드를 발생 시킵니다 합니다 <xref:System.Windows.Forms.ToolStripItem.Click> 이벤트 및 반환 `true`합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">이 메서드를 호출 하는 클래스 상속을 위한 모든 창입니다. 연관 된 열거형: <see langword="AllWindows" /> 의 값 <see cref="T:System.Security.Permissions.UIPermissionWindow" />합니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="QueryAccessibilityHelp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.QueryAccessibilityHelp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryAccessibilityHelp As QueryAccessibilityHelpEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryAccessibilityHelpEventHandler ^ QueryAccessibilityHelp;" />
      <MemberSignature Language="F#" Value="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " Usage="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryAccessibilityHelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내게 필요한 옵션 지원 클라이언트 응용 프로그램에서 <see cref="T:System.Windows.Forms.ToolStripItem" />에 대한 도움말을 호출하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기능을 사용할지는 <xref:System.Windows.Forms.HelpProvider> 클래스 사용자가 F1 키를 눌러 액세스할 수 있는 개체에 대 한 도움말을 호출할 수 있도록 합니다. 사용 하 여는 <xref:System.Windows.Forms.HelpProvider> 에서 전체 정보를 제공 합니다 <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs> 개체입니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.QueryAccessibilityHelp> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.QueryAccessibilityHelp> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#120)]
 [!code-vb[System.Windows.Forms.EventExamples#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>끌어서 놓기 작업 중에 발생하며 끌기 소스가 끌어서 놓기 작업을 취소해야 할지 여부를 결정하도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> 이벤트는 끌어서 놓기 작업 중 키보드 또는 마우스 단추 상태가 변경 될 때 발생 합니다. <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> 이벤트 끌기 소스가 끌어서 놓기 작업을 취소 해야 하는지 여부를 결정할 수 있습니다.  
  
 다음 설명 부분을 끌어서 놓기 작업과 관련 된 이벤트가 발생 하는 방법 및 시기를 설명 합니다.  
  
 <xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A> 메서드는 현재 커서 위치에서 항목을 확인 합니다. 유효한 놓기 대상 항목 인지 확인 한 다음 확인 합니다.  
  
 항목이 올바른 놓기 대상인 경우는 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 지정 끌어서 놓기 효과 사용 하 여 이벤트가 발생 합니다. 끌어서 놓기 작업 결과 목록에 대한 자세한 내용은 <xref:System.Windows.Forms.DragDropEffects> 열거형을 참조하십시오.  
  
 마우스 커서 위치, 키보드 상태 및 마우스 단추 상태의 변경 내용은 다음과 같은 방식으로 추적 됩니다.  
  
-   사용자가 창의 외부로 이동하면 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 이벤트가 발생합니다.  
  
-   마우스를 가져가면 다른 항목은 <xref:System.Windows.Forms.ToolStripItem.DragEnter> 발생 하는 해당 컨트롤에 대 한 합니다.  
  
-   마우스가 이동 하지만 동일한 항목을 내에서 유지 하는 경우는 <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트가 발생 합니다.  
  
 키보드 또는 마우스 단추 상태가 변경 될 경우는 <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> 의 값을 기준으로 작업을 취소 하려면 또는 이벤트가 발생 하 고 데이터를 놓을지 끌기를 계속할지 여부를 결정 합니다 <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> 이벤트의 속성 <xref:System.Windows.Forms.QueryContinueDragEventArgs>합니다.  
  
 경우 값 <xref:System.Windows.Forms.DragAction> 됩니다 `Continue`, <xref:System.Windows.Forms.ToolStripItem.DragOver> 이벤트는 작업을 계속 하려면 및 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 적절 한 시각적 피드백이 설정 될 수 있도록 새로운 효과 사용 하 여 이벤트가 발생 합니다. 유효한 끌어서 놓기 작업 결과 목록에 대한 자세한 내용은 <xref:System.Windows.Forms.DragDropEffects> 열거형을 참조하십시오.  
  
 합니다 <xref:System.Windows.Forms.ToolStripItem.DragOver> 고 <xref:System.Windows.Forms.ToolStripItem.GiveFeedback> 이벤트는 쌍을 이루고 있어서 마우스가 놓기 대상을 사용자에 제공 됩니다 대 한 최신 피드백이 마우스 위치를 다음과 같이 합니다.  
  
-   경우 값 <xref:System.Windows.Forms.DragAction> 는 `Drop`놓기 결과 값이 소스로 반환은, 원본 애플리케이션은 원본 데이터에 대해 적절 한 작업을 수행할 수 있도록 예의 경우 데이터 잘라내기 작업이 이동 합니다.  
  
-   경우 값 <xref:System.Windows.Forms.DragAction> 됩니다 `Cancel`는 <xref:System.Windows.Forms.ToolStripItem.DragLeave> 이벤트가 발생 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#119](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#119)]
 [!code-vb[System.Windows.Forms.EventExamples#119](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#119)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public virtual void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetBackColor();" />
      <MemberSignature Language="F#" Value="abstract member ResetBackColor : unit -&gt; unit&#xA;override this.ResetBackColor : unit -&gt; unit" Usage="toolStripItem.ResetBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드는 이 클래스와 관련이 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDisplayStyle">
      <MemberSignature Language="C#" Value="public virtual void ResetDisplayStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetDisplayStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetDisplayStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetDisplayStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetDisplayStyle();" />
      <MemberSignature Language="F#" Value="abstract member ResetDisplayStyle : unit -&gt; unit&#xA;override this.ResetDisplayStyle : unit -&gt; unit" Usage="toolStripItem.ResetDisplayStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드는 이 클래스와 관련이 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetFont">
      <MemberSignature Language="C#" Value="public virtual void ResetFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetFont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetFont" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetFont ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetFont();" />
      <MemberSignature Language="F#" Value="abstract member ResetFont : unit -&gt; unit&#xA;override this.ResetFont : unit -&gt; unit" Usage="toolStripItem.ResetFont " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드는 이 클래스와 관련이 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public virtual void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetForeColor();" />
      <MemberSignature Language="F#" Value="abstract member ResetForeColor : unit -&gt; unit&#xA;override this.ResetForeColor : unit -&gt; unit" Usage="toolStripItem.ResetForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드는 이 클래스와 관련이 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetImage">
      <MemberSignature Language="C#" Value="public virtual void ResetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetImage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetImage();" />
      <MemberSignature Language="F#" Value="abstract member ResetImage : unit -&gt; unit&#xA;override this.ResetImage : unit -&gt; unit" Usage="toolStripItem.ResetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드는 이 클래스와 관련이 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMargin">
      <MemberSignature Language="C#" Value="public void ResetMargin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetMargin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetMargin" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMargin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetMargin();" />
      <MemberSignature Language="F#" Value="member this.ResetMargin : unit -&gt; unit" Usage="toolStripItem.ResetMargin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드는 이 클래스와 관련이 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPadding">
      <MemberSignature Language="C#" Value="public void ResetPadding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetPadding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetPadding" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetPadding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetPadding();" />
      <MemberSignature Language="F#" Value="member this.ResetPadding : unit -&gt; unit" Usage="toolStripItem.ResetPadding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드는 이 클래스와 관련이 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetRightToLeft">
      <MemberSignature Language="C#" Value="public virtual void ResetRightToLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetRightToLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetRightToLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetRightToLeft();" />
      <MemberSignature Language="F#" Value="abstract member ResetRightToLeft : unit -&gt; unit&#xA;override this.ResetRightToLeft : unit -&gt; unit" Usage="toolStripItem.ResetRightToLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드는 이 클래스와 관련이 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTextDirection">
      <MemberSignature Language="C#" Value="public virtual void ResetTextDirection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetTextDirection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ResetTextDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetTextDirection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetTextDirection();" />
      <MemberSignature Language="F#" Value="abstract member ResetTextDirection : unit -&gt; unit&#xA;override this.ResetTextDirection : unit -&gt; unit" Usage="toolStripItem.ResetTextDirection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드는 이 클래스와 관련이 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : System.Windows.Forms.RightToLeft with get, set" Usage="System.Windows.Forms.ToolStripItem.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목을 오른쪽에서 왼쪽으로 배치하고 텍스트를 오른쪽에서 왼쪽으로 쓸지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>항목을 오른쪽에서 왼쪽으로 배치하고 텍스트를 오른쪽에서 왼쪽으로 쓰면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftAutoMirrorImage">
      <MemberSignature Language="C#" Value="public bool RightToLeftAutoMirrorImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftAutoMirrorImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.RightToLeftAutoMirrorImage" />
      <MemberSignature Language="VB.NET" Value="Public Property RightToLeftAutoMirrorImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RightToLeftAutoMirrorImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftAutoMirrorImage : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.RightToLeftAutoMirrorImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" /> 속성이 <see cref="P:System.Windows.Forms.ToolStripItem.RightToLeft" />로 설정된 경우 <see cref="F:System.Windows.Forms.RightToLeft.Yes" /> 이미지를 자동으로 미러링합니다.</summary>
        <value>이미지를 자동으로 미러링하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 일반적인 설정에 대 한 구문을 보여 줍니다 <xref:System.Windows.Forms.ToolStripItem> 속성을 포함 하는 <xref:System.Windows.Forms.ToolStripItem.RightToLeftAutoMirrorImage%2A> 속성입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripStatusLabel.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripStatusLabel.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripStatusLabel.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripStatusLabel.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.RightToLeftChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftChanged : EventHandler " Usage="member this.RightToLeftChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStripItem.RightToLeft" /> 속성 값이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  변경 합니다 <xref:System.Windows.Forms.Control.Enabled%2A> 의 속성을 <xref:System.Windows.Forms.ToolStrip> 발생 하지 않습니다는 <xref:System.Windows.Forms.ToolStripItem.RightToLeftChanged> 이벤트입니다. 특정 속성 설정 사용 하 여이 이벤트를 발생 시킵니다.  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.RightToLeftChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.RightToLeftChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#121](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#121)]
 [!code-vb[System.Windows.Forms.EventExamples#121](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="toolStripItem.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>항목을 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Select%2A> 메서드. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public virtual bool Selected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool" Usage="System.Windows.Forms.ToolStripItem.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목이 선택되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripItem" />이 선택되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Selected%2A> 속성 사용자 지정 렌더링 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripItem> 클래스입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.ToolStripItem#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/CS/Form1.cs#22)]
 [!code-vb[System.Windows.Forms.ToolStrip.ToolStripItem#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.ToolStripItem/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="protected internal virtual void SetBounds (System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetBounds(valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.SetBounds(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetBounds (bounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetBounds(System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="abstract member SetBounds : System.Drawing.Rectangle -&gt; unit&#xA;override this.SetBounds : System.Drawing.Rectangle -&gt; unit" Usage="toolStripItem.SetBounds bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="bounds"><see cref="T:System.Drawing.Rectangle" />의 크기와 위치를 나타내는 <see cref="T:System.Windows.Forms.ToolStripItem" />입니다.</param>
        <summary>항목의 크기와 위치를 설정합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected virtual void SetVisibleCore (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetVisibleCore(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetVisibleCore (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetVisibleCore(bool visible);" />
      <MemberSignature Language="F#" Value="abstract member SetVisibleCore : bool -&gt; unit&#xA;override this.SetVisibleCore : bool -&gt; unit" Usage="toolStripItem.SetVisibleCore visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible"><see cref="T:System.Windows.Forms.ToolStripItem" />을 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />을 지정된 표시 상태로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 컨트롤의 표시 동작을 변경 하려면이 메서드를 재정의 합니다.  
  
> [!NOTE]
>  재정의 하는 경우 <xref:System.Windows.Forms.ToolStripItem.SetVisibleCore%2A> 파생된 클래스에서 호출 해야 기본 클래스의 <xref:System.Windows.Forms.ToolStripItem.SetVisibleCore%2A> 메서드를 변경 하려면 컨트롤의 표시 여부.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowKeyboardCues">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShowKeyboardCues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowKeyboardCues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ShowKeyboardCues" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property ShowKeyboardCues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool ShowKeyboardCues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowKeyboardCues : bool" Usage="System.Windows.Forms.ToolStripItem.ShowKeyboardCues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바로 가기 키를 표시할지 아니면 숨길지 나타내는 값을 가져옵니다.</summary>
        <value>바로 가기 키를 표시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바로 가기 키, CTRL + C를 복사 하는 것에 대 한 같은 마우스 또는 기타 지시 디바이스를 사용 하 여 명령 선택에 대 한 키보드 대안을 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ToolStripItem.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목의 크기를 가져오거나 설정합니다.</summary>
        <value>영역의 너비와 높이를 나타내는 <see cref="T:System.Drawing.Size" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragDrop">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragDrop (System.Windows.Forms.DragEventArgs dragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragDrop(class System.Windows.Forms.DragEventArgs dragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragDrop (dragEvent As DragEventArgs) Implements IDropTarget.OnDragDrop" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragDrop(System::Windows::Forms::DragEventArgs ^ dragEvent) = System::Windows::Forms::IDropTarget::OnDragDrop;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEvent">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.DragDrop" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.System%23Windows%23Forms%23IDropTarget%23OnDragDrop%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragEnter">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragEnter (System.Windows.Forms.DragEventArgs dragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragEnter(class System.Windows.Forms.DragEventArgs dragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragEnter (dragEvent As DragEventArgs) Implements IDropTarget.OnDragEnter" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragEnter(System::Windows::Forms::DragEventArgs ^ dragEvent) = System::Windows::Forms::IDropTarget::OnDragEnter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEvent">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.DragEnter" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.System%23Windows%23Forms%23IDropTarget%23OnDragEnter%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragLeave">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragLeave (e As EventArgs) Implements IDropTarget.OnDragLeave" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs ^ e) = System::Windows::Forms::IDropTarget::OnDragLeave;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragLeave(System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.ToolStripItem.DragLeave" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.System%23Windows%23Forms%23IDropTarget%23OnDragLeave%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragOver">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragOver (System.Windows.Forms.DragEventArgs dragEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragOver(class System.Windows.Forms.DragEventArgs dragEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragOver (dragEvent As DragEventArgs) Implements IDropTarget.OnDragOver" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragOver(System::Windows::Forms::DragEventArgs ^ dragEvent) = System::Windows::Forms::IDropTarget::OnDragOver;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEvent">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</param>
        <summary><see langword="DragOver" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripItem.System%23Windows%23Forms%23IDropTarget%23OnDragOver%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Windows.Forms.ToolStripItem.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ToolStripItem.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목에 대한 데이터가 들어 있는 개체를 가져오거나 설정합니다.</summary>
        <value>컨트롤에 대한 데이터가 포함된 <see cref="T:System.Object" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.ToolStripLabel> 사용 하 여 해당 <xref:System.Windows.Forms.ToolStripItem.Tag%2A> 활성 링크를 설정 하는 속성입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripLabel/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ToolStripItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목에 표시되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>항목의 텍스트를 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 앰퍼샌드를 추가 하 여 ("&") 텍스트 값의 문자를 항목에 액세스 키를 만들 수 있습니다. 자세한 내용은 [방법: Windows Forms 컨트롤에 대 한 액세스 키를 만들](~/docs/framework/winforms/controls/how-to-create-access-keys-for-windows-forms-controls.md)합니다.  
  
 <xref:System.Windows.Forms.ToolStripItem> 사용 하는 <xref:System.Windows.Forms.ToolStripItem.Text%2A> 속성에 대 한 기본 원본으로는 <xref:System.Windows.Forms.ToolTip> 콘텐츠입니다. 설정 <xref:System.Windows.Forms.ToolStripItem.AutoToolTip%2A> 하 `false` 사용 하려면 <xref:System.Windows.Forms.ToolStripItem.ToolTipText%2A> 원본으로 <xref:System.Windows.Forms.ToolTip> 콘텐츠입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Text%2A>, <xref:System.Windows.Forms.ToolStripItem.Overflow%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.TextDirection%2A> 속성 및 처리를 <xref:System.Windows.Forms.ToolStripItem.Click> 이벤트. 이 예제를 실행 하려면 다음 코드를 포함 하는 형식으로 붙여넣습니다를 <xref:System.Windows.Forms.ToolStrip> 라는 `movingToolStrip` 호출 `InitializeMovingToolStrip` 폼의 생성자에서 또는 `Load` 이벤트 처리기입니다.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.ContentAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::ContentAlignment TextAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlign : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.ToolStripItem.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripLabel" />의 텍스트 맞춤을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Drawing.ContentAlignment" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Drawing.ContentAlignment.MiddleRight" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A> 가져오거나 텍스트 맞춤을 설정 하는 속성을 <xref:System.Windows.Forms.ToolStripItem>입니다. 사용 합니다 <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A> 가져오거나 이미지 맞춤을 설정 하는 속성을 <xref:System.Windows.Forms.ToolStripItem>입니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A>, <xref:System.Windows.Forms.ToolStripItem.DisplayStyle%2A> , 및 <xref:System.Windows.Forms.ToolStripItem.TextAlign%2A> 에 대 한 속성을 <xref:System.Windows.Forms.ToolStripButton>. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Forms.ToolStripButton> 클래스 개요입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/cs/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.ToolStripButton#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripButton/vb/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">할당된 값이 <see cref="T:System.Drawing.ContentAlignment" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.ImageAlign" />
        <altmember cref="T:System.Windows.Forms.ToolStripLabel" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStripItem.Text" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
> [!NOTE]
>  변경 합니다 <xref:System.Windows.Forms.Control.Enabled%2A> 의 속성을 <xref:System.Windows.Forms.ToolStrip> 발생 하지 않습니다는 <xref:System.Windows.Forms.ToolStripItem.TextChanged> 이벤트입니다. 특정 속성 설정 사용 하 여이 이벤트를 발생 시킵니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.TextChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.TextChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#122](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#122)]
 [!code-vb[System.Windows.Forms.EventExamples#122](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDirection">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolStripTextDirection TextDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripTextDirection TextDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.TextDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextDirection As ToolStripTextDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolStripTextDirection TextDirection { System::Windows::Forms::ToolStripTextDirection get(); void set(System::Windows::Forms::ToolStripTextDirection value); };" />
      <MemberSignature Language="F#" Value="member this.TextDirection : System.Windows.Forms.ToolStripTextDirection with get, set" Usage="System.Windows.Forms.ToolStripItem.TextDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripTextDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />에 사용된 텍스트의 방향을 가져옵니다.</summary>
        <value><see cref="T:System.Windows.Forms.ToolStripTextDirection" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Text%2A>, <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A>, <xref:System.Windows.Forms.ToolStripItem.Overflow%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.TextDirection%2A> 속성 및 핸들은 <xref:System.Windows.Forms.ToolStripItem.Click> 이벤트. 이 예제를 실행 하려면 다음 코드를 포함 하는 형식으로 붙여넣습니다를 <xref:System.Windows.Forms.ToolStrip> 라는 `movingToolStrip` 호출 `InitializeMovingToolStrip` 폼의 생성자에서 또는 `Load` 이벤트 처리기입니다.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ToolStrip1#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextImageRelation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TextImageRelation TextImageRelation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TextImageRelation TextImageRelation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.TextImageRelation" />
      <MemberSignature Language="VB.NET" Value="Public Property TextImageRelation As TextImageRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TextImageRelation TextImageRelation { System::Windows::Forms::TextImageRelation get(); void set(System::Windows::Forms::TextImageRelation value); };" />
      <MemberSignature Language="F#" Value="member this.TextImageRelation : System.Windows.Forms.TextImageRelation with get, set" Usage="System.Windows.Forms.ToolStripItem.TextImageRelation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextImageRelation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" /> 텍스트와 이미지의 서로 상대적인 위치를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Forms.TextImageRelation" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.TextImageRelation.ImageBeforeText" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Forms.ToolStripItem.TextImageRelation%2A> 속성을 정의 하거나 텍스트와 관련 하 여 이미지의 상대 위치를 확인을 <xref:System.Windows.Forms.ToolStripItem>입니다. 이미지, 텍스트 또는 둘 다 없는 항목은 특별 한 경우로 처리 됩니다 있도록는 <xref:System.Windows.Forms.ToolStripItem> 누락 된 요소 또는 요소에 대 한 빈 곳을 표시 하지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.ToolStripItem.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 <see cref="T:System.Windows.Forms.ToolTip" />으로 표시되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>도구 설명 텍스트를 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripItem.ToolTipText%2A> 경우에만 작동 <xref:System.Windows.Forms.ToolStrip.ShowItemToolTips%2A> 로 설정 된 `true`합니다. 경우 <xref:System.Windows.Forms.ToolStripItem.AutoToolTip%2A> 로 설정 되어 `true`, <xref:System.Windows.Forms.Control.Text%2A> 항목에 대 한 속성으로 사용 되는 <xref:System.Windows.Forms.ToolStripItem.ToolTipText%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Windows.Forms.ToolStripItem.Image%2A>, <xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A>, 및 <xref:System.Windows.Forms.ToolStripItem.ImageTransparentColor%2A> 에 대 한는 <xref:System.Windows.Forms.ToolStripItem>합니다. 또한 설정 항목을 사용자 지정 도구 설명을 표시 하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#20)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.ToolStrip1#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="toolStripItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ComponentModel.Component" />의 이름이 포함된 <see cref="T:System.String" />을 반환합니다(있는 경우). 이 메서드는 재정의할 수 없습니다.</summary>
        <returns><see cref="T:System.ComponentModel.Component" />의 이름이 포함된 <see cref="T:System.String" />(있는 경우) 또는 <see cref="T:System.ComponentModel.Component" />가 명명되지 않은 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Component.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.ToolStripItem.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>항목이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler VisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler VisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripItem.VisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisibleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ VisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.VisibleChanged : EventHandler " Usage="member this.VisibleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Forms.ToolStripItem.Visible" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
> [!NOTE]
>  변경 합니다 <xref:System.Windows.Forms.Control.Enabled%2A> 의 속성을 <xref:System.Windows.Forms.ToolStrip> 발생 하지 않습니다는 <xref:System.Windows.Forms.ToolStripItem.VisibleChanged> 이벤트입니다. 특정 속성 설정 사용 하 여이 이벤트를 발생 시킵니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고서를 <xref:System.Windows.Forms.ToolStripItem.VisibleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 도움이 될 수 있습니다 디버깅 하는 경우를 학습할 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 사용 하 여 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 줄에 메시지를 추가 또는 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여넣습니다 <xref:System.Windows.Forms.ToolStripItem>와 같은 <xref:System.Windows.Forms.ToolStripButton> 또는 <xref:System.Windows.Forms.ToolStripMenuItem>합니다. 다음 인스턴스 이름을 `ToolStripItem1` 이벤트 처리기를 연결 된 확인 된 <xref:System.Windows.Forms.ToolStripItem.VisibleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#123](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#123)]
 [!code-vb[System.Windows.Forms.EventExamples#123](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripItem.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Windows.Forms.ToolStripItem.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Forms.ToolStripItem" />의 너비(픽셀)를 가져오거나 설정합니다.</summary>
        <value>너비(픽셀)를 나타내는 <see cref="T:System.Int32" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>