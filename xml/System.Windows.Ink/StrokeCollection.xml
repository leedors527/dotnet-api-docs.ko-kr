<Type Name="StrokeCollection" FullName="System.Windows.Ink.StrokeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0b134415c90cff315c3060957a381ba4287d559f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55374633" /></Metadata><TypeSignature Language="C#" Value="public class StrokeCollection : System.Collections.ObjectModel.Collection&lt;System.Windows.Ink.Stroke&gt;, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StrokeCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Ink.Stroke&gt; implements class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.StrokeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class StrokeCollection&#xA;Inherits Collection(Of Stroke)&#xA;Implements INotifyCollectionChanged, INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrokeCollection : System::Collections::ObjectModel::Collection&lt;System::Windows::Ink::Stroke ^&gt;, System::Collections::Specialized::INotifyCollectionChanged, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type StrokeCollection = class&#xA;    inherit Collection&lt;Stroke&gt;&#xA;    interface INotifyPropertyChanged&#xA;    interface INotifyCollectionChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Windows.Ink.Stroke&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Windows.Ink.Stroke</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.StrokeCollectionConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Ink.Stroke" /> 개체의 컬렉션을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection> 적중 테스트, 클리핑 및 스트로크 지우기 같은 기능을 수행할 수 있습니다. <xref:System.Windows.Controls.InkCanvas> 하지만 보다 자세히 제어 해야 하는 경우 이러한 함수 중 대부분을 수행 하는 컨트롤을 <xref:System.Windows.Controls.InkCanvas> 에서는 <xref:System.Windows.Ink.StrokeCollection> 더 많은 옵션이 제공 합니다.  
  
 다음 표에서 사용자 지정 컨트롤에서 디지털 잉크를 관리 하는 방법을 설명 하는 항목이 나열 합니다.  
  
|이 작업을 수행 하는 중...|이 문서를 참조 하세요.|  
|-----------------|----------------------|  
|디지털 잉크를 수집 하는 컨트롤 만들기|[잉크 입력 컨트롤 만들기](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)|  
|사용자가 잉크를 선택할 수 있도록 하는 컨트롤 만들기|[방법: 사용자 지정 컨트롤에서 잉크 선택](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)|  
|사용자 지점 지우기 잉크를 사용 하도록 설정 하는 컨트롤 만들기|[방법: 사용자 지정 컨트롤에서 잉크 지우기](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)|  
  
<a name="xamlAttributeUsage_StrokeCollection"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object StrokeCollection="isfString"/>  
```  
  
<a name="xamlObjectElementUsage_StrokeCollection"></a>   
## <a name="xaml-object-element-usage"></a>XAML 개체 요소 사용  
  
```  
<object>isfString</object>  
```  
  
<a name="xamlValues_StrokeCollection"></a>   
## <a name="xaml-values"></a>XAML 값  
  
|용어|정의|  
|----------|----------------|  
|`isfString`|Base-64에서 스트로크를 나타내는 문자열로 인코딩된 잉크 직렬화 형식 (ISF)입니다.|  
  
   
  
## Examples  
 다음 예제에서는 하나에서 잉크를 복사 하는 방법을 보여 줍니다 <xref:System.Windows.Controls.InkCanvas> 을 다른 <xref:System.Windows.Controls.InkCanvas>합니다. 이 예제에서는 다음을 가정합니다.  
  
-   두 개의 <xref:System.Windows.Controls.InkCanvas> 이라는 개체 `inkCanvas1` 고 `inkCanvas2`입니다.  
  
-   <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 이벤트 이벤트 처리기에 연결 되었습니다.  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrokeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.Stroke&gt; strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Ink.Stroke&gt; strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strokes As IEnumerable(Of Stroke))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrokeCollection(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::Stroke ^&gt; ^ strokes);" />
      <MemberSignature Language="F#" Value="new System.Windows.Ink.StrokeCollection : seq&lt;System.Windows.Ink.Stroke&gt; -&gt; System.Windows.Ink.StrokeCollection" Usage="new System.Windows.Ink.StrokeCollection strokes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strokes" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.Stroke&gt;" />
      </Parameters>
      <Docs>
        <param name="strokes"><see cref="T:System.Windows.Ink.StrokeCollection" />에 추가할 스트로크입니다.</param>
        <summary>지정한 스트로크를 포함하는 <see cref="T:System.Windows.Ink.StrokeCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrokeCollection(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Windows.Ink.StrokeCollection : System.IO.Stream -&gt; System.Windows.Ink.StrokeCollection" Usage="new System.Windows.Ink.StrokeCollection stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">잉크 데이터가 들어 있는 스트림입니다.</param>
        <summary>ISF(Serialize된 잉크 형식)의 지정한 <see cref="T:System.Windows.Ink.StrokeCollection" />에서 <see cref="T:System.IO.Stream" />을 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 저장 및 로드 하는 방법을 보여 줍니다는 <xref:System.Windows.Ink.StrokeCollection>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
[!code-csharp[StrokeCollectionMethods#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#11)]
[!code-vb[StrokeCollectionMethods#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (strokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Ink::StrokeCollection ^ strokes);" />
      <MemberSignature Language="F#" Value="override this.Add : System.Windows.Ink.StrokeCollection -&gt; unit" Usage="strokeCollection.Add strokes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes">컬렉션에 추가할 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</param>
        <summary>지정한 스트로크를 <see cref="T:System.Windows.Ink.StrokeCollection" />에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Add%2A> 메서드는 <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> 이벤트를 발생시킵니다.  
  
   
  
## Examples  
 다음 예제에서는 하나에서 잉크를 복사 하는 방법을 보여 줍니다 <xref:System.Windows.Controls.InkCanvas> 을 다른 <xref:System.Windows.Controls.InkCanvas>합니다. 이 예제에서는 다음을 가정합니다.  
  
-   두 개의 <xref:System.Windows.Controls.InkCanvas> 이라는 개체 `inkCanvas1` 고 `inkCanvas2`입니다.  
  
-   <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 이벤트 이벤트 처리기에 연결 되었습니다.  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="strokes" />의 <see cref="T:System.Windows.Ink.Stroke" />가 이미 <see cref="T:System.Windows.Ink.StrokeCollection" />의 멤버인 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="strokes" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyData">
      <MemberSignature Language="C#" Value="public void AddPropertyData (Guid propertyDataId, object propertyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyData(valuetype System.Guid propertyDataId, object propertyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyData (propertyDataId As Guid, propertyData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyData(Guid propertyDataId, System::Object ^ propertyData);" />
      <MemberSignature Language="F#" Value="member this.AddPropertyData : Guid * obj -&gt; unit" Usage="strokeCollection.AddPropertyData (propertyDataId, propertyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
        <Parameter Name="propertyData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">사용자 지정 속성과 연결할 <see cref="T:System.Guid" />입니다.</param>
        <param name="propertyData">사용자 지정 속성의 값입니다. <paramref name="propertyData" />는 허용되지 않는 <see cref="T:System.String" />을 제외하고, <see cref="T:System.Char" />, <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, <see cref="T:System.UInt32" />, <see cref="T:System.Int64" />, <see cref="T:System.UInt64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.DateTime" />, <see cref="T:System.Boolean" />, <see cref="T:System.String" />, <see cref="T:System.Decimal" /> 또는 이러한 데이터 형식의 배열이어야 합니다.</param>
        <summary>사용자 지정 속성을 <see cref="T:System.Windows.Ink.StrokeCollection" />에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> 메서드를 사용 하면 사용자 지정 속성을 추가할 수는 <xref:System.Windows.Ink.StrokeCollection>합니다. 추가 정보를 포함할 수 있습니다는 <xref:System.Windows.Ink.StrokeCollection>합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 속성 데이터를 가져와 추가 하는 방법을 보여 줍니다. 합니다 `AddTimeStamp_Click` 메서드를 <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> 현재 시간을 추가 하는 방법의 <xref:System.Windows.Ink.StrokeCollection>합니다. `GetTimeStap_Click` 메서드를 <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> 타임 스탬프를 검색 하는 메서드는 <xref:System.Windows.Ink.StrokeCollection>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyDataId" />가 빈 <see cref="T:System.Guid" />인 경우  
  
또는 
 <paramref name="propertyData" />가 <see langword="Parameters" /> 섹션에 나열된 허용되는 데이터 형식 중 하나가 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override sealed void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="strokeCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" />에서 모든 스트로크를 지웁니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Clip">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정한 범위 밖에 있는 <see cref="T:System.Windows.Ink.StrokeCollection" />의 모든 스트로크를 제거합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public void Clip (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clip(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clip (lassoPoints As IEnumerable(Of Point))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clip(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints);" />
      <MemberSignature Language="F#" Value="member this.Clip : seq&lt;System.Windows.Point&gt; -&gt; unit" Usage="strokeCollection.Clip lassoPoints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">클리핑할 영역을 지정하는 <see cref="T:System.Drawing.Point" /> 형식의 배열입니다.</param>
        <summary>지정한 <see cref="T:System.Windows.Ink.StrokeCollection" /> 배열의 범위 밖에 있는 <see cref="T:System.Drawing.Point" />의 모든 스트로크를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Ink.StrokeCollection.Clip%2A> 메서드는 연결의 첫 번째 지점과 마지막 `lassoPoints` 올가미를 만들려고 합니다.  
  
 합니다 <xref:System.Windows.Ink.StrokeCollection.Clip%2A> 메서드를 발생 시킵니다 합니다 <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> 각각에 대 한 이벤트 <xref:System.Windows.Ink.Stroke> 자르는 것입니다.  
  
   
  
## Examples  
 다음 예제에서는의 스트로크를 클리핑 하는 방법에 설명 된 <xref:System.Windows.Ink.StrokeCollection>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkPresenter> 호출 `presenter`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#13](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#13)]
 [!code-vb[StrokeCollectionMethods#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public void Clip (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clip(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clip (bounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clip(System::Windows::Rect bounds);" />
      <MemberSignature Language="F#" Value="member this.Clip : System.Windows.Rect -&gt; unit" Usage="strokeCollection.Clip bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">클리핑할 영역을 지정하는 <see cref="T:System.Windows.Rect" />입니다.</param>
        <summary>지정한 사각형으로 클리핑된 모든 스트로크를 지정한 사각형을 벗어나지 않는 새 스트로크로 바꿉니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 완전히 지정된 된 사각형 외부에 있는 모든 스트로크를 제거 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 범위 외부에 있는 잉크를 지우는 방법은 <xref:System.Windows.Rect>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkPresenter> 호출 `presenter`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#35](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#35)]
 [!code-vb[StrokeCollectionMethods#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Ink.StrokeCollection Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Ink.StrokeCollection Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Ink::StrokeCollection ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Windows.Ink.StrokeCollection&#xA;override this.Clone : unit -&gt; System.Windows.Ink.StrokeCollection" Usage="strokeCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" />을 복사합니다.</summary>
        <returns><see cref="T:System.Windows.Ink.StrokeCollection" />의 복사본입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Ink.StrokeCollection.Clone%2A> 메서드는 각 복사 <xref:System.Windows.Ink.Stroke> 컬렉션 및 새 <xref:System.Windows.Ink.StrokeCollection> 새 스트로크를 참조 합니다.  
  
   
  
## Examples  
 다음 예제에서는 하나에서 잉크를 복사 하는 방법을 보여 줍니다 <xref:System.Windows.Controls.InkCanvas> 을 다른 <xref:System.Windows.Controls.InkCanvas>합니다. 이 예제에서는 다음을 가정합니다.  
  
-   두 개의 <xref:System.Windows.Controls.InkCanvas> 이라는 개체 `inkCanvas1` 및 `inkCanvas2.`  
  
-   <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 이벤트 이벤트 처리기에 연결 되었습니다.  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPropertyData">
      <MemberSignature Language="C#" Value="public bool ContainsPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsPropertyData (propertyDataId As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsPropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.ContainsPropertyData : Guid -&gt; bool" Usage="strokeCollection.ContainsPropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId"><see cref="T:System.Guid" />에서 찾을 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</param>
        <summary>지정한 사용자 지정 속성 ID가 <see cref="T:System.Windows.Ink.StrokeCollection" />에 있는지 여부를 반환합니다.</summary>
        <returns>지정한 사용자 지정 속성 ID가 <see cref="T:System.Windows.Ink.StrokeCollection" />에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용자 지정 속성에 대 한 확인 하는 방법에 설명 된 <xref:System.Windows.Ink.StrokeCollection>합니다. 사용자 지정 속성을 연결 된 경우 `timestamp`, 예제 사용자 지정 속성을 가져오고 표시 합니다 <xref:System.Windows.Ink.StrokeCollection> 저장 되었습니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Windows.Media.DrawingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Windows.Media.DrawingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Draw (context As DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Windows::Media::DrawingContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.Draw : System.Windows.Media.DrawingContext -&gt; unit" Usage="strokeCollection.Draw context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Windows.Media.DrawingContext" />을 그릴 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</param>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" />의 스트로크를 그립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 미리 보기를 표시 하는 사용자 지정 요소는 <xref:System.Windows.Controls.InkCanvas>합니다. 사용자 지정 요소에 대 한 참조를 유지는 <xref:System.Windows.Controls.InkCanvas> 자신을 다시 그리면 및 경우를 <xref:System.Windows.Controls.InkCanvas.StrokeCollected> 이벤트가 발생 합니다.  
  
 [!code-csharp[StrokeCollectionMethods#33](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window3.xaml.cs#33)]
 [!code-vb[StrokeCollectionMethods#33](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window3.xaml.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Erase">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정한 영역의 범위 내에 있는 잉크를 제거합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Erase (lassoPoints As IEnumerable(Of Point))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Erase(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints);" />
      <MemberSignature Language="F#" Value="member this.Erase : seq&lt;System.Windows.Point&gt; -&gt; unit" Usage="strokeCollection.Erase lassoPoints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">지울 영역을 지정하는 <see cref="T:System.Drawing.Point" /> 형식의 배열입니다.</param>
        <summary>지정한 영역의 범위 내에 있는 잉크를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Ink.StrokeCollection.Erase%2A> 메서드는 연결의 첫 번째 지점과 마지막 `lassoPoints` 올가미를 만들려고 합니다.  
  
 <xref:System.Windows.Ink.StrokeCollection> 한 후 새 스트로크를 포함할 수 있습니다는 <xref:System.Windows.Ink.StrokeCollection.Erase%2A> 메서드가 호출 됩니다. 예를 들어, 지정된 된 영역의 중간 이면을 <xref:System.Windows.Ink.Stroke>, erase 메서드를 제거 하는 <xref:System.Windows.Ink.Stroke> 두 새 스트로크를 만듭니다.  
  
 합니다 <xref:System.Windows.Ink.StrokeCollection.Erase%2A> 메서드를 발생 시킵니다 합니다 <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> 각각에 대 한 이벤트 <xref:System.Windows.Ink.Stroke> 지우는 합니다.  
  
   
  
## Examples  
 다음 예제에서는의 스트로크를 지우는 방법은 <xref:System.Windows.Ink.StrokeCollection>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkPresenter> 호출 `presenter`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#2)]
 [!code-vb[StrokeCollectionMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Erase (bounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Erase(System::Windows::Rect bounds);" />
      <MemberSignature Language="F#" Value="member this.Erase : System.Windows.Rect -&gt; unit" Usage="strokeCollection.Erase bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">지울 영역을 지정하는 <see cref="T:System.Windows.Rect" />입니다.</param>
        <summary>지정된 직사각형으로 클리핑된 모든 스크로크를 지정된 직사각형의 경계 안에 들어오지 않는 새 스트로크로 바꿉니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection> 한 후 새 스트로크를 포함할 수 있습니다는 <xref:System.Windows.Ink.StrokeCollection.Erase%2A> 메서드가 호출 됩니다. 예를 들어, 지정된 된 영역의 중간 이면을 <xref:System.Windows.Ink.Stroke>, erase 메서드를 제거 하는 <xref:System.Windows.Ink.Stroke> 두 새 스트로크를 만듭니다.  지정된 된 사각형 내에 완전히 포함 된 모든 스트로크를 제거 됩니다.  
  
 합니다 <xref:System.Windows.Ink.StrokeCollection.Erase%2A> 메서드를 발생 시킵니다 합니다 <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> 각각에 대 한 이벤트 <xref:System.Windows.Ink.Stroke> 지우는 합니다.  
  
   
  
## Examples  
 다음 예제에서는 내에서 잉크 지우기 하는 방법에 설명 합니다 <xref:System.Windows.Rect>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkPresenter> 호출 `presenter`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#34](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#34)]
 [!code-vb[StrokeCollectionMethods#34](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; eraserPath, System.Windows.Ink.StylusShape eraserShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; eraserPath, class System.Windows.Ink.StylusShape eraserShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Erase (eraserPath As IEnumerable(Of Point), eraserShape As StylusShape)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Erase(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ eraserPath, System::Windows::Ink::StylusShape ^ eraserShape);" />
      <MemberSignature Language="F#" Value="member this.Erase : seq&lt;System.Windows.Point&gt; * System.Windows.Ink.StylusShape -&gt; unit" Usage="strokeCollection.Erase (eraserPath, eraserShape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraserPath" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="eraserShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="eraserPath">지울 경로를 지정하는 <see cref="T:System.Windows.Point" /> 형식의 배열입니다.</param>
        <param name="eraserShape">지우개의 모양을 지정하는 <see cref="T:System.Windows.Ink.StylusShape" />입니다.</param>
        <summary>지정한 경로를 따라 지정한 <see cref="T:System.Windows.Ink.StylusShape" />에 의해 만들어진 영역으로 클리핑된 모든 스트로크를 해당 영역으로 클리핑되지 않은 새 스트로크로 바꿉니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection> 한 후 새 스트로크를 포함할 수 있습니다는 <xref:System.Windows.Ink.StrokeCollection.Erase%2A> 메서드가 호출 됩니다. 예를 들어 경우 `path` 의 가운데와 교차를 <xref:System.Windows.Ink.Stroke>, erase 메서드를 제거 하는 <xref:System.Windows.Ink.Stroke> 두 새 스트로크를 만듭니다.  
  
 합니다 <xref:System.Windows.Ink.StrokeCollection.Erase%2A> 메서드를 발생 시킵니다 합니다 <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> 각각에 대 한 이벤트 <xref:System.Windows.Ink.Stroke> 지우는 합니다.  
  
   
  
## Examples  
 다음 예제에서는 특정 경로 따라 잉크를 지우는 방법을 보여 줍니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkPresenter> 호출 `presenter`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#14](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#14)]
 [!code-vb[StrokeCollectionMethods#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Windows.Rect" Usage="strokeCollection.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컬렉션에 있는 스트로크의 범위를 반환합니다.</summary>
        <returns><see cref="T:System.Windows.Rect" />에 있는 스트로크의 범위를 포함하는 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Ink.StrokeCollection.GetBounds%2A> 메서드가 반환 되는 <xref:System.Windows.Rect> 는 렌더링 된 모양을 사용 하는 <xref:System.Windows.Ink.Stroke>합니다. 예를 들어 경우 <xref:System.Windows.Ink.Stroke> 10 표시 독립 픽셀 (DIP)를 합니다 <xref:System.Windows.Rect> 의 전체 너비를 포함 합니다 <xref:System.Windows.Ink.Stroke>합니다.  
  
   
  
## Examples  
 다음 예제에서는의 범위를 가져옵니다 하는 방법에 설명 합니다 <xref:System.Windows.Ink.StrokeCollection> 컨트롤에 그리는 합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#20)]
 [!code-vb[StrokeCollectionMethods#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncrementalLassoHitTester">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.IncrementalLassoHitTester GetIncrementalLassoHitTester (int percentageWithinLasso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.IncrementalLassoHitTester GetIncrementalLassoHitTester(int32 percentageWithinLasso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIncrementalLassoHitTester (percentageWithinLasso As Integer) As IncrementalLassoHitTester" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::IncrementalLassoHitTester ^ GetIncrementalLassoHitTester(int percentageWithinLasso);" />
      <MemberSignature Language="F#" Value="member this.GetIncrementalLassoHitTester : int -&gt; System.Windows.Ink.IncrementalLassoHitTester" Usage="strokeCollection.GetIncrementalLassoHitTester percentageWithinLasso" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.IncrementalLassoHitTester</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentageWithinLasso" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percentageWithinLasso">적중된 것으로 간주되기 위해 올가미 내에 포함되어야 하는 각 <see cref="T:System.Windows.Ink.Stroke" />의 최소 비율입니다.</param>
        <summary>자유롭게 그릴 수 있는 올가미 경로를 사용하여 <see cref="T:System.Windows.Ink.IncrementalLassoHitTester" />의 적중 테스트를 수행하는 <see cref="T:System.Windows.Ink.StrokeCollection" />를 만듭니다.</summary>
        <returns><see cref="T:System.Windows.Ink.IncrementalLassoHitTester" />의 적중 테스트를 수행하는 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A> 메서드가 반환 되는 <xref:System.Windows.Ink.IncrementalLassoHitTester> 것으로 간주를 <xref:System.Windows.Ink.Stroke> "적중 될" 올가미 경로로 둘러싸인 경우. 올가미 도구를 사용 하 여 스트로크를 선택 하는 기능 등의 기능을 구현할 때 유용 합니다. <xref:System.Windows.Controls.InkCanvas> 사용 하 여는 <xref:System.Windows.Ink.IncrementalLassoHitTester> 올가미 선택 도구를 구현 합니다.  
  
   
  
## Examples  
 다음 예제에서는 가져오는 방법을 보여 줍니다는 <xref:System.Windows.Ink.IncrementalLassoHitTester> 사용자 올가미 도구를 사용 하 여 스트로크를 선택할 수 있도록 합니다. 사용자가 잉크를 선택할 수 있는 컨트롤을 참조 하세요 [방법: 사용자 지정 컨트롤에서 잉크 선택](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)합니다.  
  
 [!code-csharp[StrokeCollectionMethods#17](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/InkSelector.cs#17)]
 [!code-vb[StrokeCollectionMethods#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/InkSelector.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncrementalStrokeHitTester">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.IncrementalStrokeHitTester GetIncrementalStrokeHitTester (System.Windows.Ink.StylusShape eraserShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.IncrementalStrokeHitTester GetIncrementalStrokeHitTester(class System.Windows.Ink.StylusShape eraserShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIncrementalStrokeHitTester (eraserShape As StylusShape) As IncrementalStrokeHitTester" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::IncrementalStrokeHitTester ^ GetIncrementalStrokeHitTester(System::Windows::Ink::StylusShape ^ eraserShape);" />
      <MemberSignature Language="F#" Value="member this.GetIncrementalStrokeHitTester : System.Windows.Ink.StylusShape -&gt; System.Windows.Ink.IncrementalStrokeHitTester" Usage="strokeCollection.GetIncrementalStrokeHitTester eraserShape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.IncrementalStrokeHitTester</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraserShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="eraserShape">스타일러스의 끝을 지정하는 <see cref="T:System.Windows.Ink.StylusShape" />입니다.</param>
        <summary>지우기 경로를 사용하여 <see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" />의 적중 테스트를 수행하는 <see cref="T:System.Windows.Ink.StrokeCollection" />를 만듭니다.</summary>
        <returns><see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" />의 적중 테스트를 수행하는 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> 메서드가 반환 되는 <xref:System.Windows.Ink.IncrementalStrokeHitTester> 것으로 간주는 <xref:System.Windows.Ink.Stroke> "적중 될" 지우개 경로 교차 하는 경우. 이 부분을 지울 수와 같은 기능을 구현 하는 데는 <xref:System.Windows.Ink.Stroke>합니다. <xref:System.Windows.Controls.InkCanvas> 사용 하 여는 <xref:System.Windows.Ink.IncrementalStrokeHitTester> 때 합니다 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 속성이 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.  
  
   
  
## Examples  
 다음 예제에서는 가져오는 방법을 보여 줍니다.는 <xref:System.Windows.Ink.IncrementalStrokeHitTester> 의 일부를 지우는 사용할 수 있는 한 <xref:System.Windows.Ink.Stroke>합니다. 사용자가 잉크를 지울 수 있도록 하는 컨트롤을 만들려면 참조 [방법: 사용자 지정 컨트롤에서 잉크 지우기](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)합니다.  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyData">
      <MemberSignature Language="C#" Value="public object GetPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyData (propertyDataId As Guid) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyData : Guid -&gt; obj" Usage="strokeCollection.GetPropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">가져올 사용자 지정 속성과 연결된 <see cref="T:System.Guid" />입니다.</param>
        <summary>지정한 <see cref="T:System.Guid" />와 연결된 사용자 지정 속성의 값을 반환합니다.</summary>
        <returns>지정한 <see cref="T:System.Guid" />와 연결된 사용자 지정 속성의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> 하 고 <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> 메서드를 사용 하면 사용자 지정 속성을 추가할 수는 <xref:System.Windows.Ink.StrokeCollection>합니다. 추가 정보를 포함할 수 있습니다는 <xref:System.Windows.Ink.StrokeCollection>합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 속성 데이터를 가져와 추가 하는 방법을 보여 줍니다. 합니다 `AddTimeStamp_Click` 메서드를 <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> 현재 시간을 추가 하는 방법의 <xref:System.Windows.Ink.StrokeCollection>합니다. `GetTimeStap_Click` 메서드를 <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> 타임 스탬프를 검색 하는 메서드는 <xref:System.Windows.Ink.StrokeCollection>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="propertyDataId" />가 <see cref="T:System.Windows.Ink.StrokeCollection" />의 사용자 지정 속성과 연결되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyDataIds">
      <MemberSignature Language="C#" Value="public Guid[] GetPropertyDataIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid[] GetPropertyDataIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetPropertyDataIds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyDataIds () As Guid()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Guid&gt; ^ GetPropertyDataIds();" />
      <MemberSignature Language="F#" Value="member this.GetPropertyDataIds : unit -&gt; Guid[]" Usage="strokeCollection.GetPropertyDataIds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" />과 연결된 사용자 지정 속성의 GUID를 반환합니다.</summary>
        <returns>사용자 지정 속성 ID를 나타내는 <see cref="T:System.Guid" /> 형식의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서 사용자 지정 속성 id를 가져오는 방법을 보여 줍니다는 <xref:System.Windows.Ink.StrokeCollection>합니다.  
  
 [!code-csharp[StrokeCollectionMethods#27](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#27)]
 [!code-vb[StrokeCollectionMethods#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정한 영역 내에 포함된 스트로크의 컬렉션을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Windows.Point -&gt; System.Windows.Ink.StrokeCollection" Usage="strokeCollection.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">적중 테스트를 수행할 점입니다.</param>
        <summary>지정한 점과 교차하는 스트로크의 컬렉션을 반환합니다.</summary>
        <returns>지정한 점과 교차하는 <see cref="T:System.Windows.Ink.Stroke" /> 개체의 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 지정 된 교차 하는 스트로크를 가져오는 방법을 <xref:System.Windows.Point>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkPresenter> 호출 `presenter`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#15)]
 [!code-vb[StrokeCollectionMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints, int percentageWithinLasso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints, int32 percentageWithinLasso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (lassoPoints As IEnumerable(Of Point), percentageWithinLasso As Integer) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints, int percentageWithinLasso);" />
      <MemberSignature Language="F#" Value="member this.HitTest : seq&lt;System.Windows.Point&gt; * int -&gt; System.Windows.Ink.StrokeCollection" Usage="strokeCollection.HitTest (lassoPoints, percentageWithinLasso)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="percentageWithinLasso" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">적중 테스트를 수행할 영역의 범위를 나타내는 <see cref="T:System.Windows.Point" /> 형식의 배열입니다.</param>
        <param name="percentageWithinLasso"><paramref name="lassoPoints" />에 포함될 <see cref="T:System.Windows.Ink.Stroke" />의 허용 가능한 길이이며 백분율로 표시됩니다.</param>
        <summary>지정한 영역 내에서 길이가 지정한 비율 이상인 스트로크의 컬렉션을 반환합니다.</summary>
        <returns><see cref="T:System.Windows.Ink.StrokeCollection" /> 배열 내에서 지정한 비율 이상인 스트로크가 있는 <see cref="T:System.Windows.Point" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서 지정한 올가미 내 80% 이상인 모든 스트로크를 제거 하는 방법에 설명 된 <xref:System.Windows.Ink.StrokeCollection>합니다. 사용자 지정 컨트롤을 사용 하면을 올가미를 사용 하 여 잉크를 선택 하는 경우에 유용 합니다. 사용자는 올가미를 사용 하 여 잉크를 선택할 수 있는 컨트롤을 참조 하세요 [방법: 사용자 지정 컨트롤에서 잉크 선택](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)합니다.  
  
 [!code-csharp[StrokeCollectionMethods#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#16)]
 [!code-vb[StrokeCollectionMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="lassoPoints" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="percentageWithinLasso" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="lassoPoints" />에 빈 배열이 포함된 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentageWithinLasso" />가 0보다 작거나 100보다 큽니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; path, System.Windows.Ink.StylusShape stylusShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; path, class System.Windows.Ink.StylusShape stylusShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ path, System::Windows::Ink::StylusShape ^ stylusShape);" />
      <MemberSignature Language="F#" Value="member this.HitTest : seq&lt;System.Windows.Point&gt; * System.Windows.Ink.StylusShape -&gt; System.Windows.Ink.StrokeCollection" Usage="strokeCollection.HitTest (path, stylusShape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="stylusShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="path">적중 테스트를 수행할 경로를 나타내는 <see cref="T:System.Windows.Point" /> 형식의 배열입니다.</param>
        <param name="stylusShape"><paramref name="eraserPath" />의 모양을 지정하는 <see cref="T:System.Windows.Ink.StylusShape" />입니다.</param>
        <summary>지정한 경로와 교차하는 스트로크의 컬렉션을 반환합니다.</summary>
        <returns><paramref name="path" />와 교차하는 스트로크의 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 모든 스트로크를 경로 교차 하 여 만든의 색을 변경 합니다 <xref:System.Windows.Point> 배열입니다.  이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkPresenter> 호출 `presenter`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#37](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#37)]
 [!code-vb[StrokeCollectionMethods#37](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point, double diameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Point point, float64 diameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Windows::Point point, double diameter);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Windows.Point * double -&gt; System.Windows.Ink.StrokeCollection" Usage="strokeCollection.HitTest (point, diameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="diameter" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="point">적중 횟수 테스트에 대한 <see cref="T:System.Windows.Point" />입니다.</param>
        <param name="diameter">적중 테스트를 수행할 <see cref="T:System.Windows.Point" /> 주변 영역의 크기입니다.</param>
        <summary>지정한 영역과 교차하는 스트로크의 컬렉션을 반환합니다.</summary>
        <returns>지정한 점과 교차하는 <see cref="T:System.Windows.Ink.Stroke" /> 개체의 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 지정 된 교차 하는 스트로크를 가져오는 방법을 <xref:System.Windows.Point>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkPresenter> 호출 `presenter`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#15)]
 [!code-vb[StrokeCollectionMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Rect bounds, int percentageWithinBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Rect bounds, int32 percentageWithinBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (bounds As Rect, percentageWithinBounds As Integer) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Windows::Rect bounds, int percentageWithinBounds);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Windows.Rect * int -&gt; System.Windows.Ink.StrokeCollection" Usage="strokeCollection.HitTest (bounds, percentageWithinBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
        <Parameter Name="percentageWithinBounds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bounds">적중 테스트를 수행할 범위를 지정하는 <see cref="T:System.Windows.Rect" />입니다.</param>
        <param name="percentageWithinBounds">적중된 것으로 간주되기 위해 범위 내에 있어야 하는 스트로크의 최소 필수 길이입니다.</param>
        <summary>지정한 사각형에서 길이가 지정한 비율 이상인 스트로크의 컬렉션을 반환합니다.</summary>
        <returns><see cref="T:System.Windows.Ink.StrokeCollection" /> 내에서 지정한 비율 이상인 스트로크가 있는 <see cref="T:System.Windows.Rect" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 범위 내에서 50% 이상 된 스트로크를 지웁니다는 <xref:System.Windows.Rect>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkPresenter> 호출 `presenter`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#36](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#36)]
 [!code-vb[StrokeCollectionMethods#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Ink::Stroke ^ stroke);" />
      <MemberSignature Language="F#" Value="override this.IndexOf : System.Windows.Ink.Stroke -&gt; int" Usage="strokeCollection.IndexOf stroke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="stroke">위치가 필요한 스트로크입니다.</param>
        <summary><see cref="T:System.Windows.Ink.Stroke" />에 있는 지정한 <see cref="T:System.Windows.Ink.StrokeCollection" />의 인덱스를 반환합니다.</summary>
        <returns>스트로크의 인덱스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Ink.StrokeCollection.IndexOf%2A> 경우-1이 반환 `stroke` 의 멤버인는 <xref:System.Windows.Ink.StrokeCollection>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkSerializedFormat">
      <MemberSignature Language="C#" Value="public static readonly string InkSerializedFormat;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string InkSerializedFormat" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.StrokeCollection.InkSerializedFormat" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InkSerializedFormat As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ InkSerializedFormat;" />
      <MemberSignature Language="F#" Value=" staticval mutable InkSerializedFormat : string" Usage="System.Windows.Ink.StrokeCollection.InkSerializedFormat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>잉크 데이터에 대한 네이티브 지속성 형식을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Ink.StrokeCollection.InkSerializedFormat> 필드의 형식을 지정 하는 <xref:System.Windows.Ink.StrokeCollection> 복사 하는 경우와 같은 데이터를 전송할 때는 <xref:System.Windows.Ink.StrokeCollection> 클립보드로 합니다.  
  
   
  
## Examples  
 다음 예제에서는 복사 하는 방법에 설명 된 <xref:System.Windows.Ink.StrokeCollection> 클립보드로 합니다. 예제에서는 지정 된 <xref:System.Windows.Ink.StrokeCollection> 위해서입니다에 잉크 직렬화 형식 ISF (), 다른 프로그램에서 Microsoft Office Word에서 복사한 데이터를 받아들일 수와 같은.  
  
 [!code-csharp[StrokeCollectionMethods#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#5)]
 [!code-vb[StrokeCollectionMethods#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override sealed void InsertItem (int index, System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Windows::Ink::Stroke ^ stroke);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * System.Windows.Ink.Stroke -&gt; unit" Usage="strokeCollection.InsertItem (index, stroke)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="index">지정한 인덱스입니다.</param>
        <param name="stroke">지정된 스트로크입니다.</param>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" />의 지정된 인덱스에 스트로크를 삽입합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="strokeCollection.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" /> 속성이 변경될 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyDataChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyDataChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyDataChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyDataChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit&#xA;override this.OnPropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventArgs -&gt; unit" Usage="strokeCollection.OnPropertyDataChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokesChanged (System.Windows.Ink.StrokeCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokesChanged(class System.Windows.Ink.StrokeCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokesChanged (e As StrokeCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokesChanged(System::Windows::Ink::StrokeCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokesChanged : System.Windows.Ink.StrokeCollectionChangedEventArgs -&gt; unit&#xA;override this.OnStrokesChanged : System.Windows.Ink.StrokeCollectionChangedEventArgs -&gt; unit" Usage="strokeCollection.OnStrokesChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.StrokeCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Ink.StrokeCollectionChangedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Ink.StrokeCollection.StrokesChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.  
  
 <xref:System.Windows.Ink.StrokeCollection.OnStrokesChanged%2A> 메서드는 파생된 클래스는 파생된 클래스에서 이벤트를 처리 하는 기본 방법 되는 대리자를 연결 하지 않고 이벤트를 처리할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" /> 파생된 클래스에서 호출 해야 합니다 <see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" /> 대리자를 등록 하는 기본 클래스에 대 한 메서드 이벤트를 수신 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PropertyDataChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyDataChanged As PropertyDataChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ PropertyDataChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventHandler " Usage="member this.PropertyDataChanged : System.Windows.Ink.PropertyDataChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 속성이 <see cref="T:System.Windows.Ink.StrokeCollection" />에서 추가되거나 제거될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 처리 하는 방법에 설명 합니다 <xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged> 이벤트입니다. 이 예제에서는 있다고 가정를 <xref:System.Guid> 호출 `dateTimeGuid` 및 <xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged> 이벤트가이 예제에서 정의 된 이벤트 처리기에 연결 합니다.  
  
 [!code-csharp[StrokeCollectionMethods#29](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#29)]
 [!code-vb[StrokeCollectionMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (strokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Ink::StrokeCollection ^ strokes);" />
      <MemberSignature Language="F#" Value="override this.Remove : System.Windows.Ink.StrokeCollection -&gt; unit" Usage="strokeCollection.Remove strokes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes">컬렉션에서 제거할 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</param>
        <summary>지정된 스트로크을 컬렉션에서 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Ink.StrokeCollection.Remove%2A> 메서드를 발생 시킵니다 합니다 <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> 각각에 대 한 이벤트 <xref:System.Windows.Ink.Stroke> 제거 합니다.  
  
   
  
## Examples  
 다음 예제에서 지정한 올가미 내 80% 이상인 모든 스트로크를 제거 하는 방법에 설명 된 <xref:System.Windows.Ink.StrokeCollection>합니다. 사용자 지정 컨트롤을 사용 하면을 올가미를 사용 하 여 잉크를 선택 하는 경우에 유용 합니다. 사용자는 올가미를 사용 하 여 잉크를 선택할 수 있는 컨트롤을 참조 하세요 [방법: 사용자 지정 컨트롤에서 잉크 선택](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)합니다.  
  
 [!code-csharp[StrokeCollectionMethods#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#16)]
 [!code-vb[StrokeCollectionMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override sealed void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="strokeCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">지정한 인덱스입니다.</param>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" />에서 지정한 인덱스의 스트로크를 제거합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyData">
      <MemberSignature Language="C#" Value="public void RemovePropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyData (propertyDataId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyData(Guid propertyDataId);" />
      <MemberSignature Language="F#" Value="member this.RemovePropertyData : Guid -&gt; unit" Usage="strokeCollection.RemovePropertyData propertyDataId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">제거할 사용자 지정 속성과 연결된 <see cref="T:System.Guid" />입니다.</param>
        <summary>지정한 <see cref="T:System.Guid" />와 연결된 사용자 지정 속성을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서 사용자 지정 속성을 제거 하는 방법에 설명 합니다 <xref:System.Windows.Ink.StrokeCollection>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1` 와 <xref:System.Guid> 호출 `timestamp`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#28](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#28)]
 [!code-vb[StrokeCollectionMethods#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컬렉션에 있는 스트로크를 바꿉니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (System.Windows.Ink.Stroke strokeToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Replace(class System.Windows.Ink.Stroke strokeToReplace, class System.Windows.Ink.StrokeCollection strokesToReplaceWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Replace (strokeToReplace As Stroke, strokesToReplaceWith As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Replace(System::Windows::Ink::Stroke ^ strokeToReplace, System::Windows::Ink::StrokeCollection ^ strokesToReplaceWith);" />
      <MemberSignature Language="F#" Value="member this.Replace : System.Windows.Ink.Stroke * System.Windows.Ink.StrokeCollection -&gt; unit" Usage="strokeCollection.Replace (strokeToReplace, strokesToReplaceWith)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokeToReplace" Type="System.Windows.Ink.Stroke" />
        <Parameter Name="strokesToReplaceWith" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokeToReplace">바꿀 <see cref="T:System.Windows.Ink.Stroke" />입니다.</param>
        <param name="strokesToReplaceWith">소스 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</param>
        <summary>지정한 <see cref="T:System.Windows.Ink.Stroke" />를 지정한 <see cref="T:System.Windows.Ink.StrokeCollection" />으로 바꿉니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Replace%2A> 메서드는 <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> 이벤트를 발생시킵니다.  
  
   
  
## Examples  
 다음 예제에서 선택된 된 스트로크를 교체 하는 방법에 설명 된 <xref:System.Windows.Controls.InkCanvas> 다른 <xref:System.Windows.Ink.StrokeCollection>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#7)]
 [!code-vb[StrokeCollectionMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="strokesToReplace" />가 비어 있는 경우  
  
또는 
 <paramref name="strokesToReplaceWith" />가 비어 있는 경우  
  
또는 
<paramref name="strokesToReplaceWith" />의 <see cref="T:System.Windows.Ink.Stroke" />가 이미 <paramref name="strokesToReplace" />에 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (System.Windows.Ink.StrokeCollection strokesToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Replace(class System.Windows.Ink.StrokeCollection strokesToReplace, class System.Windows.Ink.StrokeCollection strokesToReplaceWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Replace (strokesToReplace As StrokeCollection, strokesToReplaceWith As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Replace(System::Windows::Ink::StrokeCollection ^ strokesToReplace, System::Windows::Ink::StrokeCollection ^ strokesToReplaceWith);" />
      <MemberSignature Language="F#" Value="member this.Replace : System.Windows.Ink.StrokeCollection * System.Windows.Ink.StrokeCollection -&gt; unit" Usage="strokeCollection.Replace (strokesToReplace, strokesToReplaceWith)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokesToReplace" Type="System.Windows.Ink.StrokeCollection" />
        <Parameter Name="strokesToReplaceWith" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokesToReplace">대상 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</param>
        <param name="strokesToReplaceWith">소스 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</param>
        <summary>지정한 <see cref="T:System.Windows.Ink.StrokeCollection" />을 새 <see cref="T:System.Windows.Ink.StrokeCollection" />으로 바꿉니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Ink.StrokeCollection.Replace%2A> 메서드를 발생 시킵니다 합니다 <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> 각각에 대 한 이벤트 <xref:System.Windows.Ink.Stroke> 대체 합니다.  
  
   
  
## Examples  
 다음 예제에서 선택된 된 스트로크를 교체 하는 방법에 설명 된 <xref:System.Windows.Controls.InkCanvas> 다른 <xref:System.Windows.Ink.StrokeCollection>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#7)]
 [!code-vb[StrokeCollectionMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="strokesToReplace" />가 비어 있는 경우  
  
또는 
 <paramref name="strokesToReplaceWith" />가 비어 있는 경우  
  
또는 
<paramref name="strokesToReplaceWith" />의 <see cref="T:System.Windows.Ink.Stroke" />가 이미 <paramref name="strokesToReplace." />에 있는 경우  
  
또는 
<paramref name="strokesToReplaceWith" />의 스트로크가 비연속적인 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" />을 저장합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="strokeCollection.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><see cref="T:System.IO.Stream" />를 저장할 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</param>
        <summary>지정한 <see cref="T:System.Windows.Ink.StrokeCollection" />에 <see cref="T:System.IO.Stream" />을 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Ink.StrokeCollection.Save%2A> 메서드 저장 된 <xref:System.Windows.Ink.StrokeCollection> 로 잉크 직렬화 형식 ISF ().  
  
   
  
## Examples  
 다음 예제에 저장 하는 방법을 보여 줍니다.는 <xref:System.Windows.Ink.StrokeCollection> 를 사용 하 여 파일에는 <xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29> 메서드. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.Stream stream, bool compress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.Stream stream, bool compress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::Stream ^ stream, bool compress);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.IO.Stream * bool -&gt; unit&#xA;override this.Save : System.IO.Stream * bool -&gt; unit" Usage="strokeCollection.Save (stream, compress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="compress" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><see cref="T:System.IO.Stream" />를 저장할 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</param>
        <param name="compress"><see cref="T:System.Windows.Ink.StrokeCollection" />을 압축하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 경우 <see cref="T:System.Windows.Ink.StrokeCollection" />을 지정한 <see cref="T:System.IO.Stream" />에 저장하고 압축합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Ink.StrokeCollection.Save%2A> 메서드 저장 된 <xref:System.Windows.Ink.StrokeCollection> 로 잉크 직렬화 형식 ISF ().  
  
   
  
## Examples  
 다음 예제에 저장 하는 방법을 보여 줍니다.는 <xref:System.Windows.Ink.StrokeCollection> 를 사용 하 여 파일에는 <xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29> 메서드. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override sealed void SetItem (int index, System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Windows::Ink::Stroke ^ stroke);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * System.Windows.Ink.Stroke -&gt; unit" Usage="strokeCollection.SetItem (index, stroke)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="index">스트로크를 바꿀 위치입니다.</param>
        <param name="stroke">현재 스트로크를 바꿀 스트로크입니다.</param>
        <summary>지정한 인덱스에 있는 스트로크를 바꿉니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.StrokeCollectionChangedEventHandler StrokesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.StrokeCollectionChangedEventHandler StrokesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.StrokesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StrokesChanged As StrokeCollectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::StrokeCollectionChangedEventHandler ^ StrokesChanged;" />
      <MemberSignature Language="F#" Value="member this.StrokesChanged : System.Windows.Ink.StrokeCollectionChangedEventHandler " Usage="member this.StrokesChanged : System.Windows.Ink.StrokeCollectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션의 <see cref="T:System.Windows.Ink.Stroke" />가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 현재 시간으로 추가 사용자 지정 속성에 각각의 새 스트로크를 <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> 이벤트 처리기입니다. 가정는 <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> 이벤트가이 예제에서 정의 된 이벤트 처리기에 연결 합니다.  
  
 [!code-csharp[DrawingAttributes#4](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#4)]
 [!code-vb[DrawingAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
      <MemberSignature Language="C#" Value="event System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event CollectionChanged As NotifyCollectionChangedEventHandler Implements System.Collections.Specialized.INotifyCollectionChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" />가 변경될 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Ink.StrokeCollection" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (transformMatrix As Matrix, applyToStylusTip As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Media.Matrix * bool -&gt; unit" Usage="strokeCollection.Transform (transformMatrix, applyToStylusTip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformMatrix" Type="System.Windows.Media.Matrix" />
        <Parameter Name="applyToStylusTip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="transformMatrix"><see cref="T:System.Windows.Media.Matrix" />에서 수행할 변환을 지정하는 <see cref="T:System.Windows.Ink.StrokeCollection" />입니다.</param>
        <param name="applyToStylusTip">스타일러스의 끝에 변환을 적용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정한 <see cref="P:System.Windows.Ink.Stroke.StylusPoints" />에 따라 <see cref="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" />의 각 스트로크에 대한 각 <see cref="T:System.Windows.Ink.StrokeCollection" />를 수정하고 <see cref="T:System.Windows.Media.Matrix" />을 선택적으로 수정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 `applyToStylusTip` 됩니다 `true`, <xref:System.Windows.Ink.StrokeCollection.Transform%2A> 메서드 모양의 스타일러스 끝 뿐만 아니라 스트로크의 위치에 영향을 줍니다. 예를 들어, 회전 하는 경우는 <xref:System.Windows.Ink.StrokeCollection> 90도 스트로크 축을 중심으로 이동 하 고 스트로크 너비와 높이가 반전 되어 표시 됩니다.  
  
   
  
## Examples  
 다음 예제 모든 스트로크를 이동 하는 방법에 설명 된 <xref:System.Windows.Controls.InkCanvas>합니다. 이 예제에서는 있다고 가정를 <xref:System.Windows.Controls.InkCanvas> 호출 `inkCanvas1`합니다.  
  
 [!code-csharp[StrokeCollectionMethods#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#9)]
 [!code-vb[StrokeCollectionMethods#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>