<Type Name="ApplicationCommands" FullName="System.Windows.Input.ApplicationCommands">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f44aa3666f85dd8d5534328cb9b88205fbf4671" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39892452" /></Metadata><TypeSignature Language="C#" Value="public static class ApplicationCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ApplicationCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ApplicationCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type ApplicationCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>애플리케이션 관련 명령의 표준 집합을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령에는 <xref:System.Windows.Input.ApplicationCommands> 클래스 및 다른  명령 라이브러리 클래스와 같은 <xref:System.Windows.Input.ComponentCommands> 및 <xref:System.Windows.Input.NavigationCommands>은 애플리케이션 프로그래머가 자주 하는 일반적인 명령 집합을 나타내는 데 사용 합니다.  명령을 인스턴스의 나타냅니다는 <xref:System.Windows.Input.RoutedCommand> 및 명령의 구현 논리 없습니다. 구현 논리를 사용 하 여 명령이 바인딩되는 <xref:System.Windows.Input.CommandBinding>합니다. 예를 들어 경우는 <xref:System.Windows.Input.ApplicationCommands.Close%2A> 논리를 수행 하는 컨트롤에 명령이 실행 되는 <xref:System.Windows.Input.ApplicationCommands.Close%2A> 명령 컨트롤을 따라서 애플리케이션 작성자가 담당 컨트롤은 하는 방법을 결정 하는 논리를 작성 하는 제공 되지 않을 수 있습니다 명령을 처리 합니다.  
  
 많은 컨트롤은 명령 라이브러리에서 명령의 대부분에 대 한 구현 논리를 제공 합니다.  예를 들어,를 <xref:System.Windows.Controls.TextBox> 클래스에 대 한 논리를 제공 합니다 <xref:System.Windows.Input.ApplicationCommands.Paste%2A>, <xref:System.Windows.Input.ApplicationCommands.Cut%2A>, <xref:System.Windows.Input.ApplicationCommands.Copy%2A>, <xref:System.Windows.Input.ApplicationCommands.Undo%2A>, 및 <xref:System.Windows.Input.ApplicationCommands.Redo%2A> 명령입니다.  
  
 명령 및 명령 실행에 대 한 자세한 내용은 합니다 [명령 개요](~/docs/framework/wpf/advanced/commanding-overview.md)합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Documents.EditingCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <Member MemberName="CancelPrint">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CancelPrint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CancelPrint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.CancelPrint" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CancelPrint As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CancelPrint { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelPrint : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.CancelPrint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인쇄 취소 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 키 제스처 </term> <description> 정의 된 제스처가 없습니다.  </description></item><item><term> UI 텍스트 </term> <description> 인쇄 취소  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 인쇄 작업을 취소 하려고 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_CancelPrint"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="CancelPrint"/>>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Close { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Close" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Close As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Close { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Close : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Close" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>닫기 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 키 제스처 </term> <description> 정의 된 제스처가 없습니다.  </description></item><item><term> UI 텍스트 </term> <description> 닫기  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 항목 (파일)을 닫으려면 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Close"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Close"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ContextMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextMenu As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ContextMenu { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>상황에 맞는 메뉴 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> shift+f10 앱 </description> </item> <item> <term> 마우스 제스처 </term> <description> 마우스 제스처는 명령에 연결 되어 있지 않습니다 하지만 대부분의 응용 프로그램 상황에 맞는 메뉴 호출을 마우스 오른쪽 단추로 클릭 제스처를 사용 하 여 규칙을 따릅니다.  </description></item><item><term> UI 텍스트 </term> <description> 상황에 맞는 메뉴  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 상황에 맞는 메뉴를 열려면 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_ContextMenu"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="ContextMenu"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Copy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Copy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Copy As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Copy { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Copy : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Copy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>복사 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + C Ctrl + Insert </description> </item> <item> <term>UI 텍스트가 </term> <description> 복사  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 선택 영역을 클립보드에 복사 하려고 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Copy"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Copy"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="CorrectionList">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectionList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.CorrectionList" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectionList As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectionList { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectionList : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.CorrectionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>수정 목록 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 키 제스처 </term> <description> 정의 된 제스처가 없습니다.  </description></item><item><term> UI 텍스트 </term> <description> 수정 목록  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 수정 목록을 열려면 함을 나타냅니다.  
  
 수정 목록 컨텍스트에 따라 다릅니다. 예를 들어 [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] 수정 목록은 재 변환을 하면 선택 항목을 입력 합니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_CorrectionList"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="CorrectionList"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Cut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Cut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Cut As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Cut { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cut : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Cut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>잘라내기 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + X Shift + Delete </description> </item> <item> <term>UI 텍스트가 </term> <description> 잘라내기  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 클립보드 선택 영역을 잘라내어 하려고 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Cut"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Cut"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삭제 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Del </description> </item> <item> <term> UI 텍스트  </term> <description> 삭제  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 선택 영역을 삭제 하려고 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Delete"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Find { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Find" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Find" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Find As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Find { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Find : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Find" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>찾기 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + F </description> </item> <item> <term> UI 텍스트  </term> <description> 찾기  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 전용된 찾기 대화 상자를 열려면 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Find"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Find"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Help" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Help As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Help { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>도움말 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> F1 </description> </item> <item> <term> UI 텍스트가 </term> <description> 도움말  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 (창) 도움말 대화 상자를 열려면 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Help"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Help"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand New { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand New" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.New" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property New As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ New { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.New : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.New" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>새로 만들기 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + N </description> </item> <item> <term> UI 텍스트  </term> <description> 새  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 새 항목을 만들려면 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_New"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="New"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="NotACommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NotACommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NotACommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.NotACommand" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NotACommand As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ NotACommand { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NotACommand : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.NotACommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항상 무시되는 명령을 나타냅니다.</summary>
        <value>명령입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 항상 무시 되 고 원인이 된 입력된 이벤트를 처리 하지 않습니다.  기존 컨트롤에 기본 제공 되는 입력된 바인딩 해제 하는 방법을 제공 합니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_NotACommand"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="NotACommand"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Open { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Open" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Open" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Open As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Open { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Open : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Open" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열기 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + O </description> </item> <item> <term> UI 텍스트  </term> <description> 열기  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 (일반적으로 파일) 항목을 열려면 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Open"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Open"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Paste { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Paste" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Paste As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Paste { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paste : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Paste" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>붙여넣기 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + V Shift + Insert </description> </item> <item> <term>UI 텍스트가 </term> <description> 붙여넣기  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 붙여 클립보드로 선택 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Paste"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Paste"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Print { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Print" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Print" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Print As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Print { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Print : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Print" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인쇄 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + P </description> </item> <item> <term> UI 텍스트  </term> <description> 인쇄  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 현재 항목을 인쇄 하려고 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Print"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Print"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand PrintPreview { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand PrintPreview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.PrintPreview" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrintPreview As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ PrintPreview { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintPreview : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.PrintPreview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인쇄 미리 보기 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + F2 </description> </item> <item> <term> UI 텍스트  </term> <description> 인쇄 미리 보기  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 인쇄 미리 보기 대화 상자를 열려면 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_PrintPreview"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="PrintPreview"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Properties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Properties { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>속성 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> F4 </description> </item> <item> <term> UI 텍스트가 </term> <description> 속성  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 속성 대화 상자를 열려면 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Properties"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Properties"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Redo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Redo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Redo As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Redo { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Redo : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Redo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>다시 실행 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + Y </description> </item> <item> <term> UI 텍스트  </term> <description> 다시 실행  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 마지막 작업을 다시 실행 하려고 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Redo"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Redo"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Replace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Replace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Replace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Replace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Replace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Replace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Replace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바꾸기 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + H </description> </item> <item> <term> UI 텍스트  </term> <description> 대체  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 바꾸기 대화 상자를 열려면 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Replace"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Replace"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Save { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Save" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Save" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Save As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Save { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Save : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Save" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>저장 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + S </description> </item> <item> <term> UI 텍스트  </term> <description> 저장  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 현재 항목을 저장 하려고 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Save"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Save"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SaveAs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SaveAs" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.SaveAs" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SaveAs As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SaveAs { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SaveAs : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.SaveAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>다른 이름으로 저장 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 키 제스처 </term> <description> 정의 된 제스처가 없습니다.  </description></item><item><term> UI 텍스트 </term> <description> 로 저장  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 이름으로 저장 대화 상자를 열려면 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_SaveAs"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="SaveAs"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectAll { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectAll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectAll As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectAll { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectAll : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.SelectAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>모두 선택 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + A </description> </item> <item> <term> UI 텍스트  </term> <description> 모두 선택  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 모든 항목을 선택 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_SelectAll"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="SelectAll"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Stop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Stop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Stop As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Stop { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Stop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>중지 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Esc </description> </item> <item> <term> UI 텍스트  </term> <description> 중지  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 처리를 중지 하려고 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Stop"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Stop"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Undo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Undo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Undo As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Undo { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Undo : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ApplicationCommands.Undo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>실행 취소 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + Z </description> </item> <item> <term> UI 텍스트  </term> <description> 실행 취소  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 마지막 작업을 취소 하려고 함을 나타냅니다.  
  
 반드시 필요 하지 않으면 지정된 된 개체에서 명령에 대 한 구현을 대부분의 명령에 대 한 구현은 애플리케이션 개발자의 책임입니다.  
  
<a name="xamlAttributeUsage_Undo"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="Undo"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
  </Members>
</Type>