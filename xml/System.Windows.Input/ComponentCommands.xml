<Type Name="ComponentCommands" FullName="System.Windows.Input.ComponentCommands">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e649067e73c50652dde6f1419d1415d6cfe7cba" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39740283" /></Metadata><TypeSignature Language="C#" Value="public static class ComponentCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ComponentCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ComponentCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type ComponentCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>미리 정의된 키 입력 제스처 및 <see cref="P:System.Windows.Input.RoutedUICommand.Text" /> 속성이 있는 구성 요소 관련 명령의 표준 집합을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령에는 <xref:System.Windows.Input.ComponentCommands> 클래스 및 다른  명령 라이브러리 클래스와 같은 <xref:System.Windows.Input.ApplicationCommands> 및 <xref:System.Windows.Input.NavigationCommands>은 애플리케이션 프로그래머가 자주 하는 일반적인 명령 집합을 나타내는 데 사용 합니다.  명령을 인스턴스의 나타냅니다는 <xref:System.Windows.Input.RoutedCommand> 및 명령의 구현 논리 없습니다. 구현 논리를 통해 명령에 바인딩되는 <xref:System.Windows.UIElement.CommandBindings%2A>합니다. 예를 들어 경우는 <xref:System.Windows.Input.ComponentCommands.MoveLeft%2A> 컨트롤 (명령 대상)를 수행 하는 논리에서 명령을 실행 합니다 <xref:System.Windows.Input.ComponentCommands.MoveLeft%2A> 명령에는 제공 된 명령 대상에서 하므로 애플리케이션 작성자가 결정 하는 논리를 작성 하는 일을 담당 아닐 하는 방법 명령 대상이 명령을 처리 합니다.  
  
 많은 컨트롤은 다양 한 명령 라이브러리의 명령에 대 한 구현 논리 작업을 하지만 제공지 않습니다.  예를 들어,를 <xref:System.Windows.Controls.TextBox> 클래스에 대 한 논리를 제공는 <xref:System.Windows.Input.ApplicationCommands.Paste%2A> 명령인 <xref:System.Windows.Input.ApplicationCommands.Cut%2A> 명령인 <xref:System.Windows.Input.ApplicationCommands.Copy%2A> 명령을 <xref:System.Windows.Input.ApplicationCommands.Undo%2A> 명령 및 <xref:System.Windows.Input.ApplicationCommands.Redo%2A> 명령. 자세한 내용은 특정 컨트롤 클래스에 대 한 클래스 설명서를 참조 하십시오.  
  
 명령 및 명령에 대 한 자세한 내용은 참조 하세요. [명령 개요](~/docs/framework/wpf/advanced/commanding-overview.md)합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Documents.EditingCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
  </Docs>
  <Members>
    <Member MemberName="ExtendSelectionDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ExtendSelectionDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ExtendSelectionDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.ExtendSelectionDown" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExtendSelectionDown As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ExtendSelectionDown { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendSelectionDown : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.ExtendSelectionDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>아래로 선택 영역 확장 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Shift + 아래쪽 </description> </item> <item> <term> UI 텍스트 </term> <description> 아래로 선택 영역 확장  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 선택 영역을 아래로 확장 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_ExtendSelectionDown"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="ExtendSelectionDown"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="ExtendSelectionLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ExtendSelectionLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ExtendSelectionLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.ExtendSelectionLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExtendSelectionLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ExtendSelectionLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendSelectionLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.ExtendSelectionLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>왼쪽으로 선택 영역 확장 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Shift + 왼쪽 </description> </item> <item> <term> UI 텍스트 </term> <description> 왼쪽으로 선택 영역 확장  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 왼쪽 범위를 선택 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_ExtendSelectionLeft"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="ExtendSelectionLeft"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="ExtendSelectionRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ExtendSelectionRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ExtendSelectionRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.ExtendSelectionRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExtendSelectionRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ExtendSelectionRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendSelectionRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.ExtendSelectionRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>오른쪽으로 선택 영역 확장 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Shift + 오른쪽 </description> </item> <item> <term> UI 텍스트 </term> <description> 오른쪽으로 선택 영역 확장  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 오른쪽 범위를 선택 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_ExtendSelectionRight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="ExtendSelectionRight"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="ExtendSelectionUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ExtendSelectionUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ExtendSelectionUp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.ExtendSelectionUp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExtendSelectionUp As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ExtendSelectionUp { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendSelectionUp : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.ExtendSelectionUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>위로 선택 영역 확장 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Shift + 위쪽 </description> </item> <item> <term> UI 텍스트 </term> <description> 위로 선택 영역 확장  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 위쪽으로 범위를 선택 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_ExtendSelectionUp"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="ExtendSelectionUp"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveDown" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDown As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDown { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDown : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>아래로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> 아래로 </description> </item> <item> <term> UI 텍스트  </term> <description> 아래로 이동  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 아래로 선택 영역을 확장 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveDown"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveDown"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveFocusBack">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveFocusBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveFocusBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveFocusBack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveFocusBack As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveFocusBack { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveFocusBack : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveFocusBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포커스 뒤로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + 왼쪽 </description> </item> <item> <term> UI 텍스트 </term> <description> 포커스 뒤로 이동  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 이전 버전과 범위를 선택 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveFocusBack"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveFocusBack"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveFocusDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveFocusDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveFocusDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveFocusDown" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveFocusDown As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveFocusDown { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveFocusDown : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveFocusDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포커스 아래로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + 아래쪽 </description> </item> <item> <term> UI 텍스트 </term> <description> 아래로 포커스 이동  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 확장 하려고 함을 나타내는 포커스를 아래로 이동 합니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveFocusDown"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveFocusDown"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveFocusForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveFocusForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveFocusForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveFocusForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveFocusForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveFocusForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveFocusForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveFocusForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포커스 앞으로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + 오른쪽 화살표 </description> </item> <item> <term> UI 텍스트 </term> <description> 포커스 앞으로 이동  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 앞으로 포커스를 이동 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveFocusForward"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveFocusForward"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveFocusPageDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveFocusPageDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveFocusPageDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveFocusPageDown" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveFocusPageDown As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveFocusPageDown { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveFocusPageDown : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveFocusPageDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포커스 페이지 아래로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + PageDown </description> </item> <item> <term> UI 텍스트 </term> <description> 이동 집중 Page Down  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 한 페이지 아래로 포커스를 이동 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveFocusPageDown"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveFocusPageDown"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveFocusPageUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveFocusPageUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveFocusPageUp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveFocusPageUp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveFocusPageUp As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveFocusPageUp { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveFocusPageUp : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveFocusPageUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포커스 페이지 위로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + PageUp </description> </item> <item> <term> UI 텍스트 </term> <description> 이동 집중 Page Up  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 한 페이지 위로 포커스를 이동 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveFocusPageUp"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveFocusPageUp"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveFocusUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveFocusUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveFocusUp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveFocusUp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveFocusUp As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveFocusUp { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveFocusUp : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveFocusUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>포커스 위로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Ctrl + 위쪽 </description> </item> <item> <term> UI 텍스트  </term> <description> 포커스 위로 이동  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 포커스를 위로 이동 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveFocusUp"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveFocusUp"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>왼쪽으로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> 왼쪽 </description> </item> <item> <term> UI 텍스트  </term> <description> 왼쪽으로 이동  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 선택 영역을 왼쪽 이동 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveLeft"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveLeft"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>오른쪽으로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> 오른쪽 </description> </item> <item> <term> UI 텍스트  </term> <description> 오른쪽으로 이동  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 선택 영역 오른쪽으로 이동 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveRight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveRight"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveToEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveToEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>끝으로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> 끝 </description> </item> <item> <term> UI 텍스트  </term> <description> 끝으로 이동  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 마지막 항목 선택 영역을 이동 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveToEnd"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveToEnd"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveToHome">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToHome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToHome" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveToHome" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToHome As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToHome { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToHome : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveToHome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>맨 앞으로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> 홈 </description> </item> <item> <term> UI 텍스트  </term> <description> 맨 앞으로 이동  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 첫 번째 항목으로 선택 영역을 이동 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveToHome"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveToHome"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveToPageDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToPageDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToPageDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveToPageDown" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToPageDown As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToPageDown { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToPageDown : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveToPageDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 아래로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> PageDown </description> </item> <item> <term> UI 텍스트 </term> <description> 페이지 아래로 이동  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 한 페이지 아래로 선택 영역을 이동 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveToPageDown"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveToPageDown"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveToPageUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToPageUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToPageUp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveToPageUp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToPageUp As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToPageUp { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToPageUp : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveToPageUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 위로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> PageUp </description> </item> <item> <term> UI 텍스트  </term> <description> 페이지 위로 이동  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 한 페이지 위로 선택 영역을 이동 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveToPageUp"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveToPageUp"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MoveUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.MoveUp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUp As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUp { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUp : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.MoveUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>위로 이동 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> 위로 </description> </item> <item> <term> UI 텍스트가 </term> <description> 위로 이동  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 선택 영역 위로 이동 하려면 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_MoveUp"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="MoveUp"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="ScrollByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ScrollByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ScrollByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.ScrollByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ScrollByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ScrollByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.ScrollByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>줄별 스크롤 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 키 제스처 </term> <description> 정의 된 제스처 없음 </description> </item> <item> <term>UI 텍스트가 </term> <description> 줄 별 스크롤  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 상향 지정 된 개수의 줄을 세로로 스크롤 합니다 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_ScrollByLine"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="ScrollByLine"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="ScrollPageDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ScrollPageDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ScrollPageDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.ScrollPageDown" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ScrollPageDown As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ScrollPageDown { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollPageDown : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.ScrollPageDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>아래로 페이지 스크롤 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> PageDown </description> </item> <item> <term> UI 텍스트 </term> <description> 아래로 페이지 스크롤  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 페이지에서 아래로 스크롤하여 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_ScrollPageDown"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="ScrollPageDown"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="ScrollPageLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ScrollPageLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ScrollPageLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.ScrollPageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ScrollPageLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ScrollPageLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollPageLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.ScrollPageLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>왼쪽으로 페이지 스크롤 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 키 제스처 </term> <description> 정의 된 제스처가 없습니다.  </description></item><item><term> UI 텍스트 </term> <description> 왼쪽으로 페이지 스크롤  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 한 페이지 왼쪽으로 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_ScrollPageLeft"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="ScrollPageLeft"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="ScrollPageRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ScrollPageRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ScrollPageRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.ScrollPageRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ScrollPageRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ScrollPageRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollPageRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.ScrollPageRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>오른쪽으로 페이지 스크롤 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 키 제스처 </term> <description> 정의 된 제스처가 없습니다.  </description></item><item><term> UI 텍스트 </term> <description> 오른쪽으로 페이지 스크롤  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 한 페이지 오른쪽으로 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_ScrollPageRight"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="ScrollPageRight"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="ScrollPageUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ScrollPageUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ScrollPageUp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.ScrollPageUp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ScrollPageUp As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ScrollPageUp { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollPageUp : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.ScrollPageUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>위로 페이지 스크롤 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> PageUp </description> </item> <item> <term> UI 텍스트  </term> <description> 위로 페이지 스크롤  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 페이지에서 위쪽으로 세로로 스크롤합니다 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_ScrollPageUp"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="ScrollPageUp"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="SelectToEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.SelectToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.SelectToEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>맨 끝까지 선택 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Shift + End </description> </item> <item> <term> UI 텍스트 </term> <description> 끝까지 선택  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 항목을 선택 하려면 현재 항목에서 마지막 항목 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_SelectToEnd"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="SelectToEnd"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="SelectToHome">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToHome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToHome" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.SelectToHome" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToHome As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToHome { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToHome : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.SelectToHome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>맨 앞까지 선택 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Shift + Home </description> </item> <item> <term> UI 텍스트 </term> <description> 맨 앞까지 선택  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 확장 하려고 함을 나타내는 첫 번째 항목을 현재 항목에서 항목을 선택 합니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_SelectToHome"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="SelectToHome"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="SelectToPageDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToPageDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToPageDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.SelectToPageDown" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToPageDown As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToPageDown { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToPageDown : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.SelectToPageDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 아래로 선택 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Shift + PageDown </description> </item> <item> <term>UI 텍스트가 </term> <description> 페이지 아래로 선택  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 한 페이지 아래로 현재 항목에서 선택 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_SelectToPageDown"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="SelectToPageDown"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="SelectToPageUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToPageUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToPageUp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ComponentCommands.SelectToPageUp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToPageUp As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToPageUp { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToPageUp : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.ComponentCommands.SelectToPageUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 위로 선택 명령을 나타내는 값을 가져옵니다.</summary>
        <value>명령입니다.  
  
 <list type="table"><listheader><term> 기본값 </term> <description> </description> </listheader> <item> <term> 제스처 키 </term> <description> Shift + PageUp </description> </item> <item> <term> UI 텍스트 </term> <description> 페이지 위로 선택  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 현재 항목을 한 페이지 위로 선택 하려고 함을 나타냅니다.  
  
 없는 반드시 실제 구현에서 특정된 개체; 명령에 응답 대부분의 애플리케이션 작성자가 명령에 응답 하는 구현을 합니다.  
  
<a name="xamlAttributeUsage_SelectToPageUp"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="SelectToPageUp"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>