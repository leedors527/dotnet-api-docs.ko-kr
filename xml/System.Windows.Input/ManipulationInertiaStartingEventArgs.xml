<Type Name="ManipulationInertiaStartingEventArgs" FullName="System.Windows.Input.ManipulationInertiaStartingEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d86ed10058d5211f45df993c75917870b4a37de4" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55357162" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManipulationInertiaStartingEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationInertiaStartingEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationInertiaStartingEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationInertiaStartingEventArgs sealed : System::Windows::Input::InputEventArgs" />
  <TypeSignature Language="F#" Value="type ManipulationInertiaStartingEventArgs = class&#xA;    inherit InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs> 관성 조작의 동작을 지정 하는 개체입니다. 사용 하 여 각 유형의 조작에 대 한 초기 동작을 개별적으로 지정할 수 있습니다 합니다 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.TranslationBehavior%2A>, <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.ExpansionBehavior%2A>, 및 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.RotationBehavior%2A> 속성입니다. 각 속성은 각 사례에 초기 동작을 나타내는 개체의 형식, 다음을 지정할 수 있습니다.  
  
-   관성이 시작 될 때의 초기 속도입니다.  
  
-   조작이 관성이 끝날 때의 원하는 위치입니다.  
  
-   관성의 감속 합니다.  
  
 일반적으로 조작이 관성이 끝날 때의 원하는 위치 또는 관성, 하지만 둘 다의 원하는 감속 지정 합니다.  
  
 조작에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다.  
  
   
  
## Examples  
 다음 예제와 <xref:System.Windows.UIElement.ManipulationInertiaStarting> 이벤트 처리기에 대해 변환, 확장 등 회전 관성 도중 사용 되는 감속을 가져오거나 설정 합니다. 이 예제는에서 더 큰 예제의 일부 [연습: 만드는 첫 번째 터치 애플리케이션](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.  
  
 [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]
 [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationInertiaStartingEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Function Cancel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; bool" Usage="manipulationInertiaStartingEventArgs.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>조작을 취소합니다.</summary>
        <returns>조작이 성공적으로 취소되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메서드가 성공 하면 기본 <xref:System.Windows.Input.TouchDevice> 보냅니다 이전 터치 이벤트를 마우스 누름, 마우스 이동 이벤트 요소에 마우스 및 향후 조작 이벤트가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpansionBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InertiaExpansionBehavior ExpansionBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InertiaExpansionBehavior ExpansionBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.ExpansionBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpansionBehavior As InertiaExpansionBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InertiaExpansionBehavior ^ ExpansionBehavior { System::Windows::Input::InertiaExpansionBehavior ^ get(); void set(System::Windows::Input::InertiaExpansionBehavior ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpansionBehavior : System.Windows.Input.InertiaExpansionBehavior with get, set" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.ExpansionBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InertiaExpansionBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>확장 관성 이동이 느려지는 속도를 가져오거나 설정합니다.</summary>
        <value>확장 관성 이동이 느려지는 속도입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.ExpansionBehavior%2A> 다음을 수행 하는 속성:  
  
-   관성의 초기 속도 설정 하 여이 시작 될 때 지정 된 <xref:System.Windows.Input.InertiaExpansionBehavior.InitialVelocity%2A> 속성입니다.  
  
-   조작의 원하는 확장을 설정 하 여 관성 종료 될 때 지정 된 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredExpansion%2A> 속성입니다.  
  
-   관성의 감속을 설정 하 여 지정 된 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredDeceleration%2A> 속성입니다.  
  
 일반적으로 설정 하거나 합니다 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredExpansion%2A> 또는 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredDeceleration%2A>, 하지만 둘 다.  
  
 조작에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다. 조작에 응답 하는 애플리케이션 예제를 보려면 [연습: 만드는 첫 번째 터치 애플리케이션](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialVelocities">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationVelocities InitialVelocities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationVelocities InitialVelocities" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.InitialVelocities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialVelocities As ManipulationVelocities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationVelocities ^ InitialVelocities { System::Windows::Input::ManipulationVelocities ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialVelocities : System.Windows.Input.ManipulationVelocities" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.InitialVelocities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationVelocities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관성이 시작되기 전에 발생하는 조작에 대한 변경 속도를 가져옵니다.</summary>
        <value>관성이 시작되기 전에 발생하는 조작에 대한 변경 속도입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 조작에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다. 조작에 응답 하는 애플리케이션 예제를 보려면 [연습: 만드는 첫 번째 터치 애플리케이션](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationInertiaStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="manipulationInertiaStartingEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="genericTarget">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationContainer">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement ManipulationContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement ManipulationContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.ManipulationContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationContainer As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ ManipulationContainer { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationContainer : System.Windows.IInputElement" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.ManipulationContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin" /> 속성이 기준으로 하는 컨테이너를 가져옵니다.</summary>
        <value><see cref="P:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin" /> 속성이 기준으로 하는 컨테이너입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 조작에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다. 조작에 응답 하는 애플리케이션 예제를 보려면 [연습: 만드는 첫 번째 터치 애플리케이션](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point ManipulationOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point ManipulationOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.ManipulationOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property ManipulationOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point ManipulationOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationOrigin : System.Windows.Point with get, set" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.ManipulationOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>조작이 발생한 점을 가져오거나 설정합니다.</summary>
        <value>조작이 발생한 점입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 연락처의 둘 이상의 지점 조작이 시작 된 경우는 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.ManipulationOrigin%2A> 속성은 모든 연락처의 지점 간에 지점입니다.  
  
 조작에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다. 조작에 응답 하는 애플리케이션 예제를 보려면 [연습: 만드는 첫 번째 터치 애플리케이션](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Manipulators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt; Manipulators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.IManipulator&gt; Manipulators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.Manipulators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manipulators As IEnumerable(Of IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ Manipulators { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Manipulators : seq&lt;System.Windows.Input.IManipulator&gt;" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.Manipulators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>조작을 위한 터치 접촉을 나타내는 개체의 컬렉션을 가져옵니다.</summary>
        <value>조작을 위한 터치 접촉을 나타내는 개체의 컬렉션입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InertiaRotationBehavior RotationBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InertiaRotationBehavior RotationBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.RotationBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationBehavior As InertiaRotationBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InertiaRotationBehavior ^ RotationBehavior { System::Windows::Input::InertiaRotationBehavior ^ get(); void set(System::Windows::Input::InertiaRotationBehavior ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RotationBehavior : System.Windows.Input.InertiaRotationBehavior with get, set" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.RotationBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InertiaRotationBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>회전 관성 이동이 느려지는 속도를 가져오거나 설정합니다.</summary>
        <value>회전 관성 이동이 느려지는 속도입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.RotationBehavior%2A> 다음을 수행 하는 속성:  
  
-   관성의 초기 속도 설정 하 여이 시작 될 때 지정 된 <xref:System.Windows.Input.InertiaRotationBehavior.InitialVelocity%2A> 속성입니다.  
  
-   설정 하 여 관성이 끝날 때 원하는 회전 조작의 지정 된 <xref:System.Windows.Input.InertiaRotationBehavior.DesiredRotation%2A> 속성입니다.  
  
-   관성의 감속을 설정 하 여 지정 된 <xref:System.Windows.Input.InertiaRotationBehavior.DesiredDeceleration%2A> 속성입니다.  
  
 일반적으로 설정 하거나 합니다 <xref:System.Windows.Input.InertiaRotationBehavior.DesiredRotation%2A> 또는 <xref:System.Windows.Input.InertiaRotationBehavior.DesiredDeceleration%2A>, 하지만 둘 다.  
  
 조작에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다. 조작에 응답 하는 애플리케이션 예제를 보려면 [연습: 만드는 첫 번째 터치 애플리케이션](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInertiaParameter">
      <MemberSignature Language="C#" Value="public void SetInertiaParameter (System.Windows.Input.Manipulations.InertiaParameters2D parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInertiaParameter(class System.Windows.Input.Manipulations.InertiaParameters2D parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationInertiaStartingEventArgs.SetInertiaParameter(System.Windows.Input.Manipulations.InertiaParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInertiaParameter (parameter As InertiaParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetInertiaParameter(System::Windows::Input::Manipulations::InertiaParameters2D ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.SetInertiaParameter : System.Windows.Input.Manipulations.InertiaParameters2D -&gt; unit" Usage="manipulationInertiaStartingEventArgs.SetInertiaParameter parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Windows.Input.Manipulations.InertiaParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameter">관성 도중 조작의 동작을 지정하는 개체입니다.</param>
        <summary>관성 도중 조작의 동작을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로이 메서드를 호출할 필요가 없습니다. 속성을 사용 합니다 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs> 대신 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parameter" />가 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="TranslationBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InertiaTranslationBehavior TranslationBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InertiaTranslationBehavior TranslationBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.TranslationBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property TranslationBehavior As InertiaTranslationBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InertiaTranslationBehavior ^ TranslationBehavior { System::Windows::Input::InertiaTranslationBehavior ^ get(); void set(System::Windows::Input::InertiaTranslationBehavior ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TranslationBehavior : System.Windows.Input.InertiaTranslationBehavior with get, set" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.TranslationBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InertiaTranslationBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>선형 관성 이동이 느려지는 속도를 가져오거나 설정합니다.</summary>
        <value>선형 관성 이동이 느려지는 속도입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.TranslationBehavior%2A> 다음을 수행 하는 속성:  
  
-   관성의 초기 속도 설정 하 여이 시작 될 때 지정 된 <xref:System.Windows.Input.InertiaTranslationBehavior.InitialVelocity%2A> 속성입니다.  
  
-   설정 하 여 관성이 끝나면 조작의 원하는 위치를 지정 합니다 <xref:System.Windows.Input.InertiaTranslationBehavior.DesiredDisplacement%2A> 속성입니다.  
  
-   관성의 감속을 설정 하 여 지정 된 <xref:System.Windows.Input.InertiaTranslationBehavior.DesiredDeceleration%2A> 속성입니다.  
  
 일반적으로 설정 하거나 합니다 <xref:System.Windows.Input.InertiaTranslationBehavior.DesiredDisplacement%2A> 또는 <xref:System.Windows.Input.InertiaTranslationBehavior.DesiredDeceleration%2A>, 하지만 둘 다.  
  
 조작에 대 한 자세한 내용은 참조는 [입력 개요](~/docs/framework/wpf/advanced/input-overview.md)합니다. 조작에 응답 하는 애플리케이션 예제를 보려면 [연습: 만드는 첫 번째 터치 애플리케이션](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>