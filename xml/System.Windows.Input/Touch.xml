<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bfe044e6246f3488392cc43580452b6a0c27114f" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53224035" /></Metadata><TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <TypeSignature Language="F#" Value="type Touch = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>운영 체제에서 다중 터치 입력을 처리하는 애플리케이션 수준 서비스를 제공하며 <see cref="E:System.Windows.Input.Touch.FrameReported" /> 이벤트를 발생시킵니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Touch.FrameReported> 이벤트는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Silverlight 호환성을 지원 합니다. Silverlight 사용 하 여 호환성을 보장 해야 하는 경우 사용 하 여 터치 이벤트와 같은 <xref:System.Windows.UIElement.TouchDown> 하 고 <xref:System.Windows.UIElement.TouchMove>의 <xref:System.Windows.UIElement>를 <xref:System.Windows.UIElement3D>, 또는 <xref:System.Windows.ContentElement>합니다.  
  
 합니다 <xref:System.Windows.Input.Touch.FrameReported> 이벤트 모델을 사용 하지는 동일한 이벤트 다른 WPF 입력된 이벤트와 같은 <xref:System.Windows.UIElement.TouchDown> 고 <xref:System.Windows.UIElement.TouchMove>입니다. 개체 트리를 UI 통해 라우팅하는 요소별 이벤트로 노출 되는 대신는 <xref:System.Windows.Input.Touch.FrameReported> 이벤트는 애플리케이션 수준에서 처리 되는 단일 이벤트입니다. 따라서 사용할 수 없습니다는 `sender` 어떤 요소가 터치 되었는지 확인 하려면 이벤트 처리기의 매개 변수입니다.  
  
 사용 합니다 <xref:System.Windows.Input.TouchFrameEventArgs> 가져오려는 <xref:System.Windows.Input.TouchPoint> 터치 이벤트와 관련 된 값입니다. <xref:System.Windows.Input.TouchPoint>를 가져올 수 있습니다를 <xref:System.Windows.Input.TouchPoint.Position%2A> 터치의 확인 및 있는지 여부를 <xref:System.Windows.Input.TouchAction> 되었습니다를 <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, 또는 <xref:System.Windows.Input.TouchAction.Up> 작업. 사용할 수도 있습니다는 <xref:System.Windows.Input.TouchPoint> 가져오려고 합니다 <xref:System.Windows.Input.TouchDevice>합니다. <xref:System.Windows.Input.TouchDevice>, 장치를 확인할 수 있습니다 <xref:System.Windows.Input.TouchDevice.Id%2A> 받고 있는 위치의 요소에 대 한 정보.  
  
   
  
## Examples  
 다음 예에서는 간단한 패턴에서 만들 수는 <xref:System.Windows.Controls.Canvas> 터치 스크린에서 두 손가락을 드래그 하 여 합니다. 각 터치는 표현 된 <xref:System.Windows.Input.TouchDevice>합니다. 패턴은 터치에 의해 제공 된 터치 지점 사이의 선을 그려 생성 됩니다. 이 예제에서는 Windows Touch 호환 화면이 필요합니다.  
  
 다음 태그에 구성 된 사용자 인터페이스를 만들고를 <xref:System.Windows.Controls.Canvas> 가운데에 <xref:System.Windows.Controls.Grid>합니다.  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 다음 코드 처리를 <xref:System.Windows.Input.Touch.FrameReported> 이벤트입니다. 터치가 누를 때 합니다 <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> 에 캡처되는지를 <xref:System.Windows.Controls.Canvas>입니다. 터치 리프트 된 때를 <xref:System.Windows.Input.TouchDevice> 해제 됩니다. 터치에서 이동 하는 경우는 <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> 확인란이 선택 되어 있습니다. 첫 번째 터치에서 이동 하는 경우, 해당 위치에 기록 됩니다. 두 번째 터치에서 이동 하는 경우, 두 번째 터치 위치를 줄의 첫 번째 터치 위치에서 그려집니다.  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberSignature Language="F#" Value="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " Usage="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>터치 메시지가 전송되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 프레임은 일련의 다중 터치 메시지 또는 터치 포인트에서. 처리 하 여 터치에 응답할 수는 <xref:System.Windows.Input.Touch.FrameReported> 이벤트의 세부 정보에 액세스 하 고는 <xref:System.Windows.Input.TouchPoint> 에서 <xref:System.Windows.Input.TouchFrameEventArgs> 이벤트 데이터입니다.  
  
 합니다 <xref:System.Windows.Input.Touch.FrameReported> 이벤트 다른 동일한 이벤트 모델을 사용 하지 [!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] 와 같은 입력 이벤트 <xref:System.Windows.UIElement.TouchDown> 및 <xref:System.Windows.UIElement.TouchMove>합니다. 개체 트리를 UI 통해 라우팅하는 요소별 이벤트로 노출 되는 대신는 <xref:System.Windows.Input.Touch.FrameReported> 이벤트는 애플리케이션 수준에서 처리 되는 단일 이벤트입니다. 따라서 사용할 수 없습니다는 `sender` 어떤 요소가 터치 되었는지 확인 하려면 이벤트 처리기의 매개 변수입니다.  
  
   
  
## Examples  
 다음 예제에서는 처리 된 <xref:System.Windows.Input.Touch.FrameReported> 이벤트입니다. 터치가 누를 때 합니다 <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> 에 캡처되는지를 <xref:System.Windows.Controls.Canvas>입니다. 터치 리프트 된 때를 <xref:System.Windows.Input.TouchDevice> 해제 됩니다. 터치에서 이동 하는 경우는 <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> 확인란이 선택 되어 있습니다. 첫 번째 터치에서 이동 하는 경우, 해당 위치에 기록 됩니다. 두 번째 터치에서 이동 하는 경우, 두 번째 터치 위치를 줄의 첫 번째 터치 위치에서 그려집니다.  
  
 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Input.Touch> 클래스 개요입니다.  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>