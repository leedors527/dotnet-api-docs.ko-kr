<Type Name="TouchFrameEventArgs" FullName="System.Windows.Input.TouchFrameEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30f87b6247b094010302d8c5f86db873bb00fa53" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52226730" /></Metadata><TypeSignature Language="C#" Value="public sealed class TouchFrameEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TouchFrameEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchFrameEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TouchFrameEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchFrameEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type TouchFrameEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Windows.Input.Touch.FrameReported" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Touch.FrameReported> 이벤트는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Silverlight 호환성을 지원 합니다. Silverlight 사용 하 여 호환성을 보장 해야 하는 경우 사용 하 여 터치 이벤트와 같은 <xref:System.Windows.UIElement.TouchDown> 하 고 <xref:System.Windows.UIElement.TouchMove>의 <xref:System.Windows.UIElement>를 <xref:System.Windows.UIElement3D>, 또는 <xref:System.Windows.ContentElement>합니다.  
  
 사용 합니다 <xref:System.Windows.Input.TouchFrameEventArgs> 가져오려는 <xref:System.Windows.Input.TouchPoint> 터치 이벤트와 관련 된 값입니다. <xref:System.Windows.Input.TouchPoint>를 가져올 수 있습니다를 <xref:System.Windows.Input.TouchPoint.Position%2A> 터치의 확인 및 있는지 여부를 <xref:System.Windows.Input.TouchAction> 되었습니다를 <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, 또는 <xref:System.Windows.Input.TouchAction.Up> 작업. 사용할 수도 있습니다는 <xref:System.Windows.Input.TouchPoint> 가져오려고 합니다 <xref:System.Windows.Input.TouchDevice>합니다. <xref:System.Windows.Input.TouchDevice>, 장치를 확인할 수 있습니다 <xref:System.Windows.Input.TouchDevice.Id%2A> 받고 있는 위치의 요소에 대 한 정보.  
  
   
  
## Examples  
 다음 예제에서는 처리를 <xref:System.Windows.Input.Touch.FrameReported> 이벤트에서 터치 데이터에 액세스 하 고는 <xref:System.Windows.Input.TouchFrameEventArgs>합니다. 터치를 눌렀음을 합니다 <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> 에 캡처되는지를 <xref:System.Windows.Controls.Canvas>입니다. 터치 리프트 된 때를 <xref:System.Windows.Input.TouchDevice> 해제 됩니다. 터치에서 이동 하는 경우는 <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> 확인란이 선택 되어 있습니다. 첫 번째 터치에서 이동 하는 경우, 해당 위치에 기록 됩니다. 두 번째 터치에서 이동 하는 경우, 두 번째 터치 위치를 줄의 첫 번째 터치 위치에서 그려집니다.  
  
 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Input.Touch> 클래스 개요입니다.  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPrimaryTouchPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPoint GetPrimaryTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPoint GetPrimaryTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPoint ^ GetPrimaryTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetPrimaryTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchFrameEventArgs.GetPrimaryTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">좌표 공간을 정의하는 요소입니다. WPF 절대 좌표를 사용하려면 <paramref name="relativeTo" />를 <see langword="null" />로 지정합니다.</param>
        <summary>지정된 요소를 기준으로 기본 터치 디바이스의 현재 터치 지점을 반환합니다.</summary>
        <returns>지정된 요소를 기준으로 기본 <see cref="T:System.Windows.Input.TouchDevice" />의 현재 위치이거나, 기본 <see cref="T:System.Windows.Input.TouchDevice" />가 활성화되지 않은 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 활성 집합에서 첫 번째 디바이스를 디바이스를 터치 <xref:System.Windows.Input.TouchDevice.Activated> 주 터치 디바이스가 있습니다. 예를 들어, 두 손가락으로 화면을 터치 하는 경우 아래에 있는 첫 번째 손가락 주 터치 디바이스에 의해 표시 됩니다. 두 번째 손가락은 계속 하는 동안 첫 번째 손가락 리프트 된 기본 터치 디바이스 됩니다 `null`합니다.  
  
   
  
## Examples  
 다음 코드에서 검색 된 터치 포인트를 처리 합니다 <xref:System.Windows.Input.TouchFrameEventArgs>합니다. 터치를 눌렀음을 합니다 <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> 에 캡처되는지를 <xref:System.Windows.Controls.Canvas>입니다. 터치 리프트 된 때를 <xref:System.Windows.Input.TouchDevice> 해제 됩니다. 터치에서 이동 하는 경우는 <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> 확인란이 선택 되어 있습니다. 경우는 <xref:System.Windows.Input.TouchDevice.Id%2A> 일치 하는 <xref:System.Windows.Input.TouchDevice.Id%2A> 첫 번째 터치를 나타내는 기본 터치 지점의 위치 기록 됩니다. 두 번째 터치에서 이동 하는 경우, 두 번째 터치 위치를 줄의 첫 번째 터치 위치에서 그려집니다.  
  
 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Input.Touch> 클래스 개요입니다.  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPointCollection GetTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPointCollection GetTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPointCollection ^ GetTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchFrameEventArgs.GetTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">좌표 공간을 정의하는 요소입니다. WPF 절대 좌표를 사용하려면 <paramref name="relativeTo" />를 <see langword="null" />로 지정합니다.</param>
        <summary>지정된 요소를 기준으로 각 활성 터치 디바이스에 대한 현재 터치 지점을 포함하는 컬렉션을 반환합니다.</summary>
        <returns>각 활성 <see cref="T:System.Windows.Input.TouchPoint" />에 대한 현재 <see cref="T:System.Windows.Input.TouchDevice" />를 포함하는 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드에서 터치 지점을 검색 하는 프로세스는 <xref:System.Windows.Input.TouchFrameEventArgs>합니다. 캔버스에서 터치를 누르면는 <xref:System.Windows.Input.TouchDevice> 캔버스에 캡처됩니다. 터치가 발생 하는 경우는 <xref:System.Windows.Input.TouchDevice> 해제 됩니다. 캔버스에서 터치가 이동할 때는 <xref:System.Windows.Input.TouchDevice.Id%2A> 확인란이 선택 되어 있습니다. 경우는 <xref:System.Windows.Input.TouchDevice.Id%2A> 일치 하는 <xref:System.Windows.Input.TouchDevice.Id%2A> 첫 번째 터치를 나타내는 기본 터치 지점의 위치 기록 됩니다. 두 번째 터치에서 이동 하는 경우, 두 번째 터치 위치를 줄의 첫 번째 터치 위치에서 그려집니다.  
  
 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Input.Touch> 클래스 개요입니다.  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendMousePromotionUntilTouchUp">
      <MemberSignature Language="C#" Value="public void SuspendMousePromotionUntilTouchUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendMousePromotionUntilTouchUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendMousePromotionUntilTouchUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendMousePromotionUntilTouchUp();" />
      <MemberSignature Language="F#" Value="member this.SuspendMousePromotionUntilTouchUp : unit -&gt; unit" Usage="touchFrameEventArgs.SuspendMousePromotionUntilTouchUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버는 구현되어 있지 않습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 Silverlight 호환성을 위해 제공 됩니다. 디바이스 구현 차이로 인해 WPF에서 구현 되지 않은 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public int Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timestamp { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int" Usage="System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이벤트에 대한 타임스탬프를 가져옵니다.</summary>
        <value>이 이벤트에 대한 타임스탬프입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>