<Type Name="IKeyboardInputSink" FullName="System.Windows.Interop.IKeyboardInputSink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47f5caa5a67f5edacbabd48e1bc12a6c6c192a30" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55348737" /></Metadata><TypeSignature Language="C#" Value="public interface IKeyboardInputSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSink" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSink" />
  <TypeSignature Language="F#" Value="type IKeyboardInputSink = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>상호 운용 경계 및 HWND 간의 탭 이동, 액셀러레이터 키 및 니모닉을 관리하는 구성 요소에 대한 키보드 싱크를 제공합니다. WPF-Win32 상호 운용 시나리오의 키보드 메시지 관리는 이 인터페이스로 구현됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 전체 키보드 입력된 모델의 특정 하위 집합에서 입력을 처리 하는 키보드 싱크 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 및 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], 일부 키보드 입력를 처리 하 고 현재 키보드 포커스가 있는 것 이외의 Hwnd에 전달 합니다.  
  
 구성 요소는 다른 구성 요소를 포함 하 고 탭 순서가 유지, 구성 요소 구현도 해야 <xref:System.Windows.Interop.IKeyboardInputSite> 및 추적할 구성 요소에 포커스가 있습니다.  
  
 입력된 아키텍처에 대해 구체적으로 구현에 대 한 내용은 [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] interop을 참조 하십시오 [Windows Forms 및 WPF 상호 운용성 입력 아키텍처](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md)합니다.  
  
 <xref:System.Windows.Interop.HwndSource> 및 <xref:System.Windows.Interop.HwndHost> 각 구현 된 <xref:System.Windows.Interop.IKeyboardInputSink> 명시적 인터페이스 정의 통해 인터페이스입니다. 기본 동작을 제공 하는 명시적 정의 통해 필요한 경우에 액세스할 수는 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스의 캐스팅 <xref:System.Windows.Interop.HwndSource> 또는 <xref:System.Windows.Interop.HwndHost>합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <Member MemberName="HasFocusWithin">
      <MemberSignature Language="C#" Value="public bool HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFocusWithin () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFocusWithin();" />
      <MemberSignature Language="F#" Value="abstract member HasFocusWithin : unit -&gt; bool" Usage="iKeyboardInputSink.HasFocusWithin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>싱크 또는 싱크에 포함된 구성 요소 중 하나에 포커스가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>싱크 또는 싱크에 포함된 구성 요소 중 하나에 포커스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 전달 하기 위해 필요한 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 내에서 포커스가 있는 자식 구성 요소에 대 한 호출을 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 구현 합니다. 호출 <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> 주력 하 고 앞의 수준에 도달할 때까지 재귀적으로 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSite">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardInputSite As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardInputSite : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>구성 요소 컨테이너의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 인터페이스에 대한 참조를 가져오거나 설정합니다.</summary>
        <value>컨테이너의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 인터페이스에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 처음부터 설정 해야 `null`합니다. 해당 구성 요소 목록에 싱크를 추가 하는 컨테이너 설정이 <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> 다른 메서드를 호출 하 고 그 후 여러 번 설정할 수 있습니다. 속성을 설정 해야 `null` 삭제 하기 전에 다시 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="OnMnemonic">
      <MemberSignature Language="C#" Value="public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member OnMnemonic :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.OnMnemonic (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">니모닉 및 연결된 데이터에 대한 메시지입니다. 이 메시지 구조체를 수정하지 마십시오. 성능상의 이유로 이 구조체는 참조로만 전달됩니다.</param>
        <param name="modifiers">보조키입니다.</param>
        <summary>이 싱크에 대한 니모닉(선택키) 중 하나가 호출될 때 호출됩니다.</summary>
        <returns>메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] WM_CHAR, WM_SYSCHAR, WM_DEADCHAR 또는 WM_SYSDEADCHAR 메시지 여야 합니다.  
  
 구성 요소에 포함 된 구성 요소를 포함 하는 각 호출 하 여 구현 구성 요소에서 메시지 전달 해야 <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> 메서드.  
  
 반환 하는 인터페이스로 `true` 에서 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 호출 하지 않는다면 <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>합니다. 구현에서 처리 된 모든 특정 키 조합을 수행 하도록 선택할 수 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>그리고 무시 <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberSignature Language="F#" Value="abstract member RegisterKeyboardInputSink : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="iKeyboardInputSink.RegisterKeyboardInputSink sink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 싱크입니다.</param>
        <summary>포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 인터페이스를 등록합니다.</summary>
        <returns>포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 사이트입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자식 구성 요소를 사용 하 여 구성 요소는 사이트의 내부 컬렉션을 유지 관리 하 고이 메서드를 사용 하 여 새 싱크를 추가 하 고 새 사이트를 반환 해야 합니다. 사이트 모음을 유지 하기 위해 하므로 개만 싱크 사이트에서 가져올 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabInto">
      <MemberSignature Language="C#" Value="public bool TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function TabInto (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TabInto(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member TabInto : System.Windows.Input.TraversalRequest -&gt; bool" Usage="iKeyboardInputSink.TabInto request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">포커스를 첫 번째 또는 마지막 탭 정지로 설정해야 하는지 여부를 지정합니다.</param>
        <summary>싱크의 첫 번째 또는 마지막 탭 정지에 포커스를 설정합니다.</summary>
        <returns>포커스가 요청대로 설정되었으면 <see langword="true" />이고, 탭 정지가 없으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.FocusNavigationDirection.First> 및 <xref:System.Windows.Input.FocusNavigationDirection.Last> 만 값이 메서드에 전달 해야 하는 <xref:System.Windows.Input.TraversalRequest>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAccelerator">
      <MemberSignature Language="C#" Value="public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateAccelerator :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateAccelerator (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">메시지 및 연결된 데이터입니다. 이 구조체를 수정하지 마십시오. 성능상의 이유로 이 구조체는 참조로만 전달됩니다.</param>
        <param name="modifiers">보조키입니다.</param>
        <summary>keydown 메시지 수준에서 키보드 입력을 처리합니다.</summary>
        <returns>메서드 구현에서 메시지가 처리되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WM_KEYDOWN 또는 WM_SYSKEYDOWN 메시지 여야 합니다.  
  
 구성 요소에서 입력된 변환을 처리할 수 없는 있고 번역이 있을 수 있는 자식 구성 요소를 일반적으로 호출한 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 메서드 결과 반환 하기 전에 현재 포커스를 보유 하는 자식 구성 요소입니다.  
  
 메시지를 즉시 처리할 수 없는 경우 다시를 발송할 수 있습니다 것에서 합니다 <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> 구현을 다음 반환 하 고 필요한 경우 `false`합니다.  
  
 액셀러레이터 키로 변환 하기 위한 기본 시나리오를 VK_TAB keydown 메시지를 처리 하 고 호출 하는 구성 요소에 포커스를 설정할지 여부를 결정할 <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> 호출 또는 자식 구성 요소에 <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> 부모 사이트에 있으므로 탭 순서 시작 또는 끝 경계에 도달 했습니다. 특정 구성 요소는이 방식에서 tab 키를 처리 하지를 선택할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateChar">
      <MemberSignature Language="C#" Value="public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateChar :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateChar (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">메시지 및 연결된 데이터입니다. 이 구조체를 수정하지 마십시오. 성능상의 이유로 이 구조체는 참조로만 전달됩니다.</param>
        <param name="modifiers">보조키입니다.</param>
        <summary><see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />이 호출되기 전에 WM_CHAR, WM_SYSCHAR, WM_DEADCHAR 및 WM_SYSDEADCHAR 입력 메시지를 처리합니다.</summary>
        <returns>메시지가 처리되었고 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />을 호출하지 않아야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 하려면이 메서드를 구현 하는 경우 `true`, 입력된 아키텍처 호출 하지 않는다면 <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> 키 해당 메시지에 대 한 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>