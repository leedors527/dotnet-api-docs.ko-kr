<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="baa263074eed8e44641b6e694586499e323d9183" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004524" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>속성이나 형식을 앰비언트로 처리하도록 지정합니다. 앰비언트 개념은 XAML 프로세서가 멤버의 형식 소유자를 결정하는 방법과 관련됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 앰비언트 속성 값을 예상 하 하지만 일반적인 형식 멤버 조회가 바로 XAML 노드 집합을 만드는의 목적을 위해 일시 중단 되는 개체 그래프를 만들 때 파서 컨텍스트에서 사용할 수 있는 속성이입니다. 앰비언트 개념에 대 한 두 가지 주요 시나리오는  
  
-   동일한 개체의 다른 일부 속성에 영향을 줍니다 및 해당 개체 속성 조회 해야 방식으로 한정 합니다.  
  
-   속성 크게 지연 메커니즘을 나타내며 현재 개체에 포함 된 모든 개체에 멤버 값을 조회 하는 것에 대 한 앰비언트 기능을 확장 합니다.  
  
 이 특성은 앰비언트 속성 조회 동작을 사용 하도록 설정 하는 컨테이너 예상 하는 특정 속성에 적용할 수 있습니다 또는 속성에 대 한 해당 값 형식의 모든 경우의 앰비언트 속성 동작을 사용 하도록 설정 하는 클래스에 적용할 수 있습니다.  
  
 <xref:System.Windows.Markup.AmbientAttribute> 앰비언트로 XAML 연결 가능한 속성 특성을 지원 하기 위해 CLR 메서드에 적용할 수 있습니다. 이렇게 해야만 잠재적으로 표현 되기 때문에 CLR 구현 된 XAML에서에서 연결 된 속성은 구현/접근자 패턴으로 리플렉션을 `get` 및 `set` 메서드. 에 대 한 사용량을 제한 하므로 없는 실제 CLR 속성 특성에 있는 <xref:System.AttributeTargets> 를 `Property` 는 기능이 활성화 되지 앰비언트로 연결 가능한 멤버를 지정 합니다. 앰비언트로 보고 하려는 연결 가능한 멤버, 특성은 `get` 접근자입니다. 연결 가능한 멤버 메서드를 특별히 지원 되지 않는 특성 메서드에 하지 않아야 합니다.  
  
 .NET Framework의 이전 버전에서는이 클래스는 WPF 관련 WindowsBase 어셈블리에 존재합니다. [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> System.Xaml 어셈블리에 있습니다. 자세한 내용은 [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)을 참조하세요.  
  
 앰비언트 형식 (위치 형식 <xref:System.Windows.Markup.AmbientAttribute> 형식 수준에서 적용 됩니다) 특정 XAML 처리 해야 하는 경우 여기서 속성의 형식을 확인할 잘못 된 순서에 사용할 수 있습니다.  
  
## <a name="object-writer-scenarios"></a>개체 작성기 시나리오  
 속성, 메서드 또는 형식에 발생 하는 하 한은 XAML 개체 작성기를 정의 하는 경우 여기서 <xref:System.Windows.Markup.AmbientAttribute> 가 적용 하 고, 일반적으로 액세스 해야 합니다는 개체를 작성 하는 데 필요한 의도 된 앰비언트 속성을 조회 동작을 결정 하는 서비스입니다. 자세한 내용은 <xref:System.Xaml.IAmbientProvider>을 참조하십시오.  
  
## <a name="value-converters"></a>값 변환기  
 형식 변환기 또는 태그 확장 멤버 또는 형식 한정자 없이 문자열 이름으로 지정 하는 속성 등의 간접 형식 매핑을 나타내는 속성을 처리 하기 위해 앰비언트 정보를 알아야 할 수 있습니다. 이 시나리오에서는 <xref:System.Windows.Markup.AmbientAttribute> 값 변환기 코드 논리에 직접 사용할 수 없습니다. 값 변환기를 통과 하는 XAML 작성기 처리 동작을 사용 해야 아니라 <xref:System.Xaml.IAmbientProvider> 호출 될 때 값 변환기 메서드를 해당 서비스 컨텍스트에서 합니다.  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>AmbientAttribute WPF 시나리오  
  
-   속성을 <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>)는 속성 이름에 대 한 백업 참조를 찾는 데 필요한 필수 속성 이름을 조회를 한정할 수 <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 값입니다.  
  
-   내에서 모든 콘텐츠를 `Resources` 속성 (항목은 <xref:System.Windows.ResourceDictionary>) 템플릿 콘텐츠 뿐 아니라 해야 값으로 다른 피어에 액세스할 수 있습니다. 전체 선언 `Resources` 앰비언트 속성 WPF XAML 파서에서이 활성화 하는 논리를 호출 합니다.  
  
 참조 <xref:System.Windows.ResourceDictionary> 설정에 대 한 시나리오의 예로 <xref:System.Windows.Markup.AmbientAttribute> 형식 수준입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">사용자 지정 형식 및 라이브러리에 대 한 XAML 관련 CLR 특성</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">.NET Framework XAML 서비스에서 사용할 사용자 지정 형식 정의</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">NET XAML Services 개념 설명서</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Markup.AmbientAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>