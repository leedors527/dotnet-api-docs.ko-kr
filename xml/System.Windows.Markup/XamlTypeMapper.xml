<Type Name="XamlTypeMapper" FullName="System.Windows.Markup.XamlTypeMapper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9aeb2fb9cd6a9f79252bf2bd4d685108279328cc" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53294813" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeMapper" />
  <TypeSignature Language="F#" Value="type XamlTypeMapper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>XAML 요소 이름을 어셈블리의 적합한 CLR <see cref="T:System.Type" />에 매핑합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper> 에 대 한 대체 컨텍스트를 제공 하는 고급 WPF 시나리오의 일부인 <xref:System.Windows.Markup.XamlReader> 고 <xref:System.Windows.Markup.XamlWriter>입니다. 에 대 한 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] WPF 애플리케이션을 고려해 야 재정의 <xref:System.Xaml.XamlSchemaContext> 사용 하려고 하는 것이 아니라이 시나리오에 대 한 <xref:System.Windows.Markup.XamlTypeMapper>합니다.  
  
 <xref:System.Windows.Markup.XamlTypeMapper> 응용 프로그램 보다 더 직접적 기법을 통해 사용자 지정 매핑 정보를 사용 하 여 XAML 파서를 제공 하기 사용할 수 있습니다 <xref:System.Windows.Markup.XmlnsDefinitionAttribute> 어셈블리 코드에는 값입니다. 추가 하기 위해이 다시 컴파일하지 않고도 기존 어셈블리에 있는 XAML 지원 형식의 참조 또는 어셈블리에서 모든 CLR 네임 스페이스의 통합에 대 한 유용할 수 있습니다 <xref:System.Windows.Markup.XmlnsDefinitionAttribute> 특성 지정 합니다.  
  
 일반적으로 만든를 <xref:System.Windows.Markup.XamlTypeMapper> 지정 하기 위해 인스턴스를 <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> 에 대 한 속성 값을 <xref:System.Windows.Markup.ParserContext>입니다. 합니다 <xref:System.Windows.Markup.ParserContext> 에 대 한 컨텍스트도 사용할 수 있습니다는 <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType> 호출 합니다.  
  
## <a name="default-mapper"></a>기본 맵 편집기  
 사용 하 여 기본 매퍼를 얻을 수는 <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> 정적 속성입니다. 기본 어셈블리 목록을 기본 맵 편집기 에서만 작동합니다. 어셈블리에 대 한 특정 정보가 없습니다 (에서 지정한 대로 <xref:System.Windows.Markup.XamlTypeMapper> 생성자) 사용 됩니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.NamespaceMapEntry" />
    <altmember cref="T:System.Windows.Markup.ParserContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Markup.XamlTypeMapper" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper assemblyNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames"><see cref="T:System.Windows.Markup.XamlTypeMapper" />에서 사용해야 하는 어셈블리 이름의 배열입니다.</param>
        <summary><see cref="T:System.Windows.Markup.XamlTypeMapper" />에서 사용해야 하는 어셈블리 이름의 배열을 지정하여 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyNames" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, class System.Windows.Markup.NamespaceMapEntry[] namespaceMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), namespaceMaps As NamespaceMapEntry())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames, cli::array &lt;System::Windows::Markup::NamespaceMapEntry ^&gt; ^ namespaceMaps);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] * System.Windows.Markup.NamespaceMapEntry[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper (assemblyNames, namespaceMaps)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="namespaceMaps" Type="System.Windows.Markup.NamespaceMapEntry[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames"><see cref="T:System.Windows.Markup.XamlTypeMapper" />에서 사용해야 하는 어셈블리 이름의 배열입니다.</param>
        <param name="namespaceMaps"><see cref="T:System.Windows.Markup.XamlTypeMapper" />에서 사용해야 하는 네임스페이스 맵의 배열입니다.</param>
        <summary>지정된 어셈블리 이름의 배열 및 지정된 네임스페이스 맵을 사용하여 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyNames" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMappingProcessingInstruction">
      <MemberSignature Language="C#" Value="public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingProcessingInstruction(string xmlNamespace, string clrNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingProcessingInstruction (xmlNamespace As String, clrNamespace As String, assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingProcessingInstruction(System::String ^ xmlNamespace, System::String ^ clrNamespace, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingProcessingInstruction : string * string * string -&gt; unit" Usage="xamlTypeMapper.AddMappingProcessingInstruction (xmlNamespace, clrNamespace, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="clrNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">XML 네임스페이스의 접두사입니다.</param>
        <param name="clrNamespace">매핑할 형식이 들어 있는 CLR 네임스페이스입니다.</param>
        <param name="assemblyName">CLR 네임스페이스가 들어 있는 어셈블리입니다.</param>
        <summary>어셈블리의 XML 네임스페이스와 CLR 네임스페이스 사이의 매핑을 정의하고 이것을 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 정보에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> 매핑을 추가 하려면 프로그래밍 방식 으로가 됩니다.  다음 XAML 매핑 지침의 다른 부분 매개 변수에 해당 하는 예를 들어를 <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:  
  
```  
<Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples">  
...  
```  
  
 `xmlNamespace` 됩니다 `SDK`, `clrNamespace` 은 `Samples`, 및 `assemblyName` 는 `SDKSamples`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="clrNamespace" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="assemblyName" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowInternalType">
      <MemberSignature Language="C#" Value="protected virtual bool AllowInternalType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowInternalType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowInternalType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AllowInternalType : Type -&gt; bool&#xA;override this.AllowInternalType : Type -&gt; bool" Usage="xamlTypeMapper.AllowInternalType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">액세스할 형식입니다.</param>
        <summary>특정 내부 형식에 액세스하기 위해 완전 신뢰로 호출되어야 하는 <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 파생 형식에 대한 권한을 요청합니다.</summary>
        <returns>내부 형식에 액세스할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서브 클래스에서 재정의 되지 않은 경우 <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> 항상 반환 `false`합니다.  
  
 하위 클래스에서 재정의 된 경우 동작 여야 <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> 반환할지 `true` 내부 형식 그러지 않으면 액세스 할 수 있으면 `false`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMapper">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XamlTypeMapper DefaultMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XamlTypeMapper ^ DefaultMapper { System::Windows::Markup::XamlTypeMapper ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMapper : System.Windows.Markup.XamlTypeMapper" Usage="System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정되지 않은 경우 사용할 <see cref="T:System.Windows.Markup.XamlTypeMapper" />의 인스턴스를 가져옵니다.</summary>
        <value>기본 형식 매퍼입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 어셈블리 목록을 기본 맵 편집기 에서만 작동합니다. 어셈블리에 대 한 특정 정보가 없습니다 (에서 지정한 대로 <xref:System.Windows.Markup.XamlTypeMapper> 생성자) 사용 됩니다. 현재 구현에서는 기본 어셈블리 목록인: `WindowsBase`, `PresentationCore`, `PresentationFramework`합니다.  
  
 기본 맵 편집기를 사용 하 여 사용할 수 없다는 사용자 지정 어셈블리/유형 XAML에서 전혀 의미 하지 않습니다. 즉,는 사용자 지정 형식/어셈블리를 사용 하는 경우 사용 해야 기본 XAML 기술을으로 매핑을 만드는 뿐 `xmlns` , 형식 매퍼 API와 달리, 형식/어셈블리 참조는 각 XAML 페이지의 특성입니다. 자세한 내용은 [XAML 네임 스페이스 및 WPF XAML에 대 한 매핑 Namespace](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string xmlNamespace, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType(string xmlNamespace, string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (xmlNamespace As String, localName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ xmlNamespace, System::String ^ localName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; Type" Usage="xamlTypeMapper.GetType (xmlNamespace, localName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">지정된 XML 네임스페이스 접두사입니다.</param>
        <param name="localName">매핑된 <see cref="T:System.Type" />을 가져올 XAML 요소의 "로컬" 이름입니다. 이 컨텍스트에서 로컬은 제공된 <paramref name="xmlNamespace" />에 대해 매핑된 XML 네임스페이스를 의미합니다.</param>
        <summary>지정된 XML 네임스페이스 접두사와 요소 이름을 사용하여 지정된 XAML 요소가 매핑될 CLR <see cref="T:System.Type" />을 가져옵니다.</summary>
        <returns>개체의 <see cref="T:System.Type" />이거나 매핑을 확인할 수 없으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제공된 된 정보에 매핑되는 형식을 찾을 수 없는 경우 `null` 반환 됩니다.  
  
 일부로 접두사 없는 `localName`합니다. 모든 접두사가 XAML 요소 정보에 대 한 요소로 구분 `xmlNamespace` 및 `localName` 이 API 호출에 대 한 구성 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="localName" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="SetAssemblyPath">
      <MemberSignature Language="C#" Value="public void SetAssemblyPath (string assemblyName, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAssemblyPath(string assemblyName, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAssemblyPath (assemblyName As String, assemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAssemblyPath(System::String ^ assemblyName, System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.SetAssemblyPath : string * string -&gt; unit" Usage="xamlTypeMapper.SetAssemblyPath (assemblyName, assemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">확장명이나 경로가 지정되지 않은 약식 어셈블리 이름입니다(<see cref="P:System.Reflection.AssemblyName.Name" />과 동일).</param>
        <param name="assemblyPath">어셈블리의 파일 경로입니다. 어셈블리 경로는 파일 확장명이 들어 있는 전체 파일 경로여야 합니다.</param>
        <summary>어셈블리를 로드할 때 사용할 경로를 지정합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyName" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="assemblyPath" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Windows.Markup.XamlParseException"><paramref name="assemblyName" />가 <see cref="F:System.String.Empty" />인 경우  
  
또는 
 <paramref name="assemblyPath" />가 <see cref="F:System.String.Empty" />인 경우  
  
또는 
 <paramref name="assemblyPath" />는 파일 확장명이 들어 있는 전체 파일 경로가 아닙니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>