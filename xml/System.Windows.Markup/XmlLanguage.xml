<Type Name="XmlLanguage" FullName="System.Windows.Markup.XmlLanguage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0fc5c9d7ccc483a89348a2562b726a3f04e807b6" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55321248" /></Metadata><TypeSignature Language="C#" Value="public class XmlLanguage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlLanguage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XmlLanguage" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlLanguage" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlLanguage" />
  <TypeSignature Language="F#" Value="type XmlLanguage = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.XmlLanguageConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>XAML 태그에 사용할 언어 태그를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 언어 태그 수 있거나 등록 된 없을 <xref:System.Globalization.CultureInfo> 는 XAML은 해석 하는 시스템에 표시 합니다.  
  
 이 클래스를 사용 하 여 표시 되는 값을 사용 하 여 처리 하는 데는 `xml:lang` xml에서입니다.  
  
 두 자리 형태로 또는 하이픈으로 구분 된 언어 로캘 형식에서 언어 태그를 지정할 수 있습니다. 참조 [RFC 3066](https://go.microsoft.com/fwlink/?LinkId=132454)합니다.  
  
 XML 사양에 대 한 빈 문자열을 허용 하는지 확인 `xml:lang`RFC 3066;에서 허용 하지는 않지만, 따라서는 <xref:System.Windows.Markup.XmlLanguage> 입력 허용 "" (빈 문자열 특성). 기본 생성 <xref:System.Windows.Markup.XmlLanguage> 동작으로 생성 되는 경우 "" (빈 문자열)입니다.  
  
<a name="xamlAttributeUsage_XmlLanguage"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="prefix"/>  
- or -  
<object property="prefix-subcode"/>  
```  
  
<a name="xamlValues_XmlLanguage"></a>   
## <a name="xaml-values"></a>XAML 값  
 *prefix*  
 ISO 639-1 언어 접두사 값을 사용 하 여 언어 접두사입니다. 예를 들어 "en" 또는 "zh"입니다. 대문자 값이 허용 되어 소문자로 변환 합니다. 빈 특성 일 수도 있습니다 ""입니다.  
  
 *subcode*  
 제공 된 경우 단일 하이픈으로와 야 합니다. 그런 다음 하위 코드가 RFC 3066 정의 합니다. 가장 일반적인 사용량과 적절 하 게 매핑되는 가장 가능성이 있는 것을 <xref:System.Globalization.CultureInfo>와 같은 국가 또는 지역별 지정은 "-us" 또는 "-hk". 대문자 값이 허용 되어 소문자로 변환 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XmlLanguage Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XmlLanguage Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlLanguage.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XmlLanguage ^ Empty { System::Windows::Markup::XmlLanguage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Markup.XmlLanguage" Usage="System.Windows.Markup.XmlLanguage.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Markup.XmlLanguage" />에서 생성되어 언어 태그가 빈 특성 문자열로 설정된 정적 <see cref="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)" /> 인스턴스를 가져옵니다.</summary>
        <value>비교 작업에 사용할 <see cref="T:System.Windows.Markup.XmlLanguage" />의 빈 언어 태그 버전입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값은 실제로 <xref:System.Windows.Markup.XmlLanguage> 에 해당 하 <xref:System.String.Empty?displayProperty=nameWithType>해당 <xref:System.Windows.Markup.XmlLanguage.GetEquivalentCulture%2A> 결과 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEquivalentCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetEquivalentCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetEquivalentCulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.GetEquivalentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEquivalentCulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetEquivalentCulture();" />
      <MemberSignature Language="F#" Value="member this.GetEquivalentCulture : unit -&gt; System.Globalization.CultureInfo" Usage="xmlLanguage.GetEquivalentCulture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Globalization.CultureInfo" />가 이 <see cref="T:System.Windows.Markup.XmlLanguage" />의 <see cref="T:System.Globalization.CultureInfo" /> 값에 등록되어 있는 경우에만 이 <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />에 대한 적절한 해당 <see cref="T:System.Windows.Markup.XmlLanguage" />를 반환합니다.</summary>
        <returns>해당 형식을 인수로 사용하는 지역화-전역화 API 호출에 사용할 수 있는 <see cref="T:System.Globalization.CultureInfo" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 해당 하는 경우 <xref:System.Globalization.CultureInfo> 수 생성이 메서드가 예외를 발생 시킵니다. 예외를 처리 하려면 호출 <xref:System.Windows.Markup.XmlLanguage.GetSpecificCulture%2A> 대신 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Globalization.CultureInfo" /> 호출 결과 제공된 <see cref="T:System.Windows.Markup.XmlLanguage" />에 대해 등록된 <see cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />가 없는 경우</exception>
        <altmember cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguage">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XmlLanguage GetLanguage (string ietfLanguageTag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.XmlLanguage GetLanguage(string ietfLanguageTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguage (ietfLanguageTag As String) As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::XmlLanguage ^ GetLanguage(System::String ^ ietfLanguageTag);" />
      <MemberSignature Language="F#" Value="static member GetLanguage : string -&gt; System.Windows.Markup.XmlLanguage" Usage="System.Windows.Markup.XmlLanguage.GetLanguage ietfLanguageTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ietfLanguageTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ietfLanguageTag">RFC 3066 언어 문자열 또는 빈 문자열입니다.</param>
        <summary>RFC 3066별 언어를 나타내는 문자열을 기반으로 <see cref="T:System.Windows.Markup.XmlLanguage" /> 인스턴스를 반환합니다.</summary>
        <returns><see cref="T:System.Windows.Markup.XmlLanguage" /> 값으로 제공된 문자열이 있는 새 <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 생성자를 효과적으로 합니다.  
  
 언어 문자열은 비어 있을 수 있습니다. 그렇지 않으면 따라야 [RFC 3066](https://go.microsoft.com/fwlink/?LinkId=132454) 규칙:  
  
-   첫 번째 경우만 구성 되어야 [!INCLUDE[TLA#tla_ascii](~/includes/tlasharptla-ascii-md.md)] 문자입니다.  
  
-   추가 하위 태그 이루어져야 [!INCLUDE[TLA#tla_ascii](~/includes/tlasharptla-ascii-md.md)] 문자 또는 숫자입니다.  
  
-   하위 태그는 단일 하이픈 문자로 구분 됩니다.  
  
-   모든 경우에는 1 ~ 8 자 여야 합니다.  
  
-   선행 또는 후행 하이픈 없는 허용 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ietfLanguageTag" /> 매개 변수는 null일 수 없습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="ietfLanguageTag" /> 매개 변수가 비어 있지 않지만 RFC 3066에 지정된 구문을 따르지 않은 경우.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpecificCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetSpecificCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetSpecificCulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.GetSpecificCulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpecificCulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetSpecificCulture();" />
      <MemberSignature Language="F#" Value="member this.GetSpecificCulture : unit -&gt; System.Globalization.CultureInfo" Usage="xmlLanguage.GetSpecificCulture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Globalization.CultureInfo" />에 대해 가장 밀접하게 관련된 비중립 <see cref="T:System.Windows.Markup.XmlLanguage" />를 반환합니다.</summary>
        <returns>해당 형식을 인수로 사용하는 지역화-전역화 [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] 호출에 사용할 수 있는 <see cref="T:System.Globalization.CultureInfo" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 경우 <xref:System.Windows.Markup.XmlLanguage> 값과 같음 <xref:System.Windows.Markup.XmlLanguage.Empty%2A?displayProperty=nameWithType> 면이 메서드는 반환 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>합니다.  
  
 이 메서드는 등록 된 찾습니다 <xref:System.Globalization.CultureInfo> 이 가능한 가장 긴 접두사 일치 <xref:System.Windows.Markup.XmlLanguage>합니다. 등록 된 경우 <xref:System.Globalization.CultureInfo> 중립적 (<xref:System.Globalization.CultureInfo.IsNeutralCulture%2A> 됩니다 `true`),이 메서드 호출에 의존 합니다 <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> 중립에서 매핑할 <xref:System.Globalization.CultureInfo> 특정 한 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 <see cref="T:System.Windows.Markup.XmlLanguage" /><see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />에 대해 등록되어 있는 관련 비-중립 <see cref="T:System.Globalization.CultureInfo" />가 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string" Usage="System.Windows.Markup.XmlLanguage.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>언어 태그의 문자열 표현을 가져옵니다.</summary>
        <value>언어 태그의 문자열 표현입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 제공 되는 원래 지정 된 문자열의 정규화 된 버전을 반환할 수 있습니다 <xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>합니다.  
  
 이 속성을 반환할 수도 있습니다 <xref:System.String.Empty> 빈 문자열에 제공 된 경우 <xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xmlLanguage.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.String" />을 나타내는 <see cref="T:System.Windows.Markup.XmlLanguage" />을 반환합니다.</summary>
        <returns>현재 <see cref="T:System.String" />를 나타내는 <see cref="T:System.Windows.Markup.XmlLanguage" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 반환 합니다 <xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag%2A> 현재 <xref:System.Windows.Markup.XmlLanguage>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>