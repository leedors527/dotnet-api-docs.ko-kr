<Type Name="BeginStoryboard" FullName="System.Windows.Media.Animation.BeginStoryboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba97488818f79aeb640f22a3fcdb84549c03b395" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55360878" /></Metadata><TypeSignature Language="C#" Value="public sealed class BeginStoryboard : System.Windows.TriggerAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BeginStoryboard extends System.Windows.TriggerAction" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.BeginStoryboard" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BeginStoryboard&#xA;Inherits TriggerAction" />
  <TypeSignature Language="C++ CLI" Value="public ref class BeginStoryboard sealed : System::Windows::TriggerAction" />
  <TypeSignature Language="F#" Value="type BeginStoryboard = class&#xA;    inherit TriggerAction" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerAction</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Media.Animation.Storyboard" />를 시작하고 해당 애니메이션을 대상 개체 및 속성에 배포하는 트리거 동작입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Media.Animation.BeginStoryboard> 작업과 <xref:System.Windows.EventTrigger> 또는 <xref:System.Windows.Trigger> 해당 대상 속성에 애니메이션 적용을 시작 합니다. <xref:System.Windows.Media.Animation.BeginStoryboard> 시작을 <xref:System.Windows.Media.Animation.Storyboard> 를 호출 하 여 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 에서 해당 <xref:System.Windows.Media.Animation.Storyboard> 트리거될 때 참조 합니다.  
  
 시작 하기를 <xref:System.Windows.Media.Animation.Storyboard> 다른 이미 애니메이션이 적용 되는 속성에 <xref:System.Windows.Media.Animation.Storyboard>의 <xref:System.Windows.Media.Animation.BeginStoryboard.HandoffBehavior%2A> 속성의 <xref:System.Windows.Media.Animation.BeginStoryboard> 애니메이션 진행 방법을 결정 합니다.  
  
## <a name="pause-resume-stop-or-otherwise-control-a-storyboard-interactively"></a>일시 중지, 다시 시작, 중지 또는 그렇지 않은 경우 스토리 보드를 대화형으로 제어  
 있으려면 일시 중지, 다시 시작 또는 제어를 <xref:System.Windows.Media.Animation.BeginStoryboard.Storyboard%2A> 선언 된 태그에서 대화형으로 설정 해야 합니다는 <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> 속성을 해당 <xref:System.Windows.Media.Animation.BeginStoryboard>합니다. 제어할 수 있습니다.는 <xref:System.Windows.Media.Animation.Storyboard> 를 사용 하 여를 <xref:System.Windows.Media.Animation.ControllableStoryboardAction> 개체 (같은 <xref:System.Windows.Media.Animation.PauseStoryboard>, <xref:System.Windows.Media.Animation.ResumeStoryboard>, 또는 <xref:System.Windows.Media.Animation.StopStoryboard>)를 참조 하 여 제어 하 해당 <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A>합니다. 경우는 <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> 의 <xref:System.Windows.Media.Animation.BeginStoryboard> 지정 되어 있지는 <xref:System.Windows.Media.Animation.BeginStoryboard.Storyboard%2A> 으로 시작한 후에 대화형으로 제어할 수 없습니다. 참조 [방법: 이벤트 트리거는 Storyboard를 시작한 후 제어를 사용 하 여](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md) 자세한 내용은 합니다.  
  
> [!NOTE]
>  코드에서의 대화형 메서드를 사용할 수 있습니다 합니다 <xref:System.Windows.Media.Animation.Storyboard> 컨트롤 클래스를 <xref:System.Windows.Media.Animation.Storyboard> 를 사용 하 여 적용 된를 <xref:System.Windows.Media.Animation.BeginStoryboard>입니다. 사용 하는 경우의 경우와 마찬가지로 <xref:System.Windows.Media.Animation.ControllableStoryboardAction> 개체를 제공 해야 합니다는 <xref:System.Windows.Media.Animation.BeginStoryboard> 이름을 해당 <xref:System.Windows.Media.Animation.Storyboard> 를 대화형으로 제어할 수 있습니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.ResumeStoryboard" />
    <altmember cref="T:System.Windows.Media.Animation.BeginStoryboard" />
    <altmember cref="T:System.Windows.Media.Animation.StopStoryboard" />
    <altmember cref="T:System.Windows.Media.Animation.PauseStoryboard" />
    <altmember cref="T:System.Windows.Media.Animation.SkipStoryboardToFill" />
    <altmember cref="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio" />
    <altmember cref="T:System.Windows.EventTrigger" />
    <altmember cref="T:System.Windows.Trigger" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BeginStoryboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.BeginStoryboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BeginStoryboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandoffBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.HandoffBehavior HandoffBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.HandoffBehavior HandoffBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.BeginStoryboard.HandoffBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property HandoffBehavior As HandoffBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::HandoffBehavior HandoffBehavior { System::Windows::Media::Animation::HandoffBehavior get(); void set(System::Windows::Media::Animation::HandoffBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.HandoffBehavior : System.Windows.Media.Animation.HandoffBehavior with get, set" Usage="System.Windows.Media.Animation.BeginStoryboard.HandoffBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.HandoffBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 스토리보드에서 애니메이션 클록을 시작하려면 적절한 넘기기 동작을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="using-the-compose-handoffbehavior"></a>사용 하 여 Compose HandoffBehavior  
 적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성에 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose?displayProperty=nameWithType>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템은 이러한 클록을 제거 하지 않습니다 자동으로 합니다.  
  
 많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다. 클록을 제거 하는 방법은 여러 가지가 있습니다.  
  
-   속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드. 첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다. 이렇게 하면 해당 속성에서 모든 애니메이션 클록이 제거됩니다.  
  
-   특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다. 이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다. 루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다. 또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.  이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.  
  
 이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.  개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.  
  
 클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.BeginStoryboard.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Media.Animation.BeginStoryboard.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 개체의 이름을 가져오거나 설정합니다. <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> 개체의 이름을 지정하면 시작된 후 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 제어할 수 있습니다.</summary>
        <value><see cref="T:System.Windows.Media.Animation.BeginStoryboard" />의 이름입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 있으려면 일시 중지, 다시 시작 또는 대화형으로 제어를 <xref:System.Windows.Media.Animation.Storyboard>설정를 <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> 속성을 해당 <xref:System.Windows.Media.Animation.BeginStoryboard> 사용 하 여를 <xref:System.Windows.Media.Animation.ControllableStoryboardAction> 같은 개체 <xref:System.Windows.Media.Animation.PauseStoryboard>, <xref:System.Windows.Media.Animation.ResumeStoryboard>, 또는 <xref:System.Windows.Media.Animation.StopStoryboard> 이 이름을 참조 하도록 합니다. 경우는 <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> 의 <xref:System.Windows.Media.Animation.BeginStoryboard> 지정 되어 있지는 <xref:System.Windows.Media.Animation.Storyboard> 대화형으로 영향을 받지 않습니다; 시작한 후 또한 때는 <xref:System.Windows.Media.Animation.Storyboard> 종료 또는 채우기 기간, 애니메이션 클록의 삭제를 입력 합니다. 참조 [방법: 이벤트 트리거는 Storyboard를 시작한 후 제어를 사용 하 여](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md) 자세한 내용은 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.Media.Animation.BeginStoryboard.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.BeginStoryboard" />가 시작하는 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Windows.Media.Animation.BeginStoryboard" />가 시작하는 <see cref="T:System.Windows.Media.Animation.Storyboard" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Storyboard"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoryboardProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StoryboardProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StoryboardProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoryboardProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StoryboardProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StoryboardProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>