<Type Name="PowerEase" FullName="System.Windows.Media.Animation.PowerEase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d04d006f94b9fb979ad77e7591ea4310f41c9cc4" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53499492" /></Metadata><TypeSignature Language="C#" Value="public class PowerEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PowerEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.PowerEase" />
  <TypeSignature Language="VB.NET" Value="Public Class PowerEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class PowerEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type PowerEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>수식 *f*(*t*) = *t*<sup>p</sup>를 사용하여 가속 및/또는 감속되는 애니메이션을 만드는 감속/가속 함수를 나타냅니다. 여기서 p는 <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> 속성과 같습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제어할 수 있습니다. 애니메이션 감속 여부를 감속, 또는 둘 다 지정 하 여는 <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>합니다. 다음 그래프의 다른 값을 보여 주는 <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, 여기서 *f*(*t*)는 애니메이션 진행 상태를 나타내는 및 *t* 시간을 나타냅니다.  
  
 ![CubicEase EasingMode 그래프 ] (~/add/media/cubicease-graph.png "CubicEase EasingMode 그래프입니다.")  
  
 사용 하 여 합니다 <xref:System.Windows.Media.Animation.PowerEase> 함수를 가속/감속 지정 하 여 위치를 사용 하는 방법을 신속 하 게 지정할 수 있습니다는 <xref:System.Windows.Media.Animation.PowerEase.Power%2A> 속성:  
  
 *f*(*t*) = *t*<sup>p</sup> 여기서 `p` 같은지를 <xref:System.Windows.Media.Animation.PowerEase.Power%2A> 속성입니다.  
  
 이 인해 합니다 <xref:System.Windows.Media.Animation.PowerEase> 함수를 대체할 수 있습니다 <xref:System.Windows.Media.Animation.QuadraticEase> (*f*(*t*) = *t*<sup>2</sup>), <xref:System.Windows.Media.Animation.CubicEase>(*f*(*t*) = *t*<sup>3</sup>), <xref:System.Windows.Media.Animation.QuarticEase> (*f*(*t* ) = *t*<sup>4</sup>), 및 <xref:System.Windows.Media.Animation.QuinticEase> (*f*(*t*) = *t* <sup>5</sup>). 예를 들어 사용 하려는 경우는 <xref:System.Windows.Media.Animation.PowerEase> 와 같은 동작을 만드는 함수를 <xref:System.Windows.Media.Animation.QuadraticEase> 함수 (*f*(*t*) = *t*<sup>2</sup>)를 지정 하는 경우는 <xref:System.Windows.Media.Animation.PowerEase.Power%2A> 속성 값이 2입니다.  
  
 외에도 다른 여러 감속/가속 함수가 <xref:System.Windows.Media.Animation.PowerEase>합니다.
런타임에 포함 된 감속/가속 함수를 사용 하는 것 외에도 상속 하 여 사용자 고유의 사용자 지정 감속/가속 함수를 만들 수 있습니다 <xref:System.Windows.Media.Animation.EasingFunctionBase>합니다.  
  
## <a name="xaml-object-element-usage"></a>XAML 개체 요소 사용  
  
```xaml
<PowerEase .../>  
```  
  
   
  
## Examples  
 적용 하는 다음 예제는 <xref:System.Windows.Media.Animation.PowerEase> 감속/가속 함수를 사용 하 여를 <xref:System.Windows.Media.Animation.PowerEase.Power%2A> 속성 값 `20` 에 <xref:System.Windows.Media.Animation.DoubleAnimation> 감속 애니메이션을 만들려면. 때문에 <xref:System.Windows.Media.Animation.PowerEase.Power%2A> 가치가 높아, 낮은 값을 사용 하는 경우에 비해 감속이 갑자기 합니다.  
  
 [!code-xaml[PowerEase#PowerEase](~/samples/snippets/csharp/VS_Snippets_Wpf/powerease/CS/window1.xaml#powerease)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.BounceEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ElasticEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PowerEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PowerEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PowerEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.Animation.PowerEase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PowerEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="powerEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Freezable" /> 파생 클래스의 새 인스턴스를 만듭니다. 파생 클래스를 만드는 경우 이 메서드를 재정의해야 합니다.</summary>
        <returns>새 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애니메이션 클래스에서 간접적으로 상속 <xref:System.Windows.Freezable>합니다. 이 인해 재정의 해야 합니다 <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> 사용자 지정 애니메이션 개체를 생성 하는 방법입니다.  
  
   
  
## Examples  
 다음 예제에서는 일반적인 구현은 <xref:System.Windows.Freezable.CreateInstanceCore%2A>합니다.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.PowerEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="powerEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">애니메이션의 정규화된 시간(진행 상황)입니다.</param>
        <summary>사용자 지정 감속/가속 함수의 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> 모드를 생성하기 위해 재정의할 수 있는 감속/가속 함수의 논리 부분을 제공합니다.</summary>
        <returns>변환된 진행 상황을 나타내는 double입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 변환 정규화 된 시간에 대 한 애니메이션 속도 제어 하는 <xref:System.Windows.Media.Animation.EasingMode.EaseIn> 케이스 <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>합니다.  
  
 에 대해 감속/가속 함수를 지정 해야 합니다 <xref:System.Windows.Media.Animation.EasingMode.EaseIn> 때문에 경우 구현의 합니다 <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> 메서드 변환 `normalizedTime` 에 대 한를 <xref:System.Windows.Media.Animation.EasingMode.EaseOut> 및 <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> 경우.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public double Power { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Power" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.PowerEase.Power" />
      <MemberSignature Language="VB.NET" Value="Public Property Power As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Power { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Power : double with get, set" Usage="System.Windows.Media.Animation.PowerEase.Power" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애니메이션의 보간의 지수를 가져오거나 설정합니다. 예를 들어 값 7은 *f*(*t*) = *t*<sup>7</sup> 공식을 따르는 애니메이션 보간 곡선을 만듭니다.</summary>
        <value>애니메이션의 보간의 지수입니다. 이 값은 0보다 크거나 같아야 합니다. 기본값은 2입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.PowerEase.PowerProperty>  
  
<a name="xamlAttributeUsage_Power"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object Power="double" .../>  
```  
  
   
  
## Examples  
 적용 하는 다음 예제는 <xref:System.Windows.Media.Animation.PowerEase> 감속/가속 함수를 사용 하 여를 <xref:System.Windows.Media.Animation.PowerEase.Power%2A> 속성 값 `20` 에 <xref:System.Windows.Media.Animation.DoubleAnimation> 감속 애니메이션을 만들려면. 때문에 <xref:System.Windows.Media.Animation.PowerEase.Power%2A> 가치가 높아, 낮은 값을 사용 하는 경우에 비해 감속이 갑자기 합니다.  
  
 [!code-xaml[PowerEase#PowerEase](~/samples/snippets/csharp/VS_Snippets_Wpf/powerease/CS/window1.xaml#powerease)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PowerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PowerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.PowerEase.PowerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PowerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PowerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PowerProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.PowerEase.PowerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>