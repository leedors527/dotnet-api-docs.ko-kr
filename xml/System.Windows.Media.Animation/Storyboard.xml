<Type Name="Storyboard" FullName="System.Windows.Media.Animation.Storyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21bd826f9553a4c8bcb17f10f68d36ff1da133bf" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55309230" /></Metadata><TypeSignature Language="C#" Value="public class Storyboard : System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Storyboard extends System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Storyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Storyboard&#xA;Inherits ParallelTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class Storyboard : System::Windows::Media::Animation::ParallelTimeline" />
  <TypeSignature Language="F#" Value="type Storyboard = class&#xA;    inherit ParallelTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ParallelTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>해당 자식 애니메이션에 대한 정보를 대상으로 하는 개체 및 속성을 제공하는 컨테이너 타임라인입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="interactively-controlling-storyboards"></a>스토리 보드를 대화형으로 제어  
 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 태그에서 제어할 수 있는 스토리 보드를 만들려면를 지정 하면를 <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> 의 속성을 <xref:System.Windows.Media.Animation.BeginStoryboard> 개체 집합을 만든; 예제를 참조 하세요. [하는 방법: 제어는 Storyboard를 시작한 후 이벤트 트리거를 사용 하 여](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md). 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
## <a name="data-binding-and-animating-timelines"></a>데이터 바인딩 및 애니메이션 타임 라인  
 대부분의 시간 표시 막대 속성에 데이터 바인딩 또는 애니메이션; 수 합니다. 그러나 타이밍 시스템이 작동 하는 방식 때문에 데이터 바인딩 또는 애니메이션 타임 라인 다른 데이터 처럼 작동 하지 바인딩 또는 애니메이션 개체입니다. 해당 동작을 이해 하려면 타임 라인을 활성화 하는 것을 이해할 수 있습니다.  
  
 타임 라인 활성화 되 면 timeline과 자식 timeline의 복사본이 됩니다. 이러한 복사본은 고정 (읽기 전용 됨) 및 <xref:System.Windows.Media.Animation.Clock> 개체에서 생성 됩니다. 이러한 클록은 대상 속성에 애니메이션 효과를 주는 실제 작업을 수행합니다. 일정을 사용 하는 경우 데이터 바인딩 또는 애니메이션이 적용 된 현재 값의 스냅숏을 수 해당 클록이 생성 됩니다. 원래 일정 변경 하려면 계속 수 하는 경우에 해당 클록이 되지 않습니다.  
  
 데이터 바인딩 또는 애니메이션 변경 내용을 반영 하려면 타임 라인에 대 한 해당 클록이 다시 생성 되어야 합니다. 클록은 다시를 자동으로 만들어지지 않습니다. 다음은 타임라인 변경 내용을 적용하는 몇 가지 방법입니다.  
  
-   타임 라인은 또는에 속하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>를 사용 하 여 해당 storyboard를 다시 적용 하 여 변경 내용을 반영 만들 수 있습니다를 <xref:System.Windows.Media.Animation.BeginStoryboard> 또는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드. 부작용으로 애니메이션까지 다시 시작됩니다. 코드에서 사용할 수는 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 메서드 storyboard를 이전 위치로 다시 합니다.  
  
-   사용 하 여 속성에 직접 애니메이션을 적용 하는 경우는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> 메서드를 호출 합니다 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> 메서드를 다시 수정 된 애니메이션을 전달 합니다.  
  
-   클록 수준에서 직접 작업 하는 경우 새 클록 집합을 적용 만들고 이전 만든된 클록 집합을 대체 합니다.  
  
 애니메이션을 바인딩된 데이터의 예제를 참조 하세요 [키 스플라인 애니메이션 샘플](https://go.microsoft.com/fwlink/?LinkID=160011) 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Storyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Storyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.Animation.Storyboard" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션 집합을 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="storyboard.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다. <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <paramref name="containingObject" />에 적용됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.  
  
 이 메서드를 사용 하 여 시작 하는 스토리 보드는 일시 중지, 다시 시작 하거나 그렇지 않으면 시작한 후 대화형으로 제어할 수 수 없습니다. Storyboard를 제어할 수 있도록 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 또는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드.  
  
 스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다. 합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Begin containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다. <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <paramref name="containingObject" />에 적용됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.  
  
 이 메서드를 사용 하 여 시작 하는 스토리 보드는 일시 중지, 다시 시작 하거나 그렇지 않으면 시작한 후 대화형으로 제어할 수 수 없습니다. Storyboard를 제어할 수 있도록 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> 또는 <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> 메서드.  
  
 스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다. <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <paramref name="containingObject" />에 적용됩니다.</param>
        <param name="isControllable">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 `containingObject` 시작 스토리 보드를 사용 하는 대화형 메서드를 호출 하는 경우  
  
 이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다. 이러한 클록와 함께 저장 됩니다 `containingObject`합니다.  
  
 스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다. 합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다. <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <paramref name="containingObject" />에 적용됩니다.</param>
        <param name="handoffBehavior">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 통해 이 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />와 연결된 애니메이션을 해당 대상에 적용하여 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.  
  
 많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다. 여러 가지 방법으로 클록을 제거할 수 있습니다.  
  
-   속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드. 첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다. 이 속성에서 모든 애니메이션 클록을 제거합니다.  
  
-   특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다. 이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다. 루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다. 또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.  이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.  
  
 이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.  개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.  
  
 클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 사용자가, 및 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 클릭할 때입니다.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * bool -&gt; unit" Usage="storyboard.Begin (containingObject, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다. <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <paramref name="containingObject" />에 적용됩니다.</param>
        <param name="isControllable">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수  
  
 이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다. 이러한 클록와 함께 저장 됩니다 `containingObject`합니다.  
  
 스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
      </Parameters>
      <Docs>
        <param name="containingObject">지정된 <paramref name="frameworkTemplate" />을 적용한 개체입니다. <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <paramref name="containingObject" />에 적용됩니다.</param>
        <param name="frameworkTemplate">애니메이션을 적용할 템플릿입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.  
  
 이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다. 이러한 클록와 함께 저장 됩니다 `containingObject`합니다.  
  
 스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다. 지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션은 <paramref name="containingObject" />에 적용됩니다.</param>
        <param name="handoffBehavior">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 통해 이 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />와 연결된 애니메이션을 해당 대상에 적용하여 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 사용자가, 및 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 클릭할 때입니다.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkContentElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다. 지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션은 <paramref name="containingObject" />에 적용됩니다.</param>
        <param name="handoffBehavior">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</param>
        <param name="isControllable">애니메이션을 시작한 후 제어(일시 중지)할 수 있는지 여부를 선언합니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 통해 이 <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />와 연결된 애니메이션을 해당 대상에 적용하여 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대상된 속성에 이미 애니메이션이 적용 된 경우 지정 된 핸드 오프 동작을 사용 하 여 대체 됩니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 `containingObject` 시작 스토리 보드를 사용 하는 대화형 메서드를 호출 하는 경우  
  
 이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다. 이러한 클록와 함께 저장 됩니다 `containingObject`합니다.  
  
 스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
## <a name="using-the-compose-handoffbehavior"></a>사용 하 여 Compose HandoffBehavior  
 적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.  
  
 많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다. 여러 가지 방법으로 클록을 제거할 수 있습니다.  
  
-   속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드. 첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다. 이 속성에서 모든 애니메이션 클록을 제거합니다.  
  
-   특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다. 이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다. 루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다. 또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.  이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.  
  
 이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.  개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.  
  
 클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다. 합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 다음 예제에서는 합니다 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 사용자가, 및 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 클릭할 때입니다.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">지정된 <paramref name="frameworkTemplate" />을 적용한 개체입니다.  <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <paramref name="containingObject" />에 적용됩니다.</param>
        <param name="frameworkTemplate">애니메이션을 적용할 템플릿입니다.</param>
        <param name="isControllable">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 대체 됩니다 대상된 속성에 이미 애니메이션이 적용 된 경우는 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> 핸드 오프 동작 합니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 `containingObject` 시작 스토리 보드를 사용 하는 대화형 메서드를 호출 하는 경우  
  
 이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다. 이러한 클록와 함께 저장 됩니다 `containingObject`합니다.  
  
 스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">지정된 <paramref name="frameworkTemplate" />을 적용한 개체입니다. <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <paramref name="containingObject" />에 적용됩니다.</param>
        <param name="frameworkTemplate">애니메이션을 적용할 템플릿입니다.</param>
        <param name="handoffBehavior">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다. 이러한 클록와 함께 저장 됩니다 `containingObject`합니다.  
  
 스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
## <a name="using-the-compose-handoffbehavior"></a>사용 하 여 Compose HandoffBehavior  
 적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.  
  
 많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다. 여러 가지 방법으로 클록을 제거할 수 있습니다.  
  
-   속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드. 첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다. 이 속성에서 모든 애니메이션 클록을 제거합니다.  
  
-   특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다. 이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다. 루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다. 또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.  이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.  
  
 이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.  개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.  
  
 클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">이 스토리보드의 애니메이션 대상과 동일한 이름 범위 내에 포함된 개체입니다. 지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션은 <paramref name="containingObject" />에 적용됩니다.</param>
        <param name="handoffBehavior">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</param>
        <param name="isControllable">애니메이션을 시작한 후 제어(일시 중지)할 수 있는지 여부를 선언합니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 해당 대상에 적용하고 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수  
  
 이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다. 이러한 클록와 함께 저장 됩니다 `containingObject`합니다.  
  
 스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
## <a name="using-the-compose-handoffbehavior"></a>사용 하 여 Compose HandoffBehavior  
 적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.  
  
 많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다. 여러 가지 방법으로 클록을 제거할 수 있습니다.  
  
-   속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드. 첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다. 이 속성에서 모든 애니메이션 클록을 제거합니다.  
  
-   특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다. 이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다. 루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다. 또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.  이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.  
  
 이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.  개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.  
  
 클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.  
  
   
  
## Examples  
 다음 예제에는 제어 가능한 storyboard를 만드는 방법을 보여 줍니다.  
  
 [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]
 [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  
  
 다음 예제에서는 합니다 <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> 사용자가, 및 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> 클릭할 때입니다.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.Begin : System.Windows.FrameworkElement * System.Windows.FrameworkTemplate * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="storyboard.Begin (containingObject, frameworkTemplate, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">지정된 <paramref name="frameworkTemplate" />을 적용한 개체입니다. <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />이 없는 애니메이션이 <paramref name="containingObject" />에 적용됩니다.</param>
        <param name="frameworkTemplate">애니메이션을 적용할 템플릿입니다.</param>
        <param name="handoffBehavior">새 애니메이션이 현재 애니메이션과 상호 작용하기 위해 사용할 동작입니다.</param>
        <param name="isControllable">스토리보드를 대화형으로 제어할 수 있어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 애니메이션을 지정된 템플릿 내의 해당 대상에 적용하여 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 스토리 보드를 대화형으로 제어 하려면 지정 해야 동일한 `containingObject` 시작 스토리 보드를 사용 하는 대화형 메서드를 호출 하는 경우  
  
 이 메서드를 호출 하는 경우 <xref:System.Windows.Media.Animation.Clock> 스토리 보드 및 포함 된 모든 타임 라인에 대해 개체가 만들어집니다. 이러한 클록와 함께 저장 됩니다 `containingObject`합니다.  
  
 스토리 보드 트리거를 시작 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 고 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
## <a name="using-the-compose-handoffbehavior"></a>사용 하 여 Compose HandoffBehavior  
 적용 하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, 또는 <xref:System.Windows.Media.Animation.AnimationClock> 사용 하 여 속성을 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>모든 <xref:System.Windows.Media.Animation.Clock> 개체 속성과 연관 된 이전에 시스템 리소스를 소비 계속; 타이밍 시스템 하지 않습니다 자동으로 이러한 클록을 제거 합니다.  
  
 많은 수의 시계를 사용 하 여 적용 하는 경우 성능 문제를 방지 하려면 <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>를 완성 한 후 애니메이션된 속성에서 구성 중인 클록을 제거 해야 합니다. 여러 가지 방법으로 클록을 제거할 수 있습니다.  
  
-   속성에서 모든 클록을 제거 하려면 사용 합니다 <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> 또는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> 애니메이션된 개체의 메서드. 첫 번째 매개 변수로 애니메이션 효과가 적용 되는 속성을 지정 하 고 `null` 두 번째입니다. 이 속성에서 모든 애니메이션 클록을 제거합니다.  
  
-   특정 제거할 <xref:System.Windows.Media.Animation.AnimationClock> 클록 목록에서 사용 하 여는 <xref:System.Windows.Media.Animation.Clock.Controller%2A> 의 속성을 <xref:System.Windows.Media.Animation.AnimationClock> 검색할를 <xref:System.Windows.Media.Animation.ClockController>, 호출를 <xref:System.Windows.Media.Animation.ClockController.Remove%2A> 메서드의 <xref:System.Windows.Media.Animation.ClockController>합니다. 이 일반적으로 수행 된 <xref:System.Windows.Media.Animation.Clock.Completed> 클록에 대 한 이벤트 처리기입니다. 루트 클록만 하 여 제어 될 수는 <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> 자식 클록의 속성을 반환 `null`합니다. 또한는 <xref:System.Windows.Media.Animation.Clock.Completed> 클록의 유효 기간 무제한 인 경우 이벤트 라고 합니다.  이 경우 사용자 호출 시기를 결정 해야 <xref:System.Windows.Media.Animation.ClockController.Remove%2A>합니다.  
  
 이것은 주로 수명이 긴 개체에 대한 애니메이션에서 문제가 됩니다.  개체는 가비지 수집 되 면 해당 클록도 연결이 끊어집니다 및 가비지 수집 합니다.  
  
 클록 개체에 대 한 자세한 내용은 참조 하세요. [애니메이션 및 타이밍 시스템 개요](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Storyboard Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Storyboard ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Storyboard" Usage="storyboard.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 개체 값의 전체 복사본을 만들어 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 수정 가능한 복제본을 만듭니다. 종속성 속성을 복사하는 경우 이 메서드는 더 이상 확인되지 않을 수도 있는 리소스 참조와 데이터 바인딩을 복사하지만 애니메이션이나 애니메이션의 현재 값은 복사하지 않습니다.</summary>
        <returns>현재 개체의 수정 가능한 복제본입니다. 소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true." />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 수정 가능한 복사본을 만드는이 메서드는 사용 중지 <xref:System.Windows.Freezable> 개체 (또는 <xref:System.Windows.Freezable> 개체). 편의 위해이 메서드는 강력한 형식의 구현이 상속 된 버전을 숨깁니다.  
  
 자세한 내용은 <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="storyboard.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.Animation.Storyboard" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <returns>새 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 내부적으로 호출 됩니다 <xref:System.Windows.Freezable.CreateInstance%2A> 의 새 인스턴스를 만들 때 합니다 <xref:System.Windows.Media.Animation.Storyboard> 복제는 다양 한 방법에 대 한 클래스 (같은 <xref:System.Windows.Freezable.Clone%2A> 고 <xref:System.Windows.Freezable.CloneCurrentValue%2A>).  
  
   
  
## Examples  
 다음 예제에서는 일반적인 구현은 <xref:System.Windows.Freezable.CreateInstanceCore%2A>합니다.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>모든 <see cref="T:System.Windows.Media.Animation.Storyboard" /> 서브 클래스에서이 메서드를 구현 해야 합니다. 일반적인 구현은 단순히 클래스 기본 생성자를 호출 하 고 결과 반환 하는 것입니다.</para></block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentGlobalSpeed">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 시계의 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 속도 실제 시간과 비교 하는 표본이 현재 진행 되는 속도입니다.  
  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double GetCurrentGlobalSpeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentGlobalSpeed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentGlobalSpeed();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : unit -&gt; double" Usage="storyboard.GetCurrentGlobalSpeed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>현재 전역 속도입니다. 시계가 멈춘 경우 0입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>현재 전역 속도이거나 시계가 멈춘 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 시계의 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 속도 실제 시간과 비교 하는 표본이 현재 진행 되는 속도입니다.  
  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentGlobalSpeed : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentGlobalSpeed containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>현재 전역 속도이거나 시계가 멈춘 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 시계의 <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> 속도 실제 시간과 비교 하는 표본이 현재 진행 되는 속도입니다.  
  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentIteration">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int GetCurrentIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCurrentIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCurrentIteration();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : unit -&gt; int" Usage="storyboard.GetCurrentIteration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클록의 첫 번째 반복 1의 값이 있습니다.  
  
 이 스토리 보드에 있는 경우는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 설정은 `true`정방향 역방향 쌍으로 구성 된 전체 반복, 이러한 세그먼트 중 하나가 아니라 합니다.  
  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkContentElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkContentElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클록의 첫 번째 반복 1의 값이 있습니다.  
  
 이 스토리 보드에 있는 경우는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 설정은 `true`정방향 역방향 쌍으로 구성 된 전체 반복, 이러한 세그먼트 중 하나가 아니라 합니다.  
  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentIteration : System.Windows.FrameworkElement -&gt; Nullable&lt;int&gt;" Usage="storyboard.GetCurrentIteration containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>현재 활성 기간 내에 포함된 이 Clock의 현재 반복이거나, 이 Clock이 중지된 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클록의 첫 번째 반복 1의 값이 있습니다.  
  
 이 clock의 타임이 라인에는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 설정 `true`정방향 역방향 쌍으로 구성 된 전체 반복, 이러한 세그먼트 중 하나가 아니라 합니다.  
  
 현재 반복에 관계 없이 clock을 검색 하면 1로 현재 반복을 반환 합니다. 현재 반복이 1로 반환도 시계를 다시 실행 합니다.  
  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentProgress">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double GetCurrentProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentProgress();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : unit -&gt; double" Usage="storyboard.GetCurrentProgress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>이 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 이 Clock이 활성 상태이며 해당 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />의 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />이 <see cref="P:System.Windows.Duration.Forever" />이면 0.0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다. 0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkContentElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>이 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 이 Clock이 활성 상태이며 해당 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />의 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />이 <see cref="P:System.Windows.Duration.Forever" />이면 0.0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다. 0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentProgress : System.Windows.FrameworkElement -&gt; Nullable&lt;double&gt;" Usage="storyboard.GetCurrentProgress containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>이 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 이 Clock이 활성 상태이며 해당 <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />의 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />이 <see cref="P:System.Windows.Duration.Forever" />이면 0.0이고, 그렇지 않으면 현재 반복 내에서 이 Clock의 현재 진행률을 나타내는 0.0에서 1.0 사이의 값입니다. 0.0 값은 Clock이 진행되고 있지 않음을 나타내며 1.0 값은 Clock이 현재 반복의 끝에 도달했음을 나타냅니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentState">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState () As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : unit -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>이 Storyboard에 대해 만들어진 Clock의 현재 상태로, <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 또는 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 알려주지는지 않습니다 스토리 보드를 일시 중지 여부. 스토리 보드를 일시 중지 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> 메서드.  
  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkContentElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkContentElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>이 Storyboard에 대해 만들어진 Clock의 현재 상태로, <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 또는 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 알려주지는지 않습니다 스토리 보드를 일시 중지 여부. 스토리 보드를 일시 중지 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> 메서드.  
  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentState : System.Windows.FrameworkElement -&gt; System.Windows.Media.Animation.ClockState" Usage="storyboard.GetCurrentState containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>이 Storyboard에 대해 만들어진 Clock의 현재 상태로, <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> 또는 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 알려주지는지 않습니다 스토리 보드를 일시 중지 여부. 스토리 보드를 일시 중지 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> 메서드.  
  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTime">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetCurrentTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetCurrentTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetCurrentTime();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : unit -&gt; TimeSpan" Usage="storyboard.GetCurrentTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>이 Storyboard의 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 그렇지 않으면 Storyboard Clock의 현재 시간입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkContentElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkContentElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>이 Storyboard의 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 그렇지 않으면 Storyboard Clock의 현재 시간입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTime : System.Windows.FrameworkElement -&gt; Nullable&lt;TimeSpan&gt;" Usage="storyboard.GetCurrentTime containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 검색합니다.</summary>
        <returns>이 Storyboard의 Clock이 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />이면 <see langword="null" />이고, 그렇지 않으면 Storyboard Clock의 현재 시간입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIsPaused">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused();" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : unit -&gt; bool" Usage="storyboard.GetIsPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</summary>
        <returns>이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkContentElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkContentElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</summary>
        <returns>이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.GetIsPaused : System.Windows.FrameworkElement -&gt; bool" Usage="storyboard.GetIsPaused containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되는지 여부를 나타내는 값을 검색합니다.</summary>
        <returns>이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />이 일시 중지되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스토리 보드의 클록에 대 한 정보를 검색 하려면이 메서드를 사용 하려면 스토리 보드 제어 가능 해야 합니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetTarget(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTarget (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetTarget(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTarget : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Media.Animation.Storyboard.GetTarget element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />을 검색할 Timeline입니다.</param>
        <summary>지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.Target" />의 <see cref="T:System.Windows.Media.Animation.Timeline" /> 값을 검색합니다.</summary>
        <returns><paramref name="element" />의 대상 종속성 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 대상 개체를 나타내는 애니메이션 타임 라인을 사용 하 여 속성을 연결 합니다. 스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>합니다. 연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetName">
      <MemberSignature Language="C#" Value="public static string GetTargetName (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTargetName(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetName (element As DependencyObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTargetName(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetName : System.Windows.DependencyObject -&gt; string" Usage="System.Windows.Media.Animation.Storyboard.GetTargetName element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />을 검색할 Timeline입니다.</param>
        <summary>지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />의 <see cref="T:System.Windows.Media.Animation.Timeline" /> 값을 검색합니다.</summary>
        <returns><paramref name="element" />의 대상 종속성 개체 이름입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 가져옵니다는 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 지정 된 개체에 연결 합니다. 스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>합니다. 연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetProperty">
      <MemberSignature Language="C#" Value="public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PropertyPath GetTargetProperty(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetProperty (element As DependencyObject) As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PropertyPath ^ GetTargetProperty(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTargetProperty : System.Windows.DependencyObject -&gt; System.Windows.PropertyPath" Usage="System.Windows.Media.Animation.Storyboard.GetTargetProperty element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />를 가져올 종속성 개체입니다.</param>
        <summary>지정된 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />의 <see cref="T:System.Windows.Media.Animation.Timeline" /> 값을 검색합니다.</summary>
        <returns><paramref name="element" />의 대상 속성입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 가져옵니다는 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 지정 된 개체에 연결 합니다. 스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 연결 된 속성입니다. 연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.  
  
 경우는 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 설정한 태그에서이 메서드는 빈 반환 <xref:System.Windows.PropertyPath> 속성 참조가 확인 하 고 구문 분석 되는 경우 내부적으로 저장 하기 때문에 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Pause">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 일시 중지합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="storyboard.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />을 일시 중지합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 스토리 보드를 일시 중지 되었지만 아무런 변화가 없습니다 active 또는 현재 일시 중지 되지 않은 경우. 파생 작업으로 모든 연결 된 자식 일시 중지도 됩니다.  
  
 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
## <a name="beginning-a-paused-storyboard"></a>일시 중지 된 Storyboard를 시작합니다.  
 때 있습니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 일시 중지 된 storyboard에 것 같은 데 다시 시작 하 고 다시 시작 합니다. 그러나 실제로 발생 하지 않습니다. 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드는 실제로 일시 중지 된 대체 <xref:System.Windows.Media.Animation.Storyboard> 새 일시 중지 해제 된 버전으로 합니다. 각 시간을 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드가 호출 되 면 스토리 보드에 대 한 클록 개체 만들어집니다. 이러한 클록 애니메이션 효과 주는 속성에 배포 됩니다. 따라서는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드는 다시 해당 클록 다시 시작 하지 않습니다를 새 클록을 사용 하 여 대체 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 지정한 <see cref="T:System.Windows.FrameworkContentElement" />의 <see cref="T:System.Windows.Media.Animation.Clock" />을 일시 중지합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 스토리 보드를 일시 중지 되었지만 아무런 변화가 없습니다 active 또는 현재 일시 중지 되지 않은 경우. 파생 작업으로 모든 연결 된 자식 일시 중지도 됩니다.  
  
 일시 중지 된 storyboard 검색 다시 시작 되지 않습니다 것입니다. 일시 중지 된 storyboard를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 메서드. 호출 된 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 모양이 되 면 다시 시작 하는 새 대시보드를 사용 하 여 다시 일시 중지 된 스토리 보드를 대체 합니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예제를 참조 하세요 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 Storyboard의 clock 트리거 일시 중지 된 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
## <a name="beginning-a-paused-storyboard"></a>일시 중지 된 Storyboard를 시작합니다.  
 때 있습니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 일시 중지 된 storyboard에 것 같은 데 다시 시작 하 고 다시 시작 합니다. 그러나 실제로 발생 하지 않습니다. <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 실제로으로 대체 하는 일시 중지 해제 된 버전입니다. 각 시간을 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드가 호출 되 면 스토리 보드에 대 한 클록 개체 만들어집니다. 이러한 클록 애니메이션 효과 주는 속성에 배포 됩니다. 따라서는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드는 다시 해당 클록 다시 시작 하지 않습니다를 새 클록을 사용 하 여 대체 합니다.  
  
   
  
## Examples  
 다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다. 합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Pause : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Pause containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />와 연결된 지정한 <see cref="T:System.Windows.FrameworkElement" />의 <see cref="T:System.Windows.Media.Animation.Clock" />을 일시 중지합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 스토리 보드를 일시 중지 되었지만 아무런 변화가 없습니다 active 또는 현재 일시 중지 되지 않은 경우. 파생 작업으로 모든 연결 된 자식 일시 중지도 됩니다.  
  
 일시 중지 된 storyboard 검색 다시 시작 되지 않습니다 것입니다. 일시 중지 된 storyboard를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 메서드. 호출 된 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 모양이 되 면 다시 시작 하는 새 대시보드를 사용 하 여 다시 일시 중지 된 스토리 보드를 대체 합니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 Storyboard의 clock 트리거 일시 중지 된 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
## <a name="beginning-a-paused-storyboard"></a>일시 중지 된 Storyboard를 시작합니다.  
 때 있습니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 일시 중지 된 storyboard에 것 같은 데 다시 시작 하 고 다시 시작 합니다. 그러나 실제로 발생 하지 않습니다. <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 실제로으로 대체 하는 일시 중지 해제 된 버전입니다. 각 시간을 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드가 호출 되 면 스토리 보드에 대 한 클록 개체 만들어집니다. 이러한 클록 애니메이션 효과 주는 속성에 배포 됩니다. 따라서는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드는 다시 해당 클록 다시 시작 하지 않습니다를 새 클록을 사용 하 여 대체 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만든 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체를 제거합니다. <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 설정에 관계없이 이미 애니메이션이 적용된 속성에는 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 속하는 애니메이션이 더 이상 영향을 주지 않습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="storyboard.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만든 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체를 제거합니다. <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 설정에 관계없이 이미 애니메이션이 적용된 속성에는 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 속하는 애니메이션이 더 이상 영향을 주지 않습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 수행 되는 모든 대화형 작업을 <xref:System.Windows.Media.Animation.Clock>, 및 또는 <xref:System.Windows.Media.Animation.Storyboard>, 다음 렌더링 직전에 발생 하는 타이밍 엔진의 다음 틱에서 발생 합니다. 즉는 <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> 메서드가이 시간까지 애니메이션된 속성에 계속 적용 합니다. 즉, 프레임이 표시 되 면 다음에 스토리 보드 제거 됩니다. 이 시간 전에 속성에서 애니메이션을 분리 해야 할 경우 사용 합니다 <xref:System.Windows.UIElement.BeginAnimation%2A> 메서드는 `animation` 매개 변수 값 `null`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만든 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체를 제거합니다. <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 설정에 관계없이 이미 애니메이션이 적용된 속성에는 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 속하는 애니메이션이 더 이상 영향을 주지 않습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 Storyboard의 clock 트리거를 제거 합니다 <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Remove containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만든 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체를 제거합니다. <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 설정에 관계없이 이미 애니메이션이 적용된 속성에는 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 속하는 애니메이션이 더 이상 영향을 주지 않습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 Storyboard의 clock 트리거를 제거 합니다 <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resume">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />을 다시 시작합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="storyboard.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />을 다시 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />을 다시 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일시 중지 되지 하는 스토리 보드를 다시 시작 하는 것은 효과가 없습니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 일시 중지 된 storyboard 검색 다시 시작 되지 않습니다 것입니다. 일시 중지 된 storyboard를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 메서드. 호출 된 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 storyboard를 시작한 후 모양이 되 면 다시 시작 하 여 이전 storyboard를 대체 합니다.  
  
 Storyboard의 clock 트리거 일시 중지 다시 시작을 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다. 합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Resume : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Resume containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />을 다시 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일시 중지 되지 하는 스토리 보드를 다시 시작 하는 것은 효과가 없습니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 일시 중지 된 storyboard 검색 다시 시작 되지 않습니다 것입니다. 일시 중지 된 storyboard를 다시 시작 하는 유일한 방법은 사용 하는 것은 <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> 메서드. 호출 된 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드 storyboard를 시작한 후 모양이 되 면 다시 시작 하 여 이전 storyboard를 대체 합니다.  
  
 Storyboard의 clock 트리거 일시 중지 다시 시작을 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>다음 Clock Tick이 발생하면 이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치에서 검색합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan -&gt; unit" Usage="storyboard.Seek offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">Timeline이 앞뒤로 이동하는 정도를 설명하는 양수 또는 음수 값입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에서 지정된 위치를 검색합니다. <see cref="T:System.Windows.Media.Animation.Storyboard" />는 요청한 검색을 다음 클록 틱이 발생할 때 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다. 스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">타임라인이 지정된 <paramref name="origin" />에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</param>
        <param name="origin"><paramref name="offset" />이 적용되는 위치입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에서 지정된 위치를 검색합니다. <see cref="T:System.Windows.Media.Animation.Storyboard" />는 요청한 검색을 다음 클록 틱이 발생할 때 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다. 스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <param name="offset">타임라인이 지정된 <paramref name="origin" />에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</param>
        <param name="origin"><paramref name="offset" />이 적용되는 위치입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에서 지정된 위치를 검색합니다. <see cref="T:System.Windows.Media.Animation.Storyboard" />는 요청한 검색을 다음 클록 틱이 발생할 때 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다. 스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.  
  
 이 메서드는 storyboard clock의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 에 <xref:System.Windows.Media.Animation.ClockState.Active>입니다. 이 메서드는 틱을 처리할 때까지 타이밍 트리에 영향을 주지는. 파생 작업으로 적절 한 이벤트를도 발생 하지 않습니다 그때까지.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 두 가지 모두를 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 및 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 메서드.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.Seek (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <param name="offset">타임라인이 지정된 <paramref name="origin" />에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</param>
        <param name="origin"><paramref name="offset" />이 적용되는 위치입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에서 지정된 위치를 검색합니다. <see cref="T:System.Windows.Media.Animation.Storyboard" />는 요청한 검색을 다음 클록 틱이 발생할 때 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다. 스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.  
  
 이 메서드는 storyboard clock의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 에 <xref:System.Windows.Media.Animation.ClockState.Active>입니다. 이 메서드는 틱을 처리할 때까지 타이밍 트리에 영향을 주지는. 파생 작업으로 적절 한 이벤트를도 발생 하지 않습니다 그때까지.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지, 제어 가능한 수행 되는 경우 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 Storyboard를 시작한 후 1 초에 검색 (건너뛰기) 하는 방법을 보여 줍니다.  
  
 [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  
  
 다음 예제에서는 두 가지 모두를 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 및 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 메서드.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SeekAlignedToLastTick">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치로 즉시(동기적으로) 이동합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan -&gt; unit" Usage="storyboard.SeekAlignedToLastTick offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">Timeline이 앞뒤로 이동하는 정도를 설명하는 양수 또는 음수 값입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치로 즉시(동기적으로) 이동합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> seeked 시간을 맞추는 <xref:System.Windows.Media.Animation.Storyboard> 마지막 클록 틱을 사용 하 여 합니다. 값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않습니다.  
  
 Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다. 스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.  
  
 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">타임라인이 지정된 <paramref name="origin" />에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</param>
        <param name="origin"><paramref name="offset" />이 적용되는 위치입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치로 즉시(동기적으로) 이동합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> seeked 시간을 맞추는 <xref:System.Windows.Media.Animation.Storyboard> 마지막 클록 틱을 사용 하 여 합니다. 값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않습니다.  
  
 Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다. 스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.  
  
 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkContentElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <param name="offset">타임라인이 지정된 <paramref name="origin" />에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</param>
        <param name="origin"><paramref name="offset" />이 적용되는 위치입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치로 즉시(동기적으로) 이동합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> seeked 시간을 맞추는 <xref:System.Windows.Media.Animation.Storyboard> 마지막 클록 틱을 사용 하 여 합니다. 값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않습니다.  
  
 Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다. 스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.  
  
 이 메서드는 storyboard clock의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 를  
  
 <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
   
  
## Examples  
 다음 예제에서는 두 가지 모두를 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 및 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 메서드.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : System.Windows.FrameworkElement * TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="storyboard.SeekAlignedToLastTick (containingObject, offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <param name="offset">타임라인이 지정된 <paramref name="origin" />에서 앞으로 또는 뒤로 이동해야 하는 정도를 설명하는 양수 또는 음수 값입니다.</param>
        <param name="origin"><paramref name="offset" />이 적용되는 위치입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />를 새 위치로 즉시(동기적으로) 이동합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> seeked 시간을 맞추는 <xref:System.Windows.Media.Animation.Storyboard> 마지막 클록 틱을 사용 하 여 합니다. 값으로 인해 변경 내용을 반영 하도록 즉시 업데이트 됩니다 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>이지만 화면 화면 업데이트 될 때까지이 변경 내용이 반영 되지 않습니다.  
  
 Seek 연산에 스토리 보드를 사용 하지 않는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 또는 <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> 설정을 고려 합니다. 스토리 보드 있는 것 처럼 처리 됩니다는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 및 no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>합니다.  
  
 이 메서드는 storyboard clock의 변경 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 를  
  
 <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 스토리 보드 트리거를 검색 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
   
  
## Examples  
 다음 예제에서는 두 가지 모두를 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 및 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> 메서드.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSpeedRatio">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 대화형 속도 비율을 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : double -&gt; unit" Usage="storyboard.SetSpeedRatio speedRatio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speedRatio">스토리보드의 새 대화형 속도 비율인 0보다 큰 유한 값입니다. 이 값에 스토리보드의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 값을 곱해 스토리보드의 유효 속도를 결정합니다. 이 값은 스토리보드의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 속성을 덮어쓰지 않습니다. 예를 들어 이 메서드를 호출하고 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />가 0.5인 스토리보드에 대해 대화형 속도 비율을 3으로 지정하면 스토리보드의 유효 속도가 1.5가 됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Storyboard" />의 대화형 속도 비율을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkContentElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkContentElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkContentElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkContentElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된  <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <param name="speedRatio">스토리보드의 새 대화형 속도 비율인 0보다 큰 유한 값입니다. 이 값에 스토리보드의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 값을 곱해 스토리보드의 유효 속도를 결정합니다. 이 값은 스토리보드의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 속성을 덮어쓰지 않습니다. 예를 들어 이 메서드를 호출하고 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />가 0.5인 스토리보드에 대해 대화형 속도 비율을 3으로 지정하면 스토리보드의 유효 속도가 1.5가 됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 대화형 속도 비율을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 이 메서드를 호출 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다. 합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkElement ^ containingObject, double speedRatio);" />
      <MemberSignature Language="F#" Value="member this.SetSpeedRatio : System.Windows.FrameworkElement * double -&gt; unit" Usage="storyboard.SetSpeedRatio (containingObject, speedRatio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된  <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <param name="speedRatio">스토리보드의 새 대화형 속도 비율인 0보다 큰 유한 값입니다. 이 값에 스토리보드의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 값을 곱해 스토리보드의 유효 속도를 결정합니다. 이 값은 스토리보드의 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 속성을 덮어쓰지 않습니다. 예를 들어 이 메서드를 호출하고 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />가 0.5인 스토리보드에 대해 대화형 속도 비율을 3으로 지정하면 스토리보드의 유효 속도가 1.5가 됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />의 대화형 속도 비율을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 이 메서드를 호출 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTarget(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTarget (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTarget(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberSignature Language="F#" Value="static member SetTarget : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTarget (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">지정된 종속성 개체를 대상으로 하는 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</param>
        <param name="value">대상으로 지정할 종속성 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.Animation.Timeline" />이 종속성 개체를 대상으로 사용하도록 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 설정 된 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 지정 된 개체에 연결 합니다. 스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>합니다. 연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 를 설정할 수 있으므로 속성은 직렬화 <xref:System.Windows.DependencyObject>합니다. XAML에서이 개체 올바르게 참조할 수 있는지는 보장 되지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetName">
      <MemberSignature Language="C#" Value="public static void SetTargetName (System.Windows.DependencyObject element, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetName(class System.Windows.DependencyObject element, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetName (element As DependencyObject, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetName(System::Windows::DependencyObject ^ element, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetTargetName : System.Windows.DependencyObject * string -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetName (element, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">지정된 종속성 개체를 대상으로 하는 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</param>
        <param name="name">대상으로 지정할 종속성 개체의 이름입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.Animation.Timeline" /> 대상을 지정된 이름을 가진 종속성 개체로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 설정 된 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 지정 된 개체에 연결 합니다. 스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>합니다. 연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetProperty">
      <MemberSignature Language="C#" Value="public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetProperty(class System.Windows.DependencyObject element, class System.Windows.PropertyPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetProperty (element As DependencyObject, path As PropertyPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetProperty(System::Windows::DependencyObject ^ element, System::Windows::PropertyPath ^ path);" />
      <MemberSignature Language="F#" Value="static member SetTargetProperty : System.Windows.DependencyObject * System.Windows.PropertyPath -&gt; unit" Usage="System.Windows.Media.Animation.Storyboard.SetTargetProperty (element, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="path" Type="System.Windows.PropertyPath" />
      </Parameters>
      <Docs>
        <param name="element">지정된 종속성 속성을 연결할 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</param>
        <param name="path">애니메이션 효과를 줄 종속성 속성을 설명하는 경로입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.Animation.Timeline" /> 대상을 지정된 종속성 속성으로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 설정 된 <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> 지정 된 개체에 연결 합니다. 스토리 보드 대상으로 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>합니다. 연결 된 속성 작동 방식에 대 한 자세한 내용은 참조 하세요. [연결 된 속성 개요](~/docs/framework/wpf/advanced/attached-properties-overview.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipToFill">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 스토리보드 <see cref="T:System.Windows.Media.Animation.Clock" />의 현재 시간을 활성 기간의 끝으로 이동합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="storyboard.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 스토리보드 <see cref="T:System.Windows.Media.Animation.Clock" />의 현재 시간을 활성 기간의 끝으로 이동합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 스토리보드 <see cref="T:System.Windows.Media.Animation.Clock" />의 현재 시간을 활성 기간의 끝으로 이동합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 스토리 보드의 이동은 활성 기간의 끝에 현재 시간 이 시점에서 스토리 보드의 동작으로 지정 된 해당 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 설정 합니다. 하는 경우 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 로 설정 된 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, 스토리 보드 채웁니다; 속성 설정 된 경우 <xref:System.Windows.Media.Animation.FillBehavior.Stop>, storyboard가 중지 합니다.  
  
 이 메서드는 무한 기간이 있는 스토리 보드를 호출는 무한 반복 횟수는 효과가 없습니다. 스토리 보드를 비활성에서이 메서드를 호출 해도 효과가 없습니다.  
  
 기간 트리거 시계는 fill로 이동 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
   
  
## Examples  
 다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다. 합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.SkipToFill containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 스토리보드 <see cref="T:System.Windows.Media.Animation.Clock" />의 현재 시간을 활성 기간의 끝으로 이동합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 스토리 보드의 이동은 활성 기간의 끝에 현재 시간 이 시점에서 스토리 보드의 동작으로 지정 된 해당 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 설정 합니다. 하는 경우 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 로 설정 된 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, 스토리 보드 채웁니다; 속성 설정 된 경우 <xref:System.Windows.Media.Animation.FillBehavior.Stop>, storyboard가 중지 합니다.  
  
 이 메서드는 무한 기간이 있는 스토리 보드를 호출는 무한 반복 횟수는 효과가 없습니다. 스토리 보드를 비활성에서이 메서드를 호출 해도 효과가 없습니다.  
  
 기간 트리거 시계는 fill로 이동 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트입니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />을 중지합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="storyboard.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />을 중지합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Storyboard를 중지 하는 발생 하지 않습니다 참고는 <xref:System.Windows.Media.Animation.Timeline.Completed> 이벤트입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkContentElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />을 중지합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.ClockState.Stopped> 스토리 보드는 해당 대상 속성에 더 이상 영향을 줍니다: 애니메이션 효과가 적용 된 속성의 이전 값으로 돌아갑니다.  
  
 클록 트리거를 중지 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트 아닌는 <xref:System.Windows.Media.Animation.Timeline.Completed> 이벤트입니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
   
  
## Examples  
 다음 예제에서는 제어 가능한 storyboard를 사용 하 여 애니메이션 효과 <xref:System.Windows.Media.TextEffect>입니다. 합니다 <xref:System.Windows.Media.TextEffect> 내에 포함 된를 <xref:System.Windows.FrameworkContentElement>의 범위 이름을 지정 합니다.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberSignature Language="F#" Value="member this.Stop : System.Windows.FrameworkElement -&gt; unit" Usage="storyboard.Stop containingObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject"><see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" /> 메서드가 호출되었을 때 지정된 개체입니다. 이 개체에는 이 스토리보드 및 해당 자식에 대해 생성된 <see cref="T:System.Windows.Media.Animation.Clock" /> 개체가 포함됩니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Storyboard" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Clock" />을 중지합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.ClockState.Stopped> 스토리 보드는 해당 대상 속성에 더 이상 영향을 줍니다: 애니메이션 효과가 적용 된 속성의 이전 값으로 돌아갑니다.  
  
 클록 트리거를 중지 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 및 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트 아닌는 <xref:System.Windows.Media.Animation.Timeline.Completed> 이벤트입니다.  
  
 이 스토리 보드를 대화형으로 제어 하려면 사용 해야 동일한 `containingObject` 스토리 보드를 시작 하는 데는 대화형 메서드를 호출할 때 매개 변수입니다. 제어 가능한 storyboard 수 일시 중지, 다시 시작, 검색, 중지 및 제거할 수 있습니다. 스토리 보드를 코드에서 제어할 수 있도록 해당 스토리 보드의 오버 로드를 사용 해야 합니다 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 지정 하 고 `true` 제어할 수 있도록 합니다. 예를 들어 참조 [방법:는 Storyboard를 시작한 후 제어](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md)입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="ILAsm" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.Target" />
      <MemberSignature Language="VB.NET" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="F#" Value="see GetTarget, and SetTarget" Usage="see GetTarget, and SetTarget" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>애니메이션을 적용해야 할 개체를 가져오거나 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대상 개체에는 종속성 개체 여야 합니다.  
  
> [!NOTE]
>  합니다 <xref:System.Windows.Media.Animation.Storyboard.Target%2A> 를 설정할 수 있으므로 속성은 직렬화 <xref:System.Windows.DependencyObject>합니다. 방법이 없는 항상이 개체의 XAML에 올바르게 참조할 수 있습니다.  
  
<a name="dependencyPropertyInfo_Target"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.Storyboard.TargetProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="ILAsm" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      <MemberSignature Language="VB.NET" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="F#" Value="see GetTargetName, and SetTargetName" Usage="see GetTargetName, and SetTargetName" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>애니메이션 효과를 줄 개체의 이름을 가져오거나 설정합니다. 개체는 <see cref="T:System.Windows.FrameworkElement" />, <see cref="T:System.Windows.FrameworkContentElement" /> 또는 <see cref="T:System.Windows.Freezable" />이어야 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 하는 것은 선택 사항입니다. 경우는 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 지정 하지 않으면 다음 중 하나에 스토리 보드의 애니메이션 적용 됩니다.  
  
-   애니메이션 속해 있는 스토리 보드를 사용 하 여 시작 된 경우는 <xref:System.Windows.Media.Animation.BeginStoryboard>를 소유 하는 요소는 <xref:System.Windows.Media.Animation.BeginStoryboard> 스토리 보드를 트리거하는 작업 대상으로 합니다.  
  
-   스토리 보드를 사용 하 여 시작 된 경우는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 합니다 <xref:System.Windows.FrameworkElement> 또는 <xref:System.Windows.FrameworkContentElement> 스토리 보드를 사용 하 여 시작 된 경우 지정 된는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드를 대상으로 합니다.  
  
 자식 타임 라인에서이 속성이 설정 되어 이러한 자식 타임 라인 "상속" 부모의 <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> 지정 하지 않은 경우 자체입니다.  
  
## <a name="making-an-object-targetable"></a>개체를 대상 지정이 가능 하기  
 사용 하는 경우 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], 스토리 보드에서 개체를 대상 지정이 가능 하 게 하는 다음 두 작업 중 하나를 수행 합니다.  
  
-   개체가 있으면 한 <xref:System.Windows.FrameworkElement> 또는 <xref:System.Windows.FrameworkContentElement>설정, 해당 <xref:System.Windows.FrameworkElement.Name%2A> 속성입니다.  
  
-   개체가 <xref:System.Windows.Freezable> 또는 사용자 지정 <xref:System.Windows.FrameworkContentElement> 또는 <xref:System.Windows.FrameworkContentElement>를 사용 하 여 이름을 할당 합니다 [X:name 지시문](~/docs/framework/xaml-services/x-name-directive.md) 태그 확장 합니다.  
  
 코드를 사용 하는 경우 사용자 지정할 수 있게 사용 하 여는 <xref:System.Windows.NameScope.RegisterName%2A> 개체 이름을 할당 하는 방법입니다.  
  
<a name="dependencyPropertyInfo_TargetName"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.Storyboard.TargetNameProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetNameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 연결된 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> 연결된 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetPropertyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetPropertyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetPropertyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetPropertyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetPropertyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 연결된 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
  </Members>
</Type>