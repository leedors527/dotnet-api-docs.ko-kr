<Type Name="Timeline" FullName="System.Windows.Media.Animation.Timeline">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4bbac06536f66f17ac47339f211f542eb1f4e039" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58684477" /></Metadata><TypeSignature Language="C#" Value="public abstract class Timeline : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Timeline extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Timeline" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Timeline&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timeline abstract : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type Timeline = class&#xA;    inherit Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>시간 세그먼트를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 타임 라인은 시간 세그먼트를 나타냅니다.  해당 세그먼트의 길이, 시작 시기, 반복 횟수, 해당 세그먼트에서 진행되는 속도 등을 지정할 수 있는 속성이 제공됩니다.  
  
 타임라인 클래스에서 상속하는 클래스는 애니메이션 및 미디어 재생 등의 추가 기능을 제공합니다. 다음은 사용할 수 있는 특수 한 타임 라인에는 다양 한 유형의 몇몇 예입니다.  
  
-   **애니메이션**: <xref:System.Windows.Media.Animation.AnimationTimeline> 출력 값을 생성 하는 타임 라인의 형식입니다. 속성을 갖는 애니메이션을 연결 하는 경우 애니메이션 재생 될 하므로 "애니메이션 효과 적용" 속성의 값을 업데이트 합니다. 애니메이션 소개를 참조 하세요 [애니메이션 개요](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)합니다. 애니메이션을 적용 하는 다른 방법에 대 한 내용은 참조는 [속성 애니메이션 기술 개요](~/docs/framework/wpf/graphics-multimedia/property-animation-techniques-overview.md)합니다.  
  
-   **MediaTimelines**: <xref:System.Windows.Media.MediaTimeline> 미디어 파일의 재생을 제어 하는 타임 라인의 형식입니다.  
  
-   **ParallelTimelines**: <xref:System.Windows.Media.Animation.ParallelTimeline> 다른 타임 라인을 그룹화 하는 타임 라인의 형식입니다.  
  
-   **스토리 보드**: A <xref:System.Windows.Media.Animation.Storyboard> 는 특수 한 유형의 <xref:System.Windows.Media.Animation.ParallelTimeline> 개체 및 포함 된 타임 라인에 대 한 정보를 대상으로 하는 속성을 제공 하는 합니다. 에 대 한 자세한 내용은 <xref:System.Windows.Media.Animation.Storyboard> 개체를 참조 합니다 [Storyboard 개요](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)합니다.  
  
 Timeline을 사용 하는 방법에 대 한 자세한 내용은 참조는 [애니메이션 개요](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)합니다. 타임 라인의 타이밍 기능 소개를 참조 하세요. 합니다 [타이밍 동작 개요](~/docs/framework/wpf/graphics-multimedia/timing-behaviors-overview.md)합니다.  
  
## <a name="data-binding-and-animating-timelines"></a>데이터 바인딩 및 애니메이션 타임 라인  
 대부분의 시간 표시 막대 속성에 데이터 바인딩 또는 애니메이션; 수 합니다. 그러나 타이밍 시스템이 작동 하는 방식 때문에 데이터 바인딩 또는 애니메이션 타임 라인 다른 데이터 처럼 작동 하지 바인딩 또는 애니메이션 개체입니다. 해당 동작을 이해 하려면 타임 라인을 활성화 하는 것을 이해할 수 있습니다.  
  
 타임 라인을 적용 하면 timeline과 자식 timeline의 복사본이 됩니다. 이러한 복사본은 고정 (읽기 전용 됨) 및 <xref:System.Windows.Media.Animation.Clock> 개체에서 생성 됩니다. 이러한 클록은 대상된 속성에 애니메이션 효과 주는 실제 작업을 수행 하는 것입니다. 타임 라인에 애니메이션이 적용 된 현재 값의 스냅숏을 만든 해당 클록을 만들 때 또는 데이터 바인딩 되었으면 합니다. 원래 일정 변경 하려면 계속 수 하는 경우에 해당 클록이 되지 않습니다.  
  
 데이터 바인딩 또는 애니메이션 변경 내용을 반영 하려면 타임 라인에 대 한 해당 클록을 다시 생성 해야 합니다. 클록은 자동으로 다시 생성되지 않습니다. 다음은 타임라인 변경 내용을 적용하는 몇 가지 방법입니다.  
  
-   타임 라인은 또는에 속하는 경우는 <xref:System.Windows.Media.Animation.Storyboard>를 사용 하 여 해당 storyboard를 다시 적용 하 여 변경 내용을 반영 만들 수 있습니다를 <xref:System.Windows.Media.Animation.BeginStoryboard> 또는 <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> 메서드. 부작용으로 애니메이션까지 다시 시작됩니다. 코드에서 사용할 수는 <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> 메서드 storyboard를 이전 위치로 다시 합니다.  
  
-   사용 하 여 속성에 직접 애니메이션을 적용 하는 경우는 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> 메서드를 호출 합니다 <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> 메서드를 다시 수정 되는 애니메이션을 전달 합니다.  
  
-   클록 수준에서 직접 작업하는 경우 새 클록 집합을 만들어 적용하고 이 클록 집합을 사용하여 이전에 생성된 클록 집합을 대체합니다.  
  
 애니메이션을 바인딩된 데이터의 예제를 참조 합니다 [키 스플라인 애니메이션 샘플](https://go.microsoft.com/fwlink/?LinkID=160011) 합니다.  
  
## <a name="using-a-timeline-as-a-timer"></a>타임 라인을 사용 하 여 타이머  
 이벤트 처리기 연결 된 경우 타임 라인의 클록 진행만 됩니다 또는 (의 경우는 <xref:System.Windows.Media.Animation.AnimationClock> 개체) 속성에 연결 됩니다. 이 따라서 (및 다른 사용자)에 대 한 권장 되지 않습니다를 사용 하는 한 <xref:System.Windows.Media.Animation.Timeline> 를 타이머로 합니다.  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159970">애니메이션 타이밍 동작 샘플</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Media.Animation.Timeline" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.Animation.Timeline" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (beginTime As Nullable(Of TimeSpan))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline beginTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime">이 <see cref="T:System.Windows.Media.Animation.Timeline" />을 시작할 시간입니다. 자세한 내용은 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 속성을 참조하세요.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.Animation.Timeline" />를 사용하여 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime">이 <see cref="T:System.Windows.Media.Animation.Timeline" />을 시작할 시간입니다. 자세한 내용은 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 속성을 참조하세요.</param>
        <param name="duration">반복을 제외하고 이 Timeline이 재생되는 시간입니다. 자세한 내용은 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 속성을 참조하세요.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.Animation.Timeline" /> 및 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />를 사용하여 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration, System::Windows::Media::Animation::RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration * System.Windows.Media.Animation.RepeatBehavior -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration, repeatBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime">이 <see cref="T:System.Windows.Media.Animation.Timeline" />을 시작할 시간입니다. 자세한 내용은 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 속성을 참조하세요.</param>
        <param name="duration">반복을 제외하고 이 Timeline이 재생되는 시간입니다. 자세한 내용은 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 속성을 참조하세요.</param>
        <param name="repeatBehavior">이 Timeline의 반복 동작으로, 반복 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> 또는 반복 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Duration" />으로 나타냅니다. 자세한 내용은 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 속성을 참조하세요.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.Animation.Timeline" />, <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 및 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />를 사용하여 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatio">
      <MemberSignature Language="C#" Value="public double AccelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AccelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property AccelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double AccelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AccelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시간의 경과를 최대 0에서 속도로 가속하는 데 사용한 타임라인의 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 백분율을 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>시간의 경과를 0에서 최대 속도로 가속하는 데 사용한 타임라인의 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 백분율을 지정하는 0에서 1을 포함한 그 사이의 값입니다. 또한 타임라인의 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 속성이 설정된 경우 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />와 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />의 합은 1보다 작거나 같아야 합니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> 느리게 시작 하 고 다음 시간이 지나면서 속도 애니메이션을 만드는 속성입니다. <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> 속성은 더 자연 스러운 것으로 이동 하거나 느려지는 효과 만드는 데 유용 합니다. 사용 된 <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> 및 <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> 속성, 속도 느리게 시작 하는 애니메이션을 만드는 그룹화 및 다음 느려지거나 완료 하기 전에 다시 합니다.  
  
<a name="dependencyPropertyInfo_AccelerationRatio"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />가 0보다 작거나 1보다 큽니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />와 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />의 합이 1을 초과합니다.</exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AccelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AccelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AccelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateClock">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Animation.Clock AllocateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Animation.Clock AllocateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.AllocateClock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function AllocateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Animation::Clock ^ AllocateClock();" />
      <MemberSignature Language="F#" Value="abstract member AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock&#xA;override this.AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.AllocateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대한 <see cref="T:System.Windows.Media.Animation.Timeline" />을 만듭니다.</summary>
        <returns>이 <see cref="T:System.Windows.Media.Animation.Timeline" />에 대한 Clock입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> 메서드 코드에서 직접 호출할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>구현자 <see cref="T:System.Windows.Media.Animation.Timeline" /> 클래스를 사용 하 여 사용 해야 하는 해당 사용자 지정 클록에 있을 때이 메서드를 재정의 해야 합니다. 재정의 된 메서드에 만들고에서 상속 된 클래스의 새 인스턴스를 반환 해야 <see cref="T:System.Windows.Media.Animation.Clock" />합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="AutoReverse">
      <MemberSignature Language="C#" Value="public bool AutoReverse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReverse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoReverse : bool with get, set" Usage="System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Timeline이 정방향으로 반복을 완료한 뒤 역방향으로 재생되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>반복이 끝날 때마다 Timeline이 반대 방향으로 재생되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 속성이 `true`를 두 번 지정 된 시간 길이 대 한 타임 라인이 재생 해당 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 속성입니다.  
  
### <a name="autoreverse-and-repetitions"></a>AutoReverse 및 반복  
 타임 라인의 경우 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 속성이로 설정 되어 `true` 고 <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> 속성 반복으로 인해, 각 정방향 반복은 이전 버전과 반복을 차례로 나옵니다. 따라서 1 회 반복 합니다. 예를 들어 타임 라인을 사용 하 여는 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 변수의 `true` 반복을 사용 하 여 <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> 2는 play 전달 이전 버전과 호환성을 한 번 다시 차례로 뒤로 다시 합니다.  
  
<a name="dependencyPropertyInfo_AutoReverse"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="AutoReverseProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoReverseProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoReverseProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoReverseProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoReverseProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoReverseProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; BeginTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; BeginTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberSignature Language="VB.NET" Value="Public Property BeginTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; BeginTime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.BeginTime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Timeline" />이 시작되어야 하는 시간을 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.Windows.Media.Animation.Timeline" />이 시작되어야 하는 시간으로, 해당 부모의 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />에 상대적입니다. 이 타임라인이 루트 타임라인인 경우 시간이 대화형 시작 시간(타임라인이 트리거된 순간)에 상대적입니다. 이 값은 양수, 음수 또는 <see langword="null" />이 될 수 있습니다. 값이 <see langword="null" />이면 타임라인이 재생되지 않습니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 속성은 시퀀스에서 수행 하는 타임 라인을 만드는 데 유용: 늘려는 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 동일한 부모를 공유 하는 연속 타임 라인의 플레이 시간에 따라를 스 태거 수 있습니다.  
  
## <a name="negative-values"></a>음수 값  
 음수 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 원인 값을 <xref:System.Windows.Media.Animation.Timeline> 지난에서 몇 시간에 시작 된 것 처럼 동작 합니다. 예를 들어를 <xref:System.Windows.Media.Animation.Timeline> 사용 하 여를 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 음수 2.5 시간 (초) 및 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 절반에 5 초의 더 표시 시작 될 때 완료 합니다.  
  
## <a name="begintime-and-speedratio"></a>BeginTime 및 SpeedRatio  
 설명 하는 시간을 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 속성이 부모 timeline의 시간 단위로 측정 됩니다. 예를 들어 타임 라인을 사용 하 여는 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 부모가 5를 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 2 실제로 2.5 초 후 시작 합니다.  
  
 타임 라인의 자체 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 설정에 영향을 주지 않습니다 해당 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>합니다. 예를 들어 타임 라인을 사용 하 여는 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 5 초의 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 2 및 사용 하 여 부모 타임 라인의는 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 없습니다 2.5 5 초 후에 시작 1입니다.  
  
<a name="dependencyPropertyInfo_BeginTime"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.Timeline.BeginTimeProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
<a name="xamlAttributeUsage_BeginTime"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
 \<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-][*days*.]*hours*:*minutes*:*seconds*[.*fractionalSeconds*]"/>  
  
또는
  
 \<*개체* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>= "[-] [*일*.] *시간*:*분*"/ >  
  
또는
  
 \<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-]*days*"/>  
  
또는
  
 \<*개체* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>= "{[X:null 태그 확장](~/docs/framework/xaml-services/x-null-markup-extension.md)}" / >  
  
<a name="xamlValues_BeginTime"></a>   
## <a name="xaml-values"></a>XAML 값  
 대괄호 안에 있는 항목 (`[` 고 `]`)은 선택 사항입니다.  
  
 *days*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 값이 포함 되는 일 수를 설명 하는 0 보다 크거나 시작 시간입니다.  
  
 *시간*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 시작 시간에이 포함 되는 시간 수를 나타내는 0에서 23 사이의 값입니다.  
  
 *minutes*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 시작 시간에이 포함 되는 분 수를 나타내는 0에서 59 사이의 값입니다.  
  
 *seconds*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 시작 시간에이에 포함 되는 시간 (초) 수를 나타내는 0에서 59 사이의 값입니다.  
  
 *fractionalSeconds*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 소수 자릿수 초를 나타내는 1 ~ 7 자리 이루어진는 값입니다.  
  
 전체 <xref:System.TimeSpan> 구문을의 주의 섹션을 참조 합니다 <xref:System.TimeSpan.Parse%2A> 페이지입니다.  
  
   
  
## Examples  
 타임 라인의 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 속성 타임 라인의 활성 기간 시작 부분을 결정 합니다. 타임 라인에 부모 타임 라인을 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 속성 부모 시작 된 후 시작 하려면 타임 라인 걸리는 시간을 결정 합니다. 타임 라인이 루트 타임 라인 있으면 (한 <xref:System.Windows.Media.Animation.Storyboard>예를 들어), <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 속성 결정 타임 라인이 트리거된 후 재생을 시작 하는 데 걸리는.  
  
 다음 예제에서는 서로 다른 여러 개의 타임 라인 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> 설정 합니다.  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_BeginTimeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/BeginTimeExample.xaml#_graphicsmm_begintimeexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="BeginTimeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BeginTimeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BeginTimeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeginTimeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BeginTimeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BeginTimeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 개체 값의 전체 복사본을 만들어 이 <see cref="T:System.Windows.Media.Animation.Timeline" />의 수정 가능한 복제본을 만듭니다.</summary>
        <returns>현재 개체의 수정 가능한 복제본입니다. 소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true." />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 수정 가능한 복사본을 만드는이 메서드는 사용 중지 <xref:System.Windows.Freezable> 개체 (또는 <xref:System.Windows.Freezable> 개체). 편의 위해이 메서드는 강력한 형식의 구현이 상속 된 버전을 숨깁니다.  
  
 자세한 내용은 <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>을 참조하세요.  
  
 종속성 속성을 복사하는 경우 이 메서드는 더 이상 확인되지 않을 수도 있는 리소스 참조와 데이터 바인딩을 복사하지만 애니메이션이나 애니메이션의 현재 값은 복사하지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.Animation.Timeline" /> 개체의 현재 값에 대한 전체 복사본을 만들어 이 개체의 수정 가능한 복제본을 만듭니다.</summary>
        <returns>현재 개체의 수정 가능한 복제본입니다. 소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="false" />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="true" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 수정 가능한 복사본을 만드는이 메서드는 사용 중지 <xref:System.Windows.Freezable> 개체 (또는 <xref:System.Windows.Freezable> 개체). 편의 위해이 메서드는 강력한 형식의 구현이 상속 된 버전을 숨깁니다.  
  
 자세한 내용은 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>를 참조하십시오.  
  
 리소스 참조, 데이터 바인딩 및 애니메이션은 복사되지 않지만 이러한 요소의 현재 값은 복사됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler " Usage="member this.Completed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 Timeline의 재생이 완전히 끝날 때 발생하며, Timeline이 더 이상 활성 기간으로 들어가지 않습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 타임 라인이 루트 타임 라인의 타임 라인 트리에 인 경우 (반복 포함)는 해당 활성 기간의 끝에 도달한 후 해당 활성 기간의 끝에 도달 했습니다. 모든 자식의 재생이 완료 합니다. 이 타임 라인에 자식 타임 라인 경우 완전히 재생에 도달 하면 속해 있는 타임 라인 트리의 루트 타임 라인에 활성 기간 및 모든 자식 timeline의 끝이 완료 되 면 재생 완료를 간주 됩니다.  
  
 타임 라인을 중지 해도 해당 완료 이벤트가 트리거되지 않습니다 않지만 채우기 기간을 건너뜁니다.  
  
 합니다 <xref:System.Object> 의 매개 변수를 <xref:System.EventHandler> 이벤트 처리기는 타임 라인의 <xref:System.Windows.Media.Animation.Clock>합니다.  
  
 이 이벤트 처리기는 타임 라인을 사용 하 여 연결할 보이지만 실제로 등록은 <xref:System.Windows.Media.Animation.Clock> 이 timeline에 대 한 생성 합니다.  자세한 내용은 참조는 [타이밍 이벤트 개요](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)합니다.  
  
   
  
## Examples  
 다음 예제에서 두 <xref:System.Windows.Media.Animation.Storyboard> 개체를 애니메이션 전환 사용 하 여 저장 하는 두 개의 이미지를 만드는 데 사용 됩니다 <xref:System.Windows.Media.ImageSource> 개체를 사용 하 여 표시를 <xref:System.Windows.Controls.Image> 제어 합니다. 한 스토리 보드 사라질 때까지 이미지 컨트롤을 축소 합니다. 완료 되 면 이전 <xref:System.Windows.Media.ImageSource> 서로 바뀔 <xref:System.Windows.Media.ImageSource>, 및 이미지를 확장 하는 두 번째 스토리 보드 제어 될 때까지 큰 다시 합니다.  
  
 [!code-xaml[timingbehaviors_snip#TimelineCompletedExampleMarkupUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/TimelineCompletedExample.xaml#timelinecompletedexamplemarkupusingwholepage)]  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Clock" />에서 <see cref="T:System.Windows.Media.Animation.Timeline" />을 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock();" />
      <MemberSignature Language="F#" Value="member this.CreateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Clock" />에서 제어 가능한 새 <see cref="T:System.Windows.Media.Animation.Timeline" />을 만듭니다. 이 <see cref="T:System.Windows.Media.Animation.Timeline" />에 자식 항목이 있으면 이 <see cref="T:System.Windows.Media.Animation.Timeline" />을 루트로 하는 Clock 트리가 만들어집니다.</summary>
        <returns>이 <see cref="T:System.Windows.Media.Animation.Clock" />에서 생성된 제어 가능한 새 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다. 이 <see cref="T:System.Windows.Media.Animation.Timeline" />이 자식 Timeline을 포함하는 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />이면 이 <see cref="T:System.Windows.Media.Animation.Clock" />에서 생성된 제어 가능한 <see cref="T:System.Windows.Media.Animation.Clock" />을 루트로 하는 <see cref="T:System.Windows.Media.Animation.Timeline" /> 개체 트리가 만들어집니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하지만이 <xref:System.Windows.Media.Animation.Timeline> 하나 이상의 자식일 수 <xref:System.Windows.Media.Animation.TimelineGroup> 개체를이 정보는 무시 됩니다:이 메서드는 현재 처리 <xref:System.Windows.Media.Animation.Timeline> 루트로 <xref:System.Windows.Media.Animation.Timeline>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock (bool hasControllableRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock(bool hasControllableRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock (hasControllableRoot As Boolean) As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock(bool hasControllableRoot);" />
      <MemberSignature Language="F#" Value="member this.CreateClock : bool -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock hasControllableRoot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasControllableRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasControllableRoot"><see cref="T:System.Windows.Media.Animation.Clock" /> 트리를 대화식으로 제어할 수 있도록 반환된 루트 <see cref="T:System.Windows.Media.Animation.ClockController" />이 <see cref="P:System.Windows.Media.Animation.Clock.Controller" /> 속성의 <see cref="T:System.Windows.Media.Animation.Clock" />를 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Clock" />에서 새 <see cref="T:System.Windows.Media.Animation.Timeline" />을 만들고 새 <see cref="T:System.Windows.Media.Animation.Clock" />을 제어할 수 있는지 여부를 지정합니다. 이 <see cref="T:System.Windows.Media.Animation.Timeline" />에 자식 항목이 있으면 이 <see cref="T:System.Windows.Media.Animation.Timeline" />을 루트로 하는 Clock 트리가 만들어집니다.</summary>
        <returns>이 <see cref="T:System.Windows.Media.Animation.Clock" />에서 생성된 새 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다. 이 <see cref="T:System.Windows.Media.Animation.Timeline" />이 자식 Timeline을 포함하는 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />이면 이 <see cref="T:System.Windows.Media.Animation.Clock" />에서 생성된 제어 가능한 <see cref="T:System.Windows.Media.Animation.Clock" />을 루트로 하는 <see cref="T:System.Windows.Media.Animation.Timeline" /> 개체 트리가 만들어집니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하지만이 <xref:System.Windows.Media.Animation.Timeline> 하나 이상의 자식일 수 <xref:System.Windows.Media.Animation.TimelineGroup> 개체를이 정보는 무시 됩니다:이 메서드는 현재 처리 <xref:System.Windows.Media.Animation.Timeline> 루트로 <xref:System.Windows.Media.Animation.Timeline>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeedInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentGlobalSpeedInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentGlobalSpeedInvalidated : EventHandler " Usage="member this.CurrentGlobalSpeedInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Timeline Clock의 진행 속도가 변경될 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음과 같은 경우에는 타임 라인의 클록 변경 내용의 현재 전역 속도:  
  
-   해당 timeline의 인해 방향을 변경 하는 클록 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 설정 합니다.  
  
-   클록 가속화 또는 해당 timeline의 인해 감속 <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> 또는 <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> 속성 설정 합니다.  
  
-   클록 일시 중지 되었거나 다시 시작 됩니다.  
  
-   클록이 비활성화 되거나 다시 활성화 합니다.  
  
-   <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> clock의 부모 변경 사항 중 하나입니다.  
  
 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 스토리 보드의 사용, 이벤트 타임 라인의 clock이 일시 중지 하는 경우 추적에 이벤트 처리기에서 유용 <xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A> 메서드 또는 확인 클록의 <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> 해당 클록; 일시 중지 여부를 결정 하는 속성에 대해 비교 변경 여부를 확인 하는 이전에 캐시 된 값입니다.  
  
 합니다 <xref:System.Object> 의 매개 변수를 <xref:System.EventHandler> 이벤트 처리기는 타임 라인의 <xref:System.Windows.Media.Animation.Clock>합니다.  
  
 이 이벤트 처리기는 타임 라인을 사용 하 여 연결할 보이지만 실제로 등록은 <xref:System.Windows.Media.Animation.Clock> 이 timeline에 대 한 생성 합니다.  자세한 내용은 참조는 [타이밍 이벤트 개요](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)합니다.  
  
   
  
## Examples  
 다음 예에서는 등록 하는 방법을 보여 줍니다는 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentGlobalSpeedInvalidatedExample.cs#timelinecurrentglobalspeedinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrentglobalspeedinvalidatedexample.vb#timelinecurrentglobalspeedinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentStateInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentStateInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentStateInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentStateInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateInvalidated : EventHandler " Usage="member this.CurrentStateInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>타임라인의 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 속성이 업데이트될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 이벤트를 타임 라인의 경우 알림을 받으려면 <xref:System.Windows.Media.Animation.Clock> 시작, 중지 또는 채웁니다.  
  
 일시 중지 된 <xref:System.Windows.Media.Animation.Clock> 바뀌지 않으면 해당 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>합니다. Clock이 일시 중지 하는 경우 알림을 받을 수를 사용 하 여는 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> 이벤트입니다.  
  
 이 이벤트가 발생 하지만 때 합니다 <xref:System.Windows.Media.Animation.ClockState> 없게 되 면 반드시는 <xref:System.Windows.Media.Animation.ClockState> 변경:을 <xref:System.Windows.Media.Animation.Clock> 에서 전환 하는 <xref:System.Windows.Media.Animation.ClockState.Active> 에 <xref:System.Windows.Media.Animation.ClockState.Filling> 다시 <xref:System.Windows.Media.Animation.ClockState.Active> 동일한 눈금에 수행 되지 것입니다 이 이벤트를 발생 했지만 해당 <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> 속성이 실제로 변경 되지 않습니다.  
  
 <xref:System.Object> 의 매개 변수를 <xref:System.EventHandler> 이벤트 처리기는 <xref:System.Windows.Media.Animation.Clock> 이 timeline에 대 한 생성 된 합니다.  
  
 이 이벤트 처리기는 타임 라인을 사용 하 여 연결할 보이지만 실제로 등록은 <xref:System.Windows.Media.Animation.Clock> 이 timeline에 대 한 생성 합니다.  자세한 내용은 참조는 [타이밍 이벤트 개요](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentState" />
        <altmember cref="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentTimeInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentTimeInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentTimeInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentTimeInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeInvalidated : EventHandler " Usage="member this.CurrentTimeInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>타임라인의 <see cref="T:System.Windows.Media.Animation.Clock" />의 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 속성이 업데이트될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> 되도록 하려는 경우 이벤트 알림을 합니다 <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> 타임 라인의의 <xref:System.Windows.Media.Animation.Clock> 업데이트 됩니다.  
  
 합니다 <xref:System.Object> 의 매개 변수를 <xref:System.EventHandler> 이벤트 처리기는 타임 라인의 <xref:System.Windows.Media.Animation.Clock>합니다.  
  
 이 이벤트 처리기는 타임 라인을 사용 하 여 연결할 보이지만 실제로 등록은 <xref:System.Windows.Media.Animation.Clock> 이 timeline에 대 한 생성 합니다.  자세한 내용은 참조는 [타이밍 이벤트 개요](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)합니다.  
  
   
  
## Examples  
 다음 예에서는 등록 하는 방법을 보여 줍니다는 <xref:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated> 이벤트입니다.  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentTimeInvalidatedExample.cs#timelinecurrenttimeinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrenttimeinvalidatedexample.vb#timelinecurrenttimeinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatio">
      <MemberSignature Language="C#" Value="public double DecelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DecelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property DecelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DecelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.DecelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최대 속도에서 0까지 시간의 흐름을 감속하는 데 소요된 Timeline <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />의 백분율을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>최대 속도에서 0까지 시간의 흐름을 감속하는 데 소요된 Timeline <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />의 백분율을 지정하는 0에서 1 사이의 값입니다. 또한 타임라인의 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 속성이 설정된 경우 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />와 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />의 합은 1보다 작거나 같아야 합니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> 애니메이션을 만드는 해당 느리게 중지 하기 전에 속성입니다. <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> 속성은 더 자연 스러운 것으로 이동 하거나 느려지는 효과 만드는 데 유용 합니다. 사용 된 <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> 및 <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> 속성, 속도 느리게 시작 하는 애니메이션을 만드는 그룹화 및 다음 느려지거나 완료 하기 전에 다시 합니다.  
  
<a name="dependencyPropertyInfo_DecelerationRatio"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />가 0보다 작거나 1보다 큽니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />와 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />의 합이 1을 초과합니다.</exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DecelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DecelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DecelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DecelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DecelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRate">
      <MemberSignature Language="C#" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="ILAsm" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      <MemberSignature Language="VB.NET" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="F#" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" Usage="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 Timeline과 자식 Timeline의 원하는 프레임 속도를 가져오거나 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
이 속성을 사용 하 여 애니메이션을 실행할지 특정 프레임 속도 정의할 수 있습니다.  지침일 뿐 이며 보장 된 값이 아닙니다. 이 속성은 두 가지 기본 사용:

- 애니메이션에 대 한 기동성이 백그라운드 형식 충실도 높은 수준의 필요 하지 않은 처리 리소스의 크기를 제한 합니다. 이 타임 라인에는 작은 프레임 속도 값을 설정 하 여 구현할 수 있습니다.

- 가로 애니메이션 빠르게 움직이는에서 분리의 시각적 효과 줄입니다. 이 타임 라인의 높은 프레임 속도 값을 설정 하 여 구현할 수 있습니다.

이 속성은 루트만 설정할 수 있습니다.

## Examples  
다음 예제에서는 여러 애니메이션 초당 10 프레임을 제한 하려면 DesiredFrameRate 속성을 사용 합니다.

[!code-xaml[timingbehaviors_snip#GraphicsMMDesiredFrameRateExample](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/DesiredFrameRateExample.xaml#GraphicsMMDesiredFrameRateExample)]

]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/wpf/graphics-multimedia/animation-overview.md">애니메이션 개요</related>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DesiredFrameRateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DesiredFrameRateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesiredFrameRateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DesiredFrameRateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesiredFrameRateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" /> 연결된 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration Duration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration Duration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : System.Windows.Duration with get, set" Usage="System.Windows.Media.Animation.Timeline.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>반복을 제외하고 이 Timeline이 재생되는 시간을 가져오거나 설정합니다.</summary>
        <value>Timeline이 단일 정방향 반복을 완료하는 데 걸리는 시간인 Timeline의 단순 지속 시간입니다. 기본값은 <see cref="P:System.Windows.Duration.Automatic" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Timeline의 단순 지속 기간 동안 반복을 포함 하는 총 재생 시간 및 단일 정방향 반복에 대 한 시간을 구성 합니다.  
  
## <a name="default-duration-behavior"></a>기본 기간 동작  
 동작을 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 구조체의 값을 사용 하 여 <xref:System.Windows.Duration.Automatic%2A> 타임 라인의 유형에 따라 달라 집니다.  
  
|**타임 라인**|**동작**|  
|-|-|  
|<xref:System.Windows.Media.Animation.Timeline>|결정 되지 않은 (<xref:System.Windows.Media.Animation.Timeline> 추상적)|  
|<xref:System.Windows.Media.Animation.ParallelTimeline>,<br /><br /> <xref:System.Windows.Media.Animation.Storyboard>,<br /><br /> <xref:System.Windows.Media.Animation.TimelineGroup>|자식 타임 라인에 맞게 확장|  
|\<*형식*> 알려진 "From/To/By" 또는 "basic" 애니메이션으로 애니메이션|1 초|  
|\<*형식*> AnimationUsingKeyFrames (이 키 프레임 애니메이션 이라고 함)|모든 키 프레임의 합계 <xref:System.Windows.Media.Animation.KeyTime> 값|  
  
<a name="dependencyPropertyInfo_Duration"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.Timeline.DurationProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 <xref:System.Windows.Media.Animation.ParallelTimeline> 및 <xref:System.Windows.Media.Animation.Storyboard> 종류가 <xref:System.Windows.Media.Animation.TimelineGroup> 개체입니다. 기간을 <xref:System.Windows.Media.Animation.TimelineGroup> 자식 timeline의 기간에 따라 결정 됩니다. 예를 들어 합니다 <xref:System.Windows.Media.Animation.Storyboard> 아래는 6 초 동안 실행 (6 초 기간)는 마지막 자식 타임 라인 (<xref:System.Windows.Media.Animation.DoubleAnimation>) 종료 합니다.  
  
> [!NOTE]
>  참고: 코드 위한 목적 으로만 제공 되는 다음 예제에서 생략 되었습니다.  
  
 [xaml]  
  
```  
...  
  <Storyboard>  
    <DoubleAnimation Duration="0:0:2" …/>  
    <DoubleAnimation Duration="0:0:4" BeginTime="0:0:2" …/>  
  </Storyboard>   
...  
```  
  
 예가 \< *형식*> 애니메이션 포함 <xref:System.Windows.Media.Animation.DoubleAnimation>합니다 <xref:System.Windows.Media.Animation.PointAnimation>, <xref:System.Windows.Media.Animation.ColorAnimation>등입니다. 없으면 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 이러한 유형의 애니메이션에 대 한 지정 된 1 초 동안 실행 됩니다.  
  
 [xaml]  
  
```  
...  
  <!-- With no Duration specified, this animation will run for   
       one second -->  
  <DoubleAnimation .../>  
...  
```  
  
 예가 \< *형식을*> AnimationUsingKeyFrames 포함 <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>, <xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>등입니다. 없으면 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 이러한 유형의 애니메이션 키 프레임을 모두 완료 될 때까지 실행 됩니다 지정 합니다.  
  
 [xaml]  
  
```  
...  
  <Storyboard>  
  
    <!-- This key frame animation will end at 4.5 seconds  
         Because that is when its last KeyFrame KeyTime ends. -->  
    <DoubleAnimationUsingKeyFrames ...>  
      <LinearDoubleKeyFrame ... KeyTime="0:0:3" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:3.5" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4.5" />  
    </DoubleAnimationUsingKeyFrames>  
  </Storyboard>   
...  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="DurationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DurationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DurationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DurationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DurationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DurationProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.FillBehavior FillBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.FillBehavior FillBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property FillBehavior As FillBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::FillBehavior FillBehavior { System::Windows::Media::Animation::FillBehavior get(); void set(System::Windows::Media::Animation::FillBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillBehavior : System.Windows.Media.Animation.FillBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.FillBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.Animation.Timeline" />이 활성 기간의 끝에 도달한 후 동작하는 방식을 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>활성 기간의 끝에 도달했지만 부모가 활성 또는 채우기 기간 안에 있을 때 Timeline이 동작하는 방식을 지정하는 값입니다. 기본값은 <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애니메이션을 설정 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 속성을 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> 해당 활성 기간의 끝에 도달한 후 해당 값을 유지 하도록 하려는 경우. 에 도달한 활성 기간의 끝은 애니메이션에는 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 설정 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> 채우기 기간에 라고 합니다. 해당 활성 기간의 끝에 도달한 후 해당 값을 보유할 애니메이션 않으려는 경우, 설정 해당  
  
 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 속성을 <xref:System.Windows.Media.Animation.FillBehavior.Stop>입니다.  
  
 대상 속성의 값을 재정의 하려면 채우기 기간에는 애니메이션을 계속 하기 때문에 아무 효과도 없는 나타날 수 있습니다 다른 수단을 통해 대상 속성의 값을 설정 하려고 했습니다. 애니메이션이 적용 된 후 속성 값을 설정 하는 방법을 보여 주는 예제를 참조 하세요. [방법: 스토리 보드를 사용 하 여 애니메이션 효과 적용 한 후 속성 설정](~/docs/framework/wpf/graphics-multimedia/how-to-set-a-property-after-animating-it-with-a-storyboard.md)합니다.  
  
 자식 타임 라인이 재생 하 고 해당 부모 타임 라인이 중지; 때 채우기 중지 채울 자식 타임 라인을 원한다 면 부모 타임 라인에 있는지 확인 한 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 의 <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>합니다.  
  
<a name="dependencyPropertyInfo_FillBehavior"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FillBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FillBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FillBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FillBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FillBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="timeline.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">이 인스턴스를 고정할 수 있는지를 확인하려면 <see langword="true" />로 설정하고 현재 인스턴스를 고정하려면 <see langword="false" />로 설정합니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Timeline" />을 수정할 수 없게 만들거나, 수정할 수 없게 만들 수 있는지 여부를 결정합니다.</summary>
        <returns><paramref name="isChecking" />이 true인 경우 이 메서드는 이 인스턴스를 읽기 전용으로 설정할 수 있으면 <see langword="true" />를 반환하고, 읽기 전용으로 설정할 수 없으면 <see langword="false" />를 반환합니다.  
  
<paramref name="isChecking" />이 false인 경우 이 메서드는 이 인스턴스가 읽기 전용으로 설정되었으면 <see langword="true" />를 반환하고, 이 개체의 고정 상태가 변경되므로 읽기 전용으로 설정할 수 없으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직접 (제외 하면 기본 구현에서 호출)이이 메서드를 호출 하지 마세요. 이 메서드는 내부적으로 <xref:System.Windows.Freezable.Freeze%2A>입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="T:System.Windows.Media.Animation.Timeline" /> 구현자는 클래스는 종속성 속성을 사용 하 여 저장 되지 않은 데이터를 포함 하는 경우이 메서드를 재정의 해야 합니다.  
  
일반적인 구현은 기본를 호출한 다음 정적 호출 <see cref="M:System.Windows.Freezable.Freeze" /> 메서드를 모두 <see cref="T:System.Windows.Freezable" /> 형식의 반환을 클래스에 들어 있는 속성을 <see langword="true" /> 모든 속성이 고정 된 (또는 수 있는 고정 되었거나 전달 하는 경우에 통해는 <see langword="false" /> 에 대 한 값 <paramref name="isChecking" />).</para></block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">복제할 <see cref="T:System.Windows.Media.Animation.Timeline" /> 인스턴스입니다.</param>
        <summary>이 인스턴스는 지정된 <see cref="T:System.Windows.Media.Animation.Timeline" /> 개체의 복제본으로 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 종속성 속성을 복사하는 경우 이 메서드는 더 이상 확인되지 않을 수도 있는 리소스 참조와 데이터 바인딩을 복사하지만 애니메이션이나 애니메이션의 현재 값은 복사하지 않습니다. 이러한 속성에 리소스 참조 또는 데이터 바인딩을 포함 하는 경우 <xref:System.Windows.Freezable.GetAsFrozen%2A> 는 개체를 고정 하 고 시킵니다는 <xref:System.InvalidOperationException>합니다.  
  
 이 메서드는 <xref:System.Windows.Freezable.GetAsFrozen%2A> 메서드는 호출 하지 않은 수 사용자 코드에서 직접 제외 하 고이 메서드를 재정의 하는 동안 기본 구현을 호출 하는 경우. 현재 개체의 고정 된 복사본을 만들려면 호출 <xref:System.Windows.Freezable.GetAsFrozen%2A> 이 메서드를 직접 호출 하는 대신 합니다.  
  
 자세한 내용은 <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">복사 및 고정할 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</param>
        <summary>이 인스턴스를 지정된 <see cref="T:System.Windows.Media.Animation.Timeline" />의 고정 복제본으로 만듭니다. 리소스 참조, 데이터 바인딩 및 애니메이션은 복사되지 않지만 이러한 요소의 현재 값은 복사됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> 메서드는 호출 하지 않은 수 사용자 코드에서 직접 제외 하 고이 메서드를 재정의 하는 동안 기본 구현을 호출 하는 경우. 현재 개체의 고정 된 복사본을 만들려면 호출 <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> 이 메서드를 직접 호출 하는 대신 합니다.  
  
 자세한 내용은 <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=nameWithType>를 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; GetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; GetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline);" />
      <MemberSignature Language="F#" Value="static member GetDesiredFrameRate : System.Windows.Media.Animation.Timeline -&gt; Nullable&lt;int&gt;" Usage="System.Windows.Media.Animation.Timeline.GetDesiredFrameRate timeline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="timeline">원하는 프레임 속도를 검색할 Timeline입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.Animation.Timeline" />의 원하는 프레임 속도를 가져옵니다.</summary>
        <returns>이 Timeline의 원하는 프레임 속도입니다. 기본값은 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는에 대 한 읽기 액세스를 제공 합니다 <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 연결 된 속성입니다. 자세한 내용은 참조는 <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 페이지입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDuration">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Duration GetNaturalDuration (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype System.Windows.Duration GetNaturalDuration(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::Duration GetNaturalDuration(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="member this.GetNaturalDuration : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDuration clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Timeline" />의 단일 반복 길이를 반환합니다.</summary>
        <returns>이 <see cref="T:System.Windows.Media.Animation.Timeline" />의 단일 반복 길이이며, 기본 지속 시간을 알 수 없는 경우에는 <see cref="P:System.Windows.Duration.Automatic" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는만 호출할 경우 합니다 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 속성이 <xref:System.Windows.Duration.Automatic%2A>합니다. 하는 경우 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 됩니다 <xref:System.Windows.Duration.Automatic%2A>, 기본 재생 시간 특정 클래스의 구현에 의해 결정 됩니다 <xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>합니다.  
  
 하는 경우 <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> 반환 <xref:System.Windows.Duration.Automatic%2A>, 기본 재생 시간을 알 수의 기본 재생 시간 임을 의미 <xref:System.Windows.Duration.Forever%2A>합니다. 이러한 경우 스트리밍 미디어에 대 한 합니다.  
  
 이때가이 timeline에 대 한 생성 된 것 이외의 클록이이 메서드를 전달 가능 하지만 신뢰할 수 없는 결과 제공 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.Duration" />
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Duration GetNaturalDurationCore(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration&#xA;override this.GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDurationCore clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">이 <see cref="T:System.Windows.Media.Animation.Clock" />에 대해 만들어진 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</param>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Timeline" />의 단일 반복 길이를 반환합니다. 이 메서드는 <see cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />에 대한 구현을 제공합니다.</summary>
        <returns>이 <see cref="T:System.Windows.Media.Animation.Timeline" />의 단일 반복 길이이며, 기본 지속 시간을 알 수 없는 경우에는 <see cref="P:System.Windows.Duration.Automatic" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 구현을 제공 <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> 사용자 코드에서 직접 호출할 수 없습니다. 대신 <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>를 사용하세요.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>이 메서드는 사용자 지정 자연 제공 해야 하는 타임 라인 클래스에서 구현 해야 <see cref="T:System.Windows.Duration" /> 때 합니다 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 속성이 <see cref="P:System.Windows.Duration.Automatic" />합니다. 이 메서드를 반환 해야 하는 경우 만든 기본 재생 시간을 확인할 수 없습니다, <see cref="P:System.Windows.Duration.Automatic" />합니다.</para></block>
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Media.Animation.Timeline.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Timeline" />의 이름을 가져오거나 설정합니다.</summary>
        <value>이 Timeline의 이름입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Timeline.Name" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRequested">
      <MemberSignature Language="C#" Value="public event EventHandler RemoveRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RemoveRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.RemoveRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RemoveRequested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RemoveRequested;" />
      <MemberSignature Language="F#" Value="member this.RemoveRequested : EventHandler " Usage="member this.RemoveRequested : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 Timeline 또는 부모 Timeline 중 하나에서 작성된 Clock이 제거될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 적용 하 여이 이벤트는 <xref:System.Windows.Media.Animation.RemoveStoryboard> 스토리 보드의를 사용 하 여 스토리 보드를 작업 <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> 메서드를 (직접 작업할 때는 클록) 또는 호출을 <xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=nameWithType> 메서드.  
  
 이 이벤트 처리기는 타임 라인을 사용 하 여 연결할 보이지만 실제로 등록은 <xref:System.Windows.Media.Animation.Clock> 이 timeline에 대 한 생성 합니다.  자세한 내용은 참조는 [타이밍 이벤트 개요](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.RemoveStoryboard" />
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Remove" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.RepeatBehavior RepeatBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.RepeatBehavior RepeatBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property RepeatBehavior As RepeatBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::RepeatBehavior RepeatBehavior { System::Windows::Media::Animation::RepeatBehavior get(); void set(System::Windows::Media::Animation::RepeatBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatBehavior : System.Windows.Media.Animation.RepeatBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.RepeatBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 Timeline의 반복 동작을 가져오거나 설정합니다.</summary>
        <value>Timeline의 재생 횟수를 지정하는 반복 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" />, Timeline 활성 기간의 전체 길이를 지정하는 <see cref="T:System.TimeSpan" /> 값 또는 Timeline의 무한 반복을 지정하는 특수 값인 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />입니다. 기본값은는 <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> 사용 하 여를 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> 의 <c>1</c>, 타임 라인 라인이 한 번 재생 됨을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 반복 <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> 지정 및 타임 라인의 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 속성이 `true`, 정방향 반복 및 이전 버전과 반복 하나 단일 반복을 구성 합니다. 사용 하 여 타임 라인을 <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> 속성 반복을 true로 설정 <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> 2 재생 하는 것 앞, 그런 다음 이전 버전과 호환성 다시 차례로 뒤로 다시 합니다.  
  
 타임 라인이 재생 하는 횟수를 지정 하는 대신 타임 라인이 재생 하려면 시간의 총 길이 지정할 수도 있습니다. 이 반복에 대 한 <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> 값은 타임 라인의 보다 커야 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>합니다. 예를 들어 있는 타임 라인을 <xref:System.Windows.Media.Animation.Timeline.Duration%2A> 2 시간 (초) 및 <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> 4 시간 (초)을 두 번 재생 합니다. 경우는 <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> 타임 라인의 미만인 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>, 짧은 활성 기간 타임 라인의 모양은 잘려서 표시 됩니다.  
  
 타임 라인을 반복 하는 방법에 대 한 자세한 내용은 참조 하세요. [애니메이션 개요](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)합니다.  
  
<a name="dependencyPropertyInfo_RepeatBehavior"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RepeatBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RepeatBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RepeatBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RepeatBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RepeatBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static void SetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline, valuetype System.Nullable`1&lt;int32&gt; desiredFrameRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="F#" Value="static member SetDesiredFrameRate : System.Windows.Media.Animation.Timeline * Nullable&lt;int&gt; -&gt; unit" Usage="System.Windows.Media.Animation.Timeline.SetDesiredFrameRate (timeline, desiredFrameRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
        <Parameter Name="desiredFrameRate" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="timeline"><paramref name="desiredFrameRate" />를 할당할 <see cref="T:System.Windows.Media.Animation.Timeline" />입니다.</param>
        <param name="desiredFrameRate">이 Timeline에서 1초마다 생성해야 하는 최대 프레임 수이며, 시스템에서 프레임 수를 제어하는 경우 <see langword="null" />입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.Animation.Timeline" />의 원하는 프레임 속도를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 설정 된 <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 연결 된 속성입니다. 자세한 내용은 참조는 <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 페이지입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Media.Animation.Timeline" />에 대한 진행 속도로 부모에 상대적인 비율을 가져오거나 설정합니다.</summary>
        <value>이 Timeline에 대한 진행 속도로 부모 Timeline의 속도에 상대적인 비율을 설명하는 0보다 큰 유한 값이며, 이 Timeline이 루트 Timeline이면 기본 Timeline 속도입니다. 기본값은 1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 타임 라인의 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 설정 영향을 준 것 해당 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>; 해당 타임 라인의 부모에 상대적인 시간은 또는 timeline이 루트 timeline 이면 타임 라인의 클록 시작 된 시점의 현재 경우.  
  
 하는 경우 <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> 또는 <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> 지정 된이 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 타임 라인의 기본 길이 대 한 평균 비율 됩니다.  
  
<a name="dependencyPropertyInfo_SpeedRatio"></a>   
## <a name="dependency-property-information"></a>종속성 속성 정보  
  
|||  
|-|-|  
|식별자 필드|<xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>|  
|메타 데이터 속성 설정 `true`|없음|  
  
   
  
## Examples  
 타임 라인의 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 속성 부모를 기준으로 진행 속도를 제어 합니다. 타임 라인을 루트 이면 해당 <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> 기본 timeline 속도 상대적입니다. 다음 예제에서는 다른 여러 타임 라인 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 설정 합니다.  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_SpeedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/SpeedExample.xaml#_graphicsmm_speedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />가 0보다 작거나 유한 값이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpeedRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpeedRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpeedRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpeedRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpeedRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 종속성 속성을 식별합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>