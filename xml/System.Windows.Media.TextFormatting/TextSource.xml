<Type Name="TextSource" FullName="System.Windows.Media.TextFormatting.TextSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8ff35ec87dac1717d16d3fbd8c9ae46073f9630" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53749622" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSource abstract" />
  <TypeSignature Language="F#" Value="type TextSource = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 개체에 사용되는 문자 데이터 및 서식 속성을 지정하기 위한 추상 클래스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트에 대 한 모든 액세스는 <xref:System.Windows.Media.TextFormatting.TextSource> 를 통해 개체가 <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>, 텍스트 레이아웃 클라이언트를 선택 하는 방식으로 모든 텍스트를 가상화 할 수 있도록 디자인 된 합니다.  
  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> 가 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 텍스트 서식 지정 및 텍스트 줄 바꿈을 위한 서비스를 제공 하는 텍스트 엔진. <xref:System.Windows.Media.TextFormatting.TextFormatter> 다른 텍스트 문자 서식과 단락 스타일을 처리할 수 있으며 국제 텍스트 레이아웃에 대 한 지원이 포함 되어 있습니다. 기존의 텍스트와 달리 [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], <xref:System.Windows.Media.TextFormatting.TextFormatter> 콜백 메서드 집합을 통해 텍스트 레이아웃 클라이언트와 상호 작용 합니다. 구현에서 이러한 메서드를 제공 하기 위해 클라이언트 필요는 <xref:System.Windows.Media.TextFormatting.TextSource> 클래스입니다. 다음 목록은 세 멤버를 재정의 해야 합니다.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: 검색을 <xref:System.Windows.Media.TextFormatting.TextRun> 지정 된부터 <xref:System.Windows.Media.TextFormatting.TextSource> 위치 합니다.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: 지정 된 바로 앞에 있는 텍스트 범위를 검색 합니다. <xref:System.Windows.Media.TextFormatting.TextSource> 위치 합니다.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: 매핑되는 값을 검색 합니다.는 <xref:System.Windows.Media.TextFormatting.TextSource> 문자 인덱스를 <xref:System.Windows.Media.TextEffect> 문자 인덱스입니다.  
  
> [!NOTE]
>  파생 된 구현 하는 방법을 보여 주는 전체 코드 샘플 <xref:System.Windows.Media.TextFormatting.TextSource> 클래스를 참조 하십시오 [고급 텍스트 서식 지정 샘플](https://go.microsoft.com/fwlink/?LinkID=159965) 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.TextFormatting.TextFormatter" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">고급 텍스트 서식 지정 예제</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecedingText">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText (int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText(int32 textSourceCharacterIndexLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrecedingText (textSourceCharacterIndexLimit As Integer) As TextSpan(Of CultureSpecificCharacterBufferRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::CultureSpecificCharacterBufferRange ^&gt; ^ GetPrecedingText(int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="F#" Value="abstract member GetPrecedingText : int -&gt; System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;" Usage="textSource.GetPrecedingText textSourceCharacterIndexLimit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndexLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndexLimit">텍스트 검색을 중지하는 문자 인덱스 위치입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 위치 바로 앞에 있는 텍스트 범위를 검색합니다.</summary>
        <returns><paramref name="textSourceCharacterIndexLimit" /> 바로 앞에 있는 텍스트 범위를 나타내는 <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A> 메서드는 빈 반환 <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> 바로 앞에 있는 텍스트 범위 경우 `textSourceCharacterIndexLimit` 인라인 개체 또는 숨겨진된 실행 등의 모든 텍스트가 포함 되지 않은 합니다.  
  
 이전 값이 없는 경우에이 메서드는 길이가 0 인 텍스트 범위 `textSourceCharacterIndexLimit`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextEffectCharacterIndexFromTextSourceCharacterIndex">
      <MemberSignature Language="C#" Value="public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextEffectCharacterIndexFromTextSourceCharacterIndex (textSourceCharacterIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextEffectCharacterIndexFromTextSourceCharacterIndex : int -&gt; int" Usage="textSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">매핑할 <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 문자 인덱스입니다.</param>
        <summary><see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 문자 인덱스를 <see cref="T:System.Windows.Media.TextEffect" /> 문자 인덱스에 매핑하는 값을 검색합니다.</summary>
        <returns><see cref="T:System.Int32" /> 문자 인덱스를 나타내는 <see cref="T:System.Windows.Media.TextEffect" /> 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRun">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRun GetTextRun(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRun (textSourceCharacterIndex As Integer) As TextRun" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRun ^ GetTextRun(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextRun : int -&gt; System.Windows.Media.TextFormatting.TextRun" Usage="textSource.GetTextRun textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex"><see cref="T:System.Windows.Media.TextFormatting.TextSource" />이 검색되는 위치의 <see cref="T:System.Windows.Media.TextFormatting.TextRun" />에 문자 인덱스 위치를 지정합니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> 위치에서 시작하는 <see cref="T:System.Windows.Media.TextFormatting.TextSource" />을 검색합니다.</summary>
        <returns><see cref="T:System.Windows.Media.TextFormatting.TextRun" /> 또는 <see cref="T:System.Windows.Media.TextFormatting.TextRun" />에서 파생된 개체를 나타내는 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 실행을 단일 속성 집합을 공유 하는 문자 시퀀스입니다. 글꼴 패밀리, 글꼴 스타일, 전경색, 텍스트 장식 또는 기타 서식 지정 효과 텍스트 런 나누기와 같은 형식으로 변경 합니다. 합니다 <xref:System.Windows.Media.TextFormatting.TextRun> 클래스에서 처리 하는 텍스트 내용의 몇 가지 형식을 나타내는 형식 계층 구조의 루트인 <xref:System.Windows.Media.TextFormatting.TextFormatter>합니다. 각 클래스에서 파생 된 <xref:System.Windows.Media.TextFormatting.TextRun> 텍스트 콘텐츠 고유 형식을 나타냅니다.  
  
|클래스|설명|  
|-----------|-----------------|  
|<xref:System.Windows.Media.TextFormatting.TextRun>|계층의 루트입니다. 동일한 문자 속성 집합을 공유 하는 문자 그룹을 정의 합니다.|  
|<xref:System.Windows.Media.TextFormatting.TextCharacters>|고유 실제 서체의 문자 모양 컬렉션을 정의 합니다.|  
|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|텍스트에 고유 엔터티로 수행 되는 측정, 적중 테스트 및 전체가 그리기 콘텐츠 형식을 정의 합니다. 이 콘텐츠 형식의 예에는 텍스트 선 가운데 있는 단추입니다.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|줄 바꿈 문자 코드를 정의 합니다.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|단락 나누기 문자 코드를 정의 합니다. <xref:System.Windows.Media.TextFormatting.TextEndOfLine>에서 파생됩니다.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|세그먼트 나누기 마커를 정의합니다.|  
|<xref:System.Windows.Media.TextFormatting.TextHidden>|보이지 않는 문자 범위를 정의합니다.|  
|<xref:System.Windows.Media.TextFormatting.TextModifier>|수정 범위의 시작을 정의 합니다.|  
  
   
  
## Examples  
 다음 예제에서는 재정의 <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A> 메서드 구현 됩니다.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/CustomTextClasses.cs#textformattingsnippet4)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/customtextclasses.vb#textformattingsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>텍스트가 렌더링되어야 하는 PixelsPerDip를 가져오거나 설정합니다.</summary>
        <value>현재 <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 확장 하는 클래스일 <xref:System.Windows.Media.TextFormatting.TextSource> 업데이트 해야 <xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A> 당 모니터 DPI 인식 응용 프로그램에 대 한 DPI 변경 될 때마다 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>