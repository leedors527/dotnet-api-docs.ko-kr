<Type Name="DashStyles" FullName="System.Windows.Media.DashStyles">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84a96d0af0f87709c0a77ae719f6df43b05af145" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37553855" /></Metadata><TypeSignature Language="C#" Value="public static class DashStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DashStyles extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.DashStyles" />
  <TypeSignature Language="VB.NET" Value="Public Class DashStyles" />
  <TypeSignature Language="C++ CLI" Value="public ref class DashStyles abstract sealed" />
  <TypeSignature Language="F#" Value="type DashStyles = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>미리 정의된 <see cref="T:System.Windows.Media.DashStyle" /> 개체의 집합을 구현합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 그림에서는 밑줄에 적용 되는 여러 대시 스타일의 예를 보여 줍니다.  
  
 ![여러 가지 대시 스타일을 보여 줍니다. ] (~/add/media/graphicsdashstyles.gif "여러 가지 대시 스타일을 보여 줍니다.")  
  
<a name="xamlTextUsage_DashStyles"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 관리 되는이 클래스를 선언할 수 없습니다 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]의 값을 할당할 정적 속성을 사용할 수 있지만 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.DashStyle" />
  </Docs>
  <Members>
    <Member MemberName="Dash">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DashStyle Dash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.DashStyle Dash" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyles.Dash" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Dash As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::DashStyle ^ Dash { System::Windows::Media::DashStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dash : System.Windows.Media.DashStyle" Usage="System.Windows.Media.DashStyles.Dash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.DashStyle.Dashes" /> 속성이 <c>2</c>, <c>2</c>인 <see cref="T:System.Windows.Media.DashStyle" />을 가져옵니다.</summary>
        <value>2,2의 대시 시퀀스입니다. 2,2는 펜 <see cref="P:System.Windows.Media.Pen.Thickness" />보다 2배 긴 대시와 <see cref="P:System.Windows.Media.Pen.Thickness" />보다 2배 긴 공백으로 구성된 시퀀스를 설명합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 그림에서는 밑줄에 적용 되는 여러 대시 스타일의 예를 보여 줍니다.  
  
 ![여러 가지 대시 스타일을 보여 줍니다. ] (~/add/media/graphicsdashstyles.gif "여러 가지 대시 스타일을 보여 줍니다.")  
  
<a name="xamlAttributeUsage_Dash"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
 <*object* *property* ="{ `DashStyles.Dash`}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DashDot">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DashStyle DashDot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.DashStyle DashDot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyles.DashDot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DashDot As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::DashStyle ^ DashDot { System::Windows::Media::DashStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DashDot : System.Windows.Media.DashStyle" Usage="System.Windows.Media.DashStyles.DashDot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.DashStyle.Dashes" /> 속성이 <c>2</c>, <c>2</c>, <c>0</c>, <c>2</c>인 <see cref="T:System.Windows.Media.DashStyle" />을 가져옵니다.</summary>
        <value>대시 시퀀스 <c>2</c>, <c>2</c>, <c>0</c>하십시오 <c>2</c>합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 그림에서는 밑줄에 적용 되는 여러 대시 스타일의 예를 보여 줍니다.  
  
 ![여러 가지 대시 스타일을 보여 줍니다. ] (~/add/media/graphicsdashstyles.gif "여러 가지 대시 스타일을 보여 줍니다.")  
  
<a name="xamlAttributeUsage_DashDot"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
 <*object* *property* ="{ `DashStyles.DashDot`}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DashDotDot">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DashStyle DashDotDot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.DashStyle DashDotDot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyles.DashDotDot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DashDotDot As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::DashStyle ^ DashDotDot { System::Windows::Media::DashStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DashDotDot : System.Windows.Media.DashStyle" Usage="System.Windows.Media.DashStyles.DashDotDot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.DashStyle.Dashes" /> 속성이 <c>2</c>, <c>2</c>, <c>0</c>, <c>2</c>, <c>0</c>, <c>2</c>인 <see cref="T:System.Windows.Media.DashStyle" />을 가져옵니다.</summary>
        <value>대시 시퀀스 <c>2</c>, <c>2</c>를 <c>0</c>를 <c>2</c>를 <c>0</c>를 <c>2</c>합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 그림에서는 밑줄에 적용 되는 여러 대시 스타일의 예를 보여 줍니다.  
  
 ![여러 가지 대시 스타일을 보여 줍니다. ] (~/add/media/graphicsdashstyles.gif "여러 가지 대시 스타일을 보여 줍니다.")  
  
<a name="xamlAttributeUsage_DashDotDot"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
 <*object* *property* ="{ `DashStyles.DashDotDot`}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DashStyle Dot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.DashStyle Dot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyles.Dot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Dot As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::DashStyle ^ Dot { System::Windows::Media::DashStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dot : System.Windows.Media.DashStyle" Usage="System.Windows.Media.DashStyles.Dot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Media.DashStyle.Dashes" /> 속성이 <c>0</c>, <c>2</c>인 <see cref="T:System.Windows.Media.DashStyle" />을 가져옵니다.</summary>
        <value>대시 시퀀스 <c>0</c>하십시오 <c>2</c>합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 그림에서는 밑줄에 적용 되는 여러 대시 스타일의 예를 보여 줍니다.  
  
 ![여러 가지 대시 스타일을 보여 줍니다. ] (~/add/media/graphicsdashstyles.gif "여러 가지 대시 스타일을 보여 줍니다.")  
  
<a name="xamlAttributeUsage_Dot"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
 <*object* *property* ="{ `DashStyles.Dot`}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Solid">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DashStyle Solid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.DashStyle Solid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyles.Solid" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Solid As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::DashStyle ^ Solid { System::Windows::Media::DashStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Solid : System.Windows.Media.DashStyle" Usage="System.Windows.Media.DashStyles.Solid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.DashStyle" /> 속성이 비어 있는 <see cref="P:System.Windows.Media.DashStyle.Dashes" />을 가져옵니다.</summary>
        <value>대시가 없는 대시 시퀀스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 실선을 생성 하 고 대시 시퀀스를 정의 하지 않는 것과 같습니다.  
  
 다음 그림에서는 밑줄에 적용 되는 여러 대시 스타일의 예를 보여 줍니다.  
  
 ![여러 가지 대시 스타일을 보여 줍니다. ] (~/add/media/graphicsdashstyles.gif "여러 가지 대시 스타일을 보여 줍니다.")  
  
<a name="xamlAttributeUsage_Solid"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
 <*object* *property* ="{ `DashStyles.Solid`}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>