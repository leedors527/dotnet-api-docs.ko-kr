<Type Name="FillRule" FullName="System.Windows.Media.FillRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7a235b418e5bc0ae29353691670ed4a9fe1ca69" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37553768" /></Metadata><TypeSignature Language="C#" Value="public enum FillRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FillRule extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FillRule" />
  <TypeSignature Language="VB.NET" Value="Public Enum FillRule" />
  <TypeSignature Language="C++ CLI" Value="public enum class FillRule" />
  <TypeSignature Language="F#" Value="type FillRule = " />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><see cref="T:System.Windows.Media.Geometry" />에 포함된 <see cref="T:System.Windows.Media.PathFigure" /> 개체의 교차 영역이 결합되어 <see cref="T:System.Windows.Media.Geometry" />의 영역을 구성하는 방식을 지정합니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EvenOdd">
      <MemberSignature Language="C#" Value="EvenOdd" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Media.FillRule EvenOdd = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.FillRule.EvenOdd" />
      <MemberSignature Language="VB.NET" Value="EvenOdd" />
      <MemberSignature Language="C++ CLI" Value="EvenOdd" />
      <MemberSignature Language="F#" Value="EvenOdd = 0" Usage="System.Windows.Media.FillRule.EvenOdd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FillRule</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>해당 점에서 모든 방향으로 무한대로 광선을 그리고 광선이 교차하는 지정된 도형 내에서 경로 세그먼트 수를 계산하여 채우기 영역에 점이 있는지 여부를 결정하는 규칙입니다. 이 숫자가 홀수이면 점이 안에 있고, 짝수이면 밖에 있습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Nonzero">
      <MemberSignature Language="C#" Value="Nonzero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Media.FillRule Nonzero = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.FillRule.Nonzero" />
      <MemberSignature Language="VB.NET" Value="Nonzero" />
      <MemberSignature Language="C++ CLI" Value="Nonzero" />
      <MemberSignature Language="F#" Value="Nonzero = 1" Usage="System.Windows.Media.FillRule.Nonzero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FillRule</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>해당 점에서 모든 방향으로 무한대로 광선을 그린 후 도형의 세그먼트가 광선과 교차하는 위치를 검사하여 경로의 채우기 영역에 점이 있는지 여부를 결정하는 규칙입니다. 0부터 시작하여 세그먼트가 왼쪽에서 오른쪽으로 광선과 교차할 때마다 1을 추가하고 경로 세그먼트가 오른쪽에서 왼쪽으로 광선과 교차할 때마다 1을 뺍니다. 교차 수를 계산한 후 결과가 0이면 점이 경로의 밖에 있습니다. 그렇지 않으면 점이 내부에 있습니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>