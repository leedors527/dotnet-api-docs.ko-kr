<Type Name="JumpList" FullName="System.Windows.Shell.JumpList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8f5f53b1cb8404a4c66b015c4865e37547cd9142" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004088" /></Metadata><TypeSignature Language="C#" Value="public sealed class JumpList : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JumpList extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JumpList&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpList sealed : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type JumpList = class&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("JumpItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows 7 작업 표시줄 단추에 메뉴로 표시되는 항목 및 작업의 목록을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[win7](~/includes/win7-md.md)] 작업 표시줄 점프 목록을 사용 하 여 작업 표시줄 단추에서 직접 프로그램을 시작 하는 것에 대 한 향상 된 기능을 제공 합니다. 점프 목록에도 사용 되는 [!INCLUDE[win7](~/includes/win7-md.md)] 시작 메뉴. 점프 목록을 작업 표시줄 단추를 마우스 오른쪽 단추로 클릭 하거나 시작 메뉴 프로그램 옆의 화살표를 클릭 하 여 액세스 합니다. 점프 목록에 대 한 자세한 내용은 참조는 [작업 표시줄](https://go.microsoft.com/fwlink/?LinkId=178478) Windows 사용자 환경 상호 작용 지침의 섹션입니다.  
  
 <xref:System.Windows.Shell.JumpList> 점프 목록 기능에 대 한 관리 되는 래퍼를 제공 하는 클래스를 [!INCLUDE[win7](~/includes/win7-md.md)] 작업 표시줄에 전달 된 데이터를 관리 합니다 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 셸 합니다. 노출 하는 기능을 <xref:System.Windows.Shell.JumpList> 클래스의 버전에서 사용할 수 없는 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 이전의 [!INCLUDE[win7](~/includes/win7-md.md)]합니다. 사용 하는 애플리케이션을 <xref:System.Windows.Shell.JumpList> 클래스의 다른 버전에서 실행 됩니다 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)], 있지만 점프 목록을 사용할 수 없습니다. Windows 셸 및 네이티브 점프 목록 Api에 대 한 자세한 내용은 참조 하세요. [작업 표시줄 확장](https://go.microsoft.com/fwlink/?LinkId=178479)합니다.  
  
 다음 그림과 점프 목록에 대 한 Windows Media Player에서 항목을 사용 합니다 **작업** 하 고 **자주** 범주.  
  
 ![Windows Media Player 점프 목록](~/add/media/wpfshell-jumplist.png "Windows Media Player 점프 목록")  
Windows Media Player 점프 목록  
  
## <a name="configuring-a-jump-list"></a>점프 목록 구성  
 점프 목록에는 두 가지 유형의 항목을 포함할 수 있습니다는 <xref:System.Windows.Shell.JumpTask> 및 <xref:System.Windows.Shell.JumpPath>합니다. A <xref:System.Windows.Shell.JumpTask> 프로그램에 대 한 링크 및 <xref:System.Windows.Shell.JumpPath> 파일에 대 한 링크가 있습니다. 만들어 점프 목록에서 항목을 시각적으로 구분할 수 있습니다는 <xref:System.Windows.Shell.JumpTask> 없는 <xref:System.Windows.Shell.JumpTask.Title%2A> 및 <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> 지정 합니다. 이 빈 <xref:System.Windows.Shell.JumpTask> 점프 목록에 가로 선으로 표시 됩니다.  
  
> [!NOTE]
>  파일의 형식을 지정 하는 경우는 <xref:System.Windows.Shell.JumpPath> 파일 점프 목록에 나타나지 것입니다 애플리케이션에 등록 되지 않았습니다. 예를 들어, 추가 하는 경우는 <xref:System.Windows.Shell.JumpPath> .txt 파일을 가리키는,.txt 파일을 처리 하려면 애플리케이션을 등록 해야 합니다. 자세한 내용은 [파일 연결 소개](https://go.microsoft.com/fwlink/?LinkId=178480)합니다.  
  
 점프 항목의 범주에 배치 되는 <xref:System.Windows.Shell.JumpList>합니다. 기본적으로 <xref:System.Windows.Shell.JumpItem> 에 표시 되는 **작업** 범주입니다. 지정할 수 있습니다는 <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> 에 대 한는 <xref:System.Windows.Shell.JumpItem>합니다.  
  
 지정할 수 있습니다 있는지 여부를 표준 **최근** 하 고 **자주** 범주에 표시 됩니다는 <xref:System.Windows.Shell.JumpList> 설정 하 여를 <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> 및 <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> 속성. 이러한 범주의 내용을 관리 하는 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 셸 합니다. 이러한 범주는 동일한 데이터를 많이 포함 될 수 있습니다, 일반적으로 표시할 있습니다 하나 또는 다른 프로그램 <xref:System.Windows.Shell.JumpList>, 하지만 둘 다. [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 공용 파일 대화 상자를 통해 열리거나 파일 유형 연결을 통해 애플리케이션을 여는 데 사용 하는 경우 최근 항목을 자동으로 관리 합니다. 항목에 점프 목록을 통해 액세스 될 때에 알릴 수 있습니다는 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 셸에서 항목을 추가 하는 **최근** 호출 하 여 범주를 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> 메서드.  
  
## <a name="applying-a-jump-list-to-the-windows-shell"></a>Windows 셸에서 점프 목록 적용  
 셸의 점프 목록에 직접 액세스 하거나 콘텐츠를 읽을 수 없습니다는 <xref:System.Windows.Shell.JumpList> 클래스입니다. 대신 합니다 <xref:System.Windows.Shell.JumpList> 클래스를 사용 하 고 다음에 적용 하는 점프 목록의 표현을 제공 합니다 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 셸 합니다. 일반적으로 만든를 <xref:System.Windows.Shell.JumpList> 애플리케이션을 처음 실행할 때 한 번 설정 합니다. 그러나 수정 하거나 바꿀 수 있습니다는 <xref:System.Windows.Shell.JumpList> 런타임 시.  
  
 설정한 경우는 <xref:System.Windows.Shell.JumpList> 적용 해야 속성을 <xref:System.Windows.Shell.JumpList> 작업 표시줄 점프 목록에에서 해당 내용을 표시 하기 전에 Windows 셸에 합니다. 이 되 면 자동으로 수행 합니다 <xref:System.Windows.Shell.JumpList> XAML 또는 호출에서 애플리케이션에 처음 연결을 <xref:System.Windows.Shell.JumpList.SetJumpList%2A> 메서드. 내용을 수정 하는 경우는 <xref:System.Windows.Shell.JumpList> 런타임에 호출 해야 합니다는 <xref:System.Windows.Shell.JumpList.Apply%2A> Windows 셸에 현재 내용을 적용 하는 방법입니다.  
  
## <a name="setting-a-jump-list-in-xaml"></a>XAML에서 점프 목록 설정  
 A <xref:System.Windows.Shell.JumpList> 에 자동으로 연결 되어 있지는 <xref:System.Windows.Application> 개체입니다. 연결 하는 <xref:System.Windows.Shell.JumpList> 에 <xref:System.Windows.Application> 연결된 된 속성 구문을 사용 하 여 XAML에서 개체입니다. <xref:System.Windows.Shell.JumpList> 클래스가 구현 하는 <xref:System.ComponentModel.ISupportInitialize> XAML 선언을 지원 하도록 인터페이스는 <xref:System.Windows.Shell.JumpList>합니다. 경우는 <xref:System.Windows.Shell.JumpList> XAML에 선언 되 고 현재 연결 된 <xref:System.Windows.Application>를 자동으로 적용 됩니다는 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 경우 셸는 <xref:System.Windows.Shell.JumpList> 초기화 됩니다.  
  
## <a name="setting-and-modifying-a-jump-list-in-code"></a>설정 하 고 코드에서 점프 목록 수정  
 연결 하는 <xref:System.Windows.Shell.JumpList> 에 <xref:System.Windows.Application> 정적 호출 하 여 코드에서 개체 <xref:System.Windows.Shell.JumpList.SetJumpList%2A> 메서드. 이 적용 됩니다는 <xref:System.Windows.Shell.JumpList> 에 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 셸 합니다.  
  
 수정 하는 <xref:System.Windows.Shell.JumpList> 호출 하면 런타임에 <xref:System.Windows.Shell.JumpList.GetJumpList%2A> 메서드를를 <xref:System.Windows.Shell.JumpList> 에 현재 연결 된는 <xref:System.Windows.Application>합니다. 속성을 수정한 후 합니다 <xref:System.Windows.Shell.JumpList>를 호출 해야 합니다는 <xref:System.Windows.Shell.JumpList.Apply%2A> Windows 셸에 변경 내용을 적용 하는 방법입니다.  
  
> [!NOTE]
>  일반적으로 만듭니다 <xref:System.Windows.Shell.JumpList> 에 연결 된 합니다 <xref:System.Windows.Application> 에 적용 합니다 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 셸 합니다. 그러나 만들면 여러 <xref:System.Windows.Shell.JumpList> 개체입니다. 하나만 <xref:System.Windows.Shell.JumpList> 동시에 적용할 수 있습니다 합니다 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 셸과 하나만 <xref:System.Windows.Shell.JumpList> 동시에 연결할 수 있는 <xref:System.Windows.Application>합니다. .NET Framework 하지 않아도 이러한 동일 하 게 <xref:System.Windows.Shell.JumpList>합니다.  
  
> [!NOTE]
>  이 클래스는 모든 멤버에 적용 되는 클래스 수준에서 링크 요청을 포함 합니다. <xref:System.Security.SecurityException> 직접 실행 호출자에 full trust 권한이 없는 경우 throw 됩니다. 보안 요청에 대 한 자세한 내용은 참조 하세요. [링크 요구가](~/docs/framework/misc/link-demands.md) 하 고 [상속 요청](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))합니다.  
  
   
  
## Examples  
 다음 예제에서는 점프 목록을 사용 하 여 애플리케이션을 보여 줍니다. 애플리케이션에 현재 점프 목록에 작업을 추가, 점프 목록에서의 내용을 지울 및 새 점프 목록 애플리케이션에 적용할 수 있도록 하는 세 가지 단추가 있습니다.  
  
 다음 예제에서는 선언 하는 방법을 보여 줍니다는 <xref:System.Windows.Shell.JumpList> 태그에서입니다. 합니다 <xref:System.Windows.Shell.JumpList> 에 두 개의 <xref:System.Windows.Shell.JumpTask> 링크와 하나의 <xref:System.Windows.Shell.JumpPath>합니다. 적용 된 <xref:System.Windows.Shell.JumpPath> 셸에.txt 파일 이름 확장명을 처리 하는 애플리케이션을 등록 하지 않은 경우 실패 합니다.  
  
 [!code-xaml[Shell_JumpListSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#000)]  
  
 다음 예제에 대 한 코드 숨김 페이지에서는 `App.xaml`합니다. 이 코드를 처리 합니다 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 고 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 이벤트입니다.  
  
 [!code-csharp[Shell_JumpListSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#100)]  
  
 다음 예제에서는 애플리케이션 사용자 인터페이스를 만드는 데 태그를 보여 줍니다.  
  
 [!code-xaml[Shell_JumpListSample#300](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml#300)]  
  
 다음 예제에 대 한 코드 숨김 페이지에서는 `MainWindow.xaml`합니다. 이 코드 수정 및 만드는 방법을 보여 줍니다는 <xref:System.Windows.Shell.JumpList> 프로시저 코드에서. 새 점프 목록, 정적 <xref:System.Windows.Shell.JumpList.SetJumpList%2A> 메서드는 연결할를 <xref:System.Windows.Shell.JumpList> 현재 애플리케이션을 사용 하 여 적용 하 고는 <xref:System.Windows.Shell.JumpList> Windows 셸에.  
  
 [!code-csharp[Shell_JumpListSample#200](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#200)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">Windows shell 수정에 대 한 전체 액세스 합니다. 보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Shell.JumpList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Shell.JumpList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList (System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of JumpItem), showFrequent As Boolean, showRecent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList(System::Collections::Generic::IEnumerable&lt;System::Windows::Shell::JumpItem ^&gt; ^ items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Shell.JumpList : seq&lt;System.Windows.Shell.JumpItem&gt; * bool * bool -&gt; System.Windows.Shell.JumpList" Usage="new System.Windows.Shell.JumpList (items, showFrequent, showRecent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt;" />
        <Parameter Name="showFrequent" Type="System.Boolean" />
        <Parameter Name="showRecent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="items">컬렉션 <see cref="T:System.Windows.Shell.JumpItem" /> 점프 목록에 표시 되는 개체입니다.</param>
        <param name="showFrequent">자주 사용 되는 항목이 점프 목록에 표시 되는지 여부를 나타내는 값입니다.</param>
        <param name="showRecent">점프 목록에 최근에 사용한 항목이 표시 되는지 여부를 나타내는 값입니다.</param>
        <summary>지정된 매개 변수를 사용하여 <see cref="T:System.Windows.Shell.JumpList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **최근** 하 고 **자주** 범주는 종종 같은 점프 항목이 여러 개 포함 합니다. 결과적으로, 애플리케이션 일반적으로 표시 하거나 합니다 **최근** 또는 **자주** 점프 목록, 하지만 둘 다의 범주입니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.JumpItems" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddToRecentCategory">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>점프 목록의 **최근에 사용한 항목** 범주에 지정된 항목을 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (string itemPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(string itemPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddToRecentCategory (itemPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::String ^ itemPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : string -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory itemPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemPath">점프 목록에 추가할 경로입니다.</param>
        <summary>점프 목록의 **최근에 사용한 항목** 범주에 지정된 항목 경로를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 내용을 합니다 **최근** Windows shell에서 관리 되는 범주입니다. 최근에 사용한 항목을 점프 목록에 표시 하려면 설정 합니다 <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> 속성을 `true`입니다.  
  
 호출할 수 있습니다는 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> 하 여 Windows 셸에 추가 항목 경로 요청 하는 방법의 **최근** 항목 목록입니다. 항목의 파일 형식을 처리 하도록 애플리케이션 등록 되지 않은, 경우에 나타나지 것입니다 합니다 **최근** 목록과 호출 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> 자동으로 실패 합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpPath jumpPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpPath ^ jumpPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpPath -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpPath" Type="System.Windows.Shell.JumpPath" />
      </Parameters>
      <Docs>
        <param name="jumpPath"><see cref="T:System.Windows.Shell.JumpPath" /> 점프 목록에 추가 합니다.</param>
        <summary>점프 목록의 **최근에 사용한 항목** 범주에 지정된 점프 경로를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 내용을 합니다 **최근** Windows shell에서 관리 되는 범주입니다. 최근에 사용한 항목을 점프 목록에 표시 하려면 설정 합니다 <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> 속성을 `true`입니다.  
  
 호출할 수 있습니다는 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> 하 여 Windows 셸에 지정 된 점프 경로 추가 하는 요청 하는 방법 합니다 **최근** 항목 목록입니다. 항목의 파일 형식을 처리 하도록 애플리케이션 등록 되지 않은, 경우에 나타나지 것입니다 합니다 **최근** 목록과 호출 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> 자동으로 실패 합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpTask jumpTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpTask ^ jumpTask);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpTask -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpTask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpTask" Type="System.Windows.Shell.JumpTask" />
      </Parameters>
      <Docs>
        <param name="jumpTask"><see cref="T:System.Windows.Shell.JumpTask" /> 점프 목록에 추가 합니다.</param>
        <summary>점프 목록의 **최근에 사용한 항목** 범주에 지정된 점프 작업을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 내용을 합니다 **최근** Windows shell에서 관리 되는 범주입니다. 최근에 사용한 항목을 점프 목록에 표시 하려면 설정 합니다 <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> 속성을 `true`입니다.  
  
 호출할 수 있습니다는 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpTask%29> 하 여 Windows 셸에 추가 지정 된 점프 작업을 요청 하는 방법의 **최근** 항목 목록입니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberSignature Language="F#" Value="member this.Apply : unit -&gt; unit" Usage="jumpList.Apply " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>전송 된 <see cref="T:System.Windows.Shell.JumpList" /> 현재 상태의 Windows 셸에 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.Shell.JumpList.Apply%2A> 메서드 내용을 보냅니다는 <xref:System.Windows.Shell.JumpList> 현재 상태의 Windows 셸에 합니다. 이 호출이 완료 된 후의 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 속성 Windows shell의 작업 표시줄 점프 목록에 성공적으로 추가 된 항목만 포함 하도록 수정 됩니다. 제거 된 항목 목록에 대 한 이벤트 처리기를 통해 액세스할 수 있습니다 합니다 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 고 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에는 현재를 가져오는 방법을 보여 줍니다 <xref:System.Windows.Shell.JumpList> 의 내용을 지울 및는 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 컬렉션입니다. <xref:System.Windows.Shell.JumpList.Apply%2A> 메서드를 호출 적용 하는 <xref:System.Windows.Shell.JumpList> Windows 셸에 변경 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Shell.JumpList> 클래스 개요입니다.  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Shell.JumpList" /> 완전히 초기화 되지 않았습니다.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="jumpList.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>시작을 신호 합니다 <see cref="T:System.Windows.Shell.JumpList" /> 초기화 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList> 클래스가 구현 하는 <xref:System.ComponentModel.ISupportInitialize> XAML 선언을 지원 하도록 인터페이스는 <xref:System.Windows.Shell.JumpList>합니다. <xref:System.Windows.Shell.JumpList.BeginInit%2A> 만 때 메서드가 호출 된 합니다 <xref:System.Windows.Shell.JumpList> XAML에 선언 되 고 연결할는 <xref:System.Windows.Application> 연결된 된 속성 구문을 사용 하 여 합니다. 코드에서이 메서드를 호출 하지 마십시오.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 호출은 <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> 에 대 한 이전 호출에 중첩 되어 <see cref="M:System.Windows.Shell.JumpList.BeginInit" />입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="jumpList.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>끝을 알리기는 <see cref="T:System.Windows.Shell.JumpList" /> 초기화 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList> 클래스가 구현 하는 <xref:System.ComponentModel.ISupportInitialize> XAML 선언을 지원 하도록 인터페이스는 <xref:System.Windows.Shell.JumpList>합니다. <xref:System.Windows.Shell.JumpList.EndInit%2A> 만 때 메서드가 호출 된 합니다 <xref:System.Windows.Shell.JumpList> XAML에 선언 되 고 연결할는 <xref:System.Windows.Application> 연결된 된 속성 구문을 사용 하 여 합니다. 코드에서이 메서드를 호출 하지 마십시오.  
  
 합니다 <xref:System.Windows.Shell.JumpList.EndInit%2A> 것과 동일한 효과가 메서드는 <xref:System.Windows.Shell.JumpList.Apply%2A> 메서드. <xref:System.Windows.Shell.JumpList.EndInit%2A> 콘텐츠를 보냅니다는 <xref:System.Windows.Shell.JumpList> 현재 상태의 Windows 셸에 합니다. 이 호출이 완료 된 후의 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 속성 Windows 셸에서 점프 목록에 성공적으로 추가 된 항목만 포함 하도록 수정 됩니다. 제거 된 항목 목록에 대 한 이벤트 처리기를 통해 액세스할 수 있습니다 합니다 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 고 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">이 호출은 <see cref="M:System.Windows.Shell.JumpList.EndInit" /> 호출을 이룹니다 <see cref="M:System.Windows.Shell.JumpList.BeginInit" />합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJumpList">
      <MemberSignature Language="C#" Value="public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Shell.JumpList GetJumpList(class System.Windows.Application application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Shell::JumpList ^ GetJumpList(System::Windows::Application ^ application);" />
      <MemberSignature Language="F#" Value="static member GetJumpList : System.Windows.Application -&gt; System.Windows.Shell.JumpList" Usage="System.Windows.Shell.JumpList.GetJumpList application" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.JumpList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
      </Parameters>
      <Docs>
        <param name="application"><see cref="T:System.Windows.Shell.JumpList" />와 연결된 애플리케이션입니다.</param>
        <summary>애플리케이션과 연결된 <see cref="T:System.Windows.Shell.JumpList" /> 개체를 반환합니다.</summary>
        <returns>지정된 애플리케이션과 연결된 <see cref="T:System.Windows.Shell.JumpList" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출할 수 있습니다는 <xref:System.Windows.Shell.JumpList.GetJumpList%2A> 메서드를 합니다 <xref:System.Windows.Shell.JumpList> 현재 연결 된는 <xref:System.Windows.Application>합니다. .NET Framework 하지 않아도 되도록이 <xref:System.Windows.Shell.JumpList> 현재 Windows 셸에 적용 되는 합니다.  
  
   
  
## Examples  
 다음 예제에서는 가져오는 방법을 보여 줍니다는 <xref:System.Windows.Shell.JumpList> 현재 애플리케이션을 사용 하 여 연결 합니다. <xref:System.Windows.Shell.JumpTask> 에 추가 됩니다는 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 컬렉션에 추가 합니다 **최근** 범주입니다. 합니다 <xref:System.Windows.Shell.JumpList.Apply%2A> 메서드를 호출 하는 업데이트 적용 <xref:System.Windows.Shell.JumpList> Windows 셸에 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Shell.JumpList> 클래스 개요입니다.  
  
 [!code-csharp[Shell_JumpListSample#240](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#240)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt; JumpItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Windows.Shell.JumpItem&gt; JumpItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.JumpItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JumpItems As List(Of JumpItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ JumpItems { System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JumpItems : System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;" Usage="System.Windows.Shell.JumpList.JumpItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션을 가져옵니다 <see cref="T:System.Windows.Shell.JumpItem" /> 점프 목록에 표시 되는 개체입니다.</summary>
        <value>컬렉션 <see cref="T:System.Windows.Shell.JumpItem" /> 점프 목록에 표시 되는 개체입니다. 기본값은 빈 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 점프 목록에는 두 가지 유형의 항목을 포함할 수 있습니다는 <xref:System.Windows.Shell.JumpTask> 및 <xref:System.Windows.Shell.JumpPath>합니다. A <xref:System.Windows.Shell.JumpTask> 프로그램에 대 한 링크 및 <xref:System.Windows.Shell.JumpPath> 파일에 대 한 링크가 있습니다.  
  
 때를 <xref:System.Windows.Shell.JumpList> 만들어지면는 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 컬렉션이 비어 있습니다. 추가할 수 있습니다 <xref:System.Windows.Shell.JumpTask> 또는 <xref:System.Windows.Shell.JumpPath> 컬렉션 개체입니다. 컬렉션에는 프로그램에서 추가 된 항목이 포함 됩니다. 후는 <xref:System.Windows.Shell.JumpList> 를 성공적으로 호출 하 여 Windows shell에 전달 된 합니다 <xref:System.Windows.Shell.JumpList.EndInit%2A> 또는 <xref:System.Windows.Shell.JumpList.Apply%2A> 메서드를 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 컬렉션에 작업 표시줄 점프 목록에 추가 된 항목만 포함 됩니다. 성공적으로 추가 되지 않은 항목이 제거 되는 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 컬렉션입니다. 제거 된 항목 목록에 대 한 이벤트 처리기를 통해 액세스할 수 있습니다 합니다 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 고 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에는 현재를 가져오는 방법을 보여 줍니다 <xref:System.Windows.Shell.JumpList> 의 내용을 지울 및는 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 컬렉션입니다. <xref:System.Windows.Shell.JumpList.Apply%2A> 메서드를 호출 적용 하는 <xref:System.Windows.Shell.JumpList> Windows 셸에 변경 합니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Shell.JumpList> 클래스 개요입니다.  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRejected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRejected As EventHandler(Of JumpItemsRejectedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRejectedEventArgs ^&gt; ^ JumpItemsRejected;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRejected : EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " Usage="member this.JumpItemsRejected : System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>점프 항목은 성공적으로 추가 되지 점프 목록에 Windows 셸에 때 발생 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 내용 뒤의 <xref:System.Windows.Shell.JumpList> Windows 셸에 적용 되는 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 속성 Windows 셸에서 점프 목록에 성공적으로 추가 된 항목만 포함 하도록 수정 됩니다. 제거 된 항목 목록에 대 한 이벤트 처리기를 통해 액세스할 수 있습니다 합니다 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 고 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 처리 하는 방법을 보여 줍니다는 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 메시지 상자에 거부 된 항목을 표시 하는 이벤트입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Shell.JumpList> 클래스 개요입니다.  
  
 [!code-csharp[Shell_JumpListSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRemovedByUser">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRemovedByUser As EventHandler(Of JumpItemsRemovedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRemovedEventArgs ^&gt; ^ JumpItemsRemovedByUser;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRemovedByUser : EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " Usage="member this.JumpItemsRemovedByUser : System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>점프 목록의 기존 점프 항목은 사용자가 목록에서 제거 되 면 발생 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 내용 뒤의 <xref:System.Windows.Shell.JumpList> Windows 셸에 적용 되는 <xref:System.Windows.Shell.JumpList.JumpItems%2A> 속성 Windows 셸에서 점프 목록에 성공적으로 추가 된 항목만 포함 하도록 수정 됩니다. 제거 된 항목 목록에 대 한 이벤트 처리기를 통해 액세스할 수 있습니다 합니다 <xref:System.Windows.Shell.JumpList.JumpItemsRejected> 고 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 처리 하는 방법을 보여 줍니다는 <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> 메시지 상자에 거부 된 항목을 표시 하는 이벤트입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Shell.JumpList> 클래스 개요입니다.  
  
 [!code-csharp[Shell_JumpListSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJumpList">
      <MemberSignature Language="C#" Value="public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetJumpList(class System.Windows.Application application, class System.Windows.Shell.JumpList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetJumpList(System::Windows::Application ^ application, System::Windows::Shell::JumpList ^ value);" />
      <MemberSignature Language="F#" Value="static member SetJumpList : System.Windows.Application * System.Windows.Shell.JumpList -&gt; unit" Usage="System.Windows.Shell.JumpList.SetJumpList (application, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
        <Parameter Name="value" Type="System.Windows.Shell.JumpList" />
      </Parameters>
      <Docs>
        <param name="application"><see cref="T:System.Windows.Shell.JumpList" />와 연결된 애플리케이션입니다.</param>
        <param name="value">애플리케이션과 연결할 <see cref="T:System.Windows.Shell.JumpList" />입니다.</param>
        <summary>애플리케이션과 연결된 <see cref="T:System.Windows.Shell.JumpList" /> 개체를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여러 개 만들 수 있습니다 <xref:System.Windows.Shell.JumpList> 개체입니다. 그러나 하나만 <xref:System.Windows.Shell.JumpList> 한 번에 연결할 수 있는 <xref:System.Windows.Application>합니다. 호출을 <xref:System.Windows.Shell.JumpList.SetJumpList%2A> 설정 하는 방법 합니다 <xref:System.Windows.Shell.JumpList> 현재 연결 된는 <xref:System.Windows.Application>합니다.  
  
   
  
## Examples  
 다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Windows.Shell.JumpList> 코드에서입니다. 정적 <xref:System.Windows.Shell.JumpList.SetJumpList%2A> 메서드는 연결 된 <xref:System.Windows.Shell.JumpList> 현재 애플리케이션입니다. <xref:System.Windows.Shell.JumpList> 설정 된 경우에 Windows 셸 자동으로 적용 됩니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Shell.JumpList> 클래스 개요입니다.  
  
 [!code-csharp[Shell_JumpListSample#210](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#210)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFrequentCategory">
      <MemberSignature Language="C#" Value="public bool ShowFrequentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFrequentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowFrequentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowFrequentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFrequentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>자주 사용 되는 항목이 점프 목록에 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.</summary>
        <value><see langword="true" /> 자주 사용 되는 항목을 점프 목록에 표시 되 면 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘텐츠를 **자주** Windows shell에서 관리 되는 범주입니다. 자주 사용 되는 항목을 점프 목록에 표시 하려면 설정 합니다 <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> 속성을 `true`입니다.  
  
 **최근** 하 고 **자주** 범주는 종종 같은 점프 항목이 여러 개 포함 합니다. 결과적으로, 애플리케이션 일반적으로 표시 하거나 합니다 **최근** 또는 **자주** 점프 목록, 하지만 둘 다의 범주입니다.  
  
   
  
## Examples  
 다음 예제와 <xref:System.Windows.Shell.JumpList> 표시 하도록 구성 합니다 **자주** 범주입니다. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Shell.JumpList> 클래스 개요입니다.  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowRecentCategory">
      <MemberSignature Language="C#" Value="public bool ShowRecentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRecentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRecentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRecentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRecentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>점프 목록에 최근에 사용한 항목이 표시 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.</summary>
        <value><see langword="true" /> 점프 목록에 최근에 사용한 항목이 표시 되 면 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 내용을 합니다 **최근** Windows shell에서 관리 되는 범주입니다. 자주 사용 되는 항목을 점프 목록에 표시 하려면 설정 합니다 <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> 속성을 `true`입니다.  
  
 **최근** 하 고 **자주** 범주는 종종 같은 점프 항목이 여러 개 포함 합니다. 결과적으로, 애플리케이션 일반적으로 표시 하거나 합니다 **최근** 또는 **자주** 점프 목록, 하지만 둘 다의 범주입니다.  
  
 호출할 수 있습니다 합니다 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> 하 여 Windows 셸에 추가 항목을 요청 하는 방법 합니다 **최근** 항목 목록입니다. 항목의 파일 이름 형식을 처리 하도록 애플리케이션 등록 되지 않은, 경우에 나타나지 것입니다 합니다 **최근** 목록과 호출 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> 자동으로 실패 합니다.  
  
   
  
## Examples  
 다음 예제와 <xref:System.Windows.Shell.JumpList> 표시 하도록 구성 합니다 **최근** 범주. 이 예제는에서 사용할 수 있는 보다 큰 예제의 일부는 <xref:System.Windows.Shell.JumpList> 클래스 개요입니다.  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>