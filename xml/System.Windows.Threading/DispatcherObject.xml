<Type Name="DispatcherObject" FullName="System.Windows.Threading.DispatcherObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f23a2cca058df7d454b43f189c89fe7a283dcb6" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55423240" /></Metadata><TypeSignature Language="C#" Value="public abstract class DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DispatcherObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherObject abstract" />
  <TypeSignature Language="F#" Value="type DispatcherObject = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Windows.Threading.Dispatcher" />와 연결된 개체를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스레드만 합니다 <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> 만들어진에 액세스할 수 있습니다는 <xref:System.Windows.Threading.DispatcherObject> 직접.  액세스를 <xref:System.Windows.Threading.DispatcherObject> 스레드 이외의 스레드에서 <xref:System.Windows.Threading.DispatcherObject> 생성 된 호출에 <xref:System.Windows.Threading.Dispatcher.Invoke%2A> 또는 <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> 에 <xref:System.Windows.Threading.Dispatcher> 를 <xref:System.Windows.Threading.DispatcherObject> 연관 된.  
  
 서브 클래스 <xref:System.Windows.Threading.DispatcherObject> 는 필요한 스레드를 적용할 안전성 이렇게 호출 하 여 <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> 모든 공용 메서드.  이렇게 하면 호출 스레드는 스레드는는 <xref:System.Windows.Threading.DispatcherObject> 만들어진 합니다.  
  
 <xref:System.Windows.Threading.DispatcherObject> 독립적으로 인스턴스화되지;는 모든 생성자는 보호 합니다.  
  
 파생 된 개체 <xref:System.Windows.Threading.DispatcherObject> 스레드 선호도 있습니다.  
  
 파생 된 개체 <xref:System.Windows.Freezable> 는 자유 스레드는 고정 되어 있는 경우.  자세한 내용은 [Freezable 개체 개요](~/docs/framework/wpf/advanced/freezable-objects-overview.md)를 참조하세요.  
  
 ]]></format>
    </remarks>
    <threadsafe>모든 공용 <see langword="static" /> 이 형식의 멤버는 스레드로부터 안전 합니다. 인터페이스 멤버는 스레드로부터 안전하지 않습니다.  
  
이 개체는 생성 된 스레드에서만에서 액세스할 수 있습니다. 다른 스레드에서 액세스 시도 발생 시킵니다는 <see cref="T:System.InvalidOperationException" />합니다. <see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> 또는 <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> 마샬링 올바른 스레드로 작업에 대 한 지원을 제공 합니다.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DispatcherObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DispatcherObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Threading.DispatcherObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; bool" Usage="dispatcherObject.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호출 스레드가 이 <see cref="T:System.Windows.Threading.DispatcherObject" />에 액세스할 수 있는지 여부를 확인합니다.</summary>
        <returns>호출 스레드에서 이 개체에 액세스할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스레드만 합니다 <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> 만들어진에 액세스할 수 있습니다는 <xref:System.Windows.Threading.DispatcherObject>합니다.  
  
 스레드에 대 한이 있는지를 확인할 수 있습니다 <xref:System.Windows.Threading.DispatcherObject>합니다.  
  
 간의 차이점 <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> 하 고 <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> 는 <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> 호출 스레드에서이에 대 한 액세스에 있는지 여부를 지정 하는 부울 값을 반환 <xref:System.Windows.Threading.DispatcherObject> 및 <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> 호출 스레드를 권한이 없는 경우 예외를 throw 합니다 이 <xref:System.Windows.Threading.DispatcherObject>합니다.  
  
 이 메서드를 호출 하는 것은 호출과 동일 <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> 연결 된 <xref:System.Windows.Threading.Dispatcher> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> 스레드가 스레드에 액세스할 수 있는지 여부를 결정 하는 <xref:System.Windows.Controls.Button> 만들어진 합니다.  합니다 <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> 메서드는 <xref:System.Windows.Controls.Button> 스레드가 액세스할 수 있는지 확인 하기 위해 호출 됩니다.  호출 스레드가 액세스 하는 경우는 <xref:System.Windows.Controls.Button> 방금의 멤버에 액세스 하 여 업데이트 됩니다는 <xref:System.Windows.Controls.Button>고, 그렇지 않으면 허용 되는 대리자를를 <xref:System.Windows.Controls.Button> 인수로 게시 되는 <xref:System.Windows.Threading.Dispatcher> 의 <xref:System.Windows.Controls.Button>.  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccesscheckaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccesscheckaccess)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Threading.Dispatcher" />와 연결된 <see cref="T:System.Windows.Threading.DispatcherObject" />를 가져옵니다.</summary>
        <value>디스패처입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스레드만 합니다 <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> 만들어진에 액세스할 수 있습니다는 <xref:System.Windows.Threading.DispatcherObject> 직접.  액세스를 <xref:System.Windows.Threading.DispatcherObject> 스레드 이외의 스레드에서 <xref:System.Windows.Threading.DispatcherObject> 생성 된 호출에 <xref:System.Windows.Threading.Dispatcher.Invoke%2A> 및 <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> 에 <xref:System.Windows.Threading.Dispatcher> 를 <xref:System.Windows.Threading.DispatcherObject> 연관 된.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberSignature Language="F#" Value="member this.VerifyAccess : unit -&gt; unit" Usage="dispatcherObject.VerifyAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호출 스레드에서 이 <see cref="T:System.Windows.Threading.DispatcherObject" />에 액세스할 수 있는지 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스레드만 합니다 <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> 만들어진에 액세스할 수 있습니다는 <xref:System.Windows.Threading.DispatcherObject>합니다.  
  
 스레드에 대 한이 있는지를 확인할 수 있습니다 <xref:System.Windows.Threading.DispatcherObject>합니다.  
  
 간의 차이점 <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> 하 고 <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> 는 <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> 호출 스레드에서이에 대 한 액세스에 있는지 여부를 지정 하는 부울 값을 반환 <xref:System.Windows.Threading.DispatcherObject> 및 <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> 호출 스레드를 권한이 없는 경우 예외를 throw 합니다 이 <xref:System.Windows.Threading.DispatcherObject>합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> 스레드가 스레드에 액세스할 수 있는지 여부를 결정 하는 <xref:System.Windows.Controls.Button> 만들어진 합니다.  호출 스레드에서 액세스 되지 않은 경우는 <xref:System.InvalidOperationException> throw 됩니다.  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccessverifyaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">호출 스레드에서 이 <see cref="T:System.Windows.Threading.DispatcherObject" />에 액세스할 수 없는 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>