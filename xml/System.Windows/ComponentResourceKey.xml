<Type Name="ComponentResourceKey" FullName="System.Windows.ComponentResourceKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91d49b414bf8d41a2a5e9e5913a8c0553b196dba" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55341471" /></Metadata><TypeSignature Language="C#" Value="public class ComponentResourceKey : System.Windows.ResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentResourceKey extends System.Windows.ResourceKey" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ComponentResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentResourceKey&#xA;Inherits ResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentResourceKey : System::Windows::ResourceKey" />
  <TypeSignature Language="F#" Value="type ComponentResourceKey = class&#xA;    inherit ResourceKey" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ResourceKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>외부 어셈블리의 클래스 이름 또는 추가 식별자를 기준으로 리소스 키를 정의하거나 참조합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보를 참조 하세요 [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)합니다.  
  
 이 클래스는 어셈블리와 식별자의 형식을 기반으로 하는 키를 만드는 데 유용 하는 개체 형식을 구현 합니다. 을 정의 하거나 형식을 참조 하므로 특정 요청 필요가 없습니다 <xref:System.Windows.ResourceDictionary>에 둘 이상의 리소스 집합의 형식에 의해 차별화 된 각 어셈블리에 있을 수 있습니다 및 해당 <xref:System.Windows.ComponentResourceKey>합니다.  
  
 두 가지 방법으로 정의 하는 <xref:System.Windows.ComponentResourceKey>합니다.  
  
 쉽게 액세스할 수 있는 키를 원한다 면 반환 하는 컨트롤 클래스 코드에서 정적 속성을 정의할 수 있습니다는 <xref:System.Windows.ComponentResourceKey>를 통해 생성 된를 <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> 외부 리소스 어셈블리에 있는 및 <xref:System.Windows.ComponentResourceKey.ResourceId%2A>합니다. 사용자 지정에 대 한 원래 외부 리소스 어셈블리를 교환 하 여 어셈블리에서 컨트롤에 대 한 대체 기본 스타일을 정의 하는 것에 대 한 키를 사용할 수 있습니다. 또한 큰 컨트롤 스타일 또는 사용자 지정 진입점을 노출 하는 템플릿 내에서 명명 된 리소스 파트를 정의할 수 있습니다. 컨트롤의 테마 리소스 사전을 정의 하는 경우 특히 유용 합니다.  
  
 사용할 수도 있습니다는 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) 자세한 구문 직접 키의 느슨한 인스턴스를 만들려고 합니다. 작은 사용자 지정을 검색할 수 있는 다른 어셈블리에서 전용 리소스를 선언 하려고 하는 경우에 유용 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.ComponentResourceKey" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.ComponentResourceKey" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 생성자는 일반적으로 사용 되지 때문에 <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> 값 및 <xref:System.Windows.ComponentResourceKey.ResourceId%2A> 값은 적절 한 초기화에 필요 합니다. 기본 생성자가 지원 하기 위해 주로 [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) 명명 된 매개 변수 형태로 XAML 사용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeInTargetAssembly, object resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeInTargetAssembly As Type, resourceId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey(Type ^ typeInTargetAssembly, System::Object ^ resourceId);" />
      <MemberSignature Language="F#" Value="new System.Windows.ComponentResourceKey : Type * obj -&gt; System.Windows.ComponentResourceKey" Usage="new System.Windows.ComponentResourceKey (typeInTargetAssembly, resourceId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeInTargetAssembly" Type="System.Type" />
        <Parameter Name="resourceId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeInTargetAssembly">리소스 키를 정의하는 형식입니다.</param>
        <param name="resourceId"><paramref name="typeInTargetAssembly" /> 형식과 연관된 다른 키와 이 <see cref="T:System.Windows.ComponentResourceKey" />를 구분하기 위한 고유 식별자입니다.</param>
        <summary>키를 정의하는 <see cref="T:System.Windows.ComponentResourceKey" />과 추가 리소스 식별자로 사용할 개체를 지정하여 <see cref="T:System.Type" />의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 가장 중요 한 첫 번째 시나리오를 사용 하 여 두 가지 시나리오에 대 한 존재 합니다.  
  
-   만들 수 있도록 지원 한 <xref:System.Windows.ComponentResourceKey> 사용자 지정 컨트롤 클래스에 공용 정적 필드로 노출 되는 합니다. 이 통해 템플릿에서 자체 정의 된 리소스에 대 한 컨트롤의 액세스를 간소화 `{x:Static}` 템플릿 속성 값에 대 한 사용 합니다.  
  
-   지원 [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) 구성 요소 리소스를 참조 하는 제 3 자에 사용할 수 있는 방법 중 하나는 위치 매개 변수 형태로 XAML 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.ComponentResourceKey> 스타일 사용자 지정 항목 지점을 제공 하기 위해 컨트롤 클래스의 정적 키로 노출 되는 합니다.  
  
 [!code-csharp[CorePseudocode#CRKCode](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#crkcode)]
 [!code-vb[CorePseudocode#CRKCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#crkcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Windows.ComponentResourceKey.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 키와 연관된 값을 찾을 어셈블리의 사전을 나타내는 어셈블리 개체를 가져옵니다.</summary>
        <value>리플렉션 클래스로 검색된 어셈블리입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="componentResourceKey.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">현재 <see cref="T:System.Windows.ComponentResourceKey" />와 비교할 개체입니다.</param>
        <summary>제공된 개체가 현재 <see cref="T:System.Windows.ComponentResourceKey" />와 같은지 확인합니다.</summary>
        <returns>개체가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 키가 모두 모든 즉시 설정할 수 있는 속성에 동일한 값을 가질 경우 동일 (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="componentResourceKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.ComponentResourceKey" />의 해시 코드를 반환합니다.</summary>
        <returns>부호 있는 32비트 정수 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public object ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceId { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceId : obj with get, set" Usage="System.Windows.ComponentResourceKey.ResourceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 형식과 연관된 다른 키와 이 키를 구분하기 위한 고유 식별자를 가져오거나 설정합니다.</summary>
        <value>고유 식별자입니다. 일반적으로 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보를 참조 하세요 [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)합니다.  
  
 일반적으로 사용 하는 문자열을 <xref:System.Windows.ComponentResourceKey.ResourceId%2A> 값 준수 하는 [XamlName 문법](~/docs/framework/xaml-services/xamlname-grammar.md)합니다.  
  
## Examples  
 다음 예제에서는 사용 하는 방법의 <xref:System.Windows.ComponentResourceKey.ResourceId%2A> 이 형식과 연결 된 다른 사용자와이 키를 구별할 수 있습니다.  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="componentResourceKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.ComponentResourceKey" />에 대한 문자열 표현을 가져옵니다.</summary>
        <returns>문자열 표현입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInTargetAssembly">
      <MemberSignature Language="C#" Value="public Type TypeInTargetAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeInTargetAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInTargetAssembly As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TypeInTargetAssembly { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInTargetAssembly : Type with get, set" Usage="System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>리소스 키를 정의하는 <see cref="T:System.Type" />을 가져오거나 설정합니다.</summary>
        <value>리소스 키를 정의하는 형식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보를 참조 하세요 [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)합니다.  
  
 <xref:System.Windows.ComponentResourceKey> 요소 사용자 지정 구성 요소 형식이 포함 된 어셈블리를 대상 지정을 기반으로 외부 어셈블리에서 액세스할 수 있는 리소스에 대 한 키 정의에 사용 됩니다. 사용자 지정 구성 요소는 종종 리소스 위치한 어셈블리에 있어야 하는 새 형식을 정의 합니다. 일반적으로 이러한 형식은 다른 구현이 없는, 형식을 조회 요구 사항을 충족 하기 위해 존재는 <xref:System.Windows.ComponentResourceKey>합니다.  
  
## Examples  
 다음 예제에서는 정의 하는 방법을 보여 줍니다를 <xref:System.Windows.ComponentResourceKey> 포함 하 여 <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> 및 <xref:System.Windows.ComponentResourceKey.ResourceId%2A> 를 사용 하는 [ComponentResourceKey 태그 확장](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)합니다. 이 리소스 다음 외부 어셈블리에 배치 하 고 액세스할 수는 비슷한를 사용 하 여 리소스를 요청 하는 키 사용 하 여 <xref:System.Windows.ComponentResourceKey> 요청에서 합니다.  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>