<Type Name="DataFormats" FullName="System.Windows.DataFormats">
  <Metadata><Meta Name="ms.openlocfilehash" Value="00d7d95b26712474b2e69b93c08f57811b8a3c63" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65009408" /></Metadata><TypeSignature Language="C#" Value="public static class DataFormats" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataFormats extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataFormats" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFormats" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataFormats abstract sealed" />
  <TypeSignature Language="F#" Value="type DataFormats = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>클립보드 또는 끌어서 놓기 작업에서 사용할 수 있는 데이터 형식을 식별 하는 데 사용할 수 있는 미리 정의 된 데이터 형식 이름 집합을 제공 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스를 <xref:System.Windows.IDataObject> 인터페이스에 정의 된 정적 형식이 사용 <xref:System.Windows.DataFormats> 데이터 개체에 저장 된 각 데이터 형식을 설명 하 합니다. 데이터 개체는 일반적으로 시스템 클립보드 및 끌어서 놓기 작업에서 데이터 전송에 사용 됩니다.  
  
 다음 표에서에서 제공 하는 정적 데이터 형식 필드 값을 나열 <xref:System.Windows.DataFormats>합니다.  이러한 필드 값은 정보 제공 목적 으로만; 제공 일반적으로 코드에 하드 코드 된 문자열 대신 해당 필드를 항상 참조 해야 합니다.  
  
|필드|필드 값|설명|  
|-----------|-----------------|-----------------|  
|<xref:System.Windows.DataFormats.Bitmap>|"Bitmap"|지정 된 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 비트맵 데이터 형식입니다.|  
|<xref:System.Windows.DataFormats.CommaSeparatedValue>|"CSV"|쉼표로 구분 된 값 (CSV) 데이터 형식을 지정합니다.|  
|<xref:System.Windows.DataFormats.Dib>|"DeviceIndependentBitmap"|디바이스 독립적 비트맵 (DIB) 데이터 형식을 지정합니다.|  
|<xref:System.Windows.DataFormats.Dif>|"DataInterchangeFormat"|Windows 데이터 교환 형식 (DIF) 데이터 형식을 지정합니다.|  
|<xref:System.Windows.DataFormats.EnhancedMetafile>|"EnhancedMetafile"|지정 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 확장된 메타 파일 형식입니다.|  
|<xref:System.Windows.DataFormats.FileDrop>|"FileDrop"|지정 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 파일 놓기 형식을 합니다.|  
|<xref:System.Windows.DataFormats.Html>|"HTML Format"|지정 된 [!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)] 데이터 형식입니다.|  
|<xref:System.Windows.DataFormats.Locale>|"로캘"|[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 로캘(문화권) 데이터 형식을 지정합니다.|  
|<xref:System.Windows.DataFormats.MetafilePicture>|"MetaFilePict"|지정 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 메타 파일 그림 데이터 형식입니다.|  
|<xref:System.Windows.DataFormats.OemText>|"OEMText"|표준 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] OEM 텍스트 데이터 형식을 지정합니다.|  
|<xref:System.Windows.DataFormats.Palette>|"Palette"|지정 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 색상표 데이터 형식을 합니다.|  
|<xref:System.Windows.DataFormats.PenData>|"PenData"|지정 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 펜 데이터 형식을 합니다.|  
|<xref:System.Windows.DataFormats.Riff>|"RiffAudio"|지정 된 [!INCLUDE[TLA#tla_riff](~/includes/tlasharptla-riff-md.md)] 오디오 데이터 형식입니다.|  
|<xref:System.Windows.DataFormats.Rtf>|"Rich Text Format"|지정 된 [!INCLUDE[TLA#tla_rtf](~/includes/tlasharptla-rtf-md.md)] 데이터 형식입니다.|  
|<xref:System.Windows.DataFormats.Serializable>|"PersistentObject"|모든 유형의 직렬화 가능한 데이터 개체를 캡슐화 하는 데이터 형식을 지정 합니다.|  
|<xref:System.Windows.DataFormats.StringFormat>|"System.String"|지정 된 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 문자열 클래스 데이터 형식입니다.|  
|<xref:System.Windows.DataFormats.SymbolicLink>|"SymbolicLink"|지정 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 기호화 된 링크 데이터 형식입니다.|  
|<xref:System.Windows.DataFormats.Text>|"Text"|ANSI 텍스트 데이터 형식을 지정합니다.|  
|<xref:System.Windows.DataFormats.Tiff>|"TaggedImageFileFormat"|지정 된 [!INCLUDE[TLA#tla_tiff](~/includes/tlasharptla-tiff-md.md)] 데이터 형식입니다.|  
|<xref:System.Windows.DataFormats.UnicodeText>|"UnicodeText"|[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] 텍스트 데이터 형식을 지정합니다.|  
|<xref:System.Windows.DataFormats.WaveAudio>|"WaveAudio"|웨이브 오디오 데이터 형식을 지정합니다.|  
|<xref:System.Windows.DataFormats.Xaml>|"Xaml"|지정 된 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 데이터 형식입니다.|  
|<xref:System.Windows.DataFormats.XamlPackage>|"XamlPackage"|지정 된 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 패키지 데이터 형식입니다.|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public static readonly string Bitmap;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Bitmap" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Bitmap" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Bitmap As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Bitmap;" />
      <MemberSignature Language="F#" Value=" staticval mutable Bitmap : string" Usage="System.Windows.DataFormats.Bitmap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 비트맵 데이터 형식입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비트맵 비트 메모리에 배열로 컴퓨터 그래픽 나타내며 이러한 비트 이미지의 개별 픽셀의 특성을 나타냅니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommaSeparatedValue">
      <MemberSignature Language="C#" Value="public static readonly string CommaSeparatedValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string CommaSeparatedValue" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.CommaSeparatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommaSeparatedValue As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ CommaSeparatedValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommaSeparatedValue : string" Usage="System.Windows.DataFormats.CommaSeparatedValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쉼표로 구분 된 값 (CSV) 데이터 형식을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 형식은 일반적으로 스프레드시트에서 사용 되는 기본 교환 형식입니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dib">
      <MemberSignature Language="C#" Value="public static readonly string Dib;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Dib" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Dib" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Dib As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Dib;" />
      <MemberSignature Language="F#" Value=" staticval mutable Dib : string" Usage="System.Windows.DataFormats.Dib" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>DIB 데이터 형식을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DIB는 파일 형식을 로드 하 고 원래 애플리케이션에 나타난 대로 다른 애플리케이션에 표시 되는 비트맵 그래픽 애플리케이션을 사용 하 여 만든 수 있도록 설계 되었습니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dif">
      <MemberSignature Language="C#" Value="public static readonly string Dif;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Dif" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Dif" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Dif As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Dif;" />
      <MemberSignature Language="F#" Value=" staticval mutable Dif : string" Usage="System.Windows.DataFormats.Dif" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Windows 데이터 교환 형식 (DIF) 데이터 형식을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DIF은 구성 된 ASCII 코드는 데이터베이스, 스프레드시트 및 유사한 문서 구조를 지정 하 여 쉽게 사용할 다른 프로그램으로 전송 하는 형식입니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnhancedMetafile">
      <MemberSignature Language="C#" Value="public static readonly string EnhancedMetafile;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string EnhancedMetafile" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.EnhancedMetafile" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EnhancedMetafile As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ EnhancedMetafile;" />
      <MemberSignature Language="F#" Value=" staticval mutable EnhancedMetafile : string" Usage="System.Windows.DataFormats.EnhancedMetafile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 확장된 메타 파일 형식입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 확장된 메타 파일 형식이 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 픽셀 대신 그래픽 이미지를 저장 하는 파일 개체입니다. 크기 조정 메타 파일 이미지는 비트맵 보다 더 나은 유지 됩니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDrop">
      <MemberSignature Language="C#" Value="public static readonly string FileDrop;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string FileDrop" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.FileDrop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FileDrop As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ FileDrop;" />
      <MemberSignature Language="F#" Value=" staticval mutable FileDrop : string" Usage="System.Windows.DataFormats.FileDrop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 파일 놓기 형식을 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 형식을 사용 하 여 끌어서 놓기 작업 중 셸 파일 끌기 상호 작용 합니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataFormat">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>반환 된 <see cref="T:System.Windows.DataFormat" /> 이름 및 지정된 된 데이터 형식에 대 한 숫자 ID를 정의 하는 개체입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 새 형식을 등록 하 데도 사용할 수 있습니다. 지정 된 형식을 찾을 수 없는 경우 새 데이터 형식으로 자동으로 등록 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataFormat">
      <MemberSignature Language="C#" Value="public static System.Windows.DataFormat GetDataFormat (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DataFormat GetDataFormat(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataFormats.GetDataFormat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataFormat (id As Integer) As DataFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DataFormat ^ GetDataFormat(int id);" />
      <MemberSignature Language="F#" Value="static member GetDataFormat : int -&gt; System.Windows.DataFormat" Usage="System.Windows.DataFormats.GetDataFormat id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">요청 된 데이터 형식의 숫자 ID를 <see cref="T:System.Windows.DataFormat" /> 개체입니다.</param>
        <summary>반환 된 <see cref="T:System.Windows.DataFormat" /> 이름 및 지정된 된 데이터 형식에 대 한 숫자 ID를 정의 하는 개체입니다. 원하는 데이터 형식은 숫자 ID로 지정 됩니다.</summary>
        <returns><see cref="T:System.Windows.DataFormat" /> 숫자 ID 및 요청한 데이터 형식의 이름을 포함 하는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 새 형식을 등록 하 데도 사용할 수 있습니다. 지정 된 형식을 찾을 수 없는 경우 새 데이터 형식으로 자동으로 등록 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataFormat">
      <MemberSignature Language="C#" Value="public static System.Windows.DataFormat GetDataFormat (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DataFormat GetDataFormat(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataFormats.GetDataFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataFormat (format As String) As DataFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DataFormat ^ GetDataFormat(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetDataFormat : string -&gt; System.Windows.DataFormat" Usage="System.Windows.DataFormats.GetDataFormat format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">요청 데이터 형식의 이름을 <see cref="T:System.Windows.DataFormat" /> 개체입니다.</param>
        <summary>반환 된 <see cref="T:System.Windows.DataFormat" /> 이름 및 지정된 된 데이터 형식에 대 한 숫자 ID를 정의 하는 개체입니다. 원하는 데이터 형식은 이름 (문자열)으로 지정 됩니다.</summary>
        <returns><see cref="T:System.Windows.DataFormat" /> 숫자 ID 및 요청한 데이터 형식의 이름을 포함 하는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 새 형식을 등록 하 데도 사용할 수 있습니다. 지정 된 형식을 찾을 수 없는 경우 새 데이터 형식으로 자동으로 등록 됩니다.  
  
 이 메서드를 사용 하려면 호출자에 게 <xref:System.Security.Permissions.UIPermission> 으로 <xref:System.Security.Permissions.UIPermissionClipboard.AllClipboard?displayProperty=nameWithType>  
  
 플래그 집합입니다.  다음 코드는 어셈블리에 대 한이 사용 권한을 요청 하는 특성 구문을 보여 줍니다.  
  
```csharp  
[assembly: SecurityPermissionAttribute(SecurityAction.RequestMinimum, Flags = UIPermissionClipboard.AllClipboard)]  
```  
  
```vb  
<assembly: SecurityPermissionAttribute(SecurityAction.RequestMinimum, Flags := UIPermissionClipboard.AllClipboard)>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />가 <see langword="null" />인 경우</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">클립보드 형식 등록을 지 원하는 하위 수준 관리 되지 않는 코드에 액세스 합니다.  연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/859af632-c80d-4736-8d6f-1e01b09ce127">코드 액세스 보안 소개</related>
      </Docs>
    </Member>
    <Member MemberName="Html">
      <MemberSignature Language="C#" Value="public static readonly string Html;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Html" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Html" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Html As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Html;" />
      <MemberSignature Language="F#" Value=" staticval mutable Html : string" Usage="System.Windows.DataFormats.Html" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)] 데이터 형식입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public static readonly string Locale;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Locale" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Locale As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Locale;" />
      <MemberSignature Language="F#" Value=" staticval mutable Locale : string" Usage="System.Windows.DataFormats.Locale" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 로캘(문화권) 데이터 형식을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetafilePicture">
      <MemberSignature Language="C#" Value="public static readonly string MetafilePicture;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MetafilePicture" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.MetafilePicture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MetafilePicture As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MetafilePicture;" />
      <MemberSignature Language="F#" Value=" staticval mutable MetafilePicture : string" Usage="System.Windows.DataFormats.MetafilePicture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 메타 파일 그림 데이터 형식입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메타 파일 그림 형식은 픽셀이 아닌 그래픽 개체는 이미지를 저장 하는 Windows 파일입니다. 크기 조정 메타 파일 이미지는 비트맵 보다 더 나은 유지 됩니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OemText">
      <MemberSignature Language="C#" Value="public static readonly string OemText;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string OemText" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.OemText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OemText As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ OemText;" />
      <MemberSignature Language="F#" Value=" staticval mutable OemText : string" Usage="System.Windows.DataFormats.OemText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표준 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] OEM 텍스트 데이터 형식을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public static readonly string Palette;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Palette" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Palette As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Palette;" />
      <MemberSignature Language="F#" Value=" staticval mutable Palette : string" Usage="System.Windows.DataFormats.Palette" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 색상표 데이터 형식을 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenData">
      <MemberSignature Language="C#" Value="public static readonly string PenData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string PenData" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.PenData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PenData As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ PenData;" />
      <MemberSignature Language="F#" Value=" staticval mutable PenData : string" Usage="System.Windows.DataFormats.PenData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 펜 데이터 형식을 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 필기 소프트웨어에 펜 스트로크 펜 데이터 구성 됩니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Riff">
      <MemberSignature Language="C#" Value="public static readonly string Riff;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Riff" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Riff" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Riff As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Riff;" />
      <MemberSignature Language="F#" Value=" staticval mutable Riff : string" Usage="System.Windows.DataFormats.Riff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_riff](~/includes/tlasharptla-riff-md.md)] 오디오 데이터 형식입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_riff](~/includes/tla2sharptla-riff-md.md)] 다양 한 멀티미디어 파일에 대 한 표준 형식을 정의 하는 데 사용할 설계 된 광범위 한 사양입니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rtf">
      <MemberSignature Language="C#" Value="public static readonly string Rtf;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Rtf" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Rtf" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Rtf As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Rtf;" />
      <MemberSignature Language="F#" Value=" staticval mutable Rtf : string" Usage="System.Windows.DataFormats.Rtf" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_rtf](~/includes/tlasharptla-rtf-md.md)] 데이터 형식입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RTF은 전송에 사용 되는 문서 콘텐츠 아키텍처를 적용 하는 애플리케이션 간에 텍스트 문서를 포맷 합니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="public static readonly string Serializable;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Serializable" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Serializable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Serializable As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Serializable;" />
      <MemberSignature Language="F#" Value=" staticval mutable Serializable : string" Usage="System.Windows.DataFormats.Serializable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>모든 유형의 직렬화 가능한 데이터 개체를 캡슐화 하는 데이터 형식을 지정 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public static readonly string StringFormat;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StringFormat" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StringFormat As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StringFormat;" />
      <MemberSignature Language="F#" Value=" staticval mutable StringFormat : string" Usage="System.Windows.DataFormats.StringFormat" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 문자열 클래스 데이터 형식입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolicLink">
      <MemberSignature Language="C#" Value="public static readonly string SymbolicLink;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SymbolicLink" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.SymbolicLink" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SymbolicLink As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SymbolicLink;" />
      <MemberSignature Language="F#" Value=" staticval mutable SymbolicLink : string" Usage="System.Windows.DataFormats.SymbolicLink" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] 기호화 된 링크 데이터 형식입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기호화 된 링크를 항목이 디스크 디렉터리를 파일에 대 한 디렉터리 항목 대신 있지만 실제로 다른 디렉터리에 파일에 대 한 참조입니다. 기호화 된 링크를 별칭, 바로 가기, 소프트 링크 또는 symlink도 참조할 수 있습니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public static readonly string Text;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Text" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Text" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Text As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Text;" />
      <MemberSignature Language="F#" Value=" staticval mutable Text : string" Usage="System.Windows.DataFormats.Text" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ANSI 텍스트 데이터 형식을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tiff">
      <MemberSignature Language="C#" Value="public static readonly string Tiff;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Tiff" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Tiff" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Tiff As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Tiff;" />
      <MemberSignature Language="F#" Value=" staticval mutable Tiff : string" Usage="System.Windows.DataFormats.Tiff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_tiff](~/includes/tlasharptla-tiff-md.md)] 데이터 형식입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_tiff](~/includes/tla2sharptla-tiff-md.md)]은 회색 스케일 그래픽 이미지의 검색, 스토리지 및 교환에 일반적으로 사용되는 표준 파일 형식입니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeText">
      <MemberSignature Language="C#" Value="public static readonly string UnicodeText;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UnicodeText" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.UnicodeText" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnicodeText As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UnicodeText;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnicodeText : string" Usage="System.Windows.DataFormats.UnicodeText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] 텍스트 데이터 형식을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 데이터 형식은 인코딩된 16 비트 문자 유니코드 u t F-16과 u c S-2 라고도 합니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaveAudio">
      <MemberSignature Language="C#" Value="public static readonly string WaveAudio;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string WaveAudio" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.WaveAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WaveAudio As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ WaveAudio;" />
      <MemberSignature Language="F#" Value=" staticval mutable WaveAudio : string" Usage="System.Windows.DataFormats.WaveAudio" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>웨이브 오디오 데이터 형식을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xaml">
      <MemberSignature Language="C#" Value="public static readonly string Xaml;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Xaml" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.Xaml" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Xaml As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Xaml;" />
      <MemberSignature Language="F#" Value=" staticval mutable Xaml : string" Usage="System.Windows.DataFormats.Xaml" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 데이터 형식입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML은 개체의 트리를 표현 하는 데는 XML 기반 언어입니다. 사용 하 여 이러한 개체에 의해 생성 된 이벤트를 처리할 수 있습니다 [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] 프로그래밍 언어입니다. [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 는 일반적으로 사용자 인터페이스 (UI), 문서 및 미디어 환경에 설명 하는 데 사용 됩니다.  
  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XamlPackage">
      <MemberSignature Language="C#" Value="public static readonly string XamlPackage;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string XamlPackage" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataFormats.XamlPackage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XamlPackage As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ XamlPackage;" />
      <MemberSignature Language="F#" Value=" staticval mutable XamlPackage : string" Usage="System.Windows.DataFormats.XamlPackage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정 된 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 패키지 데이터 형식입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 필드가 사용 되는 <xref:System.Windows.DataObject> 클래스 및 구현 하는 다른 클래스는 <xref:System.Windows.IDataObject> 는 사용 가능한 데이터 형식을 설명 하는 인터페이스.  
  
 이 필드를 사용 합니다 <xref:System.Windows.IDataObject.SetData%2A> 해당 형식으로 데이터를 데이터 개체를 추가 하는 방법이이 필드를 사용 하 여는 <xref:System.Windows.IDataObject.GetData%2A> 해당 형식에서 데이터를 검색 하는 방법. 데이터 개체를이 형식의 데이터가 포함 되어 있는지 여부를 확인 하려면 사용 된 <xref:System.Windows.IDataObject.GetDataPresent%2A> 형식에 대 한 쿼리 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>