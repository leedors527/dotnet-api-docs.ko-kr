<Type Name="DataTrigger" FullName="System.Windows.DataTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a96b6f025b0dde64c8590ed579c01d92bb7d15c" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57932327" /></Metadata><TypeSignature Language="C#" Value="public class DataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type DataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>바인딩된 데이터가 지정된 조건에 맞을 때 속성 값을 적용하거나 작업을 수행하는 트리거를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Style>를 <xref:System.Windows.Controls.ControlTemplate>, 및 <xref:System.Windows.DataTemplate> 는 triggers 컬렉션이 있는 모든. A <xref:System.Windows.DataTrigger> 데이터 개체의 속성 값을 지정 된 일치 하는 경우 속성 값을 설정할 수 있습니다 <xref:System.Windows.Condition.Value%2A>합니다. 예를 들어의 목록을 표시 하는 경우 `Employee` 개체에 따라 다를 수 전경색 수도 `Employee's` 현재 참석 합니다. (예를 들어 `Employees` 휴가 현재 인 자주색 포그라운드 표시 됩니다.) 일부 시나리오에서는 변환기를 만들거나 사용 하 여 더 적합할 수 있습니다는 <xref:System.Windows.Controls.DataTemplateSelector>합니다. 자세한 내용은 참조는 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)합니다.  
  
 모두 지정 해야 합니다 <xref:System.Windows.DataTrigger.Binding%2A> 및 <xref:System.Windows.DataTrigger.Value%2A> 속성에는 <xref:System.Windows.DataTrigger> 의미 있는 데이터 트리거에 대 한. 하나 또는 두 속성 모두 지정 하지 않으면 예외가 throw 됩니다.  
  
 <xref:System.Windows.DataTrigger.Setters%2A> 의 속성을 <xref:System.Windows.DataTrigger> 개체 수만 구성 <xref:System.Windows.Setter> 개체입니다. 추가 <xref:System.Windows.Setter> 자식을 <xref:System.Windows.DataTrigger> 개체가 암시적으로 추가 합니다 <xref:System.Windows.SetterBaseCollection> 에 대 한를 <xref:System.Windows.DataTrigger> 개체입니다. <xref:System.Windows.EventSetter> 개체가 지원 되지 않습니다. 만 <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> 지원 <xref:System.Windows.EventSetter> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 의 <xref:System.Windows.Controls.ListBox> 바인딩되 *위치*, <xref:System.Collections.ObjectModel.ObservableCollection%601> 의 *위치* 개체입니다. *장소* 개체 속성을 가질 *이름* 하 고 *상태*합니다.  
  
 각 <xref:System.Windows.Controls.ListBoxItem> 의 합니다 <xref:System.Windows.Controls.ListBox> 표시는 *곳* 개체입니다. 합니다 <xref:System.Windows.Style> 예제에서는 각각에 적용 됩니다 <xref:System.Windows.Controls.ListBoxItem>합니다.  
  
 <xref:System.Windows.DataTrigger> 지정 되도록 경우는 *상태* 의 *곳* 데이터 항목 "WA" 인 해당 전경 <xref:System.Windows.Controls.ListBoxItem> 빨간색으로 설정 됩니다.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.DataTrigger>, <xref:System.Windows.Media.Animation.BeginStoryboard> 동작 및 <xref:System.Windows.Media.Animation.Storyboard> 바인딩된 데이터가 지정된 된 조건을 충족 하는 경우에 속성에 애니메이션 효과입니다. 에 대 한 인벤토리 정보를 표시 하는 예제는 <xref:System.Windows.Controls.ListBox> 제어 합니다. 사용 하 여를 <xref:System.Windows.DataTrigger> 애니메이션 효과를 주는 합니다 <xref:System.Windows.UIElement.Opacity%2A> 의 모든 <xref:System.Windows.Controls.ListBoxItem> 아웃 품절 책을 포함 하는 합니다.  
  
 [!code-xaml[AnimatePropertyStoryboards#GraphicsMMDataTriggerStoryboardWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/AnimatePropertyStoryboards/XAML/DataTriggerStoryboardExample.xaml#graphicsmmdatatriggerstoryboardwholepage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Trigger" />
    <altmember cref="T:System.Windows.MultiDataTrigger" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">데이터 템플릿 샘플 소개</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.DataTrigger" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ Binding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.DataTrigger.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 개체의 속성 값을 생성하는 바인딩을 가져오거나 설정합니다.</summary>
        <value>기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 바인딩에 의해 생성 된 속성 값을 지정 된 값과 비교 됩니다는 <xref:System.Windows.DataTrigger.Value%2A> 속성입니다. 가능한 경우 바인딩의 값의 형식으로 변환 된 값이 첫 번째 및 다음 사용 하 여 두 값이 비교 되는 `Object.Equals` 메서드. 두 값이 같으면 관련된 작업이 나 setter가 적용 됩니다.  
  
 바인딩을 만들고 사용 하 여 <xref:System.Windows.Data.Binding.Path%2A> 특정 개체 (바인딩 소스 개체)의 속성에 바인딩할 속성입니다. 예를 들어에 바인딩할 수 있습니다 합니다 *우선 순위* 의 속성을 *작업*합니다. 자세한 내용은 [데이터 바인딩 개요](~/docs/framework/wpf/data/data-binding-overview.md)를 참조하세요.  
  
 모두 지정 해야 합니다 <xref:System.Windows.DataTrigger.Binding%2A> 및 <xref:System.Windows.DataTrigger.Value%2A> 속성에는 <xref:System.Windows.DataTrigger> 의미 있는 데이터 트리거에 대 한. 하나 또는 두 속성 모두 설정 되지 않은 경우 예외가 throw 됩니다.  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>XAML 값  
 *declaration*  
 0 개 이상의 특성 할당 절이 쉼표 (,)로 구분 합니다. 참조 [Binding 태그 확장](~/docs/framework/wpf/advanced/binding-markup-extension.md) 자세한 내용은 합니다.  
  
   
  
## Examples  
 다음 예에서 <xref:System.Windows.DataTrigger> 설정 합니다 <xref:System.Windows.Controls.Border.BorderBrush%2A> 요소의 `border` 에 `Yellow` 경우를 `TaskType` 속성이 `TaskType.Home`.  
  
 [!code-xaml[DataTemplatingIntro#DT](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#dt)]  
[!code-xaml[DataTemplatingIntro#DataTrigger](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#datatrigger)]  
[!code-xaml[DataTemplatingIntro#AddingMore2](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#addingmore2)]  
  
 에 대 한 자세한 설명은이 예제를 참조 하세요 [데이터 템플릿 개요](~/docs/framework/wpf/data/data-templating-overview.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DataTrigger.Value" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">데이터 템플릿 샘플 소개</related>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveMarkupExtension : obj * System.Windows.Markup.XamlSetMarkupExtensionEventArgs -&gt; unit" Usage="System.Windows.DataTrigger.ReceiveMarkupExtension (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetObject">태그 확장에서 값을 설정하는 개체입니다.</param>
        <param name="eventArgs">태그 확장 처리와 관련된 데이터입니다.</param>
        <summary>태그 확장이 <see cref="T:System.Windows.DataTrigger" /> 개체의 속성 값을 제공하는 경우를 처리합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 적용 하 여 참조 하는 메서드를 이것이 <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> 특성의 값을 설정 하려는 모든 시도가이 메서드를 처리 함을 의미 하는 클래스 수준의 <xref:System.Windows.DataTrigger> 태그 확장을 사용 하 여 합니다. 호출 하지 않으면 일반적으로이 메서드 직접.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.DataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 항목이 지정된 조건을 충족할 때 적용할 속성 값을 설명하는 <see cref="T:System.Windows.Setter" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>XAML 값  
 *ZeroOrMoreSetters*  
 0 개 이상의 <xref:System.Windows.Setter> 개체입니다.  
  
 A <xref:System.Windows.DataTrigger> 작업을 시작 하거나 사용할 수 있습니다 <xref:System.Windows.Setter>의속성에 적용 하는 데이터 항목에 지정된 된 조건을 충족 하는 경우 값입니다.  
  
 동일한 setter 컬렉션에서 동일한 속성을 설정 하는 둘 이상의 setter가 선언 된 setter는 마지막으로 사용 됩니다.  
  
 <xref:System.Windows.DataTrigger.Setters%2A> 의 속성을 <xref:System.Windows.DataTrigger> 개체 수만 구성 <xref:System.Windows.Setter> 개체입니다. 추가 <xref:System.Windows.Setter> 자식을 <xref:System.Windows.DataTrigger> 개체가 암시적으로 추가 합니다 <xref:System.Windows.SetterBaseCollection> 에 대 한를 <xref:System.Windows.DataTrigger> 개체입니다. <xref:System.Windows.EventSetter> 개체가 지원 되지 않습니다. 만 <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> 지원 <xref:System.Windows.EventSetter> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 두 개의 <xref:System.Windows.DataTrigger> 에 정의 된 개체는 <xref:System.Windows.DataTemplate>합니다. 합니다 <xref:System.Windows.DataTemplate> 에 적용 됩니다 *AuctionItem* 데이터 개체 (이 예제에 표시 되지 않음), 속성이 *SpecialFeatures*합니다.  
  
 첫 번째 <xref:System.Windows.DataTrigger> 지정 되도록 데이터 개체에는 *SpecialFeatures* 의 값 *색*, 항목으로 표시 됩니다는 `DodgerBlue` 남색 제목 배경. 데이터 개체에는 *SpecialFeatures* 값 *강조 표시*를 두 번째 <xref:System.Windows.DataTrigger> 활성화 되어 있으므로 별표를 사용 하 여는 주황색 테두리와 함께 표시할 항목 수입니다.  
  
 전체 샘플을 참조 하세요 [데이터 바인딩 데모](https://go.microsoft.com/fwlink/?LinkID=163703)합니다.  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">데이터 템플릿 샘플 소개</related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">추가할 자식 개체입니다.</param>
        <summary>자식 개체를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.DataTrigger> 인스턴스가 <xref:System.Windows.Markup.IAddChild> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">개체에 추가할 텍스트입니다.</param>
        <summary>노드의 텍스트 콘텐츠를 개체에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.DataTrigger> 인스턴스가 <xref:System.Windows.Markup.IAddChild> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.DataTrigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Binding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 개체의 속성 값과 비교할 값을 가져오거나 설정합니다.</summary>
        <value>기본값은 <see langword="null" />입니다. 예외 부분을 참조하십시오.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
 이 값에서 생성 한 속성 값과 비교 됩니다는 <xref:System.Windows.DataTrigger.Binding%2A> 의 속성을 <xref:System.Windows.DataTrigger>입니다. 수행되는 비교 작업은 참조 일치 검사입니다. 두 값이 같으면 관련된 작업이 나 setter가 적용 됩니다.  
  
 모두 지정 해야 합니다 <xref:System.Windows.DataTrigger.Binding%2A> 및 <xref:System.Windows.DataTrigger.Value%2A> 속성에는 <xref:System.Windows.DataTrigger> 의미 있는 데이터 트리거에 대 한. 속성 하나 또는 둘 다 설정 되지 않은 경우 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 의 <xref:System.Windows.Controls.ListBox> 바인딩되 *위치*, <xref:System.Collections.ObjectModel.ObservableCollection%601> 의 *위치* 개체입니다. *장소* 개체 속성을 가질 *이름* 하 고 *상태*합니다.  
  
 각 <xref:System.Windows.Controls.ListBoxItem> 의 합니다 <xref:System.Windows.Controls.ListBox> 표시는 *곳* 개체입니다. 합니다 <xref:System.Windows.Style> 예제에서는 각각에 적용 됩니다 <xref:System.Windows.Controls.ListBoxItem>합니다.  
  
 <xref:System.Windows.DataTrigger> 지정 되도록 경우는 *상태* 의 *곳* 데이터 항목 "WA" 인 해당 전경 <xref:System.Windows.Controls.ListBoxItem> 빨간색으로 설정 됩니다.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 다음 예제에서는 두 개의 <xref:System.Windows.DataTrigger>에 정의 된 s는 <xref:System.Windows.DataTemplate>합니다. 합니다 <xref:System.Windows.DataTemplate> 에 적용 됩니다 *AuctionItem* 데이터 개체 (이 예제에 표시 되지 않음), 속성이 *SpecialFeatures*합니다. 참조 [데이터 바인딩 데모](https://go.microsoft.com/fwlink/?LinkID=163703) 전체 예제입니다.  
  
 첫 번째 <xref:System.Windows.DataTrigger> 지정 되도록 데이터 개체에는 *SpecialFeatures* 의 값 *색*, 항목 남색 제목 DodgerBlue 배경을 표시 됩니다. 데이터 개체에는 *SpecialFeatures* 값 *강조 표시*를 두 번째 <xref:System.Windows.DataTrigger> 활성화 되어 있으므로 별표를 사용 하 여는 주황색 테두리와 함께 표시할 항목 수입니다.  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">식이 지원되지 않는 경우. 바인딩은 지원되지 않습니다.</exception>
        <altmember cref="P:System.Windows.DataTrigger.Binding" />
        <altmember cref="P:System.Windows.DataTrigger.Setters" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">데이터 템플릿 샘플 소개</related>
      </Docs>
    </Member>
  </Members>
</Type>