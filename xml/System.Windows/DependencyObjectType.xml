<Type Name="DependencyObjectType" FullName="System.Windows.DependencyObjectType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d14a8de309c4ec8cd2fb5a8859b0cebfcae63f78" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39765039" /></Metadata><TypeSignature Language="C#" Value="public class DependencyObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DependencyObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyObjectType" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyObjectType" />
  <TypeSignature Language="F#" Value="type DependencyObjectType = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>모든 <see cref="T:System.Windows.DependencyObject" /> 파생 형식에 대해 내부 형식 캐시를 구현합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DependencyObjectType> 특정 기본 시스템을 나타냅니다 ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> 의 한 <xref:System.Windows.DependencyObject>합니다. <xref:System.Windows.DependencyObjectType> 기본적으로 래퍼를 ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> 해당 기능의 일부를 연장할 수 있도록 합니다.  
  
 이 클래스는 공용 생성자가 없습니다. 이 클래스의 인스턴스가 다른 개체에 속성을 통해 얻을 수 있습니다 (같은 <xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=nameWithType>), 또는 정적 메서드를 통해 <xref:System.Windows.DependencyObjectType.FromSystemType%2A>합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObjectType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObjectType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObjectType ^ BaseType { System::Windows::DependencyObjectType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Windows.DependencyObjectType" Usage="System.Windows.DependencyObjectType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Windows.DependencyObjectType" />의 직접 기본 클래스 <see cref="T:System.Windows.DependencyObjectType" />을 가져옵니다.</summary>
        <value>기본 클래스의 형식입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSystemType">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObjectType FromSystemType (Type systemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObjectType FromSystemType(class System.Type systemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSystemType (systemType As Type) As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObjectType ^ FromSystemType(Type ^ systemType);" />
      <MemberSignature Language="F#" Value="static member FromSystemType : Type -&gt; System.Windows.DependencyObjectType" Usage="System.Windows.DependencyObjectType.FromSystemType systemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="systemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="systemType">변환할 시스템 ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) 형식입니다.</param>
        <summary>지정된 시스템 ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) 형식을 나타내는 <see cref="T:System.Windows.DependencyObjectType" />을 반환합니다.</summary>
        <returns>시스템 ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) 형식을 나타내는 <see cref="T:System.Windows.DependencyObjectType" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 각 <xref:System.Windows.DependencyObject> 유지 관리를 <xref:System.Windows.DependencyObject.DependencyObjectType%2A> 반환 하는 속성을 <xref:System.Windows.DependencyObjectType>, 이렇게 하려면 특정 필요 하지만 <xref:System.Windows.DependencyObject> 인스턴스. 아직 없는 경우에이 정적 유틸리티 메서드를 사용할 수는 <xref:System.Windows.DependencyObject> 인스턴스 필요는 <xref:System.Windows.DependencyObjectType>합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.DependencyObjectType.FromSystemType%2A> 을 만듭니다는 <xref:System.Windows.DependencyObjectType> 의 형식에 따라는 <xref:System.Windows.Window> 클래스입니다.  
  
 [!code-csharp[PropertiesOvwSupport#DOTFromSystemType](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertiesOvwSupport/CSharp/page3.xaml.cs#dotfromsystemtype)]
 [!code-vb[PropertiesOvwSupport#DOTFromSystemType](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertiesOvwSupport/visualbasic/page3.xaml.vb#dotfromsystemtype)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dependencyObjectType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.DependencyObjectType" />의 해시 코드를 반환합니다.</summary>
        <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구현은 값으로 연결 되는 <xref:System.Windows.DependencyObjectType.Id%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : int" Usage="System.Windows.DependencyObjectType.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>일정한 시간의 배열 조회 작업에 대해 0부터 시작하는 고유 식별자를 가져옵니다.</summary>
        <value>내부 식별자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반 해시 함수를 사용 하지 마세요. 이 값에 보장이 없습니다. 애플리케이션 실행 간에 달라질 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstanceOfType">
      <MemberSignature Language="C#" Value="public bool IsInstanceOfType (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInstanceOfType(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInstanceOfType(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="member this.IsInstanceOfType : System.Windows.DependencyObject -&gt; bool" Usage="dependencyObjectType.IsInstanceOfType dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">현재 <see cref="T:System.Windows.DependencyObjectType" />와 비교할 개체입니다.</param>
        <summary>지정된 개체가 현재 <see cref="T:System.Windows.DependencyObjectType" />의 인스턴스인지를 확인합니다.</summary>
        <returns>현재 <see cref="T:System.Windows.DependencyObjectType" />이 나타내는 클래스가 <paramref name="d" />로 전달된 <see cref="T:System.Windows.DependencyObject" />의 상속 계층 구조에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체의 정확히 동일한 형식이 반환 `true`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubclassOf">
      <MemberSignature Language="C#" Value="public bool IsSubclassOf (System.Windows.DependencyObjectType dependencyObjectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubclassOf(class System.Windows.DependencyObjectType dependencyObjectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubclassOf(System::Windows::DependencyObjectType ^ dependencyObjectType);" />
      <MemberSignature Language="F#" Value="member this.IsSubclassOf : System.Windows.DependencyObjectType -&gt; bool" Usage="dependencyObjectType.IsSubclassOf dependencyObjectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObjectType" Type="System.Windows.DependencyObjectType" />
      </Parameters>
      <Docs>
        <param name="dependencyObjectType">비교할 <see cref="T:System.Windows.DependencyObjectType" />입니다.</param>
        <summary>현재 <see cref="T:System.Windows.DependencyObjectType" />이 지정된 <see cref="T:System.Windows.DependencyObjectType" />에서 파생되는지 여부를 확인합니다.</summary>
        <returns><paramref name="dependencyObjectType" /> 매개 변수와 현재 <see cref="T:System.Windows.DependencyObjectType" />이 클래스 형식을 나타내며 현재 <see cref="T:System.Windows.DependencyObjectType" />이 나타내는 클래스가 <paramref name="dependencyObjectType" />이 나타내는 클래스에서 파생되면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다. 이 메서드는 <paramref name="dependencyObjectType" />와 현재 <see cref="T:System.Windows.DependencyObjectType" />이 같은 클래스를 나타내는 경우에도 <see langword="false" />를 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.DependencyObjectType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표시되는 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 시스템 형식의 이름을 가져옵니다.</summary>
        <value>표시되는 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 시스템 형식의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변수의 <xref:System.Windows.DependencyObjectType.Name%2A> 는 동일한 이름 형식 이름의 문자열을 <xref:System.Type>입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="SystemType">
      <MemberSignature Language="C#" Value="public Type SystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type SystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.SystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ SystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemType : Type" Usage="System.Windows.DependencyObjectType.SystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.DependencyObjectType" />이 표시하는 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 시스템 형식을 가져옵니다.</summary>
        <value>이 <see cref="T:System.Windows.DependencyObjectType" />이 표시하는 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 시스템 형식입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>