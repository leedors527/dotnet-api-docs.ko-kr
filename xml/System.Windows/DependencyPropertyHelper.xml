<Type Name="DependencyPropertyHelper" FullName="System.Windows.DependencyPropertyHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a92c758627e8518b493edf17e3bc3f08b388edc5" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57962344" /></Metadata><TypeSignature Language="C#" Value="public static class DependencyPropertyHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyPropertyHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyPropertyHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type DependencyPropertyHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>종속성 속성의 유효 값에 대한 속성 시스템 소스를 보고하는 단일 도우미 메서드(<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />)를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 속성 시스템은 상당히 복잡 하며 다양 한 된 설정된 값 결정의 우선 순위에 따라 입력에서에서 잠재적으로 제공 되는 값을 합리화 합니다. 이러한 소스는 잠재적으로 런타임 코드에서 컴파일된 태그에서 제공 되거나 런타임에 사용자 설정에서 종속성 속성 값 시스템에 어떤 참가자 를호출할때얻은값을설정하는정확하게알아야유용할수있습니다때문에<xref:System.Windows.DependencyObject.GetValue%2A>런타임에 해당 속성에 있습니다. 가 의도 한 것 보다 값이 다른 원본에서 가져온, 응용 프로그램의 일부 측면을 조정 해야 합니다. 값의 소스 스타일, 테마, 로컬 값, 애니메이션, 바인딩 또는 테마나 시스템 리소스를 통해 시스템 설정과 같은 런타임 기반된 값 수 있습니다. 자세한 내용은 [종속성 속성 값 우선 순위](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)를 참조하세요.  
  
 개체에 대 한 속성의 특정 인스턴스 대신 일반적으로 속성에 보고 하는 다른 메커니즘은 속성 메타 데이터입니다. 호출 하 여 속성 메타 데이터를 검색 하려면 <xref:System.Windows.DependencyProperty.GetMetadata%2A> 반환 된 검사 및 <xref:System.Windows.PropertyMetadata> (또는 반환 된 속성 메타 데이터는를 캐스팅할 수 있는 몇 가지 가능한 파생된 클래스 중 하나).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetValueSource">
      <MemberSignature Language="C#" Value="public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.ValueSource GetValueSource(class System.Windows.DependencyObject dependencyObject, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::ValueSource GetValueSource(System::Windows::DependencyObject ^ dependencyObject, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member GetValueSource : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.ValueSource" Usage="System.Windows.DependencyPropertyHelper.GetValueSource (dependencyObject, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ValueSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">정보를 보고할 <paramref name="dependencyProperty" />가 들어 있는 요소입니다.</param>
        <param name="dependencyProperty">정보를 보고할 종속성 속성의 식별자입니다.</param>
        <summary>특정 <see cref="T:System.Windows.DependencyObject" />에서 지정된 종속성 속성의 다양한 메타데이터 및 속성 시스템 특성을 보고하는 구조체를 반환합니다.</summary>
        <returns>구체적인 정보를 보고하는 <see cref="T:System.Windows.ValueSource" /> 구조체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 런타임에 속성 값 결정 참가자는 속성에 영향을 줄 수 있도록 컨텍스트에서이 메서드를 호출 해야 합니다. 예를 들어 바인딩 활성화 되지 않고 속성에 로드 되는 요소 트리의 모든 참가자 요소 및 비동기 바인딩, 전파와 바인딩 소스 개체에 연결 된 경우가 아니면 합니다. 마찬가지로, 모든 필요한 테마 사전이 포함 하 여 리소스를 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsTemplatedValueDynamic">
      <MemberSignature Language="C#" Value="public static bool IsTemplatedValueDynamic (System.Windows.DependencyObject elementInTemplate, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTemplatedValueDynamic(class System.Windows.DependencyObject elementInTemplate, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTemplatedValueDynamic(System::Windows::DependencyObject ^ elementInTemplate, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member IsTemplatedValueDynamic : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic (elementInTemplate, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementInTemplate" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="elementInTemplate">템플릿 인스턴스에 속하는 요소입니다.</param>
        <param name="dependencyProperty">종속성 속성입니다.</param>
        <summary>지정한 요소가 변경 내용에 따라 런타임에 변경될 수 있는 지정한 속성의 값을 정의하는 템플릿의 인스턴스에 속하는지를 나타냅니다.</summary>
        <returns><paramref name="elementInTemplate" />이 변경 내용에 따라 런타임에 변경될 수 있는 지정한 속성의 값을 정의하는 템플릿의 인스턴스에 속하는 경우 <see langword="true" />이고, 그러지 않는 경우 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
변경 내용에 따라 런타임에 변경 될 수 있는 값의 예는 설정한 값 <xref:System.Windows.Data.Binding>하십시오 <xref:System.Windows.TemplateBindingExtension> 및 <xref:System.Windows.DynamicResourceExtension> 개체입니다.

이 메서드는 경우에서 자세히 제공 위치 값을 <xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType> 속성은 <xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>합니다.
정보 진단 도구를 사용 하 여 주로입니다.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>