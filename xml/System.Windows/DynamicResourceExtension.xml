<Type Name="DynamicResourceExtension" FullName="System.Windows.DynamicResourceExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9618bf5f2df653e7ee688c9bb124cb666a6a567b" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55334878" /></Metadata><TypeSignature Language="C#" Value="public class DynamicResourceExtension : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicResourceExtension extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DynamicResourceExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicResourceExtension&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicResourceExtension : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type DynamicResourceExtension = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DynamicResourceExtensionConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>XAML에서 만든 동적 리소스 참조를 지원하는 태그 확장을 구현합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동적 리소스 참조는 런타임 시 변경 될 수 있는 콘텐츠를 참조할 때 필요 합니다. 콘텐츠 변경 하는 이유는 애플리케이션에서 시작 될 수 있습니다 또는 외부 될 수 있습니다. 한 가지 예는 테마, 글꼴 설정을 등 사용자가 구성한 기본 설정을 보고 하는 시스템 리소스에 의존 하는 스타일을 포함 하는 경우.  
  
 이 클래스는 태그 확장 구현 합니다. 태그 확장 클래스 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 의 일부 측면에 대 한 인프라를 지원 하기 위해 주로 존재 합니다 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 프로세서 구현 및 클래스에서 일반적으로 호출 되지 않습니다 태그 확장에 의해 노출 되는 멤버 직접 사용자 코드입니다. 이 클래스는 특히 지원 합니다 [DynamicResource 태그 확장](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) 에서 사용량 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]합니다. 동적 리소스 참조에 대 한 자세한 내용은 참조 하세요. [DynamicResource 태그 확장](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)합니다.  
  
<a name="xamlTextUsage_DynamicResourceExtension"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보를 참조 하세요 [DynamicResource 태그 확장](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.DynamicResourceExtension" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicResourceExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DynamicResourceExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicResourceExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.DynamicResourceExtension" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicResourceExtension (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DynamicResourceExtension.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceKey As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicResourceExtension(System::Object ^ resourceKey);" />
      <MemberSignature Language="F#" Value="new System.Windows.DynamicResourceExtension : obj -&gt; System.Windows.DynamicResourceExtension" Usage="new System.Windows.DynamicResourceExtension resourceKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey">이 태그 확장이 참조하는 리소스의 키입니다.</param>
        <summary>제공된 초기 키를 사용하여 <see cref="T:System.Windows.DynamicResourceExtension" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자가 사용 됩니다 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 프로세서에 대 한 특성 구문 처리 하는 경우는 [DynamicResource 태그 확장](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DynamicResourceExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="dynamicResourceExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">태그 확장명 서비스를 제공할 수 있는 개체입니다.</param>
        <summary>이 확장이 적용되는 속성에 설정해야 하는 개체를 반환합니다. <see cref="T:System.Windows.DynamicResourceExtension" />의 경우 이 개체는 <see cref="P:System.Windows.DynamicResourceExtension.ResourceKey" />에 의해 키가 지정되는 현재 부모 체인의 리소스 사전에 있습니다.</summary>
        <returns>확장이 적용되는 속성에 설정할 개체입니다. 이 개체는 실제 값이 아니라 나중에 계산되는 식입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지원 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 프로세서 구현 하며 직접 호출할 수 없습니다. 합니다 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 프로세서 구현에서이 메서드를 사용 하 여 적절 한 처리에 대 한 [DynamicResource 태그 확장](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) 개체를 만드는 동안 값입니다.  
  
 제공 된 값으로 설정할 속성 유형 이어야 <xref:System.Windows.DependencyProperty>합니다.  
  
 이 구현을 기반으로 전달 된 모든 서비스에 의존 하지 않는 `serviceProvider`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="resourceKey" />를 제공하지 않는 확장에 값을 제공하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceKey">
      <MemberSignature Language="C#" Value="public object ResourceKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DynamicResourceExtension.ResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceKey As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceKey { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceKey : obj with get, set" Usage="System.Windows.DynamicResourceExtension.ResourceKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.ConstructorArgument("resourceKey")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 동적 리소스 참조가 지정하는 키를 가져오거나 설정합니다. 이 키는 중간 식을 통해 리소스 사전의 리소스를 조회하는 데 사용됩니다.</summary>
        <value>이 동적 리소스 참조가 지정하는 리소스 키입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 키는 강력한 형식화 되지 않은 있지만 일반적으로 문자열,으로 제공 되는 <xref:System.Type>, 또는 <xref:System.Windows.ResourceKey> 클래스를 파생 합니다.  
  
<a name="xamlTextUsage_ResourceKey"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보를 참조 하세요 [DynamicResource 태그 확장](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>