<Type Name="EventTrigger" FullName="System.Windows.EventTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3736e3fb8e6f1aa0a0343eb29b699848bf483626" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55389219" /></Metadata><TypeSignature Language="C#" Value="public class EventTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class EventTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type EventTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Actions")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>이벤트에 대한 응답으로 작업 집합을 적용하는 트리거를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Trigger> 개체는 <xref:System.Windows.Trigger.Setters%2A>, <xref:System.Windows.TriggerBase.EnterActions%2A>, 및 <xref:System.Windows.TriggerBase.ExitActions%2A> 변경 하거나 특정 속성의 상태에 따라 작업에 적용 되는 속성 동안 <xref:System.Windows.EventTrigger> 개체의 집합을 시작 <xref:System.Windows.EventTrigger.Actions%2A> 지정된 된 라우트된 이벤트가 발생할 때. 사용 하려는 예는 <xref:System.Windows.EventTrigger> 마우스 포인터를 특정 위로 가져갈 때 애니메이션의 집합을 시작 하려면 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 제어 합니다. 와 달리 <xref:System.Windows.Trigger>, <xref:System.Windows.EventTrigger> 종료 상태에 대 한 개념이 이벤트를 발생 시킨 조건이 더 이상 true 면 작업은 실행 취소할 되지 것입니다.  
  
 사용할 때는 <xref:System.Windows.EventTrigger>, 작업 컨트롤의 고유한 동작을 사용 하 여 방해 하지 않는 이벤트를 선택 해야 합니다. 와 같은 컨트롤 <xref:System.Windows.Controls.Button> 또는 <xref:System.Windows.Controls.TextBox> 마우스 클릭 같은 사용자 입력된 이벤트에서 특정 작업을 수행 하 고 키보드 이벤트입니다. 예를 들어 단추에 스타일을 지정 하 고 설정 하 려 합니다 <xref:System.Windows.Input.Mouse.MouseDown> 이벤트를 <xref:System.Windows.EventTrigger.RoutedEvent%2A> 의 <xref:System.Windows.EventTrigger>, <xref:System.Windows.EventTrigger> 이벤트 단추에서 먼저 처리 하기 때문에 적용 되지 않습니다. 대신 사용할 수는 <xref:System.Windows.Input.Mouse.PreviewMouseDown> 이벤트 또는 다른 이벤트입니다.  
  
 사용 중인 경우 데이터 바인딩을 사용 하는 경우는 <xref:System.Windows.Data.Binding.TargetUpdated> 설정한 이벤트를 <xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> 값에 <xref:System.Windows.Data.Binding> 개체를 `true` 이벤트를 발생 합니다.  
  
 추가 <xref:System.Windows.TriggerAction> 에 대 한 자식은 <xref:System.Windows.EventTrigger> 개체가 암시적으로 추가 합니다 <xref:System.Windows.TriggerActionCollection> 에 대 한를 <xref:System.Windows.EventTrigger> 개체입니다.  
  
   
  
## Examples  
 스타일에서 이벤트 트리거를 사용 하 여 애니메이션 효과 적용 하는 방법을 보여 주는이 예제는 <xref:System.Windows.UIElement.MouseEnter> 하 고 <xref:System.Windows.UIElement.MouseLeave> 의 이벤트를 <xref:System.Windows.FrameworkElement>. 이 예제에서는 합니다 <xref:System.Windows.Style> 에 <xref:System.Windows.Style.TargetType%2A> 로 <xref:System.Windows.Shapes.Rectangle>합니다. 따라서 한정 하지 않아도 됩니다 합니다 `MouseEnter` 및 `MouseLeave` 클래스 이름으로 이벤트 이름입니다.  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.EventSetter" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">스타일 및 템플릿 샘플 소개</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.EventTrigger" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.EventTrigger" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventTrigger (System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventTrigger(System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberSignature Language="F#" Value="new System.Windows.EventTrigger : System.Windows.RoutedEvent -&gt; System.Windows.EventTrigger" Usage="new System.Windows.EventTrigger routedEvent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="routedEvent">이 트리거를 활성화하는 <see cref="T:System.Windows.RoutedEvent" />입니다.</param>
        <summary>지정된 이벤트를 사용하여 <see cref="T:System.Windows.EventTrigger" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerActionCollection Actions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerActionCollection Actions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventTrigger.Actions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Actions As TriggerActionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerActionCollection ^ Actions { System::Windows::TriggerActionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Actions : System.Windows.TriggerActionCollection" Usage="System.Windows.EventTrigger.Actions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerActionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이벤트가 발생할 때 적용할 작업의 컬렉션을 가져옵니다.</summary>
        <value>기본값은 빈 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 달리 <xref:System.Windows.Trigger>, <xref:System.Windows.EventTrigger> 종료 상태에 대 한 개념이 이벤트를 발생 시킨 조건이 더 이상 true 면 작업은 실행 취소할 되지 것입니다.  
  
 추가 <xref:System.Windows.TriggerAction> 에 대 한 자식은 <xref:System.Windows.EventTrigger> 개체가 암시적으로 추가 합니다 <xref:System.Windows.TriggerActionCollection> 에 대 한를 <xref:System.Windows.EventTrigger> 개체입니다.  
  
> [!NOTE]
>  이 속성 설정할 수 있습니다 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 또는 컬렉션 개체에 액세스 하 고 추가 등의 다양 한 메서드를 사용 하 여 컬렉션 구문을 표시 합니다. 컬렉션 개체 자체를 액세스 하는 속성은 읽기 전용, 컬렉션 자체는 읽기 / 쓰기입니다.  
  
<a name="xamlPropertyElementUsage_Actions"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.Actions>  
    OneOrMoreTriggerActions  
  </object.Actions>  
</object>  
```  
  
<a name="xamlValues_Actions"></a>   
## <a name="xaml-values"></a>XAML 값  
 *OneOrMoreTriggerActions*  
 하나 이상의 <xref:System.Windows.TriggerAction> 개체입니다.  
  
   
  
## Examples  
 이 예에서는 스타일에서 이벤트 트리거를 사용 하 여 애니메이션 효과 적용 하는 방법에 설명 합니다 <xref:System.Windows.UIElement.MouseEnter> 및 <xref:System.Windows.UIElement.MouseLeave> 이벤트는 <xref:System.Windows.FrameworkElement>합니다. 위에서 설명한 대로 추가 <xref:System.Windows.TriggerAction> 에 대 한 자식을 <xref:System.Windows.EventTrigger> 개체가 암시적으로 추가 합니다 <xref:System.Windows.TriggerActionCollection> 에 대 한는 <xref:System.Windows.EventTrigger> 개체. 따라서이 예에서 `<EventTrigger.Actions>` 암시적입니다.  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">스타일 및 템플릿 샘플 소개</related>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected virtual void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddChild (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddChild(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddChild : obj -&gt; unit&#xA;override this.AddChild : obj -&gt; unit" Usage="eventTrigger.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">이 트리거의 <see cref="T:System.Windows.TriggerAction" /> 컬렉션에 추가할 <see cref="P:System.Windows.EventTrigger.Actions" /> 개체입니다.</param>
        <summary>지정된 개체를 현재 이벤트 트리거의 <see cref="P:System.Windows.EventTrigger.Actions" /> 컬렉션에 추가합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected virtual void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member AddText : string -&gt; unit&#xA;override this.AddText : string -&gt; unit" Usage="eventTrigger.AddText text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">이 매개 변수는 사용되지 않습니다.</param>
        <summary>이 메서드는 지원되지 않으며 이 메서드를 호출하면 예외가 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutedEvent">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent RoutedEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.RoutedEvent RoutedEvent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventTrigger.RoutedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property RoutedEvent As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutedEvent ^ RoutedEvent { System::Windows::RoutedEvent ^ get(); void set(System::Windows::RoutedEvent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RoutedEvent : System.Windows.RoutedEvent with get, set" Usage="System.Windows.EventTrigger.RoutedEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 트리거를 활성화할 <see cref="T:System.Windows.RoutedEvent" />를 가져오거나 설정합니다.</summary>
        <value>기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.EventTrigger>지정된 된 라우트된 이벤트가 발생할 때 작업의 집합을 적용 합니다. 사용 하려는 하는 예를 들어 <xref:System.Windows.EventTrigger>마우스 포인터를 특정 위로 가져갈 때 애니메이션 집합을 시작 하려면 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 제어 합니다.  
  
 경우 템플릿 또는이 포함 하는 스타일 <xref:System.Windows.EventTrigger> 되지 않은 합니다 `TargetType` 해야 품질 이벤트 이름을 사용 하 여 클래스 이름을 지정 하는 속성은 `ClassName.EventName` 구문.  
  
 <xref:System.Windows.EventTrigger> 개체는 이미 있는 이벤트를 처리할 수 없습니다 <xref:System.Windows.RoutedEventArgs.Handled%2A>합니다. 와 같은 컨트롤 <xref:System.Windows.Controls.Button> 또는 <xref:System.Windows.Controls.TextBox> 마우스 클릭 같은 사용자 입력된 이벤트에서 특정 작업을 수행 하 고 키보드 이벤트입니다. 예를 들어 단추에 스타일을 지정 하 고 설정 하 려 합니다 <xref:System.Windows.Input.Mouse.MouseDown> 이벤트를 <xref:System.Windows.EventTrigger.RoutedEvent%2A> 의 <xref:System.Windows.EventTrigger>, <xref:System.Windows.EventTrigger> 이벤트 단추에서 먼저 처리 하기 때문에 적용 되지 않습니다. 대신 사용할 수는 <xref:System.Windows.Input.Mouse.PreviewMouseDown> 이벤트 또는 다른 이벤트입니다.  
  
 사용 중인 경우 데이터 바인딩을 사용 하는 경우는 <xref:System.Windows.Data.Binding.TargetUpdated> 설정한 이벤트를 <xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> 의 값에 <xref:System.Windows.Data.Binding> 개체 이벤트를 발생에 대해 true로 합니다.  
  
   
  
## Examples  
 스타일에서 이벤트 트리거를 사용 하 여 애니메이션 효과 적용 하는 방법을 보여 주는이 예제는 <xref:System.Windows.UIElement.MouseEnter> 하 고 <xref:System.Windows.UIElement.MouseLeave> 의 이벤트를 <xref:System.Windows.FrameworkElement>. 이 예제에서는 합니다 <xref:System.Windows.Style> 에 <xref:System.Windows.Style.TargetType%2A> 로 <xref:System.Windows.Shapes.Rectangle>합니다. 따라서 한정 하지 않아도 됩니다 합니다 `MouseEnter` 및 `MouseLeave` 클래스 이름으로 이벤트 이름입니다.  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Windows.EventTrigger.RoutedEvent" /> 속성은 null일 수 없습니다.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">스타일 및 템플릿 샘플 소개</related>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeActions">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeActions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.ShouldSerializeActions" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeActions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeActions();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeActions : unit -&gt; bool" Usage="eventTrigger.ShouldSerializeActions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>serialization 프로세스가 이 클래스의 인스턴스에 있는 <see cref="P:System.Windows.EventTrigger.Actions" /> 속성의 효과적인 값을 직렬화하는지 여부를 반환합니다.</summary>
        <returns><see cref="P:System.Windows.EventTrigger.Actions" /> 속성 값을 직렬화해야 하면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventTrigger.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceName : string with get, set" Usage="System.Windows.EventTrigger.SourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 트리거를 활성화하는 이벤트를 사용하여 개체의 이름을 가져오거나 설정합니다. 요소 트리거 또는 템플릿 트리거에서만 사용됩니다.</summary>
        <value>기본값은 <see langword="null" />입니다. 이 속성 값이 <see langword="null" />이면 이벤트의 발생에 대해 모니터링되는 요소는 템플릿 기반 부모 또는 논리적 트리 루트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 위치 범위 내 모든 요소의 이름으로이 속성을 설정할 수 있습니다 트리거 컬렉션 (컬렉션이 <xref:System.Windows.EventTrigger> 의 일부인) 적용 됩니다. 이 포함 하는 템플릿 내에 있는 명명 된 요소를 일반적으로 이것이 <xref:System.Windows.EventTrigger>합니다. 설정 하는 경우는 <xref:System.Windows.FrameworkElement.Triggers%2A> 요소를 직접 고 속성은 해당 부모 요소의 범위 내에서 명명된 된 요소입니다.  
  
 사용 하는 개체 이름을 지정할 수 있습니다 합니다 [X:name 지시문](~/docs/framework/xaml-services/x-name-directive.md) 구문입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.EventTrigger" />를 사용한 후에는 수정할 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">추가할 자식 개체입니다.</param>
        <summary>자식 개체를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.EventTrigger> 인스턴스가 <xref:System.Windows.Markup.IAddChild> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">개체에 추가할 텍스트입니다.</param>
        <summary>노드의 텍스트 콘텐츠를 개체에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.EventTrigger> 인스턴스가 <xref:System.Windows.Markup.IAddChild> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>