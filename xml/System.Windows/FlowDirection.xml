<Type Name="FlowDirection" FullName="System.Windows.FlowDirection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1bea91fddd1e22e8d6fe2e834bcc015f112c606e" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55372813" /></Metadata><TypeSignature Language="C#" Value="public enum FlowDirection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FlowDirection extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FlowDirection" />
  <TypeSignature Language="VB.NET" Value="Public Enum FlowDirection" />
  <TypeSignature Language="C++ CLI" Value="public enum class FlowDirection" />
  <TypeSignature Language="F#" Value="type FlowDirection = " />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>텍스트 및 UI(사용자 인터페이스) 요소의 콘텐츠 흐름 방향을 지정하는 상수를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘텐츠 흐름 방향을 일반적으로 고유 흐름 방향을 표시 되는 언어에 해당 합니다. 히브리어 및 아랍어는 오른쪽에서 왼쪽에서 자연스럽 게 진행 되는 언어의 예를 제공 합니다. 영어, 독일어 및 러시아어 원래 왼쪽-오른쪽에서 진행 되는 언어의 예를 제공 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.FlowDirection> 열거형을 설정 하는 <xref:System.Windows.Documents.Block.FlowDirection%2A> 유동 콘텐츠의 특성 <xref:System.Windows.Documents.Block> 요소 (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_FlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_flowdirectionxaml)]  
  
 다음 예제에서는 사용 하는 방법의 <xref:System.Windows.FlowDirection> 열거형 프로그래밍 방식으로 합니다.  
  
 [!code-csharp[BlockSnippets#_Block_FlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_flowdirection)]
 [!code-vb[BlockSnippets#_Block_FlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_flowdirection)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="LeftToRight">
      <MemberSignature Language="C#" Value="LeftToRight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.FlowDirection LeftToRight = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FlowDirection.LeftToRight" />
      <MemberSignature Language="VB.NET" Value="LeftToRight" />
      <MemberSignature Language="C++ CLI" Value="LeftToRight" />
      <MemberSignature Language="F#" Value="LeftToRight = 0" Usage="System.Windows.FlowDirection.LeftToRight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>콘텐츠가 왼쪽에서 오른쪽으로 흐름을 나타냅니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="RightToLeft" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.FlowDirection RightToLeft = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FlowDirection.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="RightToLeft" />
      <MemberSignature Language="F#" Value="RightToLeft = 1" Usage="System.Windows.FlowDirection.RightToLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>콘텐츠가 오른쪽에서 왼쪽으로 흐름을 나타냅니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>