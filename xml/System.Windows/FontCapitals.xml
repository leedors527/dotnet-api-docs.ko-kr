<Type Name="FontCapitals" FullName="System.Windows.FontCapitals">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ba689bbbc49a479200e1a20f6b7bea65e46de6e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37549645" /></Metadata><TypeSignature Language="C#" Value="public enum FontCapitals" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FontCapitals extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FontCapitals" />
  <TypeSignature Language="VB.NET" Value="Public Enum FontCapitals" />
  <TypeSignature Language="C++ CLI" Value="public enum class FontCapitals" />
  <TypeSignature Language="F#" Value="type FontCapitals = " />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><see cref="T:System.Windows.Documents.Typography" /> 개체의 대문자 스타일을 설명합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대문자는 대문자 스타일의 문자 모양으로 텍스트를 렌더링하는 일련의 입력 체계 형식입니다. 일반적으로 텍스트를 모두 대문자로 렌더링하면 글자 사이의 간격이 너무 좁아 보이고 글자의 무게와 비율상 너무 무거워 보일 수 있습니다. OpenType 작은 대문자를 포함 하 여, 대문자, 꼬마 대문자, 제목, 및 대문자 간격에 대 한 다양 한 스타일 서식 지원 합니다. 이러한 스타일 서식을 사용하여 대문자 모양을 제어할 수 있습니다.  
  
 다음 텍스트는 “SmallCaps” 및 “AllSmallCaps”로 스타일이 지정된 문자 앞에 Pescadero 글꼴의 표준 대문자를 표시합니다. 이 경우 세 단어 모두 동일한 글꼴 크기가 사용됩니다.  
  
 ![OpenType 대문자를 사용 하 여 텍스트](~/add/media/opentypefont11.gif "OpenType 대문자를 사용 하 여 텍스트")  
대문자의 예  
  
 제목 대문자는 무게와 비율이 더 가볍고 일반 대문자보다 세련된 느낌을 주도록 디자인되었습니다. 제목 대문자는 일반적으로 큰 글꼴 크기의 머리글로 사용됩니다. 다음 텍스트는 Pescadero 글꼴의 일반 대문자 및 제목 대문자를 표시합니다. 두 번째 줄에 있는 텍스트의 획(stem) 너비가 더 좁은 것을 확인할 수 있습니다.  
  
 ![OpenType 제목 대문자를 사용 하 여 텍스트](~/add/media/opentypefont20.gif "OpenType 제목 대문자를 사용 하 여 텍스트")  
일반 및 제목 대문자의 예  
  
> [!NOTE]
>  대부분의 OpenType 글꼴에 사용할 수 있는 총 OpenType 기능의 하위 집합만 노출합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 속성을 사용 하 여 Pescadero 글꼴의 대문자를 정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Documents.Typography> 개체입니다. “SmallCaps” 형식을 사용하는 경우 선행 대문자는 무시됩니다.  
  
 [!code-xaml[OpenTypeFontSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#9)]   
  
 다음 코드 예제에서는 속성을 사용 하 여 Pescadero 글꼴의 제목 대문자를 정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Documents.Typography> 개체입니다.  
  
 [!code-xaml[OpenTypeFontSamples#OpenTypeFontSnippet17](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#opentypefontsnippet17)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllPetiteCaps">
      <MemberSignature Language="C#" Value="AllPetiteCaps" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.FontCapitals AllPetiteCaps = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FontCapitals.AllPetiteCaps" />
      <MemberSignature Language="VB.NET" Value="AllPetiteCaps" />
      <MemberSignature Language="C++ CLI" Value="AllPetiteCaps" />
      <MemberSignature Language="F#" Value="AllPetiteCaps = 3" Usage="System.Windows.FontCapitals.AllPetiteCaps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontCapitals</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>대문자와 소문자가 모두 거의 같은 높이의 대문자 모양 형식으로 바뀝니다. 소형 대문자는 작은 대문자보다 작습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="AllSmallCaps">
      <MemberSignature Language="C#" Value="AllSmallCaps" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.FontCapitals AllSmallCaps = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FontCapitals.AllSmallCaps" />
      <MemberSignature Language="VB.NET" Value="AllSmallCaps" />
      <MemberSignature Language="C++ CLI" Value="AllSmallCaps" />
      <MemberSignature Language="F#" Value="AllSmallCaps = 1" Usage="System.Windows.FontCapitals.AllSmallCaps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontCapitals</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>대문자와 소문자가 모두 거의 같은 높이의 대문자 모양 형식으로 바뀝니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Normal">
      <MemberSignature Language="C#" Value="Normal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.FontCapitals Normal = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FontCapitals.Normal" />
      <MemberSignature Language="VB.NET" Value="Normal" />
      <MemberSignature Language="C++ CLI" Value="Normal" />
      <MemberSignature Language="F#" Value="Normal = 0" Usage="System.Windows.FontCapitals.Normal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontCapitals</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>대문자가 정상적으로 렌더링됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="PetiteCaps">
      <MemberSignature Language="C#" Value="PetiteCaps" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.FontCapitals PetiteCaps = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FontCapitals.PetiteCaps" />
      <MemberSignature Language="VB.NET" Value="PetiteCaps" />
      <MemberSignature Language="C++ CLI" Value="PetiteCaps" />
      <MemberSignature Language="F#" Value="PetiteCaps = 4" Usage="System.Windows.FontCapitals.PetiteCaps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontCapitals</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>소문자가 거의 같은 높이의 대문자 모양 형식으로 바뀝니다. 소형 대문자는 작은 대문자보다 작습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="SmallCaps">
      <MemberSignature Language="C#" Value="SmallCaps" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.FontCapitals SmallCaps = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FontCapitals.SmallCaps" />
      <MemberSignature Language="VB.NET" Value="SmallCaps" />
      <MemberSignature Language="C++ CLI" Value="SmallCaps" />
      <MemberSignature Language="F#" Value="SmallCaps = 2" Usage="System.Windows.FontCapitals.SmallCaps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontCapitals</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>소문자가 거의 같은 높이의 대문자 모양 형식으로 바뀝니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Titling">
      <MemberSignature Language="C#" Value="Titling" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.FontCapitals Titling = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FontCapitals.Titling" />
      <MemberSignature Language="VB.NET" Value="Titling" />
      <MemberSignature Language="C++ CLI" Value="Titling" />
      <MemberSignature Language="F#" Value="Titling = 6" Usage="System.Windows.FontCapitals.Titling" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontCapitals</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>문자 모양 형식은 제목용으로 디자인된 조판 형식으로 바뀝니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unicase">
      <MemberSignature Language="C#" Value="Unicase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.FontCapitals Unicase = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FontCapitals.Unicase" />
      <MemberSignature Language="VB.NET" Value="Unicase" />
      <MemberSignature Language="C++ CLI" Value="Unicase" />
      <MemberSignature Language="F#" Value="Unicase = 5" Usage="System.Windows.FontCapitals.Unicase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontCapitals</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>대문자는 동일한 단일 대/소문자로 표시됩니다. 단일 대/소문자 글꼴에서는 서체 디자이너가 결정한 대문자 및 소문자 모양이 혼합된 대문자 및 소문자를 모두 렌더링합니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>