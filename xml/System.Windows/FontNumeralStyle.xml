<Type Name="FontNumeralStyle" FullName="System.Windows.FontNumeralStyle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3e707f65cb75fcdff2bd0fecce764a21cf13bf6" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37492456" /></Metadata><TypeSignature Language="C#" Value="public enum FontNumeralStyle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FontNumeralStyle extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FontNumeralStyle" />
  <TypeSignature Language="VB.NET" Value="Public Enum FontNumeralStyle" />
  <TypeSignature Language="C++ CLI" Value="public enum class FontNumeralStyle" />
  <TypeSignature Language="F#" Value="type FontNumeralStyle = " />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><see cref="T:System.Windows.Documents.Typography" /> 개체에 대한 숫자 스타일을 설명합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OpenType 글꼴에는 이전 스타일 숫자 형식을 지원합니다. 이 형식은 더 이상 표준이 아닌 스타일의 숫자를 표시할 때 유용합니다. 다음 텍스트는 Palatino Linotype 글꼴의 표준 및 이전 스타일 숫자 형식으로 된 18세기 날짜를 표시합니다.  
  
 ![OpenType 이전 스타일 숫자를 사용 하 여 텍스트](~/add/media/opentypefont24.gif "OpenType 이전 스타일 숫자를 사용 하 여 텍스트")  
표준 및 이전 스타일 숫자의 예  
  
 다음 텍스트는 Palatino Linotype 글꼴의 표준 숫자 뒤에 이전 스타일 숫자를 표시합니다.  
  
 ![OpenType 이전 스타일 숫자 집합을 사용 하 여 텍스트](~/add/media/opentypefont13.gif "OpenType 이전 스타일 숫자 집합을 사용 하 여 텍스트")  
표준 및 이전 스타일 숫자 집합의 예  
  
> [!NOTE]
>  대부분의 OpenType 글꼴에 사용할 수 있는 총 OpenType 기능의 하위 집합만 노출합니다. 지정한 글꼴에는 특정 기능을 지원 하지 않으면, 기본 문자 모양이 대신 사용 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 속성을 사용 하 여 Palatino Linotype 글꼴에 대 한 이전 스타일 숫자를 정의 하는 방법을 보여 줍니다는 <xref:System.Windows.Documents.Typography> 개체입니다.  
  
 [!code-xaml[OpenTypeFontSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/OpenTypeFontSamples/CS/PageOne.xaml#11)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Lining">
      <MemberSignature Language="C#" Value="Lining" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.FontNumeralStyle Lining = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FontNumeralStyle.Lining" />
      <MemberSignature Language="VB.NET" Value="Lining" />
      <MemberSignature Language="C++ CLI" Value="Lining" />
      <MemberSignature Language="F#" Value="Lining = 1" Usage="System.Windows.FontNumeralStyle.Lining" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>높이를 맞추는 숫자 스타일이 사용됩니다. 기본 문자 모양을 같은 높이의 숫자 형식으로 바꿉니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Normal">
      <MemberSignature Language="C#" Value="Normal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.FontNumeralStyle Normal = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FontNumeralStyle.Normal" />
      <MemberSignature Language="VB.NET" Value="Normal" />
      <MemberSignature Language="C++ CLI" Value="Normal" />
      <MemberSignature Language="F#" Value="Normal = 0" Usage="System.Windows.FontNumeralStyle.Normal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>기본 숫자 스타일이 사용됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="OldStyle">
      <MemberSignature Language="C#" Value="OldStyle" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.FontNumeralStyle OldStyle = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FontNumeralStyle.OldStyle" />
      <MemberSignature Language="VB.NET" Value="OldStyle" />
      <MemberSignature Language="C++ CLI" Value="OldStyle" />
      <MemberSignature Language="F#" Value="OldStyle = 2" Usage="System.Windows.FontNumeralStyle.OldStyle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontNumeralStyle</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>이전 숫자 스타일이 사용됩니다. 기본 문자 모양을 높이와 색이 소문자와 일치하는 숫자 스타일로 바꿉니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>