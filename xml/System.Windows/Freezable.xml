<Type Name="Freezable" FullName="System.Windows.Freezable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97fc92af0ea25eec6f71bb4a67579fbfd994f7b4" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52214107" /></Metadata><TypeSignature Language="C#" Value="public abstract class Freezable : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Freezable extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Freezable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Freezable&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Freezable abstract : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type Freezable = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>수정 가능한 상태와 읽기 전용(고정) 상태를 가진 개체를 정의합니다. <see cref="T:System.Windows.Freezable" />에서 파생된 클래스는 자세한 변경 알림을 제공하며, 변경할 수 없도록 설정될 수 있고, 자신을 복제할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Freezable> 클래스는 도움이 되는 특별 한 기능 수정 하거나 복사 하는 데 비용이 많이 드는 개체를 사용 하는 경우 응용 프로그램 성능 향상을 제공 합니다. 예가 <xref:System.Windows.Freezable> 개체는 다음과 같습니다.  
  
-   <xref:System.Windows.Media.Brush>  
  
-   <xref:System.Windows.Media.Pen>  
  
-   <xref:System.Windows.Media.Geometry>  
  
-   <xref:System.Windows.Media.Transform>  
  
-   <xref:System.Windows.Media.Animation.AnimationTimeline>  
  
## <a name="deriving-from-freezable"></a>Freezable에서 파생  
 파생 된 클래스 <xref:System.Windows.Freezable> 다음과 같은 기능이 있습니다.  
  
-   특수 상태: 읽기 전용 (고정된) 상태와 쓰기 가능한 상태입니다.  
  
-   스레드 보안: 고정 된 <xref:System.Windows.Freezable> 개체는 스레드 간에 공유할 수 있습니다.  
  
-   자세한 변경 알림: 달리 <xref:System.Windows.DependencyObject> 개체는 <xref:System.Windows.Freezable> 하위 속성 값을 변경 하는 경우 변경 알림을 제공 하는 개체입니다.  
  
-   쉬운 복제: Freezable 클래스가 이미 전체 복제를 만드는 여러 메서드를 구현 합니다.  
  
 사용 및 사용자 고유의 만들기에 대 한 내용은 <xref:System.Windows.Freezable> 개체를 참조 하세요 [Freezable 개체 개요](~/docs/framework/wpf/advanced/freezable-objects-overview.md)합니다.  
  
 ]]></format>
    </remarks>
    <threadsafe>모든 공용 <see langword="static" /> 이 형식의 멤버는 스레드로부터 안전 합니다. 인터페이스 멤버는 스레드로부터 안전하지 않습니다.  
  
경우는 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />, <see cref="T:System.Windows.Freezable" /> 개체는 생성 된 스레드에서만에서 액세스할 수 있습니다. 다른 스레드에서 throw에서 액세스를 시도 <see cref="T:System.InvalidOperationException" />합니다. 합니다 <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> 고 <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> 메서드에 대 한 올바른 스레드로 마샬링 지원을 제공 합니다.  
  
경우 해당 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="true" />, <see cref="T:System.Windows.Freezable" /> 자유 스레드 개체는 합니다.  자세한 내용은 [Freezable 개체 개요](~/docs/framework/wpf/advanced/freezable-objects-overview.md)를 참조하세요.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Freezable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Freezable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Freezable" /> 파생 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추상 클래스의 보호 된 접근성 생성자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFreeze">
      <MemberSignature Language="C#" Value="public bool CanFreeze { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFreeze" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Freezable.CanFreeze" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanFreeze As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanFreeze { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFreeze : bool" Usage="System.Windows.Freezable.CanFreeze" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체를 수정 불가능으로 설정할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>개체를 수정 불가능으로 설정할 수 있거나 이미 수정 불가능이면 <see langword="true" />이고, 설정할 수 없으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>이 메서드 구현에서 사용 합니다 <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> 메서드를 <paramref name="isChecking" /> 로 설정 <see langword="true" /> 결정할 여부를 <see cref="T:System.Windows.Freezable" /> 수정할 수. 파생된 클래스에서이 속성의 동작을 수정 하려면 재정의 <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> 메서드.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Freezable.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : EventHandler " Usage="member this.Changed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Freezable" /> 또는 여기에 들어 있는 개체가 수정될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추가 하거나 현재 개체를 수정할 수 없을 때 이벤트 처리기를 제거 하려는 경우 (때 합니다 <xref:System.Windows.Freezable.IsFrozen%2A> 속성은 `true`), 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Freezable" Usage="freezable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>개체 값의 전체 복사본을 만들어 <see cref="T:System.Windows.Freezable" />의 수정 가능한 복제본을 만듭니다. 개체의 종속성 속성을 복사하는 경우 이 메서드는 더 이상 확인되지 않을 수도 있는 식을 복사하지만 애니메이션 또는 해당 현재 값은 복사하지 않습니다.</summary>
        <returns>현재 개체의 수정 가능한 복제본입니다. 소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true." />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Freezable.Clone%2A> 하 고 <xref:System.Windows.Freezable.CloneCurrentValue%2A> 메서드 생성의 수정 가능한 복제본 고정 <xref:System.Windows.Freezable> 개체 (도 복제 <xref:System.Windows.Freezable> 고정 되지 않은 개체). 복제는 현재 개체의 전체 복사본을 효과적으로 합니다.  
  
 다음 표에서 간의 차이점을 요약 합니다 <xref:System.Windows.Freezable.Clone%2A> 및 <xref:System.Windows.Freezable.CloneCurrentValue%2A> 메서드.  
  
|작업|Clone 메서드 동작|CloneCurrentValue 메서드 동작|  
|------------|---------------------------|---------------------------------------|  
|식이 포함 된 종속성 속성 복사|식 복사 되지만, 더 이상 확인할 수 없습니다. 자세한 내용은 [Freezable 개체 개요](~/docs/framework/wpf/advanced/freezable-objects-overview.md)를 참조하세요.|식 자체 아닌 식의 현재 값을 복사 됩니다.|  
|애니메이션된 종속성 속성 복사|속성의 기본 (애니메이션이 적용 되지 않은) 값이 복사 됩니다. 애니메이션은 복사 되지 않습니다.|속성의 현재 애니메이션된 값이 복사 됩니다. 애니메이션은 복사 되지 않습니다.|  
  
 참고가 설정 되지 않은 속성은 복사 되지 않습니다. 설정 되지 않은 속성에는 고정 된 기본값이 경우 <xref:System.Windows.Freezable>, 속성 값의 수정 가능한 복제본에서 고정 된 상태로 유지 됩니다.  
  
## <a name="move-a-freezable-between-threads"></a>스레드 간 Freezable 이동  
 이 메서드는 이동 하는 데 유용할 수 있습니다는 <xref:System.Windows.Freezable> 스레드 사이입니다. 먼저 확인 합니다 <xref:System.Windows.Freezable> 를 호출 하 여 수정할 수 없도록 해당 <xref:System.Windows.Freezable.Freeze%2A> 메서드. 이제 다른 스레드가 액세스할 수 합니다 <xref:System.Windows.Freezable> 하 고 로컬 <xref:System.Windows.Freezable.Clone%2A> 액세스할 수 있는 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>이 메서드는 <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> 복제본을 만듭니다. 파생된 클래스에서이 메서드의 동작을 수정 하려면 재정의 <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> 메서드.</para></block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected virtual void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="freezable.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">복제할 개체입니다.</param>
        <summary>기본(애니메이션이 적용되지 않은) 속성 값을 사용하여 인스턴스를 지정된 <see cref="T:System.Windows.Freezable" />의 복제본(전체 복사본)으로 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Windows.Freezable.Clone%2A> 메서드는 호출 하지 않은 수 사용자 코드에서 직접 제외 하 고이 메서드를 재정의 하는 동안 기본 구현을 호출 하는 경우. 현재 개체의 수정 가능한 복사본을 만들려면 호출 <xref:System.Windows.Freezable.Clone%2A> 이 메서드를 직접 호출 하는 대신 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 하는 경우 <see cref="T:System.Windows.Freezable" />,이 메서드를 재정의 해야 할 수 있습니다. 재정의 하는 이유는 다음과 같습니다. 
-파생된 클래스는 종속성 속성을 통해 노출 되지 않는 데이터를 갖습니다.  
  
-파생 된 클래스 재정의 하 여 구현할 수 없는 추가 초기화 작업을 수행 해야 <see cref="M:System.Windows.Freezable.CreateInstanceCore" />합니다. 파생된 클래스에서 구현 하는 경우 예를 들어이 적용 됩니다 <see cref="T:System.ComponentModel.ISupportInitialize" />합니다.  
  
종속성 속성의 모든 데이터를 저장 하는 추가 초기화 작업을 수행할 필요가 없습니다 클래스 재정의 하지 않아도 <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />합니다.  
  
모든 구현이이 메서드의 기본 구현을 반드시 합니다. 구현만 기본 구현에 의해 수행 되지 않는 작업을 수행 해야 합니다. 기본 구현에는 내부 식을 비롯 한 모든 쓰기 가능한 로컬에서 설정 속성을의 전체 복사본입니다.  
  
개체에 데이터 바인딩된 종속성 속성이 있으면 식 복사 되지만 더 이상 확인할 수 없습니다. 데이터 바인딩된 개체를 복제 하는 방법에 대 한 자세한 내용은 참조 하세요. [Freezable 개체 개요](~/docs/framework/wpf/advanced/freezable-objects-overview.md)합니다. 개체에 애니메이션이 적용 된 종속성 속성이 해당 속성의 기본 (애니메이션이 적용 되지 않은) 값이 복사 됩니다. 애니메이션은 복사 되지 않습니다.  
  
메모는 설정 되지 않은 속성은 복사 되지 않으며 읽기 전용 속성입니다. 이러한 속성에는 고정 된 기본값이 있으면 <see cref="T:System.Windows.Freezable" />, 속성 값의 수정 가능한 복제본에서 고정 된 상태로 유지 됩니다.  
  
다음은이 메서드에 대 한 예상 되는 동작을 요약: 
모든 복사본을 포함 하는 생성 된 복사- <see cref="T:System.Windows.Freezable" /> 하위 개체입니다.  
  
-설정 및 읽기 전용 속성 복사 되지 않습니다.  
  
식 복사 됩니다.  
  
-None 이러한 하위 개체는 생성 시 고정 됩니다.  
  
자체-복사가 고정 되는 것은 아닙니다.  
  
-애니메이션은 복사 되지 않습니다.  
  
속성-기본 값은 복사, 유효 하지 않음 애니메이션된 값입니다.</para></block>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Freezable" Usage="freezable.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 값을 사용하여 <see cref="T:System.Windows.Freezable" />의 수정 가능한 복제본(전체 복사본)을 만듭니다.</summary>
        <returns>현재 개체의 수정 가능한 복제본입니다. 소스의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성이 <see langword="true." />인 경우에도 복제된 개체의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Freezable.Clone%2A> 하 고 <xref:System.Windows.Freezable.CloneCurrentValue%2A> 메서드 생성의 수정 가능한 복제본 고정 <xref:System.Windows.Freezable> 개체 (도 복제 <xref:System.Windows.Freezable> 고정 되지 않은 개체). 복제는 현재 개체의 전체 복사본을 효과적으로 합니다.  
  
 다음 표에서 간의 차이점을 요약 합니다 <xref:System.Windows.Freezable.Clone%2A> 및 <xref:System.Windows.Freezable.CloneCurrentValue%2A> 메서드.  
  
|작업|Clone 메서드 동작|CloneCurrentValue 메서드 동작|  
|------------|---------------------------|---------------------------------------|  
|식이 포함 된 종속성 속성 복사|식 복사 되지만, 더 이상 확인할 수 없습니다. 자세한 내용은 [Freezable 개체 개요](~/docs/framework/wpf/advanced/freezable-objects-overview.md)를 참조하세요.|식 자체 아닌 식의 현재 값을 복사 됩니다.|  
|애니메이션된 종속성 속성 복사|속성의 기본 (애니메이션이 적용 되지 않은) 값이 복사 됩니다. 애니메이션은 복사 되지 않습니다.|속성의 현재 애니메이션된 값이 복사 됩니다. 애니메이션은 복사 되지 않습니다.|  
  
 참고가 설정 되지 않은 속성은 복사 되지 않습니다. 설정 되지 않은 속성에는 고정 된 기본값이 경우 <xref:System.Windows.Freezable>, 속성 값의 수정 가능한 복제본에서 고정 된 상태로 유지 됩니다.  
  
## <a name="move-a-freezable-between-threads"></a>스레드 간 Freezable 이동  
 이 메서드는 이동 하는 데 유용할 수 있습니다는 <xref:System.Windows.Freezable> 스레드 사이입니다. 먼저 확인 합니다 <xref:System.Windows.Freezable> 를 사용 하 여 수정할 수 없도록 해당 <xref:System.Windows.Freezable.Freeze%2A> 메서드. 이제 다른 스레드가 액세스할 수는 <xref:System.Windows.Freezable> 액세스할 수 있는 로컬 복제본을 확인 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>이 메서드는 사용 된 <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> 복제본; 생성 방법 <see cref="T:System.Windows.Freezable" /> 재정의 구현자 <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> 복사 생성 시 고정 되어 있지 않고 확인 해야 합니다.</para></block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected virtual void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="freezable.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">복제할 <see cref="T:System.Windows.Freezable" />입니다.</param>
        <summary>현재 속성 값을 사용하여 이 인스턴스를 지정된 <see cref="T:System.Windows.Freezable" />의 수정 가능한 클론(전체 복사본)으로 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Windows.Freezable.CloneCurrentValue%2A> 메서드는 호출 하지 않은 수 사용자 코드에서 직접 제외 하 고이 메서드를 재정의 하는 동안 기본 구현을 호출 하는 경우. 현재 개체의 수정 가능한 복사본을 만들려면 호출 <xref:System.Windows.Freezable.CloneCurrentValue%2A> 이 메서드를 직접 호출 하는 대신 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 하는 경우 <see cref="T:System.Windows.Freezable" />,이 메서드를 재정의 해야 할 수 있습니다. 재정의 하는 이유는 다음과 같습니다. 
-파생된 클래스는 종속성 속성을 통해 노출 되지 않는 데이터를 갖습니다.  
  
-파생 된 클래스 재정의 하 여 구현할 수 없는 추가 초기화 작업을 수행 해야 <see cref="M:System.Windows.Freezable.CreateInstanceCore" />합니다. 파생된 클래스에서 구현 하는 경우 예를 들어이 적용 됩니다 <see cref="T:System.ComponentModel.ISupportInitialize" />합니다.  
  
종속성 속성의 모든 데이터를 저장 하는 추가 초기화 작업을 수행할 필요가 없습니다 클래스 재정의 하지 않아도 <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />합니다.  
  
모든 구현이이 메서드의 기본 구현을 반드시 합니다. 구현만 기본 구현에 의해 수행 되지 않는 작업을 수행 해야 합니다. 기본 구현에는 쓰기 가능한에서 로컬로 설정 된 모든 속성의 전체 복사본입니다. 식 (예: 데이터 바인딩)를 사용 하 여 종속성 속성을 포함 하는 개체, 식 자체 아닌 식의 현재 값을 복사 됩니다.  
  
개체에서 종속성 속성에 애니메이션 효과가 적용 하는 경우에 해당 속성의 현재 애니메이션된 값을 복사 되 되지만 애니메이션 되지 않습니다.  
  
메모는 설정 되지 않은 속성은 복사 되지 않으며 읽기 전용 속성입니다. 이러한 속성에는 고정 된 기본값이 있으면 <see cref="T:System.Windows.Freezable" />, 속성 값의 수정 가능한 복제본에서 고정 된 상태로 유지 됩니다.  
  
다음은이 메서드에 대 한 예상 되는 동작을 요약합니다.  
  
모든 복사본을 포함 하는 생성 된 복사- <see cref="T:System.Windows.Freezable" /> 하위 개체입니다.  
  
-설정 및 읽기 전용 속성 복사 되지 않습니다.  
  
-속성 애니메이션이 적용 되어 있는 경우 해당 현재 값은 복사 이지만 애니메이션 자체에 아닙니다.  
  
-None 이러한 하위 개체는 생성 시 고정 됩니다.  
  
자체-복사가 고정 되는 것은 아닙니다.</para></block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected System.Windows.Freezable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Freezable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateInstance () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Freezable ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : unit -&gt; System.Windows.Freezable" Usage="freezable.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Freezable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <returns>새 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 보호 된 메서드 및 동작에 대 한 실제 개체별 구현을 재정의 구현에 따라 다릅니다.는 <xref:System.Windows.Freezable.CreateInstanceCore%2A> 메서드를 내부적으로이 메서드를 호출 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="freezable.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 구현되는 경우 <see cref="T:System.Windows.Freezable" /> 파생 클래스의 새 인스턴스를 만듭니다.</summary>
        <returns>새 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직접 (제외 하면 기본 구현에서 호출)이이 메서드를 호출 하지 마세요. 이 메서드는 내부적으로 <xref:System.Windows.Freezable.CreateInstance%2A> 메서드를 때마다의 새 인스턴스를 <xref:System.Windows.Freezable> 만들어집니다.  
  
   
  
## Examples  
 다음 예제에서는 일반적인 구현은 <xref:System.Windows.Freezable.CreateInstanceCore%2A>합니다.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>모든 <see cref="T:System.Windows.Freezable" /> 파생된 클래스에서이 메서드를 구현 해야 합니다. 일반적인 구현은 단순히 기본 생성자를 호출 하 고 결과 반환 하는 것입니다.</para></block>
        <altmember cref="M:System.Windows.Freezable.CreateInstance" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Freeze">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Freezable" /> 개체를 수정할 수 없게 만들고 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성을 <see langword="true" />로 설정하거나, <see cref="T:System.Windows.Freezable" /> 개체를 수정할 수 없게 만들 수 있는지 테스트합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public void Freeze ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Freeze() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Freeze" />
      <MemberSignature Language="VB.NET" Value="Public Sub Freeze ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Freeze();" />
      <MemberSignature Language="F#" Value="member this.Freeze : unit -&gt; unit" Usage="freezable.Freeze " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 개체를 수정할 수 없게 설정하고 해당 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성을 <see langword="true" />로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문제를 방지 하려면는 <xref:System.InvalidOperationException> 이 메서드를 호출 하는 경우 확인 합니다 <xref:System.Windows.Freezable.CanFreeze%2A> 속성을 여부를 <xref:System.Windows.Freezable> 수 없게이 메서드를 호출 하기 전에.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Freezable" />은 수정할 수 없도록 설정할 수 없습니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드는 사용 합니다 <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> 메서드를는 <see cref="T:System.Windows.Freezable" /> 수정할 수 없게 합니다. 중단 동작을 수정 하려면 재정의 <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> 메서드.</para></block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="protected internal static bool Freeze (System.Windows.Freezable freezable, bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig bool Freeze(class System.Windows.Freezable freezable, bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static bool Freeze(System::Windows::Freezable ^ freezable, bool isChecking);" />
      <MemberSignature Language="F#" Value="static member Freeze : System.Windows.Freezable * bool -&gt; bool" Usage="System.Windows.Freezable.Freeze (freezable, isChecking)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="freezable" Type="System.Windows.Freezable" />
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="freezable">확인할 개체 또는 수정할 수 없게 만들 개체입니다. <paramref name="isChecking" />이 <see langword="true" />이면 이 개체를 수정할 수 없게 만들 수 있는지 확인합니다. <paramref name="isChecking" />이 <see langword="false" />이면 가능한 경우 개체를 수정할 수 없게 만듭니다.</param>
        <param name="isChecking">개체를 실제로 고정하지 않고 고정할 수 있는지 여부를 반환하려면 <see langword="true" />이고, 개체를 실제로 고정하려면 <see langword="false" />입니다.</param>
        <summary><paramref name="isChecking" /> 매개 변수가 <see langword="true" />이면 이 메서드는 지정된 <see cref="T:System.Windows.Freezable" />을 수정할 수 없게 만들 수 있는지 여부를 알려 줍니다. <paramref name="isChecking" /> 매개 변수가 <see langword="false" />이면 이 메서드는 지정된 <see cref="T:System.Windows.Freezable" />을 수정할 수 없게 만들고 이 작업에 성공했는지 여부를 알려 줍니다.</summary>
        <returns><paramref name="isChecking" />이 <see langword="true" />인 경우 이 메서드는 지정된 <see cref="T:System.Windows.Freezable" />을 수정할 수 없게 만들 수 있으면 <see langword="true" />를, 그렇지 않으면 <see langword="false" />를 반환합니다. <paramref name="isChecking" />이 <see langword="false" />인 경우 이 메서드는 지정된 <see cref="T:System.Windows.Freezable" />을 이제 수정할 수 없으면 <see langword="true" />를, 수정할 수 없게 만들 수 없으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 하는 경우가 아니면이 메서드를 호출 하지 마세요 <xref:System.Windows.Freezable> 재정의 <xref:System.Windows.Freezable.FreezeCore%2A> 메서드.  이 메서드를 사용할 수는 <xref:System.Windows.Freezable.FreezeCore%2A> 자체는 클래스 데이터 멤버를 고정 하는 방법 <xref:System.Windows.Freezable> 개체입니다.  
  
 잘 지 내에서이 메서드를 다시 호출 하는 것을 <xref:System.Windows.Freezable> 개체 (수정할 수 없게) 이미 고정 되어 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="isChecking" />이 <see langword="false" />인 경우 <paramref name="freezable" />을 수정할 수 없게 만드는 작업이 실패하면 개체의 상태를 알 수 없게 되며, 부분적으로 고정될 수도 있습니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드는 사용 합니다 <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> 메서드를는 <see cref="T:System.Windows.Freezable" /> 수정할 수 없게 합니다. 중단 동작을 수정 하려면 재정의 <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> 메서드.</para></block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected virtual bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="abstract member FreezeCore : bool -&gt; bool&#xA;override this.FreezeCore : bool -&gt; bool" Usage="freezable.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">개체를 실제로 고정하지 않고 고정할 수 있는지 여부를 반환하려면 <see langword="true" />이고, 개체를 실제로 고정하려면 <see langword="false" />입니다.</param>
        <summary><see cref="T:System.Windows.Freezable" />을 수정할 수 없게 만들거나, 수정할 수 없게 만들 수 있는지 테스트합니다.</summary>
        <returns><paramref name="isChecking" />이 <see langword="true" />인 경우 이 메서드는 <see cref="T:System.Windows.Freezable" />을 수정할 수 없게 만들 수 있으면 <see langword="true" />를, 그렇지 않으면 <see langword="false" />를 반환합니다. <paramref name="isChecking" />이 <see langword="false" />인 경우 이 메서드는 지정된 <see cref="T:System.Windows.Freezable" />을 이제 수정할 수 없으면 <see langword="true" />를, 수정할 수 없게 만들 수 없으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직접 (제외 하면 기본 구현에서 호출)이이 메서드를 호출 하지 마세요. 이 메서드는 내부적으로 호출 합니다 <xref:System.Windows.Freezable.CanFreeze%2A> 속성 (사용 하 여 `isChecking` 같음 `true`) 및 <xref:System.Windows.Freezable.Freeze%2A> 메서드 (사용 하 여 `isChecking` 같음 `false`).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="T:System.Windows.Freezable" /> 구현자는 클래스는 종속성 속성을 사용 하 여 저장 되지 않은 데이터를 포함 하는 경우이 메서드를 재정의 해야 합니다.  
  
일반적인 구현은 기본를 호출한 다음 정적 호출 <see cref="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" /> 메서드를 모두 <see cref="T:System.Windows.Freezable" /> 형식의 반환을 클래스에 들어 있는 속성을 <see langword="true" /> 또는 경우에 모든 속성이 고정 된 (수 있는 고정 된을 지정 하는 경우 <see langword="true" /> 에 대 한 <paramref name="isChecking" />).</para></block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
        <altmember cref="P:System.Windows.Freezable.CanFreeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozen">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable GetAsFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable GetAsFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetAsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsFrozen () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ GetAsFrozen();" />
      <MemberSignature Language="F#" Value="member this.GetAsFrozen : unit -&gt; System.Windows.Freezable" Usage="freezable.GetAsFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>애니메이션이 적용되지 않은 기준 속성 값을 사용하여 <see cref="T:System.Windows.Freezable" />의 고정된 복사본을 만듭니다. 복사본이 고정되므로 고정된 하위 개체는 모두 참조를 통해 복사됩니다.</summary>
        <returns><see cref="T:System.Windows.Freezable" />의 고정된 복사본입니다. 복사본의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="true" />로 설정됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 확인 해야 합니다 <xref:System.Windows.Freezable.CanFreeze%2A> 되어 있는지 확인 하려면이 메서드를 호출 하기 전에 속성은 <xref:System.Windows.Freezable> 고정할 수 있습니다. 이 메서드를 사용 하는 것은 사용 하 여 복사본을 만드는 것과 유사 합니다 <xref:System.Windows.Freezable.Clone%2A> 한 다음 사용 하 여 고정 및를 <xref:System.Windows.Freezable.Freeze%2A> 메서드.  
  
 <xref:System.Windows.Freezable.GetAsFrozen%2A> 하 고 <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> 복제 하지 마세요 있으므로 메서드 복사 성능이 향상 <xref:System.Windows.Freezable> 하위 개체는는 이미 고정 된;만 복사 되 고 참조로 합니다.  
  
 다음 표에서 간의 차이점을 요약 합니다 <xref:System.Windows.Freezable.GetAsFrozen%2A> 및 <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> 메서드.  
  
|작업|GetAsFrozen 메서드 동작|GetCurrentValueAsFrozen 메서드 동작|  
|------------|---------------------------------|---------------------------------------------|  
|식이 포함 된 종속성 속성 복사|메서드에서 throw 한 <xref:System.InvalidOperationException> 수 없어서 <xref:System.Windows.Freezable.Freeze%2A> 속성입니다.|식 자체 아닌 식의 현재 값을 복사 됩니다.|  
|애니메이션된 종속성 속성 복사|속성의 기본 (애니메이션이 적용 되지 않은) 값이 복사 됩니다. 애니메이션은 복사 되지 않습니다.|속성의 현재 애니메이션된 값이 복사 됩니다. 애니메이션은 복사 되지 않습니다.|  
  
 메모는 설정 되지 않은 속성은 복사 되지 않으며 읽기 전용 속성입니다.  
  
 복사본을 만드는 합니다 <xref:System.Windows.Freezable> 즉 고정된 되지를 사용 하 여는 <xref:System.Windows.Freezable.Clone%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">식 또는 애니메이션이 적용된 속성이 들어 있어서 <see cref="T:System.Windows.Freezable" />을 고정할 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>이 메서드를 사용 하 여 가상 <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" /> 메서드 복제본을 만듭니다.</para></block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected virtual void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezable.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">복사할 인스턴스입니다.</param>
        <summary>기본(애니메이션이 적용되지 않은) 속성 값을 사용하여 인스턴스를 지정된 <see cref="T:System.Windows.Freezable" />의 고정된 복제본으로 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Windows.Freezable.GetAsFrozen%2A> 메서드는 호출 하지 않은 수 사용자 코드에서 직접 제외 하 고이 메서드를 재정의 하는 동안 기본 구현을 호출 하는 경우. 현재 개체의 고정 된 복사본을 만들려면 호출 <xref:System.Windows.Freezable.GetAsFrozen%2A> 이 메서드를 직접 호출 하는 대신 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 하는 경우 <see cref="T:System.Windows.Freezable" /> 이 메서드를 재정의 해야 할 수 있습니다. 재정의 하는 이유는 다음과 같습니다. 
-파생된 클래스는 종속성 속성을 통해 노출 되지 않는 데이터를 갖습니다.  
  
-파생 된 클래스 재정의 하 여 구현할 수 없는 추가 초기화 작업을 수행 해야 <see cref="M:System.Windows.Freezable.CreateInstanceCore" />합니다. 파생된 클래스에서 구현 하는 경우 예를 들어이 적용 됩니다 <see cref="T:System.ComponentModel.ISupportInitialize" />합니다.  
  
종속성 속성의 모든 데이터를 저장 하는 추가 초기화 작업을 수행할 필요가 없습니다 클래스 재정의 하지 않아도 <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />합니다.  
  
모든 구현이이 메서드의 기본 구현을 반드시 합니다. 구현만 기본 구현에 의해 수행 되지 않는 작업을 수행 해야 합니다. 기본 구현에는 모든 고정 되지 않은 freezable 다른 모든 쓰기 가능한의 단순 복사본을 로컬로 포함 된 설정 속성의 전체 복사본입니다. 개체 데이터 바인딩 종속성 속성에 식 복사 됩니다 되지만 더 이상 해결할 수 없습니다. 데이터 바인딩된 개체를 복제 하는 방법에 대 한 자세한 내용은 참조 하세요. [Freezable 개체 개요](~/docs/framework/wpf/advanced/freezable-objects-overview.md)합니다. 개체에 애니메이션이 적용 된 종속성 속성이 해당 속성의 기본 (애니메이션이 적용 되지 않은) 값이 복사 됩니다. 애니메이션은 복사 되지 않습니다.  
  
메모는 설정 되지 않은 속성은 복사 되지 않으며 읽기 전용 속성입니다.  
  
이 메서드를 재정의 하는 경우에 기본 구현을 호출 해야 합니다.  
  
필요가 없습니다 <see cref="M:System.Windows.Freezable.Freeze" /> 값 복사 됩니다.  결과 고정 한 <see cref="M:System.Windows.Freezable.GetAsFrozen" /> 반환 되기 전에 합니다.</para></block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozen" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozen">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable GetCurrentValueAsFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable GetCurrentValueAsFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentValueAsFrozen () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ GetCurrentValueAsFrozen();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentValueAsFrozen : unit -&gt; System.Windows.Freezable" Usage="freezable.GetCurrentValueAsFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 속성 값을 사용하여 <see cref="T:System.Windows.Freezable" />의 고정된 복사본을 만듭니다. 복사본이 고정되므로 고정된 하위 개체는 모두 참조를 통해 복사됩니다.</summary>
        <returns><see cref="T:System.Windows.Freezable" />의 고정된 복사본입니다. 복사본의 <see cref="P:System.Windows.Freezable.IsFrozen" /> 속성은 <see langword="true" />로 설정됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하는 것은 사용 하 여 복사본을 만드는 것과 유사 합니다 <xref:System.Windows.Freezable.CloneCurrentValue%2A> 한 다음 사용 하 여 고정 및를 <xref:System.Windows.Freezable.Freeze%2A> 메서드.  
  
 <xref:System.Windows.Freezable.GetAsFrozen%2A> 하 고 <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> 복제 하지 마세요 있으므로 메서드 복사 성능이 향상 <xref:System.Windows.Freezable> 하위 개체는는 이미 고정 된;만 복사 되 고 참조로 합니다.  
  
 다음 표에서 간의 차이점을 요약 합니다 <xref:System.Windows.Freezable.GetAsFrozen%2A> 및 <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> 메서드.  
  
|작업|GetAsFrozen 메서드 동작|GetCurrentValueAsFrozen 메서드 동작|  
|------------|---------------------------------|---------------------------------------------|  
|식이 포함 된 종속성 속성 복사|메서드에서 throw 한 <xref:System.InvalidOperationException> 수 없어서 <xref:System.Windows.Freezable.Freeze%2A> 속성입니다.|식 자체 아닌 식의 현재 값을 복사 됩니다.|  
|애니메이션된 종속성 속성 복사|속성의 기본 (애니메이션이 적용 되지 않은) 값이 복사 됩니다. 애니메이션은 복사 되지 않습니다.|속성의 현재 애니메이션된 값이 복사 됩니다. 애니메이션은 복사 되지 않습니다.|  
  
 메모는 설정 되지 않은 속성은 복사 되지 않으며 읽기 전용 속성입니다.  
  
 복사본을 만드는 합니다 <xref:System.Windows.Freezable> 즉 고정된 되지를 사용 하 여는 <xref:System.Windows.Freezable.CloneCurrentValue%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>이 메서드를 사용 하 여 가상 <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" /> 메서드 복제본을 만듭니다.</para></block>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected virtual void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezable.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">복사 및 고정할 <see cref="T:System.Windows.Freezable" />입니다.</param>
        <summary>현재 인스턴스를 지정된 <see cref="T:System.Windows.Freezable" />의 고정 클론으로 만듭니다. 개체에 애니메이션 효과를 준 종속성 속성이 있는 경우 애니메이션 효과를 준 현재 값이 복사됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> 메서드는 호출 하지 않은 수 사용자 코드에서 직접 제외 하 고이 메서드를 재정의 하는 동안 기본 구현을 호출 하는 경우. 현재 개체의 고정 된 복사본을 만들려면 호출 <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> 이 메서드를 직접 호출 하는 대신 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 하는 경우 <see cref="T:System.Windows.Freezable" />,이 메서드를 재정의 해야 할 수 있습니다. 재정의 하는 이유는 다음과 같습니다. 
-파생된 클래스는 종속성 속성을 통해 노출 되지 않는 데이터를 갖습니다.  
  
-파생 된 클래스 재정의 하 여 구현할 수 없는 추가 초기화 작업을 수행 해야 <see cref="M:System.Windows.Freezable.CreateInstanceCore" />합니다. 파생된 클래스에서 구현 하는 경우 예를 들어이 적용 됩니다 <see cref="T:System.ComponentModel.ISupportInitialize" />합니다.  
  
종속성 속성의 모든 데이터를 저장 하는 추가 초기화 작업을 수행할 필요가 없습니다 클래스 재정의 하지 않아도 <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />합니다.  
  
모든 구현이이 메서드의 기본 구현을 반드시 합니다. 구현만 기본 구현에 의해 수행 되지 않는 작업을 수행 해야 합니다. 기본 구현에서는 새 <see cref="T:System.Windows.Freezable" /> 를 사용 하는 <see cref="M:System.Windows.Freezable.CreateInstance" /> 고정 되지 않은 freezable의 전체 복사본을 메서드 및 다른 모든 쓰기 가능한의 단순 복사본은 로컬로 포함 된 속성을 설정 합니다. 개체에 데이터 바인딩된 종속성 속성이 데이터 바인딩을 복사 됩니다 되지만 더 이상 해결할 수 없습니다. 데이터 바인딩된 개체를 복제 하는 방법에 대 한 자세한 내용은 참조 하세요. [Freezable 개체 개요](~/docs/framework/wpf/advanced/freezable-objects-overview.md)합니다. 개체에서 종속성 속성에 애니메이션 효과가 적용 하는 경우에 해당 속성의 현재 애니메이션된 값을 복사 되 되지만 애니메이션 되지 않습니다.  
  
내에서 읽기 전용 종속성 속성을 <see cref="T:System.Windows.Freezable" /> 이 기본 구현에서 복사 되지 않습니다.  
  
이 메서드를 재정의 하는 경우에 기본 구현을 호출 해야 합니다.  
  
필요가 없습니다 <see cref="M:System.Windows.Freezable.Freeze" /> 값 복사 됩니다.  결과 고정 한 <see cref="M:System.Windows.Freezable.GetAsFrozen" /> 반환 되기 전에 합니다.</para></block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrozen">
      <MemberSignature Language="C#" Value="public bool IsFrozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Freezable.IsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrozen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFrozen : bool" Usage="System.Windows.Freezable.IsFrozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체가 현재 수정 가능한지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>개체가 고정되어 있어 수정할 수 없으면 <see langword="true" />이고, 개체를 수정할 수 있으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체를 수정 하는 경우 해당 <xref:System.Windows.Freezable.IsFrozen%2A> 속성은 `true` throw는 <xref:System.InvalidOperationException>합니다.  
  
 이 속성은 개체 모델 관점에서 읽기 전용. 에 대 한 설명서의 일부 <xref:System.Windows.Freezable> 동작을 언급할 수 있습니다 "설정 <xref:System.Windows.Freezable.IsFrozen%2A> 하 `true`" 또는 다른 방법의 동작을 설명할 때 <xref:System.Windows.Freezable>, 있지만이 동작에서에서 발생 하는 내부적으로 클래스 인스턴스 때 인스턴스 메서드는 추상 클래스 내에 있는 개인 변수를 조작 합니다. 이 속성의 값을 설정 하려면 호출 해야 <xref:System.Windows.Freezable.Freeze%2A>합니다. 변경 하는 일회성 작업을 효과적으로 이것이 <xref:System.Windows.Freezable.IsFrozen%2A> 초기 기본값과에서 속성 `false` 상태는 `true` 상태입니다. 값을 설정할 수는 없습니다 다시 `false`입니다. 대신 원래에서 만든 전체 복사본을 변경할 수 있습니다 (참조는 <xref:System.Windows.Freezable.Clone%2A> 메서드). 이 동작은 의도적인 것 이며 사례에 적용 하는 경우 파생된 클래스 동작 방식 여기서는 <xref:System.Windows.Freezable> 패턴은 유용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : unit -&gt; unit&#xA;override this.OnChanged : unit -&gt; unit" Usage="freezable.OnChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Windows.Freezable" /> 개체가 수정될 때 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 때마다는 <xref:System.Windows.Freezable.Changed> 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 된 클래스를 구현 하는 경우 <see cref="T:System.Windows.Freezable" />, 작업을 수행 하려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="E:System.Windows.Freezable.Changed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OnFreezablePropertyChanged">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>방금 수정된 <see cref="T:System.Windows.DependencyObject" /> 형식 데이터 멤버에 대한 적절한 컨텍스트 포인터를 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnFreezablePropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFreezablePropertyChanged(class System.Windows.DependencyObject oldValue, class System.Windows.DependencyObject newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFreezablePropertyChanged (oldValue As DependencyObject, newValue As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFreezablePropertyChanged(System::Windows::DependencyObject ^ oldValue, System::Windows::DependencyObject ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.OnFreezablePropertyChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="freezable.OnFreezablePropertyChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="newValue" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldValue">데이터 멤버의 이전 값입니다.</param>
        <param name="newValue">데이터 멤버의 현재 값입니다.</param>
        <summary>방금 설정된 <see cref="T:System.Windows.DependencyObjectType" /> 데이터 멤버에 대한 적절한 컨텍스트 포인터를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출 해야 <xref:System.Windows.Freezable> 상속자 때마다를 <xref:System.Windows.DependencyObject> 으로 저장 되지 않은 데이터 멤버는 <xref:System.Windows.DependencyProperty> 설정 됩니다.  
  
 이 메서드를 호출할 필요가 없습니다 <xref:System.Windows.DependencyObject> 를 사용 하 여 저장 된 데이터 멤버는 <xref:System.Windows.DependencyProperty>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreezablePropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue, System.Windows.DependencyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFreezablePropertyChanged(class System.Windows.DependencyObject oldValue, class System.Windows.DependencyObject newValue, class System.Windows.DependencyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFreezablePropertyChanged (oldValue As DependencyObject, newValue As DependencyObject, property As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFreezablePropertyChanged(System::Windows::DependencyObject ^ oldValue, System::Windows::DependencyObject ^ newValue, System::Windows::DependencyProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.OnFreezablePropertyChanged : System.Windows.DependencyObject * System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; unit" Usage="freezable.OnFreezablePropertyChanged (oldValue, newValue, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="newValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="oldValue">데이터 멤버의 이전 값입니다.</param>
        <param name="newValue">데이터 멤버의 현재 값입니다.</param>
        <param name="property">변경된 속성입니다.</param>
        <summary>이 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="freezable.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">변경된 속성, 해당하는 이전 값 및 새 값에 관한 정보가 포함된 이벤트 데이터입니다.</param>
        <summary><see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />의 <see cref="T:System.Windows.DependencyObject" /> 구현을 재정의하여 <see cref="T:System.Windows.Freezable" /> 형식의 변화하는 종속성 속성에 대한 응답으로 <see cref="E:System.Windows.Freezable.Changed" /> 처리기도 호출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 데이터에 대 한 정보가는 <xref:System.Windows.Freezable> 자체입니다. 하위 속성 정보를 통해 얻어야 합니다 <xref:System.Windows.Freezable.Changed> 처리기입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPreamble">
      <MemberSignature Language="C#" Value="protected void ReadPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.ReadPreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadPreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadPreamble();" />
      <MemberSignature Language="F#" Value="member this.ReadPreamble : unit -&gt; unit" Usage="freezable.ReadPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>유효한 스레드에서 <see cref="T:System.Windows.Freezable" />에 액세스하고 있는지 확인합니다. <see cref="T:System.Windows.Freezable" /> 상속자는 종속성 속성이 아닌 데이터 멤버를 읽는 [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]의 시작 부분에서 이 메서드를 호출해야 합니다.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>파생 된 클래스 <see cref="T:System.Windows.Freezable" /> 를 호출 해야 합니다 <see cref="M:System.Windows.Freezable.ReadPreamble" /> 메서드는 종속성 속성이 아닌는 모든 멤버에 액세스 하기 전에 합니다. <see cref="M:System.Windows.Freezable.WritePreamble" /> 이러한 멤버에 쓰기 전에 메서드를 호출 해야 합니다.  
  
이 메서드가 효과적으로 아무 작업도 수행 하지 보다 호출 <see cref="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />합니다.</para></block>
        <altmember cref="M:System.Windows.Freezable.WritePreamble" />
      </Docs>
    </Member>
    <Member MemberName="WritePostscript">
      <MemberSignature Language="C#" Value="protected void WritePostscript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePostscript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.WritePostscript" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePostscript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePostscript();" />
      <MemberSignature Language="F#" Value="member this.WritePostscript : unit -&gt; unit" Usage="freezable.WritePostscript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Freezable" />에 대한 <see cref="E:System.Windows.Freezable.Changed" /> 이벤트를 발생시키고 해당 <see cref="M:System.Windows.Freezable.OnChanged" /> 메서드를 호출합니다. <see cref="T:System.Windows.Freezable" />에서 파생된 클래스는 종속성 속성으로 저장되지 않은 클래스 멤버를 수정하는 모든 API의 끝에서 이 메서드를 호출해야 합니다.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>파생 된 클래스 <see cref="T:System.Windows.Freezable" /> 으로 저장 하지 않는 클래스 멤버를 수정 하는 API 끝에이 메서드를 호출 해야는 <see cref="T:System.Windows.DependencyProperty" />합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="WritePreamble">
      <MemberSignature Language="C#" Value="protected void WritePreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.WritePreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePreamble();" />
      <MemberSignature Language="F#" Value="member this.WritePreamble : unit -&gt; unit" Usage="freezable.WritePreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Freezable" />이 고정되어 있지 않고 유효한 스레드 컨텍스트에서 액세스되고 있는지 확인합니다. <see cref="T:System.Windows.Freezable" /> 상속자는 종속성 속성이 아닌 데이터 멤버에 쓰는 [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]의 시작 부분에서 이 메서드를 호출해야 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출 <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> 스레딩 컨텍스트에 액세스할 수 있으며, 경우에 예외를 throw 할는 <xref:System.Windows.Freezable> 인스턴스가 이미 고정 되어 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Freezable" /> 인스턴스가 고정되어 있어 해당 멤버에 쓸 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>파생 된 클래스 <see cref="T:System.Windows.Freezable" /> 를 호출 해야 <see cref="M:System.Windows.Freezable.WritePreamble" /> 는 종속성 속성이 아닌 멤버에 쓰기 전에 합니다. 호출 하는 경우 <see cref="M:System.Windows.Freezable.WritePreamble" /> 에 [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]에 대 한 호출을 생략할 수 있습니다 <see cref="M:System.Windows.Freezable.ReadPreamble" />합니다.</para></block>
        <altmember cref="M:System.Windows.Freezable.ReadPreamble" />
      </Docs>
    </Member>
  </Members>
</Type>