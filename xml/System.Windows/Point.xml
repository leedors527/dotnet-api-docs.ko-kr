<Type Name="Point" FullName="System.Windows.Point">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2c279ef12f5819cae2f31f3029df8f0abad7bc93" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55408706" /></Metadata><TypeSignature Language="C#" Value="public struct Point : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Point extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Point" />
  <TypeSignature Language="VB.NET" Value="Public Structure Point&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Point : IFormattable" />
  <TypeSignature Language="F#" Value="type Point = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PointConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.PointValueSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>2차원 공간에서 x 및 y 좌표 쌍을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML을 사이의 구분 기호에는 <xref:System.Windows.Point.X%2A> 및 <xref:System.Windows.Point.Y%2A> 의 값을 <xref:System.Windows.Point> 쉼표 또는 공백을 일 수 있습니다.  
  
 일부 문화권 마침표 대신 소수 구분 기호로 쉼표 문자를 사용할 수 있습니다. 고정 문화권에 대 한 처리 하는 XAML 대부분의 XAML 프로세서 구현에서 EN-US로 기본값과 소수 구분 기호로 마침표를 예상 합니다. 지정 하는 경우 소수 구분 기호로 쉼표를 사용 하면 안을 <xref:System.Windows.Point> , XAML에서의 문자열 형식 변환을 사용 하 여 충돌 하는 때문에 <xref:System.Windows.Point> 특성 값에는 <xref:System.Windows.Point.X%2A> 및 <xref:System.Windows.Point.Y%2A> 구성 요소입니다.  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a>XAML 특성 사용  
  
```  
<object property="x,y"/>  
-or-  
<object property="x y"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a>XAML 값  
 *x*  
 이 <xref:System.Windows.Point>의 x좌표입니다.  
  
 *y*  
 이 <xref:System.Windows.Point>의 y좌표입니다.  
  
   
  
## Examples  
 다음 예제에서는 두 가지 경우를 확인 하는 방법을 보여 줍니다 <xref:System.Windows.Point> 구조체가 동일 합니다.  값을 할당 하는 방법을 보여 줍니다는 <xref:System.Windows.Point> 구조를 선언할 때 및 구조를 선언한 후 구성 합니다.  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Point(double x, double y);" />
      <MemberSignature Language="F#" Value="new System.Windows.Point : double * double -&gt; System.Windows.Point" Usage="new System.Windows.Point (x, y)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">새 <see cref="T:System.Windows.Point" /> 구조체의 X 좌표입니다.</param>
        <param name="y">새 <see cref="T:System.Windows.Point" /> 구조체의 Y 좌표입니다.</param>
        <summary>지정된 좌표가 들어 있는 새 <see cref="T:System.Windows.Point" /> 구조체를 만듭니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Add (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Add(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Add(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Add : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Add (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">추가할 <see cref="T:System.Windows.Point" /> 구조체입니다.</param>
        <param name="vector">추가할 <see cref="T:System.Windows.Vector" /> 구조체입니다.</param>
        <summary><see cref="T:System.Windows.Vector" />에 <see cref="T:System.Windows.Point" />를 추가하고 그 결과를 <see cref="T:System.Windows.Point" /> 구조체로 반환합니다.</summary>
        <returns><paramref name="point" />과 <paramref name="vector" />의 합을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추가 <xref:System.Windows.Point> 구조체를 <xref:System.Windows.Point> 구조가 허용 되지 않습니다.  
  
   
  
## Examples  
 추가 하는이 예제를 <xref:System.Windows.Point> 에 <xref:System.Windows.Vector> 으로 결과 반환 하 고는 <xref:System.Windows.Vector> 구조.  
  
 [!code-csharp[PointExamples_snip#AddPointAndVectorExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#addpointandvectorexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>두 <see cref="T:System.Windows.Point" /> 구조체가 같은지 여부를 비교합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="point.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">비교할 <see cref="T:System.Object" />입니다.</param>
        <summary>지정된 <see cref="T:System.Object" />가 <see cref="T:System.Windows.Point" />인지 여부와 이 <see cref="T:System.Windows.Point" />와 동일한 좌표가 들어 있는지 여부를 확인합니다.</summary>
        <returns><paramref name="o" />가 <see cref="T:System.Windows.Point" />이고 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 값이 이 <see cref="T:System.Windows.Point" />와 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Point> 좌표를 사용 하 여 나와 <xref:System.Double> 값입니다. 때문에 값을 <xref:System.Double> 간 비교에 연산을 수행 하는 경우 정밀도 떨어질 수 <xref:System.Windows.Point> 논리적으로 동일한 값을 실패할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 두 가지 경우를 확인 하는 방법을 보여 줍니다 <xref:System.Windows.Point> 구조체가 다른 비정적을 사용 하 여 <xref:System.Windows.Point.Equals%2A> 메서드.  
  
 [!code-csharp[PointExamples_snip#NonStaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#nonstaticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Point value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Point value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Point value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Point -&gt; bool" Usage="point.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="value">이 인스턴스와 비교할 점입니다.</param>
        <summary>두 <see cref="T:System.Windows.Point" /> 구조체가 같은지 여부를 비교합니다.</summary>
        <returns>두 <see cref="T:System.Windows.Point" /> 구조체의 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 값이 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Point> 좌표를 사용 하 여 표현 됩니다 <xref:System.Double> 값입니다. 때문에 값을 <xref:System.Double> 간 비교에서 작동할 때 정밀도 떨어질 수 <xref:System.Windows.Point> 논리적으로 동일한 값을 실패할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.Equals (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">비교할 첫 번째 점입니다.</param>
        <param name="point2">비교할 두 번째 점입니다.</param>
        <summary>두 <see cref="T:System.Windows.Point" /> 구조체가 같은지 여부를 비교합니다.</summary>
        <returns><paramref name="point1" />과 <paramref name="point2" />의 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 값이 서로 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 점 좌표를 사용 하 여 나와 <xref:System.Double> 값입니다. 때문에 값을 <xref:System.Double> 간 비교에 연산을 수행 하는 경우 정밀도 떨어질 수 <xref:System.Windows.Point> 논리적으로 동일한 값을 실패할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 두 가지 경우를 확인 하는 방법을 보여 줍니다 <xref:System.Windows.Point> 구조체가 정적을 사용 하 여 동일한 <xref:System.Windows.Point.Equals%2A> 메서드.  
  
 [!code-csharp[PointExamples_snip#StaticEqualsExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#staticequalsexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="point.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Windows.Point" />의 해시 코드를 반환합니다.</summary>
        <returns>이 <see cref="T:System.Windows.Point" /> 구조체의 해시 코드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에 대 한 해시 코드를 가져오는 방법을 보여 줍니다는 <xref:System.Windows.Point> 구조입니다.  
  
 [!code-csharp[PointExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Multiply (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Multiply(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="System.Windows.Point.Multiply (point, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point">변형할 점입니다.</param>
        <param name="matrix">변형 행렬입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Point" /> 구조체로 지정된 <see cref="T:System.Windows.Media.Matrix" /> 구조체를 변환합니다.</summary>
        <returns>변환된 점입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는를 곱하는 방법을 <xref:System.Windows.Point> 구조체를 통해를 <xref:System.Windows.Media.Matrix> 를 사용 하 여 구조체를 <xref:System.Windows.Point.Multiply%2A> 메서드.  
  
 [!code-csharp[PointExamples_snip#MultiplyPointByMatrixExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#multiplypointbymatrixexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="point.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">지정된 점을 오프셋할 크기입니다. 
 <see cref="P:System.Windows.Point.X" />좌표입니다.</param>
        <param name="offsetY">점의 
<see cref="P:System.Windows.Point.Y" /> 좌표를 오프셋할 크기입니다.</param>
        <summary>점의 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 좌표를 지정된 크기만큼 오프셋합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 작업은 해당 추가 하는 <xref:System.Windows.Point> 에 <xref:System.Windows.Vector>합니다.  
  
 호출 하는 <xref:System.Windows.Point.Offset%2A> 메서드는 변경할 수 있는 경우에 효과가 있습니다 합니다 <xref:System.Windows.Point.X%2A> 및 <xref:System.Windows.Point.Y%2A> 속성을 직접. 때문에 <xref:System.Windows.Point> 값 형식인를 참조 하는 경우는 <xref:System.Windows.Point> 개체 속성 또는 인덱서를 사용 하 여 개체에 대 한 참조가 아니라 개체의 복사본을 얻을 있습니다. 변경 하려는 경우 <xref:System.Windows.Point.X%2A> 또는 <xref:System.Windows.Point.Y%2A> 속성 또는 인덱서에서 참조에서 컴파일러 오류가 발생 합니다. 마찬가지로, 호출 <xref:System.Windows.Point.Offset%2A> 속성 또는 인덱서에 기본 개체는 변경 되지 것입니다.  값을 변경 하려는 경우는 <xref:System.Windows.Point> 속성 또는 인덱서를으로 참조 되는, 새 <xref:System.Windows.Point>, 해당 필드를 수정 하 고 할당을 <xref:System.Windows.Point> 속성 또는 인덱서를 다시 합니다.  
  
   
  
## Examples  
 다음 예제에서는 오프셋 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Point.X%2A> 및 <xref:System.Windows.Point.Y%2A> 의 값을 <xref:System.Windows.Point> 구조입니다.  
  
 [!code-csharp[PointExamples_snip#OffsetExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#offsetexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator + (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Addition(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator +(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point + vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">변환할 점입니다.</param>
        <param name="vector"><paramref name="point" />를 변환할 크기입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Point" />에 따라 지정된 <see cref="T:System.Windows.Vector" />를 변환한 다음 결과를 반환합니다.</summary>
        <returns>지정된 벡터에 따라 지정된 점을 변환한 결과입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 추가 하는 방법을 보여 줍니다는 <xref:System.Windows.Point> 에 <xref:System.Windows.Vector> 오버 로드 된 (+)를 사용 하 여 연산자입니다.  
  
 [!code-csharp[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedadditionoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedAdditionOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedadditionoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="point1 = point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">비교할 첫 번째 <see cref="T:System.Windows.Point" /> 구조체입니다.</param>
        <param name="point2">비교할 두 번째 <see cref="T:System.Windows.Point" /> 구조체입니다.</param>
        <summary>두 <see cref="T:System.Windows.Point" /> 구조체가 같은지 여부를 비교합니다.</summary>
        <returns><paramref name="point1" />과 <paramref name="point2" />의 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 좌표가 모두 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 점의 좌표는 설명 <xref:System.Double> 값입니다. 때문에 값 <xref:System.Double> 간 비교에서 산술 작업을 수행할 때 정밀도 떨어질 수 <xref:System.Windows.Point> 논리적으로 동일한 값을 실패할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 두 가지 경우를 확인 하는 방법을 보여 줍니다 <xref:System.Windows.Point> 구조체가 다른 오버 로드 된 (= =) 연산자를 사용 합니다.  
  
 [!code-csharp[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Point" />를 <see cref="T:System.Windows.Size" /> 또는 <see cref="T:System.Windows.Vector" />로 변환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Size (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Size op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Size(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Size" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">변환할 점입니다.</param>
        <summary><see cref="T:System.Windows.Size" />가 이 점의 <see cref="P:System.Windows.Size.Width" /> 값과 같고 <see cref="P:System.Windows.Point.X" />가 이 점의 <see cref="P:System.Windows.Size.Height" /> 값과 같은 <see cref="P:System.Windows.Point.Y" /> 구조체를 만듭니다.</summary>
        <returns><see cref="T:System.Windows.Size" />가 이 점의 <see cref="P:System.Windows.Size.Width" /> 값과 같고 <see cref="P:System.Windows.Point.X" />가 이 점의 <see cref="P:System.Windows.Size.Height" /> 값과 같은 <see cref="P:System.Windows.Point.Y" /> 구조체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Windows.Size> 구조는 음수가 될 수 점의 절대 값 <xref:System.Windows.Point.X%2A> 및 <xref:System.Windows.Point.Y%2A> 속성이 사용 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 명시적으로 변환 하는 방법을 보여 줍니다는 <xref:System.Windows.Point> 에 <xref:System.Windows.Size>합니다.  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorsizeexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorSizeExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorsizeexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Vector (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Explicit(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Vector(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.op_Explicit point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">변환할 점입니다.</param>
        <summary><see cref="T:System.Windows.Vector" /> 값이 점의 <see cref="P:System.Windows.Vector.X" /> 값과 같고 <see cref="P:System.Windows.Point.X" /> 값이 점의 <see cref="P:System.Windows.Vector.Y" /> 값과 같은 <see cref="P:System.Windows.Point.Y" /> 구조체를 만듭니다.</summary>
        <returns><see cref="P:System.Windows.Vector.X" /> 값이 점의 <see cref="P:System.Windows.Point.X" /> 값과 같고 <see cref="P:System.Windows.Vector.Y" /> 값이 점의 <see cref="P:System.Windows.Point.Y" /> 값과 같은 벡터입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 명시적으로 변환 하는 방법을 보여 줍니다는 <xref:System.Windows.Point> 에 <xref:System.Windows.Vector>합니다.  
  
 [!code-csharp[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedexplicitoperatorvectorexample)]
 [!code-vb[PointExamples_snip#OverloadedExplicitOperatorVectorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedexplicitoperatorvectorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (point1 As Point, point2 As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Point * System.Windows.Point -&gt; bool" Usage="System.Windows.Point.op_Inequality (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">비교할 첫 번째 점입니다.</param>
        <param name="point2">비교할 두 번째 점입니다.</param>
        <summary>두 <see cref="T:System.Windows.Point" /> 구조체가 다른지 여부를 비교합니다.</summary>
        <returns><paramref name="point1" /> 및 <paramref name="point2" />에 다른 <see cref="P:System.Windows.Point.X" /> 또는 <see cref="P:System.Windows.Point.Y" /> 좌표가 있으면 <see langword="true" />이고, <paramref name="point1" /> 및 <paramref name="point2" />에 동일한 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 좌표가 있이면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 점의 <xref:System.Windows.Point.X%2A> 하 고 <xref:System.Windows.Point.Y%2A> 좌표를 사용 하 여 나와 <xref:System.Double> 값입니다. 때문에 <xref:System.Double> 값에는 두 비교에 연산을 수행 하는 경우 전체 자릿수가 손실 될 수 있습니다 <xref:System.Windows.Point> 논리적으로 동일한 값을 실패할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 두 여부를 확인 하는 방법을 보여 줍니다 <xref:System.Windows.Point> 구조체가 다른 오버 로드 된를 사용 하 여 (! =) 연산자.  
  
 [!code-csharp[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator * (System.Windows.Point point, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Multiply(valuetype System.Windows.Point point, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator *(System::Windows::Point point, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Point * System.Windows.Media.Matrix -&gt; System.Windows.Point" Usage="point * matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="point">변형할 점입니다.</param>
        <param name="matrix">변형 행렬입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Point" />에 따라 지정된 <see cref="T:System.Windows.Media.Matrix" />를 변환합니다.</summary>
        <returns>지정된 매트릭스를 사용하여 지정된 점을 변환한 결과입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제를 곱하는 방법을 보여 줍니다는 <xref:System.Windows.Point> 여는 <xref:System.Windows.Media.Matrix> 오버 로드 된 (*) 연산자를 사용 하 여 합니다.  
  
 [!code-csharp[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedmultiplypointbymatrixoperatorexample)]
 [!code-vb[PointExamples_snip#OverloadedMultiplyPointByMatrixOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedmultiplypointbymatrixoperatorexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 <see cref="T:System.Windows.Vector" />에서 지정된 <see cref="T:System.Windows.Point" /> 또는 <see cref="T:System.Windows.Point" />를 뺍니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector operator - (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Vector op_Subtraction(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector operator -(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="point1 - point2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><paramref name="point2" />를 빼는 점입니다.</param>
        <param name="point2"><paramref name="point1" />에서 뺄 점입니다.</param>
        <summary>또 다른 지정된 <see cref="T:System.Windows.Point" />에서 지정된 <see cref="T:System.Windows.Point" />를 빼고 그 차이를 <see cref="T:System.Windows.Vector" />로 반환합니다.</summary>
        <returns><paramref name="point1" />와 <paramref name="point2" />의 차이입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 빼기를 <xref:System.Windows.Point> 다른 <xref:System.Windows.Point> 반환를 <xref:System.Windows.Vector> 오버 로드 된 (-) 연산자를 사용 하 여.  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample2)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Point operator - (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Subtraction(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point operator -(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="point - vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><paramref name="vector" />를 빼는 점입니다.</param>
        <param name="vector"><paramref name="point1" />에서 뺄 벡터입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Vector" />에서 지정된 <see cref="T:System.Windows.Point" />를 빼고 결과 <see cref="T:System.Windows.Point" />를 반환합니다.</summary>
        <returns><paramref name="point" />와 <paramref name="vector" />의 차이입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 빼기는 <xref:System.Windows.Vector> 에서 <xref:System.Windows.Point> 오버 로드 된 (-) 연산자를 사용 하 여 합니다.  
  
 [!code-csharp[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#overloadedsubtractionoperatorexample1)]
 [!code-vb[PointExamples_snip#OverloadedSubtractionOperatorExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#overloadedsubtractionoperatorexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Point" Usage="System.Windows.Point.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">점에 대한 문자열 표현입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Point" />에서 <see cref="T:System.String" />를 생성합니다.</summary>
        <returns>해당 <see cref="T:System.Windows.Point" /> 구조체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Windows.Point.Parse%2A> 변환 하는 메서드를 <xref:System.String> 점의 표현을 <xref:System.Windows.Point> 구조입니다.  
  
 [!code-csharp[PointExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#parseexample)]
 [!code-vb[PointExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><paramref name="source" />가 두 개의 쉼표 또는 공백으로 구분된 Double 값으로 구성되어 있지 않은 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="source" />에 두 개의 숫자가 포함되어 있지 않은 경우  
  
또는 
 <paramref name="source" />에 구분 기호가 너무 많은 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 <see cref="T:System.Windows.Point" />에서 지정된 <see cref="T:System.Windows.Vector" /> 또는 <see cref="T:System.Windows.Point" />를 뺍니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector Subtract (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector Subtract(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (point1 As Point, point2 As Point) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector Subtract(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Vector" Usage="System.Windows.Point.Subtract (point1, point2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><paramref name="point2" />를 빼는 점입니다.</param>
        <param name="point2"><paramref name="point1" />에서 뺄 점입니다.</param>
        <summary>또 다른 지정된 <see cref="T:System.Windows.Point" />에서 지정된 <see cref="T:System.Windows.Point" />를 빼고 그 차이를 <see cref="T:System.Windows.Vector" />로 반환합니다.</summary>
        <returns><paramref name="point1" />와 <paramref name="point2" />의 차이입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 빼기는 <xref:System.Windows.Point> 간에 <xref:System.Windows.Point> 정적을 사용 하 여 <xref:System.Windows.Point.Subtract%2A> 메서드.  
  
 [!code-csharp[PointExamples_snip#SubtractExample2](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample2)]
 [!code-vb[PointExamples_snip#SubtractExample2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Point Subtract (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point Subtract(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point Subtract(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Point" Usage="System.Windows.Point.Subtract (point, vector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><paramref name="vector" />를 빼는 점입니다.</param>
        <param name="vector"><paramref name="vector" />에서 뺄 <paramref name="point" />입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Vector" />에서 지정된 <see cref="T:System.Windows.Point" />를 빼고 결과 <see cref="T:System.Windows.Point" />를 반환합니다.</summary>
        <returns><paramref name="point" />와 <paramref name="vector" />의 차이입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 빼기는 <xref:System.Windows.Vector> 에서 <xref:System.Windows.Point> 정적을 사용 하 여 <xref:System.Windows.Point.Subtract%2A> 메서드.  
  
 [!code-csharp[PointExamples_snip#SubtractExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#subtractexample1)]
 [!code-vb[PointExamples_snip#SubtractExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#subtractexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Point.Subtract" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">사용할 형식을 지정하는 문자열입니다.  
  
또는 
 <see cref="T:System.IFormattable" /> 구현 형식에 대해 정의된 기본 형식을 사용하기 위한 <see langword="null" />입니다.</param>
        <param name="provider">값의 형식을 지정하는 데 사용할 <see langword="IFormatProvider" />입니다.  
  
또는 
 운영 체제의 현재 로캘 설정에서 숫자 형식 정보를 가져오기 위한 <see langword="null" />입니다.</param>
        <summary>이 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다. 이 멤버에 대한 설명은 <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />를 참조하세요.</summary>
        <returns>지정된 형식의 현재 인스턴스 값이 포함된 문자열입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.String" /> 구조체의 <see cref="T:System.Windows.Point" /> 표현을 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="point.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.String" />의 <see cref="T:System.Windows.Point" /> 표현을 만듭니다.</summary>
        <returns>이 <see cref="T:System.String" /> 구조체의 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 값이 포함된 <see cref="T:System.Windows.Point" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Windows.Point.ToString%2A> 메서드를를 <xref:System.String> 표현한을 <xref:System.Windows.Point> 구조입니다.  
  
 [!code-csharp[PointExamples_snip#ToStringExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#tostringexample)]
 [!code-vb[PointExamples_snip#ToStringExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#tostringexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Point.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="point.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">문화권별 형식 지정 정보입니다.</param>
        <summary>이 <see cref="T:System.String" />의 <see cref="T:System.Windows.Point" /> 표현을 만듭니다.</summary>
        <returns>이 <see cref="T:System.String" /> 구조체의 <see cref="P:System.Windows.Point.X" /> 및 <see cref="P:System.Windows.Point.Y" /> 값이 포함된 <see cref="T:System.Windows.Point" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Point.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="P:System.Windows.Point.X" /> 구조체의 <see cref="T:System.Windows.Point" /> 좌표 값을 가져오거나 설정합니다.</summary>
        <value>이 <see cref="P:System.Windows.Point.X" /> 구조체의 <see cref="T:System.Windows.Point" /> 좌표 값입니다.  기본값은 <c>0</c>합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 두 가지 경우를 확인 하는 방법을 보여 줍니다 <xref:System.Windows.Point> 구조체가 동일 합니다.  값을 할당 하는 방법을 보여 줍니다는 <xref:System.Windows.Point> 구조를 선언할 때 및 구조를 선언한 후 구성 합니다.  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Point.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Point.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="P:System.Windows.Point.Y" />의 <see cref="T:System.Windows.Point" /> 좌표 값을 가져오거나 설정합니다.</summary>
        <value>이 <see cref="P:System.Windows.Point.Y" /> 구조체의 <see cref="T:System.Windows.Point" /> 좌표 값입니다.  기본값은 <c>0</c>합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 두 가지 경우를 확인 하는 방법을 보여 줍니다 <xref:System.Windows.Point> 구조체가 동일 합니다.  값을 할당 하는 방법을 보여 줍니다는 <xref:System.Windows.Point> 구조를 선언할 때 및 구조를 선언한 후 구성 합니다.  
  
 [!code-csharp[PointExamples_snip#PointInequalityExample](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointinequalityexample)]
 [!code-vb[PointExamples_snip#PointInequalityExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PointExamples_snip/visualbasic/pointexample.vb#pointinequalityexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Point.X" />
      </Docs>
    </Member>
  </Members>
</Type>