<Type Name="TemplateVisualStateAttribute" FullName="System.Windows.TemplateVisualStateAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34a2b829a6052d750428f008471383e2e4a855d1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55359449" /></Metadata><TypeSignature Language="C#" Value="public sealed class TemplateVisualStateAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TemplateVisualStateAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TemplateVisualStateAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TemplateVisualStateAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateVisualStateAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TemplateVisualStateAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>컨트롤이 특정 상태에 있고 <see cref="T:System.Windows.VisualState" />가 컨트롤의 <see cref="T:System.Windows.Controls.ControlTemplate" />에 있을 수 있도록 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤 작성자를 지정 하려면이 특성을 사용 합니다 <xref:System.Windows.VisualState> 하 고 <xref:System.Windows.VisualStateGroup> 해당 컨트롤에 속해 있는 개체 <xref:System.Windows.Controls.ControlTemplate>.  예를 들어, 명명 된 두 시각적 상태에 있는 새 컨트롤을 만드는 `Focused` 하 고 `Unfocused`모두에 <xref:System.Windows.VisualStateGroup> 라는 `FocusStates`합니다.  지정 하 <xref:System.Windows.Controls.ControlTemplate> 작성자가 해당 시각적 상태를 사용할 수 있는 두 개의 추가 <xref:System.Windows.TemplateVisualStateAttribute> 클래스 서명을 컨트롤의 특성입니다.  지정 합니다 <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A> 속성은 `FocusStates` 하 고는 <xref:System.Windows.TemplateVisualStateAttribute.Name%2A> 속성이 `Focused` 하나에 대 한 및 `Unfocused` 다른 합니다.  
  
   
  
## Examples  
 다음 예제에서는 클래스에 대 한 시그니처는 `NumericUpDown` 제어 합니다.  이 예제에서는 지정 된 `NumericUpDown` 컨트롤은 네 개의 시각적 상태를 사용 합니다.  라는 두 상태 `Positive` 하 고 `Negative`에 <xref:System.Windows.VisualStateGroup> 라는 `ValueStates`합니다.  다른 두 개의 상태 이름을 `Focused` 하 고 `Unfocused`에 <xref:System.Windows.VisualStateGroup> 라는 `FocusedStates`.  전체 예제를 보려면 [모양을 사용자 지정할 수는 컨트롤에 만드는](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)합니다.  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateVisualStateAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateVisualStateAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateVisualStateAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.TemplateVisualStateAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupName">
      <MemberSignature Language="C#" Value="public string GroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupName : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>상태가 속한 그룹의 이름을 가져오거나 설정합니다.</summary>
        <value>상태가 속한 <see cref="T:System.Windows.VisualStateGroup" />의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A> 속성에 해당 하는 <xref:System.Windows.VisualStateGroup.Name%2A?displayProperty=nameWithType> 의 속성을 <xref:System.Windows.VisualStateGroup> 개체. 동작을 지정 하 <xref:System.Windows.VisualStateGroup> 는 <xref:System.Windows.VisualState> 속한 설정에서는 <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 클래스에 대 한 시그니처는 `NumericUpDown` 제어 합니다.  이 예제에서는 지정 된 `NumericUpDown` 컨트롤은 네 개의 시각적 상태를 사용 합니다.  라는 두 상태 `Positive` 하 고 `Negative`에 <xref:System.Windows.VisualStateGroup> 라는 `ValueStates`합니다.  다른 두 개의 상태 이름을 `Focused` 하 고 `Unfocused`에 <xref:System.Windows.VisualStateGroup> 라는 `FocusedStates`.  전체 예제를 보려면 [모양을 사용자 지정할 수는 컨트롤에 만드는](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)합니다.  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에 적용할 수 있는 상태의 이름을 가져오거나 설정합니다.</summary>
        <value>컨트롤에 적용할 수 있는 상태의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> 속성에 해당 하는 <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> 의 속성을 <xref:System.Windows.VisualState>합니다. 동작을 지정 하 <xref:System.Windows.VisualState> 컨트롤의 속한 <xref:System.Windows.Controls.ControlTemplate>로 설정 합니다 <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> 속성.  
  
   
  
## Examples  
 다음 예제에서는 클래스에 대 한 시그니처는 `NumericUpDown` 제어 합니다.  이 예제에서는 지정 된 `NumericUpDown` 컨트롤은 네 개의 시각적 상태를 사용 합니다.  라는 두 상태 `Positive` 하 고 `Negative`에 <xref:System.Windows.VisualStateGroup> 라는 `ValueStates`합니다.  다른 두 개의 상태 이름을 `Focused` 하 고 `Unfocused`에 <xref:System.Windows.VisualStateGroup> 라는 `FocusedStates`.  전체 예제를 보려면 [모양을 사용자 지정할 수는 컨트롤에 만드는](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)합니다.  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>