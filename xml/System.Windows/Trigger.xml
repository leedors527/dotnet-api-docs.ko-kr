<Type Name="Trigger" FullName="System.Windows.Trigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1bbf7fccac6f5cc54c24d79be42132c4ceb97407" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57945504" /></Metadata><TypeSignature Language="C#" Value="public class Trigger : System.Windows.TriggerBase, System.ComponentModel.ISupportInitialize, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Trigger extends System.Windows.TriggerBase implements class System.ComponentModel.ISupportInitialize, class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Trigger" />
  <TypeSignature Language="VB.NET" Value="Public Class Trigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trigger : System::Windows::TriggerBase, System::ComponentModel::ISupportInitialize, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type Trigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>조건부로 작업을 수행하거나 속성 값을 적용하는 트리거를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 와 같은 최종 사용자 작업에 해당 하는 속성을 정의 <xref:System.Windows.UIElement.IsMouseOver%2A> 로 설정 된 속성 `true` 위로 커서를 가리킬 때를 <xref:System.Windows.UIElement> 이나 해당 <xref:System.Windows.ContentElement.IsMouseOver%2A> 속성을 <xref:System.Windows.ContentElement>. 최종 사용자 작업에서 속성 값을 나타내는 합니다 <xref:System.Windows.Trigger> 요소를 사용 하면 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 속성 값을 변경 하는 스타일에 따라 해당 최종 사용자 작업을 모두에서 태그 내입니다.  
  
 트리거에 의해 변경 된 속성 트리거 조건이 더 이상 만족 하는 경우 이전 값으로 다시 자동으로 됩니다. 일시적이 지는 변경 되어야 할 및 원래 돌아가서 상태를 상태와 같은 트리거 최적화 되었는지 <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> 에 <xref:System.Windows.Controls.Button> 하 고 <xref:System.Windows.Controls.ListBoxItem.IsSelected%2A> 에서 <xref:System.Windows.Controls.ListBoxItem>합니다. <xref:System.Windows.Trigger.Property%2A> 관심 종속성 속성 이어야 합니다.  
  
 모두 지정 해야 합니다 <xref:System.Windows.Trigger.Property%2A> 및 <xref:System.Windows.Trigger.Value%2A> 속성에는 <xref:System.Windows.Trigger> 의미 있는 트리거에 대 한. 하나 또는 두 속성 모두 설정 되지 않은 경우 예외가 throw 됩니다.  
  
 <xref:System.Windows.Trigger.Setters%2A> 의 속성을 <xref:System.Windows.Trigger> 개체 수만 구성 <xref:System.Windows.Setter> 개체입니다. 추가 <xref:System.Windows.Setter> 자식을 <xref:System.Windows.Trigger> 개체가 암시적으로 추가 합니다 <xref:System.Windows.SetterBaseCollection> 에 대 한를 <xref:System.Windows.Trigger> 개체입니다. <xref:System.Windows.EventSetter> 개체가 지원 되지 않습니다. 만 <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> 지원 <xref:System.Windows.EventSetter> 개체입니다.  
  
 다른 유형의 트리거가 있습니다. <xref:System.Windows.MultiTrigger> 여러 속성의 상태에 따라 변경 내용을 적용할 수 있습니다. <xref:System.Windows.EventTrigger> 이벤트가 발생할 때 변경 내용을 적용할 수 있습니다. <xref:System.Windows.DataTrigger> 및 <xref:System.Windows.MultiDataTrigger> 데이터 바인딩된 속성에 대 한 것입니다.  
  
   
  
## Examples  
 다음 예제에서는 명명 된 <xref:System.Windows.Style> 사용할 수 있는 <xref:System.Windows.Controls.Button> 컨트롤입니다. <xref:System.Windows.Style> 정의 <xref:System.Windows.Trigger> 변경 하는 요소는 <xref:System.Windows.Controls.Control.Foreground%2A> 단추의 속성 때를 <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> 속성이 `true`합니다.  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">스타일 및 템플릿 샘플 소개</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Trigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Trigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Trigger" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.Property" />
      <MemberSignature Language="VB.NET" Value="Public Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); void set(System::Windows::DependencyProperty ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty with get, set" Usage="System.Windows.Trigger.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리거의 <see cref="P:System.Windows.Trigger.Value" /> 속성과 비교하는 값을 반환하는 속성을 가져오거나 설정합니다. 수행되는 비교 작업은 참조 일치 검사입니다.</summary>
        <value>요소의 속성 값을 반환하는 <see cref="T:System.Windows.DependencyProperty" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 의해 반환 되는 값에 지정 된 값과 비교 됩니다는 <xref:System.Windows.Trigger.Value%2A> 속성입니다. 비교가 수행 되는 참조 같음 검사를 수행 됩니다. 두 값이 일치 하면 연관 된 경우 <xref:System.Windows.Setter>가 지정 된 속성 값을 적용 합니다.  
  
 사용 합니다 `ClassName.PropertyName` 구문 스타일 또는이 트리거를 포함 하는 템플릿이 없는 경우를 지정 하는 속성을 정규화 하는 `TargetType` 속성 집합입니다.  
  
 모두 지정 해야 합니다 <xref:System.Windows.Trigger.Property%2A> 및 <xref:System.Windows.Trigger.Value%2A> 속성에는 <xref:System.Windows.Trigger> 의미 있는 트리거에 대 한. 하나 또는 두 속성 모두 설정 되지 않은 경우 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 두 개의 트리거를 포함합니다. 첫 번째 변경 내용을 합니다 <xref:System.Windows.Controls.Control.Background%2A> 의 속성을 <xref:System.Windows.Controls.Button> 때를 <xref:System.Windows.UIElement.IsMouseOver%2A> 속성은 `true`. 두 번째 변경 내용을 합니다 <xref:System.Windows.Controls.Control.Foreground%2A> 단추의 속성 때를 <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> 속성은 `true`합니다. <xref:System.Windows.Style.TargetType%2A> 의 합니다 <xref:System.Windows.Style> 로 설정 되어 <xref:System.Windows.Controls.Button> 정규화 하지 않아도 되므로 `Property` 클래스 이름 사용 하 여 속성입니다.  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Windows.Style" />에 <see cref="T:System.Windows.Trigger" /> 속성을 참조하는 <see cref="T:System.Windows.Style" />가 포함될 수 없는 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Trigger" />이 사용 중인 경우에는 수정할 수 없습니다.</exception>
        <altmember cref="P:System.Windows.Trigger.Value" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">스타일 및 템플릿 샘플 소개</related>
      </Docs>
    </Member>
    <Member MemberName="ReceiveTypeConverter">
      <MemberSignature Language="C#" Value="public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveTypeConverter(object targetObject, class System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveTypeConverter (targetObject As Object, eventArgs As XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveTypeConverter(System::Object ^ targetObject, System::Windows::Markup::XamlSetTypeConverterEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveTypeConverter : obj * System.Windows.Markup.XamlSetTypeConverterEventArgs -&gt; unit" Usage="System.Windows.Trigger.ReceiveTypeConverter (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetTypeConverterEventArgs" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetObject">형식 변환기에서 값을 설정하는 개체입니다.</param>
        <param name="eventArgs">형식 변환기 처리와 관련된 데이터입니다.</param>
        <summary>형식 변환기가 <see cref="T:System.Windows.Trigger" /> 개체의 속성 값을 제공하는 경우를 처리합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 적용 하 여 참조 하는 메서드를 이것이 <xref:System.Windows.Markup.XamlSetTypeConverterAttribute> 특성의 값을 설정 하려는 모든 시도가이 메서드를 처리 함을 의미 하는 클래스 수준의 <xref:System.Windows.Trigger> 형식 변환기를 사용 하 여 합니다. 호출 하지 않으면 일반적으로이 메서드 직접.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.Trigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정된 조건을 충족할 때 적용할 속성 값을 설명하는 <see cref="T:System.Windows.Setter" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>XAML 값  
 *ZeroOrMoreSetters*  
 0 개 이상의 <xref:System.Windows.Setter> 개체입니다. 이 지원 하지 않습니다 <xref:System.Windows.EventSetter> 개체입니다.  
  
 A <xref:System.Windows.Trigger> 사용할 수 있도록 <xref:System.Windows.Setter>의속성에 적용할 값 요소가 지정된 된 조건을 충족 하는 경우. 예를 들어, 다음에 포커스가 있을 때 요소의 배경색을 변경 하는 것이 좋습니다.  
  
 동일한 속성이 두 번 이상 설정 되어 있으면 마지막 속성 값이 적용 됩니다.  
  
 <xref:System.Windows.Trigger.Setters%2A> 의 속성을 <xref:System.Windows.Trigger> 개체 수만 구성 <xref:System.Windows.Setter> 개체입니다. 추가 <xref:System.Windows.Setter> 자식을 <xref:System.Windows.Trigger> 개체가 암시적으로 추가 합니다 <xref:System.Windows.SetterBaseCollection> 에 대 한를 <xref:System.Windows.Trigger> 개체입니다. <xref:System.Windows.EventSetter> 개체가 지원 되지 않습니다. 만 <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> 지원 <xref:System.Windows.EventSetter> 개체입니다.  
  
   
  
## Examples  
 위에서 설명한 대로 추가 <xref:System.Windows.Setter> 에 대 한 자식을 <xref:System.Windows.Trigger> 개체가 암시적으로 추가 합니다 <xref:System.Windows.SetterBaseCollection> 에 대 한는 <xref:System.Windows.Trigger> 개체. 다음 예에서 `<Trigger.Setters>` 암시적입니다.  
  
 [!code-xaml[PhotoStoreDemoStyled#TriggerSettersRef](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#triggersettersref)]   
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">스타일 및 템플릿 샘플 소개</related>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceName : string with get, set" Usage="System.Windows.Trigger.SourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관련 setter가 적용되도록 하는 속성이 있는 개체의 이름을 가져오거나 설정합니다.</summary>
        <value>기본 속성은 <see langword="null" />입니다. 이 속성이 <see langword="null" />이면 이 스타일 또는 템플릿이 적용되는 요소(스타일 부모 또는 템플릿 부모)에 대해 <see cref="P:System.Windows.Trigger.Property" /> 속성이 평가됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 위치 범위 내 모든 요소의 이름으로이 속성을 설정할 수 있습니다 트리거 컬렉션 (컬렉션이 <xref:System.Windows.Trigger> 의 일부인) 적용 됩니다. 이 포함 하는 템플릿 내에 있는 명명 된 요소를 일반적으로 이것이 <xref:System.Windows.Trigger>합니다.  
  
 사용 하는 개체 이름을 지정할 수 있습니다 합니다 [X:name 지시문](~/docs/framework/xaml-services/x-name-directive.md) 구문입니다.  
  
   
  
## Examples  
 사용할 때 시나리오 중 하나를 <xref:System.Windows.Trigger.SourceName%2A> 속성은 경우에 관심 있는 속성은 다음 예제와 같이 템플릿 부모의 속성이 아닙니다.  
  
 [!code-xaml[ControlTemplateExamples#TriggerSourceName](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/menu.xaml#triggersourcename)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Trigger" />이 사용 중인 경우에는 수정할 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>초기화가 시작됨을 개체에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Setter> 인스턴스가 <xref:System.ComponentModel.ISupportInitialize> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>초기화가 완료됨을 개체에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Setter> 인스턴스가 <xref:System.ComponentModel.ISupportInitialize> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">추가할 자식 개체입니다.</param>
        <summary>자식 개체를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Trigger> 인스턴스가 <xref:System.Windows.Markup.IAddChild> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">개체에 추가할 텍스트입니다.</param>
        <summary>노드의 텍스트 콘텐츠를 개체에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Windows.Trigger> 인스턴스가 <xref:System.Windows.Markup.IAddChild> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Trigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Trigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.SetterTriggerConditionValueConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Property")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("SourceName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소의 속성 값과 비교할 값을 가져오거나 설정합니다. 수행되는 비교 작업은 참조 일치 검사입니다.</summary>
        <value>기본값은 <see langword="null" />입니다. 예외 부분을 참조하십시오.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값이 반환 하는 속성 값을 사용 하 여 비교 됩니다는 <xref:System.Windows.Trigger.Property%2A> 의 속성을 <xref:System.Windows.Trigger>입니다. 비교가 수행 되는 참조 품질 검사를 수행 됩니다. 두 값이 같으면 연결 된 경우 <xref:System.Windows.Setter>가 지정 된 속성 값을 적용 합니다.  
  
 모두 지정 해야 합니다 <xref:System.Windows.Trigger.Property%2A> 및 <xref:System.Windows.Trigger.Value%2A> 속성에는 <xref:System.Windows.Trigger> 의미 있는 트리거에 대 한. 따라서 속성 중 하나 이상이 지정 하지 않으면 예외가 throw 됩니다.  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
   
  
## Examples  
 다음 예제에서는 변경 내용을 합니다 <xref:System.Windows.Controls.Control.Foreground%2A> 단추의 속성 때를 <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> 속성은 `true`합니다.  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">바인딩 등의 식이 지원되지 않는 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Trigger" />이 사용 중인 경우에는 수정할 수 없습니다.</exception>
        <altmember cref="P:System.Windows.Trigger.Property" />
        <altmember cref="P:System.Windows.Trigger.Setters" />
      </Docs>
    </Member>
  </Members>
</Type>