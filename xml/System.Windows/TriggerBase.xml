<Type Name="TriggerBase" FullName="System.Windows.TriggerBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1934470a99bcc612e635820ffd9c5f69b8053e23" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55361529" /></Metadata><TypeSignature Language="C#" Value="public abstract class TriggerBase : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TriggerBase extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TriggerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TriggerBase&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class TriggerBase abstract : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type TriggerBase = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Style" /> 개체 내에 조건 값을 지정하기 위한 기본 클래스를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 스타일 및 템플릿 모델을 사용 하면 내에 트리거를 지정할 수 있습니다 하 <xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate>, 및 <xref:System.Windows.DataTemplate>합니다. 기본적으로 <xref:System.Windows.TriggerBase> 때 특정 변경 내용을 적용할 수 있는 개체에 대 한 기본 클래스인 조건 (는 특정 속성 값이 같은 `true`, 이벤트가 발생 하는 경우 또는) 만족 합니다.  
  
   
  
## Examples  
 몇 가지 유형의 트리거를 가지: <xref:System.Windows.Trigger>, <xref:System.Windows.MultiTrigger>, <xref:System.Windows.EventTrigger>합니다 <xref:System.Windows.DataTrigger>, 및 <xref:System.Windows.MultiDataTrigger>합니다.  
  
 <xref:System.Windows.Trigger> 클래스는 가장 단순한 유형의 트리거. <xref:System.Windows.Trigger> 개체 속성의 값에 따라 변경 내용을 적용할 수 있습니다. 예를 들어, 다음 예제에서는 명명 된 <xref:System.Windows.Style> 사용할 수 있는 <xref:System.Windows.Controls.Button> 컨트롤입니다. <xref:System.Windows.Style> 정의 <xref:System.Windows.Trigger> 변경 하는 요소는 <xref:System.Windows.Controls.Control.Foreground%2A> 단추의 속성 때를 <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> 속성이 `true`합니다.  
  
 [!code-xaml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]  
  
 여러 속성의 상태에 따라 변경 내용을 적용 해야 하는 경우 사용할 수 있습니다는 <xref:System.Windows.MultiTrigger>합니다. 예를 들어 참조 된 <xref:System.Windows.MultiTrigger> 페이지입니다.  
  
 <xref:System.Windows.EventTrigger> 클래스를 사용 하면 이벤트가 발생할 때 변경 내용을 적용 합니다. 다음 예제에는 두 개의 <xref:System.Windows.EventTrigger> 마우스가 요소 및 마우스가 요소에서 나가면 발생 하는 다른 경우 발생 하는 중 하나는 개체입니다.  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 이러한 경우는 <xref:System.Windows.DataTrigger> 하며 <xref:System.Windows.MultiDataTrigger> 클래스입니다. 비슷하지만 <xref:System.Windows.Trigger> 및 <xref:System.Windows.MultiTrigger> 데이터 바인딩된 속성에 대 한 차이가 있습니다.  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">스타일 및 템플릿 샘플 소개</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">데이터 템플릿 샘플 소개</related>
  </Docs>
  <Members>
    <Member MemberName="EnterActions">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerActionCollection EnterActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerActionCollection EnterActions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TriggerBase.EnterActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnterActions As TriggerActionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerActionCollection ^ EnterActions { System::Windows::TriggerActionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterActions : System.Windows.TriggerActionCollection" Usage="System.Windows.TriggerBase.EnterActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerActionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리거 개체가 활성화될 때 적용할 <see cref="T:System.Windows.TriggerAction" /> 개체의 컬렉션을 가져옵니다. 이 속성은 <see cref="T:System.Windows.EventTrigger" /> 클래스에 적용되지 않습니다.</summary>
        <value>기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 적용 되지 않습니다 합니다 <xref:System.Windows.EventTrigger> 이벤트 하면서에서 시점을 나타내므로 클래스 <xref:System.Windows.TriggerBase.EnterActions%2A> 및 <xref:System.Windows.TriggerBase.ExitActions%2A> 개체 상태에 해당 합니다. 에 대 한 <xref:System.Windows.EventTrigger> 개체를 사용 하 여는 <xref:System.Windows.EventTrigger.Actions%2A> 속성 대신 합니다.  
  
> [!NOTE]
>  이 속성 설정할 수 있습니다 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 또는 컬렉션 개체에 액세스 하 고 추가 등의 다양 한 메서드를 사용 하 여 컬렉션 구문을 표시 합니다. 컬렉션 개체 자체를 액세스 하는 속성은 읽기 전용, 컬렉션 자체는 읽기 / 쓰기입니다.  
  
<a name="xamlPropertyElementUsage_EnterActions"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.EnterActions>  
    OneOrMoreTriggerActions  
  </object.EnterActions >  
</object>  
```  
  
<a name="xamlValues_EnterActions"></a>   
## <a name="xaml-values"></a>XAML 값  
 *OneOrMoreTriggerActions*  
 하나 이상의 <xref:System.Windows.TriggerAction> 개체입니다.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">스타일 및 템플릿 샘플 소개</related>
      </Docs>
    </Member>
    <Member MemberName="ExitActions">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerActionCollection ExitActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerActionCollection ExitActions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TriggerBase.ExitActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExitActions As TriggerActionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerActionCollection ^ ExitActions { System::Windows::TriggerActionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExitActions : System.Windows.TriggerActionCollection" Usage="System.Windows.TriggerBase.ExitActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerActionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리거 개체가 비활성화될 때 적용할 <see cref="T:System.Windows.TriggerAction" /> 개체의 컬렉션을 가져옵니다. 이 속성은 <see cref="T:System.Windows.EventTrigger" /> 클래스에 적용되지 않습니다.</summary>
        <value>기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 적용 되지 않습니다 합니다 <xref:System.Windows.EventTrigger> 이벤트 하면서에서 시점을 나타내므로 클래스 <xref:System.Windows.TriggerBase.EnterActions%2A> 및 <xref:System.Windows.TriggerBase.ExitActions%2A> 개체 상태에 해당 합니다. 에 대 한 <xref:System.Windows.EventTrigger> 개체를 사용 하 여는 <xref:System.Windows.EventTrigger.Actions%2A> 속성 대신 합니다.  
  
> [!NOTE]
>  이 속성 설정할 수 있습니다 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 또는 컬렉션 개체에 액세스 하 고 추가 등의 다양 한 메서드를 사용 하 여 컬렉션 구문을 표시 합니다. 컬렉션 개체 자체를 액세스 하는 속성은 읽기 전용, 컬렉션 자체는 읽기 / 쓰기입니다.  
  
<a name="xamlPropertyElementUsage_ExitActions"></a>   
## <a name="xaml-property-element-usage"></a>XAML 속성 요소 사용  
  
```  
<object>  
  <object.ExitActions>  
    OneOrMoreTriggerActions  
  </object.ExitActions >  
</object>  
```  
  
<a name="xamlValues_ExitActions"></a>   
## <a name="xaml-values"></a>XAML 값  
 *OneOrMoreTriggerActions*  
 하나 이상의 <xref:System.Windows.TriggerAction> 개체입니다.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">스타일 및 템플릿 샘플 소개</related>
      </Docs>
    </Member>
  </Members>
</Type>