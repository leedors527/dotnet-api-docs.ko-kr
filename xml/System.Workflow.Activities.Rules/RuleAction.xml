<Type Name="RuleAction" FullName="System.Workflow.Activities.Rules.RuleAction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2143f3d9d27aedf5668a10ebb01a32919954e104" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55403792" /></Metadata><TypeSignature Language="C#" Value="public abstract class RuleAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit RuleAction extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleAction" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RuleAction" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleAction abstract" />
  <TypeSignature Language="F#" Value="type RuleAction = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>연결된 <see cref="P:System.Workflow.Activities.Rules.Rule.Condition" />을 실행한 결과가 <see langword="true" /> 일 경우에는 <see cref="P:System.Workflow.Activities.Rules.Rule.ThenActions" />을 실행하고, <see langword="false" />일 경우에는 <see cref="P:System.Workflow.Activities.Rules.Rule.ElseActions" />을 실행하도록 작업을 정의하는 추상 클래스를 나타냅니다. 이 클래스는 상속되어야 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.Rules.RuleStatementAction>과 <xref:System.Workflow.Activities.Rules.Rule.ThenActions%2A>으로 사용할 수 있는 <xref:System.Workflow.Activities.Rules.Rule.ElseActions%2A> 개체는 일반적으로 활동 속성 중 하나에 변수 값을 설정하거나, 활동 메서드를 호출하거나, 참조된 어셈블리의 유형에서 정적 메서드를 호출합니다.  
  
 <xref:System.Workflow.Activities.Rules.RuleAction>은 <xref:System.Workflow.Activities.Rules.RuleStatementAction>, <xref:System.Workflow.Activities.Rules.RuleHaltAction> 및 <xref:System.Workflow.Activities.Rules.RuleUpdateAction> 클래스가 파생되는 기본 형식입니다. 이들 클래스는 다음과 같이 사용합니다.  
  
-   <xref:System.Workflow.Activities.Rules.RuleStatementAction>은 속성을 수정하거나 메서드를 호출합니다.  
  
-   <xref:System.Workflow.Activities.Rules.RuleHaltAction>이 <xref:System.Workflow.Activities.Rules.RuleSet>의 실행을 중지시키고 호출 메서드로 제어를 반환시킵니다.  
  
-   <xref:System.Workflow.Activities.Rules.RuleUpdateAction>은 규칙이 변수를 업데이트하고 있음을 명시적으로 나타냅니다. 이렇게 하면 영향을 받은 규칙을 다시 검사하게 됩니다.  
  
   
  
## Examples  
 다음 코드는 규칙 집합에서 사용할 수 있는 작업을 만듭니다. 이 작업의 이름은 `Log`이며 하나의 문자열 매개 변수만을 사용합니다. 이 동작은 문자열을 콘솔로 출력합니다.  
  
 이 코드를 사용하려면 클래스 라이브러리 프로젝트에 추가하고 워크플로 프로젝트에서 라이브러리를 참조합니다.  
  
```csharp  
using System;  
using System.CodeDom;  
using System.Collections.Generic;  
using System.Text;  
using System.Workflow.Activities.Rules;  
using System.Workflow.ComponentModel.Compiler;  
  
namespace LogRuleAction  
{  
    public class Log : RuleAction  
    {  
        CodeExpression message;  
  
        public CodeExpression Message  
        {  
            get { return message; }  
            set { message = value; }  
        }  
  
        public Log()  
        {  
            // constructor required for deserialization  
        }  
  
        public Log(CodeExpression expression)  
        {  
            // constructor required by parser  
            message = expression;  
        }  
  
        public override bool Validate(RuleValidation validator)  
        {  
            ValidationError error;  
            if (message == null)  
            {  
                error = new ValidationError("Message cannot be null", 123);  
                validator.Errors.Add(error);  
                return false;  
            }  
            else  
            {  
                RuleExpressionInfo result = RuleExpressionWalker.Validate(validator, message, false);  
                if ((result == null) || (result.ExpressionType != typeof(string)))  
                {  
                    error = new ValidationError("Message must return string result", 123);  
                    validator.Errors.Add(error);  
                    return false;  
                }  
            }  
            return (validator.Errors.Count == 0);  
        }  
  
        public override RuleAction Clone()  
        {  
            Log result = new Log();  
            result.Message = RuleExpressionWalker.Clone(message);  
            return result;  
        }  
  
        public override void Execute(RuleExecution context)  
        {  
            RuleExpressionResult result = RuleExpressionWalker.Evaluate(context, message);  
            if (result != null)  
                Console.WriteLine(result.Value);  
        }  
  
        public override ICollection<string> GetSideEffects(RuleValidation validation)  
        {  
            RuleAnalysis analysis = new RuleAnalysis(validation, true);  
            if (message != null)  
                RuleExpressionWalker.AnalyzeUsage(analysis, message, true, false, null);  
            return analysis.GetSymbols();  
        }  
  
        public override string ToString()  
        {  
            // what should be displayed by the parser  
            StringBuilder result = new StringBuilder("Log(");  
            RuleExpressionWalker.Decompile(result, message, null);  
            result.Append(")");  
            return result.ToString();  
        }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RuleAction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RuleAction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 구현되는 경우에는 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.Workflow.Activities.Rules.RuleAction Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.Activities.Rules.RuleAction Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAction.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As RuleAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Workflow::Activities::Rules::RuleAction ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Workflow.Activities.Rules.RuleAction" Usage="ruleAction.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />의 전체 복사본을 만듭니다.</summary>
        <returns>이 인스턴스와 동일한 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public abstract void Execute (System.Workflow.Activities.Rules.RuleExecution context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(class System.Workflow.Activities.Rules.RuleExecution context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAction.Execute(System.Workflow.Activities.Rules.RuleExecution)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Execute (context As RuleExecution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Execute(System::Workflow::Activities::Rules::RuleExecution ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Workflow.Activities.Rules.RuleExecution -&gt; unit" Usage="ruleAction.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Workflow.Activities.Rules.RuleExecution" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Workflow.Activities.Rules.RuleAction" />이 실행되고 있는 런타임 상태입니다.</param>
        <summary>지정된 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 인스턴스를 사용하여 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />을 실행합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSideEffects">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.ICollection&lt;string&gt; GetSideEffects (System.Workflow.Activities.Rules.RuleValidation validation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;string&gt; GetSideEffects(class System.Workflow.Activities.Rules.RuleValidation validation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSideEffects (validation As RuleValidation) As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ GetSideEffects(System::Workflow::Activities::Rules::RuleValidation ^ validation);" />
      <MemberSignature Language="F#" Value="abstract member GetSideEffects : System.Workflow.Activities.Rules.RuleValidation -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="ruleAction.GetSideEffects validation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validation" Type="System.Workflow.Activities.Rules.RuleValidation" />
      </Parameters>
      <Docs>
        <param name="validation">이전에 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> 호출에 사용된 <see cref="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />입니다.</param>
        <summary><see cref="T:System.Workflow.Activities.Rules.RuleAction" />이 업데이트한 필드 및 속성을 반환합니다.</summary>
        <returns><see cref="T:System.Workflow.Activities.Rules.RuleAction" />이 변경한 필드와 속성 이름을 나타내는 문자열의 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract bool Validate (System.Workflow.Activities.Rules.RuleValidation validator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Validate(class System.Workflow.Activities.Rules.RuleValidation validator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Validate (validator As RuleValidation) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Validate(System::Workflow::Activities::Rules::RuleValidation ^ validator);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Workflow.Activities.Rules.RuleValidation -&gt; bool" Usage="ruleAction.Validate validator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validator" Type="System.Workflow.Activities.Rules.RuleValidation" />
      </Parameters>
      <Docs>
        <param name="validator">유효성 검사 프로세스를 관리하기 위한 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />입니다.</param>
        <summary><see cref="T:System.Workflow.Activities.Rules.RuleAction" />이 올바로 구성되고 오류가 없는지 확인합니다.</summary>
        <returns><see cref="T:System.Workflow.Activities.Rules.RuleAction" />의 유효성이 올바르게 확인되었으며 오류가 없을 경우에는 <see langword="true" />이고, 그렇지 않을 경우에는  <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.Rules.RuleAction>에 오류가 있는 경우에는 `Validate` 메서드가 `false`를 반환하고 발생한 오류 목록이 <xref:System.Workflow.Activities.Rules.RuleValidation.Errors%2A?displayProperty=nameWithType>에 포함됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>