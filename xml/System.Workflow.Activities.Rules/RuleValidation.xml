<Type Name="RuleValidation" FullName="System.Workflow.Activities.Rules.RuleValidation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="be5d14ef9570365a1ddbbb3fd60c4d1af4d9129e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37741877" /></Metadata><TypeSignature Language="C#" Value="public class RuleValidation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RuleValidation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleValidation" />
  <TypeSignature Language="VB.NET" Value="Public Class RuleValidation" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleValidation" />
  <TypeSignature Language="F#" Value="type RuleValidation = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>식 조건을 확인합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드는 잘못된 조건을 만듭니다. 그런 다음 해당 조건의 유효성을 검사하고 발생한 오류를 표시합니다.  
  
```csharp  
// Create an invalid condition ("abc" < true).  
CodeBinaryOperatorExpression invalidCompare = new CodeBinaryOperatorExpression();  
invalidCompare.Left = new CodePrimitiveExpression("abc");  
invalidCompare.Operator = CodeBinaryOperatorType.LessThan;  
invalidCompare.Right = new CodePrimitiveExpression(true);  
RuleExpressionCondition condition = new RuleExpressionCondition();  
condition.Expression = invalidCompare;  
  
// Create a validator for this condition.  
// We are not using "this" in the condition, so the type is not used.  
RuleValidation validation = new RuleValidation(this.GetType(), null);  
  
// See whether the condition validates.  
if (!condition.Validate(validation))  
{  
    // There were errors, so display them.  
    foreach (ValidationError error in validation.Errors)  
    {  
        Console.WriteLine(error.ErrorText);  
    }  
}  
  
```  
  
 이 코드를 실행하면 다음 오류가 발생합니다.  
  
```  
Relational operator "LessThan" cannot be used on operands of types "string" and "bool".  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleValidation (Type thisType, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type thisType, class System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (thisType As Type, typeProvider As ITypeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleValidation(Type ^ thisType, System::Workflow::ComponentModel::Compiler::ITypeProvider ^ typeProvider);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleValidation : Type * System.Workflow.ComponentModel.Compiler.ITypeProvider -&gt; System.Workflow.Activities.Rules.RuleValidation" Usage="new System.Workflow.Activities.Rules.RuleValidation (thisType, typeProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="thisType" Type="System.Type" />
        <Parameter Name="typeProvider" Type="System.Workflow.ComponentModel.Compiler.ITypeProvider" />
      </Parameters>
      <Docs>
        <param name="thisType">이 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 또는 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />를 실행할 개체의 형식입니다. 일반적으로 워크플로이지만 유효한 모든 형식일 수 있습니다.</param>
        <param name="typeProvider">조건에 사용할 수 있는 <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />을 결정하는 데 사용되는 선택적 <see cref="T:System.Type" /> 구현입니다. 지정하지 않으면 동작에서 지정한 어셈블리의 형식 및 동작에서 참조하는 어셈블리만 사용할 수 있습니다.</param>
        <summary><see cref="T:System.Workflow.Activities.Rules.RuleValidation" />의 <see cref="T:System.Type" />을 사용하여 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="thisType" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleValidation (System.Workflow.ComponentModel.Activity activity, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, bool checkStaticType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, bool checkStaticType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleValidation(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::ComponentModel::Compiler::ITypeProvider ^ typeProvider, bool checkStaticType);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleValidation : System.Workflow.ComponentModel.Activity * System.Workflow.ComponentModel.Compiler.ITypeProvider * bool -&gt; System.Workflow.Activities.Rules.RuleValidation" Usage="new System.Workflow.Activities.Rules.RuleValidation (activity, typeProvider, checkStaticType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="typeProvider" Type="System.Workflow.ComponentModel.Compiler.ITypeProvider" />
        <Parameter Name="checkStaticType" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="activity"><see cref="T:System.Workflow.ComponentModel.Activity" /> 또는 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />를 실행하는 컨텍스트의 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />입니다. 대부분의 경우 워크플로 개체입니다.</param>
        <param name="typeProvider">조건에 사용할 수 있는 <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />을 결정하는 데 사용되는 선택적 <see cref="T:System.Type" /> 구현입니다. 지정하지 않으면 동작에서 지정한 어셈블리의 형식 및 동작에서 참조하는 어셈블리만 사용할 수 있습니다.</param>
        <param name="checkStaticType"><see langword="true" />이면 이 개체의 유효성을 검사한 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 또는 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />에서 사용된 형식이 허용된 제한 형식 목록에 있어야 합니다.</param>
        <summary>지정된 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> 및 공급자 형식을 사용하여 <see cref="T:System.Workflow.ComponentModel.Activity" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 디자인 타임에 사용됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="activity" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Errors" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.RuleValidation.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As ValidationErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Compiler::ValidationErrorCollection ^ Errors { System::Workflow::ComponentModel::Compiler::ValidationErrorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" Usage="System.Workflow.Activities.Rules.RuleValidation.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationErrorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Workflow.Activities.Rules.RuleValidation" />과 연결된 오류를 가져옵니다.</summary>
        <value>규칙 유효성 검사 중에 만들어진 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> 개체가 있는 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionInfo">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.Rules.RuleExpressionInfo ExpressionInfo (System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.Rules.RuleExpressionInfo ExpressionInfo(class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleValidation.ExpressionInfo(System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpressionInfo (expression As CodeExpression) As RuleExpressionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::Rules::RuleExpressionInfo ^ ExpressionInfo(System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.ExpressionInfo : System.CodeDom.CodeExpression -&gt; System.Workflow.Activities.Rules.RuleExpressionInfo" Usage="ruleValidation.ExpressionInfo expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleExpressionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="expression">실행할 <see cref="T:System.CodeDom.CodeExpression" />입니다.</param>
        <summary>코드 식의 유형을 결정합니다.</summary>
        <returns>개체에 대한 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" />입니다. 개체의 형식을 확인합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopParentExpression">
      <MemberSignature Language="C#" Value="public void PopParentExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopParentExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleValidation.PopParentExpression" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopParentExpression ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PopParentExpression();" />
      <MemberSignature Language="F#" Value="member this.PopParentExpression : unit -&gt; unit" Usage="ruleValidation.PopParentExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Collections.Stack" />의 맨 위에 있는 부모 식을 제거하고 반환합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushParentExpression">
      <MemberSignature Language="C#" Value="public bool PushParentExpression (System.CodeDom.CodeExpression newParent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool PushParentExpression(class System.CodeDom.CodeExpression newParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleValidation.PushParentExpression(System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function PushParentExpression (newParent As CodeExpression) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool PushParentExpression(System::CodeDom::CodeExpression ^ newParent);" />
      <MemberSignature Language="F#" Value="member this.PushParentExpression : System.CodeDom.CodeExpression -&gt; bool" Usage="ruleValidation.PushParentExpression newParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="newParent"><see cref="T:System.CodeDom.CodeExpression" />에 추가할 <see cref="T:System.Collections.Stack" />입니다.</param>
        <summary>개체를 <see cref="T:System.Collections.Stack" />의 맨 위에 삽입합니다.</summary>
        <returns><see langword="true" />가 스택에 추가되면 <paramref name="newParent" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `newParent`가 부모 <xref:System.CodeDom.CodeExpression> 개체의 일부이면 새 <xref:System.Workflow.ComponentModel.Compiler.ValidationError>가 만들어집니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="newParent" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ThisType">
      <MemberSignature Language="C#" Value="public Type ThisType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThisType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.RuleValidation.ThisType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ThisType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThisType : Type" Usage="System.Workflow.Activities.Rules.RuleValidation.ThisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체의 형식을 가져옵니다.</summary>
        <value>개체의 <see cref="T:System.Type" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>