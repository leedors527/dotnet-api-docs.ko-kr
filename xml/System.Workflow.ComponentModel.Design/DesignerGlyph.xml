<Type Name="DesignerGlyph" FullName="System.Workflow.ComponentModel.Design.DesignerGlyph">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eacfb4fe4edeeeb5d965eb85e60bdebc8e90a0d2" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48703910" /></Metadata><TypeSignature Language="C#" Value="public abstract class DesignerGlyph" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DesignerGlyph extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DesignerGlyph" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerGlyph abstract" />
  <TypeSignature Language="F#" Value="type DesignerGlyph = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Activity Designer의 맨 위 Z 순서 위치에서 문자 모양을 그립니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph> 클래스는 워크플로 디자인 화면에서 사용하는 모든 디자이너 문자 모양의 기본 클래스입니다.  
  
 활동 디자이너 개발자는 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph>에서 상속된 클래스를 사용하여 사용자 지정 문자 모양을 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>의 화면에 그릴 수 있습니다. <xref:System.Workflow.ComponentModel.Design.DesignerGlyph> 클래스는 최상위 Z 순서에서 그러한 문자 모양을 그리며, 사용자 지정 문자 모양의 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> 값을 기준으로 디자이너의 다른 모든 문자 모양의 맨 위에 사용자 지정 문자 모양을 시각적으로 배치합니다. <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> 속성의 하위 값은 상위 우선 순위를 나타내므로 Activity Designer의 맨 위 Z 순서 위치에 문자 모양을 그립니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph> 클래스에서 파생되는 문자 모양 클래스를 보여 줍니다.  코드는 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds%2A> 및 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint%2A> 메서드를 재정의합니다.  
  
 이 코드 예제는 DesignerGlyphProvider.cs 파일에 있는 Workflow Monitor SDK 샘플의 일부입니다. 자세한 내용은 [워크플로 모니터](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90))합니다.  
  
 [!code-csharp[WF_Samples#132](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#132)]
 [!code-vb[WF_Samples#132](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#132)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />에서 상속하는 경우 <see cref="M:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)" /> 멤버를 재정의해야 합니다.</para></block>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)">워크플로 모니터</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DesignerGlyph ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerGlyph.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DesignerGlyph();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 구현되는 경우에는 <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeActivated">
      <MemberSignature Language="C#" Value="public virtual bool CanBeActivated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeActivated" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanBeActivated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanBeActivated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanBeActivated : bool" Usage="System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />가 자신과 연결된 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />에서 포커스를 얻을 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>디자이너 문자 모양을 활성화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 CanBeActivated 속성의 구현을 보여 줍니다.  이 예제는 Tracking Profile Designer SDK 샘플에 포함되어 있습니다.  자세한 내용은 [Tracking Profile Designer 샘플](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90))합니다.  
  
 [!code-csharp[WF_Samples#119](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#119)]
 [!code-vb[WF_Samples#119](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#119)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle GetBounds (System.Workflow.ComponentModel.Design.ActivityDesigner designer, bool activated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Rectangle GetBounds(class System.Workflow.ComponentModel.Design.ActivityDesigner designer, bool activated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBounds (designer As ActivityDesigner, activated As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Rectangle GetBounds(System::Workflow::ComponentModel::Design::ActivityDesigner ^ designer, bool activated);" />
      <MemberSignature Language="F#" Value="abstract member GetBounds : System.Workflow.ComponentModel.Design.ActivityDesigner * bool -&gt; System.Drawing.Rectangle&#xA;override this.GetBounds : System.Workflow.ComponentModel.Design.ActivityDesigner * bool -&gt; System.Drawing.Rectangle" Usage="designerGlyph.GetBounds (designer, activated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="activated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="designer">문자 모양이 연결된<see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />입니다.</param>
        <param name="activated">문자 모양이 활동 디자이너 화면에 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />의 문자 모양의 경계를 반환합니다.</summary>
        <returns>문자 모양의 경계를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 클래스에서 재정의되지 않는 경우 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds%2A>는 문자 모양이 연결된 활동 디자이너의 경계를 반환합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds%2A> 메서드를 재정의하는 방법을 보여 줍니다. 코드는 사용자 지정 문자 모양 개체의 크기 및 위치를 설정합니다.  
  
 이 코드 예제는 DesignerGlyphProvider.cs 파일에 있는 Workflow Monitor SDK 샘플의 일부입니다. 자세한 내용은 [워크플로 모니터](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90))합니다.  
  
 [!code-csharp[WF_Samples#133](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#133)]
 [!code-vb[WF_Samples#133](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#133)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="designer" />에 null 참조(Visual Basic의 경우 <see langword="Nothing" />)가 포함된 경우</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)">워크플로 모니터</related>
      </Docs>
    </Member>
    <Member MemberName="HighestPriority">
      <MemberSignature Language="C#" Value="public const int HighestPriority = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 HighestPriority = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority" />
      <MemberSignature Language="VB.NET" Value="Public Const HighestPriority As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int HighestPriority = 0;" />
      <MemberSignature Language="F#" Value="val mutable HighestPriority : int" Usage="System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />에 대해 가능한 최상위 우선 순위를 나타냅니다. 이 값은 상수입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> 속성의 하위 값은 상위 우선 순위를 나타내므로 Activity Designer의 맨 위 Z 순서 위치에 문자 모양을 그립니다. 값을 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority> 필드는 0입니다.  
  
> [!NOTE]
>  이 상수 값은 사용자 지정 문자 모양을 만들 때 안내선 역할을 합니다. 사용자 지정 문자 모양을 설계할 때 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> 속성에 대해 다양한 값을 원하는 대로 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LowestPriority">
      <MemberSignature Language="C#" Value="public const int LowestPriority = 1000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LowestPriority = (1000000)" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority" />
      <MemberSignature Language="VB.NET" Value="Public Const LowestPriority As Integer  = 1000000" />
      <MemberSignature Language="C++ CLI" Value="public: int LowestPriority = 1000000;" />
      <MemberSignature Language="F#" Value="val mutable LowestPriority : int" Usage="System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1000000</MemberValue>
      <Docs>
        <summary><see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />에 대해 가능한 최하위 우선 순위를 나타냅니다. 이 값은 상수입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> 속성의 상위 값은 하위 우선 순위를 나타내므로 Activity Designer의 맨 아래 Z 순서 위치에 문자 모양을 그립니다. 값을 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority> 필드는 1000000입니다.  
  
> [!NOTE]
>  이 상수 값은 사용자 지정 문자 모양을 만들 때 안내선 역할을 합니다. 사용자 지정 문자 모양을 설계할 때 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> 속성에 대해 다양한 값을 원하는 대로 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalPriority">
      <MemberSignature Language="C#" Value="public const int NormalPriority = 10000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NormalPriority = (10000)" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority" />
      <MemberSignature Language="VB.NET" Value="Public Const NormalPriority As Integer  = 10000" />
      <MemberSignature Language="C++ CLI" Value="public: int NormalPriority = 10000;" />
      <MemberSignature Language="F#" Value="val mutable NormalPriority : int" Usage="System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>10000</MemberValue>
      <Docs>
        <summary><see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />에 대한 보통 우선 순위를 나타냅니다. 이 값은 상수입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> 속성의 하위 값은 상위 우선 순위를 나타내는 반면 상위 값은 하위 우선 순위를 나타냅니다. <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority> 필드의 값은 10000입니다.  
  
> [!NOTE]
>  이 상수 값은 사용자 지정 문자 모양을 만들 때 안내선 역할을 합니다. 사용자 지정 문자 모양을 설계할 때 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> 속성에 대해 다양한 값을 원하는 대로 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnActivate (System.Workflow.ComponentModel.Design.ActivityDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivate(class System.Workflow.ComponentModel.Design.ActivityDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerGlyph.OnActivate(System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivate (designer As ActivityDesigner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivate(System::Workflow::ComponentModel::Design::ActivityDesigner ^ designer);" />
      <MemberSignature Language="F#" Value="abstract member OnActivate : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; unit&#xA;override this.OnActivate : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; unit" Usage="designerGlyph.OnActivate designer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="designer">문자 모양이 그려질 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />입니다.</param>
        <summary>문자 모양을 활성화한 작업이 수행된 문자 모양을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 OnActivate 메서드의 구현을 보여 줍니다.  이 예제는 Tracking Profile Designer SDK 샘플에 포함되어 있습니다.  자세한 내용은 [Tracking Profile Designer 샘플](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90))합니다.  
  
 [!code-csharp[WF_Samples#119](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#119)]
 [!code-vb[WF_Samples#119](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#119)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected abstract void OnPaint (System.Drawing.Graphics graphics, bool activated, System.Workflow.ComponentModel.Design.AmbientTheme ambientTheme, System.Workflow.ComponentModel.Design.ActivityDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Drawing.Graphics graphics, bool activated, class System.Workflow.ComponentModel.Design.AmbientTheme ambientTheme, class System.Workflow.ComponentModel.Design.ActivityDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnPaint(System::Drawing::Graphics ^ graphics, bool activated, System::Workflow::ComponentModel::Design::AmbientTheme ^ ambientTheme, System::Workflow::ComponentModel::Design::ActivityDesigner ^ designer);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Drawing.Graphics * bool * System.Workflow.ComponentModel.Design.AmbientTheme * System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; unit" Usage="designerGlyph.OnPaint (graphics, activated, ambientTheme, designer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="activated" Type="System.Boolean" />
        <Parameter Name="ambientTheme" Type="System.Workflow.ComponentModel.Design.AmbientTheme" />
        <Parameter Name="designer" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="graphics">채우기 및 그리기 작업을 수행할 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="activated">문자 모양이 디자인 화면에 표시되면 <see langword="true" />이고, 그렇지 않을 경우에는 <see langword="false" />입니다.</param>
        <param name="ambientTheme">앰비언트 속성 설정에 액세스할 때 사용할 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />입니다.</param>
        <param name="designer">사용자 작업에 대한 정보를 가져올 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 활동 디자이너 화면에 문자 모양을 렌더링하는 데 필요한 작업을 수행합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint%2A>는 <xref:System.Workflow.ComponentModel.Design.AmbientTheme.CommentIndicatorPen%2A>을 사용하여 채울 주석 문자 모양 및 <xref:System.Workflow.ComponentModel.Design.AmbientTheme.CommentIndicatorBrush%2A>의 경계를 그립니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint%2A> 메서드를 재정의하는 방법을 보여 줍니다. 코드는 문자 모양이 연결되는 Activity Designer에 문자 모양 개체를 그리는 방법을 사용자 지정합니다.  
  
 이 코드 예제는 DesignerGlyphProvider.cs 파일에 있는 Workflow Monitor SDK 샘플의 일부입니다. 자세한 내용은 [워크플로 모니터](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90))합니다.  
  
 [!code-csharp[WF_Samples#134](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#134)]
 [!code-vb[WF_Samples#134](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#134)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)">워크플로 모니터</related>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public virtual int Priority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Priority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int" Usage="System.Workflow.ComponentModel.Design.DesignerGlyph.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>활동 디자인 화면의 디자이너 문자 모양에 대한 우선 순위 설정을 가져옵니다.</summary>
        <value>활동 디자이너 화면에서 <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" />에 대한 우선 순위 설정을 나타내는 정수 값입니다. 하위 값은 상위 우선 순위를 나타내므로 Activity Designer의 맨 위 Z 순서 위치에 문자 모양을 그립니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>