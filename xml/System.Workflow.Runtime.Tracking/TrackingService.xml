<Type Name="TrackingService" FullName="System.Workflow.Runtime.Tracking.TrackingService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9373e323744498669b0bf0e86ac35613e3afaad3" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51871212" /></Metadata><TypeSignature Language="C#" Value="public abstract class TrackingService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrackingService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrackingService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type TrackingService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>추적 서비스와 런타임 추적 인프라 간의 기본 인터페이스를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 추적 서비스는 추적 채널과 추적 프로필을 워크플로 런타임 엔진에 제공합니다. 워크플로 런타임 엔진은 <xref:System.Workflow.Runtime.Tracking.TrackingChannel>이 있는 각 워크플로 인스턴스에 대한 추적 서비스에서 하나의 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>을 요청합니다. 워크플로 런타임 엔진은 이 <xref:System.Workflow.Runtime.Tracking.TrackingChannel>을 사용하여 해당 워크플로 인스턴스와 연결된 추적 레코드를 보냅니다. <xref:System.Workflow.Runtime.Tracking.TrackingProfile>은 런타임 추적 인프라에서 추적 레코드를 보내야 하는 추적 이벤트 집합을 지정하는 추적 지점을 포함합니다. <xref:System.Workflow.Runtime.Tracking.TrackingProfile>은 추적 이벤트 중 하나가 발생할 때 워크플로 인스턴스에서 추출할 데이터를 지정할 수도 있습니다.  
  
 런타임 추적 인프라는 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>을 사용하여 워크플로 인스턴스에서 내보내는 추적 이벤트를 필터링합니다. <xref:System.Workflow.Runtime.Tracking.TrackingProfile>의 추적 지점과 일치하는 추적 이벤트를 내보낼 때 런타임 추적 인프라는 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>에 지정된 모든 데이터를 워크플로 인스턴스에서 추출하고 이 데이터와 추적 이벤트 정보를 추적 레코드에 캡슐화합니다. 이 추적 레코드는 워크플로 인스턴스와 연결된 <xref:System.Workflow.Runtime.Tracking.TrackingChannel>을 통해 전송됩니다. 추적 레코드는 세 종류 중 하나일 수 있습니다.  
  
 <xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord>  
  
 <xref:System.Workflow.Runtime.Tracking.UserTrackingRecord>  
  
 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>  
  
 호스트 애플리케이션은 선택한 임의의 방식으로 추적 레코드를 사용할 수 있습니다. 예를 들어 호스트 애플리케이션은 추적 정보를 데이터베이스에 저장하고 이를 사용하여 복잡한 사용자 인터페이스를 구현하거나, 이 정보를 사용하여 관리자에게 일부 작업이 필요한 상태를 알릴 수 있습니다. <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A?displayProperty=nameWithType>를 호출하거나 응용 프로그램 구성 파일에 해당 항목을 포함하여 워크플로 런타임 엔진에 추적 서비스를 등록할 수 있습니다.  
  
 모든 추적 서비스는 <xref:System.Workflow.Runtime.Tracking.TrackingService> 추상 클래스에서 상속되어야 합니다. 이 클래스는 추적 서비스와 런타임 추적 인프라 간의 기본 인터페이스를 정의합니다. 워크플로 런타임 엔진은 오버로드된 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 메서드 또는 <xref:System.Type> 메서드 중 하나를 호출하여 특정 워크플로 인스턴스나 워크플로 <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A>에 대한 <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A>을 요청합니다. 워크플로 런타임 엔진은 <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A>을 호출하여 <xref:System.Workflow.Runtime.Tracking.TrackingChannel>을 요청합니다.  
  
 워크플로 런타임 엔진은 워크플로 인스턴스를 만들거나 지속성 저장소에서 로드할 때마다 <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> 및 <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> 메서드를 호출합니다. 이러한 호출과 연결된 오버헤드로 인해 추적 서비스의 비용이 증가할 수 있습니다(예: 많은 데이터베이스 호출). 추적 서비스에 <xref:System.Workflow.Runtime.Tracking.IProfileNotification> 인터페이스를 구현하여 이러한 호출 기반 메커니즘을 우회하고 이벤트를 사용하여 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 변경 내용을 워크플로 런타임 엔진에 알릴 수 있습니다. <xref:System.Workflow.Runtime.Tracking.IProfileNotification> 인터페이스를 구현하는 추적 서비스의 경우 워크플로 런타임 엔진은 <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileUpdated> 및 <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileRemoved> 이벤트를 구독합니다. 추적 서비스는 추적 프로필 중 하나가 변경될 때 해당 이벤트를 발생시킬 수 있습니다. <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> 클래스는 이 인터페이스를 구현합니다.  
  
 워크플로 런타임 엔진은 <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> 메서드를 호출하여 호스트나 서비스가 워크플로 인스턴스에서 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>를 명시적으로 호출한 결과 <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A>이 업데이트 또는 제거되었는지 테스트합니다. 이 프로세스를 통해 호스트나 서비스는 특정 워크플로 인스턴스에 사용되는 추적 프로필을 동적으로 변경할 수 있습니다.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>상속- <see cref="T:System.Workflow.Runtime.Tracking.TrackingService" />, 멤버를 재정의 해야 합니다. <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)" /></para></block>
    <altmember cref="T:System.Workflow.Runtime.Tracking.IProfileNotification" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrackingService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TrackingService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 구현되는 경우에는 <see cref="T:System.Workflow.Runtime.Tracking.TrackingService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 해당 형식이 `TerminationTrackingService`에서 파생된 `TrackingService` 개체의 새 인스턴스를 만드는 방법을 보여 줍니다. 이 샘플은 Termination Tracking Service SDK 샘플에 포함되어 있습니다. 자세한 내용은 [종료 추적 서비스 샘플](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)합니다.  
  
 [!code-csharp[WF_Samples#111](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#111)]
 [!code-vb[WF_Samples#111](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProfile">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에서 재정의되어야 하며, 구현되는 경우 지정된 워크플로 인스턴스나 워크플로 유형에 대한 추적 프로필을 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추적 서비스는 특정 워크플로 유형 및 특정 워크플로 인스턴스에 사용할 수 있는 추적 프로필을 관리하는 작업을 담당합니다. 어떤 방법이든 선택하여 이 관리를 구현할 수 있습니다. 예를 들어 모든 워크플로 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 및 워크플로 인스턴스에 대해 동일한 <xref:System.Type>을 반환할 수도 있고, 워크플로 인스턴스, 워크플로 <xref:System.Type> 및 <xref:System.Version>에서 참조하는 복잡한 추적 프로필 저장소를 관리할 수도 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingProfile GetProfile(valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetProfile (workflowInstanceId As Guid) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingProfile ^ GetProfile(Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="abstract member GetProfile : Guid -&gt; System.Workflow.Runtime.Tracking.TrackingProfile" Usage="trackingService.GetProfile workflowInstanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowInstanceId">워크플로 인스턴스의 <see cref="T:System.Guid" />입니다.</param>
        <summary>파생 클래스에서 재정의되어야 하며, 구현되는 경우 지정된 워크플로 인스턴스에 대한 추적 프로필을 반환합니다.</summary>
        <returns>지정된 워크플로 인스턴스에 대한 추적 프로필입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추적 서비스는 특정 워크플로 유형 및 특정 워크플로 인스턴스에 사용할 수 있는 추적 프로필을 관리하는 작업을 담당합니다. 어떤 방법이든 선택하여 이 관리를 구현할 수 있습니다. 예를 들어 모든 워크플로 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 및 워크플로 인스턴스에 대해 동일한 <xref:System.Type>을 반환할 수도 있고, 워크플로 인스턴스, 워크플로 <xref:System.Type> 및 <xref:System.Version>에서 참조하는 복잡한 추적 프로필 저장소를 관리할 수도 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 `GetProfile` 메서드의 구현을 보여 줍니다. 이 예제에서는 `GetProfile` 메서드의 여러 오버로드가 하드 코딩된 기본 추적 프로필을 반환하는 하나의 전용 `GetProfile` 메서드를 호출합니다. 이 예제는 Termination Tracking Service SDK 샘플에 포함되어 있습니다. 자세한 내용은 [종료 추적 서비스 샘플](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)합니다.  
  
 [!code-csharp[WF_Samples#115](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#115)]
 [!code-vb[WF_Samples#115](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Type workflowType, Version profileVersionId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingProfile GetProfile(class System.Type workflowType, class System.Version profileVersionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetProfile (workflowType As Type, profileVersionId As Version) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingProfile ^ GetProfile(Type ^ workflowType, Version ^ profileVersionId);" />
      <MemberSignature Language="F#" Value="abstract member GetProfile : Type * Version -&gt; System.Workflow.Runtime.Tracking.TrackingProfile" Usage="trackingService.GetProfile (workflowType, profileVersionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="profileVersionId" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="workflowType">워크플로의 <see cref="T:System.Type" />입니다.</param>
        <param name="profileVersionId">추적 프로필의 <see cref="T:System.Version" />입니다.</param>
        <summary>파생 클래스에서 재정의되어야 하며, 구현되는 경우 지정된 워크플로 <see cref="T:System.Type" />에 대한 버전으로 정규화된 추적 프로필을 반환합니다.</summary>
        <returns>지정된 워크플로 형식에 대한 추적 프로필입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추적 서비스는 특정 워크플로 유형 및 특정 워크플로 인스턴스에 사용할 수 있는 추적 프로필을 관리하는 작업을 담당합니다. 어떤 방법이든 선택하여 이 관리를 구현할 수 있습니다. 예를 들어 모든 워크플로 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 및 워크플로 인스턴스에 대해 동일한 <xref:System.Type>을 반환할 수도 있고, 워크플로 인스턴스, 워크플로 <xref:System.Type> 및 <xref:System.Version>에서 참조하는 복잡한 추적 프로필 저장소를 관리할 수도 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrackingChannel">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel (System.Workflow.Runtime.Tracking.TrackingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel(class System.Workflow.Runtime.Tracking.TrackingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetTrackingChannel (parameters As TrackingParameters) As TrackingChannel" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingChannel ^ GetTrackingChannel(System::Workflow::Runtime::Tracking::TrackingParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member GetTrackingChannel : System.Workflow.Runtime.Tracking.TrackingParameters -&gt; System.Workflow.Runtime.Tracking.TrackingChannel" Usage="trackingService.GetTrackingChannel parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Workflow.Runtime.Tracking.TrackingParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">워크플로 인스턴스와 연결된 <see cref="T:System.Workflow.Runtime.Tracking.TrackingParameters" />입니다.</param>
        <summary>파생 클래스에서 재정의되어야 하며, 구현되는 경우 런타임 추적 인프라가 추적 레코드를 추적 서비스로 보내는 데 사용하는 채널을 반환합니다.</summary>
        <returns>추적 레코드를 추적 서비스로 보내는 데 사용되는 <see cref="T:System.Workflow.Runtime.Tracking.TrackingChannel" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 런타임 추적 인프라는 각 워크플로 인스턴스에 대해 추적 서비스당 하나의 <xref:System.Workflow.Runtime.Tracking.TrackingChannel>을 사용합니다. 워크플로 런타임 엔진은 각 추적 서비스에서 <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A>을 호출하여 해당 서비스에 대한 <xref:System.Workflow.Runtime.Tracking.TrackingChannel>을 가져옵니다. <xref:System.Workflow.Runtime.Tracking.TrackingParameters>에 포함되어 전달된 정보를 사용하여 추적 서비스에 대해 <xref:System.Workflow.Runtime.Tracking.TrackingChannel>에서 전송된 추적 데이터를 특정 루트 워크플로 인스턴스와 연결할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 `GetTrackingChannel` 메서드의 구현을 보여 줍니다. 이 예제는 Termination Tracking Service SDK 샘플에 포함되어 있습니다. 자세한 내용은 [종료 추적 서비스 샘플](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)합니다.  
  
 [!code-csharp[WF_Samples#113](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#113)]
 [!code-vb[WF_Samples#113](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#113)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryGetProfile (Type workflowType, out System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryGetProfile(class System.Type workflowType, [out] class System.Workflow.Runtime.Tracking.TrackingProfile&amp; profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryGetProfile (workflowType As Type, ByRef profile As TrackingProfile) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryGetProfile(Type ^ workflowType, [Runtime::InteropServices::Out] System::Workflow::Runtime::Tracking::TrackingProfile ^ % profile);" />
      <MemberSignature Language="F#" Value="abstract member TryGetProfile : Type *  -&gt; bool" Usage="trackingService.TryGetProfile (workflowType, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile" RefType="out" />
      </Parameters>
      <Docs>
        <param name="workflowType">추적 프로필을 가져올 워크플로의 <see cref="T:System.Type" />입니다.</param>
        <param name="profile">이 메서드가 반환되는 경우 로드할 <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" />을 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>파생 클래스에서 재정의되어야 하며, 구현되는 경우 지정된 워크플로 유형에 대한 추적 프로필(사용 가능한 경우)을 검색합니다.</summary>
        <returns>지정된 워크플로 <see langword="true" />에 대한 <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" />을 사용할 수 있으면 <see cref="T:System.Type" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="true" />이면 <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" />에 <paramref name="profile" />이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추적 서비스는 특정 워크플로 유형 및 특정 워크플로 인스턴스에 사용할 수 있는 추적 프로필을 관리하는 작업을 담당합니다. 어떤 방법이든 선택하여 이 관리를 구현할 수 있습니다. 예를 들어 모든 워크플로 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 및 워크플로 인스턴스에 대해 동일한 <xref:System.Type>을 반환할 수도 있고, 워크플로 인스턴스, 워크플로 <xref:System.Type> 및 <xref:System.Version>에서 참조하는 복잡한 추적 프로필 저장소를 관리할 수도 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 전용 `TryGetProfile` 메서드를 호출하는 `GetProfile` 메서드의 구현 방법을 보여 줍니다. 이 예제는 Termination Tracking Service SDK 샘플에 포함되어 있습니다. 자세한 내용은 [종료 추적 서비스 샘플](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)합니다.  
  
 [!code-csharp[Wf_samples#209](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#209)]
 [!code-vb[Wf_samples#209](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#209)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReloadProfile">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryReloadProfile (Type workflowType, Guid workflowInstanceId, out System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryReloadProfile(class System.Type workflowType, valuetype System.Guid workflowInstanceId, [out] class System.Workflow.Runtime.Tracking.TrackingProfile&amp; profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryReloadProfile (workflowType As Type, workflowInstanceId As Guid, ByRef profile As TrackingProfile) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryReloadProfile(Type ^ workflowType, Guid workflowInstanceId, [Runtime::InteropServices::Out] System::Workflow::Runtime::Tracking::TrackingProfile ^ % profile);" />
      <MemberSignature Language="F#" Value="abstract member TryReloadProfile : Type * Guid *  -&gt; bool" Usage="trackingService.TryReloadProfile (workflowType, workflowInstanceId, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile" RefType="out" />
      </Parameters>
      <Docs>
        <param name="workflowType">워크플로 인스턴스의 <see cref="T:System.Type" />입니다.</param>
        <param name="workflowInstanceId">워크플로 인스턴스의 <see cref="T:System.Guid" />입니다.</param>
        <param name="profile">이 메서드가 반환되는 경우 로드할 <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" />을 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>파생 클래스에서 재정의되어야 하며, 구현되는 경우 추적 프로필이 마지막으로 로드된 이후 변경되었으면 지정된 워크플로 인스턴스에 대한 새 추적 프로필을 검색합니다.</summary>
        <returns>새 <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" />을 로드해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. <see langword="true" />이면 <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" />에 <paramref name="profile" />이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 런타임 추적 인프라는 <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A>을 호출하여 지정된 워크플로 인스턴스에 대해 새 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>을 로드할지 여부를 결정합니다. 새 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>이 필요한 경우 `profile`에 반환됩니다. 런타임 추적 인프라가 워크플로 인스턴스 추적을 중지하도록 하려면 추적 서비스가 `true`를 반환하고 `profile`을 null 참조(Visual Basic의 경우 `Nothing`)와 같도록 설정해야 합니다. 추적 서비스는 어떤 방식으로 추적 프로필을 다시 로드할지 여부를 결정하든 관계없이 `workflowType` 또는 `workflowInstanceId`를 사용할 수 있습니다. 예를 들어 <xref:System.Workflow.Runtime.Tracking.SqlTrackingService>는 `workflowInstanceId`를 사용하여 추적 프로필을 다시 로드할지 여부를 결정합니다. <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A>은 자체의 추적 의미 체계에 따라 또는 워크플로 인스턴스에서 <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A?displayProperty=nameWithType>를 호출하는 호스트나 서비스에 대한 응답으로 런타임 추적 인프라에 의해 호출됩니다.  
  
   
  
## Examples  
 다음 예제에서는 `TryReloadProfile` 메서드의 기본 구현을 보여 줍니다. 이 예제는 Termination Tracking Service SDK 샘플에 포함되어 있습니다. 자세한 내용은 [종료 추적 서비스 샘플](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)합니다.  
  
 [!code-csharp[WF_Samples#116](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#116)]
 [!code-vb[WF_Samples#116](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#116)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>