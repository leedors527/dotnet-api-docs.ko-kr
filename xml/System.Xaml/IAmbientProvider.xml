<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="990e86b4fd231c11e337c0404408cd1997d813eb" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57912660" /></Metadata><TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>앰비언트 속성 또는 앰비언트 형식에 대한 정보 항목을 형식 변환기 및 태그 확장에 반환할 수 있는 서비스를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스는 형식 변환기 및 XAML 형식 시스템에 대 한 앰비언트 속성 id를 가져오려면 태그 확장에 도움이 되는 서비스를 나타냅니다 (<xref:System.Xaml.XamlMember> 개체). 서비스는 클래스에서 앰비언트 속성 값을 가져올 수도 있습니다. 형식이 앰비언트; 수도 있습니다. 해당 값으로 해당 형식을 사용 하는 모든 멤버를 앰비언트 고려 되어야 합니다.  
  
 이 서비스를 호출 하 여 일반적으로 반환 됩니다 <xref:System.IServiceProvider.GetService%2A>, 상황에 맞는 서비스 공급자에 대 한 합니다. 서비스 공급자 값 변환기의 실행 코드와 같이 필요로 하는 컨텍스트를 일반 공급 됩니다. 자세한 내용은 [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) 하 고 [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)합니다.  
  
## <a name="about-ambient-properties"></a>앰비언트 속성 정보  
 앰비언트 속성은 속성 값 형식 변환기 또는 존재 하는 태그 확장 사용에서 만든 개체 그래프를 XAML 노드 구조에 사용할 수 있어야 하는 속성입니다. 이 로드 경로 개체 4-5 단계 또는 serialization에 대 한 단계의 저장 하는 동안 XAML 프로세서와 관련 된 경로입니다.  
  
 로드 경로에서는 앰비언트 속성 값을 개체 그래프를 XAML 노드 구조의 아래에 있는 다른 속성의 값에 영향을 줄 수 있습니다. XAML 노드 스트림으로 처리 하는 경우 앰비언트 개념은 의미 앰비언트 속성 값을 형식 변환기 또는 태그 확장에서 사용할 수 있어야 합니다 `StartObject` 에 `EndObject`입니다. 마찬가지로, 형식 변환기를 사용 하는 저장에 대 한 경로는 앰비언트 속성 및 해당 값의 지식을 사용할 수 있습니다. 따라서 생성 되는 XAML에는 더 나은 라운드트립 표현입니다.  
  
 일반적으로 멤버에 대 한 XAML 개체의 멤버를 처리 해야 순서를 지정 하지 않습니다. 그러나 앰비언트 속성 값 먼저 처리 해야 XAML 판독기는 형식 변환기 및 태그 확장 사용 다른 속성에 포함 된를 통해 액세스할 수 있도록는 <xref:System.Xaml.IAmbientProvider> 서비스입니다.  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> 또한 XAML 노드 처리 순서에 영향을 주는 이와 비슷한 개념 이며 그러나 <xref:System.Xaml.XamlMember.DependsOn%2A> 피어 노드 및 멤버 관계; 에서만 사용할 수 있습니다 모든 하위 항목에는 영향을 줄 수 없습니다. 또한 <xref:System.Xaml.XamlMember.DependsOn%2A> 직접 영향을 줍니다 그래프 속성 설정이 앰비언트 기술 형식 변환기 또는 태그 확장에 의존 하는 반면 개체입니다. 앰비언트 기술에도 있어야 특정 형식 변환기 또는 태그 확장 정의 앰비언트 속성 값은 해석 및 개체에 적용 하는 방법을 지정 하는 합니다.  
  
## <a name="wpf-usage-notes"></a>WPF 사용 정보  
 에 나와 있는 앰비언트 속성 시나리오를 합니다 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 기능 집합은 <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, 다른 값에 대 한 필수 속성 이름을 조회를 한정할 수는 있습니다. 이 경우에 <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> 값 한정을 <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> XAML 노드 아래에 있는 값입니다. <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 에 대 한 형식 변환기의 동작을 사용 하는 <xref:System.Windows.DependencyProperty>합니다. 이 동작은 액세스 앰비언트 <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> 쿼리하여 값 <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> 형식 변환기 및 태그 확장에 사용할 수 있는 서비스 컨텍스트에서 합니다.  
  
 앰비언트 형식을 WPF 기능 집합에 나와 있는 경우 <xref:System.Windows.ResourceDictionary>합니다. <xref:System.Windows.ResourceDictionary> 에 <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> 기타를 포함할 수 있는 속성 <xref:System.Windows.ResourceDictionary> 를 병합 하는 개체 및 리소스 확인의 형식이 로드 되는 순서를 사용 하 여 병합된 시나리오 충돌 의도 한 순서입니다. <xref:System.Windows.ResourceDictionary> 적용 대상 <xref:System.Windows.Markup.AmbientAttribute> XAML 프로세서를 사용 하 여 병합 된 사전에 대 한 참조를 올바르게 처리할 수 있도록 `StaticResource` 사용 합니다. 특히 `StaticResource` 를 호출 하는 태그 확장은 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>요청된 범위에 대해 앰비언트 형식 또는 속성 정보 항목의 열거 가능한 집합을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">앰비언트 형식 정보를 검색할 형식 집합입니다.</param>
        <summary>요청된 형식에 대해 가능한 앰비언트 형식의 열거 가능한 개체 인스턴스 집합을 반환합니다.</summary>
        <returns>요청된 <see cref="T:System.Xaml.XamlType" /> 식별자 집합에 대한 값을 나타내는 개체의 열거 가능한 집합입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">개체 그래프에서 상향 트래버스를 수행할 때 발견될 경우 평가를 중지해야 하는 형식을 하나 이상 지정합니다. 이 형식에는 원하는 앰비언트 속성이 포함됩니다. <see langword="null" />일 수 있습니다.</param>
        <param name="properties">앰비언트로 간주할 속성을 식별하는 속성 식별자 개체를 하나 이상 지정합니다.</param>
        <summary>요청된 속성 집합에 대해 앰비언트 속성 정보 항목의 열거 가능한 집합을 반환합니다.</summary>
        <returns>요청된 속성 집합에 대한 앰비언트 속성 정보 항목의 열거 가능한 집합입니다. 반환되는 각 <see cref="T:System.Xaml.AmbientPropertyValue" />의 속성 정보는 입력 <paramref name="properties" /> 중 하나와 일치하게 됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 각 <xref:System.Xaml.AmbientPropertyValue> 포함 되어 반환 되는 <xref:System.Xaml.XamlMember> 식별자 및 속성 값입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">개체 그래프에서 상향 트래버스를 수행할 때 발견될 경우 평가를 중지해야 하는 형식을 하나 이상 지정합니다. 이 형식에는 원하는 앰비언트 속성이 포함됩니다. <see langword="null" />일 수 있습니다.</param>
        <param name="searchLiveStackOnly">저장된 컨텍스트를 사용하지 않으려면 <see langword="true" />, 저장된 컨텍스트를 사용하려면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
        <param name="types">앰비언트로 간주할 형식을 식별하는 형식 식별자 개체를 하나 이상 지정합니다.</param>
        <param name="properties">앰비언트로 간주할 속성을 식별하는 속성 식별자 개체를 하나 이상 지정합니다.</param>
        <summary>요청된 형식 및 속성 집합에 대해 앰비언트 속성 정보 항목의 열거 가능한 집합을 반환합니다.</summary>
        <returns>요청된 형식 및 속성 집합에 대해 앰비언트 속성 정보 항목의 열거 가능한 집합을 반환합니다. 반환되는 각 <see cref="T:System.Xaml.AmbientPropertyValue" />의 속성 정보는 입력 <paramref name="types" /> 또는 <paramref name="properties" /> 중 하나와 일치하게 됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 각 <xref:System.Xaml.AmbientPropertyValue> 포함 되어 반환 되는 <xref:System.Xaml.XamlMember> 식별자 및 속성 값입니다.  
  
 이 특정 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> 앰비언트 형식에 대 한 오버 로드를 검색할 수 있으며 동일한 앰비언트 속성 트리를 통해 전달 합니다. 이 오버 로드를 사용 하면 다른 반환 값에 있는 항목의 순서 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> 또는 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>합니다.  
  
 이 오버 로드는 또한 저장된 된 컨텍스트를 사용 하지 않도록 검색을 허용 합니다. <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> 하거나 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> 오버 로드는 암시적으로 저장된 된 컨텍스트를 사용 가능 하다 면 (항상 처럼 동작 암시적 `searchLiveStackOnly` 매개 변수는 `false`). 잠재적으로 저장된 된 컨텍스트 개념이 특정 XAML 스키마 컨텍스트 또는 XAML을 통합 하는 프레임 워크에 의해 다르게 처리 됩니다. WPF XAML 구현에서 저장 된 컨텍스트는 다른 기능 영역 뿐만 아니라 템플릿 확장에 사용 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>어떠한 속성이 먼저 발견되는지를 기준으로 요청된 집합에서 단일 앰비언트 형식 또는 속성 정보 항목을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">앰비언트 형식 정보를 검색할 형식 집합입니다.</param>
        <summary>요청된 형식에 대해 가능한 앰비언트 형식인 첫 번째 일치 개체를 반환합니다.</summary>
        <returns>요청된 집합에 대한 첫 번째 결과 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">개체 그래프에서 상향 트래버스를 수행할 때 발견될 경우 평가를 중지해야 하는 형식을 하나 이상 지정합니다. 이 형식에는 원하는 앰비언트 속성이 포함됩니다.</param>
        <param name="properties">앰비언트로 간주되어야 하는 속성을 식별하는 개체를 하나 이상 지정합니다.</param>
        <summary>어떠한 속성이 먼저 발견되는지를 기준으로 요청된 속성 집합에서 단일 앰비언트 속성 정보 항목을 반환합니다.</summary>
        <returns>발견된 <paramref name="properties" /> 목록에서 첫 번째 앰비언트 속성 값에 대한 단일 앰비언트 속성 정보 항목입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 각 <xref:System.Xaml.AmbientPropertyValue> 포함 되어 반환 되는 <xref:System.Xaml.XamlMember> 식별자 및 속성 값입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>