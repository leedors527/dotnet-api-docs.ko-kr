<Type Name="XamlDirective" FullName="System.Xaml.XamlDirective">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95fab87d5eed7bb70a2918e6a942597a62d78e89" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51934954" /></Metadata><TypeSignature Language="C#" Value="public class XamlDirective : System.Xaml.XamlMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlDirective extends System.Xaml.XamlMember" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlDirective" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlDirective&#xA;Inherits XamlMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlDirective : System::Xaml::XamlMember" />
  <TypeSignature Language="F#" Value="type XamlDirective = class&#xA;    inherit XamlMember" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>멤버가 XAML 지시문이기도 한 경우 멤버의 XAML 형식 시스템 식별자를 제공합니다. 멤버 노드를 처리하는 동안 XAML 판독기 및 XAML 작성기는 <see cref="T:System.Xaml.XamlDirective" /> 식별자를 사용합니다. XAML 판독기가 <see cref="F:System.Xaml.XamlNodeType.StartMember" />에 위치하고 <see cref="P:System.Xaml.XamlMember.IsDirective" />가 <see langword="true" />인 경우 식별자가 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> 멤버가 XAML 지시문 인 경우 XAML 형식 시스템에 대 한 예상 값을 제공 합니다. 정의 따라 XAML 지시문에 항상 동일한 결과의 하위 집합을 반환 하는 특성을 <xref:System.Xaml.XamlMember> 속성과 동일한 XAML 형식 시스템 정보 모든 가능한 XAML 지시문에 대 한 보고 됩니다. 내부 동작 하거나 재정의 통해 이루어집니다 지시문에 관련 된 XAML 형식 시스템 특성의 보고 <xref:System.Xaml.XamlMember> `Lookup*` 가상 멤버를 <xref:System.Xaml.XamlDirective> 클래스입니다.  
  
 다음 목록에 대 한 XAML 지시문의 반환 된 결과 보여 줍니다 <xref:System.Xaml.XamlMember> 멤버를 실제로 경우는 <xref:System.Xaml.XamlDirective>:  
  
-   <xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> 항상 `null`합니다.  
  
-   <xref:System.Xaml.XamlMember.DeferringLoader%2A> 항상 `null`합니다.  
  
-   <xref:System.Xaml.XamlMember.DependsOn%2A> 항상 `null`합니다.  
  
-   <xref:System.Xaml.XamlMember.IsAmbient%2A> 항상 `false`합니다.  
  
-   <xref:System.Xaml.XamlMember.IsAttachable%2A> 항상 `false`합니다.  
  
-   <xref:System.Xaml.XamlMember.IsDirective%2A> 항상 `true`합니다.  
  
-   <xref:System.Xaml.XamlMember.IsEvent%2A> 항상 `false`합니다.  
  
-   <xref:System.Xaml.XamlMember.IsReadOnly%2A> 항상 `false`합니다.  
  
-   <xref:System.Xaml.XamlMember.IsReadPublic%2A> 항상 `true`합니다.  
  
-   <xref:System.Xaml.XamlMember.IsWritePublic%2A> 항상 `true`합니다.  
  
 또한 내부 지원 <xref:System.Xaml.XamlMember.DeclaringType%2A> 설정 되지 않은 상태의 및 반환 `null`합니다.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlDirective> 가 <xref:System.Xaml.XamlMember> 하위 클래스입니다. 와 마찬가지로 <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> XAML 형식 시스템 액세스를 보고 하는 방법에 대 한 보안 고려 사항이 있습니다. <xref:System.Xaml.XamlMember>을 참조하세요.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlMember" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3">XAML 노드 스트림 구조 및 개념 이해</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xaml.XamlDirective" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : string * string -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespace, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">이 <see cref="T:System.Xaml.XamlDirective" />가 있을 수 있는 기본 XAML 네임스페이스입니다.</param>
        <param name="name"><see cref="T:System.Xaml.XamlDirective" />의 식별 이름입니다.</param>
        <summary>이름 및 단일 XAML 네임스페이스에 대한 값을 지정하여 <see cref="T:System.Xaml.XamlDirective" /> 클래스의 새 인스턴스를 초기화합니다. <see cref="P:System.Xaml.XamlMember.IsUnknown" />이 지시문에 대해 <see langword="true" />를 보고하도록 하려는 경우에만 이 시그니처를 사용하십시오.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  생성자의이 시그니처에이 지시문에 대 한 식별자는 항상 생성 위치 <xref:System.Xaml.XamlMember.IsUnknown%2A> 보고서 `true` 는 XAML에 대 한 형식 시스템. 필요한 정보를 사용할 수 있는 경우 (지원 형식 및 변환에 대 한 텍스트 구문 정보 항목) 및 원하는 지시문을 사용 하 여 적용할 수 있는 식별자는 <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> 생성자 시그니처 대신 합니다.  
  
 이 서명을 사용 하는 경우는 <xref:System.Xaml.XamlDirective.AllowedLocation%2A> 인스턴스가 값 <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; 하며 <xref:System.Xaml.XamlMember.Type%2A> 값 및 <xref:System.Xaml.XamlMember.TypeConverter%2A> 값이 모두 `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (System.Collections.Generic.IEnumerable&lt;string&gt; xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; xamlNamespaces, string name, class System.Xaml.XamlType xamlType, class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; typeConverter, valuetype System.Xaml.Schema.AllowedMemberLocations allowedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ xamlNamespaces, System::String ^ name, System::Xaml::XamlType ^ xamlType, System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ typeConverter, System::Xaml::Schema::AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlDirective : seq&lt;string&gt; * string * System.Xaml.XamlType * System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; * System.Xaml.Schema.AllowedMemberLocations -&gt; System.Xaml.XamlDirective" Usage="new System.Xaml.XamlDirective (xamlNamespaces, name, xamlType, typeConverter, allowedLocation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespaces" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
        <Parameter Name="typeConverter" Type="System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" />
        <Parameter Name="allowedLocation" Type="System.Xaml.Schema.AllowedMemberLocations" />
      </Parameters>
      <Docs>
        <param name="xamlNamespaces">이 <see cref="T:System.Xaml.XamlDirective" />가 있을 수 있는 XAML 네임스페이스 집합으로, 식별자 문자열의 열거 가능 집합으로 전달됩니다.</param>
        <param name="name"><see cref="T:System.Xaml.XamlDirective" />의 식별 이름입니다.</param>
        <param name="xamlType"><see cref="T:System.Xaml.XamlDirective" />를 지원하는 XAML 형식입니다.</param>
        <param name="typeConverter">이 <see cref="T:System.Xaml.XamlDirective" />가 텍스트 구문 변환에 사용하는 형식 변환기입니다.</param>
        <param name="allowedLocation"><see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> 열거형의 값입니다.</param>
        <summary><see cref="T:System.Xaml.XamlDirective" />의 가능한 각 사례 값에 대한 값을 지정하여 <see cref="T:System.Xaml.XamlDirective" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 생성 하려면이 생성자를 사용 해야 합니다는 <xref:System.Xaml.XamlDirective> 보고 하지 않습니다 <xref:System.Xaml.XamlMember.IsUnknown%2A> 으로 `true`입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xamlType" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedLocation">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.Schema.AllowedMemberLocations AllowedLocation" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlDirective.AllowedLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedLocation As AllowedMemberLocations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::AllowedMemberLocations AllowedLocation { System::Xaml::Schema::AllowedMemberLocations get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedLocation : System.Xaml.Schema.AllowedMemberLocations" Usage="System.Xaml.XamlDirective.AllowedLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.AllowedMemberLocations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지시문을 지정할 수 있는 XAML 노드 형식을 지정하는 값을 가져옵니다.</summary>
        <value>열거형 값입니다. 기본값은 열거형 기본값인 <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값을 설정할 수는 <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> 생성자 시그니처입니다. 사용 하 여 생성 하는 경우는 <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> 생성자 시그니처를 <xref:System.Xaml.XamlDirective.AllowedLocation%2A> 인스턴스가 값 <xref:System.Xaml.Schema.AllowedMemberLocations.Any>합니다. 그러나 인스턴스가 항상 보고 <xref:System.Xaml.XamlMember.IsUnknown%2A> 으로 `true`입니다. 이 동작은 일반적으로 영향을 줍니다 개체 그래프를 다른 실제 사용의 영향을 미칩니다 쓰기 시도 <xref:System.Xaml.XamlMember> 값입니다.  
  
 일반적으로 없습니다를 생성 하는 XAML 지시문 경우 여기서 <xref:System.Xaml.XamlDirective.AllowedLocation%2A> 는 <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlDirective.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 개체에 대한 해시 코드를 반환합니다.</summary>
        <returns>정수 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlDirective.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 XAML 멤버가 있을 수 있는 XAML 네임스페이스의 목록을 반환합니다.</summary>
        <returns>문자열로 제공되는 XAML 네임스페이스 식별자 목록입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML 네임 스페이스 식별자는 일반적으로 XAML 및 XML 네임 스페이스에 대 한 일반적인 규칙에 따라 리소스 URI (Uniform Identifier) 문자열 형식으로 표시 하는 문자열입니다. 목록에 항목이 둘 이상 있으면 첫 번째 항목 집합에는 일반적으로 처리를 위해 관련 기본 XAML 네임 스페이스 및 다른 항목은 대체 합니다. <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> 이 순서에 의존합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlDirective.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Reflection.ICustomAttributeProvider" /> 구현을 반환합니다. 이 구현에서는 항상 <see langword="null" />을 반환합니다.</summary>
        <returns>항상 <see langword="null" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML 지시문을 사용자 지정 특성을 가질 수 있으므로이 구현은 항상 `null`합니다. <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlDirective.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>XAML 선언된 개체의 지연된 로드 시 사용되는 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 개체를 반환합니다. 이 구현에서는 항상 <see langword="null" />을 반환합니다.</summary>
        <returns>항상 <see langword="null" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지시문은 지연 된 로드를 가질 수 없습니다.이 구현은 항상 `null`합니다. <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected override sealed System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlDirective.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.XamlMember" /> 개체의 목록을 반환합니다. 이 목록은 초기화 순서에 대한 종속성 관계가 이 <see cref="T:System.Xaml.XamlMember" />를 기준으로 존재하는 멤버를 보고합니다. 이 구현에서는 항상 <see langword="null" />을 반환합니다.</summary>
        <returns>항상 <see langword="null" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML 지시문 초기화 순서를 가질 수 없습니다.이 구현은 항상 `null`합니다. <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlDirective.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.Schema.XamlMemberInvoker" />와 연관된 <see cref="T:System.Xaml.XamlDirective" />를 반환합니다.</summary>
        <returns>이 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />에 대한 <see cref="T:System.Xaml.XamlMember" /> 정보입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출 하 여 호출할 수 있습니다 <xref:System.Xaml.XamlMember.Invoker%2A>합니다.  
  
 이 구현은 내부 정적 <xref:System.Xaml.Schema.XamlMemberInvoker> XAML 형식 시스템에서 지시문에 관련 된 값입니다. <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlDirective.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Xaml.XamlMember" />가 앰비언트 속성으로 보고되는지 여부를 반환합니다.</summary>
        <returns>항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML 지시문을 앰비언트 형식을 일 수 없습니다.이 구현은 항상 `false`합니다. <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlMember.LookupIsAmbient" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="override this.LookupIsEvent : unit -&gt; bool" Usage="xamlDirective.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Xaml.XamlDirective" />가 이벤트를 나타내는지 여부를 반환합니다.</summary>
        <returns>항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Xaml.XamlDirective" />가 의도된 읽기 전용 속성을 나타내는지 여부를 반환합니다.</summary>
        <returns>항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정의상, 지시문을 설정할 수 있습니다. <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlDirective.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Xaml.XamlDirective" />가 public <see langword="get" /> 접근자가 있는 속성을 나타내는지 여부를 반환합니다.</summary>
        <returns>항상 <see langword="true" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlDirective.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Xaml.XamlDirective" />가 형식 및 멤버 확인에 사용되는 지원 시스템에서 확인될 수 없는 멤버를 나타내는지 여부를 반환합니다.</summary>
        <returns>이 <see cref="T:System.Xaml.XamlDirective" />가 확인할 수 없는 멤버를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> 구현만 기본 호출 하 고 더 없습니다. 기본 구현은이 순서로 결과 반환 합니다: 결과 내부 리플렉션; 기반한 또는 결과의 null 값을 확인 하는 기준으로 <xref:System.Xaml.XamlMember.UnderlyingMember%2A>합니다. 합니다 <xref:System.Xaml.XamlDirective> 구현을 봉인이 가상 멤버 이므로 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlDirective.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Xaml.XamlDirective" />가 의도된 쓰기 전용 속성을 나타내는지 여부를 반환합니다.</summary>
        <returns>항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlDirective.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Xaml.XamlDirective" />가 public <see langword="set" /> 접근자가 있는 속성을 나타내는지 여부를 반환합니다.</summary>
        <returns>항상 <see langword="true" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.XamlType" />가 있을 수 있는 형식의 <see cref="T:System.Xaml.XamlMember" />을 반환합니다. 이 구현에서는 항상 <see langword="null" />을 반환합니다.</summary>
        <returns>항상 <see langword="null" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대상 형식 지시문에 대 한 관련 됩니다. 따라서이 구현은 항상 `null`합니다. <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlDirective.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버가 사용하는 형식의 <see cref="T:System.Xaml.XamlType" />을 반환합니다.</summary>
        <returns>이 멤버가 사용하는 형식의 <see cref="T:System.Xaml.XamlType" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> 구현만 기본 호출 하 고 더 없습니다. 내부 리플렉션 또는 null 값에 대 한 검사 결과 반환 하는 기본 구현을 <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, 그 순서 대로 처리 합니다. <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 설명을 참조 하세요 <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> 정보에 대 한 자세한 내용은 <xref:System.Xaml.XamlMember.Type%2A> 전달 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlDirective.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Xaml.XamlDirective" />와 연관된 형식 변환기 구현을 반환합니다.</summary>
        <returns><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 제약 조건이 있는 <see cref="T:System.ComponentModel.TypeConverter" /> 인스턴스이거나 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> 구현만 기본 호출 하 고 더 없습니다. <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>을 참조하세요. <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Xaml.XamlDirective" />와 연관된 <see langword="get" /> 접근자를 반환합니다. 이 구현에서는 항상 <see langword="null" />을 반환합니다.</summary>
        <returns>항상 <see langword="null" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlDirective.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Reflection.MemberInfo" />와 연관된 CLR 리플렉션 <see cref="T:System.Xaml.XamlDirective" />를 반환합니다. 이 구현에서는 항상 <see langword="null" />을 반환합니다.</summary>
        <returns>항상 <see langword="null" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlDirective.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Xaml.XamlDirective" />와 연관된 <see langword="set" /> 접근자를 반환합니다. 이 구현에서는 항상 <see langword="null" />을 반환합니다.</summary>
        <returns>항상 <see langword="null" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlDirective> 이 가상 멤버를 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 미리 정의 된 모든 XAML 지시문이이 동작을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlDirective.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Xaml.XamlDirective" />의 문자열 표현을 반환합니다.</summary>
        <returns>이 <see cref="T:System.Xaml.XamlDirective" />의 문자열 표현입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML 네임 스페이스 정보를 사용할 수 있는 경우에이 구현은 문자열 조합 <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> 고 <xref:System.Xaml.XamlMember.Name%2A>입니다. 이 구현은 반환 하는 경우 XAML 네임 스페이스 정보를 사용할 수 없는 <xref:System.Xaml.XamlMember.Name%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>