<Type Name="XamlObjectWriterSettings" FullName="System.Xaml.XamlObjectWriterSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a7db19641b04778786e6e47f0bc6c01050ee11e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39942577" /></Metadata><TypeSignature Language="C#" Value="public class XamlObjectWriterSettings : System.Xaml.XamlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriterSettings extends System.Xaml.XamlWriterSettings" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriterSettings&#xA;Inherits XamlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriterSettings : System::Xaml::XamlWriterSettings" />
  <TypeSignature Language="F#" Value="type XamlObjectWriterSettings = class&#xA;    inherit XamlWriterSettings" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriterSettings</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Xaml.XamlObjectWriter" />에 대한 특정 XAML 작성기 설정을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Xaml.XamlObjectWriter> 함수를 수 있습니다. 내 지정 <xref:System.Xaml.XamlObjectWriterSettings>합니다. 설정을 지정 하지 않으면, 인스턴스 <xref:System.Xaml.XamlObjectWriterSettings> 존재 하는 생성된 된 기본 값을 가진 <xref:System.Xaml.XamlObjectWriter>, 파생 클래스의 설정 병합이 인스턴스를 사용할 수 있습니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <altmember cref="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xaml.XamlObjectWriterSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xaml.XamlObjectWriterSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriterSettings (System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriterSettings(System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriterSettings : System.Xaml.XamlObjectWriterSettings -&gt; System.Xaml.XamlObjectWriterSettings" Usage="new System.Xaml.XamlObjectWriterSettings settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="settings">복사할 설정 인스턴스입니다.</param>
        <summary>기존 인스턴스의 복사본을 기반으로 하는 <see cref="T:System.Xaml.XamlObjectWriterSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="settings" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessLevel">
      <MemberSignature Language="C#" Value="public System.Xaml.Permissions.XamlAccessLevel AccessLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Permissions.XamlAccessLevel AccessLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.AccessLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessLevel As XamlAccessLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Permissions::XamlAccessLevel ^ AccessLevel { System::Xaml::Permissions::XamlAccessLevel ^ get(); void set(System::Xaml::Permissions::XamlAccessLevel ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessLevel : System.Xaml.Permissions.XamlAccessLevel with get, set" Usage="System.Xaml.XamlObjectWriterSettings.AccessLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.Permissions.XamlAccessLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XAML 작성기가 준수하는 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 권한을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 권한입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 부분 신뢰 허용 런타임을 통해 부분 신뢰에서 액세스할 수 있는 public이 아닌 멤버에 대 한 예상된 액세스 수준을 나타냅니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterBeginInitHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; AfterBeginInitHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Xaml.XamlObjectEventArgs&gt; AfterBeginInitHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property AfterBeginInitHandler As EventHandler(Of XamlObjectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ AfterBeginInitHandler { EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ get(); void set(EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AfterBeginInitHandler : EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; with get, set" Usage="System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>생성된 각 개체에 대해 개체 수명의 <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> 단계에서 XAML 작성기가 호출하는 콜백에 대한 참조를 가져오거나 설정합니다.</summary>
        <value>개체 수명의 <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> 단계에서 XAML 작성기가 호출하는 콜백입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
        <altmember cref="T:System.Xaml.XamlObjectEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AfterEndInitHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; AfterEndInitHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Xaml.XamlObjectEventArgs&gt; AfterEndInitHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property AfterEndInitHandler As EventHandler(Of XamlObjectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ AfterEndInitHandler { EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ get(); void set(EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AfterEndInitHandler : EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; with get, set" Usage="System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>생성된 각 개체에 대해 개체 수명의 <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> 단계에서 XAML 작성기가 호출하는 콜백에 대한 참조를 가져오거나 설정합니다.</summary>
        <value>개체 수명의 <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> 단계에서 XAML 작성기가 호출하는 콜백입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
        <altmember cref="T:System.Xaml.XamlObjectEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AfterPropertiesHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; AfterPropertiesHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Xaml.XamlObjectEventArgs&gt; AfterPropertiesHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property AfterPropertiesHandler As EventHandler(Of XamlObjectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ AfterPropertiesHandler { EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ get(); void set(EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AfterPropertiesHandler : EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; with get, set" Usage="System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>생성된 각 개체에 대해 개체 수명의 post-member-write 단계에서 XAML 작성기가 호출하는 콜백에 대한 참조를 가져오거나 설정합니다.</summary>
        <value>개체 수명의 post-member-write 단계에서 XAML 작성기가 호출하는 콜백입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
        <altmember cref="T:System.Xaml.XamlObjectEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="BeforePropertiesHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; BeforePropertiesHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Xaml.XamlObjectEventArgs&gt; BeforePropertiesHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property BeforePropertiesHandler As EventHandler(Of XamlObjectEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ BeforePropertiesHandler { EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ get(); void set(EventHandler&lt;System::Xaml::XamlObjectEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BeforePropertiesHandler : EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; with get, set" Usage="System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>생성된 각 개체에 대해 개체 수명의 pre-member-write 단계에서 XAML 작성기가 호출하는 콜백에 대한 참조를 가져오거나 설정합니다.</summary>
        <value>개체 수명의 pre-member-write 단계에서 XAML 작성기가 호출하는 콜백입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
        <altmember cref="T:System.Xaml.XamlObjectEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ExternalNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope ExternalNameScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope ExternalNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ ExternalNameScope { System::Windows::Markup::INameScope ^ get(); void set(System::Windows::Markup::INameScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExternalNameScope : System.Windows.Markup.INameScope with get, set" Usage="System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" />가 <see langword="true" />일 경우 등록 중인 이름에 사용할 XAML 네임스페이스를 XAML 작성기에서 가져오거나 설정합니다.</summary>
        <value>이름을 등록할 때 사용할 XAML 네임스페이스입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 특정 컨텍스트를 <xref:System.Xaml.XamlObjectWriter> 는 외부 XAML 이름 범위를 사용할 수 있습니다.  
  
## <a name="wpf-usage-notes"></a>WPF 사용 정보  
 WPF XAML 구현에서 XAML 쓰기 작업으로 시작 되는 <xref:System.Windows.FrameworkTemplate> 별도 XAML 이름 범위를 지정 합니다. 이 WPF 시나리오 템플릿 정의 하는 XAML 페이지의 루트를 사용 하 여 XAML 이름 범위를 공유 하지 해야 합니다. 대신 별도, 지정 된 XAML 이름 범위에 처리 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCanConvert">
      <MemberSignature Language="C#" Value="public bool IgnoreCanConvert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCanConvert" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreCanConvert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreCanConvert { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreCanConvert : bool with get, set" Usage="System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>형식 변환기 상황에서 <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />에 대해 XAML 작성기가 <see cref="T:System.ComponentModel.TypeConverter" />을 무시하고 호출하지 않아야 하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>XAML 작성기가 <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> 구현을 무시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.TypeConverter> 클래스 및 해당 <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> 메서드는 CLR에서 형식 변환에 대 한 전반적인 디자인의 일부입니다. 일반적으로 XAML 시스템에서 형식 변환기 입력 XAML 판독기에서 입력의 목적을 위해 식별할 수에 항상 문자열 가정할 수 있습니다. 이 속성을 설정 하는 경우 `true`, XAML 개체 작성기의 동작에서이 가정을 체계화 위치 모드를 사용 하도록 설정 합니다.  
  
 이 모드는 이전 버전의 WPF XAML에 대 한 호환성 요구를 지원합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferUnconvertedDictionaryKeys">
      <MemberSignature Language="C#" Value="public bool PreferUnconvertedDictionaryKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreferUnconvertedDictionaryKeys" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferUnconvertedDictionaryKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreferUnconvertedDictionaryKeys { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreferUnconvertedDictionaryKeys : bool with get, set" Usage="System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체 그래프 표현을 쓰기 전에 <see cref="T:System.Xaml.XamlObjectWriter" />의 <paramref name="K" /> 구성 요소에서 형식 변환을 실행하는 기본 <see cref="T:System.Collections.Generic.Dictionary`2" /> 기능을 해제할지 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Collections.Generic.Dictionary`2" /> 개체에 대한 <paramref name="K" /> 형식 변환을 사용하지 않도록 설정해야 하면 <see langword="true" />이고, <see cref="T:System.Collections.Generic.Dictionary`2" /> 개체에 대한 <paramref name="K" /> 형식 변환이 적용되면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 자세한 내용은 합니다 `K` 형식 변환 기능에 주의 참조 하세요 <xref:System.Xaml.XamlObjectWriter>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterNamesOnExternalNamescope">
      <MemberSignature Language="C#" Value="public bool RegisterNamesOnExternalNamescope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RegisterNamesOnExternalNamescope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" />
      <MemberSignature Language="VB.NET" Value="Public Property RegisterNamesOnExternalNamescope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RegisterNamesOnExternalNamescope { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RegisterNamesOnExternalNamescope : bool with get, set" Usage="System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정된 <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />에 대해 이름 등록이 수행되어야 하는지 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />에 대해 이름 등록이 수행되어야 하면 <see langword="true" />이고, 부모 XAML 이름 범위에 이름 등록이 수행되어야 하면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootObjectInstance">
      <MemberSignature Language="C#" Value="public object RootObjectInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RootObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property RootObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RootObjectInstance { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootObjectInstance : obj with get, set" Usage="System.Xaml.XamlObjectWriterSettings.RootObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xaml.XamlObjectWriter" /> 작업에 대한 기존 루트 개체를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Xaml.XamlObjectWriter" /> 작업에 대한 기존 루트 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값을 설정 하면 루트 개체 인스턴스를 암시적으로 사용 됩니다 <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> (사용 하 여 개체 입력 판독기에서 제공 하는 대신 직접) 호출 하 여 첫 번째 명시적 노드 쓰기 호출 앞에 오는 <xref:System.Xaml.XamlObjectWriter>합니다. 암시적 될 때까지 지연 되는 오류 검사를 제공 된 루트 개체의 XAML 형식을 확인 하는 등 <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> 이 설정 속성을 설정 하면 검사 하는 대신 호출 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipDuplicatePropertyCheck">
      <MemberSignature Language="C#" Value="public bool SkipDuplicatePropertyCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipDuplicatePropertyCheck" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipDuplicatePropertyCheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipDuplicatePropertyCheck { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipDuplicatePropertyCheck : bool with get, set" Usage="System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>중복 속성을 검사하는 코드 경로 확인을 XAML 작성기에서 생략할지 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
        <value>중복 속성 검사를 생략해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 코드 경로 현재 할당 된 속성을 확인 하 고 명명된 된 앰비언트 속성의 중복 된 속성 집합을 시도 하는 경우 예외를 throw 합니다. 자세한 내용은 <xref:System.Xaml.IAmbientProvider>을 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipProvideValueOnRoot">
      <MemberSignature Language="C#" Value="public bool SkipProvideValueOnRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipProvideValueOnRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipProvideValueOnRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipProvideValueOnRoot { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipProvideValueOnRoot : bool with get, set" Usage="System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xaml.XamlObjectWriter" />가 태그 확장 시 <see langword="ProvideValue" /> 호출을 생략해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다. 이 호출은 태그 확장이 개체 그래프의 루트를 나타내는 경우와 관련이 있습니다.</summary>
        <value><see cref="T:System.Xaml.XamlObjectWriter" />가 태그 확장 시 <see langword="true" /> 호출을 생략해야 하면 <see langword="ProvideValue" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 설정이 사용 됩니다 때 합니다 <xref:System.Xaml.XamlObjectWriter> 루트 노드를 처리 (<xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, 멤버나 루트 노드 내에서). 이 속성은 템플릿 및 지연 로드 시나리오에 적합 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceBamlUri">
      <MemberSignature Language="C#" Value="public Uri SourceBamlUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceBamlUri" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceBamlUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceBamlUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceBamlUri : Uri with get, set" Usage="System.Xaml.XamlObjectWriterSettings.SourceBamlUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>실제 <see langword="BaseUri" /> 대신 <see langword="BeginInitHandler" />에서 사용합니다.</summary>
        <value>실제 <see langword="BaseUri" /> 대신 사용할 <see cref="T:System.Uri" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 내부적으로 사용 런타임 동작을 완벽 하 게 호환 하면서 처리기에서 올바른 정보를 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XamlSetValueHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetValueEventArgs&gt; XamlSetValueHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetValueEventArgs&gt; XamlSetValueHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property XamlSetValueHandler As EventHandler(Of XamlSetValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetValueEventArgs ^&gt; ^ XamlSetValueHandler { EventHandler&lt;System::Windows::Markup::XamlSetValueEventArgs ^&gt; ^ get(); void set(EventHandler&lt;System::Windows::Markup::XamlSetValueEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XamlSetValueHandler : EventHandler&lt;System.Windows.Markup.XamlSetValueEventArgs&gt; with get, set" Usage="System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetValueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체 작성기가 종속성 속성에 대해 CLR 구현된 <see langword="SetValue" />를 호출할 때 사용할 처리기를 가져오거나 설정합니다.</summary>
        <value>이 경우를 처리하는 처리기 구현입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 처리기는 제네릭 기반 <xref:System.EventHandler%601> 를 사용 하는 대리자는 <xref:System.Windows.Markup.XamlSetValueEventArgs> 이벤트 데이터입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>