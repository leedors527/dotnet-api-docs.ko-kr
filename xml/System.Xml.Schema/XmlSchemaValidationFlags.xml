<Type Name="XmlSchemaValidationFlags" FullName="System.Xml.Schema.XmlSchemaValidationFlags">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3af9b06097103fed89f66bc06845e31a4ff016d4" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58727944" /></Metadata><TypeSignature Language="C#" Value="public enum XmlSchemaValidationFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlSchemaValidationFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaValidationFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlSchemaValidationFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlSchemaValidationFlags" />
  <TypeSignature Language="F#" Value="type XmlSchemaValidationFlags = " />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 및 <see cref="T:System.Xml.XmlReader" /> 클래스에서 사용하는 스키마 유효성 검사 옵션을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음은 사용 하는 경우를 고려해 야 할 사항 <xref:System.Xml.Schema.XmlSchemaValidationFlags> 값을 <xref:System.Xml.XmlReader>입니다.  
  
-   <xref:System.Xml.Schema.XmlSchemaValidationFlags> 스키마 유효성 검사에 사용 되는 유효성 검사 옵션을 정의 하는 값 <xref:System.Xml.XmlReader> 스키마에 대해 XML 유효성 검사를 수행 합니다. <xref:System.Xml.Schema.XmlSchemaValidationFlags> 유효성을 검사 하는 것에 대 한 값 <xref:System.Xml.XmlReader> 를 사용 하 여 지정 된 된 <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> 속성입니다.  
  
 다음은 AllowXmlAttributes 값을 사용 하는 경우를 고려해 야 할 사항입니다.  
  
1.  경우 스키마는 Xml 네임 스페이스를 가져오지 않는 합니다.  
  
    1.  AllowXmlAttributes로 설정 된 경우 `true` (기본값) 및 Xml 특성을 포함 하는 인스턴스 문서, 유효성 검사 엔진은 기본 Xml 네임 스페이스 스키마 스냅숏을 로드 하 고 유효성 검사에 사용 합니다. 기본 스키마에서 인스턴스 문서에서 사용 되는 Xml 특성이 없으면 문서가 유효 하지 않습니다.  
  
    2.  AllowXmlAttributes로 설정 된 경우 `false` Xml 특성을 포함 하는 인스턴스 문서를 유효성 검사 엔진이 오류를 보고 합니다.  
  
2.  때 스키마 위치 없이 Xml 네임 스페이스를 가져옵니다.  
  
    1.  AllowXmlAttributes로 설정 된 경우 `true` (기본값) 및 Xml 특성을 포함 하는 인스턴스 문서, 유효성 검사 엔진은 유효성 검사에 대 한 기본 Xml 네임 스페이스를 사용 하는 합니다. 기본 스키마에서 인스턴스 문서에서 사용 되는 Xml 특성이 없으면 문서가 유효 하지 않습니다.  
  
    2.  AllowXmlAttributes로 설정 된 경우 `false` 와 인스턴스 문서에 Xml 특성이 허용 되지 않는 명시적으로 스키마에서 유효성 검사 엔진이 오류를 보고 합니다.  
  
    3.  AllowXmlAttributes로 설정 된 경우 `false` 인스턴스 문서에 명시적으로 허용 되는 스키마 유효성 검사 엔진은 유효성을 검사 특성을 동일한 방식으로 기본 Xml을 사용 하 여 다른 특성의 유효성을 검사 하는 Xml 특성 및 네임 스페이스 스키마입니다.  
  
3.  때 스키마를 사용자 지정 schemaLocation 사용한 사용자 지정 Xml 네임 스페이스 스키마를 가져옵니다.  
  
    1.  AllowXmlAttributes로 설정 된 경우 `true` (기본값) 및 Xml 특성을 포함 하는 인스턴스 문서, 유효성 검사 엔진은 유효성 검사에 대 한 사용자 지정 Xml 네임 스페이스 스키마를 사용 하는 합니다. 지정된 된 스키마에서 인스턴스 문서에서 사용 되는 Xml 특성이 없으면 문서가 유효 하지 않습니다.  
  
    2.  AllowXmlAttributes로 설정 된 경우 `false` 와 인스턴스 문서에 Xml 특성이 허용 되지 않는 명시적으로 스키마에서 유효성 검사 엔진이 오류를 보고 합니다.  
  
    3.  AllowXmlAttributes로 설정 된 경우 `false` 인스턴스 문서에 명시적으로 허용 되는 스키마 유효성 검사 엔진은 유효성을 검사 특성을 동일한 방식으로 지정 된 Xml을 사용 하 여 다른 특성의 유효성을 검사 하는 Xml 특성 및 네임 스페이스 스키마입니다.  
  
4.  스키마에서 xml을 정의 하는 경우: * 사용을 사용 하 여 특성 = "required"입니다.  
  
    1.  AllowXmlAttributes로 설정 된 경우 적용 됩니다 `true` 고 `false`입니다. 필수 xml: * 특성이 다른 특성으로 처리할지 및 지정된 된 Xml 네임 스페이스 스키마를 사용 하 여 유효성을 검사 합니다.  
  
5.  스키마에서 xml을 정의 하는 경우: * 사용을 사용 하 여 특성 = "prohibited"입니다.  
  
    1.  AllowXmlAttributes로 설정 된 경우 적용 됩니다 `true` 고 `false`입니다. Xml 인스턴스 문서에 포함 된 경우: * 특성을 명시적으로 금지 된 스키마에서 유효성 검사 엔진이 오류를 보고 합니다.  
  
6.  면을 스키마 특성 와일드 카드를 지정 합니다.  
  
    1.  유효성 검사 엔진에 Xml 네임 스페이스 스키마를 사용할지를 인스턴스 문서에 Xml 특성이 포함 된 스키마 processContents 생략 하거나 "strict"로 설정 된 특성 와일드 카드를 지정 하는 경우는 <xref:System.Xml.Schema.XmlSchemaSet>합니다. Xml 네임 스페이스 스키마가 지정 하지 않으면 하는 경우 유효성 검사 엔진은 다음과 같이 작동 합니다.  
  
    2.  AllowXmlAttributes로 설정 된 경우 `true`, 유효성 검사 엔진 기본 Xml 네임 스페이스를 사용 하 여 유효성 검사를 수행 합니다.  
  
    3.  AllowXmlAttributes로 설정 된 경우 `false`, 유효성 검사 엔진이 오류를 보고 합니다.  
  
    4.  Xml 특성을 포함 하는 인스턴스 문서 스키마 "건너뛰지"로 설정 하는 processContents 특성 와일드 카드 지정을 하는 경우 유효성 검사 엔진에서 특성 유효성 검사를 건너뜁니다.  
  
    5.  유효성 검사 엔진에 Xml 네임 스페이스 스키마를 사용할지를 인스턴스 문서에 Xml 특성이 포함 된 경우 스키마 "lax"로 설정 하는 processContents 특성 와일드 카드 지정을 <xref:System.Xml.Schema.XmlSchemaSet>입니다. Xml 네임 스페이스 스키마가 지정 하지 않으면 하는 경우 유효성 검사 엔진은 다음과 같이 작동 합니다.  
  
    6.  AllowXmlAttributes로 설정 된 경우 `true`, 유효성 검사 엔진 기본 Xml 네임 스페이스를 사용 하 여 유효성 검사를 수행 합니다.  
  
    7.  AllowXmlAttributes로 설정 된 경우 `false`, 특성 유효성 검사를 수행 하지 것입니다.  
  
7.  단순 형식 유효성 검사 하는 경우  
  
    1.  AllowXmlAttributes로 설정 되 면 `true` (기본값), 단순 유형의 요소에서 Xml 특성 허용 됩니다.  
  
   
  
## Examples  
 예는 <xref:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes> 클래스는 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchemaValidator" />
  </Docs>
  <Members>
    <Member MemberName="AllowXmlAttributes">
      <MemberSignature Language="C#" Value="AllowXmlAttributes" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />
      <MemberSignature Language="VB.NET" Value="AllowXmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="AllowXmlAttributes" />
      <MemberSignature Language="F#" Value="AllowXmlAttributes = 16" Usage="System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>스키마에 정의되지 않은 xml:* 특성도 허용합니다. 해당 데이터 형식을 기반으로 이러한 특성의 유효성이 검사됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Xml.Schema.XmlSchemaValidationFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Identity 제약 조건, 인라인 스키마 및 스키마 위치 힌트를 처리하지 않고 스키마 유효성 검사 경고를 보고하지 않습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdentityConstraints">
      <MemberSignature Language="C#" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" />
      <MemberSignature Language="VB.NET" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="C++ CLI" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="F#" Value="ProcessIdentityConstraints = 8" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>유효성 검사 중 발생한 프로세스 ID 제약 조건(<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>)입니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessInlineSchema">
      <MemberSignature Language="C#" Value="ProcessInlineSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />
      <MemberSignature Language="VB.NET" Value="ProcessInlineSchema" />
      <MemberSignature Language="C++ CLI" Value="ProcessInlineSchema" />
      <MemberSignature Language="F#" Value="ProcessInlineSchema = 1" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>유효성 검사를 수행하는 동안 발견되는 인라인 스키마를 처리합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessSchemaLocation">
      <MemberSignature Language="C#" Value="ProcessSchemaLocation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />
      <MemberSignature Language="VB.NET" Value="ProcessSchemaLocation" />
      <MemberSignature Language="C++ CLI" Value="ProcessSchemaLocation" />
      <MemberSignature Language="F#" Value="ProcessSchemaLocation = 2" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>유효성 검사 중 발생한 프로세스 스키마 위치 힌트(<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>)입니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="ReportValidationWarnings">
      <MemberSignature Language="C#" Value="ReportValidationWarnings" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />
      <MemberSignature Language="VB.NET" Value="ReportValidationWarnings" />
      <MemberSignature Language="C++ CLI" Value="ReportValidationWarnings" />
      <MemberSignature Language="F#" Value="ReportValidationWarnings = 4" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>유효성 검사를 수행하는 동안 발생하는 스키마 유효성 검사 경고를 보고합니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>