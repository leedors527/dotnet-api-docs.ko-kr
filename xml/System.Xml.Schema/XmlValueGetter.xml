<Type Name="XmlValueGetter" FullName="System.Xml.Schema.XmlValueGetter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="940b6c2005ffbf5bdb11482bce265c1d65ea4ee5" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58735709" /></Metadata><TypeSignature Language="C#" Value="public delegate object XmlValueGetter();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlValueGetter extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlValueGetter" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function XmlValueGetter() As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ XmlValueGetter();" />
  <TypeSignature Language="F#" Value="type XmlValueGetter = delegate of unit -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <summary><see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 클래스에서 특성, 텍스트 및 공백 값을 해당 특성, 텍스트 또는 공백의 XSD(XML 스키마 정의 언어) 형식과 호환되는 CLR(공용 언어 런타임) 형식으로 전달하는 데 사용하는 <see langword="delegate" />입니다.</summary>
    <returns>특성, 텍스트 또는 공백 값을 포함하는 개체입니다. 개체는 특성, 텍스트 또는 공백 값의 XSD 형식에 해당하는 CLR 형식입니다.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Schema.XmlValueGetter> `delegate` 특성, 텍스트 또는 공백 노드의 CLR 값을 사용할 수 있는 및 변환의 비용을 방지 하는 경우에 유용를 `string` 및 유효성 검사를 위해 다시 구문입니다.  
  
 에 대 한 자세한 내용은 합니다 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스를 참조 하십시오는 [XmlSchemaValidator 밀어넣기 기반 유효성 검사](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md) 항목 또는 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스 참조 문서입니다.  
  
   
  
## Examples  
 다음 예에서는 유효성을 검사 합니다 `contosoBooks.xml` 에 대 한 파일을 `contosoBooks.xsd` 스키마. 이 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 클래스를 사용하여 `contosoBooks.xml` 파일을 deserialize하고 노드 값을 <xref:System.Xml.Schema.XmlSchemaValidator> 클래스의 메서드에 전달합니다.  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 이 예제에서는 `contosoBooks.xml` 파일을 입력으로 사용합니다.  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 이 예제에서는 또한 `contosoBooks.xsd`를 입력으로 사용합니다.  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchemaValidator" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="https://msdn.microsoft.com/library/911d4460-dd91-4958-85b2-2ca3299f9ec6">XmlSchemaValidator 푸시 기반 유효성 검사</related>
  </Docs>
</Type>