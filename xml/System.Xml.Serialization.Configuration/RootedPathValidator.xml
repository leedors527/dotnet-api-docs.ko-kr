<Type Name="RootedPathValidator" FullName="System.Xml.Serialization.Configuration.RootedPathValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="68ed164e599dce4e1a29f88ea5ebda7fce79e2c6" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39827371" /></Metadata><TypeSignature Language="C#" Value="public class RootedPathValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RootedPathValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.Configuration.RootedPathValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RootedPathValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RootedPathValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type RootedPathValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><c>tempFilesLocation</c> 구성 스위치의 사용을 제어하는 규칙의 유효성을 검사합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추가 하는 경우는 `WebReference` 웹 서비스에 개체를 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], 웹 서비스 검색 프로세스를 통해 파일이 만들어집니다.  
  
 웹 서비스 클라이언트에 추가 하 여 웹 서비스 기술 (WSDL) 문서를 찾을 수 있는 위치에 알아봅니다는 `WebReference` 개체입니다. 웹 서비스 클라이언트 저장 한 다음를 사용 하 여 검색된 된 문서를 디스크에는 `WriteAll` 메서드. 예를 들어,.xsd 스키마 파일 또는 서비스 설명이 검색된 된 문서 수 있습니다. 프로세스의 끝 클라이언트 파일을 삭제 합니다. 사용 하 여 임시 폴더에 있는 파일의 기본 위치를 변경할 수는 `tempFilesLocation` 스위치는 `<xmlSerializer>` 다음 예제와 같이 Machine.config 구성 파일에 지정 된 요소를 합니다.  
  
```xml  
<configuration>  
  <system.web>  
  <system.xml.serialization>  
    <xmlSerializer tempFilesLocation=".."/>  
  </system.xml.serialization>  
</configuration>  
```  
  
 변수의 `tempFilesLocation` 절대 경로 여야 합니다. 지정 된 경로 절대 없으면 합니다 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 생성을 <xref:System.Configuration.ConfigurationErrorsException> 구성 섹션을 참조 하는 동안 예외가 발생 합니다.  
  
 선행 및 후행 공백을 제거 하는 속성의 값을 잘립니다.  
  
 경우 값은 `tempFilesLocation` 공백으로 속성은 구성, 기본 % TMP % 위치 컴파일에 사용 됩니다. 동일한 기본 동작이 발생 하지 않으면 `tempFilesLocation` 스위치를 지정 합니다.  
  
 <xref:System.Xml.Serialization.XmlSerializer> 경로 있는지 여부를 확인 하지 않습니다. 하지 않는 경우는 <xref:System.IO.DirectoryNotFoundException> 생성 됩니다. 기본 동작은 동일 합니다 `XmlSerializer` % TMP % 경로 존재 하지 않는 경우.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootedPathValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Configuration.RootedPathValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootedPathValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.Configuration.RootedPathValidator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="rootedPathValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">개체의 형식입니다.</param>
        <summary>개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</summary>
        <returns><paramref name="type" /> 매개 변수가 유효한 <see langword="true" /> 개체와 일치하면 <see langword="XMLSerializer" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="rootedPathValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">개체의 값입니다.</param>
        <summary>개체의 값이 유효한지 여부를 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `XmlSerializer` 유효성을 검사할 개체의 매개 변수로 전달 되는 `Validate` 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>