<Type Name="SoapAttributeOverrides" FullName="System.Xml.Serialization.SoapAttributeOverrides">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33b73a9543a6778e623c78919651c7512629419b" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58703639" /></Metadata><TypeSignature Language="C#" Value="public class SoapAttributeOverrides" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapAttributeOverrides extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapAttributeOverrides" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapAttributeOverrides" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapAttributeOverrides" />
  <TypeSignature Language="F#" Value="type SoapAttributeOverrides = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Xml.Serialization.XmlSerializer" />를 사용하여 개체를 인코딩된 SOAP로 serialize하거나 deserialize하는 경우 속성, 필드 및 클래스에 적용된 특성을 재정의할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Xml.Serialization.SoapAttributeOverrides> 수 있도록 클래스는 <xref:System.Xml.Serialization.XmlSerializer> 개체 집합을 직렬화 하는 작업의 기본 방법을 재정의 하 합니다. 용도 이러한 방식으로 serialization을 재정의 합니다: 제어 하 고 원본;에 액세스할 수 없는 경우에 DLL에 있는 개체의 serialization을 보강할 수 먼저 둘째, serializable 클래스의 집합을 만들 수 있지만 여러 가지 방법으로 개체를 직렬화 할. 예를 들어, XML 요소로 클래스 인스턴스 멤버를 직렬화 하는 작업을 하는 대신 serialize 할 수 있습니다 이러한 XML 특성으로 전송 보다 효율적인 문서의 결과입니다.  
  
 만든 후는 <xref:System.Xml.Serialization.SoapAttributeOverrides>, 만든를 <xref:System.Xml.Serialization.XmlTypeMapping> 를 사용 하 여는 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 메서드를 <xref:System.Xml.Serialization.SoapReflectionImporter> 클래스. 결과 개체에 대 한 인수로 전달 된 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A> 생성자입니다. 결과 <xref:System.Xml.Serialization.XmlSerializer> 포함 된 데이터를 사용 하는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 개체 직렬화 되는 방식을 제어 하는 특성을 재정의할 수 있습니다. 이 수행 하는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 를 재정의 하는 개체 유형의 컬렉션을 포함 뿐만 <xref:System.Xml.Serialization.SoapAttributes> 각 재정의 개체 유형과 연결 합니다. 각 <xref:System.Xml.Serialization.SoapAttributes> 각 필드, 속성 또는 클래스 serialize 되는 방식을 제어 하는 특성 개체의 적절 한 집합을 포함 합니다.  
  
 만들기 및 사용에 대 한 프로세스를 <xref:System.Xml.Serialization.SoapAttributeOverrides> 는 다음과 같습니다.  
  
1.  <xref:System.Xml.Serialization.SoapAttributes>를 만듭니다.  
  
2.  재정의 되는 개체에 적절 한 특성 개체를 만듭니다. 예를 들어 만들기 필드나 속성을 재정의 하려면를 <xref:System.Xml.Serialization.SoapElementAttribute>를 사용 하 여 새로 파생 형식입니다. 새 선택적으로 할당할 수 있습니다 <xref:System.Xml.Serialization.SoapElementAttribute.ElementName%2A> 는 기본 클래스의 특성 이름 또는 네임 스페이스를 재정의 합니다.  
  
3.  적절 한 특성 개체를 추가 <xref:System.Xml.Serialization.SoapAttributes> 속성 또는 컬렉션입니다. 설정 예를 들어를 <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> 의 속성을 <xref:System.Xml.Serialization.SoapAttributes> 개체를 <xref:System.Xml.Serialization.SoapElementAttribute> 이 재정의 되는 멤버 이름을 지정 하 고.  
  
4.  <xref:System.Xml.Serialization.SoapAttributeOverrides>를 만듭니다.  
  
5.  추가 합니다 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapAttributeOverrides> 사용 하 여를 <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> 메서드. 재정의 되는 개체가 <xref:System.Xml.Serialization.SoapTypeAttribute>, 재정의 된 개체의 형식을 지정 하면 됩니다. 하지만 필드 또는 속성을 재정의 하는 경우 재정의 된 멤버의 이름을 지정 해야 합니다.  
  
6.  만들기는 <xref:System.Xml.Serialization.XmlTypeMapping> 를 사용 하는 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 메서드의 <xref:System.Xml.Serialization.SoapReflectionImporter> 클래스.  
  
7.  생성할 때를 <xref:System.Xml.Serialization.XmlSerializer>, 전달 합니다 <xref:System.Xml.Serialization.XmlTypeMapping> 에 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A> 생성자.  
  
8.  결과 사용 하 여 <xref:System.Xml.Serialization.XmlSerializer> 를 직렬화 또는 클래스 개체를 역직렬화 합니다.  
  
   
  
## Examples  
 다음 예제에서는 라는 클래스를 직렬화 `Group`합니다. serialization를 `GroupName` 하 고 `IgnoreThis` 필드와의 멤버는 `GroupType` 열거형 재정의 됩니다. 에 `CreateOverrideSerializer` 메서드를를 <xref:System.Xml.Serialization.SoapAttributeOverrides> 를 만들고, 각 재정의 된 멤버 또는 열거형에 대 한, <xref:System.Xml.Serialization.SoapAttributes> 설정에 추가 하 고 적절 한 속성을 사용 하 여 만들어집니다는 <xref:System.Xml.Serialization.SoapAttributeOverrides>합니다. <xref:System.Xml.Serialization.XmlTypeMapping> 사용 하 여 만들어집니다는 <xref:System.Xml.Serialization.SoapAttributeOverrides>, 및 <xref:System.Xml.Serialization.XmlTypeMapping> 만드는 데 사용 되는 <xref:System.Xml.Serialization.XmlSerializer> 기본 serialization을 재정의 하는 합니다.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">XML Serialization 소개</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream.md">방법: 개체를 SOAP 인코딩된 XML 스트림으로 Serialize</related>
    <related type="Article" href="~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md">인코딩된 SOAP Serialization을 제어하는 특성</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">XML Serialization 예제</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributeOverrides ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapAttributeOverrides();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 라는 클래스를 직렬화 `Group`합니다. serialization를 `GroupName` 하 고 `IgnoreThis` 필드와의 멤버는 `GroupType` 열거형 재정의 됩니다. 에 `CreateOverrideSerializer` 메서드를를 <xref:System.Xml.Serialization.SoapAttributeOverrides> 를 만들고, 각 재정의 된 멤버 또는 열거형에 대 한, <xref:System.Xml.Serialization.SoapAttributes> 설정에 추가 하 고 적절 한 속성을 사용 하 여 만들어집니다는 <xref:System.Xml.Serialization.SoapAttributeOverrides>합니다. <xref:System.Xml.Serialization.XmlTypeMapping> 사용 하 여 만들어집니다는 <xref:System.Xml.Serialization.SoapAttributeOverrides>, 및 <xref:System.Xml.Serialization.XmlTypeMapping> 만드는 데 사용 되는 <xref:System.Xml.Serialization.XmlSerializer> 기본 serialization을 재정의 하는 합니다.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.SoapAttributes" />에 포함된 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 개체의 컬렉션에 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />를 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, System.Xml.Serialization.SoapAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, class System.Xml.Serialization.SoapAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::Xml::Serialization::SoapAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * System.Xml.Serialization.SoapAttributes -&gt; unit" Usage="soapAttributeOverrides.Add (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.SoapAttributes" />
      </Parameters>
      <Docs>
        <param name="type">재정의되는 개체의 <see cref="T:System.Type" />입니다.</param>
        <param name="attributes">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</param>
        <summary><see cref="T:System.Xml.Serialization.SoapAttributes" /> 개체의 컬렉션에 <see cref="T:System.Xml.Serialization.SoapAttributes" />를 추가합니다. <paramref name="type" /> 매개 변수는 <see cref="T:System.Xml.Serialization.SoapAttributes" />로 재정의할 개체를 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapAttributes> 일으키는 특성 개체의 통합을 포함 합니다 <xref:System.Xml.Serialization.XmlSerializer> 개체 집합에 대 한 기본 serialization 동작을 재정의 하 합니다. 특성 개체에서 배치를 선택 하는 <xref:System.Xml.Serialization.SoapAttributes>재정의할 특정 동작에 따라 합니다. 예를 들어를 <xref:System.Xml.Serialization.XmlSerializer> 기본적으로 XML 요소로 클래스 멤버를 serialize 합니다. 대신 XML 특성으로 serialize 할 멤버를 원하는 경우 만듭니다를 <xref:System.Xml.Serialization.SoapAttributeAttribute>에 할당를 <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> 의 속성을 <xref:System.Xml.Serialization.SoapAttributes>, 추가 <xref:System.Xml.Serialization.XmlAttributes> 에 <xref:System.Xml.Serialization.SoapAttributeOverrides>. 사용 하 여는 <xref:System.Xml.Serialization.SoapAttributeOverrides.Add%2A> 메서드를 추가 합니다 <xref:System.Xml.Serialization.SoapAttributes> 를 <xref:System.Xml.Serialization.SoapAttributeOverrides>.  
  
 이 오버 로드를 사용 하 여 추가할를 <xref:System.Xml.Serialization.SoapAttributes> 를 포함 하는 <xref:System.Xml.Serialization.SoapTypeAttribute>합니다. 때문에 <xref:System.Xml.Serialization.SoapTypeAttribute> serialization 재정의 클래스의 지정할 필요가 없습니다 클래스의 형식만 재정의 하려면 클래스의 멤버입니다.  
  
   
  
## Examples  
 다음 예제에서는 라는 클래스를 직렬화 `Group`합니다. serialization를 `GroupName` 하 고 `IgnoreThis` 필드와의 멤버는 `GroupType` 열거형 재정의 됩니다. 에 `CreateOverrideSerializer` 메서드를를 <xref:System.Xml.Serialization.SoapAttributeOverrides> 를 만들고, 각 재정의 된 멤버 또는 열거형에 대 한, <xref:System.Xml.Serialization.SoapAttributes> 설정에 추가 하 고 적절 한 속성을 사용 하 여 만들어집니다는 <xref:System.Xml.Serialization.SoapAttributeOverrides>합니다. <xref:System.Xml.Serialization.XmlTypeMapping> 사용 하 여 만들어집니다는 <xref:System.Xml.Serialization.SoapAttributeOverrides>, 및 <xref:System.Xml.Serialization.XmlTypeMapping> 만드는 데 사용 되는 <xref:System.Xml.Serialization.XmlSerializer> 기본 serialization을 재정의 하는 합니다.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, string member, System.Xml.Serialization.SoapAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, string member, class System.Xml.Serialization.SoapAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::String ^ member, System::Xml::Serialization::SoapAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * string * System.Xml.Serialization.SoapAttributes -&gt; unit" Usage="soapAttributeOverrides.Add (type, member, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.SoapAttributes" />
      </Parameters>
      <Docs>
        <param name="type">재정의할 개체의 <see cref="T:System.Type" />입니다.</param>
        <param name="member">재정의할 멤버의 이름입니다.</param>
        <param name="attributes">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</param>
        <summary><see cref="T:System.Xml.Serialization.SoapAttributes" />에 포함된 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 개체의 컬렉션에 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />를 추가합니다. <paramref name="type" /> 매개 변수는 <see cref="T:System.Xml.Serialization.SoapAttributes" />로 재정의할 개체를 지정합니다. <paramref name="member" /> 매개 변수는 재정의되는 멤버의 이름을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapAttributes> 일으키는 특성 개체의 통합을 포함 합니다 <xref:System.Xml.Serialization.XmlSerializer> 개체 집합에 대 한 기본 serialization 동작을 재정의 하 합니다. 특성 개체에서 배치를 선택 하는 <xref:System.Xml.Serialization.SoapAttributes>재정의할 특정 동작에 따라 합니다. 예를 들어를 <xref:System.Xml.Serialization.XmlSerializer> 기본적으로 XML 요소로 클래스 멤버를 serialize 합니다. 대신 SOAP 특성으로 serialize 할 멤버를 원하는 경우 만듭니다를 <xref:System.Xml.Serialization.SoapAttributeAttribute>에 할당를 <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> 의 속성을 <xref:System.Xml.Serialization.SoapAttributes>, 추가 <xref:System.Xml.Serialization.XmlAttributes> 에 <xref:System.Xml.Serialization.SoapAttributeOverrides>. 사용 하 여는 <xref:System.Xml.Serialization.SoapAttributeOverrides.Add%2A> 메서드를 추가 합니다 <xref:System.Xml.Serialization.SoapAttributes> 를 <xref:System.Xml.Serialization.SoapAttributeOverrides>.  
  
 이 메서드를 사용 하 여 때 합니다 <xref:System.Xml.Serialization.SoapAttributes> 포함를 <xref:System.Xml.Serialization.SoapAttributeAttribute>, <xref:System.ComponentModel.DefaultValueAttribute> <xref:System.Xml.Serialization.SoapElementAttribute>, <xref:System.Xml.Serialization.SoapEnumAttribute>, 또는 <xref:System.Xml.Serialization.SoapIgnoreAttribute>.  
  
   
  
## Examples  
 다음 예제에서는 라는 클래스를 직렬화 `Group`합니다. serialization를 `GroupName` 하 고 `IgnoreThis` 필드와의 멤버는 `GroupType` 열거형 재정의 됩니다. 에 `CreateOverrideSerializer` 메서드를를 <xref:System.Xml.Serialization.SoapAttributeOverrides> 를 만들고, 각 재정의 된 멤버 또는 열거형에 대 한, <xref:System.Xml.Serialization.SoapAttributes> 설정에 추가 하 고 적절 한 속성을 사용 하 여 만들어집니다는 <xref:System.Xml.Serialization.SoapAttributeOverrides>합니다. <xref:System.Xml.Serialization.XmlTypeMapping> 사용 하 여 만들어집니다는 <xref:System.Xml.Serialization.SoapAttributeOverrides>, 및 <xref:System.Xml.Serialization.XmlTypeMapping> 만드는 데 사용 되는 <xref:System.Xml.Serialization.XmlSerializer> 기본 serialization을 재정의 하는 합니다.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>재정의 SOAP 특성의 컬렉션을 나타내는 개체를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapAttributes this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapAttributes Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type) As SoapAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapAttributes ^ default[Type ^] { System::Xml::Serialization::SoapAttributes ^ get(Type ^ type); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : System.Xml.Serialization.SoapAttributes" Usage="System.Xml.Serialization.SoapAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">검색할 특성의 컬렉션과 관련된 기본 클래스 <see cref="T:System.Type" />입니다.</param>
        <summary>지정한 (기본 클래스) 형식과 관련된 개체를 가져옵니다.</summary>
        <value>재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버 로드를 사용 하 여 반환 하는 <xref:System.Xml.Serialization.SoapAttributes> 에 대 한 특성을 포함 하는 <xref:System.Xml.Serialization.SoapTypeAttribute>합니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 인스턴스의 serialization을 재정의 하는 데 사용 되는 `Group` 클래스. 또한이 예제에서는 합니다 <xref:System.Xml.Serialization.SoapAttributeOverrides.Item%2A> 검색할 속성의 <xref:System.Xml.Serialization.SoapAttributes> serialization이 재정의 되는 방식을 지정 하는 데 사용 되는 합니다.  
  
 [!code-cpp[SoapAttributeOverrides.Item property 2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 2/CPP/attadd2.cpp#1)]
 [!code-csharp[SoapAttributeOverrides.Item property 2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 2/CS/attadd2.cs#1)]
 [!code-vb[SoapAttributeOverrides.Item property 2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 2/VB/attadd2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapAttributes this[Type type, string member] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapAttributes Item(class System.Type, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type, member As String) As SoapAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapAttributes ^ default[Type ^, System::String ^] { System::Xml::Serialization::SoapAttributes ^ get(Type ^ type, System::String ^ member); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type * string) : System.Xml.Serialization.SoapAttributes" Usage="System.Xml.Serialization.SoapAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">재정의할 특성의 컬렉션과 관련된 기본 클래스 <see cref="T:System.Type" />입니다.</param>
        <param name="member">반환할 <see cref="T:System.Xml.Serialization.SoapAttributes" />를 지정하는 재정의된 멤버의 이름입니다.</param>
        <summary>지정한 (기본 클래스) 형식과 관련된 개체를 가져옵니다. 해당 <paramref name="member" /> 매개 변수는 재정의되는 기본 클래스 멤버를 지정합니다.</summary>
        <value>재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버 로드를 사용 하 여 돌아갑니다를 <xref:System.Xml.Serialization.SoapAttributes> 재정의 하는 특성을 포함 하는 <xref:System.Xml.Serialization.SoapAttributeAttribute>를 <xref:System.Xml.Serialization.SoapElementAttribute>, <xref:System.Xml.Serialization.SoapIgnoreAttribute>, 또는 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다. 반환할 수도 있습니다는 <xref:System.Xml.Serialization.SoapAttributes> 재정의 사용 하는 기본값을 포함 하는 <xref:System.ComponentModel.DefaultValueAttribute>합니다.  
  
 경우는 <xref:System.Xml.Serialization.SoapAttributes> 포함을 <xref:System.Xml.Serialization.SoapTypeAttribute>, 재정의 된 형식만 지정 하는 오버 로드를 사용 해야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Xml.Serialization.SoapAttributeOverrides> 인스턴스의 serialization을 재정의 하는 데는 `Group` 클래스. 또한이 예제에서는 합니다 <xref:System.Xml.Serialization.SoapAttributeOverrides.Item%2A> 검색할 속성의 <xref:System.Xml.Serialization.SoapAttributes> serialization이 재정의 되는 방식을 지정 하는 데 사용 되는 합니다.  
  
 [!code-cpp[SoapAttributeOverrides.Item property 1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 1/CPP/attadd.cpp#1)]
 [!code-csharp[SoapAttributeOverrides.Item property 1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 1/CS/attadd.cs#1)]
 [!code-vb[SoapAttributeOverrides.Item property 1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributeOverrides.Item property 1/VB/attadd.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>