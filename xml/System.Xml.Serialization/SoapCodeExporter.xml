<Type Name="SoapCodeExporter" FullName="System.Xml.Serialization.SoapCodeExporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="abae180f247dc45bb5495fbbceb8c6b865ff5e97" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57961785" /></Metadata><TypeSignature Language="C#" Value="public class SoapCodeExporter : System.Xml.Serialization.CodeExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapCodeExporter extends System.Xml.Serialization.CodeExporter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapCodeExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapCodeExporter&#xA;Inherits CodeExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapCodeExporter : System::Xml::Serialization::CodeExporter" />
  <TypeSignature Language="F#" Value="type SoapCodeExporter = class&#xA;    inherit CodeExporter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Serialization.CodeExporter</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>WSDL 문서에 정의된 SOAP 인코딩된 메시지 부분에 대한 내부 형식 매핑 정보에서 형식 및 특성 선언을 생성합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Xml.Serialization.SoapCodeExporter> 클래스를 사용 합니다 [웹 서비스 기술 언어 도구 (Wsdl.exe)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/7h3ystb6(v=vs.100)) 및 <xref:System.Web.Services.Description.ServiceDescriptionImporter> Web Services Description Language (에서 클라이언트 프록시 클래스 또는 추상 서버 클래스를 생성 하는 동안 클래스 WSDL) 문서입니다. 사용 하는 대신 <xref:System.Xml.Serialization.SoapCodeExporter> 직접 Wsdl.exe를 사용 합니다.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Xml.Serialization.SoapSchemaImporter" />
    <altmember cref="T:System.Xml.Serialization.XmlCodeExporter" />
    <altmember cref="T:System.Web.Services.Description.ServiceDescriptionImporter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.SoapCodeExporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapCodeExporter (System.CodeDom.CodeNamespace codeNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapCodeExporter : System.CodeDom.CodeNamespace -&gt; System.Xml.Serialization.SoapCodeExporter" Usage="new System.Xml.Serialization.SoapCodeExporter codeNamespace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">생성할 형식의 네임스페이스를 지정하는 <see cref="T:System.CodeDom.CodeNamespace" />입니다.</param>
        <summary>코드 컴파일 단위가 없는 경우 <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스를 직접 만드는 대신는 <xref:System.Xml.Serialization.SoapCodeExporter> 클래스, Wsdl.exe 도구를 사용 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit -&gt; System.Xml.Serialization.SoapCodeExporter" Usage="new System.Xml.Serialization.SoapCodeExporter (codeNamespace, codeCompileUnit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">생성할 형식의 네임스페이스를 지정하는 <see cref="T:System.CodeDom.CodeNamespace" />입니다.</param>
        <param name="codeCompileUnit">사용된 어셈블리 참조가 자동으로 추가되는 프로그램 그래프 컨테이너를 식별하는 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</param>
        <summary>네임스페이스 매개 변수와 함께 코드 컴파일 단위 매개 변수를 지정하여 <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스를 직접 만드는 대신는 <xref:System.Xml.Serialization.SoapCodeExporter> 클래스, Wsdl.exe 도구를 사용 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.Xml.Serialization.CodeGenerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, valuetype System.Xml.Serialization.CodeGenerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::Xml::Serialization::CodeGenerationOptions options);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.Xml.Serialization.CodeGenerationOptions -&gt; System.Xml.Serialization.SoapCodeExporter" Usage="new System.Xml.Serialization.SoapCodeExporter (codeNamespace, codeCompileUnit, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">생성할 형식의 네임스페이스를 지정하는 <see cref="T:System.CodeDom.CodeNamespace" />입니다.</param>
        <param name="codeCompileUnit">사용된 어셈블리 참조가 자동으로 추가되는 프로그램 그래프 컨테이너를 식별하는 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</param>
        <param name="options">내보내는 코드가 생성되는 옵션을 지정하는 <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> 열거형입니다.</param>
        <summary>코드 네임스페이스, 코드 컴파일 단위 및 코드 생성 옵션을 지정하여 <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스를 직접 만드는 대신는 <xref:System.Xml.Serialization.SoapCodeExporter> 클래스, Wsdl.exe 도구를 사용 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.Xml.Serialization.CodeGenerationOptions options, System.Collections.Hashtable mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.Collections.Hashtable mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::Xml::Serialization::CodeGenerationOptions options, System::Collections::Hashtable ^ mappings);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.Xml.Serialization.CodeGenerationOptions * System.Collections.Hashtable -&gt; System.Xml.Serialization.SoapCodeExporter" Usage="new System.Xml.Serialization.SoapCodeExporter (codeNamespace, codeCompileUnit, options, mappings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="mappings" Type="System.Collections.Hashtable" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">생성할 형식의 네임스페이스를 지정하는 <see cref="T:System.CodeDom.CodeNamespace" />입니다.</param>
        <param name="codeCompileUnit">사용된 어셈블리 참조가 자동으로 추가되는 프로그램 그래프 컨테이너를 식별하는 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</param>
        <param name="options">내보내는 코드가 생성되는 옵션을 지정하는 <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> 열거형입니다.</param>
        <param name="mappings"><see cref="T:System.Collections.Hashtable" /> 개체가 포함된 <see cref="T:System.Xml.Serialization.XmlMapping" />입니다.</param>
        <summary>코드 네임스페이스, 코드 컴파일 단위, 코드 생성 옵션 및 매핑을 지정하여 <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스를 직접 만드는 대신는 <xref:System.Xml.Serialization.SoapCodeExporter> 클래스, Wsdl.exe 도구를 사용 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Xml.Serialization.CodeGenerationOptions options, System.Collections.Hashtable mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.CodeDom.Compiler.CodeDomProvider codeProvider, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.Collections.Hashtable mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Xml::Serialization::CodeGenerationOptions options, System::Collections::Hashtable ^ mappings);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.CodeDom.Compiler.CodeDomProvider * System.Xml.Serialization.CodeGenerationOptions * System.Collections.Hashtable -&gt; System.Xml.Serialization.SoapCodeExporter" Usage="new System.Xml.Serialization.SoapCodeExporter (codeNamespace, codeCompileUnit, codeProvider, options, mappings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="mappings" Type="System.Collections.Hashtable" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">생성할 형식의 네임스페이스를 지정하는 <see cref="T:System.CodeDom.CodeNamespace" />입니다.</param>
        <param name="codeCompileUnit">사용된 어셈블리 참조가 자동으로 추가되는 프로그램 그래프 컨테이너를 식별하는 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</param>
        <param name="codeProvider">코드를 만드는 데 사용되는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />입니다.</param>
        <param name="options">내보내는 코드가 생성되는 옵션을 지정하는 <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> 열거형입니다.</param>
        <param name="mappings"><see cref="T:System.Collections.Hashtable" /> 개체가 포함된 <see cref="T:System.Xml.Serialization.XmlMapping" />입니다.</param>
        <summary>코드 네임스페이스, 코드 컴파일 단위, 코드 생성기, 코드 생성 옵션 및 매핑을 지정하여 <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddMappingMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 선언을 WSDL 문서에 있는 SOAP 메시지 정의의 부분 요소에 해당하는 메서드 매개 변수나 반환 값에 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlMemberMapping member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlMemberMapping member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, member As XmlMemberMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlMemberMapping ^ member);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlMemberMapping -&gt; unit" Usage="soapCodeExporter.AddMappingMetadata (metadata, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="member" Type="System.Xml.Serialization.XmlMemberMapping" />
      </Parameters>
      <Docs>
        <param name="metadata">생성된 형식에 대해 메서드가 특성 선언을 추가하는 <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> 개체의 컬렉션입니다.</param>
        <param name="member">WSDL 메시지 정의의 단일 부분에 대한 내부 .NET Framework 형식 매핑입니다.</param>
        <summary><see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 선언을 WSDL 문서에 있는 SOAP 메시지 정의의 부분 요소에 해당하는 메서드 매개 변수나 반환 값에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 WSDL 문서 SOAP 인코딩과 SOAP 1.1 사양의 5 단원에에서 설명 된 대로 지정 하는 경우 Wsdl.exe 도구로 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlMemberMapping member, bool forceUseMemberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlMemberMapping member, bool forceUseMemberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, member As XmlMemberMapping, forceUseMemberName As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlMemberMapping ^ member, bool forceUseMemberName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlMemberMapping * bool -&gt; unit" Usage="soapCodeExporter.AddMappingMetadata (metadata, member, forceUseMemberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="member" Type="System.Xml.Serialization.XmlMemberMapping" />
        <Parameter Name="forceUseMemberName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">생성된 형식에 대해 메서드가 특성 선언을 추가하는 <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> 개체의 컬렉션입니다.</param>
        <param name="member">WSDL 메시지 정의의 단일 부분에 대한 내부 .NET Framework 형식 매핑입니다.</param>
        <param name="forceUseMemberName">생성되는 특성 선언의 XML 요소 이름이 포함된 초기 인수를 추가하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary><see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 선언을 WSDL 문서에 있는 SOAP 메시지 정의의 부분 요소에 해당하는 메서드 매개 변수나 반환 값에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 WSDL 문서 SOAP 인코딩과 SOAP 1.1 사양의 5 단원에에서 설명 된 대로 지정 하는 경우 Wsdl.exe 도구로 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportMembersMapping">
      <MemberSignature Language="C#" Value="public void ExportMembersMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportMembersMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportMembersMapping(System::Xml::Serialization::XmlMembersMapping ^ xmlMembersMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportMembersMapping : System.Xml.Serialization.XmlMembersMapping -&gt; unit" Usage="soapCodeExporter.ExportMembersMapping xmlMembersMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">WSDL 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</param>
        <summary>WSDL 문서에 있는 SOAP 메시지 정의에 속한 각 부분에 대해 .NET Framework 형식과 특성 선언을 생성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 WSDL 문서 SOAP 인코딩과 SOAP 1.1 사양의 5 단원에에서 설명 된 대로 지정 하는 경우 Wsdl.exe 도구로 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportTypeMapping">
      <MemberSignature Language="C#" Value="public void ExportTypeMapping (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportTypeMapping(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportTypeMapping(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportTypeMapping : System.Xml.Serialization.XmlTypeMapping -&gt; unit" Usage="soapCodeExporter.ExportTypeMapping xmlTypeMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping">SOAP 헤더 요소에 대한 내부 .NET Framework 형식 매핑 정보입니다.</param>
        <summary>SOAP 헤더의 대한 .NET Framework 형식과 특성 선언을 생성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 Wsdl.exe 도구에서 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeMetadata">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeAttributeDeclarationCollection IncludeMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeAttributeDeclarationCollection IncludeMetadata" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapCodeExporter.IncludeMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeMetadata As CodeAttributeDeclarationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeAttributeDeclarationCollection ^ IncludeMetadata { System::CodeDom::CodeAttributeDeclarationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeMetadata : System.CodeDom.CodeAttributeDeclarationCollection" Usage="System.Xml.Serialization.SoapCodeExporter.IncludeMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeAttributeDeclarationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 형식을 지정하여 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 선언의 컬렉션을 가져옵니다.</summary>
        <value>특성이 포함된 <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
하나 이상의 <xref:System.Xml.Serialization.XmlIncludeAttribute> 더 많이 파생 된 형식으로 직렬화 해야 런타임 시 개체의 실제 형식에 따라 또는 하나를 허용 하도록 기본 형식에 특성을 적용할 수 있습니다.

사용 하지 않고는 <xref:System.Xml.Serialization.SoapCodeExporter> 클래스, Wsdl.exe 도구를 사용 합니다.

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>