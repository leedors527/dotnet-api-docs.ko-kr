<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64f97e0596c134182330540f6b87e0a6f2604f4a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58716029" /></Metadata><TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>클래스 인스턴스를 SOAP 인코딩된 XML로 serialize할 때 <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성되는 스키마를 제어합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapTypeAttribute> 클래스를 제어 하는 특성의 제품군에 속합니다 방법을 <xref:System.Xml.Serialization.XmlSerializer> 직렬화 또는 인코딩된 SOAP XML로 개체를 deserialize 합니다. 결과 XML은 World Wide Web 컨소시엄 (www.w3.org) 문서의 "Simple Object Access Protocol (SOAP) 1.1"의 5 단원을 따릅니다. 비슷한 특성의 전체 목록은 참조 하세요 [는 인코딩된 SOAP Serialization을 제어 특성](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)합니다.  
  
 인코딩된 SOAP 메시지로 개체를 serialize 하려면를 생성 하는 <xref:System.Xml.Serialization.XmlSerializer> 를 사용 하 여는 <xref:System.Xml.Serialization.XmlTypeMapping> 사용 하 여 만든를 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 메서드의 <xref:System.Xml.Serialization.SoapReflectionImporter> 클래스.  
  
 <xref:System.Xml.Serialization.SoapTypeAttribute> 클래스 선언에만 적용할 수 있습니다.  
  
 <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> 속성 결과 XML 요소 형식이 생성 된 XML 스트림에 대 한 XML 스키마 (.xsd) 문서에 포함 되는지 여부를 결정 합니다. 스키마를 보려면 클래스를 DLL 파일로 컴파일하십시오. 파일에 대 한 인수로 서 전달 된 [XML 스키마 정의 도구 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)합니다. 클래스의 인스턴스에 의해 serialize 될 때 생성 된 XML 스트림에 대 한 XML 스키마를 생성 하는 도구는 <xref:System.Xml.Serialization.XmlSerializer> 클래스입니다.  
  
 다른 네임 스페이스를 설정 하면 Xsd.exe 클래스가 serialize 될 때 생성 된 XML 스트림에 대 한 다른 스키마 (.xsd) 파일을 작성 합니다.  
  
   
  
## Examples  
 다음 예제에서는 라는 클래스를 직렬화 `Group`합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 사용 하 여 클래스에 적용 되는 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"로 설정 합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 재정의를 변경 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "팀"입니다. 두 파일에서 결과 두 버전 모두 serialize 됩니다. SoapType.xml 및 SoapType2.xml 합니다.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 만들기는 <xref:System.Xml.Serialization.SoapTypeAttribute> 형식의 serialization을 재정의 하는 경우. 개체를 할당를 <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> 의 속성을 <xref:System.Xml.Serialization.SoapAttributes> 추가 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapAttributeOverrides>. 참조 된 <xref:System.Xml.Serialization.SoapAttributeOverrides> SOAP serialization을 재정의 하는 방법에 대 한 자세한 내용은 클래스 개요입니다.  
  
   
  
## Examples  
 다음 예제에서는 라는 클래스를 직렬화 `Group`합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 사용 하 여 클래스에 적용 되는 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"로 설정 합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 재정의를 변경 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "팀"입니다. 두 파일에서 결과 두 버전 모두 serialize 됩니다. SoapType.xml 및 SoapType2.xml 합니다.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 클래스 인스턴스를 serialize할 때 생성하고 클래스 인스턴스를 deserialize할 때 인식하는 XML 형식의 이름입니다.</param>
        <summary><see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 형식의 이름을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 만들기는 <xref:System.Xml.Serialization.SoapTypeAttribute> 형식의 serialization을 재정의 하는 경우. 개체를 할당를 <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> 의 속성을 <xref:System.Xml.Serialization.SoapAttributes> 추가 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapAttributeOverrides>. 참조 된 <xref:System.Xml.Serialization.SoapAttributeOverrides> SOAP serialization을 재정의 하는 방법에 대 한 자세한 내용은 클래스 개요입니다.  
  
   
  
## Examples  
 다음 예제에서는 라는 클래스를 직렬화 `Group`합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 사용 하 여 클래스에 적용 되는 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"로 설정 합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 재정의를 변경 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "팀"입니다. 두 파일에서 결과 두 버전 모두 serialize 됩니다. SoapType.xml 및 SoapType2.xml 합니다.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string * string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute (typeName, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 클래스 인스턴스를 serialize할 때 생성하고 클래스 인스턴스를 deserialize할 때 인식하는 XML 형식의 이름입니다.</param>
        <param name="ns">형식의 XML 네임스페이스입니다.</param>
        <summary><see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 클래스의 새 인스턴스를 초기화하고 형식의 이름과 XML 네임스페이스를 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 만들기는 <xref:System.Xml.Serialization.SoapTypeAttribute> 형식의 serialization을 재정의 하는 경우. 개체를 할당를 <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> 의 속성을 <xref:System.Xml.Serialization.SoapAttributes> 추가 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapAttributeOverrides>. 참조 된 <xref:System.Xml.Serialization.SoapAttributeOverrides> SOAP serialization을 재정의 하는 대 한 자세한 내용은 클래스 개요입니다.  
  
 설정 하는 경우는 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 둘 이상의 형식에 대 한 값 (즉, 다른 둘 이상의 클래스에 특성을 적용 하는 경우 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 각각에 대 한 값), [XML 스키마 정의 도구 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) 별도 생성 각 형식에 대 한 스키마 파일 (.xsd)입니다. 각 형식에 대 한 다른 네임 스페이스를 설정 렌더링 각 형식에서 다른 고유 독립 엔터티로 기록할 각 형식에 대 한 필요한 그러면 때문입니다.  
  
   
  
## Examples  
 다음 예제에서는 라는 클래스를 직렬화 `Group`합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 사용 하 여 클래스에 적용 되는 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"로 설정 합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 재정의를 변경 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "팀"입니다. 두 파일에서 결과 두 버전 모두 serialize 됩니다. SoapType.xml 및 SoapType2.xml 합니다.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeInSchema : bool with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SOAP 인코딩된 XML 스키마 문서에 형식을 포함시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>SOAP 인코딩된 XML 스키마 문서에 형식을 포함시키려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 적용 된 <xref:System.Xml.Serialization.SoapTypeAttribute> XML 스키마 문서에 형식을 포함시킬지 여부를 지정 하려면 클래스 선언에 있습니다. 속성을 설정 하는 결과를 확인 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 클래스, 실행 파일 또는 DLL로 응용 프로그램을 컴파일 및 결과 파일을 전달 합니다 [XML 스키마 정의 도구 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). 클래스가 serialize 될 때 생성 된 XML 스트림의 형식 정의 포함 하 여 스키마를 작성 하는 도구입니다.  
  
   
  
## Examples  
 다음 예제에서는 라는 클래스를 직렬화 `Group`합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 사용 하 여 클래스에 적용 되는 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"로 설정 합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 재정의를 변경 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "팀"입니다. 두 파일에서 결과 두 버전 모두 serialize 됩니다. SoapType.xml 및 SoapType2.xml 합니다.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 형식의 네임스페이스를 가져오거나 설정합니다.</summary>
        <value>XML 형식의 네임스페이스입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 하는 경우는 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 둘 이상의 형식에 대 한 값 (즉, 다른 둘 이상의 클래스에 특성을 적용 하는 경우 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 각각에 대 한 값), [XML 스키마 정의 도구 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) 별도 생성 각 형식에 대 한 스키마 파일 (.xsd)입니다. 각 형식에 대 한 다른 네임 스페이스를 설정 렌더링 각 형식에서 다른 고유 독립 엔터티로 기록할 각 형식에 대 한 필요한 그러면 때문입니다.  
  
   
  
## Examples  
 다음 예제에서는 라는 클래스를 직렬화 `Group`합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 사용 하 여 클래스에 적용 되는 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"로 설정 합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 재정의를 변경 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "팀"입니다. 두 파일에서 결과 두 버전 모두 serialize 됩니다. SoapType.xml 및 SoapType2.xml 합니다.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 형식의 이름을 가져오거나 설정합니다.</summary>
        <value>XML 형식의 이름입니다. 기본값은 클래스 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 적용 된 <xref:System.Xml.Serialization.SoapTypeAttribute> XML 형식의 네임 스페이스, XML 형식 이름 및 XML 스키마 문서에 형식을 포함할지 여부를 지정 하는 클래스입니다. 설정의 결과를 확인 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 개체의 속성을 응용 프로그램 실행 파일 또는 DLL로 컴파일하고 결과 파일을 전달 합니다 [XML 스키마 정의 도구 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)합니다. 형식 정의 포함 하 여 스키마를 작성 하는 도구입니다.  
  
   
  
## Examples  
 다음 예제에서는 라는 클래스를 직렬화 `Group`합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 사용 하 여 클래스에 적용 되는 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "SoapGroupType"로 설정 합니다. 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute> 재정의를 변경 합니다 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "팀"입니다. 두 파일에서 결과 두 버전 모두 serialize 됩니다. SoapType.xml 및 SoapType2.xml 합니다.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>