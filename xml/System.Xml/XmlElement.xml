<Type Name="XmlElement" FullName="System.Xml.XmlElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1072e62ea082425f5c4bda3e1355f42184b918af" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58705043" /></Metadata><TypeSignature Language="C#" Value="public class XmlElement : System.Xml.XmlLinkedNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElement extends System.Xml.XmlLinkedNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlElement" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElement&#xA;Inherits XmlLinkedNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElement : System::Xml::XmlLinkedNode" />
  <TypeSignature Language="F#" Value="type XmlElement = class&#xA;    inherit XmlLinkedNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlLinkedNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>요소를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 요소는 W3C 문서 개체 모델 (DOM)에서 가장 일반적인 노드 중 하나입니다. 요소에는 연결 된 특성이 있을 수 있습니다. 합니다 `XmlElement` 클래스에 특성에 액세스 하기 위한 많은 메서드 (<xref:System.Xml.XmlElement.GetAttribute%2A>, <xref:System.Xml.XmlElement.SetAttribute%2A>, <xref:System.Xml.XmlElement.RemoveAttribute%2A>, <xref:System.Xml.XmlElement.GetAttributeNode%2A>등). 사용할 수도 있습니다는 <xref:System.Xml.XmlElement.Attributes%2A> 반환 하는 속성을 <xref:System.Xml.XmlAttributeCollection> 컬렉션에서 특성 이름 또는 인덱스 별로 액세스할 수 있도록 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlDocument.CreateElement(System.String)" />
    <altmember cref="T:System.Xml.XmlAttribute" />
    <altmember cref="T:System.Xml.XmlDocument" />
    <related type="Article" href="https://msdn.microsoft.com/library/ce2df341-a1a4-4e97-8e1b-cd45b8e3e71e">DOM에서 특성 액세스</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b5e52844-4820-47c0-a61d-de2da33e9f54">XML DOM(문서 개체 모델)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal XmlElement (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string prefix, string localName, string namespaceURI, class System.Xml.XmlDocument doc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (prefix As String, localName As String, namespaceURI As String, doc As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; XmlElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI, System::Xml::XmlDocument ^ doc);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlElement : string * string * string * System.Xml.XmlDocument -&gt; System.Xml.XmlElement" Usage="new System.Xml.XmlElement (prefix, localName, namespaceURI, doc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="doc" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="prefix">네임스페이스 접두사입니다. <see cref="P:System.Xml.XmlElement.Prefix" /> 속성을 참조하십시오.</param>
        <param name="localName">로컬 이름입니다. <see cref="P:System.Xml.XmlElement.LocalName" /> 속성을 참조하십시오.</param>
        <param name="namespaceURI">네임스페이스 URI입니다. <see cref="P:System.Xml.XmlElement.NamespaceURI" /> 속성을 참조하십시오.</param>
        <param name="doc">부모 XML 문서입니다.</param>
        <summary><see cref="T:System.Xml.XmlElement" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스화할 수 없습니다는 <xref:System.Xml.XmlElement> 직접; 대신 사용 하 여 메서드 같은 <xref:System.Xml.XmlDocument.CreateElement%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlAttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Xml.XmlAttributeCollection" Usage="System.Xml.XmlElement.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드에 대한 특성 목록을 포함하는 <see cref="T:System.Xml.XmlAttributeCollection" />을 가져옵니다.</summary>
        <value>이 노드에 대한 특성 목록을 포함하는 <see cref="T:System.Xml.XmlAttributeCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 첫 번째 특성의 값을 변경 합니다.  
  
 [!code-cpp[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.Attributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlElement.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체(노드가 <see langword="XmlElement" />인 경우 해당 특성)만 복제하려면 <see langword="false" />입니다.</param>
        <summary>이 노드의 복제본을 만듭니다.</summary>
        <returns>복제된 노드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 노드에 대 한 복사 생성자로 사용 됩니다. 중복 노드는 부모가 (<xref:System.Xml.XmlNode.ParentNode%2A> 반환 `null`).  
  
   
  
## Examples  
 다음 예제에서는 새 요소를 만듭니다, 그리고 복제 및 다음 XML 문서에 두 요소를 추가 합니다.  
  
 [!code-cpp[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 특성의 특성 값을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string -&gt; string&#xA;override this.GetAttribute : string -&gt; string" Usage="xmlElement.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">검색할 특성의 이름입니다. 정규화된 이름입니다. 일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</param>
        <summary>지정된 이름을 가진 특성의 값을 반환합니다.</summary>
        <returns>지정된 특성의 값을 반환합니다. 일치 하는 특성이 없거나 특성에 지정된 값 또는 기본값이 없으면 빈 문자열이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 요소에 지정 된 특성이 있는지를 확인 합니다.  
  
 [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string * string -&gt; string&#xA;override this.GetAttribute : string * string -&gt; string" Usage="xmlElement.GetAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">검색할 특성의 로컬 이름입니다.</param>
        <param name="namespaceURI">검색할 특성의 네임스페이스 URI입니다.</param>
        <summary>지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성의 값을 반환합니다.</summary>
        <returns>지정된 특성의 값을 반환합니다. 일치 하는 특성이 없거나 특성에 지정된 값 또는 기본값이 없으면 빈 문자열이 반환됩니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 <see cref="T:System.Xml.XmlAttribute" />를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute GetAttributeNode (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute GetAttributeNode(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttributeNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttributeNode (name As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ GetAttributeNode(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeNode : string -&gt; System.Xml.XmlAttribute&#xA;override this.GetAttributeNode : string -&gt; System.Xml.XmlAttribute" Usage="xmlElement.GetAttributeNode name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">검색할 특성의 이름입니다. 정규화된 이름입니다. 일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</param>
        <summary>지정된 이름의 <see langword="XmlAttribute" />를 반환합니다.</summary>
        <returns>지정된 <see langword="XmlAttribute" />이거나 일치하는 특성이 없는 경우에는 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 요소에 지정 된 특성이 있는지를 확인 합니다.  
  
 [!code-cpp[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.GetAttributeNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.GetAttributeNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute GetAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute GetAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ GetAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeNode : string * string -&gt; System.Xml.XmlAttribute&#xA;override this.GetAttributeNode : string * string -&gt; System.Xml.XmlAttribute" Usage="xmlElement.GetAttributeNode (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">특성의 로컬 이름입니다.</param>
        <param name="namespaceURI">특성의 네임스페이스 URI입니다.</param>
        <summary>지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 <see cref="T:System.Xml.XmlAttribute" />를 반환합니다.</summary>
        <returns>지정된 <see langword="XmlAttribute" />이거나 일치하는 특성이 없는 경우에는 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetElementsByTagName">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 이름과 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetElementsByTagName : string -&gt; System.Xml.XmlNodeList&#xA;override this.GetElementsByTagName : string -&gt; System.Xml.XmlNodeList" Usage="xmlElement.GetElementsByTagName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">일치시킬 이름 태그입니다. 정규화된 이름입니다. 일치하는 노드의 <see langword="Name" /> 속성과 일치합니다. 별표(*)는 모든 태그와 일치하는 특수 값입니다.</param>
        <summary>지정된 <see cref="P:System.Xml.XmlElement.Name" />과 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</summary>
        <returns>일치하는 모든 노드 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다. 일치하는 노드가 없으면 목록이 비어 있습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 노드는 이러한에서 발생 하는 한 전위 순서로 배치 됩니다는 <xref:System.Xml.XmlElement> 트리.  
  
> [!NOTE]
>  사용 하는 것이 좋습니다.는 <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> 하거나 <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> 메서드 대신를 <xref:System.Xml.XmlElement.GetElementsByTagName%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 가져오고 모든 책 제목을 표시 합니다.  
  
 [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/VB/source.vb#1)]  
  
 이 예제에서는 파일을 사용 하 여 `2books.xml`입력으로 합니다.  
  
 [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetElementsByTagName (localName As String, namespaceURI As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetElementsByTagName : string * string -&gt; System.Xml.XmlNodeList&#xA;override this.GetElementsByTagName : string * string -&gt; System.Xml.XmlNodeList" Usage="xmlElement.GetElementsByTagName (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">일치시킬 로컬 이름입니다. 별표(*)는 모든 태그와 일치하는 특수 값입니다.</param>
        <param name="namespaceURI">일치시킬 네임스페이스 URI입니다.</param>
        <summary>지정된 <see cref="P:System.Xml.XmlElement.LocalName" /> 및 <see cref="P:System.Xml.XmlElement.NamespaceURI" />와 일치하는 모든 하위 요소의 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</summary>
        <returns>일치하는 모든 노드 목록이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다. 일치하는 노드가 없으면 목록이 비어 있습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 노드는 이러한에서 발생 하는 한 전위 순서로 배치 됩니다는 `XmlElement` 트리.  
  
> [!NOTE]
>  사용 하는 것이 좋습니다.는 <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> 하거나 <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> 메서드 대신를 <xref:System.Xml.XmlElement.GetElementsByTagName%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>현재 노드에 지정된 특성이 있는지 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasAttribute">
      <MemberSignature Language="C#" Value="public virtual bool HasAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.HasAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member HasAttribute : string -&gt; bool&#xA;override this.HasAttribute : string -&gt; bool" Usage="xmlElement.HasAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">찾을 특성의 이름입니다. 정규화된 이름입니다. 일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</param>
        <summary>현재 노드에 지정된 이름의 특성이 있는지 여부를 확인합니다.</summary>
        <returns>현재 노드에 지정된 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 요소에 지정 된 특성이 있는지를 확인 합니다.  
  
 [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttribute">
      <MemberSignature Language="C#" Value="public virtual bool HasAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member HasAttribute : string * string -&gt; bool&#xA;override this.HasAttribute : string * string -&gt; bool" Usage="xmlElement.HasAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">찾을 특성의 로컬 이름입니다.</param>
        <param name="namespaceURI">찾을 특성의 네임스페이스 URI입니다.</param>
        <summary>현재 노드에 지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성이 있는지 확인합니다.</summary>
        <returns>현재 노드에 지정된 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Xml.XmlElement.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 노드에 특성이 있는지를 나타내는 <see langword="boolean" /> 값을 얻습니다.</summary>
        <value>현재 노드에 특성이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 루트 요소에서 모든 특성을 제거합니다.  
  
 [!code-cpp[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.HasAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.HasAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Xml.XmlElement.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>노드와 모든 자식의 연결된 값을 가져오거나 설정합니다.</summary>
        <value>노드와 모든 자식의 연결된 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

자식 노드는 보존 되지 않습니다 있도록 모든 자식이 지정된 된 문자열의 구문 분석 된 내용으로 대체이 속성을 설정 합니다.
집합 작업 후 자식 노드는 텍스트 노드입니다.
  
이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.   
  
## Examples  
 다음 예제에서는 비교 합니다 `InnerText` 고 <xref:System.Xml.XmlElement.InnerXml%2A> 속성입니다.  
  
 [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XmlElement.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드의 자식을 나타내는 태그를 가져오거나 설정합니다.</summary>
        <value>이 노드의 자식 태그입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 노드의 자식이 지정된 된 문자열의 구문 분석 된 내용으로 바뀝니다. 현재 네임스페이스 컨텍스트에서 구문 분석이 수행됩니다.  
  
 이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 비교 합니다 <xref:System.Xml.XmlElement.InnerText%2A> 고 `InnerXml` 속성입니다.  
  
 [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.InnerXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">이 속성을 설정할 때 지정된 XML이 올바른 형식이 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool with get, set" Usage="System.Xml.XmlElement.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소의 태그 서식을 가져오거나 설정합니다.</summary>
        <value><see langword="true" /> 요소가 짧은 태그 형식으로 직렬화 해야 하는 경우 "&lt;항목 /&gt;"; <see langword="false" /> 긴 형식에 대 한 "&lt;항목&gt;&lt;/&gt;"입니다.  
  
이 속성을 설정할 때 <see langword="true" />로 설정하면 요소의 자식이 제거되고 요소는 짧은 태그 형식으로 serialize됩니다. <see langword="false" />로 설정하면 요소에 내용이 있는지 여부와 상관없이 속성 값이 변경되고, 요소가 비었으면 긴 형식으로 serialize됩니다.  
  
이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 문서 개체 모델 (DOM)의 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 빈 요소에 콘텐츠를 추가합니다.  
  
 [!code-cpp[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.IsEmpty Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.IsEmpty Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlElement.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 노드의 로컬 이름을 가져옵니다.</summary>
        <value>접두사를 제거한 현재 노드의 이름입니다. 예를 들어 <see langword="LocalName" /> 은 요소 book &lt;예&gt;합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 노드는 접두사가 없는 경우 `LocalName` 같습니다 <xref:System.Xml.XmlElement.Name%2A>합니다.  
  
   
  
## Examples  
 다음 예제에서는 ISBN 요소에 정보가 표시 됩니다.  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlElement.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>노드의 정규화된 이름을 가져옵니다.</summary>
        <value>노드의 정규화된 이름입니다. <see langword="XmlElement" /> 노드의 경우에는 요소의 태그 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 ISBN 요소에 정보가 표시 됩니다.  
  
 [!code-cpp[Classic WebData XmlElement.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlElement.LocalName" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlElement.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드의 네임스페이스 URI를 가져옵니다.</summary>
        <value>이 노드의 네임스페이스 URI입니다. 네임스페이스 URI가 없으면, 이 속성은 String.Empty를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 URI를 만들 때 지정한 네임 스페이스입니다. 예를 들어 `NamespaceURI` 요소에 대 한 urn: 샘플은 \<예 xmlns:bk = "urn: 예제" >  
  
   
  
## Examples  
 다음 예제에서는 ISBN 요소에 정보가 표시 됩니다.  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : System.Xml.XmlNode" Usage="System.Xml.XmlElement.NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 요소 바로 다음에 오는 <see cref="T:System.Xml.XmlNode" />를 가져옵니다.</summary>
        <value>이 요소 바로 다음에 오는 <see langword="XmlNode" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlElement.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 노드의 형식을 가져옵니다.</summary>
        <value>노드 형식입니다. <see langword="XmlElement" /> 노드의 경우 이 값은 XmlNodeType.Element입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDocument : System.Xml.XmlDocument" Usage="System.Xml.XmlElement.OwnerDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />를 가져옵니다.</summary>
        <value>이 요소가 속한 <see langword="XmlDocument" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 노드가 노드를 추가 하는 경우 사용 합니다 `XmlDocument` 반환한는 `OwnerDocument` 속성 노드를 만듭니다.  
  
   
  
## Examples  
 다음 예제에서는 XML 문서에 새 요소를 삽입 합니다.  
  
 [!code-cpp[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.OwnerDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.OwnerDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNode : System.Xml.XmlNode" Usage="System.Xml.XmlElement.ParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>부모를 가질 수 있는 노드의 경우 이 노드의 부모를 가져옵니다.</summary>
        <value>현재 노드의 부모인 <see langword="XmlNode" />입니다. 노드를 만들고 트리에 추가하지 않은 경우나 트리에서 노드를 제거한 경우 부모는 <see langword="null" />입니다. 다른 모든 노드의 경우에는 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다. 다음 표에서는 <see langword="ParentNode" /> 속성에 대해 가능한 반환 값을 설명합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Xml.XmlElement.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드의 네임스페이스 접두사를 가져오거나 설정합니다.</summary>
        <value>이 노드의 네임스페이스 접두사입니다. 접두사가 없으면, 이 속성은 String.Empty를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 변경 내용을 설정 합니다 <xref:System.Xml.XmlElement.Name%2A> 속성에 대 한 정규화 된 이름을 포함 하는 `XmlElement`합니다. 그러나 접두사를 변경 해도 네임 스페이스 요소의 URI 변경 되지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 ISBN 요소에 정보가 표시 됩니다.  
  
 [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.LocalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">이 노드가 읽기 전용인 경우</exception>
        <exception cref="T:System.Xml.XmlException">지정된 접두사에 잘못된 문자가 포함된 경우  
  
지정된 접두사의 형식이 잘못된 경우  
  
이 노드의 namespaceURI가 <see langword="null" />인 경우  
  
지정된 접두사가 “xml”이고 이 노드의 namespaceURI가 “http://www.w3.org/XML/1998/namespace”와 다른 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public override void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveAll();" />
      <MemberSignature Language="F#" Value="override this.RemoveAll : unit -&gt; unit" Usage="xmlElement.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>지정된 특성 및 현재 노드의 자식을 모두 제거합니다. 기본 특성은 제거되지 않습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 루트 요소에서 모든 특성 및 자식 노드를 제거합니다.  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllAttributes">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAllAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAllAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAllAttributes();" />
      <MemberSignature Language="F#" Value="abstract member RemoveAllAttributes : unit -&gt; unit&#xA;override this.RemoveAllAttributes : unit -&gt; unit" Usage="xmlElement.RemoveAllAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>요소에서 지정된 모든 특성을 제거합니다. 기본 특성은 제거되지 않습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 루트 요소에서 모든 특성을 제거합니다.  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAllAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 특성을 제거합니다. 제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAttribute (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAttribute : string -&gt; unit&#xA;override this.RemoveAttribute : string -&gt; unit" Usage="xmlElement.RemoveAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">제거할 특성의 이름입니다. 정규화된 이름입니다. 일치하는 노드의 <see langword="Name" /> 속성과 일치합니다.</param>
        <summary>이름을 사용하여 특성을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제거한 특성 특성 기본 값이 포함 된 즉시 표시 기본 값을 포함할 것으로 알려져 경우 및 해당 하는 경우 해당 네임 스페이스 URI, 로컬 이름 및 접두사입니다.  
  
   
  
## Examples  
 다음 예제에서는 요소에서 특성을 제거합니다.  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">노드는 읽기 전용입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAttribute (localName As String, namespaceURI As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAttribute : string * string -&gt; unit&#xA;override this.RemoveAttribute : string * string -&gt; unit" Usage="xmlElement.RemoveAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">제거할 특성의 로컬 이름입니다.</param>
        <param name="namespaceURI">제거할 특성의 네임스페이스 URI입니다.</param>
        <summary>지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성을 제거합니다. 제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제거한 특성 특성 기본 값이 포함 된 즉시 표시 기본 값을 포함할 것으로 알려져 경우 및 해당 하는 경우 해당 네임 스페이스 URI, 로컬 이름 및 접두사입니다.  
  
   
  
## Examples  
 다음 예제에서는 요소에서 특성을 제거합니다.  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">노드는 읽기 전용입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttributeAt">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveAttributeAt (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveAttributeAt(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeAt (i As Integer) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveAttributeAt(int i);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAttributeAt : int -&gt; System.Xml.XmlNode&#xA;override this.RemoveAttributeAt : int -&gt; System.Xml.XmlNode" Usage="xmlElement.RemoveAttributeAt i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">제거할 노드의 인덱스입니다. 첫 번째 노드에 인덱스 0이 있습니다.</param>
        <summary>요소에서 지정된 인덱스의 특성 노드를 제거합니다. 제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</summary>
        <returns>제거한 Attribute 노드이거나, 지정한 인덱스에 노드가 없는 경우에는 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 요소에서 특성을 제거합니다.  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xml.XmlAttribute" />를 제거합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute RemoveAttributeNode (System.Xml.XmlAttribute oldAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute RemoveAttributeNode(class System.Xml.XmlAttribute oldAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeNode (oldAttr As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ RemoveAttributeNode(System::Xml::XmlAttribute ^ oldAttr);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAttributeNode : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute&#xA;override this.RemoveAttributeNode : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlElement.RemoveAttributeNode oldAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldAttr" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="oldAttr">제거할 <see langword="XmlAttribute" /> 노드입니다. 제거한 특성에 기본값이 있으면 바로 대체됩니다.</param>
        <summary>지정된 <see cref="T:System.Xml.XmlAttribute" />을 제거합니다.</summary>
        <returns>제거한 <see langword="XmlAttribute" />이거나, <paramref name="oldAttr" />이 <see langword="null" />의 Attribute 노드가 아닐 경우에는 <see langword="XmlElement" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">이 노드가 읽기 전용인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute RemoveAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute RemoveAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ RemoveAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAttributeNode : string * string -&gt; System.Xml.XmlAttribute&#xA;override this.RemoveAttributeNode : string * string -&gt; System.Xml.XmlAttribute" Usage="xmlElement.RemoveAttributeNode (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">특성의 로컬 이름입니다.</param>
        <param name="namespaceURI">특성의 네임스페이스 URI입니다.</param>
        <summary>로컬 이름과 네임스페이스 URI로 지정한 <see cref="T:System.Xml.XmlAttribute" />를 제거합니다. 제거한 특성에 기본값이 있는 경우 즉시 바뀝니다.</summary>
        <returns>제거한 <see langword="XmlAttribute" />이거나 <see langword="null" />에 일치하는 Attribute 노드가 없으면 <see langword="XmlElement" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 요소에서 특성을 제거합니다.  
  
 [!code-cpp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.RemoveAttributeNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">이 노드가 읽기 전용인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlElement.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlElement.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스키마 유효성 검사의 결과로 이 노드에 할당된 스키마 유효성 검사 이후 정보 집합을 가져옵니다.</summary>
        <value>이 노드의 스키마 유효성 검사 이후 정보 집합이 포함된 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlElement.SchemaInfo%2A> 이 노드의 유효성을 검사 하는 경우 속성을 설정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 특성의 값을 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public virtual void SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetAttribute : string * string -&gt; unit&#xA;override this.SetAttribute : string * string -&gt; unit" Usage="xmlElement.SetAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">만들거나 변경할 특성의 이름입니다. 정규화된 이름입니다. 이름에 콜론이 포함되어 있으면 접두사와 로컬 이름 구성 요소로 구문 분석됩니다.</param>
        <param name="value">특성에 설정할 값입니다.</param>
        <summary>지정된 이름을 가진 특성의 값을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 해당 값을 변경 요소에 동일한 이름의 특성이 이미 있으면 `value`합니다. `value` 간단한 문자열이입니다. 설정 되는 구문 분석 되지 것입니다. 엔터티 참조로 인식 되도록 하려면 구문 등의 모든 태그가 리터럴 텍스트로 처리 됩니다 하며 기록 되는 경우 구현에서 적절히 이스케이프 되어야 합니다. 엔터티 참조를 포함 하는 특성 값에 할당 하려면 사용자가 만들어야 합니다는 <xref:System.Xml.XmlAttribute> 노드와 함께 <xref:System.Xml.XmlText> 및 <xref:System.Xml.XmlEntityReference> 노드 적절 한 하위 트리를 작성 및 사용 하 여 <xref:System.Xml.XmlElement.SetAttributeNode%2A> 특성의 값으로 할당 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">지정된 이름에 잘못된 문자가 있는 경우</exception>
        <exception cref="T:System.ArgumentException">노드는 읽기 전용입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public virtual string SetAttribute (string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string SetAttribute(string localName, string namespaceURI, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttribute (localName As String, namespaceURI As String, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ SetAttribute(System::String ^ localName, System::String ^ namespaceURI, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetAttribute : string * string * string -&gt; string&#xA;override this.SetAttribute : string * string * string -&gt; string" Usage="xmlElement.SetAttribute (localName, namespaceURI, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">특성의 로컬 이름입니다.</param>
        <param name="namespaceURI">특성의 네임스페이스 URI입니다.</param>
        <param name="value">특성에 설정할 값입니다.</param>
        <summary>지정된 로컬 이름과 네임스페이스 URI를 갖고 있는 특성의 값을 설정합니다.</summary>
        <returns>특성 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAttributeNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>새 <see cref="T:System.Xml.XmlAttribute" />를 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute SetAttributeNode (System.Xml.XmlAttribute newAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute SetAttributeNode(class System.Xml.XmlAttribute newAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttributeNode (newAttr As XmlAttribute) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ SetAttributeNode(System::Xml::XmlAttribute ^ newAttr);" />
      <MemberSignature Language="F#" Value="abstract member SetAttributeNode : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute&#xA;override this.SetAttributeNode : System.Xml.XmlAttribute -&gt; System.Xml.XmlAttribute" Usage="xmlElement.SetAttributeNode newAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAttr" Type="System.Xml.XmlAttribute" />
      </Parameters>
      <Docs>
        <param name="newAttr">이 요소의 특성 컬렉션에 추가할 <see langword="XmlAttribute" /> 노드입니다.</param>
        <summary>지정된 <see cref="T:System.Xml.XmlAttribute" />를 추가합니다.</summary>
        <returns>특성이 같은 이름을 가진 기존 특성을 대체할 경우 이전 <see langword="XmlAttribute" />가 반환됩니다. 그렇지 않으면 <see langword="null" />이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 요소에 해당 이름 가진 특성이 이미 있으면 새 노드로 대체 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newAttr" />를 만든 경우 이 노드가 읽기 전용인 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="newAttr" />가 이미 다른 <see langword="XmlElement" /> 개체의 특성인 경우. 다른 <see langword="XmlAttribute" /> 개체에서 다시 사용하려면 명시적으로 <see langword="XmlElement" /> 노드를 복제해야 합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAttributeNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttribute SetAttributeNode (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlAttribute SetAttributeNode(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAttributeNode (localName As String, namespaceURI As String) As XmlAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlAttribute ^ SetAttributeNode(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member SetAttributeNode : string * string -&gt; System.Xml.XmlAttribute&#xA;override this.SetAttributeNode : string * string -&gt; System.Xml.XmlAttribute" Usage="xmlElement.SetAttributeNode (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">특성의 로컬 이름입니다.</param>
        <param name="namespaceURI">특성의 네임스페이스 URI입니다.</param>
        <summary>지정된 <see cref="T:System.Xml.XmlAttribute" />를 추가합니다.</summary>
        <returns>추가할 <see langword="XmlAttribute" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `XmlAttribute` 자식이 없습니다. 사용 하 여 <xref:System.Xml.XmlAttribute.Value%2A> 특성에 텍스트 값을 할당 하거나 사용 하 여 <xref:System.Xml.XmlNode.AppendChild%2A> (또는 비슷한 메서드) 자식 특성에 추가 합니다.  
  
   
  
## Examples  
 다음 예제에서는 요소에 특성을 추가 합니다.  
  
 [!code-cpp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.SetAttributeNode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="override this.WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlElement.WriteContentTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">저장할 대상 <see langword="XmlWriter" />입니다.</param>
        <summary>지정된 <see cref="T:System.Xml.XmlWriter" />에 노드의 모든 자식을 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 콘솔에는 요소의 콘텐츠를 표시합니다.  
  
 [!code-cpp[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlElement.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">저장할 대상 <see langword="XmlWriter" />입니다.</param>
        <summary>현재 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 요소에 특성을 추가 하 고 수정된 된 요소를 표시 합니다.  
  
 [!code-cpp[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlElement.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>