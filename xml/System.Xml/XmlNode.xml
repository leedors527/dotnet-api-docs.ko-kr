<Type Name="XmlNode" FullName="System.Xml.XmlNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c8fbd1dbee9f6263e3d661d9cc2868c1c7ef4974" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59349497" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlNode : ICloneable, System.Collections.IEnumerable, System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNode extends System.Object implements class System.Collections.IEnumerable, class System.ICloneable, class System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNode" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNode&#xA;Implements ICloneable, IEnumerable, IXPathNavigable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNode abstract : ICloneable, System::Collections::IEnumerable, System::Xml::XPath::IXPathNavigable" />
  <TypeSignature Language="F#" Value="type XmlNode = class&#xA;    interface ICloneable&#xA;    interface IEnumerable&#xA;    interface IXPathNavigable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>XML 문서의 단일 노드를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스는 W3C 문서 개체 모델 (DOM) Level 1 Core 및 DOM Level 2 Core를 구현합니다. DOM은 XML 문서의 메모리 내(캐시) 트리 표현입니다. `XmlNode` DOM의.NET 구현에서 기본 클래스 XPath 선택을 지원 하 고 편집 기능을 제공 합니다. 합니다 <xref:System.Xml.XmlDocument> 클래스를 확장 `XmlNode` 및 XML 문서를 나타냅니다. 사용할 수 있습니다 `XmlDocument` 로드 하 고 XML 데이터를 저장 합니다. 또한 노드 생성에 대 한 메서드를 포함합니다. 참조 [XML 문서 개체 모델 (DOM)](~/docs/standard/data/xml/xml-document-object-model-dom.md) 자세한 내용은 합니다.  
  
> [!IMPORTANT]
>  사용 하 여 결과로 발생 하는 예외를 <xref:System.Xml.XmlNode> 클래스와 같이 <xref:System.Xml.XmlException> 클래스에는 신뢰할 수 없는 시나리오에서 노출 되지 않아야 하는 중요 한 정보가 포함 될 수 있습니다. 신뢰할 수 없는 시나리오에서 중요 한 정보가 노출 되지 않습니다 있도록 예외가 제대로 처리 되어야 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
    <related type="Article" href="~/docs/standard/data/xml/create-new-nodes-in-the-dom.md">[&lt;topic://cpconCreateNewNodesInDOM&gt;]</related>
  </Docs>
  <Members>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode AppendChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AppendChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ AppendChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.AppendChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.AppendChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">추가할 노드입니다. 지정된 위치로 이동하는, 추가할 노드의 모든 콘텐츠입니다.</param>
        <summary>지정된 노드를 이 노드의 자식 노드 목록 끝에 추가합니다.</summary>
        <returns>추가한 노드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `newChild` 는 이미 트리에서 원래 위치에서 제거 하 고 대상 위치에 추가 합니다. 노드를 삽입 하는 방법에 대 한 자세한 내용은 참조 하세요. [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)합니다.  
  
 삽입 하는 노드가 다른 문서에서 생성 된 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려고 합니다. 현재 문서에 삽입한 다음 가져온된 노드를 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 XML 문서에 새 노드를 추가 합니다.  
  
 [!code-cpp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.AppendChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.AppendChild Example/VB/source.vb#1)]  
  
 **출력:**  
  
```  
Display the modified XML...  
<?xml version="1.0" encoding="IBM437"?>  
<book genre="novel" ISBN="1-861001-57-5">  
  <title>Pride And Prejudice</title>  
  <price>19.95</price>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우  
  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
        <exception cref="T:System.ArgumentException">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
  
이 노드가 읽기 전용인 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see langword="AppendChild" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="AppendChild" /> 메서드의 기본 클래스입니다.</para></block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/891e54f5-54f6-4bb4-b624-9d1b6a1f1216">XML 문서에 노드 삽입</related>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlAttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlAttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As XmlAttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlAttributeCollection ^ Attributes { System::Xml::XmlAttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Xml.XmlAttributeCollection" Usage="System.Xml.XmlNode.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlAttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드의 특성이 포함된 <see cref="T:System.Xml.XmlAttributeCollection" />을 가져옵니다.</summary>
        <value>노드의 특성을 포함하는 <see langword="XmlAttributeCollection" />입니다.  
  
노드가 XmlNodeType.Element 형식일 경우 노드의 특성이 반환됩니다. 그렇지 않은 경우 <see langword="null" />을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 XML 문서에 새 특성을 추가 합니다.  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public virtual string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlNode.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 노드의 기본 URI를 가져옵니다.</summary>
        <value>노드가 로드된 위치이거나 노드에 기본 URI가 없으면 String.Empty입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 네트워크에 연결 된 XML 문서를 다양 한 W3C 표준 포함 메커니즘을 사용 하 여 집계 데이터의 청크 이루어집니다 및 서로 다른 위치에서 제공 되는 노드를 포함 합니다. `BaseURI` 이러한 노드가 출처를 보여 줍니다.  
  
 이 속성의 값은 노드 유형에 따라 다릅니다. 문서 노드 위치를 반환 하는 예를 들어를 <xref:System.Xml.XmlDocument> 개체입니다. 외부 EntityReference 노드의 자식 노드인 노드 엔터티 자체의 위치를 반환 합니다. 예를 들어, 다음 XML 문서를 고려 합니다.  
  
```xml  
<!DOCTYPE item [  
<!ENTITY xyz SYSTEM "a/b.xml">  
]>  
<item num='123'>&xyz;</item>  
```  
  
 여기서 외부 엔터티 `a/b.xml` XML 텍스트가: `<test>123</test>`합니다.  
  
 문서에서 로드 되 면 http://server/mydata.xml, `BaseURI` 다음을 반환 합니다.  
  
|노드 형식|name|BaseURI|  
|--------------|----------|-------------|  
|특성|num|http://server/mydata.xml|  
|문서|#document|http://server/mydata.xml|  
|DocumentType|항목|http://server/mydata.xml|  
|엔터티|xyz|http://server/mydata.xml|  
|요소|항목|http://server/mydata.xml|  
|EntityReference|xyz|http://server/mydata.xml|  
|요소|테스트|http://server/a/b.xml|  
|텍스트|#text|http://server/a/b.xml|  
  
 `BaseURI` 엔터티는 엔터티는 확장 하는 경우이 정보는 유지 되지 않습니다 하 고이 속성의 위치를 반환 합니다. 경계 참조는 `XmlDocument` 모든 경우에는 개체입니다.  
  
 두 번째 예로, 다음 XML 문서를 지정 합니다.  
  
```xml  
<!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd">  
<baa>&xyz;</baa>  
```  
  
 여기서 DTD 파일에 다음을 포함 되어 있습니다.  
  
```  
<!ENTITY xyz <E1>My Data</E1>  
<!ELEMENT baa #PCDATA>  
<!ATTLIST baa attr1 "woof">  
```  
  
 XML 문서에서 로드 되 면 http://localhost/mydata.xml, `BaseURI` 노드 각각에 대해 다음을 반환 합니다.  
  
|노드 형식|name|BaseURI|  
|--------------|----------|-------------|  
|문서|#document|http://localhost/mydata.xml|  
|DocumentType|Mydata|http://localhost/mydata.xml<br /><br /> 합니다 <xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=nameWithType> 또는 <xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=nameWithType> 속성에서 DTD 파일을 로드 하는 데 사용할 수 있습니다.|  
|요소|baa|http://localhost/mydata.xml|  
|엔터티|xyz|http://localhost/doctype.dtd|  
|EntityReference|xyz|http://localhost/mydata.xml|  
|특성|woof|http://localhost/mydata.xml|  
  
> [!NOTE]
>  기본 특성의 기본 URI가 속해 있는 요소의 기본 URI와 동일 합니다.  
  
 이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeList ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNodeList ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChildNodes As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeList ^ ChildNodes { System::Xml::XmlNodeList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Xml.XmlNodeList" Usage="System.Xml.XmlNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>노드의 모든 자식을 가져옵니다.</summary>
        <value>노드의 모든 자식을 포함하는 개체입니다.  
  
자식 노드가 없으면 이 속성은 빈 <see cref="T:System.Xml.XmlNodeList" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자식 노드에 대 한 정보를 참조 하세요.를 [W3C DOM (코어) 수준 1 사양은](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)  
  
   
  
## Examples  
 다음 예제에서는 루트 요소의 모든 자식 노드를 표시합니다.  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Xml.XmlNode&#xA;override this.Clone : unit -&gt; System.Xml.XmlNode" Usage="xmlNode.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 노드의 복제본을 만듭니다.</summary>
        <returns>복제된 노드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 복제는 <xref:System.Xml.XmlElement> 모든 특성 및 기본값으로 설정 된 특성을 나타내는 XML 프로세서에서 생성 된 항목을 포함 하 여 해당 값을 복사 합니다. 이 메서드를 재귀적으로 노드와 그 아래의 하위 트리를 복제합니다.  
  
 `Clone` 호출 하는 것과 같습니다 `CloneNode(true)`합니다.  
  
 다음 표에서 각 특정 동작을 설명 <xref:System.Xml.XmlNodeType>합니다.  
  
|XmlNodeType|복제|  
|-----------------|-----------|  
|특성|자식 노드를 포함 하는 특성 노드를 복제 합니다.|  
|CData|데이터 콘텐츠를 포함 하는 CData 노드를 복제 합니다.|  
|주석|텍스트 내용을 포함 하 여 주석 노드를 복제 합니다.|  
|문서|모든 자식 노드를 포함 하는 문서 노드에 복제 합니다.|  
|DocumentFragment|모든 자식 노드를 포함 하는 문서 조각 노드를 복제 합니다.|  
|DocumentType|문서 형식 노드를 복제합니다.|  
|요소|요소 노드, 해당 특성 및 자식 노드를 복제합니다.|  
|엔터티|entity 노드는 복제할 수 없습니다.|  
|EntityReference|엔터티 참조 노드를 복제합니다. 대체 텍스트는 포함되지 않습니다.|  
|Notation|notation 노드는 복제할 수 없습니다.|  
|ProcessingInstruction|해당 대상 및 데이터를 포함 하는 처리 명령 노드를 복제 합니다.|  
|SignificantWhitespace|해당 데이터 값을 포함 하 여 공백 노드를 복제 합니다.|  
|텍스트|해당 데이터 값을 포함 하 고 텍스트 노드를 복제 합니다.|  
|Whitespace|해당 데이터 값을 포함 하 여 공백 노드를 복제 합니다.|  
|XmlDeclaration|해당 데이터 값을 포함 하는 XmlDeclaration 노드에 복제 합니다.|  
|다른 모든 노드 형식입니다.|이러한 노드 형식은 복제할 수 없습니다.|  
  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 XML 문서의 루트 노드를 복제합니다.  
  
 [!code-cpp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.Clone Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.Clone Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="abstract member CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlNode.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">지정된 노드 아래의 하위 트리를 재귀적으로 복제하려면 <see langword="true" />이고, 노드 자체만 복제하려면 <see langword="false" />입니다.</param>
        <summary>파생 클래스에서 재정의한 경우 노드를 복제합니다.</summary>
        <returns>복제된 노드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 노드에 대 한 복사 생성자로 사용 됩니다. 중복 노드는 부모가 (<xref:System.Xml.XmlNode.ParentNode%2A> 반환 `null`).  
  
 다음 표에서 각 특정 동작을 설명 <xref:System.Xml.XmlNodeType>합니다.  
  
|XmlNodeType|CloneNode(true)|CloneNode(false)|  
|-----------------|-----------------------|------------------------|  
|특성|자식 노드를 포함 하는 특성 노드를 복제 합니다.|자식 노드를 포함 하는 특성 노드를 복제 합니다.|  
|CData|데이터 콘텐츠를 포함 하는 CData 노드를 복제 합니다.|데이터 콘텐츠를 포함 하는 CData 노드를 복제 합니다.|  
|주석|텍스트 내용을 포함 하 여 주석 노드를 복제 합니다.|텍스트 내용을 포함 하 여 주석 노드를 복제 합니다.|  
|문서|모든 자식 노드를 포함 하는 문서 노드에 복제 합니다.|문서 노드를 복제합니다.|  
|DocumentFragment|모든 자식 노드를 포함 하는 문서 조각 노드를 복제 합니다.|문서 조각 노드를 복제합니다.|  
|DocumentType|문서 형식 노드를 복제합니다.|문서 형식 노드를 복제합니다.|  
|요소|요소 노드, 해당 특성 및 자식 노드를 복제합니다.|요소 노드 및 모든 기본 특성을 포함 하 여 해당 특성을 복제 합니다.|  
|엔터티|entity 노드는 복제할 수 없습니다.|entity 노드는 복제할 수 없습니다.|  
|EntityReference|엔터티 참조 노드를 복제합니다. 대체 텍스트는 포함되지 않습니다.|엔터티 참조 노드를 복제합니다. 대체 텍스트는 포함되지 않습니다.|  
|Notation|notation 노드는 복제할 수 없습니다.|notation 노드는 복제할 수 없습니다.|  
|ProcessingInstruction|해당 대상 및 데이터를 포함 하는 처리 명령 노드를 복제 합니다.|해당 대상 및 데이터를 포함 하는 처리 명령 노드를 복제 합니다.|  
|SignificantWhitespace|해당 데이터 값을 포함 하 여 공백 노드를 복제 합니다.|해당 데이터 값을 포함 하 여 공백 노드를 복제 합니다.|  
|텍스트|해당 데이터 값을 포함 하 고 텍스트 노드를 복제 합니다.|해당 데이터 값을 포함 하 고 텍스트 노드를 복제 합니다.|  
|Whitespace|해당 데이터 값을 포함 하 여 공백 노드를 복제 합니다.|해당 데이터 값을 포함 하 여 공백 노드를 복제 합니다.|  
|XmlDeclaration|해당 데이터 값을 포함 하는 XmlDeclaration 노드에 복제 합니다.|해당 데이터 값을 포함 하는 XmlDeclaration 노드에 복제 합니다.|  
|다른 모든 노드 형식입니다.|이러한 노드 형식은 복제할 수 없습니다.|이러한 노드 형식은 복제할 수 없습니다.|  
  
   
  
## Examples  
 다음 예제에서는 전체 및 단순 복제본 간의 차이 보여 줍니다.  
  
 [!code-cpp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">복제할 수 없는 노드 형식에 이 메서드를 호출하는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.CreateNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateNavigator () As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XPath::XPathNavigator ^ CreateNavigator();" />
      <MemberSignature Language="F#" Value="abstract member CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator&#xA;override this.CreateNavigator : unit -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlNode.CreateNavigator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.XPath.IXPathNavigable.CreateNavigator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 개체를 탐색하기 위해 <see cref="T:System.Xml.XPath.XPathNavigator" />를 만듭니다.</summary>
        <returns>노드를 탐색 하는 데 사용되는 <see langword="XPathNavigator" /> 개체입니다. <see langword="XPathNavigator" />는 메서드를 호출한 노드에 위치하며 문서의 루트에는 위치하지 않습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `XPathNavigator` 읽기 전용, 임의 데이터 액세스를 제공 합니다. XSLT 변형에 최적화 되어 있어 하려면 입력된 메커니즘으로 사용 하는 경우 성능상의 이점을 제공 합니다 <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> 메서드.  
  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 로드 하 고 XSLT 변형을 수행 하기 전에 XML 문서를 편집 합니다.  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode FirstChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FirstChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ FirstChild { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : System.Xml.XmlNode" Usage="System.Xml.XmlNode.FirstChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>노드의 첫 번째 자식을 가져옵니다.</summary>
        <value>노드의 첫 번째 자식입니다. 이러한 노드가 없으면, <see langword="null" />이 반환됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자식 노드에 대 한 정보를 참조 하세요.를 [W3C DOM (코어) 수준 1 사양은](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)  
  
   
  
## Examples  
 다음 예제에서는 title 요소를 표시합니다.  
  
 [!code-cpp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.FirstChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.FirstChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="xmlNode.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 노드에서 자식 노드를 반복하는 열거자를 가져옵니다.</summary>
        <returns>현재 노드에서 하위 노드를 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 "For each" 스타일에 대 한 지원을 제공에서 노드에 대 한 반복을 `XmlNode`입니다.  
  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 XML 문서에 있는 모든 책을 표시합니다.  
  
 [!code-cpp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/VB/source.vb#1)]  
  
 이 예제에서는 파일을 사용 하 여 `books.xml`입력으로 합니다.  
  
 [!code-xml[Classic WebData XmlNode.GetEnumerator Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.GetEnumerator Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceOfPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetNamespaceOfPrefix (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespaceOfPrefix(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaceOfPrefix (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetNamespaceOfPrefix(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaceOfPrefix : string -&gt; string&#xA;override this.GetNamespaceOfPrefix : string -&gt; string" Usage="xmlNode.GetNamespaceOfPrefix prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">찾으려는 네임스페이스 URI가 있는 접두사입니다.</param>
        <summary>현재 노드의 범위에 있는 지정된 접두사에 대해 가장 가까운 **xmlns** 선언을 조회하여 선언의 네임스페이스 URI를 반환합니다.</summary>
        <returns>지정된 접두사의 네임스페이스 URI입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 XML 문서에 새 특성을 추가 합니다.  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrefixOfNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetPrefixOfNamespace (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrefixOfNamespace(string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrefixOfNamespace (namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrefixOfNamespace(System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetPrefixOfNamespace : string -&gt; string&#xA;override this.GetPrefixOfNamespace : string -&gt; string" Usage="xmlNode.GetPrefixOfNamespace namespaceURI" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI">찾으려는 접두사를 가진 네임스페이스 URI입니다.</param>
        <summary>현재 노드의 범위에 있는 지정된 네임스페이스 URI에 대해 가장 가까운 **xmlns** 선언을 조회하여 해당 선언에 정의된 접두사를 반환합니다.</summary>
        <returns>지정된 네임스페이스 URI의 접두사입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 XML 문서에 새 요소를 추가합니다.  
  
 [!code-cpp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetPrefixOfNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetPrefixOfNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildNodes">
      <MemberSignature Language="C#" Value="public virtual bool HasChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.HasChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasChildNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasChildNodes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildNodes : bool" Usage="System.Xml.XmlNode.HasChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드에 자식 노드가 있는지를 나타내는 값을 가져옵니다.</summary>
        <value>현재 노드에 자식 노드가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자식 노드에 대 한 정보를 참조 하세요.를 [W3C DOM (코어) 수준 1 사양은](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)  
  
   
  
## Examples  
 다음 예제에서는 루트 요소의 모든 자식 노드를 표시합니다.  
  
 [!code-cpp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.HasChildNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.HasChildNodes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public virtual string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Xml.XmlNode.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>노드와 모든 자식 노드의 연결된 값을 가져오거나 설정합니다.</summary>
        <value>노드와 모든 자식 노드의 연결된 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 자식 노드를 모두 지정된 된 문자열의 구문 분석 된 내용으로 바뀝니다.  
  
 리프 노드에 대 한 `InnerText` 와 동일한 콘텐츠를 반환 합니다 <xref:System.Xml.XmlNode.Value%2A> 속성입니다.  
  
 이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 비교 합니다 `InnerText` 고 <xref:System.Xml.XmlNode.InnerXml%2A> 속성입니다.  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 **출력:**  
  
```  
Display the InnerText of the element...  
some textmore text  
Display the InnerXml of the element...  
some text<child />more text  
<elem>Text containing &lt;markup/&gt; will have char(&lt;) and char(&gt;) escape  
d.</elem>  
<elem>Text containing <markup />.</elem>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public virtual string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.InnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerXml : string with get, set" Usage="System.Xml.XmlNode.InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드의 자식 노드를 나타내는 태그를 가져오거나 설정합니다.</summary>
        <value>이 노드의 자식 노드를 나타내는 태그입니다.  
  
 <block subset="none" type="note"><para><see langword="InnerXml" />은 기본 특성을 반환하지 않습니다.  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자식 노드를 가질 수 없는 노드에서이 속성을 설정 하는 동안, 예를 들어 텍스트 노드 예외가 throw 됩니다. 그렇지 않은 경우 설정 `InnerXml` 노드의 자식 노드를 지정된 된 문자열의 구문 분석 된 내용으로 바꿉니다. 현재 네임스페이스 컨텍스트에서 구문 분석이 수행됩니다.  
  
 이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.  
  
> [!NOTE]
>  `InnerXml` DOM을 수정 하는 효율적인 방법이 아닙니다. 복잡 한 노드를 대체 하는 경우에 성능 문제가 있을 수 있습니다. 것이 노드를 생성 및와 같은 메서드를 사용 하는 것이 효율적 `InsertBefore`, `InsertAfter`를 `AppendChild`, 및 `RemoveChild` Xml 문서를 수정할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 비교 합니다 <xref:System.Xml.XmlNode.InnerText%2A> 고 `InnerXml` 속성입니다.  
  
 [!code-cpp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InnerText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">자식 노드를 가질 수 없는 노드에 대해 이 속성을 설정하는 경우</exception>
        <exception cref="T:System.Xml.XmlException">이 속성을 설정할 때 지정된 XML이 올바른 형식이 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertAfter(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertAfter (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertAfter(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="abstract member InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.InsertAfter : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.InsertAfter (newChild, refChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">삽입할 노드입니다.</param>
        <param name="refChild">참조 노드입니다. <paramref name="newChild" />는 <paramref name="refChild" /> 뒤에 삽입됩니다.</param>
        <summary>지정된 노드를 지정된 참조 노드 바로 다음에 삽입합니다.</summary>
        <returns>삽입할 노드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `refChild` 됩니다 `null`, 삽입 `newChild` 자식 노드 목록 맨 앞에 있습니다. 모든 내용을 합니다 `newChild` 삽입 되 면 동일한 순서로 후 `refChild`합니다. 경우는 `newChild` 는 이미 트리에서 원래 위치에서 제거 하 고 대상 위치에 추가 합니다. 노드를 삽입 하는 방법에 대 한 자세한 내용은 참조 하세요. [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)합니다.  
  
 삽입 하는 노드가 다른 문서에서 생성 된 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려고 합니다. 현재 문서에 삽입한 다음 가져온된 노드를 사용할 수 있습니다.  
  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 XML 문서에 새 노드를 추가 합니다.  
  
 [!code-cpp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertAfter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertAfter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우  
  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
        <exception cref="T:System.ArgumentException">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
  
<paramref name="refChild" />가 이 노드의 자식이 아닌 경우  
  
이 노드가 읽기 전용인 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see langword="InsertAfter" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="InsertAfter" /> 메서드의 기본 클래스입니다.</para></block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/891e54f5-54f6-4bb4-b624-9d1b6a1f1216">XML 문서에 노드 삽입</related>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode InsertBefore(class System.Xml.XmlNode newChild, class System.Xml.XmlNode refChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InsertBefore (newChild As XmlNode, refChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ InsertBefore(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ refChild);" />
      <MemberSignature Language="F#" Value="abstract member InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.InsertBefore : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.InsertBefore (newChild, refChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="refChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">삽입할 노드입니다.</param>
        <param name="refChild">참조 노드입니다. <paramref name="newChild" />는 이 노드 앞에 삽입됩니다.</param>
        <summary>지정된 노드를 지정된 참조 노드 바로 앞에 삽입합니다.</summary>
        <returns>삽입할 노드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `refChild` 됩니다 `null`, 삽입 `newChild` 자식 노드 목록 끝에 있습니다. 모든 내용을 합니다 `newChild` 삽입 되 면 동일한 순서로 전에 `refChild`입니다. 경우는 `newChild` 는 이미 트리에서 원래 위치에서 제거 하 고 대상 위치에 추가 합니다. 노드를 삽입 하는 방법에 대 한 자세한 내용은 참조 하세요. [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)합니다.  
  
 삽입 하는 노드가 다른 문서에서 생성 된 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려고 합니다. 현재 문서에 삽입한 다음 가져온된 노드를 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 XML 문서에 새 노드를 추가 합니다.  
  
 [!code-cpp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.InsertBefore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.InsertBefore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식인 경우  
  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
        <exception cref="T:System.ArgumentException">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
  
<paramref name="refChild" />가 이 노드의 자식이 아닌 경우  
  
이 노드가 읽기 전용인 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see langword="InsertBefore" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="InsertBefore" /> 메서드의 기본 클래스입니다.</para></block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/891e54f5-54f6-4bb4-b624-9d1b6a1f1216">XML 문서에 노드 삽입</related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xml.XmlNode.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>노드가 읽기 전용인지를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" /> 노드가 읽기 전용 이면 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 읽기 전용 노드는 해당 속성, 특성 또는 자식 노드를 변경할 수 없습니다. 읽기 전용 노드 트리에서 제거 하 고 다른 위치에 삽입할 수 있습니다. 예를 들어, 엔터티 노드는 항상 읽기 전용입니다.  
  
 이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 자식 요소를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^] { System::Xml::XmlElement ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Xml.XmlElement" Usage="System.Xml.XmlNode.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">검색할 요소의 정규화된 이름입니다.</param>
        <summary>지정된 <see cref="P:System.Xml.XmlNode.Name" />을 가진 첫 번째 자식 요소를 가져옵니다.</summary>
        <value>지정된 이름과 일치하는 첫 번째 <see cref="T:System.Xml.XmlElement" />입니다. 일치되는 항목이 없으면 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 title 요소를 표시합니다.  
  
 [!code-cpp[Classic WebData XmlNode.this Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.this Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement this[string localname, string ns] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(localname As String, ns As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlElement ^ default[System::String ^, System::String ^] { System::Xml::XmlElement ^ get(System::String ^ localname, System::String ^ ns); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : System.Xml.XmlElement" Usage="System.Xml.XmlNode.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname">요소의 로컬 이름입니다.</param>
        <param name="ns">요소의 네임스페이스 URI입니다.</param>
        <summary>지정된 <see cref="P:System.Xml.XmlNode.LocalName" />과 <see cref="P:System.Xml.XmlNode.NamespaceURI" />를 갖고 있는 첫 번째 자식 요소를 가져옵니다.</summary>
        <value>일치하는 <paramref name="localname" />과 <paramref name="ns" />를 갖고 있는 첫 번째 <see cref="T:System.Xml.XmlElement" />입니다. . 일치되는 항목이 없으면 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode LastChild" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LastChild As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ LastChild { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastChild : System.Xml.XmlNode" Usage="System.Xml.XmlNode.LastChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>노드의 마지막 자식을 가져옵니다.</summary>
        <value>노드의 마지막 자식입니다. 이러한 노드가 없으면, <see langword="null" />이 반환됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 가격 요소를 표시합니다.  
  
 [!code-cpp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.LastChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.LastChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlNode.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 재정의되면 노드의 로컬 이름을 가져옵니다.</summary>
        <value>접두사를 제거한 노드의 이름입니다. 예를 들어 <see langword="LocalName" /> 은 요소 book &lt;예&gt;합니다.  
  
반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 달라집니다. 
 <list type="table"><listheader><term> 형식 
 </term><description> name 
 </description></listheader><item><term> 특성 
 </term><description> 특성의 로컬 이름입니다.  
  
 </description></item><item><term> CDATA 
 </term><description> #cdata-section 
 </description></item><item><term> 주석 
 </term><description> #comment 
 </description></item><item><term> 문서 
 </term><description> #document 
 </description></item><item><term> DocumentFragment 
 </term><description> #document-fragment 
 </description></item><item><term> DocumentType 
 </term><description> 문서 형식 이름입니다.  
  
 </description></item><item><term> 요소 
 </term><description> 요소의 로컬 이름입니다.  
  
 </description></item><item><term> 엔터티 
 </term><description> 엔터티의 이름입니다.  
  
 </description></item><item><term> EntityReference 
 </term><description> 참조된 엔터티의 이름입니다.  
  
 </description></item><item><term> Notation 
 </term><description> 표기법 이름입니다.  
  
 </description></item><item><term> ProcessingInstruction 
 </term><description> 처리 명령의 대상입니다.  
  
 </description></item><item><term> 텍스트 
 </term><description> #text 
 </description></item><item><term> Whitespace 
 </term><description> #whitespace 
 </description></item><item><term> SignificantWhitespace 
 </term><description> #significant-whitespace 
 </description></item><item><term> XmlDeclaration 
 </term><description> #xml-declaration 
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 LocalName이 같은 노드에 접두사에 없는 경우 <xref:System.Xml.XmlNode.Name%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlNode.Prefix" />
        <altmember cref="P:System.Xml.XmlNode.Name" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 재정의되면 노드의 정규화된 이름을 가져옵니다.</summary>
        <value>노드의 정규화된 이름입니다. 반환되는 이름은 다음과 같이 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 달라집니다. 
 <list type="table"><listheader><term> 형식 
 </term><description> name 
 </description></listheader><item><term> 특성 
 </term><description> 특성의 정규화된 이름입니다.  
  
 </description></item><item><term> CDATA 
 </term><description> #cdata-section 
 </description></item><item><term> 주석 
 </term><description> #comment 
 </description></item><item><term> 문서 
 </term><description> #document 
 </description></item><item><term> DocumentFragment 
 </term><description> #document-fragment 
 </description></item><item><term> DocumentType 
 </term><description> 문서 형식 이름입니다.  
  
 </description></item><item><term> 요소 
 </term><description> 요소의 정규화된 이름입니다.  
  
 </description></item><item><term> 엔터티 
 </term><description> 엔터티의 이름입니다.  
  
 </description></item><item><term> EntityReference 
 </term><description> 참조된 엔터티의 이름입니다.  
  
 </description></item><item><term> Notation 
 </term><description> 표기법 이름입니다.  
  
 </description></item><item><term> ProcessingInstruction 
 </term><description> 처리 명령의 대상입니다.  
  
 </description></item><item><term> 텍스트 
 </term><description> #text 
 </description></item><item><term> Whitespace 
 </term><description> #whitespace 
 </description></item><item><term> SignificantWhitespace 
 </term><description> #significant-whitespace 
 </description></item><item><term> XmlDeclaration 
 </term><description> #xml-declaration 
 </description></item></list></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public virtual string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlNode.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드의 네임스페이스 URI를 가져옵니다.</summary>
        <value>이 노드의 네임스페이스 URI입니다. 네임스페이스 URI가 없으면, 이 속성은 String.Empty를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 URI를 만들 때 지정한 네임 스페이스입니다. 예를 들어 `NamespaceURI` 요소에 대 한 urn: 샘플은 \<예 xmlns:bk = "urn: 예제" >  
  
 특성에 연결 된 요소에서 해당 네임 스페이스를 상속 하지 않습니다. 특성 네임 스페이스를 명시적으로 지정 하지 않으면 하는 경우이 네임 스페이스가 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NextSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ NextSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : System.Xml.XmlNode" Usage="System.Xml.XmlNode.NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드 바로 다음에 오는 노드를 가져옵니다.</summary>
        <value>다음 <see langword="XmlNode" />입니다. 다음 노드가 없으면 <see langword="null" />이 반환됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 XML 문서에 있는 모든 책을 표시합니다.  
  
 [!code-cpp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.NextSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.NextSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlNode.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 재정의되면 현재 노드의 형식을 가져옵니다.</summary>
        <value><see cref="T:System.Xml.XmlNodeType" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 반환 하지 않습니다는 `XmlNodeType` EndElement, EndEntity 또는 None입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public virtual void Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Normalize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Normalize();" />
      <MemberSignature Language="F#" Value="abstract member Normalize : unit -&gt; unit&#xA;override this.Normalize : unit -&gt; unit" Usage="xmlNode.Normalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 XmlNode 아래 전체 수준의 하위 트리에 있는 모든 XmlText 노드를 태그(즉, 태그, 주석, 처리 명령, CDATA 섹션 및 엔터티 참조)만이 XmlText 노드를 구분하는, 인접한 XmlText 노드가 없는 "정상적인" 폼에 넣습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문서를 DOM 보기는 동일 저장 및 다시 로드 하는 경우에 따라 되도록이 메서드를 사용할 수 있습니다 및 특정 문서 트리 구조에 종속 된 작업 (예: XPointer 조회)에 사용 하려는 경우에 유용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public virtual string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OuterXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OuterXml { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OuterXml : string" Usage="System.Xml.XmlNode.OuterXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드와 모든 자식 노드를 포함하는 태그를 가져옵니다.</summary>
        <value>이 노드와 모든 자식 노드를 포함하는 태그입니다.  
  
 <block subset="none" type="note"><para><see langword="OuterXml" />은 기본 특성을 반환하지 않습니다.  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 DOM(문서 개체 모델)에 대한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서 출력을 비교 합니다 <xref:System.Xml.XmlNode.InnerXml%2A> 및 `OuterXml` 속성입니다.  
  
 [!code-cpp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.OuterXml Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.OuterXml Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerDocument">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDocument OwnerDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument OwnerDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.OwnerDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OwnerDocument As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlDocument ^ OwnerDocument { System::Xml::XmlDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDocument : System.Xml.XmlDocument" Usage="System.Xml.XmlNode.OwnerDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />를 가져옵니다.</summary>
        <value>이 노드가 속한 <see cref="T:System.Xml.XmlDocument" />입니다.  
  
노드가 <see cref="T:System.Xml.XmlDocument" />(NodeType이 XmlNodeType.Document와 같음)일 경우 이 속성에서는 <see langword="null" />을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 노드가 노드를 추가 하는 경우 사용 합니다 <xref:System.Xml.XmlDocument> 반환한는 <xref:System.Xml.XmlNode.OwnerDocument%2A> 속성 노드를 만듭니다.  
  
   
  
## Examples  
 참조 <xref:System.Xml.XmlElement.OwnerDocument%2A> (XmlElement 클래스)에서이 속성을 사용 하는 예제입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ParentNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode ParentNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.ParentNode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParentNode As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ ParentNode { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNode : System.Xml.XmlNode" Usage="System.Xml.XmlNode.ParentNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>부모를 가질 수 있는 노드의 경우 이 노드의 부모를 가져옵니다.</summary>
        <value>현재 노드의 부모인 <see langword="XmlNode" />입니다. 노드를 만들고 트리에 추가하지 않은 경우나 트리에서 노드를 제거한 경우 부모는 <see langword="null" />입니다. 다른 모든 노드의 경우에는 노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다. 다음 표에서는 <see langword="ParentNode" /> 속성에 대해 가능한 반환 값을 설명합니다.  
  
 <list type="table"><listheader><term> 노드 형식 
 </term><description> ParentNode의 값을 반환합니다. 
 </description></listheader><item><term> Attribute, Document, DocumentFragment, Entity, Notation 
 </term><description> <see langword="null" />을 반환합니다. 이 노드에는 부모가 없습니다.  
  
 </description></item><item><term> CDATA 
 </term><description> CDATA 섹션이 포함된 요소나 엔터티 참조를 반환합니다.  
  
 </description></item><item><term> 주석 
 </term><description> 주석이 포함된 요소, 엔터티 참조, 문서 형식 또는 문서를 반환합니다.  
  
 </description></item><item><term> DocumentType 
 </term><description> Document 노드를 반환합니다.  
  
 </description></item><item><term> 요소 
 </term><description> 요소의 부모 노드를 반환합니다. 요소가 트리의 Root 노드일 경우 부모는 Document 노드입니다.  
  
 </description></item><item><term> EntityReference 
 </term><description> 엔터티 참조가 포함된 요소, 특성 또는 엔터티 참조를 반환합니다.  
  
 </description></item><item><term> ProcessingInstruction 
 </term><description> 처리 명령이 포함된 문서, 요소, 문서 형식 또는 엔터티 참조를 반환합니다.  
  
 </description></item><item><term> 텍스트 
 </term><description> Text 노드가 포함된 부모 요소, 특성 또는 엔터티 참조를 반환합니다.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 부모 및 자식 노드에 대 한 정보를 참조 하세요.를 [W3C DOM (코어) 수준 1 사양은](https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public virtual string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Xml.XmlNode.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드의 네임스페이스 접두사를 가져오거나 설정합니다.</summary>
        <value>이 노드의 네임스페이스 접두사입니다. 예를 들어 <see langword="Prefix" /> 요소에는 bk &lt;예&gt;합니다. 접두사가 없으면, 이 속성은 String.Empty를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 허용 되는 경우이 속성을 설정, 변경의 <xref:System.Xml.XmlNode.Name%2A> 요소 및 특성 노드의 정규화 된 이름을 포함 하는 속성입니다. (예: 텍스트, 주석, EntityReference, CDATA, ProcessingInstruction, 문서 및 DocumentFragment) 접두사를 가질 수 없는 노드 형식에서이 속성을 설정 해도 효과가 없습니다. 이 기본값을 사용 하는 것으로 알려져 있는 특성의 접두사를 변경, 기본값을 사용 하 여 새 특성을 만들지 않으며 원래 접두사가 표시 되므로 로컬 이름과 네임 스페이스 URI가 바뀌지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">이 노드가 읽기 전용인 경우</exception>
        <exception cref="T:System.Xml.XmlException">지정된 접두사에 잘못된 문자가 포함된 경우  
  
지정된 접두사의 형식이 잘못된 경우  
  
지정된 접두사가 “xml”이고 이 노드의 namespaceURI가 “http://www.w3.org/XML/1998/namespace”와 다른 경우  
  
이 노드가 특성이고, 지정된 접두사가 “xmlns”이며, 이 노드의 namespaceURI가 “http://www.w3.org/2000/xmlns/”와 다른 경우  
  
이 노드가 특성이고 이 노드의 qualifiedName이 "xmlns"인 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see langword="Prefix" /> 파생된 클래스에서이 속성을 설정할 수 없습니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode PrependChild(class System.Xml.XmlNode newChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrependChild (newChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ PrependChild(System::Xml::XmlNode ^ newChild);" />
      <MemberSignature Language="F#" Value="abstract member PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.PrependChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.PrependChild newChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">추가할 노드입니다. 지정된 위치로 이동하는, 추가할 노드의 모든 콘텐츠입니다.</param>
        <summary>지정된 노드를 이 노드의 자식 노드 목록 앞에 추가합니다.</summary>
        <returns>추가한 노드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `newChild` 는 이미 트리에서 원래 위치에서 제거 하 고 대상 위치에 추가 합니다. 노드를 삽입 하는 방법에 대 한 자세한 내용은 참조 하세요. [XML 문서에 노드 삽입](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)합니다.  
  
 삽입 하는 노드가 다른 문서에서 생성 된 경우 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려고 합니다. 현재 문서에 삽입한 다음 가져온된 노드를 사용할 수 있습니다.  
  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 XML 문서에 새 노드를 추가 합니다.  
  
 [!code-cpp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PrependChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PrependChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우  
  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
        <exception cref="T:System.ArgumentException">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
  
이 노드가 읽기 전용인 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see langword="PrependChild" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="PrependChild" /> 메서드의 기본 클래스입니다.</para></block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/891e54f5-54f6-4bb4-b624-9d1b6a1f1216">XML 문서에 노드 삽입</related>
      </Docs>
    </Member>
    <Member MemberName="PreviousSibling">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousSibling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousSibling" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousSibling As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousSibling { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousSibling : System.Xml.XmlNode" Usage="System.Xml.XmlNode.PreviousSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드 바로 앞에 있는 노드를 가져옵니다.</summary>
        <value>앞에 있는 <see langword="XmlNode" />입니다. 앞에 노드가 없으면 <see langword="null" />이 반환됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 XML 문서에 있는 모든 책을 표시합니다.  
  
 [!code-cpp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.PreviousSibling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.PreviousSibling Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousText">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode PreviousText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode PreviousText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.PreviousText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousText As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNode ^ PreviousText { System::Xml::XmlNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousText : System.Xml.XmlNode" Usage="System.Xml.XmlNode.PreviousText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 노드 바로 앞에 있는 텍스트 노드를 가져옵니다.</summary>
        <value><see cref="T:System.Xml.XmlNode" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 보다 빠른 성능을 합니다 <xref:System.Xml.XmlNode.PreviousSibling%2A> 속성이 있지만 사용할 수만 형식의 노드를 가져오려는 <xref:System.Xml.XmlNodeType.Text>합니다. 다른 유형의이 노드 앞에 오는 노드를 가져오려면는 <xref:System.Xml.XmlNode.PreviousSibling%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public virtual void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAll();" />
      <MemberSignature Language="F#" Value="abstract member RemoveAll : unit -&gt; unit&#xA;override this.RemoveAll : unit -&gt; unit" Usage="xmlNode.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 노드의 모든 자식 노드 및/또는 특성을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 특성을 제거 해야 기본 값, 기본값을 포함 하는 특성이 즉시 나타납니다 아는 경우 및 해당 하는 경우 해당 네임 스페이스 URI, 로컬 이름 및 접두사입니다.  
  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 루트 노드의 모든 자식 및 특성 노드를 제거합니다.  
  
 [!code-cpp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see langword="RemoveAll" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="RemoveAll" /> 메서드의 기본 클래스입니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode RemoveChild(class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveChild (oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ RemoveChild(System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="abstract member RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.RemoveChild : System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.RemoveChild oldChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="oldChild">제거할 노드입니다.</param>
        <summary>지정된 자식 노드를 제거합니다.</summary>
        <returns>제거한 노드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 XML 문서에서 노드를 제거합니다.  
  
 [!code-cpp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.RemoveChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.RemoveChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="oldChild" />가 이 노드의 자식이 아닌 경우 이 노드가 읽기 전용인 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see langword="RemoveChild" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="RemoveChild" /> 메서드의 기본 클래스입니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ReplaceChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ReplaceChild(class System.Xml.XmlNode newChild, class System.Xml.XmlNode oldChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReplaceChild (newChild As XmlNode, oldChild As XmlNode) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ReplaceChild(System::Xml::XmlNode ^ newChild, System::Xml::XmlNode ^ oldChild);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode&#xA;override this.ReplaceChild : System.Xml.XmlNode * System.Xml.XmlNode -&gt; System.Xml.XmlNode" Usage="xmlNode.ReplaceChild (newChild, oldChild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlNode" />
        <Parameter Name="oldChild" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="newChild">자식 목록에 삽입할 새 노드입니다.</param>
        <param name="oldChild">목록에서 대체할 노드입니다.</param>
        <summary><paramref name="oldChild" /> 자식 노드를 <paramref name="newChild" /> 노드로 대체합니다.</summary>
        <returns>대체한 노드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `newChild` 는 이미 트리에서 먼저 제거 됩니다.  
  
 경우는 `newChild` 생성 된 다른 문서에서 사용할 수 있습니다 <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=nameWithType> 현재 문서에 노드를 가져오려는 합니다. 가져온 후에 전달할 수는 `ReplaceChild` 메서드.  
  
   
  
## Examples  
 다음 예제에서는 XML 문서의 제목 요소를 바꿉니다.  
  
 [!code-cpp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.ReplaceChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.ReplaceChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 노드가 <paramref name="newChild" /> 노드 형식의 자식 노드를 허용하지 않는 형식을 가지는 경우  
  
<paramref name="newChild" />가 이 노드의 상위 노드일 경우</exception>
        <exception cref="T:System.ArgumentException">이 노드를 만든 문서가 아닌 다른 문서에서 <paramref name="newChild" />를 만든 경우  
  
이 노드가 읽기 전용인 경우  
  
<paramref name="oldChild" />가 이 노드의 자식이 아닌 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see langword="ReplaceChild" /> 파생된 클래스에서 올바르게 발생할 이벤트를 위해 호출 해야 합니다는 <see langword="ReplaceChild" /> 메서드의 기본 클래스입니다.</para></block>
        <altmember cref="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlNode.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스키마 유효성 검사의 결과로 이 노드에 할당된 스키마 유효성 검사 이후 정보 집합을 가져옵니다.</summary>
        <value>이 노드의 스키마 유효성 검사 이후 정보 집합이 포함된 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlNode.SchemaInfo%2A> 이 노드의 유효성을 검사 하는 경우 속성을 설정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectNodes">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>XPath 식과 일치하는 노드의 목록을 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XPath 식에 네임스페이스를 포함할 수 있습니다. 네임스페이스는 `XmlNamespaceManager`를 사용하여 확인할 수 있습니다. XPath 식에 접두사가 포함 하는 경우 접두사와 네임 스페이스 URI 쌍을 추가 해야 합니다는 `XmlNamespaceManager`합니다.  
  
> [!NOTE]
>  XPath 식에 접두사가 포함 되어 있지 않으면, 네임 스페이스 URI는 빈 네임 스페이스 간주 됩니다. 접두사 및 네임 스페이스 URI 계속 추가 해야 XML 기본 네임 스페이스에 포함 된 경우에 `XmlNamespaceManager`고, 그렇지 않으면 노드를 선택할 가져올 수 없습니다.  
  
 자세한 내용은 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다. 코드 예를 들어 이전 섹션에서 오버 로드 목록에서 오버 로드를 선택 합니다.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/magazine/cc188773.aspx">XPath 선택 및 사용자 지정 함수</related>
        <related type="ExternalDocumentation" href="https://www.w3.org/TR/1999/REC-xpath-19991116/">W3C XPath 1.0 권장 사항</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="member this.SelectNodes : string -&gt; System.Xml.XmlNodeList" Usage="xmlNode.SelectNodes xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="xpath">XPath 식입니다.</param>
        <summary>XPath 식과 일치하는 노드의 목록을 선택합니다.</summary>
        <returns>Xpath 쿼리와 일치하는 노드의 컬렉션이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XPath 식에서 네임 스페이스 확인에 필요한 경우 사용 해야 합니다 `SelectNodes` 오버 로드를 <xref:System.Xml.XmlNamespaceManager> 인수로 합니다. `XmlNamespaceManager` 네임 스페이스를 확인 하는 데 사용 됩니다.  
  
> [!NOTE]
>  XPath 식에 접두사가 포함 되어 있지 않으면, 네임 스페이스 URI는 빈 네임 스페이스 간주 됩니다. XML 기본 네임 스페이스를 포함 하는 경우 반드시 사용 해야는 `XmlNamespaceManager` 접두사와 네임 스페이스 URI 추가 하 고 그렇지 않으면 가져오지 것입니다 모든 노드를 선택 합니다. 자세한 내용은 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.  
  
> [!NOTE]
>  XPath 식을 작성할 때 일반적인 문제는 식에서 작은따옴표 (') 또는 큰따옴표 (")를 포함 하는 방법입니다. 작은따옴표를 포함 하는 값을 검색 하는 경우 문자열을 큰따옴표로 묶어야 합니다. 큰따옴표를 포함 하는 값을 검색 해야 문자열 작은따옴표로 묶어야 합니다.  
  
 예를 들어, 다음 xml을 사용 합니다.  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 다음 Visual Basic 코드는 작은따옴표를 포함 하는 요소를 선택 합니다.  
  
```csharp  
nodeList = root.SelectNodes("//book[contains(title,""'Emma'"")]")  
```  
  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
 <xref:System.Xml.XmlNodeList> 기본 문서 그대로 유지 하는 동안이 메서드에서 반환 된 개체는 잘못 됩니다. 예기치 않은 결과가 반환 될 수 있습니다 기본 문서 변경 되 면 (예외가 throw 됩니다).  
  
   
  
## Examples  
 다음 예제에서는 위치는 저자의 성을 Austen, 이며 그런 다음 이러한 책의 가격을 변경 하는 모든 책을 선택 합니다.  
  
 [!code-cpp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectNodes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/VB/source.vb#1)]  
  
 이 예제에서는 다음 XML을 사용합니다.  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 식에 접두사가 포함되어 있는 경우 [XPath 예제](https://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)를 참조하세요.</exception>
        <altmember cref="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/magazine/cc188773.aspx">XPath 선택 및 사용자 지정 함수</related>
        <related type="ExternalDocumentation" href="https://www.w3.org/TR/1999/REC-xpath-19991116/">W3C XPath 1.0 권장 사항</related>
      </Docs>
    </Member>
    <Member MemberName="SelectNodes">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNodeList SelectNodes (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNodeList SelectNodes(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNodes (xpath As String, nsmgr As XmlNamespaceManager) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNodeList ^ SelectNodes(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="member this.SelectNodes : string * System.Xml.XmlNamespaceManager -&gt; System.Xml.XmlNodeList" Usage="xmlNode.SelectNodes (xpath, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="xpath">XPath 식입니다. [XPath 예제](https://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)를 참조하세요.</param>
        <param name="nsmgr">XPath 식의 접두사에 대한 네임스페이스를 확인하기 위해 사용할 <see cref="T:System.Xml.XmlNamespaceManager" />입니다.</param>
        <summary>XPath 식과 일치하는 노드의 목록을 선택합니다. XPath 식에 있는 접두사는 제공된 <see cref="T:System.Xml.XmlNamespaceManager" />를 사용해 확인합니다.</summary>
        <returns>Xpath 쿼리와 일치하는 노드의 컬렉션이 포함된 <see cref="T:System.Xml.XmlNodeList" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XPath 식에 네임스페이스를 포함할 수 있습니다. 네임스페이스는 `XmlNamespaceManager`를 사용하여 확인할 수 있습니다. XPath 식에 접두사가 포함 하는 경우 접두사와 네임 스페이스 URI 쌍을 추가 해야 합니다는 `XmlNamespaceManager`합니다.  
  
> [!NOTE]
>  XPath 식에 접두사가 포함 되어 있지 않으면, 네임 스페이스 URI는 빈 네임 스페이스 간주 됩니다. 접두사 및 네임 스페이스 URI 계속 추가 해야 XML 기본 네임 스페이스에 포함 된 경우에 `XmlNamespaceManager`고, 그렇지 않으면 노드를 선택할 가져올 수 없습니다. 자세한 내용은 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.  
  
 예를 들어, 다음 XML을 설치한 경우:  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 다음 C# 코드는 모든 책 노드를 선택합니다.  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNodeList nodelist = doc.SelectNodes("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  XPath 식을 작성할 때 일반적인 문제는 식에서 작은따옴표 (') 또는 큰따옴표 (")를 포함 하는 방법입니다. 작은따옴표를 포함 하는 값을 검색 하는 경우 문자열을 큰따옴표로 묶어야 합니다. 큰따옴표를 포함 하는 값을 검색 해야 문자열 작은따옴표로 묶어야 합니다.  
  
 예를 들어, 다음 xml을 사용 합니다.  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 다음 Visual Basic 코드는 작은따옴표를 포함 하는 요소를 선택 합니다.  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
nodeList = root.SelectNodes("//ab:book[contains(ab:title,""'Emma'"")]", nsmgr)  
```  
  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
 <xref:System.Xml.XmlNodeList> 기본 문서 그대로 유지 하는 동안이 메서드에서 반환 된 개체는 잘못 됩니다. 예기치 않은 결과가 반환 될 수 있습니다 기본 문서 변경 되 면 (예외가 throw 됩니다).  
  
   
  
## Examples  
 다음 예제에서는 각 ISBN 특성 값이 표시 됩니다. 사용 하 여이 예제는 <xref:System.Xml.XmlElement> 에서 상속 되는 개체는 <xref:System.Xml.XmlNode> 클래스입니다.  
  
 [!code-cpp[XmlNode.SelectNodes1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectNodes1/CPP/selectnodes1.cpp#1)]
 [!code-csharp[XmlNode.SelectNodes1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectNodes1/CS/selectnodes1.cs#1)]
 [!code-vb[XmlNode.SelectNodes1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectNodes1/VB/selectnodes1.vb#1)]  
  
 이 예제에서는 파일을 사용 하 여 `booksort.xml`입력으로 합니다.  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 식에 <see langword="XmlNamespaceManager" />에서 정의되지 않은 접두사가 포함되어 있는 경우</exception>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/magazine/cc188773.aspx">XPath 선택 및 사용자 지정 함수</related>
        <related type="ExternalDocumentation" href="https://www.w3.org/TR/1999/REC-xpath-19991116/">W3C XPath 1.0 권장 사항</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectSingleNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>XPath 식과 일치하는 첫 번째 <see langword="XmlNode" />를 선택해야 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XPath 식에 네임스페이스를 포함할 수 있습니다. 네임스페이스는 `XmlNamespaceManager`를 사용하여 확인할 수 있습니다. XPath 식에 접두사가 포함 하는 경우 접두사와 네임 스페이스 URI 쌍을 추가 해야 합니다는 `XmlNamespaceManager`합니다.  
  
> [!NOTE]
>  XPath 식에 접두사가 포함 되어 있지 않으면, 네임 스페이스 URI는 빈 네임 스페이스 간주 됩니다. 접두사 및 네임 스페이스 URI 계속 추가 해야 XML 기본 네임 스페이스에 포함 된 경우에 `XmlNamespaceManager`고, 그렇지 않으면 노드를 선택할 가져올 수 없습니다. 자세한 내용은 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 일치 하는 작성자 이름 가진 첫 번째 책을 반환합니다. `XmlNamespaceManager`는 XPath 식에서 기본 네임스페이스를 확인합니다.  
  
 [!code-cpp[XmlNode.SelectSingleNode2#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CPP/XmlNode.SelectSingleNode2.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode2/CS/selectsingnode2.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode2/VB/selectsingnode2.vb#1)]  
  
 이 예제에서는 파일을 사용 하 여 `newbooks.xml`입력으로 합니다.  
  
 [!code-xml[XmlNode.SelectSingleNode2#2](~/samples/snippets/xml/VS_Snippets_Data/XmlNode.SelectSingleNode2/XML/newbooks.xml#2)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/magazine/cc188773.aspx">XPath 선택 및 사용자 지정 함수</related>
        <related type="ExternalDocumentation" href="https://www.w3.org/TR/1999/REC-xpath-19991116/">W3C XPath 1.0 권장 사항</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath);" />
      <MemberSignature Language="F#" Value="member this.SelectSingleNode : string -&gt; System.Xml.XmlNode" Usage="xmlNode.SelectSingleNode xpath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="xpath">XPath 식입니다. [XPath 예제](https://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)를 참조하세요.</param>
        <summary>XPath 식과 일치하는 첫 번째 <see langword="XmlNode" />를 선택해야 합니다.</summary>
        <returns>XPath 쿼리와 일치하는 첫 번째 <see langword="XmlNode" />이거나, 일치하는 노드가 없는 경우에는 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XPath 식에서 네임 스페이스 확인에 필요한 경우 사용 해야 합니다 `SelectSingleNode` 오버 로드를 <xref:System.Xml.XmlNamespaceManager> 인수로 합니다. `XmlNamespaceManager` 네임 스페이스를 확인 하는 데 사용 됩니다.  
  
> [!NOTE]
>  XPath 식에 접두사가 포함 되어 있지 않으면, 네임 스페이스 URI는 빈 네임 스페이스 간주 됩니다. XML에 기본 네임 스페이스를 포함 하는 경우 반드시 사용 해야는 `XmlNamespaceManager` 접두사와 네임 스페이스 URI 추가 하 고 그렇지 않으면 가져오지 것입니다 선택한 노드. 자세한 내용은 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.  
  
> [!NOTE]
>  XPath 식을 작성할 때 일반적인 문제는 식에서 작은따옴표 (') 또는 큰따옴표 (")를 포함 하는 방법입니다. 작은따옴표를 포함 하는 값을 검색 하는 경우 문자열을 큰따옴표로 묶어야 합니다. 큰따옴표를 포함 하는 값을 검색 해야 문자열 작은따옴표로 묶어야 합니다.  
  
 예를 들어, 다음 xml을 사용 합니다.  
  
```xml  
<bookstore>  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 다음 Visual Basic 코드는 작은따옴표를 포함 하는 요소를 선택 합니다.  
  
```  
book = root.SelectSingleNode("descendant::book[title=""'Emma'""]")  
```  
  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 Jane Austen 책의 가격을 변경합니다.  
  
 [!code-cpp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.SelectSingleNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/VB/source.vb#1)]  
  
 이 예제에서는 파일을 사용 하 여 `booksort.xml`입력으로 합니다.  
  
 [!code-xml[Classic WebData XmlNode.SelectSingleNode Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectSingleNode Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 식에 접두사가 포함되어 있는 경우</exception>
        <altmember cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/magazine/cc188773.aspx">XPath 선택 및 사용자 지정 함수</related>
        <related type="ExternalDocumentation" href="https://www.w3.org/TR/1999/REC-xpath-19991116/">W3C XPath 1.0 권장 사항</related>
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SelectSingleNode (string xpath, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlNode SelectSingleNode(string xpath, class System.Xml.XmlNamespaceManager nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectSingleNode (xpath As String, nsmgr As XmlNamespaceManager) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlNode ^ SelectSingleNode(System::String ^ xpath, System::Xml::XmlNamespaceManager ^ nsmgr);" />
      <MemberSignature Language="F#" Value="member this.SelectSingleNode : string * System.Xml.XmlNamespaceManager -&gt; System.Xml.XmlNode" Usage="xmlNode.SelectSingleNode (xpath, nsmgr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="xpath">XPath 식입니다. [XPath 예제](https://msdn.microsoft.com/library/1431789e-c545-4765-8c09-3057e07d3041)를 참조하세요.</param>
        <param name="nsmgr">XPath 식의 접두사에 대한 네임스페이스를 확인하기 위해 사용할 <see cref="T:System.Xml.XmlNamespaceManager" />입니다.</param>
        <summary>XPath 식과 일치하는 첫 번째 <see langword="XmlNode" />를 선택해야 합니다. XPath 식에 있는 접두사는 제공된 <see cref="T:System.Xml.XmlNamespaceManager" />를 사용해 확인합니다.</summary>
        <returns>XPath 쿼리와 일치하는 첫 번째 <see langword="XmlNode" />이거나, 일치하는 노드가 없는 경우에는 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XPath 식에 네임스페이스를 포함할 수 있습니다. 네임스페이스는 `XmlNamespaceManager`를 사용하여 확인할 수 있습니다. XPath 식에 접두사가 포함 하는 경우 접두사와 네임 스페이스 URI 쌍을 추가 해야 합니다는 `XmlNamespaceManager`합니다.  
  
> [!NOTE]
>  XPath 식에 접두사가 포함 되어 있지 않으면, 네임 스페이스 URI는 빈 네임 스페이스 간주 됩니다. 접두사 및 네임 스페이스 URI 계속 추가 해야 XML 기본 네임 스페이스에 포함 된 경우에 `XmlNamespaceManager`그렇지 않은 경우 선택한 노드 가져올 수 없습니다. 자세한 내용은 [XPath 탐색을 사용 하 여 노드 선택](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)합니다.  
  
 예를 들어, 다음 XML을 설치한 경우:  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
 <book>  
   <title>Pride And Prejudice</title>  
 </book>  
</bookstore>  
```  
  
 다음 C# 코드는 첫 번째 book 노드를 선택합니다.  
  
```csharp  
XmlNamespaceManager nsmgr = new XmlNamespaceManager(doc.NameTable);  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");  
XmlNode book = doc.SelectSingleNode("//ab:book", nsmgr);  
```  
  
> [!NOTE]
>  XPath 식을 작성할 때 일반적인 문제는 식에서 작은따옴표 (') 또는 큰따옴표 (")를 포함 하는 방법입니다. 작은따옴표를 포함 하는 값을 검색 하는 경우 문자열을 큰따옴표로 묶어야 합니다. 큰따옴표를 포함 하는 값을 검색 해야 문자열 작은따옴표로 묶어야 합니다.  
  
 예를 들어, 다음 xml을 사용 합니다.  
  
```xml  
<bookstore xmlns="http://www.lucernepublishing.com">  
  <book>  
    <title>&apos;Emma&apos;</title>  
  </book>  
</bookstore>  
```  
  
 다음 Visual Basic 코드는 작은따옴표를 포함 하는 요소를 선택 합니다.  
  
```vb  
Dim nsmgr As XmlNamespaceManager = New XmlNamespaceManager(doc.NameTable)  
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com")  
book = root.SelectSingleNode("descendant::ab:book[ab:title=""'Emma'""]", nsmgr)  
```  
  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다.  
  
   
  
## Examples  
 다음 예제에서는 ISBN 값이 일치 하는 책을 선택합니다.  
  
 [!code-cpp[XmlNode.SelectSingleNode1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CPP/selectsingnode.cpp#1)]
 [!code-csharp[XmlNode.SelectSingleNode1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlNode.SelectSingleNode1/CS/selectsingnode.cs#1)]
 [!code-vb[XmlNode.SelectSingleNode1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlNode.SelectSingleNode1/VB/selectsingnode.vb#1)]  
  
 이 예제에서는 파일을 사용 하 여 `booksort.xml`입력으로 합니다.  
  
 [!code-xml[Classic WebData XmlNode.SelectNodes Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNode.SelectNodes Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XPath.XPathException">XPath 식에 <see langword="XmlNamespaceManager" />에서 정의되지 않은 접두사가 포함되어 있는 경우</exception>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/magazine/cc188773.aspx">XPath 선택 및 사용자 지정 함수</related>
        <related type="ExternalDocumentation" href="https://www.w3.org/TR/1999/REC-xpath-19991116/">W3C XPath 1.0 권장 사항</related>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (string feature, string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(string feature, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.Supports(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (feature As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::String ^ feature, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member Supports : string * string -&gt; bool&#xA;override this.Supports : string * string -&gt; bool" Usage="xmlNode.Supports (feature, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="feature">테스트할 기능의 패키지 이름입니다. 대/소문자를 구분하지 않습니다.</param>
        <param name="version">테스트할 패키지 이름의 버전 번호입니다. 버전을 지정하지 않을 경우(null), 모든 버전의 기능을 지원하면 메서드에서 true를 반환합니다.</param>
        <summary>DOM 구현에서 특정 기능을 구현하는지 테스트합니다.</summary>
        <returns>지정된 버전에 기능이 구현되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 다음 표에서는 <see langword="true" />를 반환하는 조합을 설명합니다.  
  
 <list type="table"><listheader><term> 기능 
 </term><description> 버전 
 </description></listheader><item><term> XML 
 </term><description> 1.0 
 </description></item><item><term> XML 
 </term><description> 2.0 
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Xml.XmlNode.GetEnumerator" />를 참조하십시오.</summary>
        <returns>컬렉션에 대한 열거자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Xml.XmlNode> 인스턴스가 <xref:System.Collections.IEnumerable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Xml.XmlNode.Clone" />를 참조하세요.</summary>
        <returns>메서드를 호출한 노드의 복사본입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Xml.XmlNode> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.XmlNode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>노드의 값을 가져오거나 설정합니다.</summary>
        <value>노드의 <see cref="P:System.Xml.XmlNode.NodeType" />에 따라 반환되는 값이 달라집니다. 
 <list type="table"><listheader><term> 형식 
 </term><description> 값 
 </description></listheader><item><term> 특성 
 </term><description> 특성 값  
  
 </description></item><item><term> CDATASection 
 </term><description> CDATA 섹션의 콘텐츠입니다.  
  
 </description></item><item><term> 주석 
 </term><description> 주석의 내용입니다.  
  
 </description></item><item><term> 문서 
 </term><description><see langword="null" />.  
  
 </description></item><item><term> DocumentFragment 
 </term><description><see langword="null" />.  
  
 </description></item><item><term> DocumentType 
 </term><description><see langword="null" />.  
  
 </description></item><item><term> 요소 
 </term><description><see langword="null" />. <see cref="P:System.Xml.XmlElement.InnerText" /> 또는 <see cref="P:System.Xml.XmlElement.InnerXml" /> 속성을 사용하여 Element 노드의 값에 액세스할 수 있습니다.  
  
 </description></item><item><term> 엔터티 
 </term><description><see langword="null" />.  
  
 </description></item><item><term> EntityReference 
 </term><description><see langword="null" />.  
  
 </description></item><item><term> Notation 
 </term><description><see langword="null" />.  
  
 </description></item><item><term> ProcessingInstruction 
 </term><description> 대상을 제외한 전체 콘텐츠입니다.  
  
 </description></item><item><term> 텍스트 
 </term><description> 텍스트 노드의 내용입니다.  
  
 </description></item><item><term> SignificantWhitespace 
 </term><description> 공백 문자입니다. 공백은 하나 이상의 스페이스 문자, 캐리지 리턴, 줄 바꿈 또는 탭 등으로 구성될 수 있습니다.  
  
 </description></item><item><term> Whitespace 
 </term><description> 공백 문자입니다. 공백은 하나 이상의 스페이스 문자, 캐리지 리턴, 줄 바꿈 또는 탭 등으로 구성될 수 있습니다.  
  
 </description></item><item><term> XmlDeclaration 
 </term><description> 선언의 콘텐츠 (사이의 모든 것 이므로 &lt;? xml 및?&gt;).  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 XML 문서 및 집합에 새 특성을 추가 합니다 <xref:System.Xml.XmlNode.Value%2A> 새 특성의 속성입니다.  
  
 [!code-cpp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.GetNamespaceOfPrefix Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.GetNamespaceOfPrefix Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">읽기 전용인 노드의 값을 설정하는 경우</exception>
        <exception cref="T:System.InvalidOperationException">값이 없어야 하는 노드의 값을 설정하는 경우(예: Element 노드)</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public abstract void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteContentTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteContentTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member WriteContentTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlNode.WriteContentTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">저장할 대상 <see langword="XmlWriter" />입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 노드의 모든 자식 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다. 기능적으로 <xref:System.Xml.XmlNode.InnerXml%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 루트 노드의 내용을 콘솔에 게 표시 합니다.  
  
 [!code-cpp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteContentTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteContentTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public abstract void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteTo (w As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteTo(System::Xml::XmlWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xmlNode.WriteTo w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="w">저장할 대상 <see langword="XmlWriter" />입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 현재 노드를 지정된 <see cref="T:System.Xml.XmlWriter" />에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 문서 개체 모델 (DOM)에 대 한 Microsoft 확장입니다. 기능적으로 <xref:System.Xml.XmlNode.OuterXml%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 콘솔에 루트 노드를 표시합니다.  
  
 [!code-cpp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNode.WriteTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNode.WriteTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>