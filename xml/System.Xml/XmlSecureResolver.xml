<Type Name="XmlSecureResolver" FullName="System.Xml.XmlSecureResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4db3035d0fb8cea4ef7ebfd712aaa12fd26f586f" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58694665" /></Metadata><TypeSignature Language="C#" Value="public class XmlSecureResolver : System.Xml.XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSecureResolver extends System.Xml.XmlResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlSecureResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSecureResolver&#xA;Inherits XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSecureResolver : System::Xml::XmlResolver" />
  <TypeSignature Language="F#" Value="type XmlSecureResolver = class&#xA;    inherit XmlResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Xml.XmlResolver" /> 개체를 래핑하고 내부 <see cref="T:System.Xml.XmlResolver" />에서 액세스 가능한 리소스를 제한하여 <see cref="T:System.Xml.XmlResolver" />의 다른 구현을 보호해 줍니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlUrlResolver> 클래스는 <xref:System.Xml> 네임스페이스의 모든 클래스에 대한 기본 해결 프로그램입니다. XML 문서를 로드 하 고 엔터티, Dtd 또는 스키마와 같은 외부 리소스를 확인 하 고 가져오기 또는 include 지시문에 사용 됩니다.  
  
 지정 하 여이 기본값을 재정의할 수 있습니다는 <xref:System.Xml.XmlResolver> 사용할 개체입니다. 예를 들어, 리소스를 제한 하려는 경우는 내부 <xref:System.Xml.XmlResolver> 액세스할 수 있습니다, 사용할 수는 <xref:System.Xml.XmlSecureResolver> 개체입니다.  
  
 <xref:System.Xml.XmlSecureResolver> 구체적인 구현을 주위를 래핑하 <xref:System.Xml.XmlResolver> 하 고 리소스를 제한 하는 기본 <xref:System.Xml.XmlResolver> 에 액세스할 수 합니다. 예를 들어 <xref:System.Xml.XmlSecureResolver> 금지는 포함 된 리소스 URI (Uniform Identifier) 참조에서 발생 하는 도메인 간 리디렉션 수 있습니다.  
  
 생성 하는 경우는 <xref:System.Xml.XmlSecureResolver> 개체를 제공 하는 유효한 <xref:System.Xml.XmlResolver> URL 증명 정보 개체 또는 권한 집합을 인스턴스에 사용 되는 함께 <xref:System.Xml.XmlSecureResolver> 보안 결정을 합니다. 중 하나를 <xref:System.Security.PermissionSet?displayProperty=nameWithType> 생성 됩니다 또는 기존을 사용 및 <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=nameWithType> 기본 보호 하기 위해 호출 된 <xref:System.Xml.XmlResolver>합니다.  
  
> [!IMPORTANT]
>  <xref:System.Xml.XmlSecureResolver> 개체에는 사용자 자격 증명과 같은 중요한 정보가 포함될 수 있습니다. 캐시할 때는 주의 해야 <xref:System.Xml.XmlSecureResolver> 개체를 전달 하지 않아야 합니다 <xref:System.Xml.XmlSecureResolver> 신뢰할 수 없는 구성 요소에는 개체입니다.  
  
> [!IMPORTANT]
>  및 Microsoft SQL Server 2005 내에서 통합 된 CLR에서 실행 되는 코드는.NET Framework CLR (공용 언어 런타임)에서 실행 되는 코드에 대 한 보안 인프라에서 차이가 많습니다. 이 SQL Server에서 사용 되는 경우.NET Framework CLR 다르게 작동에 대 한 개발 된 코드 CLR을 통합 하는 위치 하는 경우 발생할 수 있습니다. 이러한 차이점에 영향을 줍니다 합니다 <xref:System.Xml.XmlSecureResolver> 증거는 URL을 기반으로 하는 경우 클래스 (즉, 사용 하는 경우는 <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29> 메서드 또는 <xref:System.Xml.XmlSecureResolver.%23ctor%2A> 생성자). 정책 확인 메커니즘의 SQL Server CLR 통합을 사용 하지 않는 합니다 <xref:System.Security.Policy.Url> 또는 <xref:System.Security.Policy.Zone> 정보입니다. 대신 어셈블리 로드 되 면 서버를 추가 하는 GUID를 기반으로 하는 권한을 부여 합니다. 사용 하는 경우는 <xref:System.Xml.XmlSecureResolver> 에서 SQL Server CLR 통합, 지정 된 사용 하 여 직접 필요한 모든 증명 정보를 제공 <xref:System.Security.PermissionSet>합니다.  
  
## <a name="to-use-a-secure-resolver"></a>보안 해결 프로그램을 사용 하려면  
  
1.  올바른 권한 집합으로 <xref:System.Xml.XmlSecureResolver>를 만듭니다.  
  
2.  <xref:System.Xml.XmlReaderSettings> 개체를 사용하는 <xref:System.Xml.XmlSecureResolver> 개체를 만듭니다.  
  
     [!code-csharp[XmlSecureResolver_Samples#5a](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#5a)]
     [!code-vb[XmlSecureResolver_Samples#5a](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#5a)]  
  
3.  전달 합니다 <xref:System.Xml.XmlReaderSettings> 개체를 <xref:System.Xml.XmlReader.Create%2A> 메서드를 작성할 때는 <xref:System.Xml.XmlReader> 개체.  
  
     [!code-csharp[XmlSecureResolver_Samples#5b](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#5b)]
     [!code-vb[XmlSecureResolver_Samples#5b](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#5b)]  
  
## <a name="to-restrict-access-by-using-a-url"></a>URL을 사용 하 여 액세스를 제한 하려면  
 사용 된 <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> 만드는 생성자입니다는 <xref:System.Xml.XmlSecureResolver> 로컬 인트라넷 사이트에만 액세스할 수 있는 개체입니다.  
  
 [!code-csharp[XmlSecureResolver_Samples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#3)]
 [!code-vb[XmlSecureResolver_Samples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#3)]  
  
## <a name="to-restrict-access-by-using-a-permission-set"></a>권한 집합을 사용 하 여 액세스를 제한 하려면  
  
1.  <xref:System.Net.WebPermission> 개체를 만듭니다.  
  
     [!code-csharp[XmlSecureResolver_Samples#4a](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4a)]
     [!code-vb[XmlSecureResolver_Samples#4a](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4a)]  
  
2.  에 대 한 액세스를 허용 하려는 Url을 지정 합니다.  
  
     [!code-csharp[XmlSecureResolver_Samples#4b](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4b)]
     [!code-vb[XmlSecureResolver_Samples#4b](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4b)]  
  
3.  <xref:System.Security.PermissionSet> 개체에 웹 권한을 추가합니다.  
  
     [!code-csharp[XmlSecureResolver_Samples#4c](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4c)]
     [!code-vb[XmlSecureResolver_Samples#4c](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4c)]  
  
4.  사용 된 <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> 만드는 생성자입니다는 <xref:System.Xml.XmlSecureResolver> 권한 집합을 사용 하 여 개체입니다.  
  
     [!code-csharp[XmlSecureResolver_Samples#4d](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4d)]
     [!code-vb[XmlSecureResolver_Samples#4d](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4d)]  
  
     참조 된 <xref:System.Xml.XmlSecureResolver.%23ctor%2A> 또 다른 예에 대 한 참조 페이지입니다.  
  
## <a name="to-restrict-access-by-using-evidence"></a>증명 정보를 사용 하 여 액세스를 제한 하려면  
 사용 하 여 액세스를 제한할 수 있습니다 합니다 <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 생성자 및 지정 <xref:System.Security.Policy.Evidence>합니다. <xref:System.Security.Policy.Evidence>를 사용하면 기본 <xref:System.Security.PermissionSet>에 적용되는 <xref:System.Xml.XmlResolver>을 만들 수 있습니다. <xref:System.Xml.XmlSecureResolver>는 리소스를 열기 전에 생성된 <xref:System.Security.PermissionSet.PermitOnly%2A>에서 <xref:System.Security.PermissionSet>를 호출합니다.  
  
 다음은 몇 가지 일반적인 시나리오 및 각각에 대해 제공할 증명 정보 형식입니다.  
  
-   완전히 신뢰할 수 있는 환경에서 작업 하는 경우 사용 하 여 어셈블리 증명 정보를 만듭니다.  
  
     [!code-csharp[XmlSecureResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#1)]
     [!code-vb[XmlSecureResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#1)]  
  
-   부분 신뢰 환경에서 작업 하는 경우 외부 원본에서 가져온 코드나 데이터가 있고 확인 가능한 URI가 고 URI를 사용 하 여 증명 정보를 만드는 외부 소스의 출처를 알고:  
  
     [!code-csharp[XmlSecureResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#2)]
     [!code-vb[XmlSecureResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#2)]  
  
-   작업 하는 경우 부분 신뢰 환경 외부 소스에서 가져온 코드나 데이터가 없지만 외부 소스의 출처를 하거나 모르는:  
  
     `evidence` 매개 변수를 `null`로 설정합니다. 그러면 리소스에 액세스할 수 없습니다.  
  
     또는  
  
     응용 프로그램에서 리소스에 액세스해야 할 경우 호출자에게 증명 정보를 요청합니다.  
  
## <a name="to-use-the-secure-resolver-to-load-an-xslt-style-sheet"></a>XSLT 스타일 시트를 로드 하려면 보안 해결 프로그램을 사용 하려면  
  
1.  올바른 권한 집합으로 <xref:System.Xml.XmlSecureResolver>를 만듭니다.  
  
2.  <xref:System.Xml.XmlSecureResolver>를 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 메서드에 전달합니다.  
  
     [!code-csharp[XmlSecureResolver_Samples#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#6)]
     [!code-vb[XmlSecureResolver_Samples#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#6)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>이 클래스는 상속 요청이 있습니다. 상속 하려면 완전 신뢰가 필요 합니다 <see cref="T:System.Xml.XmlSecureResolver" /> 클래스입니다.</para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Xml.XmlSecureResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 세 가지 생성자에는 세 가지 유형의 액세스 제한 제공합니다.  
  
-   <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> 생성자는 URL을 사용 하 여 액세스를 제한 합니다.  
  
-   <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> 생성자 사용 권한 집합을 사용 하 여 액세스를 제한 합니다.  
  
-   <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 증거를 사용 하 여 액세스를 제한 하는 생성자입니다.  
  
 생성자 참조 항목에서는 이러한 유형의 제한에 대 한 예제를 참조 하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.PermissionSet permissionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, class System.Security.PermissionSet permissionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::Security::PermissionSet ^ permissionSet);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlSecureResolver : System.Xml.XmlResolver * System.Security.PermissionSet -&gt; System.Xml.XmlSecureResolver" Usage="new System.Xml.XmlSecureResolver (resolver, permissionSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resolver"><see cref="T:System.Xml.XmlSecureResolver" />에서 래핑된 XML 확인자입니다.</param>
        <param name="permissionSet">기본 <see cref="T:System.Xml.XmlResolver" />에 적용할 권한 집합입니다. <see cref="T:System.Xml.XmlSecureResolver" />는 기본 XML 확인자에 대해 <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> 메서드를 호출하기 전에 권한 집합에 대해 <see cref="M:System.Security.PermissionSet.PermitOnly" /> 메서드를 호출합니다.</param>
        <summary>지정된 <see cref="T:System.Xml.XmlSecureResolver" /> 및 <see cref="T:System.Xml.XmlResolver" />를 사용하여 <see cref="T:System.Security.PermissionSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예에서는 <xref:System.Xml.XmlSecureResolver> 사용자 지정된 권한 집합을 사용 하 여 개체입니다.  
  
 [!code-cpp[XmlSecureResolver.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSecureResolver.cctor/CPP/secresolver.cpp#1)]
 [!code-csharp[XmlSecureResolver.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver.cctor/CS/secresolver.cs#1)]
 [!code-vb[XmlSecureResolver.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver.cctor/VB/secresolver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
        <altmember cref="T:System.Security.Policy.Evidence" />
        <altmember cref="T:System.Net.WebPermission" />
        <altmember cref="T:System.Security.SecurityManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlSecureResolver : System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; System.Xml.XmlSecureResolver" Usage="new System.Xml.XmlSecureResolver (resolver, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resolver"><see cref="T:System.Xml.XmlSecureResolver" />에서 래핑된 XML 확인자입니다.</param>
        <param name="evidence">기본 <see cref="T:System.Xml.XmlResolver" />에 적용될 <see cref="T:System.Security.PermissionSet" />를 만드는 데 사용되는 증거입니다. <see cref="T:System.Xml.XmlSecureResolver" />는 기본 <see cref="T:System.Xml.XmlResolver" />에 대해 <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" />를 호출하기 전에 만들어진 <see cref="T:System.Security.PermissionSet" />에 대해 <see cref="M:System.Security.PermissionSet.PermitOnly" /> 메서드를 호출합니다.</param>
        <summary>지정된 <see cref="T:System.Xml.XmlSecureResolver" /> 및 <see cref="T:System.Xml.XmlResolver" />를 사용하여 <see cref="T:System.Security.Policy.Evidence" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음은 몇 가지 가능한 시나리오 및 각 시나리오에 대해 제공할 증명 정보 형식입니다.  
  
-   완전히 신뢰할 수 있는 환경에서 작업 하는 경우 사용 하 여 어셈블리 증명 정보를 만듭니다.  
  
     [!code-csharp[XmlSecureResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#1)]
     [!code-vb[XmlSecureResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#1)]  
  
-   부분 신뢰 환경에서 작업 하는 경우 외부 원본에서 가져온 코드나 데이터가 있고 확인 가능한 URI가 고 URI를 사용 하 여 증명 정보를 만드는 외부 소스의 출처를 알고:  
  
     [!code-csharp[XmlSecureResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#2)]
     [!code-vb[XmlSecureResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#2)]  
  
-   작업 하는 경우 부분 신뢰 환경 외부 소스에서 가져온 코드나 데이터가 없지만 외부 소스의 출처를 하거나 모르는:  
  
     `evidence` 매개 변수를 `null`로 설정합니다. 그러면 리소스에 액세스할 수 없습니다.  
  
     또는  
  
     응용 프로그램에서 리소스에 액세스해야 할 경우 호출자에게 증명 정보를 요청합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, string securityUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, string securityUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver, securityUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::String ^ securityUrl);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlSecureResolver : System.Xml.XmlResolver * string -&gt; System.Xml.XmlSecureResolver" Usage="new System.Xml.XmlSecureResolver (resolver, securityUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="securityUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resolver"><see cref="T:System.Xml.XmlSecureResolver" />에서 래핑된 XML 확인자입니다.</param>
        <param name="securityUrl">기본 <see cref="T:System.Security.PermissionSet" />에 적용될 <see cref="T:System.Xml.XmlResolver" />를 만드는 데 사용하는 URL입니다. <see cref="T:System.Xml.XmlSecureResolver" />는 내부 <see cref="M:System.Security.PermissionSet.PermitOnly" />에 대해 <see cref="T:System.Security.PermissionSet" />를 호출하기 전에 생성된 <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" />에 대해 <see cref="T:System.Xml.XmlResolver" />를 호출합니다.</param>
        <summary><see cref="T:System.Xml.XmlSecureResolver" /> 및 제공된 URL을 사용하여 <see cref="T:System.Xml.XmlResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  및 Microsoft SQL Server 2005 내에서 통합 된 CLR에서 실행 되는 코드는.NET Framework CLR (공용 언어 런타임)에서 실행 되는 코드에 대 한 보안 인프라에서 차이가 많습니다. 이 SQL Server에서 사용 되는 경우.NET Framework CLR 다르게 작동에 대 한 개발 된 코드 CLR을 통합 하는 위치 하는 경우 발생할 수 있습니다. 이러한 차이점에 영향을 줍니다 합니다 <xref:System.Xml.XmlSecureResolver> 증거는 URL을 기반으로 하는 경우 클래스 (즉, 사용 하는 경우는 <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> 메서드 또는 <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> 생성자). 정책 확인 메커니즘의 SQL Server CLR 통합을 사용 하지 않는 합니다 <xref:System.Security.Policy.Url> 또는 <xref:System.Security.Policy.Zone> 정보입니다. 대신 어셈블리 로드 되 면 서버를 추가 하는 GUID를 기반으로 하는 권한을 부여 합니다. 사용 하는 경우는 <xref:System.Xml.XmlSecureResolver> 에서 SQL Server CLR 통합, 지정 된 사용 하 여 직접 필요한 모든 증명 정보를 제공 <xref:System.Security.PermissionSet>합니다.  
  
   
  
## Examples  
 이 예제에서는 합니다 <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> 만드는 생성자입니다는 <xref:System.Xml.XmlSecureResolver> 로컬 인트라넷 사이트에만 액세스할 수 있는 개체입니다.  
  
 [!code-csharp[XmlSecureResolver_Samples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#3)]
 [!code-vb[XmlSecureResolver_Samples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEvidenceForUrl">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.Evidence CreateEvidenceForUrl (string securityUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.Evidence CreateEvidenceForUrl(string securityUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvidenceForUrl (securityUrl As String) As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::Evidence ^ CreateEvidenceForUrl(System::String ^ securityUrl);" />
      <MemberSignature Language="F#" Value="static member CreateEvidenceForUrl : string -&gt; System.Security.Policy.Evidence" Usage="System.Xml.XmlSecureResolver.CreateEvidenceForUrl securityUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityUrl" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="securityUrl">증명 정보를 만드는 데 사용하는 URL입니다.</param>
        <summary>제공된 URL을 사용하여 증명 정보를 만듭니다.</summary>
        <returns>기본 정책에 의해 정의된 대로 제공된 URL에서 생성된 증명 정보입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  및 Microsoft SQL Server 2005 내에서 통합 된 CLR에서 실행 되는 코드는.NET Framework CLR (공용 언어 런타임)에서 실행 되는 코드에 대 한 보안 인프라에서 차이가 많습니다. 이 SQL Server에서 사용 되는 경우.NET Framework CLR 다르게 작동에 대 한 개발 된 코드 CLR을 통합 하는 위치 하는 경우 발생할 수 있습니다. 이러한 차이점에 영향을 줍니다 합니다 <xref:System.Xml.XmlSecureResolver> 증거는 URL을 기반으로 하는 경우 클래스 (즉, 사용 하는 경우는 <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> 메서드 또는 <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> 생성자). 정책 확인 메커니즘의 SQL Server CLR 통합 사용 하지 않는 합니다 <xref:System.Security.Policy.Url> 또는 <xref:System.Security.Policy.Zone> 정보입니다. 대신 어셈블리 로드 되 면 서버를 추가 하는 GUID를 기반으로 하는 권한을 부여 합니다. 사용 하는 경우는 <xref:System.Xml.XmlSecureResolver> 에서 SQL Server CLR 통합, 지정 된 사용 하 여 직접 필요한 모든 증명 정보를 제공 <xref:System.Security.PermissionSet>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlSecureResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlSecureResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>웹 요청을 인증하는 데 사용된 자격 증명을 설정합니다.</summary>
        <value>웹 요청을 인증하는 데 사용하는 자격 증명입니다. <see cref="T:System.Xml.XmlSecureResolver" />는 내부 <see cref="T:System.Xml.XmlResolver" />에 대해 지정된 자격 증명을 설정합니다. 이 속성이 설정되지 않으면 기본적으로 값은 <see langword="null" />로 설정됩니다. 즉, <see cref="T:System.Xml.XmlSecureResolver" />에 사용자 자격 증명이 없습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Xml.XmlSecureResolver> 기본 자격 증명에 필요한 네트워크 리소스를 확인으로 <xref:System.Xml.XmlTextReader>합니다.  
  
 [!code-cpp[XmlSecureResolver.Credentials#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSecureResolver.Credentials/CPP/secresolver2.cpp#1)]
 [!code-csharp[XmlSecureResolver.Credentials#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver.Credentials/CS/secresolver2.cs#1)]
 [!code-vb[XmlSecureResolver.Credentials#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver.Credentials/VB/secresolver2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.CredentialCache.DefaultCredentials" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntity : Uri * string * Type -&gt; obj" Usage="xmlSecureResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri"><see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</param>
        <param name="role">현재 사용되지 않습니다.</param>
        <param name="ofObjectToReturn">반환할 개체의 형식입니다. 현재 버전에서는 <see cref="T:System.IO.Stream" /> 개체만 반환합니다.</param>
        <summary>실제 리소스가 포함된 개체로 URI를 매핑합니다. 이 메서드는 내부 <see cref="T:System.Security.PermissionSet" />에 대해 <see langword="GetEntity" />를 호출하여 리소스를 열기 전에 <see cref="M:System.Security.PermissionSet.PermitOnly" />를 호출하여 해당 생성자에서 만들어진 <see cref="T:System.Xml.XmlResolver" />을 일시적으로 설정합니다.</summary>
        <returns>기본 <see cref="T:System.Xml.XmlResolver" />에 대해 <see langword="GetEntity" />를 호출하여 반환된 스트림입니다. <see cref="T:System.IO.Stream" /> 이외의 형식을 지정하면 메서드가 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  응용 프로그램 메모리에 대 한 서비스 거부를 완화할 수는 <xref:System.Xml.XmlSecureResolver.GetEntity%2A> 메서드를 구현 하 여는 <xref:System.Runtime.InteropServices.ComTypes.IStream> 읽은 바이트 수를 제한 합니다. 이렇게 하면 악성 코드가 무한 바이트 스트림을를 전달 하려고 시도 하는 위치는 상황에 대 한 보호를 <xref:System.Xml.XmlSecureResolver.GetEntity%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><paramref name="ofObjectToReturn" />이 <see langword="null" /> 또는 <see cref="T:System.IO.Stream" /> 형식이 아닌 경우</exception>
        <exception cref="T:System.UriFormatException">지정된 URI가 절대 URI가 아닌 경우</exception>
        <exception cref="T:System.NullReferenceException"><paramref name="absoluteUri" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.Exception">런타임 오류(예: 중단된 서버 연결)가 발생한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlSecureResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="role" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="absoluteUri"><see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />에서 반환된 URI입니다.</param>
        <param name="role">현재 사용되지 않습니다.</param>
        <param name="ofObjectToReturn">반환할 개체의 형식입니다. 현재 버전에서는 <see cref="T:System.IO.Stream" /> 개체만 반환합니다.</param>
        <summary>실제 리소스가 포함된 개체로 URI를 비동기적으로 매핑합니다.</summary>
        <returns>기본 <see cref="T:System.Xml.XmlResolver" />에 대해 <see langword="GetEntity" />를 호출하여 반환된 스트림입니다. <see cref="T:System.IO.Stream" /> 이외의 형식을 지정하면 메서드가 <see langword="null" />을 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public override Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlSecureResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">상대 URI를 확인하는 데 사용된 기본 URI입니다.</param>
        <param name="relativeUri">확인할 URI입니다. 절대 URI나 상대 URI일 수 있습니다. 절대 URI인 경우 이 값은 <paramref name="baseUri" /> 값을 효율적으로 대체합니다. 상대 URI인 경우 <paramref name="baseUri" />와 결합하여 절대 URI를 만듭니다.</param>
        <summary>내부 <see cref="T:System.Xml.XmlResolver" />에 대해 <see langword="ResolveUri" />를 호출하여 기본 및 상대 URI에서 절대 URI를 확인합니다.</summary>
        <returns>절대 URI이거나, 기본 <see cref="T:System.Xml.XmlResolver" />에 대해 <see langword="ResolveUri" />를 호출하여 반환된 상대 URI를 확인할 수 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="relativeUri" />가 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>