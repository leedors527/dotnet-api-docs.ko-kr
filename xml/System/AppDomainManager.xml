<Type Name="AppDomainManager" FullName="System.AppDomainManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="42122049eeed0f6c1a39fa6ec6a2b24af684ada3" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48712655" /></Metadata><TypeSignature Language="C#" Value="public class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppDomainManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AppDomainManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type AppDomainManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>관리되지 않는 호스트의 관리되는 항목을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  사용 하지 않는 <xref:System.AppDomainManager> asp.net에서 애플리케이션 도메인을 구성 합니다. ASP.NET에서 구성 된 호스트에서 처리 되어야 합니다.  
  
 구현 된 <xref:System.AppDomainManager> 클래스의 새 애플리케이션 도메인 생성에 참여 하려면 호스팅 애플리케이션을 활성화 합니다. 기본값을 바꾸려면 <xref:System.AppDomainManager>, 어셈블리 및 대체의 유형을 식별 <xref:System.AppDomainManager> APPDOMAIN_MANAGER_ASM 및 APPDOMAIN_MANAGER_TYPE 환경 변수 또는 사용에는 [ \<appDomainManagerAssembly >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) 하 고 [ \<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) 구성 파일에는 요소입니다. 어셈블리는 완전히 신뢰할 수 있는 이어야 하며 시작 애플리케이션의 디렉터리나 전역 어셈블리 캐시에 포함 되어야 합니다. 환경 변수에서 형식 및 어셈블리 이름은 완전히 한정 되어야 합니다. 예:  
  
 `set APPDOMAIN_MANAGER_TYPE=MyNamespace.TestAppDomainManager`  
  
 `set APPDOMAIN_MANAGER_ASM=customappDomainmanager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f1368f7b12a08d72`  
  
> [!IMPORTANT]
>  어셈블리가 포함 된 경우의 서브 클래스 <xref:System.AppDomainManager> 조건부를 사용 하 여 표시 되는 어셈블리에 따라 달라 집니다 <xref:System.Security.AllowPartiallyTrustedCallersAttribute> (APTCA) 특성을 전달 하는 목록에서 해당 어셈블리를 포함 해야 합니다 <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> 속성을 <xref:System.AppDomainSetup>사용 하 여 애플리케이션 도메인을 만듭니다. 그렇지 않으면 조건부 APTCA 특성으로 표시 되는 어셈블리 비활성화 됩니다.  
  
 <xref:System.AppDomainManager> 관리 되지 않는 호스트의 관리 되는 것과 같습니다. <xref:System.AppDomainManager> 개체 만들기 프로세스에서 새 응용 프로그램 도메인에에서 참여 하 고 새 사용자 지정할 수 있습니다 <xref:System.AppDomain> 다른 관리 코드를 실행 하기 전에 합니다. <xref:System.AppDomainManager> 공용 언어 런타임 실행의 다른 측면에 참여 하는 호스트 관리자를 제공할 수도 있습니다. 예를 들어를 <xref:System.AppDomainManager> 식별할 수는 <xref:System.Security.HostSecurityManager> 애플리케이션 도메인의 보안 결정에 참여 하는 개체입니다.  
  
> [!NOTE]
>  부여 하는 어셈블리만 `FullTrust`, 전역 어셈블리 캐시에서 어셈블리와 같은 든으로 식별 `fullTrustAssemblies` 에 <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> 에서 메서드를 로드할 수 있습니다를 <xref:System.AppDomainManager.%23ctor%2A> 생성자 및 <xref:System.AppDomainManager.InitializeNewDomain%2A> 메서드.  
  
> [!NOTE]
>  이 클래스는 클래스 수준에서 상속 요청과 링크 요청을 포함합니다. <xref:System.Security.SecurityException> 직접 실행 호출자 또는 파생된 클래스 중 하나에 인프라 권한이 없는 경우 throw 됩니다. 보안 요청에 대 한 자세한 내용은 참조 하세요 [링크 요청](~/docs/framework/misc/link-demands.md) 하 고 [상속 요청](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))합니다.  
  
   
  
## Examples  
 다음 예제에서는 매우 간단한 구현을 <xref:System.AppDomainManager>합니다.  
  
 [!code-csharp[System.AppDomainManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#1)]
 [!code-vb[System.AppDomainManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Security.SecurityException">호출자에게 올바른 권한이 없습니다. 요구 사항 섹션을 참조하세요.</exception>
    <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">에 대 한 실행 코드가 공용 언어 런타임 호스팅 인프라에 연결할 클래스를 파생 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.AppDomainManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  부여 하는 어셈블리만 `FullTrust`, 전역 어셈블리 캐시에서 어셈블리와 같은 든으로 식별 `fullTrustAssemblies` 에 <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> 에서 메서드를 로드할 수 있습니다를 <xref:System.AppDomainManager.%23ctor%2A> 생성자 및 <xref:System.AppDomainManager.InitializeNewDomain%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationActivator">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Hosting.ApplicationActivator ApplicationActivator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ApplicationActivator ApplicationActivator" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.ApplicationActivator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationActivator As ApplicationActivator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Hosting::ApplicationActivator ^ ApplicationActivator { System::Runtime::Hosting::ApplicationActivator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationActivator : System.Runtime.Hosting.ApplicationActivator" Usage="System.AppDomainManager.ApplicationActivator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ApplicationActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>도메인의 매니페스트 기반 애플리케이션과 추가 기능의 활성화를 처리하는 애플리케이션 활성기를 가져옵니다.</summary>
        <value>애플리케이션 활성기입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 인스턴스가 <xref:System.Runtime.Hosting.ApplicationActivator> 각 클래스 <xref:System.AppDomain> 는 모든 추가 기능 및 매니페스트 기반 애플리케이션에 활성화 호출 라우팅됩니다. 합니다 <xref:System.AppDomainManager> 현재 <xref:System.AppDomain> 자체 사용자 지정을 제공할 수 있습니다 <xref:System.Runtime.Hosting.ApplicationActivator>, 또는 기본 인스턴스의 <xref:System.Runtime.Hosting.ApplicationActivator> 만들어집니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual bool CheckSecuritySettings (System.Security.SecurityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSecuritySettings(class System.Security.SecurityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSecuritySettings (state As SecurityState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckSecuritySettings(System::Security::SecurityState ^ state);" />
      <MemberSignature Language="F#" Value="abstract member CheckSecuritySettings : System.Security.SecurityState -&gt; bool&#xA;override this.CheckSecuritySettings : System.Security.SecurityState -&gt; bool" Usage="appDomainManager.CheckSecuritySettings state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.SecurityState" />
      </Parameters>
      <Docs>
        <param name="state">보안 상태를 요청하는 작업을 식별하는 <see cref="T:System.Security.SecurityState" />의 하위 클래스입니다.</param>
        <summary>애플리케이션 도메인에서 특정 작업이 허용되는지 여부를 나타냅니다.</summary>
        <returns>호스트에서 <paramref name="state" />로 지정된 작업을 응용 프로그램 도메인에서 수행할 수 있도록 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드의 기본 구현은 반환 `false`합니다.  
  
 이 메서드는 격리된 스토리지 할당량을 늘리기 위해 <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType> 메서드가 호출되었을 때 호출됩니다. CLR (공용 언어 런타임)을 호스팅하는 애플리케이션을 재정의할 수는 <xref:System.AppDomainManager.CheckSecuritySettings%2A> 정책 결정을 수행 하는 방법에 따라는 <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> 개체 (상속 하는 <xref:System.Security.SecurityState>), 및 허용 하거나 수 증가 되지 않도록 합니다. 예를 들어 호스트는 최종 사용자가 승인 하거나 할당량을 늘리려면 요청을 거부를 요구할 수 있습니다. 호스트의 구현을 <xref:System.AppDomainManager.CheckSecuritySettings%2A> 서비스 거부 공격의 가능성을 고려해 야 합니다. 예를 들어, 단추 클릭과 같은 사용자가 시작한 이벤트에서 메서드가 호출 되는 경우에 사용자를 프롬프트 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public virtual AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDomain (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain&#xA;override this.CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="appDomainManager.CreateDomain (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">도메인의 이름입니다.</param>
        <param name="securityInfo">스택의 맨 위 권한 집합을 설정하기 위해 보안 정책을 통해 매핑된 증명 정보를 포함하는 개체입니다.</param>
        <param name="appDomainInfo">애플리케이션 도메인 초기화 정보를 포함하는 개체입니다.</param>
        <summary>새 애플리케이션 도메인 또는 기존 애플리케이션 도메인을 반환합니다.</summary>
        <returns>새 애플리케이션 도메인 또는 기존 애플리케이션 도메인입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 이름는 `friendlyName` 매개 변수는 도메인을 식별 하기 위해 사용자 인터페이스에 표시할 수 있습니다. 자세한 내용은 <xref:System.AppDomain.FriendlyName%2A> 속성을 참조하세요.  
  
 기본값 <xref:System.AppDomainManager.CreateDomain%2A> 보호 된 메서드 호출 <xref:System.AppDomainManager.CreateDomainHelper%2A> 메서드를는 <xref:System.AppDomain>합니다. 이 메서드의 재정의 호출할 필요가 없습니다를 <xref:System.AppDomainManager.CreateDomainHelper%2A> 메서드 되었지만 기존 도메인을 반환할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.AppDomainManager" /> 클래스를 재정의 합니다 <see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> 메서드를 호출 하기 전에 사용자 지정 애플리케이션 도메인 초기화 작업을 수행할 수 있습니다는 <see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> 메서드 또는 전혀 도우미 메서드를 호출 하지.  예를 들어 변수로 전달 하는 증명 정보를 수정할 수 있습니다 <paramref name="securityInfo" />에 연결 된 필드를 업데이트 <see cref="T:System.AppDomainSetup" />, 기존 도메인을 다시 사용할 수 있도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDomainHelper">
      <MemberSignature Language="C#" Value="protected static AppDomain CreateDomainHelper (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.AppDomain CreateDomainHelper(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateDomainHelper (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static AppDomain ^ CreateDomainHelper(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="static member CreateDomainHelper : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="System.AppDomainManager.CreateDomainHelper (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">도메인의 이름입니다.</param>
        <param name="securityInfo">스택의 맨 위 권한 집합을 설정하기 위해 보안 정책을 통해 매핑된 증명 정보를 포함하는 개체입니다.</param>
        <param name="appDomainInfo">애플리케이션 도메인 초기화 정보를 포함하는 개체입니다.</param>
        <summary>애플리케이션 도메인을 만들기 위해 도우미 메서드를 제공합니다.</summary>
        <returns>새로 만든 애플리케이션 도메인입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 애플리케이션 도메인의 만들기를 처리 하는이 보호 된 도우미 메서드입니다.  
  
 이 식별 이름이 지정 된 된 `friendlyName` 매개 변수는 도메인을 식별 하기 위해 사용자 인터페이스에 표시할 수 있습니다. 자세한 내용은 <xref:System.AppDomain.FriendlyName%2A> 속성을 참조하세요.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="friendlyName" />가 <see langword="null" />인 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">증거를 제어 합니다. 보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EntryAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly EntryAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly EntryAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.EntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ EntryAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryAssembly : System.Reflection.Assembly" Usage="System.AppDomainManager.EntryAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션의 진입 어셈블리를 가져옵니다.</summary>
        <value>애플리케이션의 진입 어셈블리입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애플리케이션 매니페스트 활성화 애플리케이션인 경우 애플리케이션 매니페스트에서 진입 어셈블리 결정 됩니다. 진입 어셈블리를 애플리케이션에 매니페스트 활성화 하지 않은 경우 기본 애플리케이션 도메인에서 실행 되는 프로세스입니다. 진입 어셈블리에 의해 실행 된 첫 번째 실행 파일은 다른 애플리케이션 도메인에서를 <xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostExecutionContextManager">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContextManager HostExecutionContextManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.HostExecutionContextManager HostExecutionContextManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostExecutionContextManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostExecutionContextManager As HostExecutionContextManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::HostExecutionContextManager ^ HostExecutionContextManager { System::Threading::HostExecutionContextManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostExecutionContextManager : System.Threading.HostExecutionContextManager" Usage="System.AppDomainManager.HostExecutionContextManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContextManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>실행 컨텍스트의 흐름을 관리하는 호스트 실행 컨텍스트 관리자를 가져옵니다.</summary>
        <value>호스트 실행 컨텍스트 관리자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하면 호스트를 제공 하는 데는 <xref:System.Threading.HostExecutionContextManager> 비동기 호출에 대해 실행 컨텍스트의 흐름에 참여할 수 있는 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostSecurityManager">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManager HostSecurityManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.HostSecurityManager HostSecurityManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostSecurityManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostSecurityManager As HostSecurityManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManager ^ HostSecurityManager { System::Security::HostSecurityManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostSecurityManager : System.Security.HostSecurityManager" Usage="System.AppDomainManager.HostSecurityManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션 도메인의 보안 결정에 참여하는 호스트 보안 관리자를 가져옵니다.</summary>
        <value>호스트 보안 관리자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하면 호스트를 제공 하는 데는 <xref:System.Security.HostSecurityManager> 애플리케이션 도메인에 대 한 보안 결정에 참여할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 재정의 <xref:System.AppDomainManager.HostSecurityManager%2A> 사용자 지정 애플리케이션 도메인 관리자에 대 한 속성입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.AppDomainManager> 클래스입니다.  
  
 [!code-csharp[System.AppDomainManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#3)]
 [!code-vb[System.AppDomainManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationFlags">
      <MemberSignature Language="C#" Value="public AppDomainManagerInitializationOptions InitializationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AppDomainManagerInitializationOptions InitializationFlags" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.InitializationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property InitializationFlags As AppDomainManagerInitializationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainManagerInitializationOptions InitializationFlags { AppDomainManagerInitializationOptions get(); void set(AppDomainManagerInitializationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.InitializationFlags : AppDomainManagerInitializationOptions with get, set" Usage="System.AppDomainManager.InitializationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainManagerInitializationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 애플리케이션 도메인 관리자의 초기화 플래그를 가져옵니다.</summary>
        <value>수행할 초기화 작업을 설명하는 열거형 값의 비트 조합입니다. 기본값은 <see cref="F:System.AppDomainManagerInitializationOptions.None" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewDomain">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewDomain (AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewDomain(class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewDomain (appDomainInfo As AppDomainSetup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewDomain(AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewDomain : AppDomainSetup -&gt; unit&#xA;override this.InitializeNewDomain : AppDomainSetup -&gt; unit" Usage="appDomainManager.InitializeNewDomain appDomainInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="appDomainInfo">애플리케이션 도메인 초기화 정보를 포함하는 개체입니다.</param>
        <summary>새 애플리케이션 도메인을 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  ASP.NET에서 애플리케이션 도메인을 초기화 하려면이 메서드를 사용 하지 마십시오. ASP.NET에서 구성 된 호스트에서 처리 되어야 합니다. 이 메서드를 사용 하 여 애플리케이션 도메인을 초기화 하는 경우 호스트 throw <xref:System.InvalidOperationException> 애플리케이션 도메인을 초기화 할 때입니다. 예외 메시지는 해당 초기화 이미 발생 한 것을 나타냅니다.  
  
 이 메서드는 생성자 직후 호출 됩니다. 기본 <xref:System.AppDomainManager.InitializeNewDomain%2A> 구현은 아무 작업도 수행 하지 않습니다.  사용자 지정 구현을 수 내부 클래스 및 대리자를 설정, 관리 되지 않는 호스트 인터페이스를 사용 하 여 인터페이스를 설정 또는 새 이벤트 처리기를 설정 <xref:System.AppDomain>합니다.  
  
 또한 추가 기능 활성화에 대 한 사용자 지정 구현을 식별할 수 현재 <xref:System.AppDomain> 대상 애플리케이션 도메인으로 합니다.  
  
 부터는 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 애플리케이션 시작 시 또는 새 애플리케이션 도메인의 샌드박스를 수정할 sandbox 기본 애플리케이션 도메인에이 메서드를 사용할 수 있습니다. 이 위해 조정를 <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> 및 <xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A> 속성에는 <xref:System.Security.Policy.ApplicationTrust> 에 할당 되는 개체를 <xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType> 속성 `appDomainInfo`애플리케이션 도메인을 초기화 하기 전에, 합니다.  
  
> [!NOTE]
>  부여 하는 어셈블리만 `FullTrust`, 전역 어셈블리 캐시에서 어셈블리와 같은 든으로 식별 `fullTrustAssemblies` 에 <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> 에서 메서드를 로드할 수 있습니다를 <xref:System.AppDomainManager.%23ctor%2A> 생성자 및 <xref:System.AppDomainManager.InitializeNewDomain%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 재정의 <xref:System.AppDomainManager.InitializeNewDomain%2A> 메서드는 사용자 지정 애플리케이션 도메인 관리자에 대 한 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.AppDomainManager> 클래스입니다.  
  
 [!code-csharp[System.AppDomainManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#2)]
 [!code-vb[System.AppDomainManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>