<Type Name="Console" FullName="System.Console">
  <Metadata><Meta Name="ms.openlocfilehash" Value="adc274b49ccfdd1f304c0c3df06bfc640a563039" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58734896" /></Metadata><TypeSignature Language="C#" Value="public static class Console" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Console extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Console" />
  <TypeSignature Language="VB.NET" Value="Public Class Console" />
  <TypeSignature Language="C++ CLI" Value="public ref class Console abstract sealed" />
  <TypeSignature Language="F#" Value="type Console = class" />
  <AssemblyInfo>
    <AssemblyName>System.Console</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>콘솔 응용 프로그램에 대한 표준 입력, 출력 및 오류 스트림을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘솔에 있는 사용자 상호 작용 텍스트 기반 콘솔 응용 프로그램 또는 운영 체제를 사용 하 여 컴퓨터 키보드를 통해 텍스트 입력을 입력 하 여 및 컴퓨터 터미널에서 텍스트 출력을 참조 하 여 운영 체제 창입니다. 예를 들어 Windows 운영 체제 콘솔 명령 프롬프트 창 이라고 하며 MS-DOS 명령을 허용 합니다. <xref:System.Console> 클래스는 문자를 읽고 콘솔에 문자 쓰기는 응용 프로그램에 대 한 기본 지원을 제공 합니다.  
  
 사용 하 여 개발 하는 것에 대 한 자세한는 <xref:System.Console> 클래스에 다음 섹션을 참조 하세요.  
  
-   [콘솔 I/O 스트림](#Streams)  
  
-   [화면 버퍼 및 콘솔 창](#Buffer)  
  
-   [콘솔에 대 한 유니코드 지원](#Unicode)  
  
-   [일반 작업](#Operations)  
  
-   [.NET core 정보](#Core)  
  
<a name="Streams"></a>   
## <a name="console-io-streams"></a>콘솔 I/O 스트림  
 콘솔 응용 프로그램을 시작할 때 운영 체제 자동 세 I/O 스트림 콘솔: 표준 스트림, 표준 출력 스트림 및 표준 오류 출력 스트림을 입력 합니다. 응용 프로그램이 표준 입력 스트림에서; 사용자 입력을 읽을 수 있습니다. 표준 출력 스트림에 일반 데이터 쓰기 및 표준 오류 출력 스트림에 오류 데이터를 작성 합니다. 이러한 스트림은 응용 프로그램의 값으로는 <xref:System.Console.In%2A?displayProperty=nameWithType>, <xref:System.Console.Out%2A?displayProperty=nameWithType>, 및 <xref:System.Console.Error%2A?displayProperty=nameWithType> 속성입니다.  
  
 기본적으로 값을 <xref:System.Console.In%2A> 속성은는 <xref:System.IO.TextReader?displayProperty=nameWithType> 키보드 및의 값을 나타내는 개체를 <xref:System.Console.Out%2A> 및 <xref:System.Console.Error%2A> 속성은 <xref:System.IO.TextWriter?displayProperty=nameWithType> 콘솔 창을 나타내는 개체입니다. 그러나 콘솔 창이 나 키보드;을 나타내지 않는 스트림에 이러한 속성을 설정할 수 있습니다. 예를 들어 파일을 나타내는 스트림으로 이러한 속성을 설정할 수 있습니다. 표준 입력, 표준 출력 또는 표준 오류 스트림에서 리디렉션를 호출 합니다 <xref:System.Console.SetIn%2A?displayProperty=nameWithType>, <xref:System.Console.SetOut%2A?displayProperty=nameWithType>, 또는 <xref:System.Console.SetError%2A?displayProperty=nameWithType> 메서드를 각각. 이러한 스트림을 사용 하는 I/O 작업 즉,는 여러 스레드를 읽거나 쓸 수는 스트림을에 동기화 됩니다. 즉, 같은 일반적으로 비동기 메서드 <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType>, 개체가 나타내는 콘솔 스트림에 동기적으로 실행 합니다.  
  
> [!NOTE]
>  사용 하지 마십시오는 <xref:System.Console> 무인 응용 프로그램에서 서버 응용 프로그램과 같은 출력을 표시 하는 클래스입니다. 와 같은 메서드를 호출 <xref:System.Console.Write%2A?displayProperty=nameWithType> 고 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> GUI 응용 프로그램에는 아무런 효과가 없습니다.  
  
 <xref:System.Console> 리디렉션되면 스트림, 예를 들어 파일을 내부 스트림에 콘솔에 지시 하는 경우 정상적으로 작동 하는 클래스 멤버에서 예외를 throw 될 수 있습니다. Catch 하도록 응용 프로그램 프로그램 <xref:System.IO.IOException?displayProperty=nameWithType> 표준 스트림을 리디렉션하는 경우는 예외입니다. 사용할 수도 있습니다는 <xref:System.Console.IsOutputRedirected%2A>, <xref:System.Console.IsInputRedirected%2A>, 및 <xref:System.Console.IsErrorRedirected%2A> 표준 스트림에 throw 하는 작업을 수행 하기 전에 리디렉션되는지 여부를 결정 하는 속성을 <xref:System.IO.IOException?displayProperty=nameWithType> 예외입니다.  
  
 명시적으로 나타내는 스트림 개체의 멤버를 호출 하는 유용한 경우가 합니다 <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>, 및 <xref:System.Console.Error%2A> 속성입니다. 예를 들어, 기본적으로 <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> 메서드는 표준 입력 스트림에서 입력을 읽습니다. 마찬가지로,는 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 메서드는 표준 출력 스트림에 쓸 데이터 및 데이터 뒤에 기본 줄 종료 문자열은 캐리지 리턴 및 줄 바꿈 ("\r\n"). 그러나는 <xref:System.Console> 클래스는 표준 오류 출력 스트림에 해당 스트림에 기록 된 데이터에 대 한 줄 종료 문자열을 변경 하는 속성에 데이터를 작성 하는 해당 메서드를 제공 하지 않습니다.  
  
 설정 하 여이 문제를 해결할 수 있습니다 합니다 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 의 속성을 <xref:System.Console.Out%2A> 또는 <xref:System.Console.Error%2A> 속성을 다른 줄 종료 문자열로 합니다. 예를 들어 다음 C# 문을 두 캐리지 리턴 및 줄 바꿈 시퀀스를 표준 오류 출력 스트림에 대 한 줄 종료 문자열을 설정 합니다.  
  
 `Console.Error.NewLine = "\r\n\r\n";`  
  
 명시적으로 호출할 수 있습니다는 <xref:System.IO.TextWriter.WriteLine%2A> 다음 C# 문에서 오류 출력 스트림 개체의 메서드:  
  
 `Console.Error.WriteLine();`  
  
<a name="Buffer"></a>   
## <a name="screen-buffer-and-console-window"></a>화면 버퍼 및 콘솔 창  
 콘솔의 밀접 한 관련이 있는 두 가지 기능은 화면 버퍼 및 콘솔 창입니다. 텍스트는 실제로 읽기 또는 콘솔을 소유 하는 스트림에 기록 되지만에서 읽거나 쓸 화면 버퍼를 호출 하는 콘솔에서 소유한 영역으로 나타납니다. 화면 버퍼는 콘솔의 특성 및 행과 열의 각 그리드 교집합 또는 문자 셀은 문자를 사용할 수 있는 사각형 그리드로 구성 됩니다. 각 문자에는 자체 전경색 있고 각 문자 셀 자체 배경색입니다.  
  
 화면 버퍼가 콘솔 창 이라는 사각형 영역에 표시 됩니다. 콘솔 창은; 콘솔의 다른 특성 콘솔 자체는 운영 체제 창 아닙니다. 콘솔 창의 행과 열으로 정렬 된, 화면 버퍼의 크기 보다 작거나 및 보기 기본 화면 버퍼의 다른 영역으로 이동할 수 있습니다. 화면 버퍼 보다 크면 콘솔 창, 콘솔 창 화면 버퍼 영역 위치가 변경 될 수 있도록 콘솔이 자동으로 스크롤 막대 표시 합니다.  
  
 커서는 텍스트는 현재 읽기 또는 쓰기 화면 버퍼 위치를 나타냅니다. 커서를 숨기 거 나 표시할 수 있습니다 및 높이 변경할 수 있습니다. 커서를 표시 하는 경우 콘솔 창 위치는 뷰에서 커서는 항상 자동으로 이동 됩니다.  
  
 화면 버퍼에서 문자 셀 좌표에 대 한 원점은 왼쪽된 위 모퉁이 콘솔 창과 커서의 위치는 원점을 기준으로 측정 됩니다. 0부터 시작 인덱스를 사용 하 여 위치;를 지정 합니다. 즉, 0 행과 0 열으로 맨 왼쪽 열 맨 위 행을 지정 합니다. 행 및 열 인덱스에 대 한 최대값은 <xref:System.Int16.MaxValue?displayProperty=nameWithType>합니다.  
  
<a name="Unicode"></a>   
## <a name="unicode-support-for-the-console"></a>콘솔에 대 한 유니코드 지원  
 일반적으로 콘솔 입력 읽고 시스템 로캘을 기본적으로 정의 하는 현재 콘솔 코드 페이지를 사용 하 여 출력을 씁니다. 모든 문자를 표시 하거나 자신을 정확 하 게 나타내는 콘솔 특정 코드 페이지에 의해 매핑되지 않는 문자 표시 없게 하려고 하면 되므로 코드 페이지를 사용할 수 있는 유니코드 문자 집합만 처리할 수 있습니다. 다음 예제에서는 이 문제를 보여 줍니다. 콘솔에 U + 044F 하에서 U + 0410 키릴 자모 문자를 표시 하려고 합니다. 콘솔 코드 페이지 437을 사용 하는 시스템에서 예제를 실행 하는 경우 키릴 자모 코드 페이지 437의에서 문자에 매핑되지 않는 때문에 각 문자는 물음표 (?)로 대체 됩니다.  
  
 [!code-csharp[System.Console.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/unicode1.cs#1)]
 [!code-vb[System.Console.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/unicode1.vb#1)]  
  
 코드 페이지 지원 외에도 합니다 <xref:System.Console> 클래스는 u t F-8 인코딩을 지원 합니다 <xref:System.Text.UTF8Encoding> 클래스입니다. .NET Framework 4.5부터 합니다 <xref:System.Console> 클래스에는 utf-16 인코딩을 지원 합니다 <xref:System.Text.UnicodeEncoding> 클래스. 콘솔에 유니코드 문자를 표시 합니다. 설정 된 <xref:System.Console.OutputEncoding%2A> 속성을 <xref:System.Text.UTF8Encoding> 또는 <xref:System.Text.UnicodeEncoding>합니다.  
  
 유니코드 문자에 대 한 지원 특정 유니코드 문자를 인식 하도록 인코더와 해당 문자를 렌더링 하는 데 필요한 문자 모양이 있는 글꼴도 필요 합니다. 유니코드 문자를 콘솔로 성공적으로 표시 하려면 콘솔 글꼴 비 래스터 또는 Consolas 등 Lucida Console 트루타입 글꼴 설정 되어야 합니다. 다음 예제에서는 변경 하는 방법을 프로그래밍 방식으로 글꼴 래스터 글꼴에서 Lucida Console를 보여 줍니다.  
  
 [!code-csharp[System.Console.Class.Unsafe#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class.unsafe/cs/setfont1.cs#3)]
 [!code-vb[System.Console.Class.Unsafe#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class.unsafe/vb/setfont1.vb#3)]  
  
 그러나 트루타입 글꼴 문자 모양 하위 집합만 표시할 수 있습니다. 예를 들어, Lucida Console 글꼴 U + FB02를 사용할 수 있는 약 64,000 문자 (u+0021을 643만 표시합니다. 열, 특정 글꼴 문자는 참조를 지원 합니다 **글꼴** 제어판에 애플릿을 선택는 **문자를 찾습니다** 옵션을 선택한 합니다 에서검사할문자집합수글꼴선택 **글꼴** 목록을 합니다 **문자표** 창입니다.  
  
 Windows에서는 특정 글꼴에 사용할 수 없는 문자 모양을 표시할 글꼴 연결을 사용 합니다. 추가 문자 집합을 표시할 글꼴 연결 하는 방법에 대 한 내용은 [세계화 단계별 연습: 글꼴](https://go.microsoft.com/fwlink/?LinkId=229111)합니다. 연결 된 글꼴 레지스트리 HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink 하위 키에 정의 됩니다. 이 하위 키와 연결 된 각 항목 이름에 해당 하는 기본 글꼴 및 해당 값은 기본 글꼴에 연결 된 글꼴과 글꼴 파일을 정의 하는 문자열 배열입니다. 배열의 각 멤버가 연결 된 글꼴을 정의 하 고 형식은 *글꼴 파일 이름*를*글꼴 이름*합니다. 다음 예제에서는 라는 SimSun simsun.ttc Han 간체 문자를 표시 하는 명명 된 글꼴 파일에 연결 된 글꼴을 프로그래밍 방식으로 정의 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Console.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/fontlink1.cs#2)]
 [!code-vb[System.Console.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/fontlink1.vb#2)]  
  
 콘솔에 대 한 유니코드 지원에 다음 제한이 있습니다.  
  
-   UTF-32 인코딩은 지원 되지 않습니다. 유니코드는 인코딩은 utf-8 및 u t F-16이 고으로 표현 되는 경우에 지원 합니다 <xref:System.Text.UTF8Encoding> 및 <xref:System.Text.UnicodeEncoding> 클래스 각각.  
  
-   양방향 출력 지원 되지 않습니다.  
  
-   Basic Multilingual Plane 밖의 문자 표시 (즉, 서로게이트 쌍) 연결 된 글꼴 파일에 정의 된 경우에는 지원 되지 않습니다.  
  
-   양방향 텍스트의 문자 표시 지원 되지 않습니다.  
  
-   결합 문자 시퀀스 (즉, 기본 문자와 조합 문자를 하나 이상의 구성 된 문자)는 별도 문자로 표시 됩니다. 이 제한을 해결 하려면 호출 하 여 표시할 문자열을 정규화 할 수는 <xref:System.String.Normalize%2A?displayProperty=nameWithType> 콘솔에 출력을 보내기 전에 메서드. 다음 예제에서 조합 문자를 포함 하는 문자열 시퀀스 단어로 후 단일 문자를 출력 문자열은 정규화 하기 전에 두 개의 문자로 + 0308 콘솔에 표시 되는 <xref:System.String.Normalize%2A?displayProperty=nameWithType> 메서드가 호출 됩니다.  
  
     [!code-csharp[System.Console.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/normalize1.cs#5)]
     [!code-vb[System.Console.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/normalize1.vb#5)]  
  
     Combining 특정에 해당 하는 미리 구성된 된 폼을 포함 하는 문자 표준 유니코드 문자 시퀀스 하는 경우에 정규화는 실행 가능한 솔루션을 참고 합니다.  
  
-   개인 사용 영역에 있는 코드 포인트에 대 한 문자 모양을 제공 하는 글꼴, 해당 문자 모양 표시 됩니다. 그러나 개인 사용 영역의 문자 응용 프로그램별 이기 때문에이 아닐 예상된 문자 모양입니다.  
  
 다음 예제에서는 콘솔에는 유니코드 문자의 범위를 표시합니다. 이 예제에서는 세 개의 명령줄 매개 변수: 표시 및 현재 콘솔 인코딩을 사용할지 여부를 범위의 끝을 표시 하려면 범위의 시작 (`false`) 또는 utf-16 인코딩 (`true`). 콘솔 트루타입 글꼴을 사용 하 고 있음을 가정 합니다.  
  
 [!code-csharp[System.Console.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.class/cs/example3.cs#4)]
 [!code-vb[System.Console.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.class/vb/example3.vb#4)]  
  
<a name="Operations"></a>   
## <a name="common-operations"></a>일반 작업  
 <xref:System.Console> 클래스 콘솔 입력을 읽고 쓰며 콘솔 출력에 대 한 다음 메서드를 포함 합니다.  
  
-   오버 로드는 <xref:System.Console.ReadKey%2A> 메서드는 개별 문자를 읽습니다.  
  
-   <xref:System.Console.ReadLine%2A> 메서드 입력의 전체 줄을 읽습니다.  
  
-   <xref:System.Console.Write%2A> 메서드 오버 로드 값 형식, 문자 배열 또는 개체 집합의 인스턴스 서식이 지정 되거나 지정 되지 않은 문자열로 변환한 다음 해당 문자열을 콘솔에 기록 합니다.  
  
-   병렬 집합이 <xref:System.Console.WriteLine%2A> 메서드 출력으로 문자열을 동일한 오버 로드는 <xref:System.Console.Write%2A> 오버 로드 하지만 줄 종료 문자열을 추가할 수도 있습니다.  
  
 <xref:System.Console> 클래스도 다음 작업을 수행 하는 속성과 메서드를 포함 합니다.  
  
-   가져오거나 화면 버퍼의 크기를 설정 합니다. <xref:System.Console.BufferHeight%2A> 하 고 <xref:System.Console.BufferWidth%2A> 속성을 사용 하면 가져오거나 버퍼 높이 너비를 각각 설정할 수 있습니다 및 <xref:System.Console.SetBufferSize%2A> 메서드를 사용 하는 단일 메서드 호출에서 버퍼 크기를 설정할 수 있습니다.  
  
-   가져오거나 콘솔 창의 크기를 설정 합니다. <xref:System.Console.WindowHeight%2A> 하 고 <xref:System.Console.WindowWidth%2A> 속성을 사용 하면 가져오거나 창 높이 너비를 각각 설정할 수 있습니다 및 <xref:System.Console.SetWindowSize%2A> 메서드는 단일 메서드 호출의 창 크기를 설정할 수 있습니다.  
  
-   Get 또는 커서의 크기를 설정 합니다. <xref:System.Console.CursorSize%2A> 속성 문자 셀에 커서의 높이 지정 합니다.  
  
-   가져오거나 화면 버퍼에 상대적인 콘솔 창의 위치를 설정 합니다. <xref:System.Console.WindowTop%2A> 하 고 <xref:System.Console.WindowLeft%2A> 속성을 사용 하면 가져오거나 맨 위 행과 콘솔 창에 표시 되는 화면 버퍼의 가장 왼쪽 열에 설정 및 <xref:System.Console.SetWindowPosition%2A> 메서드를 사용 하면 단일 메서드 호출에서 이러한 값을 설정 합니다.  
  
-   Get 또는 가져오기 설정 하 여 커서의 위치를 설정 합니다 <xref:System.Console.CursorTop%2A> 및 <xref:System.Console.CursorLeft%2A> 속성 또는 set를 호출 하 여 커서의 위치는 <xref:System.Console.SetCursorPosition%2A> 메서드.  
  
-   이동 하거나 호출 하 여 화면 버퍼에서 데이터를 선택 취소 합니다 <xref:System.Console.MoveBufferArea%2A> 또는 <xref:System.Console.Clear%2A> 메서드.  
  
-   가져오거나 사용 하 여 전경색 및 배경색을 설정 합니다 <xref:System.Console.ForegroundColor%2A> 및 <xref:System.Console.BackgroundColor%2A> 속성 또는 해당 기본 색을 배경색과 전경색을 호출 하 여 다시 설정 합니다 <xref:System.Console.ResetColor%2A> 메서드.  
  
-   호출 하 여 콘솔 스피커를 통해 경고음의 소리를 재생 합니다 <xref:System.Console.Beep%2A> 메서드.  
  
<a name="Core"></a>   
## <a name="includenetcoreincludesnet-core-mdmd-notes"></a>[!INCLUDE[net_core](~/includes/net-core-md.md)] 참고 사항  
 바탕 화면에서.NET Framework에는 <xref:System.Console> 클래스에서 반환 된 인코딩을 사용 하 여 `GetConsoleCP` 및 `GetConsoleOutputCP`, 일반적으로 코드 페이지 인코딩. 예를 들어 영어 (미국), 코드 페이지 437 문화권이 시스템에서 코드는 기본적으로 사용 되는 인코딩입니다. 그러나 [!INCLUDE[net_core](~/includes/net-core-md.md)] 이러한 인코딩의 제한 된 하위 집합만 사용할 수 있습니다. 이 경우 여기서 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> 콘솔에 대 한 기본 인코딩을으로 사용 됩니다.  
  
 앱 특정 코드 페이지 인코딩을 의존 하는 경우 있습니다 수 여전히 사용할 수 있도록 다음을 수행 하 여 *하기 전에* 하나를 호출 하면 <xref:System.Console> 메서드:  
  
1.  프로젝트에 System.Text.Encoding.CodePages.dll 어셈블리에 대 한 참조를 추가 합니다.  
  
2.  검색 된 <xref:System.Text.EncodingProvider> 에서 개체를 <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> 속성입니다.  
  
3.  전달 된 <xref:System.Text.EncodingProvider> 개체를 <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> 메서드를 사용할 수 있는 인코딩 공급자가 지 원하는 추가 인코딩.  
  
 합니다 <xref:System.Console> 클래스 자동으로 사용 하 여 기본 시스템 인코딩이 UTF8 대신 호출 하기 전에 인코딩 공급자를 등록 된 <xref:System.Console> 메서드를 출력 합니다.  
  
   
  
## Examples  
 다음 예제에서는 데이터를 읽을 데이터를 표준 입력 및 출력 스트림을 작성 하는 방법을 보여 줍니다. 이러한 스트림을 사용 하 여 리디렉션될 수를 확인 합니다 <xref:System.Console.SetIn%2A> 및 <xref:System.Console.SetOut%2A> 메서드.  
  
 [!code-cpp[Classic Console Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Console Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Console Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Console Example/CS/source.cs#1)]
 [!code-vb[Classic Console Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Console Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>이 형식은 스레드로부터 안전합니다.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BackgroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor BackgroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : ConsoleColor with get, set" Usage="System.Console.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>콘솔의 배경색을 가져오거나 설정합니다.</summary>
        <value>각 문자의 배경에 표시되는 콘솔의 배경색을 지정하는 값입니다. 기본값은 검정입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변경 된 <xref:System.Console.BackgroundColor%2A> 배경색 변경 된 후 개별 문자 셀에 기록 되는 유일한 출력 하는 속성에 영향을 줍니다. 전체 콘솔 창의 배경색을 변경 하려면 설정 합니다 <xref:System.Console.BackgroundColor%2A> 속성과 호출은 <xref:System.Console.Clear%2A> 메서드. 다음 예제에서 이에 대해 설명합니다.  
  
 [!code-csharp[System.Console.BackgroundColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.backgroundcolor/cs/backgroundcolor1.cs#1)]
 [!code-vb[System.Console.BackgroundColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.backgroundcolor/vb/backgroundcolor1.vb#1)]  
  
 Windows 기반 응용 프로그램의 경우에 콘솔을 존재 하지 않는 가져오기 작업을 반환 합니다 <xref:System.ConsoleColor.Black?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 값을 저장 하는 다음 예제는 <xref:System.ConsoleColor> 배열에는 열거형의 현재 값을 저장 하 고는 <xref:System.Console.BackgroundColor%2A> 및 <xref:System.Console.ForegroundColor%2A> 변수에 속성입니다. 각 색의 전경색을 다음 변경 합니다 <xref:System.ConsoleColor> 열거형 색과 일치 하는 현재 백그라운드를 제외한 각 색에 배경색을 변경 하는 <xref:System.ConsoleColor> 열거형을 제외 하 고 일치 하는 색을를 현재 전경색입니다. (전경색 배경색으로 동일한 경우 텍스트가 표시 되지 않습니다.) 마지막으로 호출 하 여 <xref:System.Console.ResetColor%2A> 원래 콘솔 색을 복원 하는 방법입니다.  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">집합 작업에서 지정된 색이 <see cref="T:System.ConsoleColor" />의 유효한 멤버가 아닙니다. </exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Beep">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>콘솔 스피커를 통해 경고음을 재생합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep();" />
      <MemberSignature Language="F#" Value="static member Beep : unit -&gt; unit" Usage="System.Console.Beep " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>콘솔 스피커를 통해 경고음을 재생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 경고음 800 헤르츠 빈도로 200 밀리초 동안 재생 됩니다.  
  
> [!NOTE]
>  <xref:System.Console.Beep%2A> 메서드가 64 비트 버전의 Windows Vista 및 Windows XP에서 지원 되지 않습니다.  
  
 <xref:System.Console.Beep%2A> Windows에 대 한 호출을 래핑하고 [함수에 경고음을](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)입니다. 여부를 <xref:System.Console.Beep%2A> Windows 7 8254 프로그램 가능 간격 타이머 칩에 의존 하기 전에 버전의 Windows에서 소리를 생성 합니다. Windows 7부터 기본 사운드 장치에 따라 다르겠지요.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Console.Beep%2A> 메서드. 이 예제에서는 명령줄 인수로 1부터 9 까지의 숫자를 받고 해당 횟수를 경고음을 재생 합니다.  
  
 [!code-cpp[console.beep#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep/CPP/beep.cpp#1)]
 [!code-csharp[console.beep#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep/CS/beep.cs#1)]
 [!code-vb[console.beep#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep/VB/beep.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.HostProtectionException">이 메서드가 사용자 인터페이스에 대한 액세스를 허용하지 않는 SQL Server와 같은 서버에서 실행되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep (int frequency, int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep(int32 frequency, int32 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Beep(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Beep (frequency As Integer, duration As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep(int frequency, int duration);" />
      <MemberSignature Language="F#" Value="static member Beep : int * int -&gt; unit" Usage="System.Console.Beep (frequency, duration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frequency" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="duration" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="frequency">경고음의 주파수이며 해당 범위는 37 - 32767헤르츠입니다.</param>
        <param name="duration">경고음의 지속 시간(밀리초)입니다.</param>
        <summary>지정한 시간 동안 지정한 주파수로 콘솔 스피커를 통해 경고음을 재생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Console.Beep%2A> Windows에 대 한 호출을 래핑하고 [함수에 경고음을](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx)입니다. 여부를 <xref:System.Console.Beep%2A> Windows 7 8254 프로그램 가능 간격 타이머 칩에 의존 하기 전에 버전의 Windows에서 소리를 생성 합니다. Windows 7부터 기본 사운드 장치에 따라 다르겠지요.  
  
> [!NOTE]
>  <xref:System.Console.Beep%2A> 메서드가 64 비트 버전의 Windows Vista 및 Windows XP에서 지원 되지 않습니다.  
  
   
  
## Examples  
 이 예제에서는 <xref:System.Console.Beep%2A> 콘솔 스피커를 통해 song의 첫 번째 몇 메모를 재생 하 여 메서드.  
  
 [!code-cpp[console.beep2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.beep2/CPP/b2.cpp#1)]
 [!code-csharp[console.beep2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.beep2/CS/b2.cs#1)]
 [!code-vb[console.beep2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.beep2/VB/b2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="frequency" />가 37헤르츠보다 작거나 32767헤르츠보다 큽니다.  
  
또는 
 <paramref name="duration" />가 0보다 작거나 같습니다.</exception>
        <exception cref="T:System.Security.HostProtectionException">이 메서드가 콘솔에 대한 액세스를 허용하지 않는 SQL Server와 같은 서버에서 실행되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="BufferHeight">
      <MemberSignature Language="C#" Value="public static int BufferHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferHeight : int with get, set" Usage="System.Console.BufferHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>버퍼 영역의 높이를 가져오거나 설정합니다.</summary>
        <value>버퍼 영역의 현재 높이(행)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 콘솔 모드 창에 의해 액세스 되는 버퍼에 저장 된 행 (또는 줄)를 정의 합니다. 반면,는 <xref:System.Console.WindowHeight%2A> 속성은 특정 시간에 실제로 콘솔 창에 표시 되는 행의 수를 정의 합니다. 의해 정의 된 행의 수를 초과 하는 버퍼에 실제로 기록 된 행의 수를 <xref:System.Console.WindowHeight%2A> 속성을 행과 동일한 연속 숫자로 표시 하는 창이 세로로 스크롤할 수 있는 <xref:System.Console.WindowHeight%2A> 되며 속성이 있는 버퍼입니다.  
  
 Set 작업의 값을 감소 하는 경우는 <xref:System.Console.BufferHeight%2A> 속성인 위 줄이 제거 됩니다. 예를 들어 250 줄 수가 300에서 감소, 0 ~ 49 줄 제거 되 고 될 299 통해 50 줄 기존 줄 경우 0 통해 249입니다.  
  
   
  
## Examples  
 이 예제에서는 합니다 <xref:System.Console.BufferHeight%2A> 고 <xref:System.Console.BufferWidth%2A> 속성입니다. 이 예제에서는 300 행 및 열 85의 버퍼 크기를 설정 하는 운영 체제 창의 크기를 보고 합니다.  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">집합 작업의 값이 0보다 작거나 같습니다.  
  
또는 
집합 작업의 값이 <see cref="F:System.Int16.MaxValue" />보다 크거나 같습니다.  
  
또는 
집합 작업의 값이 <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />보다 작습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BufferWidth">
      <MemberSignature Language="C#" Value="public static int BufferWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.BufferWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BufferWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int BufferWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferWidth : int with get, set" Usage="System.Console.BufferWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>버퍼 영역의 너비를 가져오거나 설정합니다.</summary>
        <value>버퍼 영역의 현재 너비(열)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Set 작업의 값을 감소 하는 경우는 <xref:System.Console.BufferWidth%2A> 속성 오른쪽에 있는 열이 제거 됩니다. 예를 들어, 80에서 60으로 열 수를 줄이면 60 ~ 79 각 행의 열이 제거 됩니다.  
  
   
  
## Examples  
 이 예제에서는 합니다 <xref:System.Console.BufferHeight%2A> 고 <xref:System.Console.BufferWidth%2A> 속성입니다. 이 예제에서는 300 행 및 열 85의 버퍼 크기를 설정 하는 운영 체제 창의 크기를 보고 합니다.  
  
 [!code-cpp[console.bufferHW#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.bufferHW/CPP/hw.cpp#1)]
 [!code-csharp[console.bufferHW#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.bufferHW/CS/hw.cs#1)]
 [!code-vb[console.bufferHW#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.bufferHW/VB/hw.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">집합 작업의 값이 0보다 작거나 같습니다.  
  
또는 
집합 작업의 값이 <see cref="F:System.Int16.MaxValue" />보다 크거나 같습니다.  
  
또는 
집합 작업의 값이 <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />보다 작습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CancelKeyPress">
      <MemberSignature Language="C#" Value="public static event ConsoleCancelEventHandler CancelKeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ConsoleCancelEventHandler CancelKeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Console.CancelKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CancelKeyPress As ConsoleCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event ConsoleCancelEventHandler ^ CancelKeyPress;" />
      <MemberSignature Language="F#" Value="member this.CancelKeyPress : ConsoleCancelEventHandler " Usage="member this.CancelKeyPress : System.ConsoleCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="F:System.ConsoleModifiers.Control" /> 보조 키(Ctrl)와 <see cref="F:System.ConsoleKey.C" /> 콘솔 키(C) 또는 Break 키를 동시에 누르면(Ctrl+C 또는 Ctrl+Break) 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트와 함께에서 사용 됩니다 <xref:System.ConsoleCancelEventHandler?displayProperty=nameWithType> 고 <xref:System.ConsoleCancelEventArgs?displayProperty=nameWithType>입니다. <xref:System.Console.CancelKeyPress> 이벤트에 이벤트 처리기는 계속 실행 또는 종료 여부를 결정할 수 있도록 Ctrl + C 신호를 가로채 콘솔 응용 프로그램을 사용 하도록 설정 합니다. 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
 사용자가 Ctrl + Break 또는 Ctrl + C를 누를 때를 <xref:System.Console.CancelKeyPress> 이벤트가 발생 하 고 응용 프로그램의 <xref:System.ConsoleCancelEventHandler> 이벤트 처리기가 실행 됩니다. 이벤트 처리기에 전달 되는 <xref:System.ConsoleCancelEventArgs> 두 가지 유용한 속성이 있는 개체:  
  
-   <xref:System.ConsoleCancelEventArgs.SpecialKey%2A>Ctrl + C를 누르면 사용자로 인해 처리기가 호출 여부를 확인할 수 있습니다 (속성 값이 <xref:System.ConsoleSpecialKey.ControlC?displayProperty=nameWithType>) 또는 Ctrl + Break (속성 값이 <xref:System.ConsoleSpecialKey.ControlBreak?displayProperty=nameWithType>).  
  
-   <xref:System.ConsoleCancelEventArgs.Cancel%2A>를 어떻게 응용 프로그램에 사용자에 게 응답 키를 눌러 Ctrl + C 또는 Ctrl + Break를 확인할 수 있습니다. 기본적으로 <xref:System.ConsoleCancelEventArgs.Cancel%2A> 속성은 `false`, 프로그램 종료 이벤트 처리기가 종료 될 때 실행이 원인입니다. 해당 속성을 변경 `true` 응용 프로그램 실행을 계속 되도록 지정 합니다.  
  
> [!TIP]
>  응용 프로그램의 요구 사항이 단순한, 하는 경우 사용할 수 있습니다는 <xref:System.Console.TreatControlCAsInput%2A> 대신이 이벤트는 속성입니다. 이 속성을 설정 하 여 `false`, 사용자가 Ctrl + C를 누르면 응용 프로그램을 항상 종료 되는 것을 확인할 수 있습니다. 로 설정 하 여 `true`, Ctrl + C를 눌러 응용 프로그램을 종료 하지는 확인할 수 있습니다.  
  
 이 이벤트에 대 한 이벤트 처리기는 스레드 풀 스레드에서 실행 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 방법을 <xref:System.Console.CancelKeyPress> 이벤트가 사용 됩니다. 읽기 작업이 중단 되는 Ctrl + C를 누르면 및 `myHandler` 이벤트 처리기가 호출 됩니다. 이벤트 처리기에 진입할 때 합니다 <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> 속성은 `false`, 즉, 이벤트 처리기가 종료 될 때 현재 프로세스가 종료 됩니다. 그러나 이벤트 처리기를 설정 합니다는 <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=nameWithType> 속성을 `true`, 프로세스 종료 되지는 것입니다. 읽기 작업은 다시 시작을 의미 합니다.  
  
 [!code-cpp[console.cancelkeypress#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cancelkeypress/cpp/ckp.cpp#1)]
 [!code-csharp[console.cancelkeypress#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cancelkeypress/cs/ckp.cs#1)]
 [!code-vb[console.cancelkeypress#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cancelkeypress/vb/ckp.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="T:System.ConsoleCancelEventArgs" />
        <altmember cref="T:System.ConsoleCancelEventHandler" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public static bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CapsLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CapsLock : bool" Usage="System.Console.CapsLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Caps Lock 키보드 토글의 설정 또는 해제 여부를 나타내는 값을 가져옵니다.</summary>
        <value>Caps Lock이 설정되어 있으면 <see langword="true" />이고, Caps Lock이 해제되어 있으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Console.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>콘솔 버퍼와 해당 콘솔 창에서 표시 정보를 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 <xref:System.Console.Clear%2A> 메서드는 MS-DOS 호출 `cls` 명령 프롬프트 창에서 명령을 합니다. 경우는 <xref:System.Console.Clear%2A> 메서드 호출 되 면 커서 창의 왼쪽 위 모퉁이에 자동으로 스크롤 하 고 화면 버퍼의 내용을 현재 전경 배경색을 사용 하 여 공백으로 설정 됩니다.  
  
> [!NOTE]
>  호출을 시도 합니다 <xref:System.Console.Clear%2A> 메서드는 콘솔 응용 프로그램의 출력을 파일로 리디렉션되는 경우 throw를 <xref:System.IO.IOException>입니다. 이 방지 하려면 항상 호출을 래핑하는 <xref:System.Console.Clear%2A> 에서 메서드를 `try`...`catch` 블록입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Console.Clear%2A> 루프를 실행 하기 전에 콘솔의 선택을 취소 하는 방법 사용자 전경 및 배경 색을 선택 하 고 표시할 문자열을 입력 하 라는 메시지가 표시 됩니다. 사용자는 프로그램을 종료 하지 않도록 선택 하면 콘솔의 원래 배경색과 전경색 복원 됩니다 및 <xref:System.Console.Clear%2A> 루프를 다시 실행 하기 전에 다시 호출 됩니다.  
  
 [!code-csharp[System.Console.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.clear/cs/clear1.cs#1)]
 [!code-vb[System.Console.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.clear/vb/clear1.vb#1)]  
  
 의존 하는 예제는 `GetKeyPress` 전경 및 배경 색을 사용자의 선택의 유효성을 검사 하는 방법입니다.  
  
 이 예제에서는 합니다 <xref:System.Console.CursorLeft%2A> 하 고 <xref:System.Console.CursorTop%2A> 속성 및 <xref:System.Console.SetCursorPosition%2A> 및 <xref:System.Console.Clear%2A> 메서드. 이 예제에서는 5 개 문자를 조합 하 여 5 문자가 사각형으로 그릴 다음 쓰기 발생할 위치를 결정 하는 커서를 배치 "+", "&#124;", 및 "-" 문자열입니다. 다른 문자열의 조합을 사용 하 여 더 적은 단계로 사각형을 그릴 수는 참고 합니다.  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="CursorLeft">
      <MemberSignature Language="C#" Value="public static int CursorLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorLeft { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorLeft : int with get, set" Usage="System.Console.CursorLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>버퍼 영역 내에서 커서의 열 위치를 가져오거나 설정합니다.</summary>
        <value>커서의 현재 위치(열)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 이 예제에서는 합니다 <xref:System.Console.CursorLeft%2A> 하 고 <xref:System.Console.CursorTop%2A> 속성 및 <xref:System.Console.SetCursorPosition%2A> 및 <xref:System.Console.Clear%2A> 메서드. 이 예제에서는 5 개 문자를 조합 하 여 5 문자가 사각형으로 그릴 다음 쓰기 발생할 위치를 결정 하는 커서를 배치 "+", "&#124;", 및 "-" 문자열입니다. 다른 문자열의 조합을 사용 하 여 더 적은 단계로 사각형을 그릴 수는 참고 합니다.  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Set 작업의 값이 0보다 작습니다.  
  
또는 
집합 작업의 값이 <see cref="P:System.Console.BufferWidth" />보다 크거나 같습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CursorSize">
      <MemberSignature Language="C#" Value="public static int CursorSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorSize" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorSize : int with get, set" Usage="System.Console.CursorSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문자 셀 내부의 커서 높이를 가져오거나 설정합니다.</summary>
        <value>문자 셀 높이의 백분율로 표시되는 커서의 크기입니다. 속성 값의 범위는 1에서 100까지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 커서 모양을 속성 값이 1, 속성 값 100이 셀을 완전히 채우는 셀의 맨 아래에 가로줄에서 이르기까지 달라 집니다.  
  
   
  
## Examples  
 이 예제에서는 <xref:System.Console.CursorSize%2A> 속성입니다. 이 예제에서는 때마다 콘솔 키를 누른 다음 종료 하기 전에 원래 크기로 커서가 복원 커서의 크기를 늘립니다.  
  
 [!code-cpp[console.cursorsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorsize/CPP/csize.cpp#1)]
 [!code-csharp[console.cursorsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorsize/CS/csize.cs#1)]
 [!code-vb[console.cursorsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorsize/VB/csize.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업에 지정된 값이 1보다 작거나 100보다 큽니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CursorTop">
      <MemberSignature Language="C#" Value="public static int CursorTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CursorTop { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CursorTop : int with get, set" Usage="System.Console.CursorTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>버퍼 영역 내에서 커서의 행 위치를 가져오거나 설정합니다.</summary>
        <value>커서의 현재 위치(행)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 이 예제에서는 합니다 <xref:System.Console.CursorLeft%2A> 하 고 <xref:System.Console.CursorTop%2A> 속성 및 <xref:System.Console.SetCursorPosition%2A> 및 <xref:System.Console.Clear%2A> 메서드. 이 예제에서는 5 개 문자를 조합 하 여 5 문자가 사각형으로 그릴 다음 쓰기 발생할 위치를 결정 하는 커서를 배치 "+", "&#124;", 및 "-" 문자열입니다. 다른 문자열의 조합을 사용 하 여 더 적은 단계로 사각형을 그릴 수는 참고 합니다.  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Set 작업의 값이 0보다 작습니다.  
  
또는 
집합 작업의 값이 <see cref="P:System.Console.BufferHeight" />보다 크거나 같습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CursorVisible">
      <MemberSignature Language="C#" Value="public static bool CursorVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CursorVisible" />
      <MemberSignature Language="DocId" Value="P:System.Console.CursorVisible" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CursorVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CursorVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CursorVisible : bool with get, set" Usage="System.Console.CursorVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>커서가 표시되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>커서가 표시되면 <see langword="true" />이고, 표시되지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 이 예제에서는 <xref:System.Console.CursorVisible%2A> 속성입니다. 입력의 첫 번째 열이 '+' 문자를 표시 되거나 입력이 숨겨지도록 예제에서는 커서는 '-' 문자입니다.  
  
 [!code-cpp[console.cursorvis#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorvis/CPP/vis.cpp#1)]
 [!code-csharp[console.cursorvis#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorvis/CS/vis.cs#1)]
 [!code-vb[console.cursorvis#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorvis/VB/vis.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Error" />
      <MemberSignature Language="DocId" Value="P:System.Console.Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Error As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Error { System::IO::TextWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Error : System.IO.TextWriter" Usage="System.Console.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표준 오류 출력 스트림을 가져옵니다.</summary>
        <value>표준 오류 출력 스트림을 나타내는 <see cref="T:System.IO.TextWriter" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 표준 오류 스트림에 기본적으로 콘솔에 설정 됩니다. 사용 하 여 다른 스트림에 설정할 수는 <xref:System.Console.SetError%2A> 메서드. 다시 호출 하 여 수 후 표준 오류 스트림에 리디렉션되는 <xref:System.Console.OpenStandardError%2A> 메서드.  
  
 정보 제공 용 이므로 해당 출력을 파일로 리디렉션되 종종는 콘솔 응용 프로그램 표준 오류 스트림의 통해 사용할 수는 <xref:System.Console.Error%2A> 출력을 리디렉션할 경우에 콘솔에 정보를 표시 하려면 속성을 사용할 수 있습니다. 다음 예제에서는 1부터 시작 하는 한 번에 10 개의 번호에 대 한 제품 테이블을 표시 합니다. 모든 집합 10 개의 숫자가 포함 한 후의 <xref:System.Console.Error%2A> 속성을 다음 집합을 표시할지 여부를 사용자에 게 요청 하는 데 사용 됩니다. 표준 출력을 파일로 리디렉션되는 경우 사용자가 루틴 제품의 다음 집합을 생성할지 여부를 묻습니다.  
  
 [!code-csharp[System.Console.Error#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.error/cs/error1.cs#1)]
 [!code-vb[System.Console.Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.error/vb/error1.vb#1)]  
  
   
  
## Examples  
 다음 예제는 네 개의 공백을 의해 정의 된 값을 사용 하 여 텍스트 파일에서 탭 문자를 대체 하는 ExpandTabs 라는 명령줄 유틸리티는 `tabSize` 변수입니다. 리디렉션합니다 표준 입력 및 출력 파일, 스트림 하지만 사용 하 여는 <xref:System.Console.Error%2A> 콘솔에 표준 오류 스트림에 쓸 속성입니다. 탭 문자를 포함 하는 파일의 이름 및 출력 파일의 이름을 제공 하 여 명령줄에서 시작할 수 있습니다.  
  
 [!code-cpp[Console-EXPANDTABSEX#1](~/samples/snippets/cpp/VS_Snippets_CLR/Console-EXPANDTABSEX/CPP/expandtabsex.cpp#1)]
 [!code-csharp[Console-EXPANDTABSEX#1](~/samples/snippets/csharp/VS_Snippets_CLR/Console-EXPANDTABSEX/CS/expandtabsex.cs#1)]
 [!code-vb[Console-EXPANDTABSEX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Console-EXPANDTABSEX/VB/expandtabsex.vb#1)]  
  
 다음 예제에는 하나 이상의 텍스트 파일의 내용을 콘솔에 표시 하는 간단한 텍스트 파일 뷰어입니다. 명령줄 인수가 없습니다 또는 명령줄 인수로 전달 된 모든 파일이 존재 하지 않는 경우이 예제에서는 호출 하는 경우는 <xref:System.Console.SetError%2A> 오류 정보를 파일로 리디렉션하는 메서드를 호출 합니다 <xref:System.Console.OpenStandardError%2A> 표준 오류를 썼는지 중 메서드 스트림, 및 오류 정보를 파일에 작성 된 임을 나타냅니다.  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 합니다 <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> 속성이 `true` 오류 스트림에 썼는지 하기 전에 합니다. 이렇게 하면는 출력은 콘솔에 즉시 전송 되지 않고 버퍼링 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ForegroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor ForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor ForegroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Console.ForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ForegroundColor As ConsoleColor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ConsoleColor ForegroundColor { ConsoleColor get(); void set(ConsoleColor value); };" />
      <MemberSignature Language="F#" Value="member this.ForegroundColor : ConsoleColor with get, set" Usage="System.Console.ForegroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>콘솔의 전경색을 가져오거나 설정합니다.</summary>
        <value>표시되는 각 문자의 색인 콘솔의 전경색을 지정하는 <see cref="T:System.ConsoleColor" />입니다. 기본값은 회색입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows 기반 응용 프로그램의 경우에 콘솔을 존재 하지 않는 가져오기 작업을 반환 합니다 <xref:System.ConsoleColor.Gray>합니다.  
  
   
  
## Examples  
 다음 예제에서는 확인 하는지 여부를 콘솔의 배경 색은 검정, 인 경우에 배경색이 빨간색과 검정색 전경색을 변경 합니다.  
  
 [!code-csharp[System.ConsoleColor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/Example2.cs#2)] 
 [!code-vb[System.ConsoleColor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/Example2.vb#2)]  
  
 값을 저장 하는 다음 예제는 <xref:System.ConsoleColor> 배열에는 열거형의 현재 값을 저장 하 고는 <xref:System.Console.BackgroundColor%2A> 및 <xref:System.Console.ForegroundColor%2A> 변수에 속성입니다. 각 색의 전경색을 다음 변경 합니다 <xref:System.ConsoleColor> 열거형 색과 일치 하는 현재 백그라운드를 제외한 각 색에 배경색을 변경 하는 <xref:System.ConsoleColor> 열거형을 제외 하 고 일치 하는 색을를 현재 전경색입니다. (전경색 배경색으로 동일한 경우 텍스트가 표시 되지 않습니다.) 마지막으로 호출 하 여 <xref:System.Console.ResetColor%2A> 원래 콘솔 색을 복원 하는 방법입니다.  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">집합 작업에서 지정된 색이 <see cref="T:System.ConsoleColor" />의 유효한 멤버가 아닙니다. </exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="In">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader In { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextReader In" />
      <MemberSignature Language="DocId" Value="P:System.Console.In" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property In As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextReader ^ In { System::IO::TextReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.In : System.IO.TextReader" Usage="System.Console.In" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표준 입력 스트림을 가져옵니다.</summary>
        <value>표준 입력 스트림을 나타내는 <see cref="T:System.IO.TextReader" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 기본적으로 표준 입력 스트림으로 설정 됩니다. 이 속성을 사용 하 여 다른 스트림에 <xref:System.Console.SetIn%2A> 메서드.  
  
 표준 입력 스트림에서 읽기 작업을 동기적으로 실행 합니다. 즉, 지정 된 읽기 작업이 완료 될 때까지 차단 합니다. 그렇습니다 심지어 경우 비동기 메서드를 같은 <xref:System.IO.TextReader.ReadLineAsync%2A>, 라고 하는 <xref:System.IO.TextReader> 에서 반환 된 개체는 <xref:System.Console.In%2A> 속성입니다.  
  
   
  
## Examples  
 다음 샘플에서는 사용 된 `In` 속성입니다.  
  
 [!code-cpp[consolein#1](~/samples/snippets/cpp/VS_Snippets_CLR/consolein/CPP/consolein.cpp#1)]
 [!code-csharp[consolein#1](~/samples/snippets/csharp/VS_Snippets_CLR/consolein/CS/consolein.cs#1)]
 [!code-vb[consolein#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/consolein/VB/consolein.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Console.OpenStandardInput" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="InputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding InputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding InputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.InputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property InputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ InputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InputEncoding : System.Text.Encoding with get, set" Usage="System.Console.InputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>콘솔이 입력을 읽기 위해 사용하는 인코딩을 가져오거나 설정합니다.</summary>
        <value>콘솔 입력을 읽는 데 사용되는 인코딩입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘솔 입력 키보드 입력을 해당 문자로 변환 인코딩을 사용 합니다. 입력 인코딩을 코드 페이지를 통합 256 키보드 문자 코드를 개별 문자에 매핑합니다. 여러 코드 페이지에는 일반적으로 언어 또는 언어 그룹에 대해 사용자 지정된 여러 특수 문자가 들어 있습니다.  
  
 부터 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 속성 가져오기 작업에는 콘솔의 현재 입력 인코딩하는 대신 캐시 된 값을 반환할 수 있습니다. 경우 발생할 수 있습니다 값을 <xref:System.Console.InputEncoding%2A> 할당 이외의 다른 수단으로 속성을 수정 합니다 <xref:System.Console.InputEncoding%2A> 는 Windows를 호출 하는 등의 속성을 `SetConsoleCP` 함수 또는 사용 하 여를 `chcp` PowerShell 스크립트에서 명령을 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">설정 작업에서 <see langword="null" /> 속성 값이 올바르지 않습니다.</exception>
        <exception cref="T:System.IO.IOException">이 작업을 실행하는 동안 오류가 발생했습니다.</exception>
        <exception cref="T:System.Security.SecurityException">응용 프로그램에 이 작업을 수행할 수 있는 권한이 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">읽기 및 최상위 창 및 하위 창에 작성 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsErrorRedirected">
      <MemberSignature Language="C#" Value="public static bool IsErrorRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsErrorRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsErrorRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsErrorRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsErrorRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsErrorRedirected : bool" Usage="System.Console.IsErrorRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>오류 출력 스트림이 표준 오류 스트림에서 리디렉션되었는지를 나타내는 값을 가져옵니다.</summary>
        <value>오류 출력이 리디렉션되면 <see langword="true" />이고, 리디렉션되지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="IsInputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsInputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsInputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInputRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputRedirected : bool" Usage="System.Console.IsInputRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>입력이 표준 입력 스트림에서 리디렉션되었는지를 나타내는 값을 가져옵니다.</summary>
        <value>입력이 리디렉션되면 <see langword="true" />이고, 리디렉션되지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
        <altmember cref="M:System.Console.OpenStandardInput" />
      </Docs>
    </Member>
    <Member MemberName="IsOutputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsOutputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsOutputRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Console.IsOutputRedirected" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsOutputRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsOutputRedirected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOutputRedirected : bool" Usage="System.Console.IsOutputRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>출력이 표준 출력 스트림에서 리디렉션되었는지를 나타내는 값을 가져옵니다.</summary>
        <value>출력이 리디렉션되면 <see langword="true" />이고, 리디렉션되지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
        <altmember cref="M:System.Console.OpenStandardError" />
      </Docs>
    </Member>
    <Member MemberName="KeyAvailable">
      <MemberSignature Language="C#" Value="public static bool KeyAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeyAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Console.KeyAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property KeyAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeyAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyAvailable : bool" Usage="System.Console.KeyAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>입력 스트림에서 키 누름을 사용할 수 있는지를 나타내는 값을 가져옵니다.</summary>
        <value>키 누름을 사용할 수 있으면 <see langword="true" />이고, 사용할 수 없으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성 값을 즉시 반환 됩니다. 즉,는 <xref:System.Console.KeyAvailable%2A> 속성 키 누름을 사용할 때까지 입력을 차단 하지 않습니다.  
  
 사용 하 여는 <xref:System.Console.KeyAvailable%2A> 만 함께에서 속성을 <xref:System.Console.ReadKey%2A> 메서드를 하지는 <xref:System.Console.Read%2A> 또는 <xref:System.Console.ReadLine%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Console.KeyAvailable%2A> 키를 누를 때까지 실행 되는 루프를 만들 속성입니다.  
  
 [!code-cpp[console.keyavailable#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.keyavailable/CPP/ka.cpp#1)]
 [!code-csharp[console.keyavailable#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.keyavailable/CS/ka.cs#1)]
 [!code-vb[console.keyavailable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.keyavailable/VB/ka.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.InvalidOperationException">표준 입력이 키보드 대신에 파일로 리디렉션됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowHeight">
      <MemberSignature Language="C#" Value="public static int LargestWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LargestWindowHeight : int" Usage="System.Console.LargestWindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 글꼴 및 화면 해상도에 따라 콘솔 창 행의 가능한 최대 수를 가져옵니다.</summary>
        <value>콘솔 창의 가능한 최대 높이(행)입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowWidth">
      <MemberSignature Language="C#" Value="public static int LargestWindowWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.LargestWindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LargestWindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LargestWindowWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LargestWindowWidth : int" Usage="System.Console.LargestWindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 글꼴 및 화면 해상도에 따라 콘솔 창 열의 가능한 최대 수를 가져옵니다.</summary>
        <value>콘솔 창의 가능한 최대 너비(열)입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveBufferArea">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>화면 버퍼의 지정한 소스 영역을 지정한 대상 영역에 복사합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="F#" Value="static member MoveBufferArea : int * int * int * int * int * int -&gt; unit" Usage="System.Console.MoveBufferArea (sourceLeft, sourceTop, sourceWidth, sourceHeight, targetLeft, targetTop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTop" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceWidth" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceHeight" Type="System.Int32" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetLeft" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetTop" Type="System.Int32" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceLeft">소스 영역의 맨 왼쪽 열입니다.</param>
        <param name="sourceTop">소스 영역의 맨 위 행입니다.</param>
        <param name="sourceWidth">소스 영역에 있는 열의 수입니다.</param>
        <param name="sourceHeight">소스 영역에 있는 행의 수입니다.</param>
        <param name="targetLeft">대상 영역의 맨 왼쪽 열입니다.</param>
        <param name="targetTop">대상 영역의 맨 위 행입니다.</param>
        <summary>화면 버퍼의 지정한 소스 영역을 지정한 대상 영역에 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본 및 대상 매개 변수를 현재 화면 버퍼의 경계를 벗어난 위치를 지정 하는 경우 대상 영역에 포함 되는 원본 영역의 부분만 복사 됩니다. 즉, 원본 영역을 현재 화면 버퍼에 맞게 잘립니다.  
  
 <xref:System.Console.MoveBufferArea%2A> 메서드 대상 영역에 소스 영역을 복사 합니다. 대상 영역의 소스 영역을 교차 하지 않는, 소스 영역을 사용 하 여 현재 전경색 및 배경색 공백으로 채워집니다. 그렇지 않으면 소스 영역에 교차 부분이 채워지지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">하나 이상의 매개 변수가 0보다 작습니다.  
  
또는 
 <paramref name="sourceLeft" /> 또는 <paramref name="targetLeft" />가 <see cref="P:System.Console.BufferWidth" />보다 크거나 같습니다.  
  
또는 
 <paramref name="sourceTop" /> 또는 <paramref name="targetTop" />가 <see cref="P:System.Console.BufferHeight" />보다 크거나 같습니다.  
  
또는 
 <paramref name="sourceTop" /> + <paramref name="sourceHeight" />가 <see cref="P:System.Console.BufferHeight" />보다 크거나 같습니다.  
  
또는 
 <paramref name="sourceLeft" /> + <paramref name="sourceWidth" />가 <see cref="P:System.Console.BufferWidth" />보다 크거나 같습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop, char sourceChar, valuetype System.ConsoleColor sourceForeColor, valuetype System.ConsoleColor sourceBackColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveBufferArea (sourceLeft As Integer, sourceTop As Integer, sourceWidth As Integer, sourceHeight As Integer, targetLeft As Integer, targetTop As Integer, sourceChar As Char, sourceForeColor As ConsoleColor, sourceBackColor As ConsoleColor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="F#" Value="static member MoveBufferArea : int * int * int * int * int * int * char * ConsoleColor * ConsoleColor -&gt; unit" Usage="System.Console.MoveBufferArea (sourceLeft, sourceTop, sourceWidth, sourceHeight, targetLeft, targetTop, sourceChar, sourceForeColor, sourceBackColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTop" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceWidth" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceHeight" Type="System.Int32" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetLeft" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetTop" Type="System.Int32" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceChar" Type="System.Char" Index="6" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceForeColor" Type="System.ConsoleColor" Index="7" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceBackColor" Type="System.ConsoleColor" Index="8" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceLeft">소스 영역의 맨 왼쪽 열입니다.</param>
        <param name="sourceTop">소스 영역의 맨 위 행입니다.</param>
        <param name="sourceWidth">소스 영역에 있는 열의 수입니다.</param>
        <param name="sourceHeight">소스 영역에 있는 행의 수입니다.</param>
        <param name="targetLeft">대상 영역의 맨 왼쪽 열입니다.</param>
        <param name="targetTop">대상 영역의 맨 위 행입니다.</param>
        <param name="sourceChar">소스 영역을 채우는 데 사용되는 문자입니다.</param>
        <param name="sourceForeColor">소스 영역을 채우는 데 사용되는 전경색입니다.</param>
        <param name="sourceBackColor">소스 영역을 채우는 데 사용되는 배경색입니다.</param>
        <summary>화면 버퍼의 지정한 소스 영역을 지정한 대상 영역에 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본 및 대상 매개 변수를 현재 화면 버퍼의 경계를 벗어난 위치를 지정 하는 경우 대상 영역에 포함 되는 원본 영역의 부분만 복사 됩니다. 즉, 원본 영역을 현재 화면 버퍼에 맞게 잘립니다.  
  
 <xref:System.Console.MoveBufferArea%2A> 메서드 대상 영역에 소스 영역을 복사 합니다. 대상 영역의 소스 영역을 교차 하지 않는, 소스 영역에서 지정 된 문자로 채워집니다 `sourceChar`, 하 여 지정 된 색을 사용 하 여 `sourceForeColor` 고 `sourceBackColor`입니다. 그렇지 않으면 소스 영역에 교차 부분이 채워지지 않습니다.  
  
 합니다 <xref:System.Console.MoveBufferArea%2A> 아무 작업도 수행 하는 경우 `sourceWidth` 또는 `sourceHeight` 은 0입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">하나 이상의 매개 변수가 0보다 작습니다.  
  
또는 
 <paramref name="sourceLeft" /> 또는 <paramref name="targetLeft" />가 <see cref="P:System.Console.BufferWidth" />보다 크거나 같습니다.  
  
또는 
 <paramref name="sourceTop" /> 또는 <paramref name="targetTop" />가 <see cref="P:System.Console.BufferHeight" />보다 크거나 같습니다.  
  
또는 
 <paramref name="sourceTop" /> + <paramref name="sourceHeight" />가 <see cref="P:System.Console.BufferHeight" />보다 크거나 같습니다.  
  
또는 
 <paramref name="sourceLeft" /> + <paramref name="sourceWidth" />가 <see cref="P:System.Console.BufferWidth" />보다 크거나 같습니다.</exception>
        <exception cref="T:System.ArgumentException">색 매개 변수 중 하나 또는 둘 다가 <see cref="T:System.ConsoleColor" /> 열거형의 멤버가 아닙니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="NumberLock">
      <MemberSignature Language="C#" Value="public static bool NumberLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool NumberLock" />
      <MemberSignature Language="DocId" Value="P:System.Console.NumberLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NumberLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool NumberLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberLock : bool" Usage="System.Console.NumberLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Num Lock 키보드 토글의 설정 또는 해제 여부를 나타내는 값을 가져옵니다.</summary>
        <value>Num Lock이 설정되어 있으면 <see langword="true" />이고, Num Lock이 해제되어 있으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardError">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>표준 오류 스트림을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError();" />
      <MemberSignature Language="F#" Value="static member OpenStandardError : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>표준 오류 스트림을 가져옵니다.</summary>
        <returns>표준 오류 스트림입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는에서 변경 된 후 표준 오류 스트림에 다시 가져오는 데 사용할 수는 <xref:System.Console.SetError%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에는 하나 이상의 텍스트 파일의 내용을 콘솔에 표시 하는 간단한 텍스트 파일 뷰어입니다. 명령줄 인수가 없습니다 또는 명령줄 인수로 전달 된 모든 파일이 존재 하지 않는 경우이 예제에서는 호출 하는 경우는 <xref:System.Console.SetError%2A> 오류 정보를 파일로 리디렉션하는 메서드를 호출 합니다 <xref:System.Console.OpenStandardError%2A> 표준 오류를 썼는지 중 메서드 스트림, 및 오류 정보를 파일에 작성 된 임을 나타냅니다.  
  
 [!code-csharp[System.Console.OpenStandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.openstandarderror/cs/viewtextfile.cs#1)]
 [!code-vb[System.Console.OpenStandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.openstandarderror/vb/viewtextfile.vb#1)]  
  
 합니다 <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> 속성이 `true` 오류 스트림에 썼는지 하기 전에 합니다. 이렇게 하면는 출력은 콘솔에 즉시 전송 되지 않고 버퍼링 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardError (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardError(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardError : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardError bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bufferSize">내부 스트림 버퍼 크기입니다.</param>
        <summary>표준 오류 스트림을 가져와 지정한 버퍼 크기로 설정합니다.</summary>
        <returns>표준 오류 스트림입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는에서 변경 된 후 표준 오류 스트림에 다시 가져오는 데 사용할 수는 <xref:System.Console.SetError%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize" />가 0보다 작거나 같습니다.</exception>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="M:System.Console.SetError(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardInput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>표준 입력 스트림을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput();" />
      <MemberSignature Language="F#" Value="static member OpenStandardInput : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>표준 입력 스트림을 가져옵니다.</summary>
        <returns>표준 입력 스트림입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는에서 변경 된 후 표준 입력된 스트림을 다시 가져오는 데 사용할 수는 <xref:System.Console.SetIn%2A> 메서드.  
  
   
  
## Examples  
 다음 예제를 사용 하 여 `OpenStandardInput` 속성입니다.  
  
 [!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
 [!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
 [!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardInput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardInput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardInput(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardInput : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardInput bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bufferSize">내부 스트림 버퍼 크기입니다.</param>
        <summary>표준 입력 스트림을 가져와 지정한 버퍼 크기로 설정합니다.</summary>
        <returns>표준 입력 스트림입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변경 된 후에 표준 출력 스트림에 다시 가져오는 데 사용할 수 있습니다이 메서드는 <xref:System.Console.SetIn%2A> 메서드.  
  
   
  
## Examples  
 다음 예제를 사용 하 여 `OpenStandardInput` 속성입니다.  
  
 [!code-cpp[System.Console.OpenStandartInput#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CPP/decode.cpp#1)]
 [!code-csharp[System.Console.OpenStandartInput#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.OpenStandartInput/CS/decode.cs#1)]
 [!code-vb[System.Console.OpenStandartInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.OpenStandartInput/VB/decode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize" />가 0보다 작거나 같습니다.</exception>
        <altmember cref="P:System.Console.In" />
        <altmember cref="P:System.Console.IsInputRedirected" />
        <altmember cref="M:System.Console.SetIn(System.IO.TextReader)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStandardOutput">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>표준 출력 스트림을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput();" />
      <MemberSignature Language="F#" Value="static member OpenStandardOutput : unit -&gt; System.IO.Stream" Usage="System.Console.OpenStandardOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>표준 출력 스트림을 가져옵니다.</summary>
        <returns>표준 출력 스트림입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변경 된 후에 표준 출력 스트림에 다시 가져오는 데 사용할 수 있습니다이 메서드는 <xref:System.Console.SetOut%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Console.OpenStandardOutput%2A> 메서드를 사용하는 방법을 보여 줍니다. 탭 문자가 있는 문자열에서 4개의 연속된 공백 문자를 대체합니다. 도구를 실행 하려면 두 명령줄 인수를 제공 해야 합니다. 첫 번째는 표준 입력 스트림을 리디렉션하려는 기존 텍스트 파일의 이름입니다. 두 번째는 표준 출력 스트림을 리디렉션하려는 파일의 이름입니다. 이 파일이 있을 필요는 없습니다. 그러한 경우 해당 내용은 덮어씁니다.  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.OpenStandardOutput(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenStandardOutput (bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenStandardOutput(int bufferSize);" />
      <MemberSignature Language="F#" Value="static member OpenStandardOutput : int -&gt; System.IO.Stream" Usage="System.Console.OpenStandardOutput bufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bufferSize">내부 스트림 버퍼 크기입니다.</param>
        <summary>표준 출력 스트림을 가져와 지정한 버퍼 크기로 설정합니다.</summary>
        <returns>표준 출력 스트림입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변경 된 후에 표준 출력 스트림에 다시 가져오는 데 사용할 수 있습니다이 메서드는 <xref:System.Console.SetOut%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Console.OpenStandardOutput%2A> 메서드를 사용하는 방법을 보여 줍니다. 탭 문자가 있는 문자열에서 4개의 연속된 공백 문자를 대체합니다. 도구를 실행 하려면 두 명령줄 인수를 제공 해야 합니다. 첫 번째는 표준 입력 스트림을 리디렉션하려는 기존 텍스트 파일의 이름입니다. 두 번째는 표준 출력 스트림을 리디렉션하려는 파일의 이름입니다. 이 파일이 있을 필요는 없습니다. 그러한 경우 해당 내용은 덮어씁니다.  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize" />가 0보다 작거나 같습니다.</exception>
        <altmember cref="P:System.Console.Out" />
        <altmember cref="P:System.Console.IsOutputRedirected" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Out">
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Out { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Out" />
      <MemberSignature Language="DocId" Value="P:System.Console.Out" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Out As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::TextWriter ^ Out { System::IO::TextWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Out : System.IO.TextWriter" Usage="System.Console.Out" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표준 출력 스트림을 가져옵니다.</summary>
        <value>표준 출력 스트림을 나타내는 <see cref="T:System.IO.TextWriter" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 기본적으로 표준 출력 스트림에 설정 됩니다. 이 속성을 사용 하 여 다른 스트림에 <xref:System.Console.SetOut%2A> 메서드.  
  
 호출은 `Console.Out.WriteLine` 메서드는 해당 하는 호출에 해당 하는 <xref:System.Console.WriteLine%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Console.Out%2A> 속성을 표준 출력 장치에 응용 프로그램의 현재 디렉터리에서 파일의 이름이 포함 된 배열을 표시 합니다. Files.txt 라는 파일에 표준 출력을 설정 하 고 파일에 대 한 배열 요소를 나열 합니다. 마지막으로, 표준 출력 스트림에 출력을 설정 하 고 다시 배열 요소를 표준 출력 장치에 표시 됩니다.  
  
 [!code-csharp[System.Console.Out#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.out/cs/out1.cs#1)]
 [!code-vb[System.Console.Out#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.out/vb/out1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Console.Error" />
        <altmember cref="P:System.Console.In" />
        <altmember cref="M:System.Console.SetOut(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="OutputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding OutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding OutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Console.OutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ OutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OutputEncoding : System.Text.Encoding with get, set" Usage="System.Console.OutputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>콘솔이 출력을 쓰기 위해 사용하는 인코딩을 가져오거나 설정합니다.</summary>
        <value>콘솔 출력을 쓰는 데 사용되는 인코딩입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘솔 해당 콘솔 표시 문자로 응용 프로그램에서 작성 된 문자를 변환 출력 인코딩을 사용 합니다. 콘솔을 사용 하는 기본 코드 페이지는 시스템 로캘에서 결정 됩니다.  
  
 부터 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 속성 가져오기 작업에는 콘솔의 현재 출력 인코딩이 대신 캐시 된 값을 반환할 수 있습니다. 경우 발생할 수 있습니다 값을 <xref:System.Console.OutputEncoding%2A> 할당 이외의 다른 수단으로 속성을 수정 합니다 <xref:System.Console.OutputEncoding%2A> 는 Windows를 호출 하는 등의 속성을 `SetConsoleOutputCP` 함수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">설정 작업에서 <see langword="null" /> 속성 값이 올바르지 않습니다.</exception>
        <exception cref="T:System.IO.IOException">이 작업을 실행하는 동안 오류가 발생했습니다.</exception>
        <exception cref="T:System.Security.SecurityException">응용 프로그램에 이 작업을 수행할 수 있는 권한이 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">읽기 및 최상위 창 및 하위 창에 작성 합니다.  연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <block subset="none" type="usage"><para>유니코드 인코딩를 <see cref="T:System.Console" /> 클래스는 u t F-8로 인코딩 지원를 <see cref="T:System.Text.UTF8Encoding" /> 클래스를 사용 하 여 시작 합니다 [!INCLUDE[net_v45](~/includes/net-v45-md.md)], utf-16 인코딩을 지원는 <see cref="T:System.Text.UnicodeEncoding" /> 클래스. UTF-32 인코딩을 <see cref="T:System.Text.UTF32Encoding" /> 클래스가 지원 되지 않습니다. UTF-32 throw 출력 인코딩을 설정 하려고 한 <see cref="T:System.IO.IOException" />합니다.  
  
참고는 콘솔에 유니코드 문자를 표시 했습니다. 다음이 필요 합니다. 
-콘솔 문자가 표시 되려면 Lucida Console 또는 Consolas, 같은 트루타입 글꼴을 사용 해야 합니다.  
  
콘솔에서 사용 되는-글꼴 특정 문자 또는 문자 모양을 표시할 수를 정의 해야 합니다. 콘솔 글꼴 기본 글꼴에 해당 문자에 대 한 정의가 없는 경우 연결 된 글꼴의 문자 모양에 표시할 연결의 사용할 수 있습니다.  
  
유니코드 지원에 대 한 자세한 내용은 "유니코드 지원에 대 한 the 콘솔" 섹션에서 참조는 콘솔이 인코딩는 <see cref="T:System.Console" /> 클래스입니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Read" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Read();" />
      <MemberSignature Language="F#" Value="static member Read : unit -&gt; int" Usage="System.Console.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>표준 입력 스트림에서 다음 문자를 읽습니다.</summary>
        <returns>입력 스트림의 다음 문자를 반환하거나 현재 읽을 문자가 더 이상 없으면 -1을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Console.Read%2A> 메서드는 입력된 문자를 입력 하는 동안 반환 차단; 누르면 종료는 <xref:System.ConsoleKey.Enter> 키입니다. 플랫폼별 줄 종료 시퀀스를 입력 추가 Enter 키를 눌러 (예: Windows 캐리지 리턴-줄 바꿈 시퀀스 추가). 에 대 한 후속 호출을 <xref:System.Console.Read%2A> 메서드는 한 번에 사용자 입력된 한 문자를 검색 합니다. 마지막 문자를 검색 한 후 <xref:System.Console.Read%2A> 반환 차단 다시 고 주기가 반복 됩니다.  
  
> [!IMPORTANT]
>  합니다 <xref:System.Console.ReadLine%2A> 메서드 또는 <xref:System.Console.KeyAvailable%2A> 속성 및 <xref:System.Console.ReadKey%2A> 메서드는 사용 하는 것이 좋습니다는 <xref:System.Console.Read%2A> 메서드.  
  
 메서드는 다음 작업 중 하나를 수행 하지 않으면-1 반환 하지 않는 note:  
  
-   동시에 키를 눌러 합니다 <xref:System.ConsoleModifiers.Control> 보조키 및 <xref:System.ConsoleKey.Z> 콘솔 키 (Ctrl + Z), 파일 끝 조건을 신호를 보냅니다.  
  
-   파일 끝 조건에서 Windows F6 함수 키 등을 알리는 동일한 키를 누릅니다.  
  
-   실제 파일의 끝 문자에는 텍스트 파일과 같은 원본에 입력된 스트림을 리디렉션하려 합니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Console.Read%2A> 메서드.  
  
 [!code-cpp[console.read#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.read/CPP/read.cpp#1)]
 [!code-csharp[console.read#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.read/CS/read.cs#1)]
 [!code-vb[console.read#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.read/VB/read.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadKey">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>다음 문자나 사용자가 누른 기능 키를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey () As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey();" />
      <MemberSignature Language="F#" Value="static member ReadKey : unit -&gt; ConsoleKeyInfo" Usage="System.Console.ReadKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>다음 문자나 사용자가 누른 기능 키를 가져옵니다. 누른 키는 콘솔 창에 표시됩니다.</summary>
        <returns>누른 콘솔 키에 해당하는 <see cref="T:System.ConsoleKey" /> 상수 및 유니코드 문자(있을 경우)를 설명하는 개체입니다. <see cref="T:System.ConsoleKeyInfo" /> 개체는 하나 이상의 Shift, Alt 또는 Ctrl 보조키를 콘솔 키와 동시에 눌렀는지 여부를 나타내는 <see cref="T:System.ConsoleModifiers" /> 값을 비트 조합으로 나타냅니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Console.ReadKey%2A> 메서드 기다리고, 즉, 스레드 실행 블록을 <xref:System.Console.ReadKey%2A> 문자나 함수 키를 누를 때까지 메서드. 하나 이상의 Alt, Ctrl 또는 Shift 보조키를 사용 하 여 조합에서 문자 또는 함수 키를 누를 수입니다. 그러나 자체적으로 보조 키를 누르면 발생 하지 것입니다는 <xref:System.Console.ReadKey%2A> 메서드를 반환 합니다.  
  
 응용 프로그램에 따라 사용 하려는 합니다 <xref:System.Console.ReadKey%2A> 와 함께에서 메서드는 <xref:System.Console.KeyAvailable%2A> 속성입니다.  
  
 합니다 <xref:System.Console.ReadKey%2A> 표준 입력 파일을 리디렉션되는 경우에 키보드에서 읽고 메서드는 <xref:System.Console.SetIn%2A> 메서드.  
  
   
  
## Examples  
 가장 일반적인 이유 중 하나가 사용 하는 <xref:System.Console.ReadKey> 방법은 키를 누르면와 앱을 종료 하거나 정보는 추가 창이 표시 될 때까지 프로그램 실행을 중단 하는 것입니다. 다음 예제에서는 <xref:System.Console.ReadKey> 사용자를 앱을 종료 하기 전에 Enter 키를 누를 때까지 대기 하는 방법입니다.  
  
 [!code-csharp[System.Console.ReadKey#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey1.cs#1)]
 [!code-vb[System.Console.ReadKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey1.vb#1)]  
  
 이 오버 로드는 <xref:System.Console.ReadKey%2A> 기본적으로 메서드를 누르면 콘솔에 표시할 수 있는 모든 키는 에코 합니다. 경고를 호출 합니다 <xref:System.Console.ReadKey%2A> 메서드는 `intercept` 인수의 `true`합니다.  
  
 다음 예제에서는 <xref:System.Console.ReadKey> 사용자가 누른 키에 대 한 정보를 표시 하는 방법입니다. 
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Console.In" /> 속성이 콘솔 이외의 다른 스트림에서 리디렉션됩니다.</exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey (bool intercept);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey(bool intercept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadKey (intercept As Boolean) As ConsoleKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ConsoleKeyInfo ReadKey(bool intercept);" />
      <MemberSignature Language="F#" Value="static member ReadKey : bool -&gt; ConsoleKeyInfo" Usage="System.Console.ReadKey intercept" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intercept" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="intercept">누른 키를 콘솔 창에 표시할지 여부를 확인합니다. 누른 키를 표시하지 않으려면 <see langword="true" />이고 표시하려면 <see langword="false" />입니다.</param>
        <summary>다음 문자나 사용자가 누른 기능 키를 가져옵니다. 누른 키는 선택적으로 콘솔 창에 표시됩니다.</summary>
        <returns>누른 콘솔 키에 해당하는 <see cref="T:System.ConsoleKey" /> 상수 및 유니코드 문자(있을 경우)를 설명하는 개체입니다. <see cref="T:System.ConsoleKeyInfo" /> 개체는 하나 이상의 Shift, Alt 또는 Ctrl 보조키를 콘솔 키와 동시에 눌렀는지 여부를 나타내는 <see cref="T:System.ConsoleModifiers" /> 값을 비트 조합으로 나타냅니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Console.ReadKey%2A> 메서드 기다리고, 즉, 스레드 실행 블록을 <xref:System.Console.ReadKey%2A> 문자나 함수 키를 누를 때까지 메서드. 하나 이상의 Alt, Ctrl 또는 Shift 보조키를 사용 하 여 조합에서 문자 또는 함수 키를 누를 수입니다. 그러나 자체적으로 보조 키를 누르면 발생 하지 것입니다는 <xref:System.Console.ReadKey%2A> 메서드를 반환 합니다.  
  
 경우는 `intercept` 매개 변수는 `true`, 누른된 키를 가로채 고 하지 콘솔 창에 표시 된이 고 그렇지 않으면, 누른된 키 표시 됩니다.  
  
 응용 프로그램에 따라 사용 하려는 합니다 <xref:System.Console.ReadKey%2A> 와 함께에서 메서드는 <xref:System.Console.KeyAvailable%2A> 속성입니다.  
  
 합니다 <xref:System.Console.ReadKey%2A> 표준 입력 파일을 리디렉션되는 경우에 키보드에서 읽고 메서드는 <xref:System.Console.SetIn%2A> 메서드.  
  
   
  
## Examples  
 가장 일반적인 이유 중 하나가 사용 하는 <xref:System.Console.ReadKey%2A> 방법은 키를 누르면와 앱을 종료 하거나 정보는 추가 창이 표시 될 때까지 프로그램 실행을 중단 하는 것입니다. 다음 예제에서는 <xref:System.Console.ReadKey%28System.Boolean%29> 사용자를 앱을 종료 하기 전에 Enter 키를 누를 때까지 대기 하는 방법입니다. 사용자가 다른 키를 누르면이 표시 됩니다 콘솔로 note 합니다.  
  
 [!code-csharp[System.Console.ReadKey#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Console.ReadKey/cs/ReadKey2.cs#2)]
 [!code-vb[System.Console.ReadKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Console.ReadKey/vb/ReadKey2.vb#2)]  
  
 다음 예제에서는 <xref:System.Console.ReadKey%28System.Boolean%29> 콘솔에 해당 키를 에코 하지 않고 사용자가 누른 키에 대 한 정보를 표시 하는 방법입니다.  
  
 [!code-cpp[console.readkey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey2/CPP/rkbool.cpp#1)]
 [!code-csharp[console.readkey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey2/CS/rkbool.cs#1)]
 [!code-vb[console.readkey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey2/VB/rkbool.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Console.In" /> 속성이 콘솔 이외의 다른 스트림에서 리디렉션됩니다.</exception>
        <altmember cref="T:System.ConsoleKey" />
        <altmember cref="P:System.Console.KeyAvailable" />
        <altmember cref="P:System.Console.TreatControlCAsInput" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public static string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="static member ReadLine : unit -&gt; string" Usage="System.Console.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>표준 입력 스트림에서 다음 줄의 문자를 읽습니다.</summary>
        <returns>입력 스트림의 다음 줄 문자를 반환하거나 사용할 수 있는 줄이 더 이상 없으면 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Console.ReadLine%2A> 메서드는 표준 입력 스트림에서 한 줄을 읽습니다. (줄의 정의 대 한 참조를 단락 다음 목록 뒤). 이는 다음을 의미합니다.  
  
-   장치가 있는 경우 표준 입력 키보드를 <xref:System.Console.ReadLine%2A> 사용자가 될 때까지 차단 메서드를 **Enter** 키입니다.  
  
     가장 일반적인 이유 중 하나가 사용 하는 <xref:System.Console.ReadLine%2A> 메서드는 콘솔의 선택을 취소 하 고 새 정보를 표시 하기 전에 프로그램 실행을 일시 중지 또는 응용 프로그램을 종료 하기 전에 Enter 키를 눌러 사용자에 게 프롬프트. 다음은 이에 대한 예입니다.  
  
     [!code-cpp[System.Console.ReadLine#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/ReadLineSimple.cpp#6)]
     [!code-csharp[System.Console.ReadLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLineSimple.cs#6)]
     [!code-vb[System.Console.ReadLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLineSimple.vb#6)]  
  
-   표준 입력을 파일로 리디렉션되는 경우는 <xref:System.Console.ReadLine%2A> 메서드 파일에서 텍스트 줄을 읽습니다. 예를 들어, 다음은 ReadLine1.txt 라는 텍스트 파일입니다.  
  
    ```  
  
    This is the first line.  
    This is the second line.  
    This is the third line.  
    This is the fourth line.  
  
    ```  
  
     다음 예제에서는 <xref:System.Console.ReadLine%2A> 파일에서 리디렉션되는 입력을 읽는 방법. 메서드가 반환 될 때 읽기 작업 종료 `null`, 줄이 더 남아 읽을 수 있는지 나타냅니다.  
  
     [!code-csharp[System.Console.ReadLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine3.cs#3)]
     [!code-vb[System.Console.ReadLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine3.vb#3)]  
  
     이 예제를 실행 하는 명명 된 ReadLine1.exe 컴파일한 후 실행할 수 있습니다 구문 사용 하 여 명령줄에서  
  
    ```  
    ReadLine1 < ReadLine1.txt  
    ```  
  
     파일의 내용을 읽고 콘솔에 표시 합니다.  
  
 줄 문자가 뒤에 캐리지 리턴 (16 진수 0x000d), 줄 바꿈 (16 진수 0x000a) 또는 값의 시퀀스로 정의 됩니다는 <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> 속성입니다. 반환된 된 문자열에는 종결 문자가 없습니다. 기본적으로 메서드를 256 자 입력된 버퍼에서 입력을 읽습니다. 이 포함 되어 있으므로 <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> 문자를 메서드 최대 254 자의 문자를 포함 하는 줄을 읽을 수 있습니다. 긴 줄을 읽으려면 호출을 <xref:System.Console.OpenStandardInput%28System.Int32%29> 메서드.  
  
 <xref:System.Console.ReadLine%2A> 메서드가 동기적으로 실행 합니다. 즉, 줄 읽기 또는 Ctrl + Z 키를 누를 때까지 차단 합니다. <xref:System.Console.In%2A> 속성이 반환을 <xref:System.IO.TextReader> 표준 입력된 스트림을 나타내는 했으며 동기를 개체 <xref:System.IO.TextReader.ReadLine%2A?displayProperty=nameWithType> 메서드와 비동기 <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> 메서드. 그러나 콘솔의 표준 입력된 스트림을 사용 하는 경우는 <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=nameWithType> 비동기가 아닌 동기적으로 실행 하 고 반환을 `Task<String>` 읽기 작업이 완료 된 후에 합니다.  
  
 이 메서드가 throw 하는 경우는 <xref:System.OutOfMemoryException> 예외, 기본 판독기의 위치가 <xref:System.IO.Stream> 개체는 메서드를 읽지 못한 자 이지만 내부에 이미 읽은 문자 수 만큼 앞에 <xref:System.Console.ReadLine%2A> 버퍼는 무시 됩니다. 이미 읽은 문자를 복구할 수 없는 및 다시 초기화에 의해서만 액세스할 수 있습니다 스트림에서 판독기의 위치를 변경할 수 없으므로는 <xref:System.IO.TextReader>합니다. 스트림 내에서 처음 위치를 알 수 없는 경우는 스트림이 검색을 기본 지원 하지 않는 <xref:System.IO.Stream> 도 다시 초기화 해야 합니다. 이러한 상황을 피하려면 및 강력한 코드를 생성 하기 위해 사용 해야 합니다 <xref:System.Console.KeyAvailable%2A> 속성 및 <xref:System.Console.ReadKey%2A> 읽기 미리 할당 된 버퍼의 문자 메서드와 저장소입니다.  
  
 메서드가 반환 하는 경우 메서드는 콘솔에서 입력을 읽기 경우 Ctrl + Z 문자를 눌렀는지를 `null`입니다. 이 그러면 추가 키보드를 방지 하기 위해 사용자 입력 될 때를 <xref:System.Console.ReadLine%2A> 루프에서 호출 됩니다. 다음 예제에서는이 시나리오를 보여 줍니다.  
  
 [!code-cpp[System.Console.ReadLine#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.ReadLine/cpp/readline2.cpp#1)]
 [!code-csharp[System.Console.ReadLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.ReadLine/cs/ReadLine2.cs#1)]
 [!code-vb[System.Console.ReadLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.ReadLine/vb/ReadLine2.vb#1)]  
  
   
  
## Examples  
 다음 예제에서는 두 명령줄 인수: 기존 텍스트 파일의 이름 및 출력을 쓸 파일의 이름입니다. 기존 텍스트 파일을 열고 해당 파일에 표준 키보드에서 입력을 리디렉션합니다. 또한 출력 파일에 콘솔에서 표준 출력을으로 리디렉션합니다. 사용 하 여는 <xref:System.Console.ReadLine%2A?displayProperty=nameWithType> 파일에서 각 줄을 읽을 메서드는 탭 문자를 사용 하 여 네 개의 공백의 모든 시퀀스를 대체 하며 사용은 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 출력 파일에 결과 기록 하는 방법입니다.  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.OutOfMemoryException">메모리가 부족하여 반환된 문자열의 버퍼를 할당할 수 없습니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">다음 줄의 문자 수가 <see cref="F:System.Int32.MaxValue" />보다 큽니다.</exception>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="ResetColor">
      <MemberSignature Language="C#" Value="public static void ResetColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.ResetColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetColor();" />
      <MemberSignature Language="F#" Value="static member ResetColor : unit -&gt; unit" Usage="System.Console.ResetColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>콘솔의 전경색과 배경색을 해당 기본값으로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 프로세스를 시작 했을 때 존재 하는 색 전경색 및 배경색 복원 됩니다. 자세한 내용은 참조는 <xref:System.Console.ForegroundColor%2A> 및 <xref:System.Console.BackgroundColor%2A> 속성입니다.  
  
   
  
## Examples  
 값을 저장 하는 다음 예제는 <xref:System.ConsoleColor> 배열에는 열거형의 현재 값을 저장 하 고는 <xref:System.Console.BackgroundColor%2A> 및 <xref:System.Console.ForegroundColor%2A> 변수에 속성입니다. 각 색의 전경색을 다음 변경 합니다 <xref:System.ConsoleColor> 열거형 색과 일치 하는 현재 백그라운드를 제외한 각 색에 배경색을 변경 하는 <xref:System.ConsoleColor> 열거형을 제외 하 고 일치 하는 색을를 현재 전경색입니다. (전경색 배경색으로 동일한 경우 텍스트가 표시 되지 않습니다.) 마지막으로 호출 하 여 <xref:System.Console.ResetColor%2A> 원래 콘솔 색을 복원 하는 방법입니다.  
  
 [!code-csharp[System.ConsoleColor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.consolecolor/cs/foregroundcolor3.cs#1)]
 [!code-vb[System.ConsoleColor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.consolecolor/vb/foregroundcolor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetBufferSize">
      <MemberSignature Language="C#" Value="public static void SetBufferSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBufferSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetBufferSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetBufferSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBufferSize(int width, int height);" />
      <MemberSignature Language="F#" Value="static member SetBufferSize : int * int -&gt; unit" Usage="System.Console.SetBufferSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="height" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="width">측정된 버퍼 영역의 너비(열)입니다.</param>
        <param name="height">측정된 버퍼 영역의 높이(행)입니다.</param>
        <summary>화면 버퍼의 높이와 너비를 지정한 값으로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제는 <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, 및 <xref:System.Console.CursorVisible%2A> 속성 및 <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, 및 <xref:System.Console.ReadKey%2A> 메서드입니다. 이 예제에서는 화면 버퍼 너비를 기준으로 화면 버퍼에서을 표 패턴을 그립니다. 다음 예제에서는 콘솔 창에서 아래쪽 화살표, 왼쪽 화살표 또는 오른쪽 화살표 콘솔 키를 누르면 위쪽 화살표는 응답을 이동 합니다. Grid 패턴을 사용 하면 화면 버퍼에 상대적인 콘솔 창의 이동 상태를 확인할 수 있습니다.  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> 또는 <paramref name="width" />가 0보다 작거나 같습니다.  
  
또는 
 <paramref name="height" /> 또는 <paramref name="width" />가 <see cref="F:System.Int16.MaxValue" />보다 크거나 같습니다.  
  
또는 
 <paramref name="width" />가 <see cref="P:System.Console.WindowLeft" /> + <see cref="P:System.Console.WindowWidth" />보다 작습니다.  
  
또는 
 <paramref name="height" />가 <see cref="P:System.Console.WindowTop" /> + <see cref="P:System.Console.WindowHeight" />보다 작습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public static void SetCursorPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCursorPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetCursorPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCursorPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCursorPosition(int left, int top);" />
      <MemberSignature Language="F#" Value="static member SetCursorPosition : int * int -&gt; unit" Usage="System.Console.SetCursorPosition (left, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="top" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left">커서의 열 위치입니다. 열은 0부터 시작하여 왼쪽부터 오른쪽까지 번호가 지정됩니다.</param>
        <param name="top">커서의 행 위치입니다. 행은 0부터 시작하여 위에서 아래로 번호가 지정됩니다.</param>
        <summary>커서의 위치를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Console.SetCursorPosition%2A> 콘솔 창에 다음 쓰기 작업을 시작할 위치를 지정 하는 방법입니다. 지정 된 커서 위치를 콘솔 창에 현재 표시 되는 영역 밖에 창 원본 커서가 표시 되도록 자동으로 변경 합니다.  
  
 콘솔 창에 문자를 쓸 때마다 다음 문자 위치에 커서를 자동으로 이동 합니다. 커서 콘솔 창의 맨 아래 오른쪽 문자 위치에 있는 경우 다음 쓰기 작업을 수행 하면 스크롤 커서가 계속 표시 되므로 콘솔 창 스크롤을 사용 하 여 콘솔 창을 않고 아래 오른쪽 문자 위치에 문자를 쓸 것인지는 <xref:System.Console.MoveBufferArea%2A> 문자를 해당 위치로 이동 하는 방법입니다.  
  
   
  
## Examples  
 이 예제에서는 합니다 <xref:System.Console.CursorLeft%2A> 하 고 <xref:System.Console.CursorTop%2A> 속성 및 <xref:System.Console.SetCursorPosition%2A> 및 <xref:System.Console.Clear%2A> 메서드. 이 예제에서는 5 개 문자를 조합 하 여 5 문자가 사각형으로 그릴 다음 쓰기 발생할 위치를 결정 하는 커서를 배치 "+", "&#124;", 및 "-" 문자열입니다. 다른 문자열의 조합을 사용 하 여 더 적은 단계로 사각형을 그릴 수는 참고 합니다.  
  
 [!code-cpp[console.cursorLTS#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.cursorLTS/CPP/lts.cpp#1)]
 [!code-csharp[console.cursorLTS#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.cursorLTS/CS/lts.cs#1)]
 [!code-vb[console.cursorLTS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.cursorLTS/VB/lts.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="left" /> 또는 <paramref name="top" />가 0보다 작습니다.  
  
또는 
 <paramref name="left" />가 <see cref="P:System.Console.BufferWidth" />보다 크거나 같은 경우  
  
또는 
 <paramref name="top" />가 <see cref="P:System.Console.BufferHeight" />보다 크거나 같은 경우</exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="C#" Value="public static void SetError (System.IO.TextWriter newError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetError(class System.IO.TextWriter newError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetError(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetError (newError As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetError(System::IO::TextWriter ^ newError);" />
      <MemberSignature Language="F#" Value="static member SetError : System.IO.TextWriter -&gt; unit" Usage="System.Console.SetError newError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newError" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newError">새 표준 오류 출력을 나타내는 스트림입니다.</param>
        <summary><see cref="P:System.Console.Error" /> 속성을 지정한 <see cref="T:System.IO.TextWriter" /> 개체로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 <xref:System.Console.Error%2A> 속성을 표준 오류 출력 스트림을로 설정 합니다.  
  
 A <xref:System.IO.StreamWriter> 캡슐화 하는 <xref:System.IO.FileStream> 파일에 오류 메시지를 보내는 데 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 표준 오류 스트림에 파일로 리디렉션하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console.SetError#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.SetError/cpp/seterror1.cpp#1)]
 [!code-csharp[System.Console.SetError#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.SetError/cs/SetError1.cs#1)]
 [!code-vb[System.Console.SetError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.SetError/vb/SetError1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="newError" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="P:System.Console.IsErrorRedirected" />
        <altmember cref="P:System.Console.Error" />
      </Docs>
    </Member>
    <Member MemberName="SetIn">
      <MemberSignature Language="C#" Value="public static void SetIn (System.IO.TextReader newIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIn(class System.IO.TextReader newIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetIn(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIn (newIn As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIn(System::IO::TextReader ^ newIn);" />
      <MemberSignature Language="F#" Value="static member SetIn : System.IO.TextReader -&gt; unit" Usage="System.Console.SetIn newIn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newIn" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="newIn">새 표준 입력을 나타내는 스트림입니다.</param>
        <summary><see cref="P:System.Console.In" /> 속성을 지정한 <see cref="T:System.IO.TextReader" /> 개체로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 <xref:System.Console.In%2A> 표준 입력 스트림으로 설정 합니다.  
  
 A <xref:System.IO.StreamReader> 캡슐화 하는 <xref:System.IO.FileStream> 파일에서 입력을 받는 데 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Console.SetIn%2A> 메서드를 사용하는 방법을 보여 줍니다. 탭 문자가 있는 문자열에서 4개의 연속된 공백 문자를 대체합니다. 도구를 실행 하려면 두 명령줄 인수를 제공 해야 합니다. 첫 번째는 표준 입력 스트림을 리디렉션하려는 기존 텍스트 파일의 이름입니다. 두 번째는 표준 출력 스트림을 리디렉션하려는 파일의 이름입니다. 이 파일이 있을 필요는 없습니다. 그러한 경우 해당 내용은 덮어씁니다.  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="newIn" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Console.In" />
      </Docs>
    </Member>
    <Member MemberName="SetOut">
      <MemberSignature Language="C#" Value="public static void SetOut (System.IO.TextWriter newOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOut(class System.IO.TextWriter newOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetOut(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetOut (newOut As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetOut(System::IO::TextWriter ^ newOut);" />
      <MemberSignature Language="F#" Value="static member SetOut : System.IO.TextWriter -&gt; unit" Usage="System.Console.SetOut newOut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newOut" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newOut">새 표준 출력을 나타내는 스트림입니다.</param>
        <summary><see cref="P:System.Console.Out" /> 속성을 지정한 <see cref="T:System.IO.TextWriter" /> 개체로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 <xref:System.Console.Out%2A> 속성을 표준 출력 스트림에로 설정 합니다.  
  
 A <xref:System.IO.StreamWriter> 캡슐화 하는 <xref:System.IO.FileStream> 파일로 출력을 보내는 데 사용할 수 있습니다. 예:  
  
 [!code-cpp[System.Console.SetOut#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.setout/cpp/source.cpp#1)]
 [!code-csharp[System.Console.SetOut#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.setout/cs/source.cs#1)]
 [!code-vb[System.Console.SetOut#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.setout/vb/source.vb#1)]  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Console.SetOut%2A> 메서드를 사용하는 방법을 보여 줍니다. 탭 문자가 있는 문자열에서 4개의 연속된 공백 문자를 대체합니다. 도구를 실행 하려면 두 명령줄 인수를 제공 해야 합니다. 첫 번째는 표준 입력 스트림을 리디렉션하려는 기존 텍스트 파일의 이름입니다. 두 번째는 표준 출력 스트림을 리디렉션하려는 파일의 이름입니다. 이 파일이 있을 필요는 없습니다. 그러한 경우 해당 내용은 덮어씁니다.  
  
 [!code-cpp[System.Console-INSERTTABS#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CPP/inserttabs.cpp#1)]
 [!code-csharp[System.Console-INSERTTABS#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-INSERTTABS/CS/inserttabs.cs#1)]
 [!code-vb[System.Console-INSERTTABS#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-INSERTTABS/VB/inserttabs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="newOut" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowPosition">
      <MemberSignature Language="C#" Value="public static void SetWindowPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowPosition(int32 left, int32 top) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowPosition (left As Integer, top As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowPosition(int left, int top);" />
      <MemberSignature Language="F#" Value="static member SetWindowPosition : int * int -&gt; unit" Usage="System.Console.SetWindowPosition (left, top)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="top" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left">콘솔 창에서 왼쪽 위 모퉁이의 열 위치입니다.</param>
        <param name="top">콘솔 창에서 왼쪽 위 모퉁이의 행 위치입니다.</param>
        <summary>화면 버퍼에 상대적인 콘솔 창의 위치를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 운영 체제 창 콘솔 창에 표시 되 고 콘솔 창에 화면 버퍼 일부가 표시 됩니다. <xref:System.Console.SetWindowPosition%2A> 메서드 화면 버퍼에 상대적인 콘솔 창의 위치를 영향을 주지만 바탕 화면을 기준으로 운영 체제 창의 위치는 영향을 주지 않습니다.  
  
 콘솔 및 운영 체제 windows 일반적으로 영향을 주지 않습니다 서로 합니다. 그러나 콘솔 창의 현재 경계에서 화면 버퍼를 표시할 수 없습니다, 하는 경우 운영 체제 스크롤 막대 운영 체제 창에 자동으로 추가 합니다. 이런 경우 운영 체제 창 스크롤 막대의 콘솔 창 위치에 영향을 이동 하 고 콘솔 창으로 이동 합니다 <xref:System.Console.SetWindowPosition%2A> 메서드 운영 체제 창 스크롤 막대의 위치에 영향을 줍니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, 및 <xref:System.Console.CursorVisible%2A> 속성 및 <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, 및 <xref:System.Console.ReadKey%2A> 메서드입니다. 이 예제에서는 화면 버퍼 너비를 기준으로 화면 버퍼에서을 표 패턴을 그립니다. 다음 예제에서는 콘솔 창에서 아래쪽 화살표, 왼쪽 화살표 또는 오른쪽 화살표 콘솔 키를 누르면 위쪽 화살표는 응답을 이동 합니다. Grid 패턴을 사용 하면 화면 버퍼에 상대적인 콘솔 창의 이동 상태를 확인할 수 있습니다.  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="left" /> 또는 <paramref name="top" />가 0보다 작습니다.  
  
또는 
 <paramref name="left" /> + <see cref="P:System.Console.WindowWidth" />가 <see cref="P:System.Console.BufferWidth" />보다 큽니다.  
  
또는 
 <paramref name="top" /> + <see cref="P:System.Console.WindowHeight" />가 <see cref="P:System.Console.BufferHeight" />보다 큽니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetWindowSize">
      <MemberSignature Language="C#" Value="public static void SetWindowSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.SetWindowSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWindowSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWindowSize(int width, int height);" />
      <MemberSignature Language="F#" Value="static member SetWindowSize : int * int -&gt; unit" Usage="System.Console.SetWindowSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="height" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="width">콘솔 창의 너비(열)입니다.</param>
        <param name="height">콘솔 창의 높이(행)입니다.</param>
        <summary>콘솔 창의 높이와 너비를 지정한 값으로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 이 예제에서는 합니다 <xref:System.Console.SetWindowSize%2A> 메서드 및 <xref:System.Console.WindowWidth%2A> 및 <xref:System.Console.WindowHeight%2A> 속성입니다. 콘솔 창 크기를 변경 하는 모든 결과 보려면이 예제를 실행 해야 합니다.  
  
 이 예제에서는 85 열과 43 행으로 설정 하는 콘솔 창의 크기를 보고 키를 누를 때까지 기다립니다. 모든 키를 누르면 콘솔 창의 크기는 50% 감소, 새로 차원을 보고 되 고이 예제에서는 다른 키를 누를 때까지 대기 합니다. 마지막으로, 모든 키를 누르면 콘솔 창 원래 크기로 복원 되 고 예제를 종료 합니다.  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="width" /> 또는 <paramref name="height" />가 0보다 작거나 같습니다.  
  
또는 
 <paramref name="width" /> + <see cref="P:System.Console.WindowLeft" /> 또는 <paramref name="height" /> + <see cref="P:System.Console.WindowTop" />이 <see cref="F:System.Int16.MaxValue" />보다 크거나 같습니다.  
  
또는 
 <paramref name="width" /> 또는 <paramref name="height" />가 최대 창 너비 또는 현재 화면 해상도 및 콘솔 글꼴의 높이보다 큽니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자에게 이 작업을 수행할 권한이 없습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public static string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string Title" />
      <MemberSignature Language="DocId" Value="P:System.Console.Title" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Console.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>콘솔 제목 표시줄에 표시할 제목을 가져오거나 설정합니다.</summary>
        <value>콘솔의 제목 표시줄에 표시될 문자열입니다. 최대 제목 문자열 길이는 24500자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 이 예제에서는 <xref:System.Console.Title%2A> 속성입니다. 이 예제에서는 현재 운영 체제 창의 제목을 표시 하 고 키 입력을 기다립니다 다음 새 제목을 표시 합니다.  
  
 [!code-cpp[console.title#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.title/CPP/mytitle.cpp#1)]
 [!code-csharp[console.title#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.title/CS/mytitle.cs#1)]
 [!code-vb[console.title#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.title/VB/mytitle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">가져오기 작업에서 검색된 제목이 24500자 보다 깁니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">설정 작업에서 검색된 제목이 24500자 보다 깁니다.</exception>
        <exception cref="T:System.ArgumentNullException">설정 작업에서 지정된 제목이 <see langword="null" />입니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="TreatControlCAsInput">
      <MemberSignature Language="C#" Value="public static bool TreatControlCAsInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool TreatControlCAsInput" />
      <MemberSignature Language="DocId" Value="P:System.Console.TreatControlCAsInput" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property TreatControlCAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool TreatControlCAsInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatControlCAsInput : bool with get, set" Usage="System.Console.TreatControlCAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="F:System.ConsoleModifiers.Control" /> 보조키와 <see cref="F:System.ConsoleKey.C" /> 콘솔 키의 조합(Ctrl+C)이 일반 입력으로 처리되는지 운영 체제에서 처리하는 충돌로 처리되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>Ctrl+C가 일반 입력으로 처리되면 <see langword="true" />이고, 처리되지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 값은 <xref:System.Console.TreatControlCAsInput%2A> 속성은 `false` 및 Ctrl + C를 누르면 누른된 키를 입력된 버퍼에 저장 되지 않습니다 및 운영 체제에서 현재 실행 중인 프로세스를 종료 합니다. 기본값입니다.  
  
> [!CAUTION]
>  로 설정 하기 때문에이 속성을 주의 해 서 사용 `true` 크게 영향을 미칩니다. 대부분의 사용자는 콘솔 응용 프로그램을 종료 하려면 Ctrl + C를 기대 합니다. Ctrl + C의 효과 해제 하면 사용자는 덜 친숙 한 키 조합 하는 응용 프로그램을 종료 하려면 Ctrl + Break를 사용 해야 합니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Console.TreatControlCAsInput%2A> 속성입니다.  
  
 [!code-cpp[console.readkey1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.readkey1/CPP/rk.cpp#1)]
 [!code-csharp[console.readkey1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.readkey1/CS/rk.cs#1)]
 [!code-vb[console.readkey1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.readkey1/VB/rk.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">콘솔 입력 버퍼의 입력 모드를 가져오거나 설정할 수 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="F:System.ConsoleModifiers.Control" />
        <altmember cref="F:System.ConsoleKey.C" />
        <altmember cref="E:System.Console.CancelKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="WindowHeight">
      <MemberSignature Language="C#" Value="public static int WindowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowHeight : int with get, set" Usage="System.Console.WindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>콘솔 창 영역의 높이를 가져오거나 설정합니다.</summary>
        <value>콘솔 창의 높이(행)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 설정 하려고 합니다 <xref:System.Console.WindowHeight%2A> 출력을 리디렉션할 때 속성 중 하나를 throw 합니다.는 <xref:System.ArgumentOutOfRangeException> 또는 <xref:System.IO.IOException> 예외입니다. 예외를 방지 하려면 경우에만이 속성의 값을 설정할 수 있습니다 합니다 <xref:System.Console.IsOutputRedirected%2A> 속성이 반환 `false`합니다.  
  
   
  
## Examples  
 이 예제에서는 합니다 <xref:System.Console.SetWindowSize%2A> 메서드 및 <xref:System.Console.WindowWidth%2A> 및 <xref:System.Console.WindowHeight%2A> 속성입니다. 콘솔 창 크기를 변경 하는 모든 결과 보려면이 예제를 실행 해야 합니다.  
  
 이 예제에서는 85 열과 43 행으로 설정 하는 콘솔 창의 크기를 보고 키를 누를 때까지 기다립니다. 모든 키를 누르면 콘솔 창의 크기는 50% 감소, 새로 차원을 보고 되 고이 예제에서는 다른 키를 누를 때까지 대기 합니다. 마지막으로, 모든 키를 누를 때 콘솔 창 원래 크기로 복원 되 고 예제를 종료 합니다.  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Console.WindowWidth" /> 속성 값 또는 <see cref="P:System.Console.WindowHeight" /> 속성 값이 0보다 작거나 같습니다.  
  
또는 
<see cref="P:System.Console.WindowHeight" /> 속성 값과 <see cref="P:System.Console.WindowTop" /> 속성 값의 합이 <see cref="F:System.Int16.MaxValue" />보다 크거나 같습니다.  
  
또는 
<see cref="P:System.Console.WindowWidth" /> 속성 값 또는 <see cref="P:System.Console.WindowHeight" /> 속성 값이 현재 화면 해상도 및 콘솔 글꼴에 가장 클 수 있는 창의 너비 또는 높이보다 큽니다.</exception>
        <exception cref="T:System.IO.IOException">정보를 읽거나 쓰는 동안 오류가 발생했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="WindowLeft">
      <MemberSignature Language="C#" Value="public static int WindowLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowLeft" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowLeft { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowLeft : int with get, set" Usage="System.Console.WindowLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>화면 버퍼에 상대적인 콘솔 창 영역의 맨 왼쪽 위치를 가져오거나 설정합니다.</summary>
        <value>맨 왼쪽 콘솔 창 위치(열)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘솔에 더 큰 버퍼 사각형 영역을 사각형 창을 나타냅니다. 행의 수 및 열 번호로 가로로 창 및 버퍼를 모두 세로 방향으로 측정 됩니다. 버퍼 영역의 크기에 의해 정의 됩니다 합니다 <xref:System.Console.BufferHeight%2A> 고 <xref:System.Console.BufferWidth%2A> 속성입니다. 콘솔 영역의 크기에 의해 정의 됩니다 합니다 <xref:System.Console.WindowHeight%2A> 고 <xref:System.Console.WindowWidth%2A> 속성입니다. <xref:System.Console.WindowLeft%2A> 속성 결정 열 버퍼 영역의 첫 번째 열의 콘솔 창에 표시 됩니다. 값을 <xref:System.Console.WindowLeft%2A> 속성의 범위는 0 ~ <xref:System.Console.BufferWidth%2A>  -  <xref:System.Console.WindowWidth%2A>합니다. Throw 범위를 벗어나는 값으로 설정 하려고 한 <xref:System.ArgumentOutOfRangeException>합니다.  
  
 콘솔 창이 처음 열리면, 기본값인은 <xref:System.Console.WindowLeft%2A> 속성은 0 이며이 콘솔에 표시 된 첫 번째 열 버퍼 영역에서 첫 번째 열 (위치 0에 있는 열)에 해당 함을 나타냅니다. 콘솔 창과 버퍼 영역 모두의 기본 너비는 80 열입니다. 즉는 <xref:System.Console.WindowLeft%2A> 콘솔 창 좁힐 하거나 버퍼 영역을 더 만들 경우에 속성을 수정할 수 있습니다.  
  
 버퍼 영역의 너비 값 콘솔 창의 너비를 초과 하는 경우는 <xref:System.Console.WindowLeft%2A> 속성에는 사용자 버퍼 영역에 창의 관계를 정의 하는 가로 스크롤 막대를 사용 하는 경우 자동으로 조정 됩니다.  
  
 값을 설정 하려고 합니다 <xref:System.Console.WindowLeft%2A> 출력 되 면 속성 리디렉션 throw는 <xref:System.IO.IOException> 예외. 예외를 방지 하려면 경우에만이 속성의 값을 설정할 수 있습니다 합니다 <xref:System.Console.IsOutputRedirected%2A> 속성이 반환 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 80 열 콘솔 창을 열고 120 열 버퍼 영역을 정의 합니다. 창 및 버퍼 크기에 따라 정보를 표시 하 고 사용자를 왼쪽 화살표 키 또는 오른쪽 화살표 키를 누를 때까지 기다립니다. 전자의 경우에이 감소 값을 <xref:System.Console.WindowLeft%2A> 속성을 결과 법적 값 이면 1 씩 합니다. 후자의 경우에 값을 증가 하는 <xref:System.Console.WindowLeft%2A> 속성을 결과 법적 되는 경우 1입니다. 예제를 처리할 필요가 없습니다는 <xref:System.ArgumentOutOfRangeException>확인 하기 때문에에 할당할 값을 <xref:System.Console.WindowLeft%2A> 속성이 음수 이며의 합계를 발생 하지 않습니다는 <xref:System.Console.WindowLeft%2A> 및 <xref:System.Console.WindowWidth%2A> 초과 하는 속성을 <xref:System.Console.BufferWidth%2A> 속성 값입니다.  
  
 [!code-cpp[System.Console.WindowLeft#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.windowleft/cpp/windowleft1.cpp#1)]
 [!code-csharp[System.Console.WindowLeft#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.windowleft/cs/windowleft1.cs#1)]
 [!code-vb[System.Console.WindowLeft#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.windowleft/vb/windowleft1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">집합 작업에서 할당할 값이 0보다 작습니다.  
  
또는 
할당 결과, <see cref="P:System.Console.WindowLeft" />과 <see cref="P:System.Console.WindowWidth" />의 합이 <see cref="P:System.Console.BufferWidth" />를 초과합니다.</exception>
        <exception cref="T:System.IO.IOException">정보를 읽거나 쓰는 동안 오류가 발생했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="WindowTop">
      <MemberSignature Language="C#" Value="public static int WindowTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowTop" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowTop" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowTop { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowTop : int with get, set" Usage="System.Console.WindowTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>화면 버퍼에 상대적인 콘솔 창 영역의 위쪽 위치를 가져오거나 설정합니다.</summary>
        <value>맨 위 콘솔 창 위치(행)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘솔에 더 큰 버퍼 사각형 영역을 사각형 창을 나타냅니다. 행의 수 및 열 번호로 가로로 창 및 버퍼를 모두 세로 방향으로 측정 됩니다. 버퍼 영역의 크기에 의해 정의 됩니다 합니다 <xref:System.Console.BufferHeight%2A> 고 <xref:System.Console.BufferWidth%2A> 속성입니다. 콘솔 영역의 크기에 의해 정의 됩니다 합니다 <xref:System.Console.WindowHeight%2A> 고 <xref:System.Console.WindowWidth%2A> 속성입니다. <xref:System.Console.WindowTop%2A> 속성 결정 버퍼 영역의 행에서 첫 번째 열의 콘솔 창에 표시 됩니다. 값을 <xref:System.Console.WindowTop%2A> 속성의 범위는 0 ~ <xref:System.Console.BufferHeight%2A>  -  <xref:System.Console.WindowHeight%2A>합니다. Throw 범위를 벗어나는 값으로 설정 하려고 한 <xref:System.ArgumentOutOfRangeException>합니다.  
  
 값을 설정 하려고 합니다 <xref:System.Console.WindowTop%2A> 출력 되 면 속성 리디렉션 throw는 <xref:System.IO.IOException> 예외. 예외를 방지 하려면 경우에만이 속성의 값을 설정할 수 있습니다 합니다 <xref:System.Console.IsOutputRedirected%2A> 속성이 반환 `false`합니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, 및 <xref:System.Console.CursorVisible%2A> 속성 및 <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, 및 <xref:System.Console.ReadKey%2A> 메서드입니다. 이 예제에서는 화면 버퍼 너비를 기준으로 화면 버퍼에서을 표 패턴을 그립니다. 다음 예제에서는 콘솔 창에서 아래쪽 화살표, 왼쪽 화살표 또는 오른쪽 화살표 콘솔 키를 누르면 위쪽 화살표는 응답을 이동 합니다. Grid 패턴을 사용 하면 화면 버퍼에 상대적인 콘솔 창의 이동 상태를 확인할 수 있습니다.  
  
 [!code-cpp[console.windowLT#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.windowLT/CPP/wlt.cpp#1)]
 [!code-csharp[console.windowLT#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.windowLT/CS/wlt.cs#1)]
 [!code-vb[console.windowLT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.windowLT/VB/wlt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">집합 작업에서 할당할 값이 0보다 작습니다.  
  
또는 
할당 결과, <see cref="P:System.Console.WindowTop" />과 <see cref="P:System.Console.WindowHeight" />의 합이 <see cref="P:System.Console.BufferHeight" />를 초과합니다.</exception>
        <exception cref="T:System.IO.IOException">정보를 읽거나 쓰는 동안 오류가 발생했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="WindowWidth">
      <MemberSignature Language="C#" Value="public static int WindowWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Console.WindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property WindowWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int WindowWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowWidth : int with get, set" Usage="System.Console.WindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>콘솔 창의 컨트롤의 너비를 가져오거나 설정합니다.</summary>
        <value>콘솔 창의 너비(열)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 설정 하려고 합니다 <xref:System.Console.WindowWidth%2A> 출력을 리디렉션할 때 속성 중 하나를 throw 합니다.는 <xref:System.ArgumentOutOfRangeException> 또는 <xref:System.IO.IOException> 예외입니다. 예외를 방지 하려면 경우에만이 속성의 값을 설정할 수 있습니다 합니다 <xref:System.Console.IsOutputRedirected%2A> 속성이 반환 `false`합니다.  
  
   
  
## Examples  
 이 예제에서는 합니다 <xref:System.Console.SetWindowSize%2A> 메서드 및 <xref:System.Console.WindowWidth%2A> 및 <xref:System.Console.WindowHeight%2A> 속성입니다. 콘솔 창 크기를 변경 하는 모든 결과 보려면이 예제를 실행 해야 합니다.  
  
 이 예제에서는 85 열과 43 행으로 설정 하는 콘솔 창의 크기를 보고 키를 누를 때까지 기다립니다. 모든 키를 누르면 콘솔 창의 크기는 50% 감소, 새로 차원을 보고 되 고이 예제에서는 다른 키를 누를 때까지 대기 합니다. 마지막으로, 모든 키를 누를 때 콘솔 창 원래 크기로 복원 되 고 예제를 종료 합니다.  
  
 [!code-cpp[console.setwindowsize#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.setwindowsize/CPP/sws.cpp#1)]
 [!code-csharp[console.setwindowsize#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.setwindowsize/CS/sws.cs#1)]
 [!code-vb[console.setwindowsize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.setwindowsize/VB/sws.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Console.WindowWidth" /> 속성 값 또는 <see cref="P:System.Console.WindowHeight" /> 속성 값이 0보다 작거나 같습니다.  
  
또는 
<see cref="P:System.Console.WindowHeight" /> 속성 값과 <see cref="P:System.Console.WindowTop" /> 속성 값의 합이 <see cref="F:System.Int16.MaxValue" />보다 크거나 같습니다.  
  
또는 
<see cref="P:System.Console.WindowWidth" /> 속성 값 또는 <see cref="P:System.Console.WindowHeight" /> 속성 값이 현재 화면 해상도 및 콘솔 글꼴에 가장 클 수 있는 창의 너비 또는 높이보다 큽니다.</exception>
        <exception cref="T:System.IO.IOException">정보를 읽거나 쓰는 동안 오류가 발생했습니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정한 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(bool value);" />
      <MemberSignature Language="F#" Value="static member Write : bool -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>지정한 부울 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 됩니다 <xref:System.Boolean.ToString%2A?displayProperty=nameWithType>을 출력 하 <xref:System.Boolean.TrueString?displayProperty=nameWithType> 또는 <xref:System.Boolean.FalseString?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(char value);" />
      <MemberSignature Language="F#" Value="static member Write : char -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>지정한 유니코드 문자 값을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="static member Write : char[] -&gt; unit" Usage="System.Console.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">유니코드 문자 배열입니다.</param>
        <summary>지정한 유니코드 문자의 배열을 표준 출력 스트림에 씁니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Write : decimal -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>지정한 <see cref="T:System.Decimal" /> 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 됩니다 <xref:System.Decimal.ToString%2A?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(double value);" />
      <MemberSignature Language="F#" Value="static member Write : double -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>지정한 배정밀도 부동 소수점 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Double.ToString%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int value);" />
      <MemberSignature Language="F#" Value="static member Write : int -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>지정한 부호 있는 32비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Int32.ToString%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(long value);" />
      <MemberSignature Language="F#" Value="static member Write : int64 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>지정한 부호 있는 64비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Int64.ToString%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">쓸 값이거나 <see langword="null" />입니다.</param>
        <summary>지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `value` 는 `null`, 아무 것도 쓰지 및 예외가 발생 하지 않습니다. 이 고, 그렇지는 `ToString` 메서드의 `value` 를 해당 문자열 표현 호출 되어 결과 문자열을 표준 출력 스트림에 기록 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(float value);" />
      <MemberSignature Language="F#" Value="static member Write : single -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>지정한 단정밀도 부동 소수점 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Single.ToString%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>지정한 문자열 값을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값이 `null`를 표준 출력 스트림에 쓰여지지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member Write : uint32 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>지정한 부호 없는 32비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member Write : uint64 -&gt; unit" Usage="System.Console.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>지정한 부호 없는 64비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj -&gt; unit" Usage="System.Console.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">복합 형식 문자열입니다.</param>
        <param name="arg0"><paramref name="format" />을 사용하여 쓸 개체입니다.</param>
        <summary>지정한 형식 정보를 사용하여 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다. 결과 문자열을 출력 스트림에 기록 됩니다.  
  
 `format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다. 포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.  
  
 형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.  
  
 .NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.  
  
-   와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.  
  
-   숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.  
  
-   자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
-   열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.  
  
-   형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 `WriteLine` 메서드를 사용하여 숫자, 날짜 및 열거형에 대한 표준 형식 지정자를 보여 줍니다.  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)] 
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 다음 예제에서는 <xref:System.Console.Write%2A> 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException"><paramref name="format" />의 형식 사양이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">복합 형식 지정</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj[] -&gt; unit" Usage="System.Console.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">복합 형식 문자열입니다.</param>
        <param name="arg"><paramref name="format" />을 사용하여 쓸 개체의 배열입니다.</param>
        <summary>지정한 형식 정보를 사용하여 지정한 개체 배열의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다. 결과 문자열을 출력 스트림에 기록 됩니다.  
  
 `format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다. 포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.  
  
 형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.  
  
 .NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.  
  
-   와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.  
  
-   숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.  
  
-   자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
-   열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.  
  
-   형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.  
  
 `arg` 매개 변수는 매개 변수 배열입니다. 5 개 이상의 항목 목록 또는 배열로 메서드에 인수를 전달할 수 있습니다. 예제에서는 메서드 호출의 두 형태를 모두 보여 줍니다.  
  
   
  
## Examples  
 다음 예제에서는 정의 `Person` 다양 한 사용자에 대 한 정보를 제공 하는 속성을 사용 하 여 클래스입니다. 해당 `GetDescription` 메서드 하나를 제외 하 고 속성 값이 모두 포함 하는 배열을 반환 합니다. 이 예제에서는 다음 사용 하 여 반환 하는 배열은 `GetDescription` Person 개체의 값을 표시 하는 방법입니다.  
  
 [!code-csharp[System.Console.Write#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams1.cs#1)]
 [!code-vb[System.Console.Write#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams1.vb#1)]  
  
 예제를 호출 하는 참고 합니다 <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29> 메서드 대신 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29> 메서드의 값을 표시 하려고 했기 때문에 `Person.Remarks` 같은 줄에는 속성. 이 위해 값을 검사 하는 <xref:System.Console.CursorLeft%2A> 고 <xref:System.Console.WindowWidth%2A> 맞게 묶어 표시에 대 한 충분 한 공간이 있는지 여부를 결정 하는 속성입니다.  없는 경우, 줄을 표시 합니다. 그러지 않으면 줄을 쓰는, 세 개의 공백 들여쓰기로 처리 하 고는 설명을 표시 합니다.  
  
 다음 예제는 5 개 항목 목록으로 제공 한다는 점을 제외 하면 첫 번째 동일 합니다 `arg` 대신 매개 변수 배열 인수입니다.  
  
 [!code-csharp[System.Console.Write#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.console.write/cs/WriteParams2.cs#2)]
 [!code-vb[System.Console.Write#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.console.write/vb/WriteParams2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" /> 또는 <paramref name="arg" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.FormatException"><paramref name="format" />의 형식 사양이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <block subset="none" type="usage"><para>이 메서드는 c + + 코드에서 호출 되지 않습니다. C + + 컴파일러에 대 한 호출을 확인 [System.Console.Write](xref:System.Console.Write*) 호출으로 문자열 및 4 개 이상의 개체 매개 변수 목록을 포함 하는 <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />합니다. 에 대 한 호출을 확인할 [System.Console.Write](xref:System.Console.Write*) 포함 하는 개체 배열 및 문자열에 대 한 호출으로 <see cref="M:System.Console.Write(System.String,System.Object)" />합니다.</para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">복합 형식 지정</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="static member Write : char[] * int * int -&gt; unit" Usage="System.Console.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">유니코드 문자 배열입니다.</param>
        <param name="index"><paramref name="buffer" />의 시작 위치입니다.</param>
        <param name="count">쓸 문자 수입니다.</param>
        <summary>지정한 유니코드 문자의 하위 배열을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 씁니다 `count` 문자 위치부터 `index` 의 `buffer` 표준 출력 스트림에 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="index" /> + <paramref name="count" />가 <paramref name="buffer" />에 없는 위치를 지정합니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">복합 형식 문자열입니다.</param>
        <param name="arg0"><paramref name="format" />을 사용하여 쓸 첫 번째 개체입니다.</param>
        <param name="arg1"><paramref name="format" />을 사용하여 쓸 두 번째 개체입니다.</param>
        <summary>지정한 형식 정보를 사용하여 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다. 결과 문자열을 출력 스트림에 기록 됩니다.  
  
 `format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다. 포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.  
  
 형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.  
  
 .NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.  
  
-   와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.  
  
-   숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.  
  
-   자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
-   열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.  
  
-   형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 `WriteLine` 메서드를 사용하여 숫자, 날짜 및 열거형에 대한 표준 형식 지정자를 보여 줍니다.  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException"><paramref name="format" />의 형식 사양이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">복합 형식 지정</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">복합 형식 문자열입니다.</param>
        <param name="arg0"><paramref name="format" />을 사용하여 쓸 첫 번째 개체입니다.</param>
        <param name="arg1"><paramref name="format" />을 사용하여 쓸 두 번째 개체입니다.</param>
        <param name="arg2"><paramref name="format" />을 사용하여 쓸 세 번째 개체입니다.</param>
        <summary>지정한 형식 정보를 사용하여 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다. 결과 문자열을 출력 스트림에 기록 됩니다.  
  
 `format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다. 포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.  
  
 형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.  
  
 .NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.  
  
-   와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.  
  
-   숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.  
  
-   자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
-   열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.  
  
-   형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 `WriteLine` 메서드를 사용하여 숫자, 날짜 및 열거형에 대한 표준 형식 지정자를 보여 줍니다.  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 다음 예제에서는 `Write` 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-cpp[System.Console-REFORMAT#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console-REFORMAT/CPP/reformat.cpp#1)]
 [!code-csharp[System.Console-REFORMAT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console-REFORMAT/CS/reformat.cs#1)]
 [!code-vb[System.Console-REFORMAT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console-REFORMAT/VB/reformat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException"><paramref name="format" />의 형식 사양이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">복합 형식 지정</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberSignature Language="F#" Value="static member Write : string * obj * obj * obj * obj -&gt; unit" Usage="System.Console.Write (format, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Object" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format">복합 형식 문자열입니다.</param>
        <param name="arg0"><paramref name="format" />을 사용하여 쓸 첫 번째 개체입니다.</param>
        <param name="arg1"><paramref name="format" />을 사용하여 쓸 두 번째 개체입니다.</param>
        <param name="arg2"><paramref name="format" />을 사용하여 쓸 세 번째 개체입니다.</param>
        <param name="arg3"><paramref name="format" />을 사용하여 쓸 네 번째 개체입니다.</param>
        <summary>지정한 형식 정보를 사용하여 지정한 개체 및 가변 길이 매개 변수 목록의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 API는 CLS 규격이 아닙니다. CLS 규격 대체 항목은 <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>입니다. C# 및 Visual Basic 컴파일러에 대 한 호출으로이 메서드에 대 한 호출을 자동으로 해결 <xref:System.Console.Write%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>합니다.  
  
 이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다. 결과 문자열을 출력 스트림에 기록 됩니다.  
  
 `format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다. 포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.  
  
 형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.  
  
 .NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.  
  
-   와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.  
  
-   숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.  
  
-   자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
-   열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.  
  
-   형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.  
  
   
  
## Examples  
 다음 예제를 사용 하 여 변수 매개 변수를 사용 합니다 <xref:System.Console.Write%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> 메서드. 메서드는 복합 형식 문자열 및 다섯 개의 형식 항목을 사용 하 여 호출 됩니다.  
  
 [!code-cpp[System.Console.Write#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.console.write/cpp/con_write.cpp#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException"><paramref name="format" />의 형식 사양이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <block subset="none" type="usage"><para>이 메서드가로 표시는 <see langword="vararg" /> 가변 개수의 매개 변수를 지원함을 의미 하는 키워드입니다. Visual c + +에서 메서드를 호출할 수 있지만 C# 또는 Visual Basic 코드에서 호출할 수 없습니다. C# 및 Visual Basic 컴파일러에 대 한 호출을 해결할 <see cref="M:System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)" /> 호출로 <see cref="M:System.Console.Write(System.String,System.Object[])" />합니다.</para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.WriteLine" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">복합 형식 지정</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>뒤에 현재 줄 종결자가 오는, 지정한 데이터를 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 줄 종결자는 캐리지 리턴 뒤에 줄 바꿈 값인 문자열 (C#에서 "\r\n" 또는 `vbCrLf` Visual Basic에서). 줄 종결자를 설정 하 여 변경할 수 있습니다는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 의 속성을 <xref:System.Console.Out%2A> 속성을 다른 문자열입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine();" />
      <MemberSignature Language="F#" Value="static member WriteLine : unit -&gt; unit" Usage="System.Console.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 줄 종결자를 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 줄 종결자는 캐리지 리턴 뒤에 줄 바꿈 값인 문자열 (C#에서 "\r\n" 또는 `vbCrLf` Visual Basic에서). 줄 종결자를 설정 하 여 변경할 수 있습니다는 <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> 의 속성을 <xref:System.Console.Out%2A> 속성을 다른 문자열입니다. 예제에서는 그림을 제공합니다.  
  
   
  
## Examples  
 이 예제에서는 해당 기본값은 "\r\n"에서 줄 종결자를 변경 하거나 `vbCrLf` "\r\n\r\n"를 또는 `vbCrLf`  +  `vbCrLf`합니다. 그런 다음 호출 하는 <xref:System.Console.WriteLine> 및 <xref:System.Console.WriteLine%28System.String%29> 콘솔에 출력을 표시 하는 방법입니다.  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
        <altmember cref="P:System.Console.Out" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : bool -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 지정한 부울 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Boolean.ToString%2A?displayProperty=nameWithType> 메서드.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제에서는 10 개 난수를 생성 하 고 사용 하는 <xref:System.Console.WriteLine%28System.Boolean%29?displayProperty=nameWithType> 도 지 여부를 나타내는 방법입니다.  
  
 [!code-cpp[System.Console.WriteLine#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_boolean1.cpp#4)]
 [!code-csharp[System.Console.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_boolean1.cs#4)]
 [!code-vb[System.Console.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_boolean1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 지정한 유니코드 문자 값을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다. 예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char[] -&gt; unit" Usage="System.Console.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">유니코드 문자 배열입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 지정한 유니코드 문자의 배열을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : decimal -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 지정한 <see cref="T:System.Decimal" /> 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Decimal.ToString%2A?displayProperty=nameWithType> 메서드.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다. 예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : double -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 지정한 배정밀도 부동 소수점 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Double.ToString%2A?displayProperty=nameWithType> 메서드.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다. 예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 부호 있는 32비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Int32.ToString%2A?displayProperty=nameWithType> 메서드.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다. 예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : int64 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 부호 있는 64비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Int64.ToString%2A?displayProperty=nameWithType> 메서드.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다. 예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value`가 `null`이면 줄 종결자만 씁니다. 이 고, 그렇지는 `ToString` 메서드의 `value` 를 해당 문자열 표현 호출 되어 결과 문자열을 표준 출력 스트림에 기록 됩니다.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Console.WriteLine%28System.Object%29> 콘솔로 개체 배열의 각 값을 표시 하는 방법입니다.  
  
 [!code-cpp[System.Console.WriteLine#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_obj1.cpp#3)]
 [!code-csharp[System.Console.WriteLine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/writeline_obj1.cs#3)]
 [!code-vb[System.Console.WriteLine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/writeline_obj1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : single -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 지정한 단정밀도 부동 소수점 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.Single.ToString%2A?displayProperty=nameWithType> 메서드.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다. 예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 지정한 문자열 값을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값이 `null`, 표준 출력 스트림에 줄 종결자만 쓰여집니다.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine> 메서드.  
  
   
  
## Examples  
 이 예제에서는 해당 기본값은 "\r\n"에서 줄 종결자를 변경 하거나 `vbCrLf` "\r\n\r\n"를 또는 `vbCrLf`  +  `vbCrLf`합니다. 그런 다음 호출 하는 <xref:System.Console.WriteLine> 및 <xref:System.Console.WriteLine%28System.String%29> 콘솔에 출력을 표시 하는 방법입니다.  
  
 [!code-cpp[System.Console.WriteLine#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/newline1.cpp#2)]
 [!code-csharp[System.Console.WriteLine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/newline1.cs#2)]
 [!code-vb[System.Console.WriteLine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/newline1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : uint32 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 부호 없는 32비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> 메서드.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다. 예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : uint64 -&gt; unit" Usage="System.Console.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">작성할 값입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 부호 없는 64비트 정수 값의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 텍스트 표현을 `value` 를 호출 하 여 생성 되는 <xref:System.UInt64.ToString%2A?displayProperty=nameWithType> 메서드.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다. 예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">복합 형식 문자열입니다.</param>
        <param name="arg0"><paramref name="format" />을 사용하여 쓸 개체입니다.</param>
        <summary>지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다. 결과 문자열을 출력 스트림에 기록 됩니다.  
  
 `format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다. 포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.  
  
 형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.  
  
 .NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.  
  
-   와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.  
  
-   숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.  
  
-   자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
-   열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.  
  
-   형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> 임의로 생성 된 5 개를 표시 하는 메서드 <xref:System.Boolean> 값입니다.  
  
 [!code-csharp[System.Console.WriteLine#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine6.cs#6)]
 [!code-vb[System.Console.WriteLine#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine6.vb#6)]  
  
 다음 예제에서는 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29> 현재 날짜를 표시 하는 방법입니다.   형식 항목에 합니다 `format` 인수 사용 "D" [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 현재 문화권의 자세한 날짜 형식으로 날짜를 표시 하 합니다.  
  
 [!code-csharp[System.Console.WriteLine#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/WriteLine7.cs#7)]
 [!code-vb[System.Console.WriteLine#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/WriteLine7.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException"><paramref name="format" />의 형식 사양이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">복합 형식 지정</related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj[] -&gt; unit" Usage="System.Console.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">복합 형식 문자열입니다.</param>
        <param name="arg"><paramref name="format" />을 사용하여 쓸 개체의 배열입니다.</param>
        <summary>지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체 배열의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다. 결과 문자열을 출력 스트림에 기록 됩니다.  
  
 `format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다. 포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.  
  
 형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.  
  
 .NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.  
  
-   와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.  
  
-   숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.  
  
-   자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
-   열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.  
  
-   형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제에서는 숫자, 날짜 및 열거형의 표준 형식 지정자를 보여 줍니다.  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다. 예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" /> 또는 <paramref name="arg" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.FormatException"><paramref name="format" />의 형식 사양이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <block subset="none" type="usage"><para>이 메서드는 c + + 코드에서 호출 되지 않습니다. C + + 컴파일러에 대 한 호출을 확인 [System.Console.WriteLine](xref:System.Console.WriteLine*) 호출으로 문자열 및 4 개 이상의 개체 매개 변수 목록을 포함 하는 <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />합니다. 에 대 한 호출을 확인할 [System.Console.WriteLine](xref:System.Console.WriteLine*) 포함 하는 개체 배열 및 문자열에 대 한 호출으로 <see cref="M:System.Console.WriteLine(System.String,System.Object)" />합니다.</para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">복합 형식 지정</related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="static member WriteLine : char[] * int * int -&gt; unit" Usage="System.Console.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">유니코드 문자 배열입니다.</param>
        <param name="index"><paramref name="buffer" />의 시작 위치입니다.</param>
        <param name="count">쓸 문자 수입니다.</param>
        <summary>뒤에 현재 줄 종결자가 오는, 지정한 유니코드 문자의 하위 배열을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 씁니다 `count` 문자 위치부터 `index` 의 `buffer` 표준 출력 스트림에 합니다.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 또는 <paramref name="count" />가 0보다 작습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="index" /> + <paramref name="count" />가 <paramref name="buffer" />에 없는 위치를 지정합니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">복합 형식 문자열입니다.</param>
        <param name="arg0"><paramref name="format" />을 사용하여 쓸 첫 번째 개체입니다.</param>
        <param name="arg1"><paramref name="format" />을 사용하여 쓸 두 번째 개체입니다.</param>
        <summary>지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다. 결과 문자열을 출력 스트림에 기록 됩니다.  
  
 `format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다. 포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.  
  
 형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.  
  
 .NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.  
  
-   와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.  
  
-   숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.  
  
-   자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
-   열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.  
  
-   형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제에서는 숫자, 날짜 및 열거형의 표준 형식 지정자를 보여 줍니다.  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다. 예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException"><paramref name="format" />의 형식 사양이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">복합 형식 지정</related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">복합 형식 문자열입니다.</param>
        <param name="arg0"><paramref name="format" />을 사용하여 쓸 첫 번째 개체입니다.</param>
        <param name="arg1"><paramref name="format" />을 사용하여 쓸 두 번째 개체입니다.</param>
        <param name="arg2"><paramref name="format" />을 사용하여 쓸 세 번째 개체입니다.</param>
        <summary>지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다. 결과 문자열을 출력 스트림에 기록 됩니다.  
  
 `format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다. 포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.  
  
 형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.  
  
 .NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.  
  
-   와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.  
  
-   숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.  
  
-   자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
-   열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.  
  
-   형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제에서는 숫자, 날짜 및 열거형의 표준 형식 지정자를 보여 줍니다.  
  
 [!code-cpp[console.writelineFmt1#1](~/samples/snippets/cpp/VS_Snippets_CLR/console.writelineFmt1/cpp/wl.cpp#1)] 
 [!code-csharp[console.writelineFmt1#1](~/samples/snippets/csharp/VS_Snippets_CLR/console.writelineFmt1/cs/wl.cs#1)]
 [!code-vb[console.writelineFmt1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/console.writelineFmt1/vb/wl.vb#1)]  
  
 다음 예제는 18% 팁을 계산한 다음 사용 하는 팁 계산기는 <xref:System.Console.WriteLine%2A> 원래 충전량, 양 끝 및 총 크기를 표시 하는 방법입니다. 예제는 사용자는 원래 충전량 명령줄 매개 변수로 제공 해야 하는 콘솔 응용 프로그램입니다.  
  
 [!code-csharp[System.Console.WriteLine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Console.WriteLine/CS/tipcalc.cs#1)]
 [!code-vb[System.Console.WriteLine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Console.WriteLine/VB/tipcalc.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException"><paramref name="format" />의 형식 사양이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">복합 형식 지정</related>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj * obj * obj * obj -&gt; unit" Usage="System.Console.WriteLine (format, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Console</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Object" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format">복합 형식 문자열입니다.</param>
        <param name="arg0"><paramref name="format" />을 사용하여 쓸 첫 번째 개체입니다.</param>
        <param name="arg1"><paramref name="format" />을 사용하여 쓸 두 번째 개체입니다.</param>
        <param name="arg2"><paramref name="format" />을 사용하여 쓸 세 번째 개체입니다.</param>
        <param name="arg3"><paramref name="format" />을 사용하여 쓸 네 번째 개체입니다.</param>
        <summary>지정한 형식 정보를 사용하여 뒤에 현재 줄 종결자가 오는, 지정한 개체 및 가변 길이 매개 변수 목록의 텍스트 표현을 표준 출력 스트림에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 API는 CLS 규격이 아닙니다. CLS 규격 대체 항목은 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>입니다. C# 및 Visual Basic 컴파일러에 대 한 호출으로이 메서드에 대 한 호출을 자동으로 해결 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>합니다.  
  
 이 메서드를 사용 합니다 [복합 서식 지정 기능](~/docs/standard/base-types/composite-formatting.md) 텍스트 표현으로 변환할 개체의 값의 문자열 표현을 포함 하는.NET Framework의 합니다. 결과 문자열을 출력 스트림에 기록 됩니다.  
  
 `format` 자세한 텍스트로 0 개 이상의 인덱싱된 자리 표시 자가 있는,이 메서드의 매개 변수 목록의 개체에 해당 하는 서식 항목 이라고 함 또는 매개 변수가 0으로 구성 됩니다. 포맷 프로세스는 해당 개체의 값의 텍스트 표현을 사용 하 여 각 서식 항목을 바꿉니다.  
  
 형식 항목의 구문은 `{` *인덱스*[`,`*맞춤*] [`:`*formatString*]`}`를 지정 하는 한 필수 인덱스, 선택적 길이 및 서식 있는 텍스트의 맞춤 및 해당 개체의 값의 서식을 지정 하는 방법을 제어 하는 형식 지정자 문자는 선택적 문자열입니다.  
  
 .NET Framework에는 다음 서식 항목에서 자세히 설명 되어 광범위 한 형식 지정 지원을 제공 합니다.  
  
-   와 같은 방법으로 지원 되는 복합 서식 지정 기능에 대 한 자세한 <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, 및 일부 오버 로드 <xref:System.Console.WriteLine%2A>를 참조 하세요 [복합 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.  
  
-   숫자 서식 지정자에 대 한 자세한 내용은 참조 하세요. [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.  
  
-   자세한 내용은 대 한 날짜 및 시간 형식 지정자 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 및 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
-   열거형 형식 지정자에 대 한 자세한 내용은 참조 하세요. [열거형 형식 문자열](~/docs/standard/base-types/enumeration-format-strings.md)합니다.  
  
-   형식에 대 한 자세한 내용은 참조 하세요. [형식](~/docs/standard/base-types/formatting-types.md)합니다.  
  
 줄 종결자에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Console.WriteLine%2A> 매개 변수를 사용 하는 메서드입니다.  
  
   
  
## Examples  
 다음 예제에서는 변수 인수를 사용 합니다 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> 메서드. 메서드는 복합 형식 문자열 및 다섯 개의 형식 항목을 사용 하 여 호출 됩니다.  
  
 [!code-cpp[System.Console.WriteLine#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Console.WriteLine/CPP/writeline_vararg.cpp#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException"><paramref name="format" />의 형식 사양이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">안전한 최상위 창 및 하위 창을 수정 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></permission>
        <block subset="none" type="usage"><para>이 메서드가로 표시는 <see langword="vararg" /> 가변 개수의 매개 변수를 지원함을 의미 하는 키워드입니다. Visual c + +에서 메서드를 호출할 수 있지만 C# 또는 Visual Basic 코드에서 호출할 수 없습니다. C# 및 Visual Basic 컴파일러에 대 한 호출을 해결할 <see cref="M:System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)" /> 호출로 <see cref="M:System.Console.WriteLine(System.String,System.Object[])" />합니다.</para></block>
        <altmember cref="M:System.Console.Read" />
        <altmember cref="M:System.Console.ReadLine" />
        <altmember cref="M:System.Console.Write(System.String,System.Object)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">복합 형식 지정</related>
      </Docs>
    </Member>
  </Members>
</Type>