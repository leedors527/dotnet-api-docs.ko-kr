<Type Name="Environment" FullName="System.Environment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d38348c989ef499a53e5ed5e296d99c5bcf72043" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996529" /></Metadata><TypeSignature Language="C#" Value="public static class Environment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Environment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Environment" />
  <TypeSignature Language="VB.NET" Value="Public Class Environment" />
  <TypeSignature Language="C++ CLI" Value="public ref class Environment abstract sealed" />
  <TypeSignature Language="F#" Value="type Environment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>현재 환경 및 플랫폼에 대한 정보 및 조작 방법을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Environment> 마지막으로 시스템을 부팅 하 고 공용 언어 런타임의 버전 이후 명령줄 인수, 종료 코드, 환경 변수 설정, 시간, 호출 스택의 내용을 같은 정보를 검색 하는 클래스입니다.  
  
   
  
## Examples  
 다음 예에서는 현재 환경에 대 한 정보 목록을 표시 하는 방법을 보여 줍니다.  
  
 [!code-cpp[environment.class#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.class/CPP/env0.cpp#1)]
 [!code-csharp[environment.class#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.class/CS/env0.cs#1)]
 [!code-vb[environment.class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.class/VB/env0.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="public static string CommandLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CommandLine" />
      <MemberSignature Language="DocId" Value="P:System.Environment.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CommandLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CommandLine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandLine : string" Usage="System.Environment.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 프로세스에 대한 명령줄을 가져옵니다.</summary>
        <value>명령줄 인수가 포함된 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 프로그램 이름 및 현재 프로세스를 시작할 때 명령줄에서 지정 된 인수에 대 한 액세스를 제공 합니다.  
  
 프로그램 이름을 경로 정보를 포함할 수 있지만 필수는 아닙니다. 사용 된 <xref:System.Environment.GetCommandLineArgs%2A> 명령줄 정보를 검색 하는 메서드 구문 분석 하 고 문자열의 배열에 저장 합니다.  
  
 명령줄 버퍼의 최대 크기는 특정 문자 수로 설정 하지 이 컴퓨터에서 실행 되는 Windows 운영 체제에 따라 달라 집니다.  
  
   
  
## Examples  
 다음 예제에서는 명령줄을 사용 하는 자체를 표시합니다.  
  
 [!code-cpp[environment.commandline#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.CommandLine/CPP/commandline.cpp#1)]
 [!code-csharp[environment.commandline#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.CommandLine/CS/commandline.cs#1)]
 [!code-vb[environment.commandline#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.CommandLine/VB/commandline.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">PATH 환경 변수를 읽기 액세스 권한입니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
        <altmember cref="M:System.Environment.GetCommandLineArgs" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDirectory">
      <MemberSignature Language="C#" Value="public static string CurrentDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string CurrentDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Environment.CurrentDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CurrentDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDirectory : string with get, set" Usage="System.Environment.CurrentDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 작업 디렉터리의 정규화된 경로를 가져오거나 설정합니다.</summary>
        <value>디렉터리 경로가 포함된 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정의상,이 프로세스가 루트 디렉터리의 로컬 또는 네트워크 드라이브에서 시작 하는 경우이 속성의 값은 드라이브 이름 뒤에 후행 슬래시 (예를 들어, "c:\\"). 이 속성의 값을 하위 디렉터리에이 프로세스가 시작 되 면 인지 드라이브와 하위 디렉터리 경로 후행 슬래시 (예: "C:\mySubDirectory") 없이 합니다.  
  
   
  
## Examples  
 다음 예제에서는 설정 된 <xref:System.Environment.CurrentDirectory%2A> 속성입니다.  
  
 [!code-cpp[System.Environment#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Environment/CPP/Vars1.cpp#4)]
 [!code-csharp[System.Environment#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Environment/CS/Vars1.cs#4)]
 [!code-vb[System.Environment#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Environment/VB/Vars1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">빈 문자열("")로 설정하려고 했습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><see langword="null." />로 설정하려고 했습니다.</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">찾을 수 없는 로컬 경로를 설정하려고 했습니다.</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 해당 권한이 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">set 작업의 파일 또는 디렉터리에 작성 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">경로 자체의 get 작업에서 정보에 액세스 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentManagedThreadId">
      <MemberSignature Language="C#" Value="public static int CurrentManagedThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CurrentManagedThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Environment.CurrentManagedThreadId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentManagedThreadId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CurrentManagedThreadId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentManagedThreadId : int" Usage="System.Environment.CurrentManagedThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 관리되는 스레드의 고유 식별자를 가져옵니다.</summary>
        <value>이 관리되는 스레드의 고유 식별자를 나타내는 정수입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exit">
      <MemberSignature Language="C#" Value="public static void Exit (int exitCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Exit(int32 exitCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.Exit(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Exit (exitCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Exit(int exitCode);" />
      <MemberSignature Language="F#" Value="static member Exit : int -&gt; unit" Usage="System.Environment.Exit exitCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitCode" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="exitCode">운영 체제에 반환할 종료 코드입니다. 프로세스가 완료되었음을 나타내려면 0을 사용합니다.</param>
        <summary>이 프로세스를 종료하고 운영 체제에 종료 코드를 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한는 `exitCode` 매개 변수를 사용 하 여 0이 아닌 숫자는 오류를 나타냅니다. 애플리케이션에서 고유한 오류 코드는 열거형에서 정의 시나리오에 따라 적절 한 오류 코드를 반환 합니다. 예를 들어 값이 필요한 파일이 있는 임을 나타내려면 1 및 값이 잘못 된 형식으로 파일 임을 나타내려면 2 반환 합니다. Windows 운영 체제에서 사용 되는 종료 코드의 목록을 참조 하세요 [시스템 오류 코드](https://msdn.microsoft.com/library/ms681381.aspx) Windows 설명서에서.  
  
 호출 된 <xref:System.Environment.Exit%2A> 메서드를 사용 하는 프로그래밍 언어의 다른 `return` 문을 다음과 같은 방법으로:  
  
-   <xref:System.Environment.Exit%2A> 항상 애플리케이션을 종료합니다. 사용 하는 `return` 만 사용 하는 경우 애플리케이션 진입점에서 같은 문을 애플리케이션을 종료할 수 있습니다는 `Main` 메서드.  
  
-   <xref:System.Environment.Exit%2A> 다른 스레드가 실행 되는 경우에 애플리케이션을 즉시 종료 합니다. 경우는 `return` 문이 애플리케이션 진입점에서 호출 될, 애플리케이션을 모든 포그라운드 스레드가 종료 된 후에 종료 합니다.  
  
-   <xref:System.Environment.Exit%2A> 비관리 코드를 호출할 수 있는 권한이 호출자가 필요 합니다. `return` 문을 하지 않습니다.  
  
-   경우 <xref:System.Environment.Exit%2A> 에서 호출 되는 `try` 또는 `catch` 블록에서 코드 `finally` 블록이 실행 되지 않습니다. 경우는 `return` 문이 사용 된 코드는 `finally` 블록은 실행 합니다.  
  
-   하는 경우 <xref:System.Environment.Exit%2A> 될 때 호출 되 코드를 [제약이 있는 실행 영역](~/docs/framework/performance/constrained-execution-regions.md) (CER) 실행 중인지, CER 실행 완료 되지 것입니다. 경우는 `return` 문을 사용 하는, CER 실행이 완료 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출자에게 이 기능을 수행하기 위한 충분한 보안 권한이 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출할 수 있습니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public static int ExitCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:System.Environment.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int ExitCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExitCode : int with get, set" Usage="System.Environment.ExitCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프로세스의 종료 코드를 가져오거나 설정합니다.</summary>
        <value>종료 코드가 포함된 32비트 부호 있는 정수입니다. 기본값은 프로세스가 완료되었음을 나타내는 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `Main` 메서드가 반환 되는 `void`, 호출 환경에 반환 되는 종료 코드를 설정 하려면이 속성을 사용할 수 있습니다. 하는 경우 `Main` 을 반환 하지 않는 `void`,이 속성은 무시 됩니다. 이 속성의 초기 값은 0입니다.  
  
> [!WARNING]
>  <xref:System.Environment.ExitCode%2A> 속성이 부호 있는 32 비트 정수입니다. 속성 부정적인 종료 코드 반환을 방지 하려면 하지 0x80000000 보다 크거나 같은 경우 값을 사용 해야 합니다.  
  
 0이 아닌 숫자를 사용 하 여 오류가 발생 합니다. 애플리케이션에서 고유한 오류 코드는 열거형에서 정의 시나리오에 따라 적절 한 오류 코드를 반환 합니다. 예를 들어 값이 필요한 파일이 있는지를 나타내는 1 및 값이 잘못 된 형식으로 파일 임을 나타내려면 2 반환 합니다. Windows 운영 체제에서 사용 되는 종료 코드의 목록을 참조 하세요 [시스템 오류 코드](https://msdn.microsoft.com/library/ms681381\(v=vs.85\)) Windows 설명서에서.  
  
   
  
## Examples  
 다음은 명령줄 인수로 전달 된 정수 값을 두 배로 증가 하는 Double.exe 라는 간단한 앱입니다. 값을 할당 하려면 오류 코드는 <xref:System.Environment.ExitCode%2A> 속성을 오류 조건을 나타냅니다. 성공적으로 예제를 컴파일하려면 System.Numerics.dll 어셈블리에 대 한 참조를 추가 해야 하는 참고 합니다.  
  
 [!code-csharp[System.Environment.ExitCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.exitcode/cs/double.cs#1)]
 [!code-vb[System.Environment.ExitCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.exitcode/vb/double.vb#1)]  
  
 이 예제에서는 해당 오류 코드를 사용 하 여 액세스할 수 있도록 하는 다음과 같은 배치 파일에서 호출할 수 있습니다는 `ERRORLEVEL` 명령입니다.  
  
```  
  
echo off  
Double.exe %1  
If errorlevel 1639 goto NoArg   
if errorlevel 534 goto Overflow  
if errorlevel 160 goto BadArg  
if errorlevel 0 echo Completed Successfully   
goto :EOF  
  
:NoArg  
echo Missing argument  
goto :EOF  
  
: Overflow  
echo Arithmetic overflow  
goto :EOF  
  
:BadArg  
echo Invalid argument  
goto :EOF  
  
```  
  
 다음 배치 파일을 호출 하 여 생성 되는 몇 가지 샘플 출력을 보여 줍니다.  
  
```Output  
  
>getdouble 123>echo offResult: 246Completed Successfully>getdouble 5912323109093>echo offArithmetic overflow>getdouble>echo offMissing argument>getdouble "a string">echo offInvalid argument  
  
```  
  
 Double.exe 동일 함수에 다음 예제에서는 이전의 명명 된 진입점을 정의 한다는 점을 제외 하면에 대 한 코드를 확인 `Main` 반환 값 없음-이 예제에서는 명명 된 진입점을 정의 하는 반면 있는 `Main` 정수를 반환 합니다.  
  
 [!code-csharp[System.Environment.ExitCode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.exitcode/cs/double1.cs#2)]
 [!code-vb[System.Environment.ExitCode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.exitcode/vb/double1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandEnvironmentVariables">
      <MemberSignature Language="C#" Value="public static string ExpandEnvironmentVariables (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ExpandEnvironmentVariables(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.ExpandEnvironmentVariables(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExpandEnvironmentVariables (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ExpandEnvironmentVariables(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member ExpandEnvironmentVariables : string -&gt; string" Usage="System.Environment.ExpandEnvironmentVariables name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name">0개 이상의 환경 변수 이름이 포함된 문자열입니다. 각 환경 변수는 백분율 기호(%)로 묶어야 합니다.</param>
        <summary>지정된 문자열에 있는 각 환경 변수 이름을 해당 변수의 값에 해당하는 문자열로 바꾼 다음 결과 문자열을 반환합니다.</summary>
        <returns>각 환경 변수가 해당 값으로 바뀌는 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 운영 체제에서 환경 변수를 검색 하는 COM interop 사용 됩니다. 오류의 원인을 설명 하는 HRESULT은 몇 가지 가능한 예외 중 하나를 생성 하는 COM 오류로 인해 환경 변수를 검색할 수 없는 경우 즉, 예외를 HRESULT에 따라 달라 집니다. HRESULT를 처리 하는 방법에 대 한 자세한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A?displayProperty=nameWithType> 메서드.  
  
 설정 된 환경 변수에 대 한 대체만 발생 합니다. 예를 들어 `name` 는 "나열한 나열한 % ="입니다. 이 메서드가 반환 하는 경우 환경 변수를 나열한, 42로 설정 되어, "나열한 = 42"입니다. 나열한 설정 되지 않은 경우에 변경 되지 않습니다 발생 합니다. 이 메서드가 반환 "나열한 나열한 % ="입니다.  
  
 반환 값의 크기는 32k 제한입니다.  
  
   
  
## Examples  
 다음 예제에는 시스템 드라이브와 시스템 루트 변수를 가져오는 방법을 보여 줍니다.  
  
 [!code-cpp[Environment.ExpandEnvironmentVariables#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.ExpandEnvironmentVariables/CPP/expandenvironmentvariables.cpp#1)]
 [!code-csharp[Environment.ExpandEnvironmentVariables#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.ExpandEnvironmentVariables/CS/expandenvironmentvariables.cs#1)]
 [!code-vb[Environment.ExpandEnvironmentVariables#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.ExpandEnvironmentVariables/VB/expandenvironmentvariables.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />가 <see langword="null" />인 경우</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">환경 변수에 액세스 하는 기능에 대 한 <paramref name="name" />합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="FailFast">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Windows 애플리케이션 이벤트 로그에 메시지를 쓴 후 프로세스를 즉시 종료한 다음 해당 메시지와 선택적 예외 정보를 Microsoft로 보내는 오류 보고에 포함시킵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FailFast">
      <MemberSignature Language="C#" Value="public static void FailFast (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailFast(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.FailFast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FailFast (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FailFast(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member FailFast : string -&gt; unit" Usage="System.Environment.FailFast message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">프로세스가 종료된 이유를 설명하는 메시지이거나, 설명이 제공되지 않는 경우 <see langword="null" />입니다.</param>
        <summary>Windows 애플리케이션 이벤트 로그에 메시지를 쓴 후 프로세스를 즉시 종료한 다음 해당 메시지를 Microsoft로 보내는 오류 보고에 포함시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 활성 실행 하지 않고 프로세스를 종료 `try` / `finally` 블록 또는 종료자입니다.  
  
 합니다 <xref:System.Environment.FailFast%2A> 쓰기 메서드를 `message` 문자열 Windows 애플리케이션 이벤트 로그에 애플리케이션의 덤프를 만들고 다음 현재 프로세스를 종료 합니다. `message` 문자열 오류 보고를 Microsoft에에서도 포함 됩니다.  
  
 사용 하 여 합니다 <xref:System.Environment.FailFast%2A> 메서드 대신 합니다 <xref:System.Environment.Exit%2A> 애플리케이션의 상태는 복구할 수 없을 정도로 손상 된 경우 애플리케이션을 종료 하는 방법 및 애플리케이션의 실행 `try`/`finally` 블록 및 종료자 프로그램 리소스를 손상 됩니다.  
  
 정보는 Windows 오류 보고를 사용 하 여 Microsoft로 보고 됩니다. 자세한 내용은 참조 하세요. [Windows 오류 보고: Getting Started](https://msdn.microsoft.com/library/windows/hardware/dn641144.aspx)합니다.  
  
   
  
## Examples  
 다음 예제에서는 Windows 애플리케이션 이벤트 로그에 로그 항목을 기록 및 현재 프로세스를 종료 합니다.  
  
 [!code-csharp[environment.FailFast#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.FailFast/cs/ff.cs#1)]
 [!code-vb[environment.FailFast#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.FailFast/vb/ff.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="FailFast">
      <MemberSignature Language="C#" Value="public static void FailFast (string message, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailFast(string message, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.FailFast(System.String,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FailFast(System::String ^ message, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="static member FailFast : string * Exception -&gt; unit" Usage="System.Environment.FailFast (message, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">프로세스가 종료된 이유를 설명하는 메시지이거나, 설명이 제공되지 않는 경우 <see langword="null" />입니다.</param>
        <param name="exception">종료의 원인이 된 오류를 나타내는 예외입니다. 일반적으로 <see langword="catch" /> 블록의 예외입니다.</param>
        <summary>Windows 애플리케이션 이벤트 로그에 메시지를 쓴 후 프로세스를 즉시 종료한 다음 해당 메시지와 예외 정보를 Microsoft로 보내는 오류 보고에 포함시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 활성 실행 하지 않고 프로세스를 종료 `try` / `finally` 블록 또는 종료자입니다.  
  
 합니다 <xref:System.Environment.FailFast%2A> 쓰기 메서드를 `message` 문자열 Windows 애플리케이션 이벤트 로그에 애플리케이션의 덤프를 만들고 다음 현재 프로세스를 종료 합니다.  
  
 정보는 Windows 오류 보고를 사용 하 여 Microsoft로 보고 됩니다. 자세한 내용은 참조 하세요. [Windows 오류 보고: Getting Started](https://msdn.microsoft.com/library/windows/hardware/dn641144.aspx)합니다. Microsoft에 보고 하는 오류에 포함 `message` 및 `exception` 오류 분류를 사용 하는 정보를 제공 하는 정보입니다. 하지만 `exception` 는 프로세스가 종료 되기 때문에 처리 되지 예외를 발생 시킨 컨텍스트 정보를 가져올 수 됩니다.  
  
 경우 `exception` 는 `null`, 이거나 `exception` 가 throw 되지 않는이 메서드가 동일 하 게 작동 합니다 <xref:System.Environment.FailFast%28System.String%29> 메서드 오버 로드.  
  
 사용 하 여 합니다 <xref:System.Environment.FailFast%2A> 메서드 대신 합니다 <xref:System.Environment.Exit%2A> 애플리케이션의 상태는 복구할 수 없을 정도로 손상 된 경우 애플리케이션을 종료 하는 방법 및 애플리케이션의 실행 `try`/`finally` 블록 및 종료자 프로그램 리소스를 손상 됩니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetCommandLineArgs">
      <MemberSignature Language="C#" Value="public static string[] GetCommandLineArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetCommandLineArgs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetCommandLineArgs" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCommandLineArgs () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetCommandLineArgs();" />
      <MemberSignature Language="F#" Value="static member GetCommandLineArgs : unit -&gt; string[]" Usage="System.Environment.GetCommandLineArgs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 프로세스에 대한 명령줄 인수가 포함된 문자열 배열을 반환합니다.</summary>
        <returns>각 요소에 명령줄 인수가 포함된 문자열의 배열입니다. 첫 번째 요소는 실행 파일 이름이며 다음에 나오는 0개 이상의 요소에는 나머지 명령줄 인수가 들어 있습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 배열의 첫 번째 요소에는 실행 중인 프로그램의 파일 이름을 포함합니다. 첫 번째 요소는 같은 파일 이름을 사용할 수 없는 경우 <xref:System.String.Empty?displayProperty=nameWithType>합니다. 나머지 요소를 명령줄에 입력 추가 토큰을 포함 합니다.  
  
 프로그램 파일 이름 수 있지만 경로 정보를 포함 하도록 필요 없습니다.  
  
 명령줄 인수는 공백으로 구분 됩니다. 인수 내에 공백을 포함 하려면 큰따옴표 (")를 사용할 수 있습니다. 그러나 작은따옴표 (')는이 기능을 제공 하지 않습니다.  
  
 큰따옴표 두 또는 짝수 개의 백슬래시를 수행 하는 경우 각 계속 백슬래시 쌍이 하나 이상의 백슬래시를 사용 하 여 대체 되 고 큰따옴표 제거 됩니다. 큰따옴표가 오는 홀수 개의 백슬래시를 하나만 포함 하 여 각 이전 쌍 하나 이상의 백슬래시를 사용 하 여 대체 되 고 나머지 백슬래시에 제거 됩니다. 그러나이 경우 큰따옴표 제거 되지 않습니다.  
  
 다음 표는 명령줄 인수 구분 수 있는 방법을 보여 주고 가정 `MyApp` 현재 실행 중인 애플리케이션으로 합니다.  
  
|명령줄 입력|결과 명령줄 인수|  
|-------------------------------|--------------------------------------|  
|`MyApp alpha beta`|`MyApp, alpha, beta`|  
|`MyApp "alpha with spaces" "beta with spaces"`|`MyApp, alpha with spaces, beta with spaces`|  
|`MyApp 'alpha with spaces' beta`|`MyApp, 'alpha, with, spaces', beta`|  
|`MyApp \\\alpha \\\\"beta`|`MyApp, \\\alpha, \\beta`|  
|`MyApp \\\\\"alpha \"beta`|`MyApp, \\"alpha, "beta`|  
  
 단일 문자열로 명령줄을 가져오려면는 <xref:System.Environment.CommandLine%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 애플리케이션의 명령줄 인수가 표시 됩니다.  
  
 [!code-cpp[Environment.GetCommandLineArgs#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.GetCommandLineArgs/CPP/getcommandlineargs.cpp#1)]
 [!code-csharp[Environment.GetCommandLineArgs#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.GetCommandLineArgs/CS/getcommandlineargs.cs#1)]
 [!code-vb[Environment.GetCommandLineArgs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.GetCommandLineArgs/VB/getcommandlineargs.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">시스템에서 명령줄 인수를 지원하지 않습니다.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">PATH 환경 변수를 읽기 액세스 권한입니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
        <altmember cref="P:System.Environment.CommandLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnvironmentVariable">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>환경 변수 값을 검색합니다.</summary>
        <altmember cref="M:System.Environment.GetEnvironmentVariables" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public static string GetEnvironmentVariable (string variable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEnvironmentVariable(string variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetEnvironmentVariable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvironmentVariable (variable As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEnvironmentVariable(System::String ^ variable);" />
      <MemberSignature Language="F#" Value="static member GetEnvironmentVariable : string -&gt; string" Usage="System.Environment.GetEnvironmentVariable variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="variable">환경 변수의 이름입니다.</param>
        <summary>현재 프로세스에서 환경 변수의 값을 검색합니다.</summary>
        <returns><paramref name="variable" />로 지정한 환경 변수의 값이 반환되거나, 환경 변수를 찾을 수 없는 경우 <see langword="null" />이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<xref:System.Environment.GetEnvironmentVariable%28System.String%29> 메서드는 현재 프로세스의 환경 블록에서 환경 변수를 검색 합니다. 호출 하는 것과 같습니다 합니다 <xref:System.Environment.GetEnvironmentVariable%28System.String%2CSystem.EnvironmentVariableTarget%29> 메서드를 `target` 의 값 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>합니다. 

해당 값과 함께 모든 환경 변수를 검색 하려면 호출을 <xref:System.Environment.GetEnvironmentVariables%2A> 메서드.  
  
환경 변수 이름은 Linux 및 macOS에서 대/소문자 구분 되지만 Windows에서 대/소문자 구분 되지 않습니다.  
 
### <a name="on-windows-systems"></a>Windows 시스템에서

 Windows 시스템에서 현재 프로세스의 환경 블록을 포함 합니다.
 
- 만든 부모 프로세스에 의해 제공 되는 모든 환경 변수입니다. 예를 들어, 콘솔 창에서에서 시작 되는.NET 애플리케이션을 모든 콘솔 창의 환경 변수를 상속 합니다. 

  부모 프로세스가 없는 경우 컴퓨터별 및 사용자별으로 환경 변수 대신 사용 됩니다. 예를 들어 새 콘솔 창에는 시작 된 시간에 정의 된 모든 컴퓨터별 및 사용자별 환경 변수

- 호출 하 여 프로세스를 실행 하는 동안 프로세스 블록에 추가 하는 모든 변수를 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> 메서드 또는 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 메서드를 `target` 의 값 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>합니다. 이러한 환경 변수는.NET 애플리케이션 종료 될 때까지 유지 됩니다.  
  
환경 변수는 프로세스가 시작 된 후에 생성 되 면이 메서드를 호출 하 여 생성 된 변수만 검색 하 여는 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> 메서드 또는 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 메서드를 `target` 의 값입니다.<xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>합니다.  

### <a name="on-macos-and-linux-systems"></a>MacOS 및 Linux 시스템에서

MacOS 및 Linux에서 현재 프로세스의 환경 블록은 다음 환경 변수를 포함합니다.

- 만든 부모 프로세스에 의해 제공 되는 모든 환경 변수입니다. 셸에서 시작 된.NET 애플리케이션, 셸에서 정의 하는 모든 환경 변수가 포함 됩니다.

- 호출 하 여 프로세스를 실행 하는 동안 프로세스 블록에 추가 하는 모든 변수를 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> 메서드 또는 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 메서드를 `target` 의 값 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>합니다. 이러한 환경 변수는.NET 애플리케이션 종료 될 때까지 유지 됩니다.  

Linux 및 macOS에서.NET core는 컴퓨터별 또는 사용자별으로 환경 변수를 지원 하지 않습니다.   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Environment.GetEnvironmentVariable%2A> 검색 하는 메서드는 `windir` Windows 디렉터리의 경로 포함 하는 환경 변수를 합니다.  
  
 [!code-cpp[System.Environment#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Environment/CPP/Vars1.cpp#4)]
 [!code-csharp[System.Environment#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Environment/CS/Vars1.cs#4)]
 [!code-vb[System.Environment#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Environment/VB/Vars1.vb#4)]  
  
 다음 예제에서는 라는 환경 변수 값을 검색 하려고 `Test1` 프로세스 환경 블록에서. 이 예에서는 만듭니다 변수가 존재 하지 않는 경우 해당 하 고 해당 값을 검색 합니다. 이 예제에서는 변수의 값을 표시합니다. 또한 호출 예제에서는 변수를 만든 경우는 <xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29> 의 각 멤버를 사용 하 여 메서드를 <xref:System.EnvironmentVariableTarget> 열거형 변수는 현재 프로세스 환경 블록 에서만에서 검색할 수 있는 설정입니다. 마지막으로,이 예제에서는 변수를 만든 경우 삭제 합니다.  
  
 [!code-csharp[System.Environment.GetEnvironmentVariable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.getenvironmentvariable/cs/getenvironmentvariableex1.cs#2)]
 [!code-vb[System.Environment.GetEnvironmentVariable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.getenvironmentvariable/vb/getenvironmentvariableex1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="variable" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 이 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">값을 읽을 수 있는 기능에 대 한 <paramref name="variable" />합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
        <altmember cref="M:System.Environment.GetEnvironmentVariables" />
        <altmember cref="M:System.Environment.SetEnvironmentVariable(System.String,System.String)" />
        <altmember cref="T:System.EnvironmentVariableTarget" />
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public static string GetEnvironmentVariable (string variable, EnvironmentVariableTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEnvironmentVariable(string variable, valuetype System.EnvironmentVariableTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvironmentVariable (variable As String, target As EnvironmentVariableTarget) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEnvironmentVariable(System::String ^ variable, EnvironmentVariableTarget target);" />
      <MemberSignature Language="F#" Value="static member GetEnvironmentVariable : string * EnvironmentVariableTarget -&gt; string" Usage="System.Environment.GetEnvironmentVariable (variable, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="target" Type="System.EnvironmentVariableTarget" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="variable">환경 변수의 이름입니다.</param>
        <param name="target"><see cref="T:System.EnvironmentVariableTarget" /> 값 중 하나입니다.</param>
        <summary>현재 프로세스 또는 현재 사용자나 로컬 컴퓨터의 Windows 운영 체제 레지스트리 키에서 환경 변수의 값을 검색합니다.</summary>
        <returns><paramref name="variable" /> 및 <paramref name="target" /> 매개 변수로 지정한 환경 변수의 값이 반환되거나, 환경 변수를 찾을 수 없는 경우 <see langword="null" />이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks 

해당 값과 함께 모든 환경 변수를 검색 하려면 호출을 <xref:System.Environment.GetEnvironmentVariables%2A> 메서드.  
  
환경 변수 이름은 Linux 및 macOS에서 대/소문자 구분 되지만 Windows에서 대/소문자 구분 되지 않습니다. 

### <a name="on-windows-systems"></a>Windows 시스템에서

Windows에서 `target` 매개 변수는 현재 프로세스 또는 현재 사용자나 로컬 컴퓨터의 Windows 운영 체제 레지스트리 키에서 환경 변수는 검색할 수 있는지 여부를 지정 합니다. 사용자별 및 컴퓨터별 환경 변수가 모두.NET 프로세스를 생성 하는 부모 프로세스에 사용할 수 있는 다른 환경 변수는 현재 프로세스의 환경 블록으로 자동 복사 됩니다. 그러나 호출 하 여 현재 프로세스의 환경 블록에만 추가 환경 변수를 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> 메서드 또는 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 메서드를 `target` 의 값 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 프로세스의 기간에만 유지 합니다.  
  
### <a name="on-macos-and-linux-systems"></a>MacOS 및 Linux 시스템에서

MacOS 및 Linux에서의 `GetEnvironmentVariable(String, EnvironmentVariableTarget)` 메서드 지원을 `target` 의 값 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 만 합니다. 사용 하 여 호출을 `target` 의 값 <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> 또는 <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> 는 지원 되지 않으며 반환 `null`합니다. 

프로세스별 환경 변수는 합니다.

- 호출 하는 데 셸 일반적으로 부모 프로세스에서 상속 된 `dotnet.exe` 또는.NET 애플리케이션을 시작 합니다.

- 호출 하 여 정의 된 합니다 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> 메서드 또는 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 메서드를 `target` 의 값 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>합니다. 이러한 환경 변수 까지만 지속 된 `dotnet` 프로세스 또는.NET 애플리케이션을 종료 합니다.   
  
## Examples  
 다음 예제에서는 프로세스, 사용자 및 컴퓨터 대상에 대 한 환경 변수를 만들고, 확인 하는지 여부를 운영 체제 레지스트리에 사용자와 컴퓨터 환경 변수를 포함 한 다음 환경 변수를 삭제 합니다.  
  
 [!code-cpp[environment.getsetenvar#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.getsetenvar/CPP/source.cpp#1)]
 [!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs#1)]
 [!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="variable" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="target" />는 유효한 <see cref="T:System.EnvironmentVariableTarget" /> 값이 아닙니다.</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 이 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">값을 읽을 수 있는 기능에 대 한 <paramref name="variable" /> 하는 경우 <paramref name="target" /> 됩니다 <see cref="F:System.EnvironmentVariableTarget.Process" /> (연관 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" />), 
또는 
환경 변수에 대 한 전체에 대 한 경우 <paramref name="target" /> 됩니다 <see cref="F:System.EnvironmentVariableTarget.User" /> 하거나 <see cref="F:System.EnvironmentVariableTarget.Machine" /> (연관 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />).</permission>
        <altmember cref="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)" />
        <altmember cref="M:System.Environment.GetEnvironmentVariables" />
        <altmember cref="T:System.EnvironmentVariableTarget" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnvironmentVariables">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>모든 환경 변수 이름과 해당 값을 검색합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnvironmentVariables">
      <MemberSignature Language="C#" Value="public static System.Collections.IDictionary GetEnvironmentVariables ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IDictionary GetEnvironmentVariables() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetEnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvironmentVariables () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IDictionary ^ GetEnvironmentVariables();" />
      <MemberSignature Language="F#" Value="static member GetEnvironmentVariables : unit -&gt; System.Collections.IDictionary" Usage="System.Environment.GetEnvironmentVariables " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 프로세스에서 모든 환경 변수 이름과 해당 값을 검색합니다.</summary>
        <returns>모든 환경 변수 이름과 해당 값을 포함하는 사전이 반환되고, 환경 변수를 찾을 수 없는 경우 빈 사전이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이름 및 환경 변수에 대해 값을 반환 된 키-값 쌍으로 저장 됩니다 <xref:System.Collections.IDictionary>합니다.  
  
### <a name="on-windows-systems"></a>Windows 시스템에서

Windows 시스템에서는 `GetEnvironmentVariables` 메서드는 다음 환경 변수에 반환 합니다.
  
- 모든 컴퓨터에서 해당 값과 함께 프로세스를 만들 때 정의 하는 환경 변수입니다.  
  
- 시간에 정의 된 모든 사용자별 환경 변수는 프로세스가 만들어지면 해당 값과 함께 합니다.  

- 모든 변수는.NET 애플리케이션 시작 되었거나 프로세스를 실행 하는 동안 프로세스 블록에 추가 하는 부모 프로세스에서 상속 합니다. 프로세스 중 하나를 호출 하 여 실행 되는 동안 환경 변수가 추가 되는 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%29> 메서드 또는 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 메서드를 `target` 의 값 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>합니다.  

### <a name="on-macos-and-linux-systems"></a>MacOS 및 Linux 시스템에서

MacOS 및 Linux에서 합니다 `GetEnvironmentVariables` 메서드 이름 및 시작 하는 부모 프로세스에서 상속 된 모든 환경 변수의 값을 검색 합니다 `dotnet` 프로세스나는 범위 내에 정의 된를 `dotnet` 프로세스 자체. 한 번의 `dotnet` 프로세스가 종료, 후자 환경 변수들 중단 존재 합니다. 

.NET core는 컴퓨터별 또는 사용자별으로 환경 변수를 지원 하지 않습니다.   
  
## Examples  
 다음 예제는 <xref:System.Environment.GetEnvironmentVariables%2A> 메서드.  
  
 [!code-cpp[Environment.GetEnvironmentVariables#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.GetEnvironmentVariables/CPP/getenvironmentvariables.cpp#1)]
 [!code-csharp[Environment.GetEnvironmentVariables#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.GetEnvironmentVariables/CS/getenvironmentvariables.cs#1)]
 [!code-vb[Environment.GetEnvironmentVariables#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.GetEnvironmentVariables/VB/getenvironmentvariables.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출자에게 이 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.OutOfMemoryException">버퍼 메모리가 부족합니다.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">이름 및 환경 변수의 값을 읽을 수 있습니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentVariables">
      <MemberSignature Language="C#" Value="public static System.Collections.IDictionary GetEnvironmentVariables (EnvironmentVariableTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IDictionary GetEnvironmentVariables(valuetype System.EnvironmentVariableTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnvironmentVariables (target As EnvironmentVariableTarget) As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IDictionary ^ GetEnvironmentVariables(EnvironmentVariableTarget target);" />
      <MemberSignature Language="F#" Value="static member GetEnvironmentVariables : EnvironmentVariableTarget -&gt; System.Collections.IDictionary" Usage="System.Environment.GetEnvironmentVariables target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.EnvironmentVariableTarget" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="target"><see cref="T:System.EnvironmentVariableTarget" /> 값 중 하나입니다.</param>
        <summary>현재 프로세스 또는 현재 사용자나 로컬 컴퓨터의 Windows 운영 체제 레지스트리 키에서 모든 환경 변수 이름과 해당 값을 검색합니다.</summary>
        <returns><paramref name="target" /> 매개 변수로 지정한 원본의 모든 환경 변수 이름과 해당 값을 포함하는 사전이 반환되거나, 환경 변수를 찾을 수 없는 경우 빈 사전이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

이름 및 환경 변수의 값을 반환 된 키/값 쌍으로 저장 됩니다 <xref:System.Collections.IDictionary> 개체입니다.  

### <a name="on-windows-systems"></a>Windows 시스템에서

Windows 시스템에서의 `target` 매개 변수를 현재 프로세스, 현재 사용자에 대 한 레지스트리 키 또는 레지스트리 키를 로컬 컴퓨터에 대 한 원본 인지 여부를 지정 합니다.  

### <a name="on-macos-and-linux-systems"></a>MacOS 및 Linux 시스템에서

MacOS 및 Linux에만 `target` 의 값 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 지원 됩니다. 프로세스별 환경 변수는 시작 하는 데 사용 하는 부모 프로세스 (일반적으로 셸)에서 상속 합니다 `dotnet` 처리 하거나 범위 내에 정의 된를 `dotnet` 프로세스 자체. 한 번 dotnet 프로세스가 종료 후자 환경을 변수들 중단 존재 합니다.  

컴퓨터별 및 사용자별으로 환경 변수는 지원 되지 않습니다. A `target` 변수의 <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> 또는 <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> 빈 배열을 반환 합니다.
  
## Examples  
 다음 예제에서는 프로세스, 사용자 및 컴퓨터 대상에 대 한 환경 변수를 만들고, 확인 하는지 여부를 운영 체제 레지스트리에 사용자와 컴퓨터 환경 변수를 포함 한 다음 환경 변수를 삭제 합니다.  
  
 [!code-cpp[environment.getsetenvar#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.getsetenvar/CPP/source.cpp#1)]
 [!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs#1)]
 [!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출자에게 <paramref name="target" />의 지정된 값에 대해 이 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="target" />이 잘못된 값을 포함합니다.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">하는 경우 이름 및 환경 변수의 값을 읽을 수에 대 한 <paramref name="target" /> 됩니다 <see cref="F:System.EnvironmentVariableTarget.Process" /> (연관 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" />), 
또는 
환경 변수에 대 한 전체에 대 한 경우 <paramref name="target" /> 됩니다 <see cref="F:System.EnvironmentVariableTarget.User" /> 하거나 <see cref="F:System.EnvironmentVariableTarget.Machine" /> (연관 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />).</permission>
        <altmember cref="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)" />
        <altmember cref="T:System.EnvironmentVariableTarget" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFolderPath">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 열거형으로 식별되는 시스템 특수 폴더의 경로를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFolderPath">
      <MemberSignature Language="C#" Value="public static string GetFolderPath (Environment.SpecialFolder folder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFolderPath(valuetype System.Environment/SpecialFolder folder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFolderPath (folder As Environment.SpecialFolder) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFolderPath(Environment::SpecialFolder folder);" />
      <MemberSignature Language="F#" Value="static member GetFolderPath : Environment.SpecialFolder -&gt; string" Usage="System.Environment.GetFolderPath folder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="System.Environment+SpecialFolder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="folder">시스템 관련 폴더를 식별하는 열거형 값 중 하나입니다.</param>
        <summary>지정된 열거형으로 식별되는 시스템 특수 폴더의 경로를 가져옵니다.</summary>
        <returns>해당 폴더가 실제로 컴퓨터에 있으면 지정한 시스템 특수 폴더에 대한 경로이고, 그렇지 않으면 빈 문자열("")입니다.  
  
운영 체제에서 폴더를 만들지 않았거나, 기존 폴더가 삭제되었거나, 폴더가 My Computer와 같이 실제 경로에 해당하지 않는 가상 디렉터리인 경우 해당 폴더는 실제로 존재하지 않습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 프로그램 파일, 프로그램, 시스템 또는 공용 정보에 액세스를 사용할 수 있는 시작 등 시스템 특수 폴더의 경로를 검색 합니다. 특수 폴더 설정이 기본적으로 시스템에 의해 또는 사용자가 명시적으로 Windows의 버전을 설치 하는 경우.  
  
 합니다 `folder` 매개 변수 검색 하는 특수 폴더를 지정 하 고 있는 값 중 하나 여야 합니다는 <xref:System.Environment.SpecialFolder> 열거형; 모든 예외를 throw 하는 다른 값입니다.  
  
 특수 폴더에 대 한 자세한 내용은 참조는 [CSIDL](https://go.microsoft.com/fwlink/?LinkId=116664) 값 항목입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Environment.GetFolderPath%2A> 메서드를 반환 하 고 연관 된 경로 표시 합니다 `folder` 매개 변수.  
  
 [!code-cpp[Environment.GetFolderPath#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.GetFolderPath/CPP/getfolderpath.cpp#1)]
 [!code-csharp[Environment.GetFolderPath#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.GetFolderPath/CS/getfolderpath.cs#1)]
 [!code-vb[Environment.GetFolderPath#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.GetFolderPath/VB/getfolderpath.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="folder" />는 <see cref="T:System.Environment.SpecialFolder" />의 멤버가 아닙니다.</exception>
        <exception cref="T:System.PlatformNotSupportedException">현재 플랫폼이 지원되지 않습니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">경로 자체의 정보에 액세스 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFolderPath">
      <MemberSignature Language="C#" Value="public static string GetFolderPath (Environment.SpecialFolder folder, Environment.SpecialFolderOption option);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFolderPath(valuetype System.Environment/SpecialFolder folder, valuetype System.Environment/SpecialFolderOption option) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFolderPath (folder As Environment.SpecialFolder, option As Environment.SpecialFolderOption) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFolderPath(Environment::SpecialFolder folder, Environment::SpecialFolderOption option);" />
      <MemberSignature Language="F#" Value="static member GetFolderPath : Environment.SpecialFolder * Environment.SpecialFolderOption -&gt; string" Usage="System.Environment.GetFolderPath (folder, option)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="System.Environment+SpecialFolder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="option" Type="System.Environment+SpecialFolderOption" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="folder">시스템 관련 폴더를 식별하는 열거형 값 중 하나입니다.</param>
        <param name="option">특수 폴더에 액세스하는 데 사용할 옵션을 지정하는 열거형 값 중 하나입니다.</param>
        <summary>지정된 열거형으로 식별되는 시스템 특수 폴더에 대한 경로를 가져오고 특수 폴더에 액세스하는 데 지정한 옵션을 사용합니다.</summary>
        <returns>해당 폴더가 실제로 컴퓨터에 있으면 지정한 시스템 특수 폴더에 대한 경로이고, 그렇지 않으면 빈 문자열("")입니다.  
  
운영 체제에서 폴더를 만들지 않았거나, 기존 폴더가 삭제되었거나, 폴더가 My Computer와 같이 실제 경로에 해당하지 않는 가상 디렉터리인 경우 해당 폴더는 실제로 존재하지 않습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 프로그램 파일, 프로그램, 시스템 또는 공용 정보에 액세스를 사용할 수 있는 시작 등 시스템 특수 폴더의 경로를 검색 합니다. 특수 폴더 설정이 기본적으로 시스템에 의해 또는 사용자가 명시적으로 Windows의 버전을 설치 하는 경우.  
  
 합니다 `folder` 매개 변수 검색 하는 특수 폴더를 지정 하 고 있는 값 중 하나 여야 합니다는 <xref:System.Environment.SpecialFolder> 열거형; 모든 예외를 throw 하는 다른 값입니다.  
  
 특수 폴더에 대 한 자세한 내용은 참조는 [CSIDL](https://go.microsoft.com/fwlink/?LinkId=116664) 값 항목입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="folder" />는 <see cref="T:System.Environment.SpecialFolder" />의 멤버가 아닙니다.
또는

<paramref name="options" />는 <see cref="T:System.Environment.SpecialFolderOption" />의 멤버가 아닙니다.</exception>
        <exception cref="T:System.PlatformNotSupportedException">현재 플랫폼이 지원되지 않습니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">경로 자체의 정보에 액세스 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalDrives">
      <MemberSignature Language="C#" Value="public static string[] GetLogicalDrives ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetLogicalDrives() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.GetLogicalDrives" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLogicalDrives () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetLogicalDrives();" />
      <MemberSignature Language="F#" Value="static member GetLogicalDrives : unit -&gt; string[]" Usage="System.Environment.GetLogicalDrives " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 컴퓨터의 논리 드라이브 이름이 포함된 문자열의 배열을 반환합니다.</summary>
        <returns>각 요소에 논리 드라이브의 이름이 포함된 문자열의 배열입니다. 예를 들어 컴퓨터의 하드 드라이브가 첫 번째 논리 드라이브일 경우, 반환되는 첫 번째 요소는 "C:\\"입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 하 여 현재 컴퓨터의 논리 드라이브를 표시 하는 방법의 <xref:System.Environment.GetLogicalDrives%2A> 메서드.  
  
 [!code-cpp[Environment.GetLogicalDrives#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.GetLogicalDrives/CPP/getlogicaldrives.cpp#1)]
 [!code-csharp[Environment.GetLogicalDrives#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.GetLogicalDrives/CS/getlogicaldrives.cs#1)]
 [!code-vb[Environment.GetLogicalDrives#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.GetLogicalDrives/VB/getlogicaldrives.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 필요한 사용 권한이 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">이 권한에 의해 보호 되는 리소스에 대 한 전체 액세스 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="HasShutdownStarted">
      <MemberSignature Language="C#" Value="public static bool HasShutdownStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool HasShutdownStarted" />
      <MemberSignature Language="DocId" Value="P:System.Environment.HasShutdownStarted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HasShutdownStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool HasShutdownStarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasShutdownStarted : bool" Usage="System.Environment.HasShutdownStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 애플리케이션 도메인이 언로드되고 있는지 또는 CLR(공용 언어 런타임)이 종료되고 있는지를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" /> 현재 응용 프로그램 도메인이 언로드되지 또는 CLR를 종료 하 고; 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **.NET framework 에서만**: CLR 애플리케이션 도메인 언로드 종료자 메서드를 해당 애플리케이션 도메인에 있는 모든 개체에는 종료 자가 실행 됩니다. CLR 종료 되 면 종료자 스레드가 종료자 메서드를 가진 모든 개체에 시작 합니다. 합니다 <xref:System.Environment.HasShutdownStarted%2A> 속성이 반환 `true` 종료자 스레드를 시작한 후에 합니다. 속성을 반환 하는 경우 `true`에 애플리케이션 도메인이 언로드되는 중 또는 CLR 자체를 종료 하 고 호출 하 여 확인할 수는 <xref:System.AppDomain.IsFinalizingForUnload%2A?displayProperty=nameWithType> 메서드. 이 메서드는 반환 `true` 애플리케이션 도메인이 언로드되고 있으므로 종료 자가 호출 하는 경우 또는 `false` CLR를 종료 하는 경우.  
  
 합니다 <xref:System.Environment.HasShutdownStarted%2A> 속성이 반환 `false` 종료자 스레드가 시작 되지 않은 경우.  
  
 이 속성을 사용 하면 정적 변수 종료 코드에서 액세스할 지 여부를 확인할 수 있습니다. 애플리케이션 도메인 또는 CLR 종료 되 면 종료 메서드를 포함 하는 static 필드로 참조 되는 모든 개체 안정적으로 액세스할 수 없습니다. 이러한 개체 수 이미 종료 되었을 때문입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.AppDomain.IsFinalizingForUnload" />
      </Docs>
    </Member>
    <Member MemberName="Is64BitOperatingSystem">
      <MemberSignature Language="C#" Value="public static bool Is64BitOperatingSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Is64BitOperatingSystem" />
      <MemberSignature Language="DocId" Value="P:System.Environment.Is64BitOperatingSystem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Is64BitOperatingSystem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Is64BitOperatingSystem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Is64BitOperatingSystem : bool" Usage="System.Environment.Is64BitOperatingSystem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 운영 체제가 64비트 운영 체제인지를 확인합니다.</summary>
        <value>운영 체제가 64비트이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Is64BitProcess">
      <MemberSignature Language="C#" Value="public static bool Is64BitProcess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Is64BitProcess" />
      <MemberSignature Language="DocId" Value="P:System.Environment.Is64BitProcess" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Is64BitProcess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Is64BitProcess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Is64BitProcess : bool" Usage="System.Environment.Is64BitProcess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 프로세스가 64비트 프로세스인지를 확인합니다.</summary>
        <value>프로세스가 64비트이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public static string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Environment.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Environment.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 로컬 컴퓨터의 NetBIOS 이름을 가져옵니다.</summary>
        <value>이 컴퓨터의 이름이 포함된 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 컴퓨터의 이름의 이름을 레지스트리에서 읽을 때 시스템을 시작할 때 설정 됩니다. 이 컴퓨터는 클러스터의 노드인 경우 노드 이름을 반환 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 코드 예제를 실행 하는 컴퓨터의 이름을 표시 합니다. (컴퓨터 이름 보안상의 이유로 예제의 출력에서 생략 됩니다.)  
  
 [!code-cpp[environment.machinename#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.MachineName/CPP/machinename.cpp#1)]
 [!code-csharp[environment.machinename#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.MachineName/CS/machinename.cs#1)]
 [!code-vb[environment.machinename#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.MachineName/VB/machinename.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 컴퓨터의 이름을 가져올 수 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">COMPUTERNAME 환경 변수를 읽기 액세스 권한입니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public static string NewLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Environment.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ NewLine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string" Usage="System.Environment.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 환경에 대해 정의된 줄 바꿈 문자열을 가져옵니다.</summary>
        <value>Unix 이외의 플랫폼의 경우 "\r\n"을 포함하는 문자열이거나 Unix 플랫폼의 경우 "\n"을 포함하는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성 값을 <xref:System.Environment.NewLine%2A> 현재 플랫폼 및.NET Framework의 구현에 맞게 사용자 지정 상수입니다. 속성 값의 이스케이프 문자에 대 한 자세한 내용은 참조 하세요. [문자 이스케이프](~/docs/standard/base-types/character-escapes-in-regular-expressions.md)합니다.  
  
 제공 하는 기능 <xref:System.Environment.NewLine%2A> 용어 줄 바꿈, 줄 바꿈, 줄 바꿈, 캐리지 리턴, CRLF, 및 줄 끝 이란 경우가 있습니다.  
  
 <xref:System.Environment.NewLine%2A> 이스케이프 문자 '\r' 및 '\n' Microsoft C# 및 C/c + +와 같은 언어별 줄 바꿈 지원과 함께 사용할 수 있습니다 또는 `vbCrLf` Microsoft Visual Basic입니다.  
  
 <xref:System.Environment.NewLine%2A> 자동으로 처리 하는 텍스트를 추가 합니다 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 및 <xref:System.Text.StringBuilder.AppendLine%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 줄 바꿈 문자로 구분 된 세 줄을 표시 합니다.  
  
 [!code-cpp[environment.newline#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.NewLine/CPP/newline.cpp#1)]
 [!code-csharp[environment.newline#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.NewLine/CS/newline.cs#1)]
 [!code-vb[environment.newline#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.NewLine/VB/newline.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OSVersion">
      <MemberSignature Language="C#" Value="public static OperatingSystem OSVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.OperatingSystem OSVersion" />
      <MemberSignature Language="DocId" Value="P:System.Environment.OSVersion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OSVersion As OperatingSystem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property OperatingSystem ^ OSVersion { OperatingSystem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OSVersion : OperatingSystem" Usage="System.Environment.OSVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.OperatingSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 플랫폼 식별자와 버전 번호가 들어 있는 <see cref="T:System.OperatingSystem" /> 개체를 가져옵니다.</summary>
        <value>플랫폼 식별자와 버전 번호가 포함된 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

`Environment.OSVersion` 속성 정확한 운영 체제와 해당 버전을 식별 하는 신뢰할 수 있는 방법을 제공 하지 않습니다. 따라서이 방법을 사용 하는 하지 않는 것이 좋습니다. 대신: 

- 운영 체제 플랫폼을 식별 하려면 사용 된 <xref:System.Runtime.InteropServices.RuntimeInformation.IsOSPlatform%2A?displayProperty=nameWithType> 메서드. 

- 보고 된 운영 체제 버전에 의존 하는 코드를 작성 하지 마세요. 대신, 애플리케이션에 필요한 기능 가용성을 검사 합니다.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 속성은 시스템 버전을 가져올 수 없습니다.  
  
또는 
가져온 플랫폼 식별자가 <see cref="T:System.PlatformID" />의 멤버가 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessorCount">
      <MemberSignature Language="C#" Value="public static int ProcessorCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ProcessorCount" />
      <MemberSignature Language="DocId" Value="P:System.Environment.ProcessorCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ProcessorCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int ProcessorCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessorCount : int" Usage="System.Environment.ProcessorCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 컴퓨터의 프로세서 수를 가져옵니다.</summary>
        <value>현재 컴퓨터의 프로세서 수를 지정하는 32비트 부호 있는 정수입니다. 기본값은 없습니다. 현재 컴퓨터에 여러 프로세서 그룹이 포함되어 있으면 이 속성을 통해 CLR(공용 언어 런타임)에서 사용할 수 있는 논리 프로세서 수가 반환됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 논리 프로세서 및 프로세서 그룹에 대 한 자세한 내용은 참조 하세요. [프로세서 그룹](https://msdn.microsoft.com/library/windows/desktop/dd405503.aspx)합니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Environment.ProcessorCount%2A> 속성입니다.  
  
 [!code-cpp[environment.processorcount#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.processorcount/CPP/pc.cpp#1)]
 [!code-csharp[environment.processorcount#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.processorcount/CS/pc.cs#1)]
 [!code-vb[environment.processorcount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.processorcount/VB/pc.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetEnvironmentVariable">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>환경 변수를 생성, 수정 또는 삭제합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public static void SetEnvironmentVariable (string variable, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEnvironmentVariable(string variable, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.SetEnvironmentVariable(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetEnvironmentVariable (variable As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetEnvironmentVariable(System::String ^ variable, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member SetEnvironmentVariable : string * string -&gt; unit" Usage="System.Environment.SetEnvironmentVariable (variable, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="variable">환경 변수의 이름입니다.</param>
        <param name="value"><paramref name="variable" />에 할당할 값입니다.</param>
        <summary>현재 프로세스에 저장되어 있는 환경 변수를 생성, 수정 또는 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출 하는 것은 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 값을 사용 하 여 오버 로드 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType> 에 대 한는 `target` 인수입니다.  
  
 경우는 `value` 인수가 비어 있지 (빈 값의 정의 대 한이 섹션의 뒷부분에 나오는 환경 변수 삭제에 대 한 설명 참조) 및 여 이라는 환경 변수는 `variable` 매개 변수가 존재 하지 않는 환경 변수 생성 되어 할당 내용의 `value`합니다. 파일이 해당 값이 수정 됩니다. 를 현재 프로세스의 환경 블록에서 환경 변수를 정의 하기 때문에 프로세스가 끝난 후에 유지 되지 않습니다.  
  
 경우 `variable` 문자가 아닌 초기 16 진수 0 문자를 0 문자에는 환경 변수 이름으로 간주 됩니다 하 고 모든 후속 문자는 무시 됩니다.  
  
 경우 `value` 문자가 아닌 초기 16 진수 0 문자를 0 문자 환경 변수에 할당 되 고 모든 후속 문자는 무시 됩니다.  
  
 하는 경우 `value` 비어 있고 여 이라는 환경 변수 `variable` 존재 하면 환경 변수가 삭제 됩니다. 경우 `variable` 존재 하지 않는 오류가 발생 하지 않습니다 하지만 작업을 수행할 수 없습니다. `value` 다음 조건 중 하나에서 빈으로 간주 됩니다.  
  
-   `null`합니다.  
  
-   <xref:System.String.Empty?displayProperty=nameWithType>합니다.  
  
-   값은 u+0000 단일 문자로 구성 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 라는 환경 변수 여부를 테스트 `APPDOMAIN` 현재 프로세스에 존재 합니다. 표시 되지 않는 경우 만듭니다 및 해당 값이 "True"로 설정 합니다. 경우의 값을 `APPDOMAIN` 환경 변수가 "True"를 호출 합니다 `Message.Display` 새 애플리케이션 도메인에서 메서드. 실행이 고, 그렇지는 `Message.Display` 메서드는 현재 애플리케이션 도메인입니다.  
  
 [!code-csharp[System.Environment.SetEnvironmentVariable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.setenvironmentvariable/cs/setenvironmentvariable1.cs#1)]
 [!code-vb[System.Environment.SetEnvironmentVariable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.setenvironmentvariable/vb/setenvironmentvariable1.vb#1)]  
  
 처음에 대 한 예제를 실행 하는 경우 "도메인 2 도메인에서 실행 중" 메시지를 콘솔에 표시 합니다. 명령을 사용 하 여 명령줄에서 환경 변수를 설정 하면:  
  
 `Set AppDomain=False`  
  
 이 예제에서는 메시지를 표시 합니다. "도메인에서 실행 중인 *exeName*.exe" 여기서 *exeName* 실행 파일의 이름입니다.  
  
 다음 예제에서는 라는 환경 변수 값을 검색 하려고 `Test1` 프로세스 환경 블록에서. 변수가 존재 하지 않는 경우이 예제에서는 변수를 만들고 해당 값을 검색 합니다. 이 예제에서는 변수의 값을 표시합니다. 또한 호출 예제에서는 변수를 만든 경우는 <xref:System.Environment.GetEnvironmentVariables%28System.EnvironmentVariableTarget%29> 의 각 멤버를 사용 하 여 메서드를 <xref:System.EnvironmentVariableTarget> 열거형 변수는 현재 프로세스 환경 블록 에서만에서 검색할 수 있는 설정입니다. 마지막으로,이 예제에서는 변수를 만든 경우 삭제 합니다.  
  
 [!code-csharp[System.Environment.GetEnvironmentVariable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.environment.getenvironmentvariable/cs/getenvironmentvariableex1.cs#2)]
 [!code-vb[System.Environment.GetEnvironmentVariable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.environment.getenvironmentvariable/vb/getenvironmentvariableex1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="variable" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="variable" />에 빈 문자열, 초기 16진수 0 문자(0x00) 또는 등호("=")가 포함되어 있습니다.  
  
또는 
<paramref name="variable" /> 또는 <paramref name="value" />의 길이가 32,767자보다 크거나 같습니다.  
  
또는 
이 작업을 실행하는 동안 오류가 발생했습니다.</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 이 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">에 대 한 전체 액세스 환경 변수입니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String)" />
        <altmember cref="M:System.Environment.GetEnvironmentVariables" />
      </Docs>
    </Member>
    <Member MemberName="SetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public static void SetEnvironmentVariable (string variable, string value, EnvironmentVariableTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEnvironmentVariable(string variable, string value, valuetype System.EnvironmentVariableTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetEnvironmentVariable (variable As String, value As String, target As EnvironmentVariableTarget)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetEnvironmentVariable(System::String ^ variable, System::String ^ value, EnvironmentVariableTarget target);" />
      <MemberSignature Language="F#" Value="static member SetEnvironmentVariable : string * string * EnvironmentVariableTarget -&gt; unit" Usage="System.Environment.SetEnvironmentVariable (variable, value, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="target" Type="System.EnvironmentVariableTarget" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="variable">환경 변수의 이름입니다.</param>
        <param name="value"><paramref name="variable" />에 할당할 값입니다.</param>
        <param name="target">환경 변수의 위치를 지정하는 열거형 값 중 하나입니다.</param>
        <summary>현재 프로세스 또는 현재 사용자나 로컬 컴퓨터에 예약된 Windows 운영 체제 레지스트리 키에 저장되어 있는 환경 변수를 생성, 수정 또는 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 메서드를 사용 하면 현재 프로세스에 사용할 수 있는 환경 변수 정의 (의 <xref:System.EnvironmentVariableTarget.Process> 값). 현재 프로세스 환경 블록에 고유한 환경 변수는 프로세스가 종료 될 때 까지만 유지 됩니다.

또한만 Windows 시스템에는 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 메서드를 사용 하면 컴퓨터에서 실행 되는 모든 프로세스에 사용할 수 있는 환경 변수를 정의할 수 (합니다 <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> 값) 및 사용자가 실행 되는 모든 프로세스에 (는 <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> 값). 컴퓨터별 및 사용자별으로 환경 변수는 현재 프로세스의 환경 블록에 복사 됩니다.  
 
MacOS 및 Linux 시스템에서.NET Core에서 호출 된 <xref:System.Environment.SetEnvironmentVariable%28System.String%2CSystem.String%2CSystem.EnvironmentVariableTarget%29> 값을 사용 하 여 메서드 <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType> 또는 <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> 무시 됩니다. 
  
 경우는 `value` 인수가 비어 있지 (빈 값의 정의 대 한이 섹션의 뒷부분에 나오는 환경 변수 삭제에 대 한 설명 참조) 및 여 이라는 환경 변수는 `variable` 인수가 존재 하지 않는 환경 변수 생성 되어 할당 내용의 `value`합니다.  파일이 해당 값이 수정 됩니다.  
  
 경우 `variable` 문자가 아닌 초기 16 진수 0 문자를 0 문자에는 환경 변수 이름으로 간주 됩니다 하 고 모든 후속 문자는 무시 됩니다.  
  
 경우 `value` 문자가 아닌 초기 16 진수 0 문자를 0 문자 환경 변수에 할당 되 고 모든 후속 문자는 무시 됩니다.  
  
 하는 경우 `value` 비어 있고 여 이라는 환경 변수 `variable` 존재 하면 환경 변수가 삭제 됩니다. `value` 다음 조건 중 하나에서 빈으로 간주 됩니다.  
  
-   `null`합니다.  
  
-   <xref:System.String.Empty?displayProperty=nameWithType>합니다.  
  
-   값은 u+0000 단일 문자로 구성 됩니다.  
  
 경우 `variable` 존재 하지 않는 오류가 발생 하지 않지만 작업을 수행할 수 없습니다. 때는 주의 기울여야 `target` 는 <xref:System.EnvironmentVariableTarget.Machine>이므로 전체 로컬 컴퓨터, 뿐 아니라 현재 프로세스 또는 사용자에 영향을 주는 환경 변수를 실수로 삭제할 수 있습니다.  

### <a name="environmentvariabletargetmachine-and-environmentvariabletargetuser-on-windows-systems"></a>EnvironmentVariableTarget.Machine 및 Windows 시스템에서 EnvironmentVariableTarget.User

하는 경우 `target` 는 <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>, 환경 변수는 로컬 컴퓨터의 레지스트리 HKEY_CURRENT_USER\Environment 키에 저장 됩니다. 또한 파일 탐색기의 현재 사용자로 실행 중인 인스턴스에 복사 됩니다. 환경 변수는 사용자가 파일 탐색기에서 시작 하는 새 프로세스에서 상속 합니다.  
  
 마찬가지로, 하는 경우 `target` 는 <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>, 환경 변수는 로컬 컴퓨터의 레지스트리 HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Session Manager\Environment 키에 저장 됩니다. 또한 파일 탐색기의 모든 인스턴스에 복사 됩니다. 환경 변수는 파일 탐색기에서 실행 되는 새 프로세스에서 상속 합니다.  
  
 경우 `target` 됩니다 <xref:System.EnvironmentVariableTarget.User> 또는 <xref:System.EnvironmentVariableTarget.Machine>에 Windows에서 다른 애플리케이션 설정 작업의 알림이 표시 됩니다 `WM_SETTINGCHANGE` 메시지입니다.  
  
 하는 경우 `target` 됩니다 <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType> 또는 <xref:System.EnvironmentVariableTarget.Machine?displayProperty=nameWithType>, 좋습니다, 길이 `value` 미만 2048 자가 하 여야 합니다.  
  
## Examples  
 다음 예제에 대 한 환경 변수를 만들고 합니다 <xref:System.EnvironmentVariableTarget.Process?displayProperty=nameWithType>, <xref:System.EnvironmentVariableTarget.User?displayProperty=nameWithType>, 및 <xref:System.EnvironmentVariableTarget.Machine> 대상으로, 확인 하는지 여부를 운영 체제 레지스트리에 사용자 및 컴퓨터 환경 변수를 포함 한 다음 환경 삭제 변수입니다.  
  
 [!code-cpp[environment.getsetenvar#1](~/samples/snippets/cpp/VS_Snippets_CLR/environment.getsetenvar/CPP/source.cpp#1)]
 [!code-csharp[environment.getsetenvar#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.getsetenvar/CS/gsev.cs#1)]
 [!code-vb[environment.getsetenvar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.getsetenvar/VB/gsev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="variable" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="variable" />에 빈 문자열, 초기 16진수 0 문자(0x00) 또는 등호("=")가 포함되어 있습니다.  
  
또는 
길이가 <paramref name="variable" /> 32,767 자 보다 크거나 됩니다.  
  
또는 
 <paramref name="target" /> 멤버인는 <see cref="T:System.EnvironmentVariableTarget" /> 열거형입니다.  
  
또는 
 <paramref name="target" /> 됩니다 <see cref="F:System.EnvironmentVariableTarget.Machine" /> 또는 <see cref="F:System.EnvironmentVariableTarget.User" />, 및 길이 <paramref name="variable" /> 255 보다 크거나 같은 경우는 합니다.  
  
또는 
 <paramref name="target" /> <see cref="F:System.EnvironmentVariableTarget.Process" /> 길이 <paramref name="value" /> 32,767 자 보다 크거나 됩니다.  
  
또는 
이 작업을 실행하는 동안 오류가 발생했습니다.</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 이 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">에 대 한 전체 액세스 환경 변수입니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)" />
        <altmember cref="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)" />
        <altmember cref="T:System.EnvironmentVariableTarget" />
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public static string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Environment.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="System.Environment.StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 스택 추적 정보를 가져옵니다.</summary>
        <value>스택 추적 정보가 포함된 문자열입니다. 이 값은 <see cref="F:System.String.Empty" />일 수 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Environment.StackTrace%2A> 역순으로 메서드 호출을 나열 하는 속성, 즉, 최근의 메서드 호출이 먼저 설명 및 스택의 각 메서드 호출에 대 한 한 줄의 스택 추적 정보가 나열 됩니다. 그러나는 <xref:System.Environment.StackTrace%2A> 속성 최적화 하는 동안 발생 하는 코드 변환으로 인해 예상 만큼 많은 메서드 호출을 보고 하지 않을 수 있습니다.  
  
> [!NOTE]
>  클래스에서 스택 추적 정보를의 계층적 뷰를 사용 합니다 <xref:System.Diagnostics.StackTrace> 클래스입니다.  
  
 <xref:System.Environment.StackTrace%2A> 속성 형식을 다음과 같이 각 메서드 호출에 대 한 스택 추적 정보를 지정 합니다.  
  
 "언제 `FullClassName`.`MethodName` (`MethodParams`)에서 `FileName` : 줄 `LineNumber` "  
  
 "At" 리터럴 공백 3 개가 오는 및 디버그 기호를 사용할 수 없는 경우 "in"을 사용 하 여 시작 하는 전체 부분 문자열이 생략 됩니다. 자리 표시자를 `FullClassName`, `MethodName`를 `MethodParams`를 `FileName`, 및 `LineNumber`, 실제 값으로 대체 됩니다 하 고 다음과 같이 정의 됩니다.  
  
 FullClassName  
 네임 스페이스를 포함 하 여 클래스의 전체 이름입니다.  
  
 `MethodName`  
 메서드의 이름입니다.  
  
 `MethodParams`  
 매개 변수 유형/이름이 쌍의 목록입니다. 각 쌍은 쉼표로 구분 됩니다 (","). 이 정보는 생략 `MethodName` 매개 변수를 사용 합니다.  
  
 `FileName`  
 원본의 이름을 파일 위치는 `MethodName` 메서드를 선언 합니다. 디버그 기호를 사용할 수 없는 경우이 정보가 생략 됩니다.  
  
 `LineNumber`  
 에 줄 번호 `FileName` 에서 소스 코드를 포함 하는 `MethodName` 호출 스택에 있는 명령에 대 한 합니다. 디버그 기호를 사용할 수 없는 경우이 정보가 생략 됩니다.  
  
 <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> 스택 추적의 각 줄을 종료 하는 문자열입니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Environment.StackTrace%2A> 속성입니다.  
  
 [!code-cpp[environment.stacktrace#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.StackTrace/CPP/stacktrace.cpp#1)]
 [!code-csharp[environment.stacktrace#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.StackTrace/CS/stacktrace.cs#1)]
 [!code-vb[environment.stacktrace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.StackTrace/VB/stacktrace.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">사용 권한으로 보호 되는 리소스에 대 한 전체 액세스 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SystemDirectory">
      <MemberSignature Language="C#" Value="public static string SystemDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SystemDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Environment.SystemDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SystemDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemDirectory : string" Usage="System.Environment.SystemDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시스템 디렉터리의 정규화된 경로를 가져옵니다.</summary>
        <value>디렉터리 경로가 포함된 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 값의 예로 "C:\WinNT\System32" 문자열입니다.  
  
   
  
## Examples  
 다음 예제에서는 코드 예제를 실행 하는 컴퓨터의 시스템 디렉터리를 표시 합니다. (시스템 디렉터리는 보안상의 이유로 예제의 출력에서 생략 됨).  
  
 [!code-cpp[environment.systemdirectory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.SystemDirectory/CPP/systemdirectory.cpp#1)]
 [!code-csharp[environment.systemdirectory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.SystemDirectory/CS/systemdirectory.cs#1)]
 [!code-vb[environment.systemdirectory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.SystemDirectory/VB/systemdirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">경로 자체의 정보에 액세스 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SystemPageSize">
      <MemberSignature Language="C#" Value="public static int SystemPageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 SystemPageSize" />
      <MemberSignature Language="DocId" Value="P:System.Environment.SystemPageSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemPageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int SystemPageSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemPageSize : int" Usage="System.Environment.SystemPageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>운영 체제의 메모리 페이지에서 바이트 수를 가져옵니다.</summary>
        <value>시스템 메모리 페이지의 바이트 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 정보를 사용할지 여부를 결정할 때 유용할 수 있습니다는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages?displayProperty=nameWithType> 메모리 매핑된 파일을 사용 하 여 작업할 때 옵션입니다.  
  
 Windows에서이 값은는 `dwPageSize` 의 멤버는 `SYSTEM_INFO` 구조입니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">시스템 및 사용자 환경 변수에 액세스 합니다. 연결 된 예외: 
 <see cref="P:System.Security.SecurityException.PermissionState" /></permission>
      </Docs>
    </Member>
    <Member MemberName="TickCount">
      <MemberSignature Language="C#" Value="public static int TickCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 TickCount" />
      <MemberSignature Language="DocId" Value="P:System.Environment.TickCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TickCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int TickCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TickCount : int" Usage="System.Environment.TickCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시스템 시작 이후 경과 시간(밀리초)을 가져옵니다.</summary>
        <value>컴퓨터가 마지막으로 시작된 이후 경과된 시간(밀리초)을 포함하는 부호 있는 32비트 정수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 값은 시스템 타이머에서 파생 되 고 32 비트 부호 있는 정수로 저장 됩니다. 시스템 타이머 해상도에서 파생 되기 때문에 있는지 확인 합니다 <xref:System.Environment.TickCount%2A> 속성은 일반적으로 10 ~ 16 밀리초의 범위에 있는 시스템 타이머 해상도로 제한 합니다.  
  
> [!IMPORTANT]
>  때문에 값을 <xref:System.Environment.TickCount%2A> 시스템은 계속 해 서 실행 하는 경우 속성 값이 32 비트 부호 있는 정수 <xref:System.Environment.TickCount%2A> 0부터 증가 됩니다 <xref:System.Int32.MaxValue?displayProperty=nameWithType> 약 24.9 일에 대 한 다음 이동할 <xref:System.Int32.MinValue?displayProperty=nameWithType>, 음수는 다음 24.9 일 중 0으로 다시 증가 합니다. Windows를 호출 하 여이 문제를 해결할 수 있습니다 [GetTickCount](https://msdn.microsoft.com/library/windows/desktop/ms724408.aspx) 함수를 호출 하 여 또는 약 49.7 일이 지나면를 0으로 다시 설정 합니다 [GetTickCount64](https://msdn.microsoft.com/library/windows/desktop/ms724411.aspx) 함수입니다.  
  
 <xref:System.Environment.TickCount%2A> 다른는 <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> 1/1/0001, 12:00 am 초부터 경과한 100 나노초 간격의 숫자 속성입니다.  
  
 사용 된 <xref:System.DateTime.Now%2A?displayProperty=nameWithType> 속성을 현재 현지 날짜와 시간을이 컴퓨터에서 가져옵니다.  
  
   
  
## Examples  
 다음 예에서는 양수 반환 하는 값의 범위를 검색 하는 방법에 설명 합니다 <xref:System.Environment.TickCount%2A> 속성입니다. <xref:System.Environment.TickCount%2A> 속성 사이 순환 <xref:System.Int32.MinValue?displayProperty=nameWithType>는 음수입니다와 <xref:System.Int32.MaxValue?displayProperty=nameWithType> 49.8 일 마다 한 번. 이 코드 샘플 0 사이 순환 하는 음수가 아닌 숫자를 생성 하기 위해 부호 비트를 제거 하 고 <xref:System.Int32.MaxValue> 24.9 일 마다 한 번입니다.  
  
 [!code-cpp[environment.tickcount#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.TickCount/CPP/tickcount.cpp#1)]
 [!code-csharp[environment.tickcount#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.TickCount/CS/tickcount.cs#1)]
 [!code-vb[environment.tickcount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.TickCount/VB/tickcount.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserDomainName">
      <MemberSignature Language="C#" Value="public static string UserDomainName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string UserDomainName" />
      <MemberSignature Language="DocId" Value="P:System.Environment.UserDomainName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserDomainName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ UserDomainName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserDomainName : string" Usage="System.Environment.UserDomainName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 사용자와 관련된 네트워크 도메인 이름을 가져옵니다.</summary>
        <value>현재 사용자와 연결된 네트워크 도메인 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자의 도메인 이름으로 서식이 지정 된 사용자에 대 한 도메인 계정 자격 증명을 '\\' 문자와 사용자 이름입니다. 사용 하 여는 <xref:System.Environment.UserDomainName%2A> 사용자 이름 없이 사용자의 도메인 이름을 가져오려면 속성 및 <xref:System.Environment.UserName%2A> 도메인 이름 없이 사용자 이름을 가져오는 속성입니다.  예를 들어, 사용자의 도메인 이름과 사용자 이름을 CORPORATENETWORK\john, 경우를 <xref:System.Environment.UserDomainName%2A> "CORPORATENETWORK" 속성을 반환 합니다.  
  
 <xref:System.Environment.UserDomainName%2A> 속성은 먼저 현재 사용자에 대 한 Windows 계정 이름의 도메인 이름 구성 요소를 가져오려고 시도 합니다. 이 속성을 제공한 사용자 이름과 연결 된 도메인 이름을 가져오려고 시도 하는 시도가 실패 하면는 <xref:System.Environment.UserName%2A> 속성입니다. 호스트 컴퓨터를 도메인에 가입 하지는 때문에 시도가 실패 하면 호스트 컴퓨터 이름을 반환 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">운영 체제가 네트워크 도메인 이름 검색을 지원하지 않습니다.</exception>
        <exception cref="T:System.InvalidOperationException">네트워크 도메인 이름을 검색할 수 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">에 대 한 읽기 액세스 USERDOMAIN 환경 변수입니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
        <altmember cref="P:System.Environment.UserName" />
      </Docs>
    </Member>
    <Member MemberName="UserInteractive">
      <MemberSignature Language="C#" Value="public static bool UserInteractive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UserInteractive" />
      <MemberSignature Language="DocId" Value="P:System.Environment.UserInteractive" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserInteractive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UserInteractive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UserInteractive : bool" Usage="System.Environment.UserInteractive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 프로세스가 사용자 대화형 모드로 실행되고 있는지를 나타내는 값을 가져옵니다.</summary>
        <value>현재 프로세스가 사용자 대화형 모드로 실행되고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Environment.UserInteractive%2A> 속성 보고서 `false` Windows 프로세스 또는 사용자 인터페이스 없이 실행 되는 IIS와 같은 서비스에 대 한 합니다. 이 속성이 `false`메시지 상자와 상호 작용 하는 사용자에 대 한 그래픽 사용자 인터페이스가 없는 있기 때문에, 모달 대화 상자를 표시 하지 않습니다.  
  
   
  
## Examples  
 다음 예에서는 현재 프로세스가 사용자 대화형 모드에서 실행 되는지 여부를 표시 합니다.  
  
 [!code-cpp[Environment.UserInteractive#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.UserInteractive/CPP/userinteractive.cpp#1)]
 [!code-csharp[Environment.UserInteractive#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.UserInteractive/CS/userinteractive.cs#1)]
 [!code-vb[Environment.UserInteractive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.UserInteractive/VB/userinteractive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemInformation" />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public static string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Environment.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.Environment.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>운영 체제에 현재 로그온한 사용자의 이름을 가져옵니다.</summary>
        <value>운영 체제에 로그온 한 사람의 사용자 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Environment.UserName%2A> 현재 스레드에서 시스템 및 보안 또는 액세스를 위해 애플리케이션에 사용자를 식별 하는 속성입니다. 각 사용자에 대 한 특정 애플리케이션에 맞게 데도 수 있습니다.  
 
 Windows에는 <xref:System.Environment.UserName%2A> 속성은 Windows에 대 한 호출을 래핑합니다 [GetUserName](https://msdn.microsoft.com/library/windows/desktop/ms724432.aspx) 함수입니다. 사용자의 도메인 이름으로 서식이 지정 된 사용자에 대 한 도메인 계정 자격 증명을 '\\' 문자와 사용자 이름입니다. 사용 합니다 <xref:System.Environment.UserDomainName%2A> 사용자의 도메인 이름을 가져오려면 속성 및 <xref:System.Environment.UserName%2A> 속성을 사용자 이름을 얻습니다.  
 
 Unix 플랫폼에서의 <xref:System.Environment.UserName%2A> 속성에 대 한 호출을 래핑하는 `getpwuid_r` 함수입니다.
 
 개발 환경에서 실행 중인 ASP.NET 애플리케이션을 <xref:System.Environment.UserName%2A> 속성에는 현재 사용자의 이름을 반환 합니다. 게시 된 ASP.NET 애플리케이션에서는이 속성에는 애플리케이션 풀 계정 (예: 기본 AppPool)의 이름을 반환합니다.  
  
   
  
## Examples  
 다음 예에서는 현재 스레드를 시작한 사람의 사용자 이름을 표시 합니다.  
  
 [!code-cpp[Environment.UserName#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.UserName/CPP/username.cpp#1)]
 [!code-csharp[Environment.UserName#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.UserName/CS/username.cs#1)]
 [!code-vb[Environment.UserName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.UserName/VB/username.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">사용자 환경 변수를 읽기 액세스 권한입니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
        <altmember cref="P:System.Environment.UserDomainName" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public static Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Environment.Version" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Version ^ Version { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="System.Environment.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>공용 언어 런타임의 주 번호, 보조 번호, 빌드 번호 및 수정 번호를 설명하는 <see cref="T:System.Version" /> 개체를 가져옵니다.</summary>
        <value>공용 언어 런타임의 버전을 표시하는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 버전 4, 4.5, 4.5.1 및 4.5.2의 경우 <xref:System.Environment.Version%2A?displayProperty=nameWithType> 속성은 문자열 표시가 `4.0.30319.xxxxx` 형식인 <xref:System.Version> 개체를 반환합니다. .NET Framework 4.6 및 이후 버전의 경우 형식은 `4.0.30319.42000`합니다.  
  
> [!WARNING]
>  에 대 한 합니다 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 이상 권장 하지는 않습니다를 사용 하 고는 <xref:System.Environment.Version%2A> ; 런타임의 버전을 검색 하려면 속성 대신 레지스트리를 쿼리하여 공용 언어 런타임의 버전을 확인할 수 있습니다. 자세한 내용은 [방법: 설치된 .NET Framework 버전 확인](~/docs/framework/migration-guide/how-to-determine-which-versions-are-installed.md)을 참조하세요.  
  
 각 버전의.NET Framework와 함께 설치 되는 공용 언어 런타임의 버전에 대 한 자세한 내용은 참조 하세요. [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 공용 언어 런타임의 버전을 표시 합니다. (버전은 보안상의 이유로 예제의 출력에서 생략 됨).  
  
 [!code-cpp[Environment.Version#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.Version/CPP/version.cpp#1)]
 [!code-csharp[Environment.Version#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.Version/CS/version.cs#1)]
 [!code-vb[Environment.Version#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.Version/VB/version.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingSet">
      <MemberSignature Language="C#" Value="public static long WorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 WorkingSet" />
      <MemberSignature Language="DocId" Value="P:System.Environment.WorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WorkingSet As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property long WorkingSet { long get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkingSet : int64" Usage="System.Environment.WorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프로세스 컨텍스트에 매핑되는 실제 메모리의 크기를 가져옵니다.</summary>
        <value>프로세스 컨텍스트에 매핑되는 실제 메모리의 바이트 수가 포함된 부호 있는 64비트 정수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 코드 예제를 실행 하는 컴퓨터의 작업 집합의 크기를 표시 합니다.  
  
 [!code-cpp[Environment.WorkingSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Environment.WorkingSet/CPP/workingset.cpp#1)]
 [!code-csharp[Environment.WorkingSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Environment.WorkingSet/CS/workingset.cs#1)]
 [!code-vb[Environment.WorkingSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Environment.WorkingSet/VB/workingset.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">이 권한에 의해 보호 되는 리소스에 대 한 전체 액세스 합니다. 연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>