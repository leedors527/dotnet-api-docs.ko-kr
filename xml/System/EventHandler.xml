<Type Name="EventHandler" FullName="System.EventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="09d6cf26a0c065d81973fdde56ad7f1a45c406fd" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58734559" /></Metadata><TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventHandler = delegate of obj * EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">이벤트 소스입니다.</param>
    <param name="e">이벤트 데이터가 포함되지 않은 개체입니다.</param>
    <summary>이벤트 데이터가 없는 이벤트를 처리할 메서드를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework의 이벤트 모델은 이벤트와 처리기를 연결 하는 이벤트 대리자에 기반 합니다. 이벤트를 발생 시키는 두 가지 요소가 필요 합니다.  
  
-   이벤트에 대 한 응답을 제공 하는 메서드를 식별 하는 대리자입니다.  
  
-   이벤트 데이터를 제공 하는 경우 이벤트 데이터를 보유 하는 클래스를 필요에 따라 합니다.  
  
 대리자가 반환 값 형식 및 메서드에 대 한 매개 변수 목록 형식 즉, 서명을 정의 하는 형식입니다. 대리자 형식과 대리자와 동일한 시그니처가 있는 모든 메서드를 참조할 수 있는 변수를 선언에 사용할 수 있습니다.  
  
 표준 이벤트 처리기 대리자 서명의 값을 반환 하지 않는 메서드를 정의 합니다. 이 메서드의 첫 번째 매개 변수는 형식 <xref:System.Object> 및 이벤트를 발생 시키는 인스턴스를 참조 합니다. 두 번째 매개 변수 형식에서 파생 된 <xref:System.EventArgs> 이벤트 데이터를 보유 하 고 있습니다. 두 번째 매개 변수는 단순히의 값이 이벤트는 이벤트 데이터를 생성 하지 않습니다 하는 경우는 <xref:System.EventArgs.Empty?displayProperty=nameWithType> 필드입니다. 그렇지 않으면 두 번째 매개 변수는에서 파생 된 형식 <xref:System.EventArgs> 필드 또는 이벤트 데이터를 보유 하는 데 필요한 속성을 제공 합니다.  
  
 <xref:System.EventHandler> 대리자는 특히 데이터를 생성 하지 않는 이벤트에 대 한 이벤트 처리기 메서드를 나타내는 미리 정의 된 대리자입니다. 이벤트에서 데이터를 생성 하는 경우에 제네릭 사용 해야 <xref:System.EventHandler%601> 대리자 클래스입니다.  
  
 이벤트를 처리 하는 메서드를 사용 하 여 이벤트를 연결할 이벤트 대리자의 인스턴스를 추가 합니다. 대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.  
  
 이벤트 처리기 대리자에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 명명 된 이벤트를 보여 줍니다 `ThresholdReached` 연관 된는 <xref:System.EventHandler> 위임 합니다. 할당 메서드를 <xref:System.EventHandler> 대리자에서 호출 되는 `OnThresholdReached` 메서드.  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
    <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">이벤트 처리 및 발생</related>
    <related type="Article" href="https://msdn.microsoft.com/library/42afade7-3a02-4f2e-868b-95845f302f8f">방법: 이벤트 발생 및 사용</related>
    <related type="Article" href="https://msdn.microsoft.com/library/8fb0353a-e41b-4e23-b78f-da65db832f70">이벤트(Visual Basic)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/a8e51b22-d294-44fb-9539-0072f06c4cb3">이벤트(C# 프로그래밍 가이드)</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=261485">이벤트 및 라우트된 이벤트 개요 (Windows 스토어 앱)</related>
  </Docs>
</Type>