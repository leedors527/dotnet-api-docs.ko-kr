<Type Name="Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;" FullName="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a62fd2ed5c60d53b3cbeeea6b8a85e1940a313f" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58738749" /></Metadata><TypeSignature Language="C#" Value="public delegate TResult Func&lt;in T1,in T2,in T3,in T4,in T5,in T6,in T7,in T8,in T9,in T10,out TResult&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Func`11&lt;- T1, - T2, - T3, - T4, - T5, - T6, - T7, - T8, - T9, - T10, + TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Func`11" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Func(Of In T1, In T2, In T3, In T4, In T5, In T6, In T7, In T8, In T9, In T10, Out TResult)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9, arg10 As T10) As TResult " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename TResult&gt;&#xA;public delegate TResult Func(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10);" />
  <TypeSignature Language="F#" Value="type Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'Result&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 -&gt; 'Result" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T6">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T7">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T8">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T9">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T10">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TResult">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
    <Parameter Name="arg6" Type="T6" />
    <Parameter Name="arg7" Type="T7" />
    <Parameter Name="arg8" Type="T8" />
    <Parameter Name="arg9" Type="T9" />
    <Parameter Name="arg10" Type="T10" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="T10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수 형식입니다.</typeparam>
    <typeparam name="TResult">이 대리자로 캡슐화되는 메서드의 반환 값 형식입니다.</typeparam>
    <param name="arg1">이 대리자로 캡슐화되는 메서드의 첫 번째 매개 변수입니다.</param>
    <param name="arg2">이 대리자로 캡슐화되는 메서드의 두 번째 매개 변수입니다.</param>
    <param name="arg3">이 대리자로 캡슐화되는 메서드의 세 번째 매개 변수입니다.</param>
    <param name="arg4">이 대리자로 캡슐화되는 메서드의 네 번째 매개 변수입니다.</param>
    <param name="arg5">이 대리자로 캡슐화되는 메서드의 다섯 번째 매개 변수입니다.</param>
    <param name="arg6">이 대리자로 캡슐화되는 메서드의 여섯 번째 매개 변수입니다.</param>
    <param name="arg7">이 대리자로 캡슐화되는 메서드의 일곱 번째 매개 변수입니다.</param>
    <param name="arg8">이 대리자로 캡슐화되는 메서드의 여덟 번째 매개 변수입니다.</param>
    <param name="arg9">이 대리자로 캡슐화되는 메서드의 아홉 번째 매개 변수입니다.</param>
    <param name="arg10">이 대리자로 캡슐화되는 메서드의 10번째 매개 변수입니다.</param>
    <summary>매개 변수가 10개이고 <typeparamref name="TResult" /> 매개 변수로 지정된 형식의 값을 반환하는 메서드를 캡슐화합니다.</summary>
    <returns>이 대리자로 캡슐화되는 메서드의 반환 값입니다.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 대리자를 명시적으로 선언 하지 않고 매개 변수로 전달할 수 있는 메서드를 나타내는이 대리자를 사용할 수 있습니다. 캡슐화 된 메서드에이 대리자에 의해 정의 되는 메서드 시그니처와 일치 해야 합니다. 즉, 캡슐화 된 메서드에 값으로 전달 되는 매개 변수가 10 있어야 하는 값을 반환 해야 합니다.  
  
> [!NOTE]
>  매개 변수가 10 개이고 반환 메서드를 참조 `void` (Visual Basic의 경우로 선언 되는 `Sub` 아니라는 `Function`), 제네릭 사용 <xref:System.Action%6010> 대리자를 대신 합니다.  
  
 사용할 수도 있습니다는 <xref:System.Func%6011> 무명 메서드 및 람다 식을 사용 하 여 위임 합니다.  
  
 람다 식의 기본 형식이 제네릭 중 하나인 `Func` 대리자입니다. 이 대리자를 명시적으로 할당 하지 않고 람다 식을 매개 변수로 전달할 수 있습니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Action`10" />
  </Docs>
</Type>