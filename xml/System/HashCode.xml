<Type Name="HashCode" FullName="System.HashCode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9c8aeaa459e84d5207c9d3068bd8e103c6609e9" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58723346" /></Metadata><TypeSignature Language="C#" Value="public struct HashCode" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HashCode extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.HashCode" />
  <TypeSignature Language="VB.NET" Value="Public Structure HashCode" />
  <TypeSignature Language="C++ CLI" Value="public value class HashCode" />
  <TypeSignature Language="F#" Value="type HashCode = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>여러 값에 대한 해시 코드를 단일 해시 코드로 결합합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

사용할 수 있습니다 <xref:System.HashCode> 여러 값 (예를 들어, 구조체 또는 클래스에 필드)으로 단일 해시 코드를 결합 합니다. 이 구조체는 두 가지 방법 중 하나에서 작동합니다.

 * 결합 하는 최대 8 개의 값 집합을 허용 하는 정적 메서드.
 * 두 인스턴스 한 번에 한 개의 값을 수락을 스트리밍 방식으로 작동 하는 메서드입니다.

> [!WARNING]
> 것이 모범 사례는 구현 세부 사항으로 해시 코드를 고려해 야 할 구현 어셈블리 버전 간에 변경 될 수 있습니다. 생성 된 해시 코드를 저장 하지 않는 <xref:System.HashCode> serialize 된 구조의 예를 들어, 디스크에 있습니다. <xref:System.HashCode> 해시 코드를 운영 체제 프로세스의 범위 내에서 결정적만 즉,이 모범 사례를 적용 하는 정적으로 초기화 된 임의 초기값을 사용 합니다.

### <a name="static-methods"></a>정적 메서드

정적 메서드는 최대 8 개의 값의 기본 해시 코드를 결합합니다.
 
 [!code-csharp[System.HashCode.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example1.cs#1)]
 [!code-vb[System.HashCode.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example1.vb#1)] 

### <a name="instance-methods"></a>인스턴스 메서드

> [!IMPORTANT]
> <xref:System.HashCode.ToHashCode> 인스턴스당 한 번만 호출 해야 <xref:System.HashCode>합니다.

인스턴스 메서드는 8 개 이상의 값의 해시 코드를 결합합니다.
 
 [!code-csharp[System.HashCode.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example2.cs#1)]
 [!code-vb[System.HashCode.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example2.vb#1)]

인스턴스 메서드는 특정에서 생성 된 해시 코드를 결합할 수도 <xref:System.Collections.Generic.IEqualityComparer%601> 구현 합니다.

 [!code-csharp[System.HashCode.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example3.cs#1)]
 [!code-vb[System.HashCode.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example3.vb#1)]

<xref:System.HashCode> 구조에 전달 해야 참조로 다른 메서드와 값 형식 이므로 합니다.
 
 [!code-csharp[System.HashCode.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.hashcode.structure/cs/example4.cs#1)]
 [!code-vb[System.HashCode.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.hashcode.structure/vb/example4.vb#1)]

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Add&lt;T&gt; (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add&lt;T&gt;(!!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Add``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add(Of T) (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Add(T value);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T -&gt; unit" Usage="hashCode.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">해시 코드를 추가할 값의 형식입니다.</typeparam>
        <param name="value">해시 코드에 추가할 값입니다.</param>
        <summary>한 개의 값을 해시 코드에 추가합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Add&lt;T&gt; (T value, System.Collections.Generic.IEqualityComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add&lt;T&gt;(!!T value, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Add``1(``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add(Of T) (value As T, comparer As IEqualityComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void Add(T value, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; unit" Usage="hashCode.Add (value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">해시 코드를 추가할 값의 형식입니다.</typeparam>
        <param name="value">해시 코드에 추가할 값입니다.</param>
        <param name="comparer">해시 코드를 계산하는 데 사용하는 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />입니다.
이 값은 <typeparamref name="T" />에 대한 기본 같음 비교자를 사용하는 null 참조(Visual Basic의 경우 Nothing)가 될 수 있습니다.</param>
        <summary>해시 코드 함수를 제공하는 형식을 지정하여 해시 코드에 한 개의 값을 추가합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1&gt; (T1 value1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1&gt;(!!T1 value1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1) (value1 As T1) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA; static int Combine(T1 value1);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 -&gt; int" Usage="System.HashCode.Combine value1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
      </Parameters>
      <Docs>
        <typeparam name="T1">해시 코드를 추가 하려면 값의 형식입니다.</typeparam>
        <param name="value1">해시 코드에 추가할 값입니다.</param>
        <summary>지정된 값에 의해 반환된 해시 코드를 확산시킵니다.</summary>
        <returns>한 개의 값을 나타내는 해시 코드입니다.</returns>
        <remarks>몇 가지 데이터 구조는 해시 코드 큰 범위 전체에서 확산 되는 가정 합니다. 이 메서드는 값으로 반환 되는 해시 코드의 품질을 향상 시킵니다 하 고 기본 데이터 형식은 예를 들어 정수 값을 단순 하는 경우에 유용 합니다.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2&gt; (T1 value1, T2 value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2&gt;(!!T1 value1, !!T2 value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``2(``0,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2) (value1 As T1, value2 As T2) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static int Combine(T1 value1, T2 value2);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 -&gt; int" Usage="System.HashCode.Combine (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
      </Parameters>
      <Docs>
        <typeparam name="T1">해시 코드를 결합 하는 첫 번째 값 형식입니다.</typeparam>
        <typeparam name="T2">해시 코드를 결합 하려면 두 번째 값의 형식입니다.</typeparam>
        <param name="value1">해시 코드에 결합할 첫 번째 값입니다.</param>
        <param name="value2">해시 코드에 결합할 두 번째 값입니다.</param>
        <summary>두 개의 값을 하나의 해시 코드로 결합합니다.</summary>
        <returns>두 개의 값을 나타내는 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3&gt; (T1 value1, T2 value2, T3 value3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3&gt;(!!T1 value1, !!T2 value2, !!T3 value3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``3(``0,``1,``2)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3) (value1 As T1, value2 As T2, value3 As T3) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
      </Parameters>
      <Docs>
        <typeparam name="T1">해시 코드를 결합 하는 첫 번째 값 형식입니다.</typeparam>
        <typeparam name="T2">해시 코드를 결합 하려면 두 번째 값의 형식입니다.</typeparam>
        <typeparam name="T3">해시 코드를 결합 하는 세 번째 값의 형식입니다.</typeparam>
        <param name="value1">해시 코드에 결합할 첫 번째 값입니다.</param>
        <param name="value2">해시 코드에 결합할 두 번째 값입니다.</param>
        <param name="value3">해시 코드에 결합할 세 번째 값입니다.</param>
        <summary>세 개의 값을 하나의 해시 코드로 결합합니다.</summary>
        <returns>세 개의 값을 나타내는 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4&gt; (T1 value1, T2 value2, T3 value3, T4 value4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``4(``0,``1,``2,``3)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4) (value1 As T1, value2 As T2, value3 As T3, value4 As T4) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
      </Parameters>
      <Docs>
        <typeparam name="T1">해시 코드를 결합 하는 첫 번째 값 형식입니다.</typeparam>
        <typeparam name="T2">해시 코드를 결합 하려면 두 번째 값의 형식입니다.</typeparam>
        <typeparam name="T3">해시 코드를 결합 하는 세 번째 값의 형식입니다.</typeparam>
        <typeparam name="T4">해시 코드를 결합할 네 번째 값의 형식입니다.</typeparam>
        <param name="value1">해시 코드에 결합할 첫 번째 값입니다.</param>
        <param name="value2">해시 코드에 결합할 두 번째 값입니다.</param>
        <param name="value3">해시 코드에 결합할 세 번째 값입니다.</param>
        <param name="value4">해시 코드에 결합할 네 번째 값입니다.</param>
        <summary>네 개의 값을 하나의 해시 코드로 결합합니다.</summary>
        <returns>네 개의 값을 나타내는 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``5(``0,``1,``2,``3,``4)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
      </Parameters>
      <Docs>
        <typeparam name="T1">해시 코드를 결합 하는 첫 번째 값 형식입니다.</typeparam>
        <typeparam name="T2">해시 코드를 결합 하려면 두 번째 값의 형식입니다.</typeparam>
        <typeparam name="T3">해시 코드를 결합 하는 세 번째 값의 형식입니다.</typeparam>
        <typeparam name="T4">해시 코드를 결합할 네 번째 값의 형식입니다.</typeparam>
        <typeparam name="T5">해시 코드를 결합 다섯 번째 값의 형식입니다.</typeparam>
        <param name="value1">해시 코드에 결합할 첫 번째 값입니다.</param>
        <param name="value2">해시 코드에 결합할 두 번째 값입니다.</param>
        <param name="value3">해시 코드에 결합할 세 번째 값입니다.</param>
        <param name="value4">해시 코드에 결합할 네 번째 값입니다.</param>
        <param name="value5">해시 코드에 결합할 다섯 번째 값입니다.</param>
        <summary>다섯 개의 값을 하나의 해시 코드로 결합합니다.</summary>
        <returns>다섯 개의 값을 나타내는 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5,T6&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5, T6&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5, !!T6 value6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``6(``0,``1,``2,``3,``4,``5)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5, value6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
      </Parameters>
      <Docs>
        <typeparam name="T1">해시 코드를 결합 하는 첫 번째 값 형식입니다.</typeparam>
        <typeparam name="T2">해시 코드를 결합 하려면 두 번째 값의 형식입니다.</typeparam>
        <typeparam name="T3">해시 코드를 결합 하는 세 번째 값의 형식입니다.</typeparam>
        <typeparam name="T4">해시 코드를 결합할 네 번째 값의 형식입니다.</typeparam>
        <typeparam name="T5">해시 코드를 결합 다섯 번째 값의 형식입니다.</typeparam>
        <typeparam name="T6">해시 코드를 결합 하 여 여섯 번째 값의 형식입니다.</typeparam>
        <param name="value1">해시 코드에 결합할 첫 번째 값입니다.</param>
        <param name="value2">해시 코드에 결합할 두 번째 값입니다.</param>
        <param name="value3">해시 코드에 결합할 세 번째 값입니다.</param>
        <param name="value4">해시 코드에 결합할 네 번째 값입니다.</param>
        <param name="value5">해시 코드에 결합할 다섯 번째 값입니다.</param>
        <param name="value6">해시 코드에 결합할 여섯 번째 값입니다.</param>
        <summary>여섯 개의 값을 하나의 해시 코드로 결합합니다.</summary>
        <returns>여섯 개의 값을 나타내는 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5,T6,T7&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5, T6, T7&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5, !!T6 value6, !!T7 value7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``7(``0,``1,``2,``3,``4,``5,``6)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6, T7) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6, value7 As T7) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5, value6, value7)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
        <Parameter Name="value7" Type="T7" />
      </Parameters>
      <Docs>
        <typeparam name="T1">해시 코드를 결합 하는 첫 번째 값 형식입니다.</typeparam>
        <typeparam name="T2">해시 코드를 결합 하려면 두 번째 값의 형식입니다.</typeparam>
        <typeparam name="T3">해시 코드를 결합 하는 세 번째 값의 형식입니다.</typeparam>
        <typeparam name="T4">해시 코드를 결합할 네 번째 값의 형식입니다.</typeparam>
        <typeparam name="T5">해시 코드를 결합 다섯 번째 값의 형식입니다.</typeparam>
        <typeparam name="T6">해시 코드를 결합 하 여 여섯 번째 값의 형식입니다.</typeparam>
        <typeparam name="T7">해시 코드를 결합 일곱 번째 값의 형식입니다.</typeparam>
        <param name="value1">해시 코드에 결합할 첫 번째 값입니다.</param>
        <param name="value2">해시 코드에 결합할 두 번째 값입니다.</param>
        <param name="value3">해시 코드에 결합할 세 번째 값입니다.</param>
        <param name="value4">해시 코드에 결합할 네 번째 값입니다.</param>
        <param name="value5">해시 코드에 결합할 다섯 번째 값입니다.</param>
        <param name="value6">해시 코드에 결합할 여섯 번째 값입니다.</param>
        <param name="value7">해시 코드에 결합할 일곱 번째 값입니다.</param>
        <summary>일곱 개의 값을 하나의 해시 코드로 결합합니다.</summary>
        <returns>일곱 개의 값을 나타내는 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static int Combine&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Combine&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(!!T1 value1, !!T2 value2, !!T3 value3, !!T4 value4, !!T5 value5, !!T6 value6, !!T7 value7, !!T8 value8) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Combine``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine(Of T1, T2, T3, T4, T5, T6, T7, T8) (value1 As T1, value2 As T2, value3 As T3, value4 As T4, value5 As T5, value6 As T6, value7 As T7, value8 As T8) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA; static int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8);" />
      <MemberSignature Language="F#" Value="static member Combine : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 -&gt; int" Usage="System.HashCode.Combine (value1, value2, value3, value4, value5, value6, value7, value8)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value1" Type="T1" />
        <Parameter Name="value2" Type="T2" />
        <Parameter Name="value3" Type="T3" />
        <Parameter Name="value4" Type="T4" />
        <Parameter Name="value5" Type="T5" />
        <Parameter Name="value6" Type="T6" />
        <Parameter Name="value7" Type="T7" />
        <Parameter Name="value8" Type="T8" />
      </Parameters>
      <Docs>
        <typeparam name="T1">해시 코드를 결합 하는 첫 번째 값 형식입니다.</typeparam>
        <typeparam name="T2">해시 코드를 결합 하려면 두 번째 값의 형식입니다.</typeparam>
        <typeparam name="T3">해시 코드를 결합 하는 세 번째 값의 형식입니다.</typeparam>
        <typeparam name="T4">해시 코드를 결합할 네 번째 값의 형식입니다.</typeparam>
        <typeparam name="T5">해시 코드를 결합 다섯 번째 값의 형식입니다.</typeparam>
        <typeparam name="T6">해시 코드를 결합 하 여 여섯 번째 값의 형식입니다.</typeparam>
        <typeparam name="T7">해시 코드를 결합 일곱 번째 값의 형식입니다.</typeparam>
        <typeparam name="T8">해시 코드를 결합 값 여덟 번째의 형식입니다.</typeparam>
        <param name="value1">해시 코드에 결합할 첫 번째 값입니다.</param>
        <param name="value2">해시 코드에 결합할 두 번째 값입니다.</param>
        <param name="value3">해시 코드에 결합할 세 번째 값입니다.</param>
        <param name="value4">해시 코드에 결합할 네 번째 값입니다.</param>
        <param name="value5">해시 코드에 결합할 다섯 번째 값입니다.</param>
        <param name="value6">해시 코드에 결합할 여섯 번째 값입니다.</param>
        <param name="value7">해시 코드에 결합할 일곱 번째 값입니다.</param>
        <param name="value8">해시 코드에 결합할 여덟 번째 값입니다.</param>
        <summary>여덟 개의 값을 하나의 해시 코드로 결합합니다.</summary>
        <returns>여덟 개의 값을 나타내는 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="hashCode.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.Obsolete("HashCode is a mutable struct and should not be compared with other HashCodes.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">무시됩니다.</param>
        <summary>이 메서드는 지원되지 않으며 호출되지 않습니다.</summary>
        <returns>이 메서드는 항상 <see cref="T:System.NotSupportedException" />을 반환합니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">이 메서드가 호출되면 항상 throw됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="hashCode.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1">
          <AttributeName>System.Obsolete("HashCode is a mutable struct and should not be compared with other HashCodes. Use ToHashCode to retrieve the computed hash code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드는 지원되지 않으며 호출되지 않습니다.</summary>
        <returns>이 메서드는 항상 <see cref="T:System.NotSupportedException" />을 반환합니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">이 메서드가 호출되면 항상 throw됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToHashCode">
      <MemberSignature Language="C#" Value="public int ToHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ToHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.HashCode.ToHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function ToHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ToHashCode();" />
      <MemberSignature Language="F#" Value="member this.ToHashCode : unit -&gt; int" Usage="hashCode.ToHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>연속 <see cref="Overload:System.HashCode.Add" /> 호출 후에 최종 해시 코드를 계산합니다.</summary>
        <returns>계산된 해시 코드입니다.</returns>
        <remarks>이 메서드는 인스턴스당 한 번만 호출 해야 <see cref="T:System.HashCode" />합니다.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>