<Type Name="IFormatProvider" FullName="System.IFormatProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a4dff04b5617e515e087bc87188865f65b869df" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48594511" /></Metadata><TypeSignature Language="C#" Value="public interface IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.IFormatProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormatProvider" />
  <TypeSignature Language="F#" Value="type IFormatProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>서식 지정을 제어하는 개체를 검색하기 위한 메커니즘을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormatProvider> 인터페이스 서식 지정 및 구문 분석 작업에 대 한 서식 지정 정보를 제공 하는 개체를 제공 합니다. 형식의 값 해당 값의 문자열 표현으로 변환 하는 서식 지정 작업입니다. 일반적인 서식 지정 메서드를 `ToString` 형식의 메서드 뿐만 <xref:System.String.Format%2A>합니다. 값의 문자열 표현을 해당 값을 가진 형식으로 변환 하는 구문 분석 작업 합니다. 일반적인 구문 분석 메서드는 `Parse` 고 `TryParse`입니다.  
  
 합니다 <xref:System.IFormatProvider> 인터페이스는 단일 메서드로 구성 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>합니다. <xref:System.IFormatProvider.GetFormat%2A> 콜백 메서드는: 구문 분석 또는 형식 지정 메서드 호출 및 전달는 <xref:System.Type> 서식 지정 또는 구문 분석 방법 필요로 하는 개체의 형식을 나타내는 개체를 서식 지정 정보를 제공 합니다. <xref:System.IFormatProvider.GetFormat%2A> 메서드는 해당 형식의 개체를 반환 하는 일을 담당 합니다.  
  
 <xref:System.IFormatProvider> 서식 지정 및 구문 분석 메서드 구현에서는 암시적으로 자주 사용 됩니다. 예를 들어, 합니다 <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> 메서드를 암시적으로 사용 하는 <xref:System.IFormatProvider> 시스템의 현재 문화권을 나타내는 구현 합니다. <xref:System.IFormatProvider> 구현도 지정할 수 있습니다 명시적으로 형식 매개 변수가 있는 메서드에 의해 <xref:System.IFormatProvider>와 같은 <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 고 <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>합니다.  
  
 .NET Framework에 미리 정의 된 다음 세 가지 <xref:System.IFormatProvider> 서식 지정 또는 숫자와 날짜 및 시간 값을 구문 분석에 사용 되는 문화권별 정보를 제공 하는 구현 합니다.  
  
-   <xref:System.Globalization.NumberFormatInfo> 수천 대의 통화와 같은 숫자의 형식을 지정 하는 데 사용 되는 정보를 제공 하는 클래스 구분 기호 및 특정 문화권에 대 한 소수 구분 기호입니다. 인식 되는 미리 정의 된 형식 문자열에 대 한 자세한를 <xref:System.Globalization.NumberFormatInfo> 개체 및 숫자 서식 지정 작업 사용을 참조 하세요 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 고 [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
-   <xref:System.Globalization.DateTimeFormatInfo> 날짜 및 시간이 같은 날짜 및 시간 구분 기호는 특정 문화권 또는 순서와 날짜의 연도, 월 및 일 구성 요소 형식의 서식을 지정 하는 데 사용 되는 정보를 제공 하는 클래스입니다. 인식 되는 미리 정의 된 형식 문자열에 대 한 자세한를 <xref:System.Globalization.DateTimeFormatInfo> 개체 및 숫자 서식 지정 작업 사용을 참조 하세요 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 고 [사용자 지정 날짜 및 시간 형식 문자열 ](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
-   <xref:System.Globalization.CultureInfo> 특정 문화권을 나타내는 클래스입니다. 해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드는 문화권별 <xref:System.Globalization.NumberFormatInfo> 또는 <xref:System.Globalization.DateTimeFormatInfo> 인지에 따라 개체를 <xref:System.Globalization.CultureInfo> 를 서식 지정 또는 구문 분석 작업에서 숫자 또는 날짜 및 시간을 포함 하는 개체를 사용 합니다.  
  
 .NET Framework는 또한 사용자 지정 서식 지정을 지원합니다. 이 둘 다 구현 하는 형식 지정 클래스를 만드는 일반적 <xref:System.IFormatProvider> 고 <xref:System.ICustomFormatter>입니다. 이 클래스의 인스턴스는 같은 사용자 지정 작업을 수행 하는 메서드 매개 변수로 전달 다음 <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 예제에서는 12 자리 계정 번호를 숫자 형식을 지정 하는 이러한 사용자 지정 구현 보여 줍니다.  
  
   
  
## Examples  
 다음 예제에서는 어떻게는 <xref:System.IFormatProvider> 구현에는 날짜 및 시간 값의 표현을 변경할 수 있습니다. 하나의 날짜를 사용 하 여 표시 됩니다는 예제의 경우 <xref:System.Globalization.CultureInfo> 네 개의 서로 다른 문화권을 나타내는 개체입니다.  
  
 [!code-csharp[System.IFormatProvider.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/provider2.cs#3)]
 [!code-vb[System.IFormatProvider.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/provider2.vb#3)]  
  
 다음 예제를 구현 하는 클래스를 사용 하 여 <xref:System.IFormatProvider> 인터페이스 및 <xref:System.IFormatProvider.GetFormat%2A> 메서드. 합니다 `AcctNumberFormat` 변환 클래스는 <xref:System.Int64> 12 자리 계정 형식이 지정 된 수는 계정 번호를 나타내는 값입니다. 해당 `GetFormat` 메서드는 현재에 대 한 참조를 반환 `AcctNumberFormat` 인스턴스를 `formatType` 매개 변수를 구현 하는 클래스를 참조 <xref:System.ICustomFormatter>이 고, 그렇지 않으면 `GetFormat` 반환 `null`합니다.  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 구현 하는 클래스 <xref:System.IFormatProvider> 를 서식 지정 및 구문 분석 작업에 대 한 호출에서 사용할 수 있습니다. 예를 들어, 다음 코드 호출을 <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 서식이 지정 된 12 자리 계정 번호를 포함 하는 문자열을 생성 하는 방법입니다.  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ICustomFormatter" />
    <altmember cref="T:System.IFormattable" />
    <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
    <related type="Article" href="~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md">방법: 사용자 지정 숫자 형식 공급자 정의 및 사용</related>
  </Docs>
  <Members>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormatProvider.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj" Usage="iFormatProvider.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">반환할 형식 개체의 형식을 지정하는 개체입니다.</param>
        <summary>지정된 형식에 대한 형식 지정 서비스를 제공하는 개체를 반환합니다.</summary>
        <returns><see cref="T:System.IFormatProvider" /> 구현에서 해당 형식의 개체를 제공할 수 있으면 <paramref name="formatType" />에 지정된 개체의 인스턴스이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IFormatProvider.GetFormat%2A> 작업 또는 형식의 서식 지정 작업의 출력 문자열을 구문 분석 중에 입력된 문자열의 형식에 대 한 정보를 검색할 서식 지정 및 구문 분석 메서드를 호출 하는 콜백 메서드입니다. 에 `formatType` 매개 변수, 형식 또는 메서드를 구문 분석 작업을 수행 하는 데 필요한 개체의 형식을 전달 합니다. 경우는 <xref:System.IFormatProvider> 구현을 제공할 수 있습니다이 형식 또는 해당 개체가 반환 개체를 구문 분석 합니다. 반환 된 그렇지 않은 경우 `null`합니다.  
  
 에 대 한 호출의 예를 들어 합니다 <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 메서드를 메서드 인수는는 <xref:System.IFormatProvider> 정수는 현재 인스턴스의 문자열 표현의 서식을 지정할 수 있습니다 하는 방법에 대 한 정보를 제공 하는 개체입니다. 런타임 메서드를 실행 하는 경우 호출 하는 <xref:System.IFormatProvider> 개체의 <xref:System.IFormatProvider.GetFormat%2A> 메서드 전달를 <xref:System.Type> 나타내는 개체를 <xref:System.Globalization.NumberFormatInfo> 형식. 경우는 <xref:System.IFormatProvider> 개체를 제공할 수는 <xref:System.Globalization.NumberFormatInfo> 개체를 해당 개체를 반환 합니다. 반환 하는 경우 해당 형식의 개체를 제공할 수 없으면, `null`합니다.  
  
 구현할 수 있습니다 합니다 <xref:System.IFormatProvider> 인터페이스 및 <xref:System.IFormatProvider.GetFormat%2A> 사용자 지정 서식 지정 또는 구문 분석 서비스를 제공 하는 클래스는 메서드. 합니다 <xref:System.IFormatProvider> 이후에 구현이 구문 분석 또는 형식 지정 메서드 형식 매개 변수가 있는 오버 로드를 인수로 전달 됩니다 <xref:System.IFormatProvider>와 같은 <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>를 <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, 또는 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 예제를 구현 하는 클래스를 사용 하 여 <xref:System.IFormatProvider> 인터페이스 및 <xref:System.IFormatProvider.GetFormat%2A> 메서드. 합니다 `AcctNumberFormat` 변환 클래스는 <xref:System.Int64> 12 자리 계정 형식이 지정 된 수는 계정 번호를 나타내는 값입니다. 해당 `GetFormat` 메서드는 경우 자체에 대 한 참조를 반환 합니다 `formatType` 매개 변수를 구현 하는 클래스를 참조 <xref:System.ICustomFormatter>고, 그렇지 않으면 `GetFormat` 반환 `null`합니다.  
  
 [!code-csharp[System.IFormatProvider.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#2)]
 [!code-vb[System.IFormatProvider.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#2)]  
  
 인스턴스는 `AcctNumberFormat` 클래스 수 서식 지정 또는 구문 분석 서비스를 제공 하는 메서드를 다음 인수로 전달 하는 수입니다. 예를 들어, 다음 코딩 전달을 `AcctNumberFormat` 클래스는 <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 서식이 지정 된 12 자리 계정 번호를 생성 하는 방법입니다.  
  
 [!code-csharp[System.IFormatProvider.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IFormatProvider.Class/cs/Provider.cs#1)]
 [!code-vb[System.IFormatProvider.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IFormatProvider.Class/vb/Provider.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>