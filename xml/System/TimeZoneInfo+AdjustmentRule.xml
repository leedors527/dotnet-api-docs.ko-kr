<Type Name="TimeZoneInfo+AdjustmentRule" FullName="System.TimeZoneInfo+AdjustmentRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20fa3167b3f488cd33e8f34ad3db970479402785" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58745019" /></Metadata><TypeSignature Language="C#" Value="public sealed class TimeZoneInfo.AdjustmentRule : IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable sealed beforefieldinit TimeZoneInfo/AdjustmentRule extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo/AdjustmentRule&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo.AdjustmentRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeZoneInfo.AdjustmentRule&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo.AdjustmentRule), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: ref class TimeZoneInfo::AdjustmentRule sealed : IEquatable&lt;TimeZoneInfo::AdjustmentRule ^&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo.AdjustmentRule = class&#xA;    interface IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo+AdjustmentRule&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>일광 절약 시간 전환과 같은 표준 시간대 조정에 대한 정보를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZoneInfo.AdjustmentRule> 클래스 정의 유효한 시작 및 일광 절약 시간에서이 특정 시간 변경 된 종료 날짜를 각각 해당 델타 및 (조정 인해 변경 하려면 해당 표준 시간대의 표준 시간 정확한 크기). 또한 두 개의 속성을 반환할 <xref:System.TimeZoneInfo.TransitionTime> 표준 시간에서 각 전환이 발생 하는 경우 정의 하는 개체입니다.  
  
> [!NOTE]
>  인스턴스는 <xref:System.TimeZoneInfo.AdjustmentRule> 클래스는 변경할 수 없습니다. 개체를 만든 후에 해당 값을 수정할 수 없습니다.  
  
 만들려는 <xref:System.TimeZoneInfo.AdjustmentRule> 개체를 호출 합니다 `static` (`Shared` Visual Basic에서) <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A?displayProperty=nameWithType> 메서드. 배열의 제공할 수 있습니다 <xref:System.TimeZoneInfo.AdjustmentRule> 오버 로드 중 두 개체는 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 메서드. 특정 표준 시간대의 조정 규칙을 검색 하려면 해당 <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> 배열을 반환 하는 메서드 <xref:System.TimeZoneInfo.AdjustmentRule> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 로컬 시스템에 정의 된 모든 표준 시간대를 검색 하 고의 조정 규칙에 대 한 전체 정보를 표시 합니다.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#3)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#3)]  
  
 다음은 예제에서 생성 되는 출력의 일부분입니다. 실제 출력 예제가 실행 될 날짜 및 운영 체제에 따라 달라 집니다.  
  
```  
Morocco Standard Time Adjustment rules  
   Adjustment rule #1  
      Start Date: Tuesday, January 01, 2008  
      End Date: Wednesday, December 31, 2008  
      Time Change: 1:00 hours  
      Annual Start: The Last Saturday of May at 11:59 PM  
      Annual End: The Last Sunday of August at 11:59 PM  
   Adjustment rule #2  
      Start Date: Thursday, January 01, 2009  
      End Date: Thursday, December 31, 2009  
      Time Change: 1:00 hours  
      Annual Start: The Last Sunday of May at 11:59 PM  
      Annual End: The Third Thursday of August at 11:59 PM  
  
Coordinated Universal Time has no adjustment rules  
  
GMT Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 1:00 AM  
   Annual End: The Last Sunday of October at 2:00 AM  
  
Greenwich Standard Time has no adjustment rules  
  
W. Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Romance Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central European Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
W. Central Africa Standard Time has no adjustment rules  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName="CreateAdjustmentRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.AdjustmentRule CreateAdjustmentRule (DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo.TransitionTime daylightTransitionStart, TimeZoneInfo.TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo/AdjustmentRule CreateAdjustmentRule(valuetype System.DateTime dateStart, valuetype System.DateTime dateEnd, valuetype System.TimeSpan daylightDelta, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionStart, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAdjustmentRule (dateStart As DateTime, dateEnd As DateTime, daylightDelta As TimeSpan, daylightTransitionStart As TimeZoneInfo.TransitionTime, daylightTransitionEnd As TimeZoneInfo.TransitionTime) As TimeZoneInfo.AdjustmentRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::AdjustmentRule ^ CreateAdjustmentRule(DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo::TransitionTime daylightTransitionStart, TimeZoneInfo::TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="F#" Value="static member CreateAdjustmentRule : DateTime * DateTime * TimeSpan * TimeZoneInfo.TransitionTime * TimeZoneInfo.TransitionTime -&gt; TimeZoneInfo.AdjustmentRule" Usage="System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule (dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+AdjustmentRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateStart" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="dateEnd" Type="System.DateTime" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="daylightDelta" Type="System.TimeSpan" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="daylightTransitionStart" Type="System.TimeZoneInfo+TransitionTime" Index="3" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="daylightTransitionEnd" Type="System.TimeZoneInfo+TransitionTime" Index="4" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateStart">조정 규칙의 적용 날짜입니다. <paramref name="dateStart" /> 매개 변수의 값이 <see langword="DateTime.MinValue.Date" />인 경우 이는 표준 시간대에 적용된 첫 번째 조정 규칙입니다.</param>
        <param name="dateEnd">조정 규칙이 적용되는 마지막 날짜입니다. <paramref name="dateEnd" /> 매개 변수의 값이 <see langword="DateTime.MaxValue.Date" />인 경우 조정 규칙에 종료 날짜가 없습니다.</param>
        <param name="daylightDelta">조정으로 인한 시간 변경입니다. UTC(협정 세계시)에서 올바른 일광 오프셋을 얻기 위해 이 값이 표준 시간대의 <see cref="P:System.TimeZoneInfo.BaseUtcOffset" /> 속성에 추가됩니다. 이 값 범위는 -14에서 14까지일 수 있습니다.</param>
        <param name="daylightTransitionStart">일광 절약 시간제의 시작을 정의하는 개체입니다.</param>
        <param name="daylightTransitionEnd">일광 절약 시간제의 끝을 정의하는 개체입니다.</param>
        <summary>특정 표준 시간대에 대한 새 조정 규칙을 만듭니다.</summary>
        <returns>새 조정 규칙을 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 표준 시간대에 대해 여러 조정 규칙을 만들려면이 메서드를 사용할 수 있습니다. 배열을 합니다 <xref:System.TimeZoneInfo.AdjustmentRule> 이 메서드를 호출 하 여 반환 된 개체를 전달할 수 있습니다 합니다 `adjustmentRules` 매개 변수 두 오버 로드를는 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 메서드. 이 예제에서는이 절차를 설명 합니다.  
  
> [!NOTE]
>  <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> 메서드를 새 표준 시간대 조정 규칙 정의에 사용할 수 있으며 기존 표준 시간대에 대 한 조정 규칙을 수정 하려면 사용할 수 없습니다.  
  
 합니다 `dateStart` 하 고 `dateEnd` 매개 변수는 시간 구성 요소가 없는 날짜 값 이어야 합니다 또는 <xref:System.ArgumentException> throw 됩니다. 시간 구성 요소를 검색 하 여 제거할 수는 <xref:System.DateTime> 날짜 및 시간 값 <xref:System.DateTime.Date%2A> 다음 문 에서처럼 속성:  
  
```  
DateTime.MinValue.Date  
DateTime.MaxValue.Date  
DateTime.Now.Date   
dateVariable.Date  
```  
  
 <xref:System.DateTime.Kind%2A> 의 속성을 `dateStart` 및 `dateEnd` 매개 변수 여야 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.  
  
 값을 `daylightDelta` 매개 변수의 범위는-14에서 14입니다. 합계를 `daylightDelta` 매개 변수 및 `baseUtcOffset` 에 대 한 호출에 사용 되는 매개 변수를 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 메서드 사이의-14에서 14로 또는 <xref:System.InvalidTimeZoneException> throw 됩니다.  
  
> [!NOTE]
>  `daylightDelta` 매개 변수는 표준 시간대의 표준 시간과 일광 절약 시간 간의 차이 정의 합니다. 표준 시간대의 표준 시간 오프셋을 utc (협정 세계시)를 정의 하는 것이 아닙니다. <xref:System.TimeZoneInfo> 클래스가이 오프셋이 UTC 표준 시간대의 수명 내내 상수 있다고 가정 합니다. 조정 규칙을 응용 프로그램에서 발생 시 키 지는 UTC 표준 시간대 오프셋 변경에 맞게 사용 해야 합니다는 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 시간대를 만들고 새 사용자 지정 하는 방법입니다.  
  
   
  
## Examples  
 다음 예제는 대체 중앙 표준 시간대를 만들고이 1976 1986, 1987-2006 년과 2007 기간 이상 세 가지 조정 규칙을 정의 합니다. 이러한 규칙은 제네릭에 추가할 <xref:System.Collections.Generic.List%601> 요소가 다음 복사할 개체를 <xref:System.TimeZoneInfo.AdjustmentRule> 배열입니다. 이 배열에 대 한 호출에 사용 됩니다는 <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%29?displayProperty=nameWithType> 메서드.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#1)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dateStart" /> 또는 <paramref name="dateEnd" /> 매개 변수의 <see cref="P:System.DateTime.Kind" /> 속성이 <see cref="F:System.DateTimeKind.Unspecified" />와 같지 않습니다.  
  
또는 
<paramref name="daylightTransitionStart" /> 매개 변수가 <paramref name="daylightTransitionEnd" /> 매개 변수와 같습니다.  
  
또는 
<paramref name="dateStart" /> 또는 <paramref name="dateEnd" /> 매개 변수가 시간 값을 포함합니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dateEnd" />가 <paramref name="dateStart" />보다 이전인 경우  
  
또는 
 <paramref name="daylightDelta" />가 -14보다 작거나 14보다 큽니다.  
  
또는 
<paramref name="daylightDelta" /> 매개 변수의 <see cref="P:System.TimeSpan.Milliseconds" /> 속성이 0과 같지 않습니다.  
  
또는 
<paramref name="daylightDelta" /> 매개 변수의 <see cref="P:System.TimeSpan.Ticks" /> 속성이 전체 시간(초)과 같지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="DateEnd">
      <MemberSignature Language="C#" Value="public DateTime DateEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateEnd As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateEnd { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateEnd : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>조정 규칙이 더 이상 유효하지 않게 되는 날짜를 가져옵니다.</summary>
        <value>조정 규칙의 종료 날짜를 나타내는 <see cref="T:System.DateTime" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> 속성이 시간 부분이 없는 날짜 값입니다.  
  
 현재 조정 규칙의 종료 날짜는 일반적으로 알 수 없는 때문에 할당할 수 있습니다 `DateTime.MaxValue.Date` 에 <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> 속성 사용자 지정 조정 규칙을 만들 때.  
  
> [!IMPORTANT]
>  그렇지 않은 경우 작업을 수행 하는 것이 유리 없는 동안 표준 시간대에서 표준 시간 간격 내에 발생 하도록 조정 규칙의 종료 날짜를 정의 해야 합니다. 이렇게 중요 한 이유가 없는는 표준 시간대에서 일광 절약 시간을 따르는 시간 간격 내에 발생 하도록 조정 규칙의 종료 날짜를 정의 해야 합니다. 예를 들어, 일광 절약 시간에서 표준 시간대의 전환을 년 3 월의 세 번째 일요일에 발생 하는 경우 년 10 월의 첫 번째 일요일에 전환이 해당 일광 절약 시간 조정 규칙의 유효한 종료 날짜 안 특정 12 월 31 일 연도, 해당 날짜 일광 절약 시간의 기간 내 발생 하기 때문입니다.  
  
 기본적으로 Windows XP의 레지스트리를 단일 조정 규칙 정의 된 종료 날짜 년 12 월 31 일 금요일 9999 (값 `DateTime.MaxValue.Date`), 각 표준 시간대에 대 한 합니다. 미국에서 표준 시간대에 대 한 Windows Vista의 레지스트리 두 조정 규칙을 정의합니다.  
  
-   월요일, 1 월 1 일 0001 년 2006 년 12 월 31 일 일요일입니다.  
  
-   월요일, 오전 2007 년 1 월 12 월 31 일 금요일 9999입니다.  
  
 이 레지스트리에 저장 된 표준 시간대 조정 규칙 현재 표준 시간대 관련 작업을 수행 하는 데 유용 하지만 사용할 수 없습니다 안정적으로 기록 표준 시간대 정보를 검색 하는 것에 대 한 것을 의미 합니다. 기록 표준 시간대 인식 응용 프로그램에서 사용할 수 있는 여러 조정 규칙을 사용 하 여 사용자 지정 시간대를 정의 하는 방법에 대 한 내용은 [방법: 표준 시간대 조정 규칙을 사용 하 여 만들기](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 로컬 컴퓨터의 시스템 레지스트리에서 시작을 포함 하 여 날짜와 종료 날짜의 조정 규칙의 정의 된 표준 시간대의 모든 정보를 표시 합니다.  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateStart">
      <MemberSignature Language="C#" Value="public DateTime DateStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateStart As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateStart { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateStart : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>조정 규칙이 적용되는 날짜를 가져옵니다.</summary>
        <value>조정 규칙이 적용되는 시기를 나타내는 <see cref="T:System.DateTime" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A> 속성이 시간 부분이 없는 날짜 값입니다. 특정 조정 규칙을 적용 되는 날짜를 정의 합니다.  이것이 적용 (일반적으로 하나 전환할 일광 절약 시간제를 표준 시간으로 하나의 전환을 정의 됨)는 전환 집합을 이동 하는 날짜입니다. 11 월 첫째 주 일요일의 표준 시간으로 다시 전환 하 고 3 월의 두 번째 일요일에 일광 절약 시간제 전환을 제공 조정 규칙은 2017 년 1 월 1 일 적용 파일로 이동 예를 들어 하는 합니다. 조정 규칙의 시작 날짜를 첫 번째 전환의 날짜에 연결 되지 않은 참고 합니다.  
  
 할당할 수 있습니다 `DateTime.MinValue.Date` 에 <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> 하므로 기록 표준 시간대 정보를 사용 하는 표준 시간대 인식 응용 프로그램에서 사용 하기 위해 사용자 지정 조정 규칙을 만들 때 속성에 없습니다.  
  
> [!IMPORTANT]
>  그렇지 않은 경우 작업을 수행 하는 것이 유리 없는 동안 표준 시간대에서 표준 시간 간격 내에 발생 하도록 조정 규칙의 시작 날짜를 정의 해야 합니다. 이렇게 중요 한 이유가 없는는 표준 시간대에서 일광 절약 시간을 따르는 시간 간격 내에 발생 하도록 조정 규칙의 시작 날짜를 정의 해야 합니다. 예를 들어, 일광 절약 시간에서 표준 시간대의 전환을 년 3 월의 세 번째 일요일에 발생 하는 경우 년 10 월의 첫 번째 일요일에 전환이 해당 일광 절약 시간 조정 규칙의 유효 시작 날짜를 안 특정의 1 월 1 일 연도, 해당 날짜 일광 절약 시간의 기간 내 발생 하기 때문입니다.  
  
 기본적으로 Windows XP의 레지스트리를 단일 조정 규칙 정의 시작 날짜를 1 월 1 일 월요일 0001 (값 `DateTime.MinValue.Date`), 각 표준 시간대에 대 한 합니다. 미국에서 표준 시간대에 대 한 Windows Vista의 레지스트리 두 조정 규칙을 정의합니다.  
  
-   월요일, 1 월 1 일 0001 년 2006 년 12 월 31 일 일요일입니다.  
  
-   월요일, 오전 2007 년 1 월 12 월 31 일 금요일 9999입니다.  
  
 이 레지스트리에 저장 된 표준 시간대 조정 규칙 현재 표준 시간대 관련 작업을 수행 하는 데 유용 하지만 사용할 수 없습니다 안정적으로 기록 표준 시간대 정보를 검색 하는 것에 대 한 것을 의미 합니다. 기록 표준 시간대 인식 응용 프로그램에서 사용할 수 있는 여러 조정 규칙을 사용 하 여 사용자 지정 시간대를 정의 하는 방법에 대 한 내용은 [방법: 표준 시간대 조정 규칙을 사용 하 여 만들기](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 로컬 컴퓨터의 시스템 레지스트리에서 시작을 포함 하 여 날짜와 종료 날짜의 조정 규칙의 정의 된 표준 시간대의 모든 정보를 표시 합니다.  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightDelta">
      <MemberSignature Language="C#" Value="public TimeSpan DaylightDelta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DaylightDelta" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightDelta As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DaylightDelta { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightDelta : TimeSpan" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표준 시간대의 일광 절약 시간을 구성하는 데 필요한 시간을 가져옵니다. 이 시간은 UTC(협정 세계시)에 대한 해당 표준 시간대의 오프셋에 추가됩니다.</summary>
        <value>조정 규칙의 결과로 변경되는 표준 시간에 추가할 시간을 나타내는 <see cref="T:System.TimeSpan" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 수식은 시간대의 일광 절약 시간을 정의합니다.  
  
```  
TimeZoneTime = BaseUtcOffset + DaylightDelta + UtcTime  
```  
  
 값을 <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> 속성 범위는 14 시간에서-14 시간입니다.  
  
> [!NOTE]
>  <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> 속성 시간대의 표준 시간과 일광 절약 시간 간의 차이 측정 합니다. 이 적용 되지 않습니다 표준 시간대의 오프셋의 변경 내용에 utc (협정 세계시). 표준 시간대를 UTC에서 표준 시간 오프셋과 바뀌었습니다을 나타내기 위해 호출 해야 합니다는 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 새 표준 시간대를 만드는 방법.  
  
 가장 일반적인 값은 <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> 속성이 1.0 시간입니다. 시간대의 오프셋이 utc (협정 세계시) 1 씩 증가 하는 일광 절약 시간 조정 규칙을 적용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionEnd">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionEnd As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionEnd { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionEnd : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>일광 절약 시간을 다시 표준 시간으로 전환하는 연간 전환에 대한 정보를 가져옵니다.</summary>
        <value>일광 절약 시간을 표준 시간대의 표준 시간으로 전환하는 연간 전환을 정의하는 <see cref="T:System.TimeZoneInfo.TransitionTime" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.TimeZoneInfo.TransitionTime> 에서 반환 된 개체는 <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> 속성은 고정 날짜 규칙 또는 표준 시간으로 반환에 대 한 부동 날짜 규칙을 정의 합니다. 고정 날짜 규칙을 월, 일 및 전환이 발생 한 시간을 제공 합니다. 부동 날짜 규칙을 월, 주, 요일, 일 및 전환이 발생 한 시간을 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionStart">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionStart As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionStart { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionStart : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>표준 시간에서 일광 절약 시간으로의 연간 전환에 대한 정보를 가져옵니다.</summary>
        <value>표준 시간대의 표준 시간에서 일광 절약 시간으로의 연간 전환을 정의하는 <see cref="T:System.TimeZoneInfo.TransitionTime" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.TimeZoneInfo.TransitionTime> 에서 반환 된 개체는 <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> 속성 일광 절약 시간으로 고정 날짜 규칙 또는 전환에 대 한 부동 날짜 규칙을 정의 합니다. 고정 날짜 규칙을 월, 일 및 전환이 발생 한 시간을 제공 합니다. 부동 날짜 규칙을 월, 주, 요일, 일 및 전환이 발생 한 시간을 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo.AdjustmentRule other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.TimeZoneInfo/AdjustmentRule other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo.AdjustmentRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo::AdjustmentRule ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeZoneInfo.AdjustmentRule -&gt; bool" Usage="adjustmentRule.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo+AdjustmentRule" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="other">현재 개체와 비교할 개체입니다.</param>
        <summary>현재 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 개체가 두 번째 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 개체와 같은지 확인합니다.</summary>
        <returns>두 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 개체의 값이 같으면 <see langword="true" />, 같지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 개의 지 여부를 결정 <xref:System.TimeZoneInfo.AdjustmentRule> 개체가 같은지를 <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29> 메서드는 각 개체의 멤버 값을 비교 합니다. 두 조정 규칙은 동일한 델타 개시 날짜와 동일한 값을 가질 경우 동일 합니다 <xref:System.TimeZoneInfo.TransitionTime> 반환한 개체는 <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> 및 <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29?displayProperty=nameWithType> 중부 표준시 조정 규칙 캐나다 및 멕시코 표준시와 비교 하는 방법입니다.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#2)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#2)]  
  
 이 코드에는 콘솔에 다음 출력이 표시 됩니다.  
  
```  
Comparing Central Standard Time rule for 1/1/0001 to 12/31/9999 with:  
   Canada Central Standard Time has no adjustment rules.  
   Mexican CST for 1/1/0001 to 12/31/9999: Equal  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="adjustmentRule.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>해시 테이블과 같은 데이터 구조 및 해싱 알고리즘을 위한 해시 함수 역할을 합니다.</summary>
        <returns>현재 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 개체에 대한 해시 코드의 역할을 하는 32비트 부호 있는 정수입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sender">콜백을 시작한 개체입니다. 이 매개 변수의 기능은 현재 구현되지 않았습니다.</param>
        <summary><see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 개체의 deserialization이 완료될 때 실행됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info">데이터로 채울 개체입니다.</param>
        <param name="context">이 serialization의 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
        <summary>이 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 채웁니다.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
  </Members>
</Type>