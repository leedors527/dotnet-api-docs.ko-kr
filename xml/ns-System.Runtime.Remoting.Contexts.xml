<Namespace Name="System.Runtime.Remoting.Contexts">
  <Metadata><Meta Name="ms.openlocfilehash" Value="40aa51c114d4ab3b2669d4d437aa854fb9a8f8c4" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30739327" /></Metadata><Docs>
    <summary><see cref="N:System.Runtime.Remoting.Contexts" /> 네임스페이스에는 모든 개체가 상주하는 컨텍스트를 정의하는 개체가 포함되어 있습니다. 컨텍스트는 해당 컨텍스트에 포함된 개체의 환경을 정의하는, 순서가 있는 속성 시퀀스입니다. 컨텍스트는 동기화, 트랜잭션, JIT(just-in-time) 활성화, 보안 등과 같은 자동 서비스를 필요로 하는 개체를 활성화하는 프로세스 동안 만들어지며, 컨텍스트에는 여러 개의 개체가 존재할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 개체를 만들 때마다 the.NET Framework 호환 컨텍스트를 찾거나 개체에 대 한 새 컨텍스트를 만듭니다. 개체를 컨텍스트에 배치, 후 유지의 수명에 대 한 합니다. 컨텍스트에 바인딩되는 클래스를 컨텍스트 바인딩 클래스라고 합니다. 다른 컨텍스트에서 액세스할 때 이러한 컨텍스트 바인딩 클래스의 프록시를 사용 하 여 직접 참조 됩니다. 다른 컨텍스트에서 개체 컨텍스트에서 개체에서 호출 컨텍스트 프록시를 통과 및 결합 된 컨텍스트 속성으로 구현 하는 정책 영향을 받을 수 있습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>