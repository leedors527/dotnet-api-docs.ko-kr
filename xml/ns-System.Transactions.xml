<Namespace Name="System.Transactions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27e12b25390a72364c77196a34eae502971d0d2b" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59353280" /></Metadata><Docs>
    <summary><see cref="N:System.Transactions" /> 네임스페이스에는 트랜잭션 응용 프로그램과 리소스 관리자를 작성하는 데 사용할 수 있는 클래스가 포함되어 있습니다. 특히 참가자가 하나 이상인 트랜잭션(로컬 또는 분산)을 만들고 참가할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 `System.Transactions` 인프라는 트랜잭션 프로그래밍 간단 하 고 효율적인 플랫폼 전체 SQL Server, ADO.NET, MSMQ, 및는 MSDTC Microsoft Distributed Transaction Coordinator ()에서 시작 된 트랜잭션을 지원 합니다. 모두 명시적 프로그래밍 모델을 기반으로 제공 합니다 <xref:System.Transactions.Transaction> 사용 하는 암시적 프로그래밍 모델 뿐만 아니라 클래스는 <xref:System.Transactions.TransactionScope> 트랜잭션을 관리 하는 자동으로 인프라에서 클래스입니다. 개발에 대 한 암시적 쉽게 모델을 사용 하는 것이 좋습니다. 시작 하려면 참조는 [구현 하는 암시적 트랜잭션을 사용 하 여 트랜잭션 범위](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)) 항목입니다. 트랜잭션 응용 프로그램 작성에 대 한 자세한 내용은 참조 하세요. [쓰기는 트랜잭션 응용 프로그램](~/docs/framework/data/transactions/writing-a-transactional-application.md)합니다.
  
 `System.Transactions` 또한 리소스 관리자를 구현 하기 위한 형식을 제공 합니다. 기본 트랜잭션 관리자는 `System.Transactions` 인프라를 사용 하면 일시적인 리소스나 하나의 지속적인 리소스 커밋 또는 롤백 효율적으로 인 리스트 먼 트를 합니다. 리소스 관리자 구현에 대 한 자세한 내용은 참조 하세요. [는 리소스 관리자 구현](https://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e)합니다.  
  
 트랜잭션 관리자는 추가 지속적인 리소스 관리자를 트랜잭션과 트랜잭션에 참여 하는 경우 DTC와 같은 디스크 기반 트랜잭션 관리자를 통해 조정 하 여 로컬 트랜잭션이 분산된 트랜잭션으로 투명 하 게도 에스컬레이션 합니다. `System.Transactions` 인프라에서 성능을 향상시키는 두 가지 주요 방법은 다음과 같습니다.  
  
-   즉 동적 에스컬레이션 된 `System.Transactions` 인프라에서 msdtc만 트랜잭션이 실제로 필요할 때. 이 영역에서 자세히 설명 합니다 [트랜잭션 관리 에스컬레이션](https://msdn.microsoft.com/library/5b87ae58-8ccf-4b9b-9715-41e4aade89b7) 항목입니다.  
  
-   데이터베이스 등의 리소스가 트랜잭션에 참가한 유일한 엔터티인 경우 트랜잭션을 소유할 수 있게 해 주는 승격 가능한 인리스트먼트입니다. 나중에 필요한 경우는 `System.Transactions` 인프라 트랜잭션 MSDTC로의 관리를 에스컬레이션할 수 있습니다. 이 방법을 사용하면 MSDTC를 사용할 가능성이 더 줄어듭니다. 이 영역에서 자세히 설명 합니다 [최적화를 사용 하 여 단일 단계 커밋 및 승격 가능한 단일 단계 알림을](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms229980(v=vs.85)) 항목입니다.  
  
 `System.Transactions` 노출 하는 리소스의 형식에 대 한 액세스를 제한 하는 세 가지 신뢰 수준을 정의 합니다. 특히 합니다 *System.Transactions* 으로 표시 된 대로 어셈블리를 부분적으로 신뢰할 수 있는 코드에서 호출할 수 있습니다는 `AllowPartiallyTrustedCallers` 특성 (APTCA). 이 특성은 각 형식의 공개적으로 액세스 가능한 각 메서드에 자동으로 배치될 <xref:System.Security.Permissions.SecurityAction.LinkDemand> 권한 집합에 대한 암시적 `FullTrust`를 제거합니다. 그러나 일부 형식과 멤버에는 더 강력한 권한이 필요합니다.  
  
 다음은 형식의 목록 및 부분적으로에서 호출할 수 없는 멤버는 신뢰할 수 있는 코드 다음 선언적 보안 특성으로 데코레이팅되기 때문에:  
  
 `PermissionSetAttribute(SecurityAction.LinkDemand, Name := "FullTrust")`  
  
 System.Transactions.Transaction.EnlistDurable  
  
 System.Transactions.Transaction.EnlistPromotableSinglePhase  
  
 System.Transactions.TransactionInterop  
  
 System.Transactions.TransactionManager.DistributedTransactionStarted  
  
 System.Transactions.TransactionManager.HostCurrentTransactionCallback  
  
 System.Transactions.TransactionManager.Reenlist  
  
 System.Transactions.TransactionManager.RecoveryComplete  
  
 System.Transactions.TransactionScope.TransactionScope (System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)  
  
 M:System.Transactions.TransactionScope.TransactionScope(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)  
  
 다양 한에 대 한 자세한 내용은 신뢰 수준, 참조 [리소스 액세스의 보안 신뢰 수준](https://msdn.microsoft.com/library/8e45acbc-0d81-4f64-9da7-8f766aebff51)합니다.  
  
 핵심 개발 기술 \ 데이터 액세스 \ 트랜잭션 처리 \  
  
 사용 하는 방법에 대 한 자세한 내용은 합니다 `System.Transactions` 네임 스페이스 개념 설명서를 참조할 수 있습니다 [트랜잭션 처리](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/w97s6fw4(v=vs.85))"핵심 개발 기술 \ 데이터 액세스 처리아래에있는\\"문서의 섹션입니다. 특히, 다음 항목에서 자세한 정보를 찾을 수 있습니다.  
  
 [System.Transactions에서 제공 하는 기능](https://msdn.microsoft.com/library/99cc5ce0-b7fd-4d78-a553-a3dd3f17ed45)  
  
 [리소스 관리자 구현](https://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e)  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>