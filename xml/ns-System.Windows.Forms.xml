<Namespace Name="System.Windows.Forms">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de3d7b337699f794b1d27959727821d8e228cf48" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="30737227" /></Metadata><Docs>
    <summary><see cref="N:System.Windows.Forms" /> 네임스페이스에는 Microsoft Windows 운영 체제의 풍부한 사용자 인터페이스 기능을 활용하는 Windows 기반 응용 프로그램을 만들 수 있는 클래스가 포함되어 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서의 클래스를 보여 줍니다. <xref:System.Windows.Forms> 네임 스페이스 범주로 그룹화 합니다.  
  
|범주 클래스|설명|  
|--------------------|-------------|  
|사용자 정의 컨트롤 및 폼 컨트롤|내에서 대부분의 클래스는 <xref:System.Windows.Forms> 네임 스페이스에서 파생 된 <xref:System.Windows.Forms.Control> 클래스입니다. 합니다 <xref:System.Windows.Forms.Control> 에 표시 되는 모든 컨트롤에 대 한 기본 기능을 제공 하는 클래스는 <xref:System.Windows.Forms.Form>합니다. <xref:System.Windows.Forms.Form> 클래스는 응용 프로그램 내에서 창을 나타냅니다. 이 대화 상자, 모덜리스 windows 및 인터페이스 MDI (다중 문서) 클라이언트 및 부모 창을 포함합니다. 파생 하 여 사용자 지정 컨트롤을 만들 수도 있습니다는 <xref:System.Windows.Forms.UserControl> 클래스입니다.|  
|-메뉴 및 도구 모음|Windows Forms에는 다양 한 최신 모양 및 동작 (모양 및 느낌)을 사용 하 여 사용자 고유의 사용자 지정 툴바와 메뉴를 만드는 클래스 집합을 포함 합니다. <xref:System.Windows.Forms.ToolStrip>를 <xref:System.Windows.Forms.MenuStrip>, <xref:System.Windows.Forms.ContextMenuStrip>, 및 <xref:System.Windows.Forms.StatusStrip> 각각 도구 모음, 메뉴 모음, 상황에 맞는 메뉴 및 상태 표시줄을 만드는 데 사용할 수 있습니다.|  
|-컨트롤|<xref:System.Windows.Forms> 네임 스페이스는 다양 한 기능이 풍부한 사용자 인터페이스를 만드는 데 사용할 수 있는 컨트롤 클래스를 제공 합니다. 일부 컨트롤은 같은 애플리케이션에서 데이터 항목에 대 한 설계 되었습니다 <xref:System.Windows.Forms.TextBox> 고 <xref:System.Windows.Forms.ComboBox> 컨트롤입니다. 다른 컨트롤 등의 애플리케이션 데이터를 표시 <xref:System.Windows.Forms.Label> 고 <xref:System.Windows.Forms.ListView>입니다. 또한 네임 스페이스와 같은 애플리케이션 내에서 명령을 호출 하는 것에 대 한 컨트롤을 제공 <xref:System.Windows.Forms.Button>합니다. 합니다 <xref:System.Windows.Forms.WebBrowser> 컨트롤 및 HTML 클래스와 같은 관리 <xref:System.Windows.Forms.HtmlDocument>, 표시 하 고 관리 되는 Windows Forms 애플리케이션 내에서 HTML 페이지를 조작 합니다. <xref:System.Windows.Forms.MaskedTextBox> 컨트롤은 자동으로 마스크를 정의할 수 있는 고급 데이터 항목 컨트롤을 받거나 사용자 입력을 거부 합니다. 또한 사용할 수 있습니다는 <xref:System.Windows.Forms.PropertyGrid> 컨트롤의 디자이너에 게 표시 되는 속성을 표시 하는 사용자 고유의 Windows Forms 디자이너를 만들 수 있습니다.|  
|레이아웃|예: 양식 화면에서 컨트롤의 레이아웃을 제어 하거나 컨트롤 도움을 Windows Forms의 몇 가지 중요 한 클래스. <xref:System.Windows.Forms.FlowLayoutPanel> 직렬 방식으로 포함 된 모든 컨트롤을 배치 하 고 <xref:System.Windows.Forms.TableLayoutPanel> 셀 및 행으로 고정된 된 표 컨트롤에 대 한을 정의할 수 있습니다. <xref:System.Windows.Forms.SplitContainer> 표시 화면에 두 개 이상 조정 가능한 부분으로 나눕니다.|  
|데이터 및 데이터 바인딩|Windows Forms 데이터 바인딩 데이터베이스 및 XML 파일과 같은 원본에 대 한 다양 한 아키텍처를 정의 합니다. <xref:System.Windows.Forms.DataGridView> 컨트롤 데이터를 표시 하기 위해 사용자 지정할 수 있는 테이블을 제공 하 고 셀, 행, 열 및 테두리를 사용자 지정할 수 있습니다. <xref:System.Windows.Forms.BindingNavigator> 컨트롤은 이동 하 고 폼에서 데이터로 작업 하는 표준화 된 방법을 나타냅니다. <xref:System.Windows.Forms.BindingNavigator> 자주 이룹니다는 <xref:System.Windows.Forms.BindingSource> 컨트롤을 폼에 데이터 레코드를 탐색 하 고 상호 작용 합니다.|  
|-구성 요소|컨트롤 외에 <xref:System.Windows.Forms> 네임 스페이스에서 파생 되지 않은 다른 클래스를 제공 합니다 <xref:System.Windows.Forms.Control> 클래스 하지만 여전히 Windows 기반 애플리케이션에 시각적 기능을 제공 합니다. 와 같은 일부 클래스 <xref:System.Windows.Forms.ToolTip> 고 <xref:System.Windows.Forms.ErrorProvider>, 기능을 확장 또는 사용자에 게 정보를 제공 합니다. 사용 하 여는 <xref:System.Windows.Forms.Help> 고 <xref:System.Windows.Forms.HelpProvider> 클래스를 애플리케이션의 사용자에 게 도움말 정보를 표시할 수 있습니다.|  
|-일반 대화 상자|Windows 열기 및 파일을 저장, 글꼴 또는 텍스트 색, 조작 또는 인쇄 등의 작업을 수행할 때 일관 된 사용자 인터페이스를 제공 하는 데 사용할 수 있는 몇 가지 일반적인 대화 상자를 제공 합니다. 합니다 <xref:System.Windows.Forms.OpenFileDialog> 및 <xref:System.Windows.Forms.SaveFileDialog> 클래스 찾아을 열거나 저장할 파일의 이름을 입력 하 여 사용자 수 있는 대화 상자를 표시 하는 기능을 제공 합니다. 합니다 <xref:System.Windows.Forms.FontDialog> 클래스의 요소를 변경 하려면 대화 상자를 표시 합니다 <xref:System.Drawing.Font> 애플리케이션에서 사용 합니다. 합니다 <xref:System.Windows.Forms.PageSetupDialog>, <xref:System.Windows.Forms.PrintPreviewDialog>, 및 <xref:System.Windows.Forms.PrintDialog> 클래스 사용자가 문서를 인쇄의 여러 측면을 제어할 수 있는 대화 상자를 표시 합니다. Windows 기반 애플리케이션에서 인쇄 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Drawing.Printing> 네임 스페이스입니다. 일반 대화 상자, 외에 <xref:System.Windows.Forms> 네임 스페이스를 제공는 <xref:System.Windows.Forms.MessageBox> 표시 하 고 사용자 로부터 데이터를 검색할 수 있는 메시지 상자를 표시 하기 위한 클래스입니다.|  
  
 내에서 여러 클래스를 가지는 <xref:System.Windows.Forms> 이전 요약에 설명 된 클래스에 대 한 지원을 제공 하는 네임 스페이스입니다. 지원 클래스의 예로 열거형, 이벤트 인수 클래스 및 컨트롤 및 구성 요소 내에서 이벤트가 사용 되는 대리자를 들 수 있습니다.  
  
> [!CAUTION]
>  Windows Forms 네임 스페이스 내의 클래스는 Windows 서비스 내에서 지원 되지 않습니다. 서비스에서 이러한 클래스를 사용 하는 동안 저하 서비스 성능 및 런타임 예외와 같은 예기치 않은 문제가 발생할 수 있습니다.  
>   
>  .NET Framework 버전 1.1 사용 하는 경우.NET Framework 1.0을 설정 해야 합니다 Windows XP 비주얼 스타일을 지 원하는 Windows Forms 애플리케이션 설정 했는지 확인 합니다 `FlatStyle` 속성을 컨트롤의 <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType> 인 매니페스트를 포함 하 고 프로그램 실행 파일입니다. 매니페스트는 실행 파일과 동일한 디렉터리에 있는 별도 파일 또는 애플리케이션 실행 파일 내에 리소스로 포함 된 XML 파일. 매니페스트의 예에 대 한 예제 섹션을 참조 합니다 <xref:System.Windows.Forms.FlatStyle> 열거형입니다. Windows XP에서 사용할 수 있는 비주얼 스타일을 사용 하는 방법에 대 한 자세한 내용은 "를 사용 하 여 Windows XP 시각적 스타일에서 the 사용자 인터페이스 디자인 및 개발" MSDN 라이브러리의을 참조 하세요. 기본적으로.NET Framework 버전 1.1, 1.2 및 2.0에 대 한 비주얼 스타일을 사용 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>